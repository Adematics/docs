(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{432:function(t,e,a){"use strict";a.r(e);var s=a(25),r=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"execution"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#execution"}},[t._v("#")]),t._v(" Execution")]),t._v(" "),a("p",[t._v("An execution is a flow that is currently processing or have already finished doing things. It is a task set processing together to achieve the flow goal that is to be ran successfully.")]),t._v(" "),a("h2",{attrs:{id:"task-run"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#task-run"}},[t._v("#")]),t._v(" Task Run")]),t._v(" "),a("p",[t._v("A task run is a task that was executed and associated to its operationnal data like execution_id, state, start_date, end_date, ...")]),t._v(" "),a("h2",{attrs:{id:"attempts"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#attempts"}},[t._v("#")]),t._v(" Attempts")]),t._v(" "),a("p",[t._v("Each task run will be produce 1 or more attempt. Most common task run will have only 1 attempt, but you can add some "),a("a",{attrs:{href:"../developer-guide/retries"}},[t._v("Retries")]),t._v(" that will generate new attempts for every failed taskrun.")]),t._v(" "),a("h2",{attrs:{id:"outputs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#outputs"}},[t._v("#")]),t._v(" Outputs")]),t._v(" "),a("p",[t._v("Each task can generate some output data that can be reused in other tasks of the current execution.")]),t._v(" "),a("h2",{attrs:{id:"metrics"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#metrics"}},[t._v("#")]),t._v(" Metrics")]),t._v(" "),a("p",[t._v("Each task can generate some metrics data that be useful to understand what the current task are doing."),a("br"),t._v("\nThis can be for example "),a("code",[t._v("file.size")]),t._v(", "),a("code",[t._v("row.count")]),t._v(", ...")]),t._v(" "),a("p",[t._v("There is 2 kind of metrics :")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("Duration")])]),t._v(" "),a("li",[a("code",[t._v("Counter")])])]),t._v(" "),a("h2",{attrs:{id:"state"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#state"}},[t._v("#")]),t._v(" State")]),t._v(" "),a("p",[t._v("Define all the state that a Task Run or an Execution can have.")]),t._v(" "),a("p",[t._v("The Execution or Task Run can have these state :")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("CREATED")]),t._v(": not handle internally, waiting to be treated. Mostly the execution is in a queue.")]),t._v(" "),a("li",[a("code",[t._v("RUNNING")]),t._v(": the tasks are running right now.")]),t._v(" "),a("li",[a("code",[t._v("SUCCESS")]),t._v(": all the task are done without any failure.")]),t._v(" "),a("li",[a("code",[t._v("FAILED")]),t._v(": execution have any unintended behaviour that cause the execution to failed.")]),t._v(" "),a("li",[a("code",[t._v("KILLING")]),t._v(": execution was asked to be killed and waiting tasks were killed.")]),t._v(" "),a("li",[a("code",[t._v("KILLED")]),t._v(": execution was killed, and no more task will be done.")]),t._v(" "),a("li",[a("code",[t._v("RESTARTED")]),t._v(": this status is a transitive status that mean "),a("code",[t._v("CREATED")]),t._v(", only for keep track of the restart")])])])}),[],!1,null,null,null);e.default=r.exports}}]);