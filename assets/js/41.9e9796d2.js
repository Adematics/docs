(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{663:function(t,a,s){t.exports=s.p+"assets/img/inputs.62a412ff.jpg"},797:function(t,a,s){"use strict";s.r(a);var e=s(19),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"inputs"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#inputs"}},[t._v("#")]),t._v(" Inputs")]),t._v(" "),e("p",[t._v("A flow can be parameterized using inputs. Flow inputs will be available in variables inside the execution context and can be used during the flow execution to customize its tasks properties.")]),t._v(" "),e("p",[t._v("A good example of the usage of an input is when an identifier is needed (ex: storeId, paymentId) to define the path of an uploaded file.")]),t._v(" "),e("p",[t._v("Flow inputs can be seen in the "),e("strong",[t._v("Overview")]),t._v(" tab of the "),e("strong",[t._v("Execution")]),t._v(" page.")]),t._v(" "),e("h2",{attrs:{id:"declaring-inputs"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#declaring-inputs"}},[t._v("#")]),t._v(" Declaring inputs")]),t._v(" "),e("p",[t._v("You can declare as many inputs as necessary for any flow. Inputs can be "),e("strong",[t._v("required")]),t._v(" or "),e("strong",[t._v("not")]),t._v("."),e("br"),t._v("\nIf an input is required, the flow cannot start if the input is not provided during the creation of the execution.")]),t._v(" "),e("p",[t._v("Every input will be parsed during the creation of the execution, and any invalid inputs will deny the creation of the execution.")]),t._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),e("p",[t._v("If the execution is "),e("strong",[t._v("not created")]),t._v(" due to invalid or missing inputs, no execution will be found on the list fo executions.")])]),t._v(" "),e("p",[t._v("Examples:")]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" my"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("flow\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" io.kestra.docs\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("inputs")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" STRING\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" optional\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" STRING\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("required")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("false")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" int\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" INT\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" bool\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" BOOLEAN\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" float\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" FLOAT\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" instant\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" DATETIME\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" date\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" DATE\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" time\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" TIME\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" duration\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" DURATION\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" file\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" FILE\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" optionalFile\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" FILE\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" instantDefaults\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" DATETIME\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("defaults")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2013-08-09T14:19:00Z"')]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" json\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" JSON\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" uri\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" URI\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nested.string\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" STRING\n")])])]),e("h2",{attrs:{id:"input-types"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#input-types"}},[t._v("#")]),t._v(" Input types")]),t._v(" "),e("p",[t._v("Inputs can be of multiple types:")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("STRING")]),t._v(": No control is done (no parsing); it can be any string.")]),t._v(" "),e("li",[e("code",[t._v("INT")]),t._v(": Must be a valid integer (without any decimals).")]),t._v(" "),e("li",[e("code",[t._v("FLOAT")]),t._v(": Must be a valid float (with any decimals).")]),t._v(" "),e("li",[e("code",[t._v("BOOLEAN")]),t._v(": Must be "),e("code",[t._v("true")]),t._v(" or "),e("code",[t._v("false")]),t._v(" as strings.")]),t._v(" "),e("li",[e("code",[t._v("DATETIME")]),t._v(": Must be a valid full "),e("a",{attrs:{href:"https://en.wikipedia.org/wiki/ISO_8601",target:"_blank",rel:"noopener noreferrer"}},[t._v("ISO 8601"),e("OutboundLink")],1),t._v(" date and time with the timezone expressed in UTC from a text string such as "),e("code",[t._v("2007-12-03T10:15:30.00Z")]),t._v(".")]),t._v(" "),e("li",[e("code",[t._v("DATE")]),t._v(": Must be a valid full "),e("a",{attrs:{href:"https://en.wikipedia.org/wiki/ISO_8601",target:"_blank",rel:"noopener noreferrer"}},[t._v("ISO 8601"),e("OutboundLink")],1),t._v(" date without the timezone from a text string such as "),e("code",[t._v("2007-12-03")]),t._v(".")]),t._v(" "),e("li",[e("code",[t._v("TIME")]),t._v(": Must be a valid full "),e("a",{attrs:{href:"https://en.wikipedia.org/wiki/ISO_8601",target:"_blank",rel:"noopener noreferrer"}},[t._v("ISO 8601"),e("OutboundLink")],1),t._v(" time without the timezone from a text string such as "),e("code",[t._v("10:15:30")]),t._v(".")]),t._v(" "),e("li",[e("code",[t._v("DURATION")]),t._v(": Must be a valid full "),e("a",{attrs:{href:"https://en.wikipedia.org/wiki/ISO_8601",target:"_blank",rel:"noopener noreferrer"}},[t._v("ISO 8601"),e("OutboundLink")],1),t._v(" duration from a text string such as "),e("code",[t._v("PT5M6S")]),t._v(".")]),t._v(" "),e("li",[e("code",[t._v("FILE")]),t._v(": Must be a file sent as "),e("code",[t._v("Content-Type: multipart/form-data")]),t._v(" with "),e("code",[t._v('Content-Disposition: form-data; name="files"; filename="my-file"')]),t._v(", where "),e("code",[t._v("my-file")]),t._v(" is the name of the input.")]),t._v(" "),e("li",[e("code",[t._v("JSON")]),t._v(": Must be a valid JSON string and will be converted to typed form.")]),t._v(" "),e("li",[e("code",[t._v("URI")]),t._v(": Must be a valid URI and will be kept as a string.")])]),t._v(" "),e("p",[t._v("All the inputs of type "),e("code",[t._v("FILE")]),t._v(" will be automatically uploaded to Kestra's "),e("a",{attrs:{href:"../../architecture#the-internal-storage"}},[t._v("internal storage")]),t._v(" and available for all tasks. After upload, the input variable will contain a fully qualified URL of the form "),e("code",[t._v("kestra:///.../.../")]),t._v(" that will be automatically handled by Kestra and can be used as is by tasks.")]),t._v(" "),e("h2",{attrs:{id:"input-properties"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#input-properties"}},[t._v("#")]),t._v(" Input Properties")]),t._v(" "),e("p",[t._v("These are the properties available for all input types:")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("name")]),t._v(": The input name to be used with variables.")]),t._v(" "),e("li",[e("code",[t._v("required")]),t._v(": If the input is required. If required and no default value or no input is provided, the execution will not be created.")]),t._v(" "),e("li",[e("code",[t._v("defaults")]),t._v(": The default value if no input is provided. Must be a string.")]),t._v(" "),e("li",[e("code",[t._v("description")]),t._v(": A markdown description to document the input.")])]),t._v(" "),e("h2",{attrs:{id:"nested-inputs"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nested-inputs"}},[t._v("#")]),t._v(" Nested Inputs")]),t._v(" "),e("p",[t._v("If you use a "),e("code",[t._v(".")]),t._v(" inside the name of an input, the input will be nested.")]),t._v(" "),e("p",[t._v("For example, when you declare the input with the following:")]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[t._v("  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nested.string\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" STRING\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("required")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("false")]),t._v("\n")])])]),e("p",[t._v("You can reach it with: "),e("code",{pre:!0},[t._v("{{ inputs.nested.string }}")]),t._v(". This is a convenient way to handle strong typing on input (with validation) without using raw JSON that will not be validated.")]),t._v(" "),e("h2",{attrs:{id:"using-input-value-in-a-flow"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#using-input-value-in-a-flow"}},[t._v("#")]),t._v(" Using input value in a flow")]),t._v(" "),e("p",[t._v("Every input is available with dynamic variables such as: "),e("code",{pre:!0},[t._v("{{ inputs.NAME }}")]),t._v(" or "),e("code",{pre:!0},[t._v("{{ inputs[NAME] }}")]),t._v(".")]),t._v(" "),e("p",[t._v("For example, if you declare these inputs:")]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("inputs")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" my"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("file\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" FILE\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" my"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("value\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" STRING\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("required")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n")])])]),e("p",[t._v("You can use the value of the input "),e("code",[t._v("my-value")]),t._v(" inside dynamic task properties with "),e("code",{pre:!0},[t._v("{{ inputs['my-value'] }}")]),t._v(". See "),e("RouterLink",{attrs:{to:"/docs/developer-guide/variables/basic-usage.html"}},[t._v("variables basic usage")]),t._v(".")],1),t._v(" "),e("h2",{attrs:{id:"set-inputs-at-flow-execution"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#set-inputs-at-flow-execution"}},[t._v("#")]),t._v(" Set inputs at flow execution")]),t._v(" "),e("p",[t._v("When you execute a flow with some inputs, you must set all inputs (unless optional or with a default value) to be able to create the execution.")]),t._v(" "),e("p",[t._v("Let's take this example that defines multiple inputs:")]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" kestra"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("inputs\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" io.kestra.test\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("inputs")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" STRING\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" optional\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" STRING\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("required")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("false")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" int\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" INT\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" float\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" FLOAT\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" instant\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" DATETIME\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" file\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" FILE\n")])])]),e("h3",{attrs:{id:"set-inputs-from-the-web-ui"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#set-inputs-from-the-web-ui"}},[t._v("#")]),t._v(" Set inputs from the web UI")]),t._v(" "),e("p",[t._v("When creating an execution from the web UI, you must set the inputs in the generated form. Kestra's UI will generate a dedicated form based on your flow definition.")]),t._v(" "),e("p",[t._v("The input form for the inputs above looks like this:")]),t._v(" "),e("p"),e("figure",[e("img",{attrs:{src:s(663),alt:"Flow inputs",title:"Flow inputs"}}),e("figcaption",[t._v("Flow inputs")])]),e("p"),t._v(" "),e("p",[t._v("Once the inputs are set, you can trigger an execution of the flow. The inputs will be available as variables for the flow's tasks.")]),t._v(" "),e("h3",{attrs:{id:"set-inputs-with-curl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#set-inputs-with-curl"}},[t._v("#")]),t._v(" Set inputs with curl")]),t._v(" "),e("p",[t._v("To create an execution with these inputs using "),e("code",[t._v("curl")]),t._v(", you can use the following command:")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" -v "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://localhost:8080/api/v1/executions/trigger/io.kestra.test/kestra-inputs"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    -H "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Transfer-Encoding:chunked"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    -H "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Content-Type:multipart/form-data"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    -F "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("string")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a string"')]),t._v("  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    -F "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("optional")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"an optional string"')]),t._v("  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    -F "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("int")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    -F "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("float")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.255")]),t._v("  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    -F "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("instant")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2020-01-14T23:00:00.000Z"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    -F "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"files=@/tmp/128M.txt;filename=file"')]),t._v("\n")])])]),e("p",[t._v("All files must be sent as multipart form data named "),e("code",[t._v("files")]),t._v(" with a header "),e("code",[t._v("filename=my-file")]),t._v(" which will be the name of the input.")]),t._v(" "),e("h3",{attrs:{id:"set-inputs-programmatically-in-python"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#set-inputs-programmatically-in-python"}},[t._v("#")]),t._v(" Set inputs programmatically in Python")]),t._v(" "),e("p",[t._v("To create an execution with these inputs in Python, you can use the following script:")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" io\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" requests\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" requests_toolbelt"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("multipart"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("encoder "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" MultipartEncoder\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("open")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/tmp/example.txt"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'rb'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" fh"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  url "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string-interpolation"}},[e("span",{pre:!0,attrs:{class:"token string"}},[t._v('f"http://localhost:8080/api/v1/executions/trigger/io.kestra.test/kestra-inputs"')])]),t._v("\n  mp_encoder "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" MultipartEncoder"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fields"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"string"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a string"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"optional"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"an optional string"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"int"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"float"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.255")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"instant"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2020-01-14T23:00:00.000Z"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"files"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"file"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" fh"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"text/plain"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  result "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" requests"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("post"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      url"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      data"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("mp_encoder"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      headers"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Content-Type"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" mp_encoder"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("content_type"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);