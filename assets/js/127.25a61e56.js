(window.webpackJsonp=window.webpackJsonp||[]).push([[127],{864:function(t,e,s){"use strict";s.r(e);var a=s(13),r=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"math"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#math"}},[t._v("#")]),t._v(" Math")]),t._v(" "),s("p",[t._v("All the regular math operators are available for use. Order of operations applies.")]),t._v(" "),s("div",{staticClass:"language-twig extra-class"},[s("pre",{pre:!0,attrs:{class:"language-twig"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token ld"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{{")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token rd"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}}")])])]),t._v("\n")])])]),s("p",[t._v("The following operators are supported:")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("+")]),t._v(": Adds two numbers together (the operands are casted to numbers). "),s("code",{pre:!0},[t._v("{{"),s("br"),t._v("\n1 + 1 }}")]),t._v(" is 2.")]),t._v(" "),s("li",[s("code",[t._v("-")]),t._v(": Subtracts the second number from the first one. "),s("code",{pre:!0},[t._v("{{ 3 - 2 }}")]),t._v(" is 1.")]),t._v(" "),s("li",[s("code",[t._v("/")]),t._v(": Divides two numbers. The returned value will be a floating point number.  "),s("code",{pre:!0},[t._v("{{ 1 / 2 }}")]),t._v(" is "),s("code",{pre:!0},[t._v("{{ 0.5 }}")]),t._v(".")]),t._v(" "),s("li",[s("code",[t._v("%")]),t._v(": Calculates the remainder of an integer division. "),s("code",{pre:!0},[t._v("{{ 11 % 7 }}")]),t._v(" is 4.")]),t._v(" "),s("li",[s("code",[t._v("*")]),t._v(": Multiplies the left operand with the right one. "),s("code",{pre:!0},[t._v("{{ 2 * 2 }}")]),t._v(" would return 4.")])]),t._v(" "),s("p",[t._v("The result can be negated using the "),s("a",{attrs:{href:"./not"}},[t._v("not")]),t._v(" operator.")])])}),[],!1,null,null,null);e.default=r.exports}}]);