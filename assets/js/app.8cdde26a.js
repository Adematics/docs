(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[]]);!function(e){function t(t){for(var r,o,s=t[0],l=t[1],c=t[2],d=0,p=[];d<s.length;d++)o=s[d],Object.prototype.hasOwnProperty.call(a,o)&&a[o]&&p.push(a[o][0]),a[o]=0;for(r in l)Object.prototype.hasOwnProperty.call(l,r)&&(e[r]=l[r]);for(u&&u(t);p.length;)p.shift()();return i.push.apply(i,c||[]),n()}function n(){for(var e,t=0;t<i.length;t++){for(var n=i[t],r=!0,s=1;s<n.length;s++){var l=n[s];0!==a[l]&&(r=!1)}r&&(i.splice(t--,1),e=o(o.s=n[0]))}return e}var r={},a={1:0},i=[];function o(t){if(r[t])return r[t].exports;var n=r[t]={i:t,l:!1,exports:{}};return e[t].call(n.exports,n,n.exports,o),n.l=!0,n.exports}o.e=function(e){var t=[],n=a[e];if(0!==n)if(n)t.push(n[2]);else{var r=new Promise((function(t,r){n=a[e]=[t,r]}));t.push(n[2]=r);var i,s=document.createElement("script");s.charset="utf-8",s.timeout=120,o.nc&&s.setAttribute("nonce",o.nc),s.src=function(e){return o.p+"assets/js/"+({}[e]||e)+"."+{2:"a78a67a4",3:"f5b46fcd",4:"881a8dab",5:"a82316ea",6:"37a8291f",7:"94f4aee8",8:"cdc88e1f",9:"213f35e6",10:"237be53f",11:"ec748bfc",12:"a4fb949a",13:"96f65132",14:"09974fd0",15:"15f9b11e",16:"1c01f0b4",17:"12f51b4b",18:"1bebbe33",19:"d962853a",20:"2fea1745",21:"c31864fc",22:"651a176d",23:"3afc714c",24:"0751ecae",25:"ab715878",26:"e9ef6892",27:"5d475242",28:"389a9932",29:"e537b046",30:"61ba3b85",31:"0ae779ea",32:"0601a389",33:"1c0574b3",34:"18be79b2",35:"a15a3c04",36:"d6428e6b",37:"3cc3fc04",38:"23d87a83",39:"f93f2c55",40:"3b13bd21",41:"01affef8",42:"5b5aef13",43:"a0d7fc9f",44:"973e39a3",45:"9bf3f19a",46:"84ebf21f",47:"79145c1c",48:"1e427006",49:"2bdf411e",50:"78fa453f",51:"fb91c7e5",52:"674ab631",53:"1db5ff46",54:"2637270a",55:"dedd0ec9",56:"04184a1a",57:"17ea6fe8",58:"1733b022",59:"26a1642d",60:"f1b7873d",61:"de2ca226",62:"d6eb58fa",63:"7b6c04d3",64:"c781ff44",65:"edc5989e",66:"5bfe242f",67:"02115224",68:"8b70f5e5",69:"50beab71",70:"bce85e14",71:"92f65f3d",72:"9110a8e0",73:"136fa283",74:"35edf42b",75:"5ba540a9",76:"c3c4ab1d",77:"049de3a3",78:"b8ebf4fe",79:"0c26c6ef",80:"7a8a4033",81:"04bfd599",82:"73823575",83:"ee2200ca",84:"850720ff",85:"9c8289b9",86:"2ca8e782",87:"56948130",88:"b2665d78",89:"489860cb",90:"6007d7ec",91:"1563e78d",92:"7e3895a6",93:"bb4e3902",94:"5ea1b04e",95:"caa49334",96:"92c64ac6",97:"f0687155",98:"e6b3958b",99:"00297cae",100:"58842c12",101:"a53072f2",102:"364f5802",103:"1609bb2f",104:"3f3dd5b8",105:"3b64b2cf",106:"9e85c7ae",107:"c54940e0"}[e]+".js"}(e);var l=new Error;i=function(t){s.onerror=s.onload=null,clearTimeout(c);var n=a[e];if(0!==n){if(n){var r=t&&("load"===t.type?"missing":t.type),i=t&&t.target&&t.target.src;l.message="Loading chunk "+e+" failed.\n("+r+": "+i+")",l.name="ChunkLoadError",l.type=r,l.request=i,n[1](l)}a[e]=void 0}};var c=setTimeout((function(){i({type:"timeout",target:s})}),12e4);s.onerror=s.onload=i,document.head.appendChild(s)}return Promise.all(t)},o.m=e,o.c=r,o.d=function(e,t,n){o.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},o.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.t=function(e,t){if(1&t&&(e=o(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(o.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)o.d(n,r,function(t){return e[t]}.bind(null,r));return n},o.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(t,"a",t),t},o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.p="/",o.oe=function(e){throw console.error(e),e};var s=window.webpackJsonp=window.webpackJsonp||[],l=s.push.bind(s);s.push=t,s=s.slice();for(var c=0;c<s.length;c++)t(s[c]);var u=l;i.push([193,0]),n()}([function(e,t,n){var r=n(3),a=n(22).f,i=n(12),o=n(9),s=n(74),l=n(122),c=n(70);e.exports=function(e,t){var n,u,d,p,m,h=e.target,f=e.global,g=e.stat;if(n=f?r:g?r[h]||s(h,{}):(r[h]||{}).prototype)for(u in t){if(p=t[u],d=e.noTargetGet?(m=a(n,u))&&m.value:n[u],!c(f?u:h+(g?".":"#")+u,e.forced)&&void 0!==d){if(typeof p==typeof d)continue;l(p,d)}(e.sham||d&&d.sham)&&i(p,"sham",!0),o(n,u,p,e)}}},function(e,t){e.exports=function(e){try{return!!e()}catch(e){return!0}}},function(e,t,n){var r=n(3),a=n(73),i=n(6),o=n(51),s=n(76),l=n(116),c=a("wks"),u=r.Symbol,d=l?u:u&&u.withoutSetter||o;e.exports=function(e){return i(c,e)||(s&&i(u,e)?c[e]=u[e]:c[e]=d("Symbol."+e)),c[e]}},function(e,t){var n=function(e){return e&&e.Math==Math&&e};e.exports=n("object"==typeof globalThis&&globalThis)||n("object"==typeof window&&window)||n("object"==typeof self&&self)||n("object"==typeof global&&global)||Function("return this")()},function(e,t){e.exports=function(e){return"object"==typeof e?null!==e:"function"==typeof e}},function(e,t,n){var r=n(1);e.exports=!r((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]}))},function(e,t){var n={}.hasOwnProperty;e.exports=function(e,t){return n.call(e,t)}},function(e,t,n){var r=n(4);e.exports=function(e){if(!r(e))throw TypeError(String(e)+" is not an object");return e}},function(e,t,n){var r=n(5),a=n(115),i=n(7),o=n(38),s=Object.defineProperty;t.f=r?s:function(e,t,n){if(i(e),t=o(t,!0),i(n),a)try{return s(e,t,n)}catch(e){}if("get"in n||"set"in n)throw TypeError("Accessors not supported");return"value"in n&&(e[t]=n.value),e}},function(e,t,n){var r=n(3),a=n(12),i=n(6),o=n(74),s=n(79),l=n(30),c=l.get,u=l.enforce,d=String(String).split("String");(e.exports=function(e,t,n,s){var l=!!s&&!!s.unsafe,c=!!s&&!!s.enumerable,p=!!s&&!!s.noTargetGet;"function"==typeof n&&("string"!=typeof t||i(n,"name")||a(n,"name",t),u(n).source=d.join("string"==typeof t?t:"")),e!==r?(l?!p&&e[t]&&(c=!0):delete e[t],c?e[t]=n:a(e,t,n)):c?e[t]=n:o(t,n)})(Function.prototype,"toString",(function(){return"function"==typeof this&&c(this).source||s(this)}))},function(e,t,n){var r=n(84),a=n(9),i=n(203);r||a(Object.prototype,"toString",i,{unsafe:!0})},function(e,t,n){var r=n(20);e.exports=function(e){return Object(r(e))}},function(e,t,n){var r=n(5),a=n(8),i=n(34);e.exports=r?function(e,t,n){return a.f(e,t,i(1,n))}:function(e,t,n){return e[t]=n,e}},function(e,t,n){var r=n(45),a=Math.min;e.exports=function(e){return e>0?a(r(e),9007199254740991):0}},function(e,t,n){var r=n(37),a=n(20);e.exports=function(e){return r(a(e))}},function(e,t){var n=Array.isArray;e.exports=n},function(e,t){var n={}.toString;e.exports=function(e){return n.call(e).slice(8,-1)}},function(e,t,n){var r=n(145),a="object"==typeof self&&self&&self.Object===Object&&self,i=r||a||Function("return this")();e.exports=i},function(e,t,n){var r=n(5),a=n(1),i=n(6),o=Object.defineProperty,s={},l=function(e){throw e};e.exports=function(e,t){if(i(s,e))return s[e];t||(t={});var n=[][e],c=!!i(t,"ACCESSORS")&&t.ACCESSORS,u=i(t,0)?t[0]:l,d=i(t,1)?t[1]:void 0;return s[e]=!!n&&!a((function(){if(c&&!r)return!0;var e={length:-1};c?o(e,1,{enumerable:!0,get:l}):e[1]=1,n.call(e,u,d)}))}},function(e,t,n){var r=n(120),a=n(3),i=function(e){return"function"==typeof e?e:void 0};e.exports=function(e,t){return arguments.length<2?i(r[e])||i(a[e]):r[e]&&r[e][t]||a[e]&&a[e][t]}},function(e,t){e.exports=function(e){if(null==e)throw TypeError("Can't call method on "+e);return e}},function(e,t){e.exports=!1},function(e,t,n){var r=n(5),a=n(80),i=n(34),o=n(14),s=n(38),l=n(6),c=n(115),u=Object.getOwnPropertyDescriptor;t.f=r?u:function(e,t){if(e=o(e),t=s(t,!0),c)try{return u(e,t)}catch(e){}if(l(e,t))return i(!a.f.call(e,t),e[t])}},function(e,t){e.exports=function(e){if("function"!=typeof e)throw TypeError(String(e)+" is not a function");return e}},function(e,t,n){var r=n(228),a=n(231);e.exports=function(e,t){var n=a(e,t);return r(n)?n:void 0}},function(e,t,n){"use strict";function r(e,t,n,r,a,i,o,s){var l,c="function"==typeof e?e.options:e;if(t&&(c.render=t,c.staticRenderFns=n,c._compiled=!0),r&&(c.functional=!0),i&&(c._scopeId="data-v-"+i),o?(l=function(e){(e=e||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(e=__VUE_SSR_CONTEXT__),a&&a.call(this,e),e&&e._registeredComponents&&e._registeredComponents.add(o)},c._ssrRegister=l):a&&(l=s?function(){a.call(this,(c.functional?this.parent:this).$root.$options.shadowRoot)}:a),l)if(c.functional){c._injectStyles=l;var u=c.render;c.render=function(e,t){return l.call(t),u(e,t)}}else{var d=c.beforeCreate;c.beforeCreate=d?[].concat(d,l):[l]}return{exports:e,options:c}}n.d(t,"a",(function(){return r}))},function(e,t,n){"use strict";var r=n(0),a=n(31).filter,i=n(54),o=n(18),s=i("filter"),l=o("filter");r({target:"Array",proto:!0,forced:!s||!l},{filter:function(e){return a(this,e,arguments.length>1?arguments[1]:void 0)}})},function(e,t,n){"use strict";var r=n(111).charAt,a=n(30),i=n(121),o=a.set,s=a.getterFor("String Iterator");i(String,"String",(function(e){o(this,{type:"String Iterator",string:String(e),index:0})}),(function(){var e,t=s(this),n=t.string,a=t.index;return a>=n.length?{value:void 0,done:!0}:(e=r(n,a),t.index+=e.length,{value:e,done:!1})}))},function(e,t,n){var r,a=n(7),i=n(173),o=n(78),s=n(39),l=n(119),c=n(75),u=n(53),d=u("IE_PROTO"),p=function(){},m=function(e){return"<script>"+e+"<\/script>"},h=function(){try{r=document.domain&&new ActiveXObject("htmlfile")}catch(e){}var e,t;h=r?function(e){e.write(m("")),e.close();var t=e.parentWindow.Object;return e=null,t}(r):((t=c("iframe")).style.display="none",l.appendChild(t),t.src=String("javascript:"),(e=t.contentWindow.document).open(),e.write(m("document.F=Object")),e.close(),e.F);for(var n=o.length;n--;)delete h.prototype[o[n]];return h()};s[d]=!0,e.exports=Object.create||function(e,t){var n;return null!==e?(p.prototype=a(e),n=new p,p.prototype=null,n[d]=e):n=h(),void 0===t?n:i(n,t)}},function(e,t){e.exports=function(e){return null!=e&&"object"==typeof e}},function(e,t,n){var r,a,i,o=n(194),s=n(3),l=n(4),c=n(12),u=n(6),d=n(53),p=n(39),m=s.WeakMap;if(o){var h=new m,f=h.get,g=h.has,y=h.set;r=function(e,t){return y.call(h,e,t),t},a=function(e){return f.call(h,e)||{}},i=function(e){return g.call(h,e)}}else{var v=d("state");p[v]=!0,r=function(e,t){return c(e,v,t),t},a=function(e){return u(e,v)?e[v]:{}},i=function(e){return u(e,v)}}e.exports={set:r,get:a,has:i,enforce:function(e){return i(e)?a(e):r(e,{})},getterFor:function(e){return function(t){var n;if(!l(t)||(n=a(t)).type!==e)throw TypeError("Incompatible receiver, "+e+" required");return n}}}},function(e,t,n){var r=n(47),a=n(37),i=n(11),o=n(13),s=n(110),l=[].push,c=function(e){var t=1==e,n=2==e,c=3==e,u=4==e,d=6==e,p=5==e||d;return function(m,h,f,g){for(var y,v,b=i(m),k=a(b),w=r(h,f,3),x=o(k.length),T=0,I=g||s,q=t?I(m,x):n?I(m,0):void 0;x>T;T++)if((p||T in k)&&(v=w(y=k[T],T,b),e))if(t)q[T]=v;else if(v)switch(e){case 3:return!0;case 5:return y;case 6:return T;case 2:l.call(q,y)}else if(u)return!1;return d?-1:c||u?u:q}};e.exports={forEach:c(0),map:c(1),filter:c(2),some:c(3),every:c(4),find:c(5),findIndex:c(6)}},function(e,t,n){var r=n(3),a=n(134),i=n(107),o=n(12),s=n(2),l=s("iterator"),c=s("toStringTag"),u=i.values;for(var d in a){var p=r[d],m=p&&p.prototype;if(m){if(m[l]!==u)try{o(m,l,u)}catch(e){m[l]=u}if(m[c]||o(m,c,d),a[d])for(var h in i)if(m[h]!==i[h])try{o(m,h,i[h])}catch(e){m[h]=i[h]}}}},function(e,t,n){"use strict";var r=n(1);e.exports=function(e,t){var n=[][e];return!!n&&r((function(){n.call(null,t||function(){throw 1},1)}))}},function(e,t){e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},function(e,t,n){var r=n(16);e.exports=Array.isArray||function(e){return"Array"==r(e)}},function(e,t,n){var r=n(41),a=n(213),i=n(214),o=r?r.toStringTag:void 0;e.exports=function(e){return null==e?void 0===e?"[object Undefined]":"[object Null]":o&&o in Object(e)?a(e):i(e)}},function(e,t,n){var r=n(1),a=n(16),i="".split;e.exports=r((function(){return!Object("z").propertyIsEnumerable(0)}))?function(e){return"String"==a(e)?i.call(e,""):Object(e)}:Object},function(e,t,n){var r=n(4);e.exports=function(e,t){if(!r(e))return e;var n,a;if(t&&"function"==typeof(n=e.toString)&&!r(a=n.call(e)))return a;if("function"==typeof(n=e.valueOf)&&!r(a=n.call(e)))return a;if(!t&&"function"==typeof(n=e.toString)&&!r(a=n.call(e)))return a;throw TypeError("Can't convert object to primitive value")}},function(e,t){e.exports={}},function(e,t){e.exports={}},function(e,t,n){var r=n(17).Symbol;e.exports=r},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));n(105);var r=n(43);n(50),n(57),n(87),n(143),n(10),n(27),n(32);var a=n(65);function i(e){return function(e){if(Array.isArray(e))return Object(r.a)(e)}(e)||function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(e)||Object(a.a)(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}},function(e,t,n){"use strict";function r(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}n.d(t,"a",(function(){return r}))},function(e,t,n){"use strict";var r=n(0),a=n(71);r({target:"RegExp",proto:!0,forced:/./.exec!==a},{exec:a})},function(e,t){var n=Math.ceil,r=Math.floor;e.exports=function(e){return isNaN(e=+e)?0:(e>0?r:n)(e)}},function(e,t,n){var r=n(8).f,a=n(6),i=n(2)("toStringTag");e.exports=function(e,t,n){e&&!a(e=n?e:e.prototype,i)&&r(e,i,{configurable:!0,value:t})}},function(e,t,n){var r=n(23);e.exports=function(e,t,n){if(r(e),void 0===t)return e;switch(n){case 0:return function(){return e.call(t)};case 1:return function(n){return e.call(t,n)};case 2:return function(n,r){return e.call(t,n,r)};case 3:return function(n,r,a){return e.call(t,n,r,a)}}return function(){return e.apply(t,arguments)}}},function(e,t,n){"use strict";var r=n(0),a=n(4),i=n(35),o=n(118),s=n(13),l=n(14),c=n(55),u=n(2),d=n(54),p=n(18),m=d("slice"),h=p("slice",{ACCESSORS:!0,0:0,1:2}),f=u("species"),g=[].slice,y=Math.max;r({target:"Array",proto:!0,forced:!m||!h},{slice:function(e,t){var n,r,u,d=l(this),p=s(d.length),m=o(e,p),h=o(void 0===t?p:t,p);if(i(d)&&("function"!=typeof(n=d.constructor)||n!==Array&&!i(n.prototype)?a(n)&&null===(n=n[f])&&(n=void 0):n=void 0,n===Array||void 0===n))return g.call(d,m,h);for(r=new(void 0===n?Array:n)(y(h-m,0)),u=0;m<h;m++,u++)m in d&&c(r,u,d[m]);return r.length=u,r}})},function(e,t,n){var r=n(117),a=n(78).concat("length","prototype");t.f=Object.getOwnPropertyNames||function(e){return r(e,a)}},function(e,t,n){"use strict";var r=n(0),a=n(3),i=n(19),o=n(21),s=n(5),l=n(76),c=n(116),u=n(1),d=n(6),p=n(35),m=n(4),h=n(7),f=n(11),g=n(14),y=n(38),v=n(34),b=n(28),k=n(52),w=n(49),x=n(209),T=n(81),I=n(22),q=n(8),j=n(80),z=n(12),D=n(9),E=n(73),_=n(53),S=n(39),R=n(51),C=n(2),O=n(141),P=n(142),A=n(46),L=n(30),K=n(31).forEach,F=_("hidden"),M=C("toPrimitive"),N=L.set,U=L.getterFor("Symbol"),B=Object.prototype,$=a.Symbol,W=i("JSON","stringify"),G=I.f,V=q.f,H=x.f,Q=j.f,J=E("symbols"),Y=E("op-symbols"),X=E("string-to-symbol-registry"),Z=E("symbol-to-string-registry"),ee=E("wks"),te=a.QObject,ne=!te||!te.prototype||!te.prototype.findChild,re=s&&u((function(){return 7!=b(V({},"a",{get:function(){return V(this,"a",{value:7}).a}})).a}))?function(e,t,n){var r=G(B,t);r&&delete B[t],V(e,t,n),r&&e!==B&&V(B,t,r)}:V,ae=function(e,t){var n=J[e]=b($.prototype);return N(n,{type:"Symbol",tag:e,description:t}),s||(n.description=t),n},ie=c?function(e){return"symbol"==typeof e}:function(e){return Object(e)instanceof $},oe=function(e,t,n){e===B&&oe(Y,t,n),h(e);var r=y(t,!0);return h(n),d(J,r)?(n.enumerable?(d(e,F)&&e[F][r]&&(e[F][r]=!1),n=b(n,{enumerable:v(0,!1)})):(d(e,F)||V(e,F,v(1,{})),e[F][r]=!0),re(e,r,n)):V(e,r,n)},se=function(e,t){h(e);var n=g(t),r=k(n).concat(de(n));return K(r,(function(t){s&&!le.call(n,t)||oe(e,t,n[t])})),e},le=function(e){var t=y(e,!0),n=Q.call(this,t);return!(this===B&&d(J,t)&&!d(Y,t))&&(!(n||!d(this,t)||!d(J,t)||d(this,F)&&this[F][t])||n)},ce=function(e,t){var n=g(e),r=y(t,!0);if(n!==B||!d(J,r)||d(Y,r)){var a=G(n,r);return!a||!d(J,r)||d(n,F)&&n[F][r]||(a.enumerable=!0),a}},ue=function(e){var t=H(g(e)),n=[];return K(t,(function(e){d(J,e)||d(S,e)||n.push(e)})),n},de=function(e){var t=e===B,n=H(t?Y:g(e)),r=[];return K(n,(function(e){!d(J,e)||t&&!d(B,e)||r.push(J[e])})),r};(l||(D(($=function(){if(this instanceof $)throw TypeError("Symbol is not a constructor");var e=arguments.length&&void 0!==arguments[0]?String(arguments[0]):void 0,t=R(e),n=function(e){this===B&&n.call(Y,e),d(this,F)&&d(this[F],t)&&(this[F][t]=!1),re(this,t,v(1,e))};return s&&ne&&re(B,t,{configurable:!0,set:n}),ae(t,e)}).prototype,"toString",(function(){return U(this).tag})),D($,"withoutSetter",(function(e){return ae(R(e),e)})),j.f=le,q.f=oe,I.f=ce,w.f=x.f=ue,T.f=de,O.f=function(e){return ae(C(e),e)},s&&(V($.prototype,"description",{configurable:!0,get:function(){return U(this).description}}),o||D(B,"propertyIsEnumerable",le,{unsafe:!0}))),r({global:!0,wrap:!0,forced:!l,sham:!l},{Symbol:$}),K(k(ee),(function(e){P(e)})),r({target:"Symbol",stat:!0,forced:!l},{for:function(e){var t=String(e);if(d(X,t))return X[t];var n=$(t);return X[t]=n,Z[n]=t,n},keyFor:function(e){if(!ie(e))throw TypeError(e+" is not a symbol");if(d(Z,e))return Z[e]},useSetter:function(){ne=!0},useSimple:function(){ne=!1}}),r({target:"Object",stat:!0,forced:!l,sham:!s},{create:function(e,t){return void 0===t?b(e):se(b(e),t)},defineProperty:oe,defineProperties:se,getOwnPropertyDescriptor:ce}),r({target:"Object",stat:!0,forced:!l},{getOwnPropertyNames:ue,getOwnPropertySymbols:de}),r({target:"Object",stat:!0,forced:u((function(){T.f(1)}))},{getOwnPropertySymbols:function(e){return T.f(f(e))}}),W)&&r({target:"JSON",stat:!0,forced:!l||u((function(){var e=$();return"[null]"!=W([e])||"{}"!=W({a:e})||"{}"!=W(Object(e))}))},{stringify:function(e,t,n){for(var r,a=[e],i=1;arguments.length>i;)a.push(arguments[i++]);if(r=t,(m(t)||void 0!==e)&&!ie(e))return p(t)||(t=function(e,t){if("function"==typeof r&&(t=r.call(this,e,t)),!ie(t))return t}),a[1]=t,W.apply(null,a)}});$.prototype[M]||z($.prototype,M,$.prototype.valueOf),A($,"Symbol"),S[F]=!0},function(e,t){var n=0,r=Math.random();e.exports=function(e){return"Symbol("+String(void 0===e?"":e)+")_"+(++n+r).toString(36)}},function(e,t,n){var r=n(117),a=n(78);e.exports=Object.keys||function(e){return r(e,a)}},function(e,t,n){var r=n(73),a=n(51),i=r("keys");e.exports=function(e){return i[e]||(i[e]=a(e))}},function(e,t,n){var r=n(1),a=n(2),i=n(86),o=a("species");e.exports=function(e){return i>=51||!r((function(){var t=[];return(t.constructor={})[o]=function(){return{foo:1}},1!==t[e](Boolean).foo}))}},function(e,t,n){"use strict";var r=n(38),a=n(8),i=n(34);e.exports=function(e,t,n){var o=r(t);o in e?a.f(e,o,i(0,n)):e[o]=n}},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));n(10);function r(e,t,n,r,a,i,o){try{var s=e[i](o),l=s.value}catch(e){return void n(e)}s.done?t(l):Promise.resolve(l).then(r,a)}function a(e){return function(){var t=this,n=arguments;return new Promise((function(a,i){var o=e.apply(t,n);function s(e){r(o,a,i,s,l,"next",e)}function l(e){r(o,a,i,s,l,"throw",e)}s(void 0)}))}}},function(e,t,n){"use strict";var r=n(0),a=n(5),i=n(3),o=n(6),s=n(4),l=n(8).f,c=n(122),u=i.Symbol;if(a&&"function"==typeof u&&(!("description"in u.prototype)||void 0!==u().description)){var d={},p=function(){var e=arguments.length<1||void 0===arguments[0]?void 0:String(arguments[0]),t=this instanceof p?new u(e):void 0===e?u():u(e);return""===e&&(d[t]=!0),t};c(p,u);var m=p.prototype=u.prototype;m.constructor=p;var h=m.toString,f="Symbol(test)"==String(u("test")),g=/^Symbol\((.*)\)[^)]+$/;l(m,"description",{configurable:!0,get:function(){var e=s(this)?this.valueOf():this,t=h.call(e);if(o(d,e))return"";var n=f?t.slice(7,-1):t.replace(g,"$1");return""===n?void 0:n}}),r({global:!0,forced:!0},{Symbol:p})}},function(e,t,n){var r=n(218),a=n(219),i=n(220),o=n(221),s=n(222);function l(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var r=e[t];this.set(r[0],r[1])}}l.prototype.clear=r,l.prototype.delete=a,l.prototype.get=i,l.prototype.has=o,l.prototype.set=s,e.exports=l},function(e,t,n){var r=n(147);e.exports=function(e,t){for(var n=e.length;n--;)if(r(e[n][0],t))return n;return-1}},function(e,t,n){var r=n(24)(Object,"create");e.exports=r},function(e,t,n){var r=n(240);e.exports=function(e,t){var n=e.__data__;return r(t)?n["string"==typeof t?"string":"hash"]:n.map}},function(e,t,n){var r=n(96);e.exports=function(e){if("string"==typeof e||r(e))return e;var t=e+"";return"0"==t&&1/e==-1/0?"-0":t}},function(e,t,n){},function(e,t,n){},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));n(143),n(48),n(72),n(88),n(10),n(106),n(27);var r=n(43);function a(e,t){if(e){if("string"==typeof e)return Object(r.a)(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Object(r.a)(e,t):void 0}}},function(e,t){var n=/^\s+|\s+$/g,r=/^[-+]0x[0-9a-f]+$/i,a=/^0b[01]+$/i,i=/^0o[0-7]+$/i,o=parseInt,s="object"==typeof global&&global&&global.Object===Object&&global,l="object"==typeof self&&self&&self.Object===Object&&self,c=s||l||Function("return this")(),u=Object.prototype.toString,d=Math.max,p=Math.min,m=function(){return c.Date.now()};function h(e){var t=typeof e;return!!e&&("object"==t||"function"==t)}function f(e){if("number"==typeof e)return e;if(function(e){return"symbol"==typeof e||function(e){return!!e&&"object"==typeof e}(e)&&"[object Symbol]"==u.call(e)}(e))return NaN;if(h(e)){var t="function"==typeof e.valueOf?e.valueOf():e;e=h(t)?t+"":t}if("string"!=typeof e)return 0===e?e:+e;e=e.replace(n,"");var s=a.test(e);return s||i.test(e)?o(e.slice(2),s?2:8):r.test(e)?NaN:+e}e.exports=function(e,t,n){var r,a,i,o,s,l,c=0,u=!1,g=!1,y=!0;if("function"!=typeof e)throw new TypeError("Expected a function");function v(t){var n=r,i=a;return r=a=void 0,c=t,o=e.apply(i,n)}function b(e){return c=e,s=setTimeout(w,t),u?v(e):o}function k(e){var n=e-l;return void 0===l||n>=t||n<0||g&&e-c>=i}function w(){var e=m();if(k(e))return x(e);s=setTimeout(w,function(e){var n=t-(e-l);return g?p(n,i-(e-c)):n}(e))}function x(e){return s=void 0,y&&r?v(e):(r=a=void 0,o)}function T(){var e=m(),n=k(e);if(r=arguments,a=this,l=e,n){if(void 0===s)return b(l);if(g)return s=setTimeout(w,t),v(l)}return void 0===s&&(s=setTimeout(w,t)),o}return t=f(t)||0,h(n)&&(u=!!n.leading,i=(g="maxWait"in n)?d(f(n.maxWait)||0,t):i,y="trailing"in n?!!n.trailing:y),T.cancel=function(){void 0!==s&&clearTimeout(s),c=0,r=l=a=s=void 0},T.flush=function(){return void 0===s?o:x(m())},T}},function(e,t,n){var r,a;
/* NProgress, (c) 2013, 2014 Rico Sta. Cruz - http://ricostacruz.com/nprogress
 * @license MIT */void 0===(a="function"==typeof(r=function(){var e,t,n={version:"0.2.0"},r=n.settings={minimum:.08,easing:"ease",positionUsing:"",speed:200,trickle:!0,trickleRate:.02,trickleSpeed:800,showSpinner:!0,barSelector:'[role="bar"]',spinnerSelector:'[role="spinner"]',parent:"body",template:'<div class="bar" role="bar"><div class="peg"></div></div><div class="spinner" role="spinner"><div class="spinner-icon"></div></div>'};function a(e,t,n){return e<t?t:e>n?n:e}function i(e){return 100*(-1+e)}n.configure=function(e){var t,n;for(t in e)void 0!==(n=e[t])&&e.hasOwnProperty(t)&&(r[t]=n);return this},n.status=null,n.set=function(e){var t=n.isStarted();e=a(e,r.minimum,1),n.status=1===e?null:e;var l=n.render(!t),c=l.querySelector(r.barSelector),u=r.speed,d=r.easing;return l.offsetWidth,o((function(t){""===r.positionUsing&&(r.positionUsing=n.getPositioningCSS()),s(c,function(e,t,n){var a;return(a="translate3d"===r.positionUsing?{transform:"translate3d("+i(e)+"%,0,0)"}:"translate"===r.positionUsing?{transform:"translate("+i(e)+"%,0)"}:{"margin-left":i(e)+"%"}).transition="all "+t+"ms "+n,a}(e,u,d)),1===e?(s(l,{transition:"none",opacity:1}),l.offsetWidth,setTimeout((function(){s(l,{transition:"all "+u+"ms linear",opacity:0}),setTimeout((function(){n.remove(),t()}),u)}),u)):setTimeout(t,u)})),this},n.isStarted=function(){return"number"==typeof n.status},n.start=function(){n.status||n.set(0);var e=function(){setTimeout((function(){n.status&&(n.trickle(),e())}),r.trickleSpeed)};return r.trickle&&e(),this},n.done=function(e){return e||n.status?n.inc(.3+.5*Math.random()).set(1):this},n.inc=function(e){var t=n.status;return t?("number"!=typeof e&&(e=(1-t)*a(Math.random()*t,.1,.95)),t=a(t+e,0,.994),n.set(t)):n.start()},n.trickle=function(){return n.inc(Math.random()*r.trickleRate)},e=0,t=0,n.promise=function(r){return r&&"resolved"!==r.state()?(0===t&&n.start(),e++,t++,r.always((function(){0==--t?(e=0,n.done()):n.set((e-t)/e)})),this):this},n.render=function(e){if(n.isRendered())return document.getElementById("nprogress");c(document.documentElement,"nprogress-busy");var t=document.createElement("div");t.id="nprogress",t.innerHTML=r.template;var a,o=t.querySelector(r.barSelector),l=e?"-100":i(n.status||0),u=document.querySelector(r.parent);return s(o,{transition:"all 0 linear",transform:"translate3d("+l+"%,0,0)"}),r.showSpinner||(a=t.querySelector(r.spinnerSelector))&&p(a),u!=document.body&&c(u,"nprogress-custom-parent"),u.appendChild(t),t},n.remove=function(){u(document.documentElement,"nprogress-busy"),u(document.querySelector(r.parent),"nprogress-custom-parent");var e=document.getElementById("nprogress");e&&p(e)},n.isRendered=function(){return!!document.getElementById("nprogress")},n.getPositioningCSS=function(){var e=document.body.style,t="WebkitTransform"in e?"Webkit":"MozTransform"in e?"Moz":"msTransform"in e?"ms":"OTransform"in e?"O":"";return t+"Perspective"in e?"translate3d":t+"Transform"in e?"translate":"margin"};var o=function(){var e=[];function t(){var n=e.shift();n&&n(t)}return function(n){e.push(n),1==e.length&&t()}}(),s=function(){var e=["Webkit","O","Moz","ms"],t={};function n(n){return n=n.replace(/^-ms-/,"ms-").replace(/-([\da-z])/gi,(function(e,t){return t.toUpperCase()})),t[n]||(t[n]=function(t){var n=document.body.style;if(t in n)return t;for(var r,a=e.length,i=t.charAt(0).toUpperCase()+t.slice(1);a--;)if((r=e[a]+i)in n)return r;return t}(n))}function r(e,t,r){t=n(t),e.style[t]=r}return function(e,t){var n,a,i=arguments;if(2==i.length)for(n in t)void 0!==(a=t[n])&&t.hasOwnProperty(n)&&r(e,n,a);else r(e,i[1],i[2])}}();function l(e,t){return("string"==typeof e?e:d(e)).indexOf(" "+t+" ")>=0}function c(e,t){var n=d(e),r=n+t;l(n,t)||(e.className=r.substring(1))}function u(e,t){var n,r=d(e);l(e,t)&&(n=r.replace(" "+t+" "," "),e.className=n.substring(1,n.length-1))}function d(e){return(" "+(e.className||"")+" ").replace(/\s+/gi," ")}function p(e){e&&e.parentNode&&e.parentNode.removeChild(e)}return n})?r.call(t,n,t,e):r)||(e.exports=a)},function(e,t,n){"use strict";var r=n(0),a=n(31).map,i=n(54),o=n(18),s=i("map"),l=o("map");r({target:"Array",proto:!0,forced:!s||!l},{map:function(e){return a(this,e,arguments.length>1?arguments[1]:void 0)}})},function(e,t,n){"use strict";var r=n(170),a=n(7),i=n(11),o=n(13),s=n(45),l=n(20),c=n(176),u=n(171),d=Math.max,p=Math.min,m=Math.floor,h=/\$([$&'`]|\d\d?|<[^>]*>)/g,f=/\$([$&'`]|\d\d?)/g;r("replace",2,(function(e,t,n,r){var g=r.REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE,y=r.REPLACE_KEEPS_$0,v=g?"$":"$0";return[function(n,r){var a=l(this),i=null==n?void 0:n[e];return void 0!==i?i.call(n,a,r):t.call(String(a),n,r)},function(e,r){if(!g&&y||"string"==typeof r&&-1===r.indexOf(v)){var i=n(t,e,this,r);if(i.done)return i.value}var l=a(e),m=String(this),h="function"==typeof r;h||(r=String(r));var f=l.global;if(f){var k=l.unicode;l.lastIndex=0}for(var w=[];;){var x=u(l,m);if(null===x)break;if(w.push(x),!f)break;""===String(x[0])&&(l.lastIndex=c(m,o(l.lastIndex),k))}for(var T,I="",q=0,j=0;j<w.length;j++){x=w[j];for(var z=String(x[0]),D=d(p(s(x.index),m.length),0),E=[],_=1;_<x.length;_++)E.push(void 0===(T=x[_])?T:String(T));var S=x.groups;if(h){var R=[z].concat(E,D,m);void 0!==S&&R.push(S);var C=String(r.apply(void 0,R))}else C=b(z,m,D,E,S,r);D>=q&&(I+=m.slice(q,D)+C,q=D+z.length)}return I+m.slice(q)}];function b(e,n,r,a,o,s){var l=r+e.length,c=a.length,u=f;return void 0!==o&&(o=i(o),u=h),t.call(s,u,(function(t,i){var s;switch(i.charAt(0)){case"$":return"$";case"&":return e;case"`":return n.slice(0,r);case"'":return n.slice(l);case"<":s=o[i.slice(1,-1)];break;default:var u=+i;if(0===u)return t;if(u>c){var d=m(u/10);return 0===d?t:d<=c?void 0===a[d-1]?i.charAt(1):a[d-1]+i.charAt(1):t}s=a[u-1]}return void 0===s?"":s}))}}))},function(e,t,n){var r=n(1),a=/#|\.prototype\./,i=function(e,t){var n=s[o(e)];return n==c||n!=l&&("function"==typeof t?r(t):!!t)},o=i.normalize=function(e){return String(e).replace(a,".").toLowerCase()},s=i.data={},l=i.NATIVE="N",c=i.POLYFILL="P";e.exports=i},function(e,t,n){"use strict";var r,a,i=n(112),o=n(188),s=RegExp.prototype.exec,l=String.prototype.replace,c=s,u=(r=/a/,a=/b*/g,s.call(r,"a"),s.call(a,"a"),0!==r.lastIndex||0!==a.lastIndex),d=o.UNSUPPORTED_Y||o.BROKEN_CARET,p=void 0!==/()??/.exec("")[1];(u||p||d)&&(c=function(e){var t,n,r,a,o=this,c=d&&o.sticky,m=i.call(o),h=o.source,f=0,g=e;return c&&(-1===(m=m.replace("y","")).indexOf("g")&&(m+="g"),g=String(e).slice(o.lastIndex),o.lastIndex>0&&(!o.multiline||o.multiline&&"\n"!==e[o.lastIndex-1])&&(h="(?: "+h+")",g=" "+g,f++),n=new RegExp("^(?:"+h+")",m)),p&&(n=new RegExp("^"+h+"$(?!\\s)",m)),u&&(t=o.lastIndex),r=s.call(c?n:o,g),c?r?(r.input=r.input.slice(f),r[0]=r[0].slice(f),r.index=o.lastIndex,o.lastIndex+=r[0].length):o.lastIndex=0:u&&r&&(o.lastIndex=o.global?r.index+r[0].length:t),p&&r&&r.length>1&&l.call(r[0],n,(function(){for(a=1;a<arguments.length-2;a++)void 0===arguments[a]&&(r[a]=void 0)})),r}),e.exports=c},function(e,t,n){var r=n(9),a=Date.prototype,i=a.toString,o=a.getTime;new Date(NaN)+""!="Invalid Date"&&r(a,"toString",(function(){var e=o.call(this);return e==e?i.call(this):"Invalid Date"}))},function(e,t,n){var r=n(21),a=n(114);(e.exports=function(e,t){return a[e]||(a[e]=void 0!==t?t:{})})("versions",[]).push({version:"3.6.5",mode:r?"pure":"global",copyright:"© 2020 Denis Pushkarev (zloirock.ru)"})},function(e,t,n){var r=n(3),a=n(12);e.exports=function(e,t){try{a(r,e,t)}catch(n){r[e]=t}return t}},function(e,t,n){var r=n(3),a=n(4),i=r.document,o=a(i)&&a(i.createElement);e.exports=function(e){return o?i.createElement(e):{}}},function(e,t,n){var r=n(1);e.exports=!!Object.getOwnPropertySymbols&&!r((function(){return!String(Symbol())}))},function(e,t,n){var r=n(14),a=n(13),i=n(118),o=function(e){return function(t,n,o){var s,l=r(t),c=a(l.length),u=i(o,c);if(e&&n!=n){for(;c>u;)if((s=l[u++])!=s)return!0}else for(;c>u;u++)if((e||u in l)&&l[u]===n)return e||u||0;return!e&&-1}};e.exports={includes:o(!0),indexOf:o(!1)}},function(e,t){e.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},function(e,t,n){var r=n(114),a=Function.toString;"function"!=typeof r.inspectSource&&(r.inspectSource=function(e){return a.call(e)}),e.exports=r.inspectSource},function(e,t,n){"use strict";var r={}.propertyIsEnumerable,a=Object.getOwnPropertyDescriptor,i=a&&!r.call({1:2},1);t.f=i?function(e){var t=a(this,e);return!!t&&t.enumerable}:r},function(e,t){t.f=Object.getOwnPropertySymbols},function(e,t,n){var r=n(6),a=n(11),i=n(53),o=n(125),s=i("IE_PROTO"),l=Object.prototype;e.exports=o?Object.getPrototypeOf:function(e){return e=a(e),r(e,s)?e[s]:"function"==typeof e.constructor&&e instanceof e.constructor?e.constructor.prototype:e instanceof Object?l:null}},function(e,t,n){var r=n(7),a=n(195);e.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var e,t=!1,n={};try{(e=Object.getOwnPropertyDescriptor(Object.prototype,"__proto__").set).call(n,[]),t=n instanceof Array}catch(e){}return function(n,i){return r(n),a(i),t?e.call(n,i):n.__proto__=i,n}}():void 0)},function(e,t,n){var r={};r[n(2)("toStringTag")]="z",e.exports="[object z]"===String(r)},function(e,t,n){var r=n(19);e.exports=r("navigator","userAgent")||""},function(e,t,n){var r,a,i=n(3),o=n(85),s=i.process,l=s&&s.versions,c=l&&l.v8;c?a=(r=c.split("."))[0]+r[1]:o&&(!(r=o.match(/Edge\/(\d+)/))||r[1]>=74)&&(r=o.match(/Chrome\/(\d+)/))&&(a=r[1]),e.exports=a&&+a},function(e,t,n){n(142)("iterator")},function(e,t,n){var r=n(5),a=n(8).f,i=Function.prototype,o=i.toString,s=/^\s*function ([^ (]*)/;r&&!("name"in i)&&a(i,"name",{configurable:!0,get:function(){try{return o.call(this).match(s)[1]}catch(e){return""}}})},function(e,t,n){var r=n(212),a=n(29),i=Object.prototype,o=i.hasOwnProperty,s=i.propertyIsEnumerable,l=r(function(){return arguments}())?r:function(e){return a(e)&&o.call(e,"callee")&&!s.call(e,"callee")};e.exports=l},function(e,t,n){var r=n(24)(n(17),"Map");e.exports=r},function(e,t){e.exports=function(e){var t=typeof e;return null!=e&&("object"==t||"function"==t)}},function(e,t,n){var r=n(232),a=n(239),i=n(241),o=n(242),s=n(243);function l(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var r=e[t];this.set(r[0],r[1])}}l.prototype.clear=r,l.prototype.delete=a,l.prototype.get=i,l.prototype.has=o,l.prototype.set=s,e.exports=l},function(e,t){e.exports=function(e){var t=-1,n=Array(e.size);return e.forEach((function(e){n[++t]=e})),n}},function(e,t){e.exports=function(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=9007199254740991}},function(e,t,n){var r=n(15),a=n(96),i=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,o=/^\w*$/;e.exports=function(e,t){if(r(e))return!1;var n=typeof e;return!("number"!=n&&"symbol"!=n&&"boolean"!=n&&null!=e&&!a(e))||(o.test(e)||!i.test(e)||null!=t&&e in Object(t))}},function(e,t,n){var r=n(36),a=n(29);e.exports=function(e){return"symbol"==typeof e||a(e)&&"[object Symbol]"==r(e)}},function(e,t){e.exports=function(e){return e}},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));n(105);n(50),n(57),n(87),n(10),n(27),n(32);var r=n(65);function a(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,a=!1,i=void 0;try{for(var o,s=e[Symbol.iterator]();!(r=(o=s.next()).done)&&(n.push(o.value),!t||n.length!==t);r=!0);}catch(e){a=!0,i=e}finally{try{r||null==s.return||s.return()}finally{if(a)throw i}}return n}}(e,t)||Object(r.a)(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}},function(e,t,n){var r=n(0),a=n(11),i=n(52);r({target:"Object",stat:!0,forced:n(1)((function(){i(1)}))},{keys:function(e){return i(a(e))}})},function(e,t,n){var r=n(2),a=n(28),i=n(8),o=r("unscopables"),s=Array.prototype;null==s[o]&&i.f(s,o,{configurable:!0,value:a(null)}),e.exports=function(e){s[o][e]=!0}},function(e,t,n){var r=n(108),a=n(40),i=n(2)("iterator");e.exports=function(e){if(null!=e)return e[i]||e["@@iterator"]||a[r(e)]}},function(e,t,n){var r=function(e){"use strict";var t=Object.prototype,n=t.hasOwnProperty,r="function"==typeof Symbol?Symbol:{},a=r.iterator||"@@iterator",i=r.asyncIterator||"@@asyncIterator",o=r.toStringTag||"@@toStringTag";function s(e,t,n){return Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{s({},"")}catch(e){s=function(e,t,n){return e[t]=n}}function l(e,t,n,r){var a=t&&t.prototype instanceof d?t:d,i=Object.create(a.prototype),o=new T(r||[]);return i._invoke=function(e,t,n){var r="suspendedStart";return function(a,i){if("executing"===r)throw new Error("Generator is already running");if("completed"===r){if("throw"===a)throw i;return q()}for(n.method=a,n.arg=i;;){var o=n.delegate;if(o){var s=k(o,n);if(s){if(s===u)continue;return s}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if("suspendedStart"===r)throw r="completed",n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);r="executing";var l=c(e,t,n);if("normal"===l.type){if(r=n.done?"completed":"suspendedYield",l.arg===u)continue;return{value:l.arg,done:n.done}}"throw"===l.type&&(r="completed",n.method="throw",n.arg=l.arg)}}}(e,n,o),i}function c(e,t,n){try{return{type:"normal",arg:e.call(t,n)}}catch(e){return{type:"throw",arg:e}}}e.wrap=l;var u={};function d(){}function p(){}function m(){}var h={};h[a]=function(){return this};var f=Object.getPrototypeOf,g=f&&f(f(I([])));g&&g!==t&&n.call(g,a)&&(h=g);var y=m.prototype=d.prototype=Object.create(h);function v(e){["next","throw","return"].forEach((function(t){s(e,t,(function(e){return this._invoke(t,e)}))}))}function b(e,t){var r;this._invoke=function(a,i){function o(){return new t((function(r,o){!function r(a,i,o,s){var l=c(e[a],e,i);if("throw"!==l.type){var u=l.arg,d=u.value;return d&&"object"==typeof d&&n.call(d,"__await")?t.resolve(d.__await).then((function(e){r("next",e,o,s)}),(function(e){r("throw",e,o,s)})):t.resolve(d).then((function(e){u.value=e,o(u)}),(function(e){return r("throw",e,o,s)}))}s(l.arg)}(a,i,r,o)}))}return r=r?r.then(o,o):o()}}function k(e,t){var n=e.iterator[t.method];if(void 0===n){if(t.delegate=null,"throw"===t.method){if(e.iterator.return&&(t.method="return",t.arg=void 0,k(e,t),"throw"===t.method))return u;t.method="throw",t.arg=new TypeError("The iterator does not provide a 'throw' method")}return u}var r=c(n,e.iterator,t.arg);if("throw"===r.type)return t.method="throw",t.arg=r.arg,t.delegate=null,u;var a=r.arg;return a?a.done?(t[e.resultName]=a.value,t.next=e.nextLoc,"return"!==t.method&&(t.method="next",t.arg=void 0),t.delegate=null,u):a:(t.method="throw",t.arg=new TypeError("iterator result is not an object"),t.delegate=null,u)}function w(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function x(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function T(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(w,this),this.reset(!0)}function I(e){if(e){var t=e[a];if(t)return t.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var r=-1,i=function t(){for(;++r<e.length;)if(n.call(e,r))return t.value=e[r],t.done=!1,t;return t.value=void 0,t.done=!0,t};return i.next=i}}return{next:q}}function q(){return{value:void 0,done:!0}}return p.prototype=y.constructor=m,m.constructor=p,p.displayName=s(m,o,"GeneratorFunction"),e.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===p||"GeneratorFunction"===(t.displayName||t.name))},e.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,m):(e.__proto__=m,s(e,o,"GeneratorFunction")),e.prototype=Object.create(y),e},e.awrap=function(e){return{__await:e}},v(b.prototype),b.prototype[i]=function(){return this},e.AsyncIterator=b,e.async=function(t,n,r,a,i){void 0===i&&(i=Promise);var o=new b(l(t,n,r,a),i);return e.isGeneratorFunction(n)?o:o.next().then((function(e){return e.done?e.value:o.next()}))},v(y),s(y,o,"Generator"),y[a]=function(){return this},y.toString=function(){return"[object Generator]"},e.keys=function(e){var t=[];for(var n in e)t.push(n);return t.reverse(),function n(){for(;t.length;){var r=t.pop();if(r in e)return n.value=r,n.done=!1,n}return n.done=!0,n}},e.values=I,T.prototype={constructor:T,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(x),!e)for(var t in this)"t"===t.charAt(0)&&n.call(this,t)&&!isNaN(+t.slice(1))&&(this[t]=void 0)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var t=this;function r(n,r){return o.type="throw",o.arg=e,t.next=n,r&&(t.method="next",t.arg=void 0),!!r}for(var a=this.tryEntries.length-1;a>=0;--a){var i=this.tryEntries[a],o=i.completion;if("root"===i.tryLoc)return r("end");if(i.tryLoc<=this.prev){var s=n.call(i,"catchLoc"),l=n.call(i,"finallyLoc");if(s&&l){if(this.prev<i.catchLoc)return r(i.catchLoc,!0);if(this.prev<i.finallyLoc)return r(i.finallyLoc)}else if(s){if(this.prev<i.catchLoc)return r(i.catchLoc,!0)}else{if(!l)throw new Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return r(i.finallyLoc)}}}},abrupt:function(e,t){for(var r=this.tryEntries.length-1;r>=0;--r){var a=this.tryEntries[r];if(a.tryLoc<=this.prev&&n.call(a,"finallyLoc")&&this.prev<a.finallyLoc){var i=a;break}}i&&("break"===e||"continue"===e)&&i.tryLoc<=t&&t<=i.finallyLoc&&(i=null);var o=i?i.completion:{};return o.type=e,o.arg=t,i?(this.method="next",this.next=i.finallyLoc,u):this.complete(o)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),u},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.finallyLoc===e)return this.complete(n.completion,n.afterLoc),x(n),u}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.tryLoc===e){var r=n.completion;if("throw"===r.type){var a=r.arg;x(n)}return a}}throw new Error("illegal catch attempt")},delegateYield:function(e,t,n){return this.delegate={iterator:I(e),resultName:t,nextLoc:n},"next"===this.method&&(this.arg=void 0),u}},e}(e.exports);try{regeneratorRuntime=r}catch(e){Function("r","regeneratorRuntime = r")(r)}},function(e,t,n){"use strict";var r=n(0),a=n(135);r({target:"Array",proto:!0,forced:[].forEach!=a},{forEach:a})},function(e,t,n){var r=n(3),a=n(134),i=n(135),o=n(12);for(var s in a){var l=r[s],c=l&&l.prototype;if(c&&c.forEach!==i)try{o(c,"forEach",i)}catch(e){c.forEach=i}}},function(e,t,n){n(0)({target:"Array",stat:!0},{isArray:n(35)})},function(e,t,n){"use strict";var r=n(9),a=n(7),i=n(1),o=n(112),s=RegExp.prototype,l=s.toString,c=i((function(){return"/a/b"!=l.call({source:"a",flags:"b"})})),u="toString"!=l.name;(c||u)&&r(RegExp.prototype,"toString",(function(){var e=a(this),t=String(e.source),n=e.flags;return"/"+t+"/"+String(void 0===n&&e instanceof RegExp&&!("flags"in s)?o.call(e):n)}),{unsafe:!0})},function(e,t,n){"use strict";var r=n(14),a=n(100),i=n(40),o=n(30),s=n(121),l=o.set,c=o.getterFor("Array Iterator");e.exports=s(Array,"Array",(function(e,t){l(this,{type:"Array Iterator",target:r(e),index:0,kind:t})}),(function(){var e=c(this),t=e.target,n=e.kind,r=e.index++;return!t||r>=t.length?(e.target=void 0,{value:void 0,done:!0}):"keys"==n?{value:r,done:!1}:"values"==n?{value:t[r],done:!1}:{value:[r,t[r]],done:!1}}),"values"),i.Arguments=i.Array,a("keys"),a("values"),a("entries")},function(e,t,n){var r=n(84),a=n(16),i=n(2)("toStringTag"),o="Arguments"==a(function(){return arguments}());e.exports=r?a:function(e){var t,n,r;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(n=function(e,t){try{return e[t]}catch(e){}}(t=Object(e),i))?n:o?a(t):"Object"==(r=a(t))&&"function"==typeof t.callee?"Arguments":r}},function(e,t,n){var r=n(7),a=n(23),i=n(2)("species");e.exports=function(e,t){var n,o=r(e).constructor;return void 0===o||null==(n=r(o)[i])?t:a(n)}},function(e,t,n){var r=n(4),a=n(35),i=n(2)("species");e.exports=function(e,t){var n;return a(e)&&("function"!=typeof(n=e.constructor)||n!==Array&&!a(n.prototype)?r(n)&&null===(n=n[i])&&(n=void 0):n=void 0),new(void 0===n?Array:n)(0===t?0:t)}},function(e,t,n){var r=n(45),a=n(20),i=function(e){return function(t,n){var i,o,s=String(a(t)),l=r(n),c=s.length;return l<0||l>=c?e?"":void 0:(i=s.charCodeAt(l))<55296||i>56319||l+1===c||(o=s.charCodeAt(l+1))<56320||o>57343?e?s.charAt(l):i:e?s.slice(l,l+2):o-56320+(i-55296<<10)+65536}};e.exports={codeAt:i(!1),charAt:i(!0)}},function(e,t,n){"use strict";var r=n(7);e.exports=function(){var e=r(this),t="";return e.global&&(t+="g"),e.ignoreCase&&(t+="i"),e.multiline&&(t+="m"),e.dotAll&&(t+="s"),e.unicode&&(t+="u"),e.sticky&&(t+="y"),t}},function(e,t){e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children||(e.children=[]),Object.defineProperty(e,"loaded",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return e.i}}),e.webpackPolyfill=1),e}},function(e,t,n){var r=n(3),a=n(74),i=r["__core-js_shared__"]||a("__core-js_shared__",{});e.exports=i},function(e,t,n){var r=n(5),a=n(1),i=n(75);e.exports=!r&&!a((function(){return 7!=Object.defineProperty(i("div"),"a",{get:function(){return 7}}).a}))},function(e,t,n){var r=n(76);e.exports=r&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},function(e,t,n){var r=n(6),a=n(14),i=n(77).indexOf,o=n(39);e.exports=function(e,t){var n,s=a(e),l=0,c=[];for(n in s)!r(o,n)&&r(s,n)&&c.push(n);for(;t.length>l;)r(s,n=t[l++])&&(~i(c,n)||c.push(n));return c}},function(e,t,n){var r=n(45),a=Math.max,i=Math.min;e.exports=function(e,t){var n=r(e);return n<0?a(n+t,0):i(n,t)}},function(e,t,n){var r=n(19);e.exports=r("document","documentElement")},function(e,t,n){var r=n(3);e.exports=r},function(e,t,n){"use strict";var r=n(0),a=n(182),i=n(82),o=n(83),s=n(46),l=n(12),c=n(9),u=n(2),d=n(21),p=n(40),m=n(124),h=m.IteratorPrototype,f=m.BUGGY_SAFARI_ITERATORS,g=u("iterator"),y=function(){return this};e.exports=function(e,t,n,u,m,v,b){a(n,t,u);var k,w,x,T=function(e){if(e===m&&D)return D;if(!f&&e in j)return j[e];switch(e){case"keys":case"values":case"entries":return function(){return new n(this,e)}}return function(){return new n(this)}},I=t+" Iterator",q=!1,j=e.prototype,z=j[g]||j["@@iterator"]||m&&j[m],D=!f&&z||T(m),E="Array"==t&&j.entries||z;if(E&&(k=i(E.call(new e)),h!==Object.prototype&&k.next&&(d||i(k)===h||(o?o(k,h):"function"!=typeof k[g]&&l(k,g,y)),s(k,I,!0,!0),d&&(p[I]=y))),"values"==m&&z&&"values"!==z.name&&(q=!0,D=function(){return z.call(this)}),d&&!b||j[g]===D||l(j,g,D),p[t]=D,m)if(w={values:T("values"),keys:v?D:T("keys"),entries:T("entries")},b)for(x in w)(f||q||!(x in j))&&c(j,x,w[x]);else r({target:t,proto:!0,forced:f||q},w);return w}},function(e,t,n){var r=n(6),a=n(123),i=n(22),o=n(8);e.exports=function(e,t){for(var n=a(t),s=o.f,l=i.f,c=0;c<n.length;c++){var u=n[c];r(e,u)||s(e,u,l(t,u))}}},function(e,t,n){var r=n(19),a=n(49),i=n(81),o=n(7);e.exports=r("Reflect","ownKeys")||function(e){var t=a.f(o(e)),n=i.f;return n?t.concat(n(e)):t}},function(e,t,n){"use strict";var r,a,i,o=n(82),s=n(12),l=n(6),c=n(2),u=n(21),d=c("iterator"),p=!1;[].keys&&("next"in(i=[].keys())?(a=o(o(i)))!==Object.prototype&&(r=a):p=!0),null==r&&(r={}),u||l(r,d)||s(r,d,(function(){return this})),e.exports={IteratorPrototype:r,BUGGY_SAFARI_ITERATORS:p}},function(e,t,n){var r=n(1);e.exports=!r((function(){function e(){}return e.prototype.constructor=null,Object.getPrototypeOf(new e)!==e.prototype}))},function(e,t,n){var r=n(3);e.exports=r.Promise},function(e,t,n){var r=n(2),a=n(40),i=r("iterator"),o=Array.prototype;e.exports=function(e){return void 0!==e&&(a.Array===e||o[i]===e)}},function(e,t,n){var r=n(7);e.exports=function(e,t,n,a){try{return a?t(r(n)[0],n[1]):t(n)}catch(t){var i=e.return;throw void 0!==i&&r(i.call(e)),t}}},function(e,t,n){var r=n(2)("iterator"),a=!1;try{var i=0,o={next:function(){return{done:!!i++}},return:function(){a=!0}};o[r]=function(){return this},Array.from(o,(function(){throw 2}))}catch(e){}e.exports=function(e,t){if(!t&&!a)return!1;var n=!1;try{var i={};i[r]=function(){return{next:function(){return{done:n=!0}}}},e(i)}catch(e){}return n}},function(e,t,n){var r,a,i,o=n(3),s=n(1),l=n(16),c=n(47),u=n(119),d=n(75),p=n(131),m=o.location,h=o.setImmediate,f=o.clearImmediate,g=o.process,y=o.MessageChannel,v=o.Dispatch,b=0,k={},w=function(e){if(k.hasOwnProperty(e)){var t=k[e];delete k[e],t()}},x=function(e){return function(){w(e)}},T=function(e){w(e.data)},I=function(e){o.postMessage(e+"",m.protocol+"//"+m.host)};h&&f||(h=function(e){for(var t=[],n=1;arguments.length>n;)t.push(arguments[n++]);return k[++b]=function(){("function"==typeof e?e:Function(e)).apply(void 0,t)},r(b),b},f=function(e){delete k[e]},"process"==l(g)?r=function(e){g.nextTick(x(e))}:v&&v.now?r=function(e){v.now(x(e))}:y&&!p?(i=(a=new y).port2,a.port1.onmessage=T,r=c(i.postMessage,i,1)):!o.addEventListener||"function"!=typeof postMessage||o.importScripts||s(I)||"file:"===m.protocol?r="onreadystatechange"in d("script")?function(e){u.appendChild(d("script")).onreadystatechange=function(){u.removeChild(this),w(e)}}:function(e){setTimeout(x(e),0)}:(r=I,o.addEventListener("message",T,!1))),e.exports={set:h,clear:f}},function(e,t,n){var r=n(85);e.exports=/(iphone|ipod|ipad).*applewebkit/i.test(r)},function(e,t,n){var r=n(7),a=n(4),i=n(133);e.exports=function(e,t){if(r(e),a(t)&&t.constructor===e)return t;var n=i.f(e);return(0,n.resolve)(t),n.promise}},function(e,t,n){"use strict";var r=n(23),a=function(e){var t,n;this.promise=new e((function(e,r){if(void 0!==t||void 0!==n)throw TypeError("Bad Promise constructor");t=e,n=r})),this.resolve=r(t),this.reject=r(n)};e.exports.f=function(e){return new a(e)}},function(e,t){e.exports={CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0}},function(e,t,n){"use strict";var r=n(31).forEach,a=n(33),i=n(18),o=a("forEach"),s=i("forEach");e.exports=o&&s?[].forEach:function(e){return r(this,e,arguments.length>1?arguments[1]:void 0)}},function(e,t,n){var r=n(1);e.exports=!r((function(){return Object.isExtensible(Object.preventExtensions({}))}))},function(e,t,n){var r=n(0),a=n(1),i=n(11),o=n(82),s=n(125);r({target:"Object",stat:!0,forced:a((function(){o(1)})),sham:!s},{getPrototypeOf:function(e){return o(i(e))}})},function(e,t,n){var r=n(175);e.exports=function(e){if(r(e))throw TypeError("The method doesn't accept regular expressions");return e}},function(e,t,n){var r=n(2)("match");e.exports=function(e){var t=/./;try{"/./"[e](t)}catch(n){try{return t[r]=!1,"/./"[e](t)}catch(e){}}return!1}},function(e,t,n){n(0)({target:"Object",stat:!0,sham:!n(5)},{create:n(28)})},function(e,t,n){var r=n(2);t.f=r},function(e,t,n){var r=n(120),a=n(6),i=n(141),o=n(8).f;e.exports=function(e){var t=r.Symbol||(r.Symbol={});a(t,e)||o(t,e,{value:i.f(e)})}},function(e,t,n){var r=n(0),a=n(190);r({target:"Array",stat:!0,forced:!n(129)((function(e){Array.from(e)}))},{from:a})},function(e,t){e.exports=function(e,t){for(var n=-1,r=t.length,a=e.length;++n<r;)e[a+n]=t[n];return e}},function(e,t){var n="object"==typeof global&&global&&global.Object===Object&&global;e.exports=n},function(e,t,n){var r=n(58),a=n(223),i=n(224),o=n(225),s=n(226),l=n(227);function c(e){var t=this.__data__=new r(e);this.size=t.size}c.prototype.clear=a,c.prototype.delete=i,c.prototype.get=o,c.prototype.has=s,c.prototype.set=l,e.exports=c},function(e,t){e.exports=function(e,t){return e===t||e!=e&&t!=t}},function(e,t,n){var r=n(36),a=n(91);e.exports=function(e){if(!a(e))return!1;var t=r(e);return"[object Function]"==t||"[object GeneratorFunction]"==t||"[object AsyncFunction]"==t||"[object Proxy]"==t}},function(e,t){var n=Function.prototype.toString;e.exports=function(e){if(null!=e){try{return n.call(e)}catch(e){}try{return e+""}catch(e){}}return""}},function(e,t,n){var r=n(244),a=n(29);e.exports=function e(t,n,i,o,s){return t===n||(null==t||null==n||!a(t)&&!a(n)?t!=t&&n!=n:r(t,n,i,o,e,s))}},function(e,t,n){var r=n(152),a=n(247),i=n(153);e.exports=function(e,t,n,o,s,l){var c=1&n,u=e.length,d=t.length;if(u!=d&&!(c&&d>u))return!1;var p=l.get(e);if(p&&l.get(t))return p==t;var m=-1,h=!0,f=2&n?new r:void 0;for(l.set(e,t),l.set(t,e);++m<u;){var g=e[m],y=t[m];if(o)var v=c?o(y,g,m,t,e,l):o(g,y,m,e,t,l);if(void 0!==v){if(v)continue;h=!1;break}if(f){if(!a(t,(function(e,t){if(!i(f,t)&&(g===e||s(g,e,n,o,l)))return f.push(t)}))){h=!1;break}}else if(g!==y&&!s(g,y,n,o,l)){h=!1;break}}return l.delete(e),l.delete(t),h}},function(e,t,n){var r=n(92),a=n(245),i=n(246);function o(e){var t=-1,n=null==e?0:e.length;for(this.__data__=new r;++t<n;)this.add(e[t])}o.prototype.add=o.prototype.push=a,o.prototype.has=i,e.exports=o},function(e,t){e.exports=function(e,t){return e.has(t)}},function(e,t,n){var r=n(257),a=n(263),i=n(158);e.exports=function(e){return i(e)?r(e):a(e)}},function(e,t,n){(function(e){var r=n(17),a=n(259),i=t&&!t.nodeType&&t,o=i&&"object"==typeof e&&e&&!e.nodeType&&e,s=o&&o.exports===i?r.Buffer:void 0,l=(s?s.isBuffer:void 0)||a;e.exports=l}).call(this,n(113)(e))},function(e,t){var n=/^(?:0|[1-9]\d*)$/;e.exports=function(e,t){var r=typeof e;return!!(t=null==t?9007199254740991:t)&&("number"==r||"symbol"!=r&&n.test(e))&&e>-1&&e%1==0&&e<t}},function(e,t,n){var r=n(260),a=n(261),i=n(262),o=i&&i.isTypedArray,s=o?a(o):r;e.exports=s},function(e,t,n){var r=n(148),a=n(94);e.exports=function(e){return null!=e&&a(e.length)&&!r(e)}},function(e,t,n){var r=n(24)(n(17),"Set");e.exports=r},function(e,t,n){var r=n(91);e.exports=function(e){return e==e&&!r(e)}},function(e,t){e.exports=function(e,t){return function(n){return null!=n&&(n[e]===t&&(void 0!==t||e in Object(n)))}}},function(e,t,n){var r=n(163),a=n(62);e.exports=function(e,t){for(var n=0,i=(t=r(t,e)).length;null!=e&&n<i;)e=e[a(t[n++])];return n&&n==i?e:void 0}},function(e,t,n){var r=n(15),a=n(95),i=n(274),o=n(277);e.exports=function(e,t){return r(e)?e:a(e,t)?[e]:i(o(e))}},function(e,t,n){"use strict";var r=n(5),a=n(3),i=n(70),o=n(9),s=n(6),l=n(16),c=n(192),u=n(38),d=n(1),p=n(28),m=n(49).f,h=n(22).f,f=n(8).f,g=n(179).trim,y=a.Number,v=y.prototype,b="Number"==l(p(v)),k=function(e){var t,n,r,a,i,o,s,l,c=u(e,!1);if("string"==typeof c&&c.length>2)if(43===(t=(c=g(c)).charCodeAt(0))||45===t){if(88===(n=c.charCodeAt(2))||120===n)return NaN}else if(48===t){switch(c.charCodeAt(1)){case 66:case 98:r=2,a=49;break;case 79:case 111:r=8,a=55;break;default:return+c}for(o=(i=c.slice(2)).length,s=0;s<o;s++)if((l=i.charCodeAt(s))<48||l>a)return NaN;return parseInt(i,r)}return+c};if(i("Number",!y(" 0o1")||!y("0b1")||y("+0x1"))){for(var w,x=function(e){var t=arguments.length<1?0:e,n=this;return n instanceof x&&(b?d((function(){v.valueOf.call(n)})):"Number"!=l(n))?c(new y(k(t)),n,x):k(t)},T=r?m(y):"MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger".split(","),I=0;T.length>I;I++)s(y,w=T[I])&&!s(x,w)&&f(x,w,h(y,w));x.prototype=v,v.constructor=x,o(a,"Number",x)}},function(e,t,n){n(0)({target:"Object",stat:!0},{setPrototypeOf:n(83)})},function(e,t,n){var r=n(0),a=n(19),i=n(23),o=n(7),s=n(4),l=n(28),c=n(311),u=n(1),d=a("Reflect","construct"),p=u((function(){function e(){}return!(d((function(){}),[],e)instanceof e)})),m=!u((function(){d((function(){}))})),h=p||m;r({target:"Reflect",stat:!0,forced:h,sham:h},{construct:function(e,t){i(e),o(t);var n=arguments.length<3?e:i(arguments[2]);if(m&&!p)return d(e,t,n);if(e==n){switch(t.length){case 0:return new e;case 1:return new e(t[0]);case 2:return new e(t[0],t[1]);case 3:return new e(t[0],t[1],t[2]);case 4:return new e(t[0],t[1],t[2],t[3])}var r=[null];return r.push.apply(r,t),new(c.apply(e,r))}var a=n.prototype,u=l(s(a)?a:Object.prototype),h=Function.apply.call(e,u,t);return s(h)?h:u}})},function(e,t,n){var r=n(210),a=n(215),i=n(286),o=n(294),s=n(303),l=n(191),c=i((function(e){var t=l(e);return s(t)&&(t=void 0),o(r(e,1,s,!0),a(t,2))}));e.exports=c},function(e,t,n){!function(){"use strict";e.exports={polyfill:function(){var e=window,t=document;if(!("scrollBehavior"in t.documentElement.style)||!0===e.__forceSmoothScrollPolyfill__){var n,r=e.HTMLElement||e.Element,a={scroll:e.scroll||e.scrollTo,scrollBy:e.scrollBy,elementScroll:r.prototype.scroll||s,scrollIntoView:r.prototype.scrollIntoView},i=e.performance&&e.performance.now?e.performance.now.bind(e.performance):Date.now,o=(n=e.navigator.userAgent,new RegExp(["MSIE ","Trident/","Edge/"].join("|")).test(n)?1:0);e.scroll=e.scrollTo=function(){void 0!==arguments[0]&&(!0!==l(arguments[0])?h.call(e,t.body,void 0!==arguments[0].left?~~arguments[0].left:e.scrollX||e.pageXOffset,void 0!==arguments[0].top?~~arguments[0].top:e.scrollY||e.pageYOffset):a.scroll.call(e,void 0!==arguments[0].left?arguments[0].left:"object"!=typeof arguments[0]?arguments[0]:e.scrollX||e.pageXOffset,void 0!==arguments[0].top?arguments[0].top:void 0!==arguments[1]?arguments[1]:e.scrollY||e.pageYOffset))},e.scrollBy=function(){void 0!==arguments[0]&&(l(arguments[0])?a.scrollBy.call(e,void 0!==arguments[0].left?arguments[0].left:"object"!=typeof arguments[0]?arguments[0]:0,void 0!==arguments[0].top?arguments[0].top:void 0!==arguments[1]?arguments[1]:0):h.call(e,t.body,~~arguments[0].left+(e.scrollX||e.pageXOffset),~~arguments[0].top+(e.scrollY||e.pageYOffset)))},r.prototype.scroll=r.prototype.scrollTo=function(){if(void 0!==arguments[0])if(!0!==l(arguments[0])){var e=arguments[0].left,t=arguments[0].top;h.call(this,this,void 0===e?this.scrollLeft:~~e,void 0===t?this.scrollTop:~~t)}else{if("number"==typeof arguments[0]&&void 0===arguments[1])throw new SyntaxError("Value could not be converted");a.elementScroll.call(this,void 0!==arguments[0].left?~~arguments[0].left:"object"!=typeof arguments[0]?~~arguments[0]:this.scrollLeft,void 0!==arguments[0].top?~~arguments[0].top:void 0!==arguments[1]?~~arguments[1]:this.scrollTop)}},r.prototype.scrollBy=function(){void 0!==arguments[0]&&(!0!==l(arguments[0])?this.scroll({left:~~arguments[0].left+this.scrollLeft,top:~~arguments[0].top+this.scrollTop,behavior:arguments[0].behavior}):a.elementScroll.call(this,void 0!==arguments[0].left?~~arguments[0].left+this.scrollLeft:~~arguments[0]+this.scrollLeft,void 0!==arguments[0].top?~~arguments[0].top+this.scrollTop:~~arguments[1]+this.scrollTop))},r.prototype.scrollIntoView=function(){if(!0!==l(arguments[0])){var n=p(this),r=n.getBoundingClientRect(),i=this.getBoundingClientRect();n!==t.body?(h.call(this,n,n.scrollLeft+i.left-r.left,n.scrollTop+i.top-r.top),"fixed"!==e.getComputedStyle(n).position&&e.scrollBy({left:r.left,top:r.top,behavior:"smooth"})):e.scrollBy({left:i.left,top:i.top,behavior:"smooth"})}else a.scrollIntoView.call(this,void 0===arguments[0]||arguments[0])}}function s(e,t){this.scrollLeft=e,this.scrollTop=t}function l(e){if(null===e||"object"!=typeof e||void 0===e.behavior||"auto"===e.behavior||"instant"===e.behavior)return!0;if("object"==typeof e&&"smooth"===e.behavior)return!1;throw new TypeError("behavior member of ScrollOptions "+e.behavior+" is not a valid value for enumeration ScrollBehavior.")}function c(e,t){return"Y"===t?e.clientHeight+o<e.scrollHeight:"X"===t?e.clientWidth+o<e.scrollWidth:void 0}function u(t,n){var r=e.getComputedStyle(t,null)["overflow"+n];return"auto"===r||"scroll"===r}function d(e){var t=c(e,"Y")&&u(e,"Y"),n=c(e,"X")&&u(e,"X");return t||n}function p(e){for(;e!==t.body&&!1===d(e);)e=e.parentNode||e.host;return e}function m(t){var n,r,a,o,s=(i()-t.startTime)/468;o=s=s>1?1:s,n=.5*(1-Math.cos(Math.PI*o)),r=t.startX+(t.x-t.startX)*n,a=t.startY+(t.y-t.startY)*n,t.method.call(t.scrollable,r,a),r===t.x&&a===t.y||e.requestAnimationFrame(m.bind(e,t))}function h(n,r,o){var l,c,u,d,p=i();n===t.body?(l=e,c=e.scrollX||e.pageXOffset,u=e.scrollY||e.pageYOffset,d=a.scroll):(l=n,c=n.scrollLeft,u=n.scrollTop,d=s),m({scrollable:l,method:d,startTime:p,startX:c,startY:u,x:r,y:o})}}}}()},function(e,t,n){"use strict";var r=n(0),a=n(31).some,i=n(33),o=n(18),s=i("some"),l=o("some");r({target:"Array",proto:!0,forced:!s||!l},{some:function(e){return a(this,e,arguments.length>1?arguments[1]:void 0)}})},function(e,t,n){"use strict";n(44);var r=n(9),a=n(1),i=n(2),o=n(71),s=n(12),l=i("species"),c=!a((function(){var e=/./;return e.exec=function(){var e=[];return e.groups={a:"7"},e},"7"!=="".replace(e,"$<a>")})),u="$0"==="a".replace(/./,"$0"),d=i("replace"),p=!!/./[d]&&""===/./[d]("a","$0"),m=!a((function(){var e=/(?:)/,t=e.exec;e.exec=function(){return t.apply(this,arguments)};var n="ab".split(e);return 2!==n.length||"a"!==n[0]||"b"!==n[1]}));e.exports=function(e,t,n,d){var h=i(e),f=!a((function(){var t={};return t[h]=function(){return 7},7!=""[e](t)})),g=f&&!a((function(){var t=!1,n=/a/;return"split"===e&&((n={}).constructor={},n.constructor[l]=function(){return n},n.flags="",n[h]=/./[h]),n.exec=function(){return t=!0,null},n[h](""),!t}));if(!f||!g||"replace"===e&&(!c||!u||p)||"split"===e&&!m){var y=/./[h],v=n(h,""[e],(function(e,t,n,r,a){return t.exec===o?f&&!a?{done:!0,value:y.call(t,n,r)}:{done:!0,value:e.call(n,t,r)}:{done:!1}}),{REPLACE_KEEPS_$0:u,REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE:p}),b=v[0],k=v[1];r(String.prototype,e,b),r(RegExp.prototype,h,2==t?function(e,t){return k.call(e,this,t)}:function(e){return k.call(e,this)})}d&&s(RegExp.prototype[h],"sham",!0)}},function(e,t,n){var r=n(16),a=n(71);e.exports=function(e,t){var n=e.exec;if("function"==typeof n){var i=n.call(e,t);if("object"!=typeof i)throw TypeError("RegExp exec method returned something other than an Object or null");return i}if("RegExp"!==r(e))throw TypeError("RegExp#exec called on incompatible receiver");return a.call(e,t)}},function(e,t,n){"use strict";var r=n(0),a=n(77).indexOf,i=n(33),o=n(18),s=[].indexOf,l=!!s&&1/[1].indexOf(1,-0)<0,c=i("indexOf"),u=o("indexOf",{ACCESSORS:!0,1:0});r({target:"Array",proto:!0,forced:l||!c||!u},{indexOf:function(e){return l?s.apply(this,arguments)||0:a(this,e,arguments.length>1?arguments[1]:void 0)}})},function(e,t,n){var r=n(5),a=n(8),i=n(7),o=n(52);e.exports=r?Object.defineProperties:function(e,t){i(e);for(var n,r=o(t),s=r.length,l=0;s>l;)a.f(e,n=r[l++],t[n]);return e}},function(e,t){e.exports=function(e,t,n){if(!(e instanceof t))throw TypeError("Incorrect "+(n?n+" ":"")+"invocation");return e}},function(e,t,n){var r=n(4),a=n(16),i=n(2)("match");e.exports=function(e){var t;return r(e)&&(void 0!==(t=e[i])?!!t:"RegExp"==a(e))}},function(e,t,n){"use strict";var r=n(111).charAt;e.exports=function(e,t,n){return t+(n?r(e,t).length:1)}},function(e,t,n){"use strict";var r=n(0),a=n(1),i=n(35),o=n(4),s=n(11),l=n(13),c=n(55),u=n(110),d=n(54),p=n(2),m=n(86),h=p("isConcatSpreadable"),f=m>=51||!a((function(){var e=[];return e[h]=!1,e.concat()[0]!==e})),g=d("concat"),y=function(e){if(!o(e))return!1;var t=e[h];return void 0!==t?!!t:i(e)};r({target:"Array",proto:!0,forced:!f||!g},{concat:function(e){var t,n,r,a,i,o=s(this),d=u(o,0),p=0;for(t=-1,r=arguments.length;t<r;t++)if(y(i=-1===t?o:arguments[t])){if(p+(a=l(i.length))>9007199254740991)throw TypeError("Maximum allowed index exceeded");for(n=0;n<a;n++,p++)n in i&&c(d,p,i[n])}else{if(p>=9007199254740991)throw TypeError("Maximum allowed index exceeded");c(d,p++,i)}return d.length=p,d}})},function(e,t,n){"use strict";var r=n(0),a=n(37),i=n(14),o=n(33),s=[].join,l=a!=Object,c=o("join",",");r({target:"Array",proto:!0,forced:l||!c},{join:function(e){return s.call(i(this),void 0===e?",":e)}})},function(e,t,n){var r=n(20),a="["+n(180)+"]",i=RegExp("^"+a+a+"*"),o=RegExp(a+a+"*$"),s=function(e){return function(t){var n=String(r(t));return 1&e&&(n=n.replace(i,"")),2&e&&(n=n.replace(o,"")),n}};e.exports={start:s(1),end:s(2),trim:s(3)}},function(e,t){e.exports="\t\n\v\f\r                　\u2028\u2029\ufeff"},function(e,t,n){var r=n(0),a=n(5);r({target:"Object",stat:!0,forced:!a,sham:!a},{defineProperty:n(8).f})},function(e,t,n){"use strict";var r=n(124).IteratorPrototype,a=n(28),i=n(34),o=n(46),s=n(40),l=function(){return this};e.exports=function(e,t,n){var c=t+" Iterator";return e.prototype=a(r,{next:i(1,n)}),o(e,c,!1,!0),s[c]=l,e}},function(e,t,n){var r=n(9);e.exports=function(e,t,n){for(var a in t)r(e,a,t[a],n);return e}},function(e,t,n){"use strict";var r=n(19),a=n(8),i=n(2),o=n(5),s=i("species");e.exports=function(e){var t=r(e),n=a.f;o&&t&&!t[s]&&n(t,s,{configurable:!0,get:function(){return this}})}},function(e,t,n){"use strict";var r=n(5),a=n(1),i=n(52),o=n(81),s=n(80),l=n(11),c=n(37),u=Object.assign,d=Object.defineProperty;e.exports=!u||a((function(){if(r&&1!==u({b:1},u(d({},"a",{enumerable:!0,get:function(){d(this,"b",{value:3,enumerable:!1})}}),{b:2})).b)return!0;var e={},t={},n=Symbol();return e[n]=7,"abcdefghijklmnopqrst".split("").forEach((function(e){t[e]=e})),7!=u({},e)[n]||"abcdefghijklmnopqrst"!=i(u({},t)).join("")}))?function(e,t){for(var n=l(e),a=arguments.length,u=1,d=o.f,p=s.f;a>u;)for(var m,h=c(arguments[u++]),f=d?i(h).concat(d(h)):i(h),g=f.length,y=0;g>y;)m=f[y++],r&&!p.call(h,m)||(n[m]=h[m]);return n}:u},function(e,t,n){var r=n(0),a=n(5),i=n(123),o=n(14),s=n(22),l=n(55);r({target:"Object",stat:!0,sham:!a},{getOwnPropertyDescriptors:function(e){for(var t,n,r=o(e),a=s.f,c=i(r),u={},d=0;c.length>d;)void 0!==(n=a(r,t=c[d++]))&&l(u,t,n);return u}})},function(e,t,n){"use strict";var r=n(0),a=n(77).includes,i=n(100);r({target:"Array",proto:!0,forced:!n(18)("indexOf",{ACCESSORS:!0,1:0})},{includes:function(e){return a(this,e,arguments.length>1?arguments[1]:void 0)}}),i("includes")},function(e,t,n){"use strict";var r=n(1);function a(e,t){return RegExp(e,t)}t.UNSUPPORTED_Y=r((function(){var e=a("a","y");return e.lastIndex=2,null!=e.exec("abcd")})),t.BROKEN_CARET=r((function(){var e=a("^r","gy");return e.lastIndex=2,null!=e.exec("str")}))},function(e,t,n){"use strict";var r=n(0),a=n(138),i=n(20);r({target:"String",proto:!0,forced:!n(139)("includes")},{includes:function(e){return!!~String(i(this)).indexOf(a(e),arguments.length>1?arguments[1]:void 0)}})},function(e,t,n){"use strict";var r=n(47),a=n(11),i=n(128),o=n(127),s=n(13),l=n(55),c=n(101);e.exports=function(e){var t,n,u,d,p,m,h=a(e),f="function"==typeof this?this:Array,g=arguments.length,y=g>1?arguments[1]:void 0,v=void 0!==y,b=c(h),k=0;if(v&&(y=r(y,g>2?arguments[2]:void 0,2)),null==b||f==Array&&o(b))for(n=new f(t=s(h.length));t>k;k++)m=v?y(h[k],k):h[k],l(n,k,m);else for(p=(d=b.call(h)).next,n=new f;!(u=p.call(d)).done;k++)m=v?i(d,y,[u.value,k],!0):u.value,l(n,k,m);return n.length=k,n}},function(e,t){e.exports=function(e){var t=null==e?0:e.length;return t?e[t-1]:void 0}},function(e,t,n){var r=n(4),a=n(83);e.exports=function(e,t,n){var i,o;return a&&"function"==typeof(i=t.constructor)&&i!==n&&r(o=i.prototype)&&o!==n.prototype&&a(e,o),e}},function(e,t,n){e.exports=n(313)},function(e,t,n){var r=n(3),a=n(79),i=r.WeakMap;e.exports="function"==typeof i&&/native code/.test(a(i))},function(e,t,n){var r=n(4);e.exports=function(e){if(!r(e)&&null!==e)throw TypeError("Can't set "+String(e)+" as a prototype");return e}},function(e,t,n){"use strict";var r,a,i,o,s=n(0),l=n(21),c=n(3),u=n(19),d=n(126),p=n(9),m=n(183),h=n(46),f=n(184),g=n(4),y=n(23),v=n(174),b=n(16),k=n(79),w=n(197),x=n(129),T=n(109),I=n(130).set,q=n(198),j=n(132),z=n(199),D=n(133),E=n(200),_=n(30),S=n(70),R=n(2),C=n(86),O=R("species"),P="Promise",A=_.get,L=_.set,K=_.getterFor(P),F=d,M=c.TypeError,N=c.document,U=c.process,B=u("fetch"),$=D.f,W=$,G="process"==b(U),V=!!(N&&N.createEvent&&c.dispatchEvent),H=S(P,(function(){if(!(k(F)!==String(F))){if(66===C)return!0;if(!G&&"function"!=typeof PromiseRejectionEvent)return!0}if(l&&!F.prototype.finally)return!0;if(C>=51&&/native code/.test(F))return!1;var e=F.resolve(1),t=function(e){e((function(){}),(function(){}))};return(e.constructor={})[O]=t,!(e.then((function(){}))instanceof t)})),Q=H||!x((function(e){F.all(e).catch((function(){}))})),J=function(e){var t;return!(!g(e)||"function"!=typeof(t=e.then))&&t},Y=function(e,t,n){if(!t.notified){t.notified=!0;var r=t.reactions;q((function(){for(var a=t.value,i=1==t.state,o=0;r.length>o;){var s,l,c,u=r[o++],d=i?u.ok:u.fail,p=u.resolve,m=u.reject,h=u.domain;try{d?(i||(2===t.rejection&&te(e,t),t.rejection=1),!0===d?s=a:(h&&h.enter(),s=d(a),h&&(h.exit(),c=!0)),s===u.promise?m(M("Promise-chain cycle")):(l=J(s))?l.call(s,p,m):p(s)):m(a)}catch(e){h&&!c&&h.exit(),m(e)}}t.reactions=[],t.notified=!1,n&&!t.rejection&&Z(e,t)}))}},X=function(e,t,n){var r,a;V?((r=N.createEvent("Event")).promise=t,r.reason=n,r.initEvent(e,!1,!0),c.dispatchEvent(r)):r={promise:t,reason:n},(a=c["on"+e])?a(r):"unhandledrejection"===e&&z("Unhandled promise rejection",n)},Z=function(e,t){I.call(c,(function(){var n,r=t.value;if(ee(t)&&(n=E((function(){G?U.emit("unhandledRejection",r,e):X("unhandledrejection",e,r)})),t.rejection=G||ee(t)?2:1,n.error))throw n.value}))},ee=function(e){return 1!==e.rejection&&!e.parent},te=function(e,t){I.call(c,(function(){G?U.emit("rejectionHandled",e):X("rejectionhandled",e,t.value)}))},ne=function(e,t,n,r){return function(a){e(t,n,a,r)}},re=function(e,t,n,r){t.done||(t.done=!0,r&&(t=r),t.value=n,t.state=2,Y(e,t,!0))},ae=function(e,t,n,r){if(!t.done){t.done=!0,r&&(t=r);try{if(e===n)throw M("Promise can't be resolved itself");var a=J(n);a?q((function(){var r={done:!1};try{a.call(n,ne(ae,e,r,t),ne(re,e,r,t))}catch(n){re(e,r,n,t)}})):(t.value=n,t.state=1,Y(e,t,!1))}catch(n){re(e,{done:!1},n,t)}}};H&&(F=function(e){v(this,F,P),y(e),r.call(this);var t=A(this);try{e(ne(ae,this,t),ne(re,this,t))}catch(e){re(this,t,e)}},(r=function(e){L(this,{type:P,done:!1,notified:!1,parent:!1,reactions:[],rejection:!1,state:0,value:void 0})}).prototype=m(F.prototype,{then:function(e,t){var n=K(this),r=$(T(this,F));return r.ok="function"!=typeof e||e,r.fail="function"==typeof t&&t,r.domain=G?U.domain:void 0,n.parent=!0,n.reactions.push(r),0!=n.state&&Y(this,n,!1),r.promise},catch:function(e){return this.then(void 0,e)}}),a=function(){var e=new r,t=A(e);this.promise=e,this.resolve=ne(ae,e,t),this.reject=ne(re,e,t)},D.f=$=function(e){return e===F||e===i?new a(e):W(e)},l||"function"!=typeof d||(o=d.prototype.then,p(d.prototype,"then",(function(e,t){var n=this;return new F((function(e,t){o.call(n,e,t)})).then(e,t)}),{unsafe:!0}),"function"==typeof B&&s({global:!0,enumerable:!0,forced:!0},{fetch:function(e){return j(F,B.apply(c,arguments))}}))),s({global:!0,wrap:!0,forced:H},{Promise:F}),h(F,P,!1,!0),f(P),i=u(P),s({target:P,stat:!0,forced:H},{reject:function(e){var t=$(this);return t.reject.call(void 0,e),t.promise}}),s({target:P,stat:!0,forced:l||H},{resolve:function(e){return j(l&&this===i?F:this,e)}}),s({target:P,stat:!0,forced:Q},{all:function(e){var t=this,n=$(t),r=n.resolve,a=n.reject,i=E((function(){var n=y(t.resolve),i=[],o=0,s=1;w(e,(function(e){var l=o++,c=!1;i.push(void 0),s++,n.call(t,e).then((function(e){c||(c=!0,i[l]=e,--s||r(i))}),a)})),--s||r(i)}));return i.error&&a(i.value),n.promise},race:function(e){var t=this,n=$(t),r=n.reject,a=E((function(){var a=y(t.resolve);w(e,(function(e){a.call(t,e).then(n.resolve,r)}))}));return a.error&&r(a.value),n.promise}})},function(e,t,n){var r=n(7),a=n(127),i=n(13),o=n(47),s=n(101),l=n(128),c=function(e,t){this.stopped=e,this.result=t};(e.exports=function(e,t,n,u,d){var p,m,h,f,g,y,v,b=o(t,n,u?2:1);if(d)p=e;else{if("function"!=typeof(m=s(e)))throw TypeError("Target is not iterable");if(a(m)){for(h=0,f=i(e.length);f>h;h++)if((g=u?b(r(v=e[h])[0],v[1]):b(e[h]))&&g instanceof c)return g;return new c(!1)}p=m.call(e)}for(y=p.next;!(v=y.call(p)).done;)if("object"==typeof(g=l(p,b,v.value,u))&&g&&g instanceof c)return g;return new c(!1)}).stop=function(e){return new c(!0,e)}},function(e,t,n){var r,a,i,o,s,l,c,u,d=n(3),p=n(22).f,m=n(16),h=n(130).set,f=n(131),g=d.MutationObserver||d.WebKitMutationObserver,y=d.process,v=d.Promise,b="process"==m(y),k=p(d,"queueMicrotask"),w=k&&k.value;w||(r=function(){var e,t;for(b&&(e=y.domain)&&e.exit();a;){t=a.fn,a=a.next;try{t()}catch(e){throw a?o():i=void 0,e}}i=void 0,e&&e.enter()},b?o=function(){y.nextTick(r)}:g&&!f?(s=!0,l=document.createTextNode(""),new g(r).observe(l,{characterData:!0}),o=function(){l.data=s=!s}):v&&v.resolve?(c=v.resolve(void 0),u=c.then,o=function(){u.call(c,r)}):o=function(){h.call(d,r)}),e.exports=w||function(e){var t={fn:e,next:void 0};i&&(i.next=t),a||(a=t,o()),i=t}},function(e,t,n){var r=n(3);e.exports=function(e,t){var n=r.console;n&&n.error&&(1===arguments.length?n.error(e):n.error(e,t))}},function(e,t){e.exports=function(e){try{return{error:!1,value:e()}}catch(e){return{error:!0,value:e}}}},function(e,t,n){var r=n(0),a=n(185);r({target:"Object",stat:!0,forced:Object.assign!==a},{assign:a})},function(e,t,n){"use strict";var r=n(0),a=n(21),i=n(126),o=n(1),s=n(19),l=n(109),c=n(132),u=n(9);r({target:"Promise",proto:!0,real:!0,forced:!!i&&o((function(){i.prototype.finally.call({then:function(){}},(function(){}))}))},{finally:function(e){var t=l(this,s("Promise")),n="function"==typeof e;return this.then(n?function(n){return c(t,e()).then((function(){return n}))}:e,n?function(n){return c(t,e()).then((function(){throw n}))}:e)}}),a||"function"!=typeof i||i.prototype.finally||u(i.prototype,"finally",s("Promise").prototype.finally)},function(e,t,n){"use strict";var r=n(84),a=n(108);e.exports=r?{}.toString:function(){return"[object "+a(this)+"]"}},function(e,t,n){"use strict";var r=n(0),a=n(205).left,i=n(33),o=n(18),s=i("reduce"),l=o("reduce",{1:0});r({target:"Array",proto:!0,forced:!s||!l},{reduce:function(e){return a(this,e,arguments.length,arguments.length>1?arguments[1]:void 0)}})},function(e,t,n){var r=n(23),a=n(11),i=n(37),o=n(13),s=function(e){return function(t,n,s,l){r(n);var c=a(t),u=i(c),d=o(c.length),p=e?d-1:0,m=e?-1:1;if(s<2)for(;;){if(p in u){l=u[p],p+=m;break}if(p+=m,e?p<0:d<=p)throw TypeError("Reduce of empty array with no initial value")}for(;e?p>=0:d>p;p+=m)p in u&&(l=n(l,u[p],p,c));return l}};e.exports={left:s(!1),right:s(!0)}},function(e,t,n){var r=n(0),a=n(136),i=n(1),o=n(4),s=n(207).onFreeze,l=Object.freeze;r({target:"Object",stat:!0,forced:i((function(){l(1)})),sham:!a},{freeze:function(e){return l&&o(e)?l(s(e)):e}})},function(e,t,n){var r=n(39),a=n(4),i=n(6),o=n(8).f,s=n(51),l=n(136),c=s("meta"),u=0,d=Object.isExtensible||function(){return!0},p=function(e){o(e,c,{value:{objectID:"O"+ ++u,weakData:{}}})},m=e.exports={REQUIRED:!1,fastKey:function(e,t){if(!a(e))return"symbol"==typeof e?e:("string"==typeof e?"S":"P")+e;if(!i(e,c)){if(!d(e))return"F";if(!t)return"E";p(e)}return e[c].objectID},getWeakData:function(e,t){if(!i(e,c)){if(!d(e))return!0;if(!t)return!1;p(e)}return e[c].weakData},onFreeze:function(e){return l&&m.REQUIRED&&d(e)&&!i(e,c)&&p(e),e}};r[c]=!0},function(e,t,n){"use strict";var r,a=n(0),i=n(22).f,o=n(13),s=n(138),l=n(20),c=n(139),u=n(21),d="".startsWith,p=Math.min,m=c("startsWith");a({target:"String",proto:!0,forced:!!(u||m||(r=i(String.prototype,"startsWith"),!r||r.writable))&&!m},{startsWith:function(e){var t=String(l(this));s(e);var n=o(p(arguments.length>1?arguments[1]:void 0,t.length)),r=String(e);return d?d.call(t,r,n):t.slice(n,n+r.length)===r}})},function(e,t,n){var r=n(14),a=n(49).f,i={}.toString,o="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];e.exports.f=function(e){return o&&"[object Window]"==i.call(e)?function(e){try{return a(e)}catch(e){return o.slice()}}(e):a(r(e))}},function(e,t,n){var r=n(144),a=n(211);e.exports=function e(t,n,i,o,s){var l=-1,c=t.length;for(i||(i=a),s||(s=[]);++l<c;){var u=t[l];n>0&&i(u)?n>1?e(u,n-1,i,o,s):r(s,u):o||(s[s.length]=u)}return s}},function(e,t,n){var r=n(41),a=n(89),i=n(15),o=r?r.isConcatSpreadable:void 0;e.exports=function(e){return i(e)||a(e)||!!(o&&e&&e[o])}},function(e,t,n){var r=n(36),a=n(29);e.exports=function(e){return a(e)&&"[object Arguments]"==r(e)}},function(e,t,n){var r=n(41),a=Object.prototype,i=a.hasOwnProperty,o=a.toString,s=r?r.toStringTag:void 0;e.exports=function(e){var t=i.call(e,s),n=e[s];try{e[s]=void 0;var r=!0}catch(e){}var a=o.call(e);return r&&(t?e[s]=n:delete e[s]),a}},function(e,t){var n=Object.prototype.toString;e.exports=function(e){return n.call(e)}},function(e,t,n){var r=n(216),a=n(272),i=n(97),o=n(15),s=n(283);e.exports=function(e){return"function"==typeof e?e:null==e?i:"object"==typeof e?o(e)?a(e[0],e[1]):r(e):s(e)}},function(e,t,n){var r=n(217),a=n(271),i=n(161);e.exports=function(e){var t=a(e);return 1==t.length&&t[0][2]?i(t[0][0],t[0][1]):function(n){return n===e||r(n,e,t)}}},function(e,t,n){var r=n(146),a=n(150);e.exports=function(e,t,n,i){var o=n.length,s=o,l=!i;if(null==e)return!s;for(e=Object(e);o--;){var c=n[o];if(l&&c[2]?c[1]!==e[c[0]]:!(c[0]in e))return!1}for(;++o<s;){var u=(c=n[o])[0],d=e[u],p=c[1];if(l&&c[2]){if(void 0===d&&!(u in e))return!1}else{var m=new r;if(i)var h=i(d,p,u,e,t,m);if(!(void 0===h?a(p,d,3,i,m):h))return!1}}return!0}},function(e,t){e.exports=function(){this.__data__=[],this.size=0}},function(e,t,n){var r=n(59),a=Array.prototype.splice;e.exports=function(e){var t=this.__data__,n=r(t,e);return!(n<0)&&(n==t.length-1?t.pop():a.call(t,n,1),--this.size,!0)}},function(e,t,n){var r=n(59);e.exports=function(e){var t=this.__data__,n=r(t,e);return n<0?void 0:t[n][1]}},function(e,t,n){var r=n(59);e.exports=function(e){return r(this.__data__,e)>-1}},function(e,t,n){var r=n(59);e.exports=function(e,t){var n=this.__data__,a=r(n,e);return a<0?(++this.size,n.push([e,t])):n[a][1]=t,this}},function(e,t,n){var r=n(58);e.exports=function(){this.__data__=new r,this.size=0}},function(e,t){e.exports=function(e){var t=this.__data__,n=t.delete(e);return this.size=t.size,n}},function(e,t){e.exports=function(e){return this.__data__.get(e)}},function(e,t){e.exports=function(e){return this.__data__.has(e)}},function(e,t,n){var r=n(58),a=n(90),i=n(92);e.exports=function(e,t){var n=this.__data__;if(n instanceof r){var o=n.__data__;if(!a||o.length<199)return o.push([e,t]),this.size=++n.size,this;n=this.__data__=new i(o)}return n.set(e,t),this.size=n.size,this}},function(e,t,n){var r=n(148),a=n(229),i=n(91),o=n(149),s=/^\[object .+?Constructor\]$/,l=Function.prototype,c=Object.prototype,u=l.toString,d=c.hasOwnProperty,p=RegExp("^"+u.call(d).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");e.exports=function(e){return!(!i(e)||a(e))&&(r(e)?p:s).test(o(e))}},function(e,t,n){var r,a=n(230),i=(r=/[^.]+$/.exec(a&&a.keys&&a.keys.IE_PROTO||""))?"Symbol(src)_1."+r:"";e.exports=function(e){return!!i&&i in e}},function(e,t,n){var r=n(17)["__core-js_shared__"];e.exports=r},function(e,t){e.exports=function(e,t){return null==e?void 0:e[t]}},function(e,t,n){var r=n(233),a=n(58),i=n(90);e.exports=function(){this.size=0,this.__data__={hash:new r,map:new(i||a),string:new r}}},function(e,t,n){var r=n(234),a=n(235),i=n(236),o=n(237),s=n(238);function l(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var r=e[t];this.set(r[0],r[1])}}l.prototype.clear=r,l.prototype.delete=a,l.prototype.get=i,l.prototype.has=o,l.prototype.set=s,e.exports=l},function(e,t,n){var r=n(60);e.exports=function(){this.__data__=r?r(null):{},this.size=0}},function(e,t){e.exports=function(e){var t=this.has(e)&&delete this.__data__[e];return this.size-=t?1:0,t}},function(e,t,n){var r=n(60),a=Object.prototype.hasOwnProperty;e.exports=function(e){var t=this.__data__;if(r){var n=t[e];return"__lodash_hash_undefined__"===n?void 0:n}return a.call(t,e)?t[e]:void 0}},function(e,t,n){var r=n(60),a=Object.prototype.hasOwnProperty;e.exports=function(e){var t=this.__data__;return r?void 0!==t[e]:a.call(t,e)}},function(e,t,n){var r=n(60);e.exports=function(e,t){var n=this.__data__;return this.size+=this.has(e)?0:1,n[e]=r&&void 0===t?"__lodash_hash_undefined__":t,this}},function(e,t,n){var r=n(61);e.exports=function(e){var t=r(this,e).delete(e);return this.size-=t?1:0,t}},function(e,t){e.exports=function(e){var t=typeof e;return"string"==t||"number"==t||"symbol"==t||"boolean"==t?"__proto__"!==e:null===e}},function(e,t,n){var r=n(61);e.exports=function(e){return r(this,e).get(e)}},function(e,t,n){var r=n(61);e.exports=function(e){return r(this,e).has(e)}},function(e,t,n){var r=n(61);e.exports=function(e,t){var n=r(this,e),a=n.size;return n.set(e,t),this.size+=n.size==a?0:1,this}},function(e,t,n){var r=n(146),a=n(151),i=n(248),o=n(251),s=n(267),l=n(15),c=n(155),u=n(157),d="[object Object]",p=Object.prototype.hasOwnProperty;e.exports=function(e,t,n,m,h,f){var g=l(e),y=l(t),v=g?"[object Array]":s(e),b=y?"[object Array]":s(t),k=(v="[object Arguments]"==v?d:v)==d,w=(b="[object Arguments]"==b?d:b)==d,x=v==b;if(x&&c(e)){if(!c(t))return!1;g=!0,k=!1}if(x&&!k)return f||(f=new r),g||u(e)?a(e,t,n,m,h,f):i(e,t,v,n,m,h,f);if(!(1&n)){var T=k&&p.call(e,"__wrapped__"),I=w&&p.call(t,"__wrapped__");if(T||I){var q=T?e.value():e,j=I?t.value():t;return f||(f=new r),h(q,j,n,m,f)}}return!!x&&(f||(f=new r),o(e,t,n,m,h,f))}},function(e,t){e.exports=function(e){return this.__data__.set(e,"__lodash_hash_undefined__"),this}},function(e,t){e.exports=function(e){return this.__data__.has(e)}},function(e,t){e.exports=function(e,t){for(var n=-1,r=null==e?0:e.length;++n<r;)if(t(e[n],n,e))return!0;return!1}},function(e,t,n){var r=n(41),a=n(249),i=n(147),o=n(151),s=n(250),l=n(93),c=r?r.prototype:void 0,u=c?c.valueOf:void 0;e.exports=function(e,t,n,r,c,d,p){switch(n){case"[object DataView]":if(e.byteLength!=t.byteLength||e.byteOffset!=t.byteOffset)return!1;e=e.buffer,t=t.buffer;case"[object ArrayBuffer]":return!(e.byteLength!=t.byteLength||!d(new a(e),new a(t)));case"[object Boolean]":case"[object Date]":case"[object Number]":return i(+e,+t);case"[object Error]":return e.name==t.name&&e.message==t.message;case"[object RegExp]":case"[object String]":return e==t+"";case"[object Map]":var m=s;case"[object Set]":var h=1&r;if(m||(m=l),e.size!=t.size&&!h)return!1;var f=p.get(e);if(f)return f==t;r|=2,p.set(e,t);var g=o(m(e),m(t),r,c,d,p);return p.delete(e),g;case"[object Symbol]":if(u)return u.call(e)==u.call(t)}return!1}},function(e,t,n){var r=n(17).Uint8Array;e.exports=r},function(e,t){e.exports=function(e){var t=-1,n=Array(e.size);return e.forEach((function(e,r){n[++t]=[r,e]})),n}},function(e,t,n){var r=n(252),a=Object.prototype.hasOwnProperty;e.exports=function(e,t,n,i,o,s){var l=1&n,c=r(e),u=c.length;if(u!=r(t).length&&!l)return!1;for(var d=u;d--;){var p=c[d];if(!(l?p in t:a.call(t,p)))return!1}var m=s.get(e);if(m&&s.get(t))return m==t;var h=!0;s.set(e,t),s.set(t,e);for(var f=l;++d<u;){var g=e[p=c[d]],y=t[p];if(i)var v=l?i(y,g,p,t,e,s):i(g,y,p,e,t,s);if(!(void 0===v?g===y||o(g,y,n,i,s):v)){h=!1;break}f||(f="constructor"==p)}if(h&&!f){var b=e.constructor,k=t.constructor;b==k||!("constructor"in e)||!("constructor"in t)||"function"==typeof b&&b instanceof b&&"function"==typeof k&&k instanceof k||(h=!1)}return s.delete(e),s.delete(t),h}},function(e,t,n){var r=n(253),a=n(254),i=n(154);e.exports=function(e){return r(e,i,a)}},function(e,t,n){var r=n(144),a=n(15);e.exports=function(e,t,n){var i=t(e);return a(e)?i:r(i,n(e))}},function(e,t,n){var r=n(255),a=n(256),i=Object.prototype.propertyIsEnumerable,o=Object.getOwnPropertySymbols,s=o?function(e){return null==e?[]:(e=Object(e),r(o(e),(function(t){return i.call(e,t)})))}:a;e.exports=s},function(e,t){e.exports=function(e,t){for(var n=-1,r=null==e?0:e.length,a=0,i=[];++n<r;){var o=e[n];t(o,n,e)&&(i[a++]=o)}return i}},function(e,t){e.exports=function(){return[]}},function(e,t,n){var r=n(258),a=n(89),i=n(15),o=n(155),s=n(156),l=n(157),c=Object.prototype.hasOwnProperty;e.exports=function(e,t){var n=i(e),u=!n&&a(e),d=!n&&!u&&o(e),p=!n&&!u&&!d&&l(e),m=n||u||d||p,h=m?r(e.length,String):[],f=h.length;for(var g in e)!t&&!c.call(e,g)||m&&("length"==g||d&&("offset"==g||"parent"==g)||p&&("buffer"==g||"byteLength"==g||"byteOffset"==g)||s(g,f))||h.push(g);return h}},function(e,t){e.exports=function(e,t){for(var n=-1,r=Array(e);++n<e;)r[n]=t(n);return r}},function(e,t){e.exports=function(){return!1}},function(e,t,n){var r=n(36),a=n(94),i=n(29),o={};o["[object Float32Array]"]=o["[object Float64Array]"]=o["[object Int8Array]"]=o["[object Int16Array]"]=o["[object Int32Array]"]=o["[object Uint8Array]"]=o["[object Uint8ClampedArray]"]=o["[object Uint16Array]"]=o["[object Uint32Array]"]=!0,o["[object Arguments]"]=o["[object Array]"]=o["[object ArrayBuffer]"]=o["[object Boolean]"]=o["[object DataView]"]=o["[object Date]"]=o["[object Error]"]=o["[object Function]"]=o["[object Map]"]=o["[object Number]"]=o["[object Object]"]=o["[object RegExp]"]=o["[object Set]"]=o["[object String]"]=o["[object WeakMap]"]=!1,e.exports=function(e){return i(e)&&a(e.length)&&!!o[r(e)]}},function(e,t){e.exports=function(e){return function(t){return e(t)}}},function(e,t,n){(function(e){var r=n(145),a=t&&!t.nodeType&&t,i=a&&"object"==typeof e&&e&&!e.nodeType&&e,o=i&&i.exports===a&&r.process,s=function(){try{var e=i&&i.require&&i.require("util").types;return e||o&&o.binding&&o.binding("util")}catch(e){}}();e.exports=s}).call(this,n(113)(e))},function(e,t,n){var r=n(264),a=n(265),i=Object.prototype.hasOwnProperty;e.exports=function(e){if(!r(e))return a(e);var t=[];for(var n in Object(e))i.call(e,n)&&"constructor"!=n&&t.push(n);return t}},function(e,t){var n=Object.prototype;e.exports=function(e){var t=e&&e.constructor;return e===("function"==typeof t&&t.prototype||n)}},function(e,t,n){var r=n(266)(Object.keys,Object);e.exports=r},function(e,t){e.exports=function(e,t){return function(n){return e(t(n))}}},function(e,t,n){var r=n(268),a=n(90),i=n(269),o=n(159),s=n(270),l=n(36),c=n(149),u=c(r),d=c(a),p=c(i),m=c(o),h=c(s),f=l;(r&&"[object DataView]"!=f(new r(new ArrayBuffer(1)))||a&&"[object Map]"!=f(new a)||i&&"[object Promise]"!=f(i.resolve())||o&&"[object Set]"!=f(new o)||s&&"[object WeakMap]"!=f(new s))&&(f=function(e){var t=l(e),n="[object Object]"==t?e.constructor:void 0,r=n?c(n):"";if(r)switch(r){case u:return"[object DataView]";case d:return"[object Map]";case p:return"[object Promise]";case m:return"[object Set]";case h:return"[object WeakMap]"}return t}),e.exports=f},function(e,t,n){var r=n(24)(n(17),"DataView");e.exports=r},function(e,t,n){var r=n(24)(n(17),"Promise");e.exports=r},function(e,t,n){var r=n(24)(n(17),"WeakMap");e.exports=r},function(e,t,n){var r=n(160),a=n(154);e.exports=function(e){for(var t=a(e),n=t.length;n--;){var i=t[n],o=e[i];t[n]=[i,o,r(o)]}return t}},function(e,t,n){var r=n(150),a=n(273),i=n(280),o=n(95),s=n(160),l=n(161),c=n(62);e.exports=function(e,t){return o(e)&&s(t)?l(c(e),t):function(n){var o=a(n,e);return void 0===o&&o===t?i(n,e):r(t,o,3)}}},function(e,t,n){var r=n(162);e.exports=function(e,t,n){var a=null==e?void 0:r(e,t);return void 0===a?n:a}},function(e,t,n){var r=n(275),a=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,i=/\\(\\)?/g,o=r((function(e){var t=[];return 46===e.charCodeAt(0)&&t.push(""),e.replace(a,(function(e,n,r,a){t.push(r?a.replace(i,"$1"):n||e)})),t}));e.exports=o},function(e,t,n){var r=n(276);e.exports=function(e){var t=r(e,(function(e){return 500===n.size&&n.clear(),e})),n=t.cache;return t}},function(e,t,n){var r=n(92);function a(e,t){if("function"!=typeof e||null!=t&&"function"!=typeof t)throw new TypeError("Expected a function");var n=function(){var r=arguments,a=t?t.apply(this,r):r[0],i=n.cache;if(i.has(a))return i.get(a);var o=e.apply(this,r);return n.cache=i.set(a,o)||i,o};return n.cache=new(a.Cache||r),n}a.Cache=r,e.exports=a},function(e,t,n){var r=n(278);e.exports=function(e){return null==e?"":r(e)}},function(e,t,n){var r=n(41),a=n(279),i=n(15),o=n(96),s=r?r.prototype:void 0,l=s?s.toString:void 0;e.exports=function e(t){if("string"==typeof t)return t;if(i(t))return a(t,e)+"";if(o(t))return l?l.call(t):"";var n=t+"";return"0"==n&&1/t==-1/0?"-0":n}},function(e,t){e.exports=function(e,t){for(var n=-1,r=null==e?0:e.length,a=Array(r);++n<r;)a[n]=t(e[n],n,e);return a}},function(e,t,n){var r=n(281),a=n(282);e.exports=function(e,t){return null!=e&&a(e,t,r)}},function(e,t){e.exports=function(e,t){return null!=e&&t in Object(e)}},function(e,t,n){var r=n(163),a=n(89),i=n(15),o=n(156),s=n(94),l=n(62);e.exports=function(e,t,n){for(var c=-1,u=(t=r(t,e)).length,d=!1;++c<u;){var p=l(t[c]);if(!(d=null!=e&&n(e,p)))break;e=e[p]}return d||++c!=u?d:!!(u=null==e?0:e.length)&&s(u)&&o(p,u)&&(i(e)||a(e))}},function(e,t,n){var r=n(284),a=n(285),i=n(95),o=n(62);e.exports=function(e){return i(e)?r(o(e)):a(e)}},function(e,t){e.exports=function(e){return function(t){return null==t?void 0:t[e]}}},function(e,t,n){var r=n(162);e.exports=function(e){return function(t){return r(t,e)}}},function(e,t,n){var r=n(97),a=n(287),i=n(289);e.exports=function(e,t){return i(a(e,t,r),e+"")}},function(e,t,n){var r=n(288),a=Math.max;e.exports=function(e,t,n){return t=a(void 0===t?e.length-1:t,0),function(){for(var i=arguments,o=-1,s=a(i.length-t,0),l=Array(s);++o<s;)l[o]=i[t+o];o=-1;for(var c=Array(t+1);++o<t;)c[o]=i[o];return c[t]=n(l),r(e,this,c)}}},function(e,t){e.exports=function(e,t,n){switch(n.length){case 0:return e.call(t);case 1:return e.call(t,n[0]);case 2:return e.call(t,n[0],n[1]);case 3:return e.call(t,n[0],n[1],n[2])}return e.apply(t,n)}},function(e,t,n){var r=n(290),a=n(293)(r);e.exports=a},function(e,t,n){var r=n(291),a=n(292),i=n(97),o=a?function(e,t){return a(e,"toString",{configurable:!0,enumerable:!1,value:r(t),writable:!0})}:i;e.exports=o},function(e,t){e.exports=function(e){return function(){return e}}},function(e,t,n){var r=n(24),a=function(){try{var e=r(Object,"defineProperty");return e({},"",{}),e}catch(e){}}();e.exports=a},function(e,t){var n=Date.now;e.exports=function(e){var t=0,r=0;return function(){var a=n(),i=16-(a-r);if(r=a,i>0){if(++t>=800)return arguments[0]}else t=0;return e.apply(void 0,arguments)}}},function(e,t,n){var r=n(152),a=n(295),i=n(300),o=n(153),s=n(301),l=n(93);e.exports=function(e,t,n){var c=-1,u=a,d=e.length,p=!0,m=[],h=m;if(n)p=!1,u=i;else if(d>=200){var f=t?null:s(e);if(f)return l(f);p=!1,u=o,h=new r}else h=t?[]:m;e:for(;++c<d;){var g=e[c],y=t?t(g):g;if(g=n||0!==g?g:0,p&&y==y){for(var v=h.length;v--;)if(h[v]===y)continue e;t&&h.push(y),m.push(g)}else u(h,y,n)||(h!==m&&h.push(y),m.push(g))}return m}},function(e,t,n){var r=n(296);e.exports=function(e,t){return!!(null==e?0:e.length)&&r(e,t,0)>-1}},function(e,t,n){var r=n(297),a=n(298),i=n(299);e.exports=function(e,t,n){return t==t?i(e,t,n):r(e,a,n)}},function(e,t){e.exports=function(e,t,n,r){for(var a=e.length,i=n+(r?1:-1);r?i--:++i<a;)if(t(e[i],i,e))return i;return-1}},function(e,t){e.exports=function(e){return e!=e}},function(e,t){e.exports=function(e,t,n){for(var r=n-1,a=e.length;++r<a;)if(e[r]===t)return r;return-1}},function(e,t){e.exports=function(e,t,n){for(var r=-1,a=null==e?0:e.length;++r<a;)if(n(t,e[r]))return!0;return!1}},function(e,t,n){var r=n(159),a=n(302),i=n(93),o=r&&1/i(new r([,-0]))[1]==1/0?function(e){return new r(e)}:a;e.exports=o},function(e,t){e.exports=function(){}},function(e,t,n){var r=n(158),a=n(29);e.exports=function(e){return a(e)&&r(e)}},function(e,t,n){var r=n(0),a=n(3),i=n(85),o=[].slice,s=function(e){return function(t,n){var r=arguments.length>2,a=r?o.call(arguments,2):void 0;return e(r?function(){("function"==typeof t?t:Function(t)).apply(this,a)}:t,n)}};r({global:!0,bind:!0,forced:/MSIE .\./.test(i)},{setTimeout:s(a.setTimeout),setInterval:s(a.setInterval)})},function(e,t,n){},function(e,t,n){},function(e,t,n){},function(e,t,n){},function(e,t,n){"use strict";var r=n(63);n.n(r).a},function(e,t,n){},function(e,t,n){"use strict";var r=n(23),a=n(4),i=[].slice,o={},s=function(e,t,n){if(!(t in o)){for(var r=[],a=0;a<t;a++)r[a]="a["+a+"]";o[t]=Function("C,a","return new C("+r.join(",")+")")}return o[t](e,n)};e.exports=Function.bind||function(e){var t=r(this),n=i.call(arguments,1),o=function(){var r=n.concat(i.call(arguments));return this instanceof o?s(t,r.length,r):t.apply(e,r)};return a(t.prototype)&&(o.prototype=t.prototype),o}},function(e,t,n){"use strict";var r=n(64);n.n(r).a},function(e,t,n){"use strict";n.r(t);n(107),n(196),n(201),n(202),n(26),n(68),n(48),n(10),n(27),n(32),n(102);var r=n(56),a=Object.freeze({});function i(e){return null==e}function o(e){return null!=e}function s(e){return!0===e}function l(e){return"string"==typeof e||"number"==typeof e||"symbol"==typeof e||"boolean"==typeof e}function c(e){return null!==e&&"object"==typeof e}var u=Object.prototype.toString;function d(e){return"[object Object]"===u.call(e)}function p(e){return"[object RegExp]"===u.call(e)}function m(e){var t=parseFloat(String(e));return t>=0&&Math.floor(t)===t&&isFinite(e)}function h(e){return o(e)&&"function"==typeof e.then&&"function"==typeof e.catch}function f(e){return null==e?"":Array.isArray(e)||d(e)&&e.toString===u?JSON.stringify(e,null,2):String(e)}function g(e){var t=parseFloat(e);return isNaN(t)?e:t}function y(e,t){for(var n=Object.create(null),r=e.split(","),a=0;a<r.length;a++)n[r[a]]=!0;return t?function(e){return n[e.toLowerCase()]}:function(e){return n[e]}}y("slot,component",!0);var v=y("key,ref,slot,slot-scope,is");function b(e,t){if(e.length){var n=e.indexOf(t);if(n>-1)return e.splice(n,1)}}var k=Object.prototype.hasOwnProperty;function w(e,t){return k.call(e,t)}function x(e){var t=Object.create(null);return function(n){return t[n]||(t[n]=e(n))}}var T=/-(\w)/g,I=x((function(e){return e.replace(T,(function(e,t){return t?t.toUpperCase():""}))})),q=x((function(e){return e.charAt(0).toUpperCase()+e.slice(1)})),j=/\B([A-Z])/g,z=x((function(e){return e.replace(j,"-$1").toLowerCase()}));var D=Function.prototype.bind?function(e,t){return e.bind(t)}:function(e,t){function n(n){var r=arguments.length;return r?r>1?e.apply(t,arguments):e.call(t,n):e.call(t)}return n._length=e.length,n};function E(e,t){t=t||0;for(var n=e.length-t,r=new Array(n);n--;)r[n]=e[n+t];return r}function _(e,t){for(var n in t)e[n]=t[n];return e}function S(e){for(var t={},n=0;n<e.length;n++)e[n]&&_(t,e[n]);return t}function R(e,t,n){}var C=function(e,t,n){return!1},O=function(e){return e};function P(e,t){if(e===t)return!0;var n=c(e),r=c(t);if(!n||!r)return!n&&!r&&String(e)===String(t);try{var a=Array.isArray(e),i=Array.isArray(t);if(a&&i)return e.length===t.length&&e.every((function(e,n){return P(e,t[n])}));if(e instanceof Date&&t instanceof Date)return e.getTime()===t.getTime();if(a||i)return!1;var o=Object.keys(e),s=Object.keys(t);return o.length===s.length&&o.every((function(n){return P(e[n],t[n])}))}catch(e){return!1}}function A(e,t){for(var n=0;n<e.length;n++)if(P(e[n],t))return n;return-1}function L(e){var t=!1;return function(){t||(t=!0,e.apply(this,arguments))}}var K=["component","directive","filter"],F=["beforeCreate","created","beforeMount","mounted","beforeUpdate","updated","beforeDestroy","destroyed","activated","deactivated","errorCaptured","serverPrefetch"],M={optionMergeStrategies:Object.create(null),silent:!1,productionTip:!1,devtools:!1,performance:!1,errorHandler:null,warnHandler:null,ignoredElements:[],keyCodes:Object.create(null),isReservedTag:C,isReservedAttr:C,isUnknownElement:C,getTagNamespace:R,parsePlatformTagName:O,mustUseProp:C,async:!0,_lifecycleHooks:F},N=/a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;function U(e,t,n,r){Object.defineProperty(e,t,{value:n,enumerable:!!r,writable:!0,configurable:!0})}var B=new RegExp("[^"+N.source+".$_\\d]");var $,W="__proto__"in{},G="undefined"!=typeof window,V="undefined"!=typeof WXEnvironment&&!!WXEnvironment.platform,H=V&&WXEnvironment.platform.toLowerCase(),Q=G&&window.navigator.userAgent.toLowerCase(),J=Q&&/msie|trident/.test(Q),Y=Q&&Q.indexOf("msie 9.0")>0,X=Q&&Q.indexOf("edge/")>0,Z=(Q&&Q.indexOf("android"),Q&&/iphone|ipad|ipod|ios/.test(Q)||"ios"===H),ee=(Q&&/chrome\/\d+/.test(Q),Q&&/phantomjs/.test(Q),Q&&Q.match(/firefox\/(\d+)/)),te={}.watch,ne=!1;if(G)try{var re={};Object.defineProperty(re,"passive",{get:function(){ne=!0}}),window.addEventListener("test-passive",null,re)}catch(e){}var ae=function(){return void 0===$&&($=!G&&!V&&"undefined"!=typeof global&&(global.process&&"server"===global.process.env.VUE_ENV)),$},ie=G&&window.__VUE_DEVTOOLS_GLOBAL_HOOK__;function oe(e){return"function"==typeof e&&/native code/.test(e.toString())}var se,le="undefined"!=typeof Symbol&&oe(Symbol)&&"undefined"!=typeof Reflect&&oe(Reflect.ownKeys);se="undefined"!=typeof Set&&oe(Set)?Set:function(){function e(){this.set=Object.create(null)}return e.prototype.has=function(e){return!0===this.set[e]},e.prototype.add=function(e){this.set[e]=!0},e.prototype.clear=function(){this.set=Object.create(null)},e}();var ce=R,ue=0,de=function(){this.id=ue++,this.subs=[]};de.prototype.addSub=function(e){this.subs.push(e)},de.prototype.removeSub=function(e){b(this.subs,e)},de.prototype.depend=function(){de.target&&de.target.addDep(this)},de.prototype.notify=function(){var e=this.subs.slice();for(var t=0,n=e.length;t<n;t++)e[t].update()},de.target=null;var pe=[];function me(e){pe.push(e),de.target=e}function he(){pe.pop(),de.target=pe[pe.length-1]}var fe=function(e,t,n,r,a,i,o,s){this.tag=e,this.data=t,this.children=n,this.text=r,this.elm=a,this.ns=void 0,this.context=i,this.fnContext=void 0,this.fnOptions=void 0,this.fnScopeId=void 0,this.key=t&&t.key,this.componentOptions=o,this.componentInstance=void 0,this.parent=void 0,this.raw=!1,this.isStatic=!1,this.isRootInsert=!0,this.isComment=!1,this.isCloned=!1,this.isOnce=!1,this.asyncFactory=s,this.asyncMeta=void 0,this.isAsyncPlaceholder=!1},ge={child:{configurable:!0}};ge.child.get=function(){return this.componentInstance},Object.defineProperties(fe.prototype,ge);var ye=function(e){void 0===e&&(e="");var t=new fe;return t.text=e,t.isComment=!0,t};function ve(e){return new fe(void 0,void 0,void 0,String(e))}function be(e){var t=new fe(e.tag,e.data,e.children&&e.children.slice(),e.text,e.elm,e.context,e.componentOptions,e.asyncFactory);return t.ns=e.ns,t.isStatic=e.isStatic,t.key=e.key,t.isComment=e.isComment,t.fnContext=e.fnContext,t.fnOptions=e.fnOptions,t.fnScopeId=e.fnScopeId,t.asyncMeta=e.asyncMeta,t.isCloned=!0,t}var ke=Array.prototype,we=Object.create(ke);["push","pop","shift","unshift","splice","sort","reverse"].forEach((function(e){var t=ke[e];U(we,e,(function(){for(var n=[],r=arguments.length;r--;)n[r]=arguments[r];var a,i=t.apply(this,n),o=this.__ob__;switch(e){case"push":case"unshift":a=n;break;case"splice":a=n.slice(2)}return a&&o.observeArray(a),o.dep.notify(),i}))}));var xe=Object.getOwnPropertyNames(we),Te=!0;function Ie(e){Te=e}var qe=function(e){this.value=e,this.dep=new de,this.vmCount=0,U(e,"__ob__",this),Array.isArray(e)?(W?function(e,t){e.__proto__=t}(e,we):function(e,t,n){for(var r=0,a=n.length;r<a;r++){var i=n[r];U(e,i,t[i])}}(e,we,xe),this.observeArray(e)):this.walk(e)};function je(e,t){var n;if(c(e)&&!(e instanceof fe))return w(e,"__ob__")&&e.__ob__ instanceof qe?n=e.__ob__:Te&&!ae()&&(Array.isArray(e)||d(e))&&Object.isExtensible(e)&&!e._isVue&&(n=new qe(e)),t&&n&&n.vmCount++,n}function ze(e,t,n,r,a){var i=new de,o=Object.getOwnPropertyDescriptor(e,t);if(!o||!1!==o.configurable){var s=o&&o.get,l=o&&o.set;s&&!l||2!==arguments.length||(n=e[t]);var c=!a&&je(n);Object.defineProperty(e,t,{enumerable:!0,configurable:!0,get:function(){var t=s?s.call(e):n;return de.target&&(i.depend(),c&&(c.dep.depend(),Array.isArray(t)&&_e(t))),t},set:function(t){var r=s?s.call(e):n;t===r||t!=t&&r!=r||s&&!l||(l?l.call(e,t):n=t,c=!a&&je(t),i.notify())}})}}function De(e,t,n){if(Array.isArray(e)&&m(t))return e.length=Math.max(e.length,t),e.splice(t,1,n),n;if(t in e&&!(t in Object.prototype))return e[t]=n,n;var r=e.__ob__;return e._isVue||r&&r.vmCount?n:r?(ze(r.value,t,n),r.dep.notify(),n):(e[t]=n,n)}function Ee(e,t){if(Array.isArray(e)&&m(t))e.splice(t,1);else{var n=e.__ob__;e._isVue||n&&n.vmCount||w(e,t)&&(delete e[t],n&&n.dep.notify())}}function _e(e){for(var t=void 0,n=0,r=e.length;n<r;n++)(t=e[n])&&t.__ob__&&t.__ob__.dep.depend(),Array.isArray(t)&&_e(t)}qe.prototype.walk=function(e){for(var t=Object.keys(e),n=0;n<t.length;n++)ze(e,t[n])},qe.prototype.observeArray=function(e){for(var t=0,n=e.length;t<n;t++)je(e[t])};var Se=M.optionMergeStrategies;function Re(e,t){if(!t)return e;for(var n,r,a,i=le?Reflect.ownKeys(t):Object.keys(t),o=0;o<i.length;o++)"__ob__"!==(n=i[o])&&(r=e[n],a=t[n],w(e,n)?r!==a&&d(r)&&d(a)&&Re(r,a):De(e,n,a));return e}function Ce(e,t,n){return n?function(){var r="function"==typeof t?t.call(n,n):t,a="function"==typeof e?e.call(n,n):e;return r?Re(r,a):a}:t?e?function(){return Re("function"==typeof t?t.call(this,this):t,"function"==typeof e?e.call(this,this):e)}:t:e}function Oe(e,t){var n=t?e?e.concat(t):Array.isArray(t)?t:[t]:e;return n?function(e){for(var t=[],n=0;n<e.length;n++)-1===t.indexOf(e[n])&&t.push(e[n]);return t}(n):n}function Pe(e,t,n,r){var a=Object.create(e||null);return t?_(a,t):a}Se.data=function(e,t,n){return n?Ce(e,t,n):t&&"function"!=typeof t?e:Ce(e,t)},F.forEach((function(e){Se[e]=Oe})),K.forEach((function(e){Se[e+"s"]=Pe})),Se.watch=function(e,t,n,r){if(e===te&&(e=void 0),t===te&&(t=void 0),!t)return Object.create(e||null);if(!e)return t;var a={};for(var i in _(a,e),t){var o=a[i],s=t[i];o&&!Array.isArray(o)&&(o=[o]),a[i]=o?o.concat(s):Array.isArray(s)?s:[s]}return a},Se.props=Se.methods=Se.inject=Se.computed=function(e,t,n,r){if(!e)return t;var a=Object.create(null);return _(a,e),t&&_(a,t),a},Se.provide=Ce;var Ae=function(e,t){return void 0===t?e:t};function Le(e,t,n){if("function"==typeof t&&(t=t.options),function(e,t){var n=e.props;if(n){var r,a,i={};if(Array.isArray(n))for(r=n.length;r--;)"string"==typeof(a=n[r])&&(i[I(a)]={type:null});else if(d(n))for(var o in n)a=n[o],i[I(o)]=d(a)?a:{type:a};else 0;e.props=i}}(t),function(e,t){var n=e.inject;if(n){var r=e.inject={};if(Array.isArray(n))for(var a=0;a<n.length;a++)r[n[a]]={from:n[a]};else if(d(n))for(var i in n){var o=n[i];r[i]=d(o)?_({from:i},o):{from:o}}else 0}}(t),function(e){var t=e.directives;if(t)for(var n in t){var r=t[n];"function"==typeof r&&(t[n]={bind:r,update:r})}}(t),!t._base&&(t.extends&&(e=Le(e,t.extends,n)),t.mixins))for(var r=0,a=t.mixins.length;r<a;r++)e=Le(e,t.mixins[r],n);var i,o={};for(i in e)s(i);for(i in t)w(e,i)||s(i);function s(r){var a=Se[r]||Ae;o[r]=a(e[r],t[r],n,r)}return o}function Ke(e,t,n,r){if("string"==typeof n){var a=e[t];if(w(a,n))return a[n];var i=I(n);if(w(a,i))return a[i];var o=q(i);return w(a,o)?a[o]:a[n]||a[i]||a[o]}}function Fe(e,t,n,r){var a=t[e],i=!w(n,e),o=n[e],s=Ue(Boolean,a.type);if(s>-1)if(i&&!w(a,"default"))o=!1;else if(""===o||o===z(e)){var l=Ue(String,a.type);(l<0||s<l)&&(o=!0)}if(void 0===o){o=function(e,t,n){if(!w(t,"default"))return;var r=t.default;0;if(e&&e.$options.propsData&&void 0===e.$options.propsData[n]&&void 0!==e._props[n])return e._props[n];return"function"==typeof r&&"Function"!==Me(t.type)?r.call(e):r}(r,a,e);var c=Te;Ie(!0),je(o),Ie(c)}return o}function Me(e){var t=e&&e.toString().match(/^\s*function (\w+)/);return t?t[1]:""}function Ne(e,t){return Me(e)===Me(t)}function Ue(e,t){if(!Array.isArray(t))return Ne(t,e)?0:-1;for(var n=0,r=t.length;n<r;n++)if(Ne(t[n],e))return n;return-1}function Be(e,t,n){me();try{if(t)for(var r=t;r=r.$parent;){var a=r.$options.errorCaptured;if(a)for(var i=0;i<a.length;i++)try{if(!1===a[i].call(r,e,t,n))return}catch(e){We(e,r,"errorCaptured hook")}}We(e,t,n)}finally{he()}}function $e(e,t,n,r,a){var i;try{(i=n?e.apply(t,n):e.call(t))&&!i._isVue&&h(i)&&!i._handled&&(i.catch((function(e){return Be(e,r,a+" (Promise/async)")})),i._handled=!0)}catch(e){Be(e,r,a)}return i}function We(e,t,n){if(M.errorHandler)try{return M.errorHandler.call(null,e,t,n)}catch(t){t!==e&&Ge(t,null,"config.errorHandler")}Ge(e,t,n)}function Ge(e,t,n){if(!G&&!V||"undefined"==typeof console)throw e;console.error(e)}var Ve,He=!1,Qe=[],Je=!1;function Ye(){Je=!1;var e=Qe.slice(0);Qe.length=0;for(var t=0;t<e.length;t++)e[t]()}if("undefined"!=typeof Promise&&oe(Promise)){var Xe=Promise.resolve();Ve=function(){Xe.then(Ye),Z&&setTimeout(R)},He=!0}else if(J||"undefined"==typeof MutationObserver||!oe(MutationObserver)&&"[object MutationObserverConstructor]"!==MutationObserver.toString())Ve="undefined"!=typeof setImmediate&&oe(setImmediate)?function(){setImmediate(Ye)}:function(){setTimeout(Ye,0)};else{var Ze=1,et=new MutationObserver(Ye),tt=document.createTextNode(String(Ze));et.observe(tt,{characterData:!0}),Ve=function(){Ze=(Ze+1)%2,tt.data=String(Ze)},He=!0}function nt(e,t){var n;if(Qe.push((function(){if(e)try{e.call(t)}catch(e){Be(e,t,"nextTick")}else n&&n(t)})),Je||(Je=!0,Ve()),!e&&"undefined"!=typeof Promise)return new Promise((function(e){n=e}))}var rt=new se;function at(e){!function e(t,n){var r,a,i=Array.isArray(t);if(!i&&!c(t)||Object.isFrozen(t)||t instanceof fe)return;if(t.__ob__){var o=t.__ob__.dep.id;if(n.has(o))return;n.add(o)}if(i)for(r=t.length;r--;)e(t[r],n);else for(a=Object.keys(t),r=a.length;r--;)e(t[a[r]],n)}(e,rt),rt.clear()}var it=x((function(e){var t="&"===e.charAt(0),n="~"===(e=t?e.slice(1):e).charAt(0),r="!"===(e=n?e.slice(1):e).charAt(0);return{name:e=r?e.slice(1):e,once:n,capture:r,passive:t}}));function ot(e,t){function n(){var e=arguments,r=n.fns;if(!Array.isArray(r))return $e(r,null,arguments,t,"v-on handler");for(var a=r.slice(),i=0;i<a.length;i++)$e(a[i],null,e,t,"v-on handler")}return n.fns=e,n}function st(e,t,n,r,a,o){var l,c,u,d;for(l in e)c=e[l],u=t[l],d=it(l),i(c)||(i(u)?(i(c.fns)&&(c=e[l]=ot(c,o)),s(d.once)&&(c=e[l]=a(d.name,c,d.capture)),n(d.name,c,d.capture,d.passive,d.params)):c!==u&&(u.fns=c,e[l]=u));for(l in t)i(e[l])&&r((d=it(l)).name,t[l],d.capture)}function lt(e,t,n){var r;e instanceof fe&&(e=e.data.hook||(e.data.hook={}));var a=e[t];function l(){n.apply(this,arguments),b(r.fns,l)}i(a)?r=ot([l]):o(a.fns)&&s(a.merged)?(r=a).fns.push(l):r=ot([a,l]),r.merged=!0,e[t]=r}function ct(e,t,n,r,a){if(o(t)){if(w(t,n))return e[n]=t[n],a||delete t[n],!0;if(w(t,r))return e[n]=t[r],a||delete t[r],!0}return!1}function ut(e){return l(e)?[ve(e)]:Array.isArray(e)?function e(t,n){var r,a,c,u,d=[];for(r=0;r<t.length;r++)i(a=t[r])||"boolean"==typeof a||(c=d.length-1,u=d[c],Array.isArray(a)?a.length>0&&(dt((a=e(a,(n||"")+"_"+r))[0])&&dt(u)&&(d[c]=ve(u.text+a[0].text),a.shift()),d.push.apply(d,a)):l(a)?dt(u)?d[c]=ve(u.text+a):""!==a&&d.push(ve(a)):dt(a)&&dt(u)?d[c]=ve(u.text+a.text):(s(t._isVList)&&o(a.tag)&&i(a.key)&&o(n)&&(a.key="__vlist"+n+"_"+r+"__"),d.push(a)));return d}(e):void 0}function dt(e){return o(e)&&o(e.text)&&!1===e.isComment}function pt(e,t){if(e){for(var n=Object.create(null),r=le?Reflect.ownKeys(e):Object.keys(e),a=0;a<r.length;a++){var i=r[a];if("__ob__"!==i){for(var o=e[i].from,s=t;s;){if(s._provided&&w(s._provided,o)){n[i]=s._provided[o];break}s=s.$parent}if(!s)if("default"in e[i]){var l=e[i].default;n[i]="function"==typeof l?l.call(t):l}else 0}}return n}}function mt(e,t){if(!e||!e.length)return{};for(var n={},r=0,a=e.length;r<a;r++){var i=e[r],o=i.data;if(o&&o.attrs&&o.attrs.slot&&delete o.attrs.slot,i.context!==t&&i.fnContext!==t||!o||null==o.slot)(n.default||(n.default=[])).push(i);else{var s=o.slot,l=n[s]||(n[s]=[]);"template"===i.tag?l.push.apply(l,i.children||[]):l.push(i)}}for(var c in n)n[c].every(ht)&&delete n[c];return n}function ht(e){return e.isComment&&!e.asyncFactory||" "===e.text}function ft(e,t,n){var r,i=Object.keys(t).length>0,o=e?!!e.$stable:!i,s=e&&e.$key;if(e){if(e._normalized)return e._normalized;if(o&&n&&n!==a&&s===n.$key&&!i&&!n.$hasNormal)return n;for(var l in r={},e)e[l]&&"$"!==l[0]&&(r[l]=gt(t,l,e[l]))}else r={};for(var c in t)c in r||(r[c]=yt(t,c));return e&&Object.isExtensible(e)&&(e._normalized=r),U(r,"$stable",o),U(r,"$key",s),U(r,"$hasNormal",i),r}function gt(e,t,n){var r=function(){var e=arguments.length?n.apply(null,arguments):n({});return(e=e&&"object"==typeof e&&!Array.isArray(e)?[e]:ut(e))&&(0===e.length||1===e.length&&e[0].isComment)?void 0:e};return n.proxy&&Object.defineProperty(e,t,{get:r,enumerable:!0,configurable:!0}),r}function yt(e,t){return function(){return e[t]}}function vt(e,t){var n,r,a,i,s;if(Array.isArray(e)||"string"==typeof e)for(n=new Array(e.length),r=0,a=e.length;r<a;r++)n[r]=t(e[r],r);else if("number"==typeof e)for(n=new Array(e),r=0;r<e;r++)n[r]=t(r+1,r);else if(c(e))if(le&&e[Symbol.iterator]){n=[];for(var l=e[Symbol.iterator](),u=l.next();!u.done;)n.push(t(u.value,n.length)),u=l.next()}else for(i=Object.keys(e),n=new Array(i.length),r=0,a=i.length;r<a;r++)s=i[r],n[r]=t(e[s],s,r);return o(n)||(n=[]),n._isVList=!0,n}function bt(e,t,n,r){var a,i=this.$scopedSlots[e];i?(n=n||{},r&&(n=_(_({},r),n)),a=i(n)||t):a=this.$slots[e]||t;var o=n&&n.slot;return o?this.$createElement("template",{slot:o},a):a}function kt(e){return Ke(this.$options,"filters",e)||O}function wt(e,t){return Array.isArray(e)?-1===e.indexOf(t):e!==t}function xt(e,t,n,r,a){var i=M.keyCodes[t]||n;return a&&r&&!M.keyCodes[t]?wt(a,r):i?wt(i,e):r?z(r)!==t:void 0}function Tt(e,t,n,r,a){if(n)if(c(n)){var i;Array.isArray(n)&&(n=S(n));var o=function(o){if("class"===o||"style"===o||v(o))i=e;else{var s=e.attrs&&e.attrs.type;i=r||M.mustUseProp(t,s,o)?e.domProps||(e.domProps={}):e.attrs||(e.attrs={})}var l=I(o),c=z(o);l in i||c in i||(i[o]=n[o],a&&((e.on||(e.on={}))["update:"+o]=function(e){n[o]=e}))};for(var s in n)o(s)}else;return e}function It(e,t){var n=this._staticTrees||(this._staticTrees=[]),r=n[e];return r&&!t||jt(r=n[e]=this.$options.staticRenderFns[e].call(this._renderProxy,null,this),"__static__"+e,!1),r}function qt(e,t,n){return jt(e,"__once__"+t+(n?"_"+n:""),!0),e}function jt(e,t,n){if(Array.isArray(e))for(var r=0;r<e.length;r++)e[r]&&"string"!=typeof e[r]&&zt(e[r],t+"_"+r,n);else zt(e,t,n)}function zt(e,t,n){e.isStatic=!0,e.key=t,e.isOnce=n}function Dt(e,t){if(t)if(d(t)){var n=e.on=e.on?_({},e.on):{};for(var r in t){var a=n[r],i=t[r];n[r]=a?[].concat(a,i):i}}else;return e}function Et(e,t,n,r){t=t||{$stable:!n};for(var a=0;a<e.length;a++){var i=e[a];Array.isArray(i)?Et(i,t,n):i&&(i.proxy&&(i.fn.proxy=!0),t[i.key]=i.fn)}return r&&(t.$key=r),t}function _t(e,t){for(var n=0;n<t.length;n+=2){var r=t[n];"string"==typeof r&&r&&(e[t[n]]=t[n+1])}return e}function St(e,t){return"string"==typeof e?t+e:e}function Rt(e){e._o=qt,e._n=g,e._s=f,e._l=vt,e._t=bt,e._q=P,e._i=A,e._m=It,e._f=kt,e._k=xt,e._b=Tt,e._v=ve,e._e=ye,e._u=Et,e._g=Dt,e._d=_t,e._p=St}function Ct(e,t,n,r,i){var o,l=this,c=i.options;w(r,"_uid")?(o=Object.create(r))._original=r:(o=r,r=r._original);var u=s(c._compiled),d=!u;this.data=e,this.props=t,this.children=n,this.parent=r,this.listeners=e.on||a,this.injections=pt(c.inject,r),this.slots=function(){return l.$slots||ft(e.scopedSlots,l.$slots=mt(n,r)),l.$slots},Object.defineProperty(this,"scopedSlots",{enumerable:!0,get:function(){return ft(e.scopedSlots,this.slots())}}),u&&(this.$options=c,this.$slots=this.slots(),this.$scopedSlots=ft(e.scopedSlots,this.$slots)),c._scopeId?this._c=function(e,t,n,a){var i=Mt(o,e,t,n,a,d);return i&&!Array.isArray(i)&&(i.fnScopeId=c._scopeId,i.fnContext=r),i}:this._c=function(e,t,n,r){return Mt(o,e,t,n,r,d)}}function Ot(e,t,n,r,a){var i=be(e);return i.fnContext=n,i.fnOptions=r,t.slot&&((i.data||(i.data={})).slot=t.slot),i}function Pt(e,t){for(var n in t)e[I(n)]=t[n]}Rt(Ct.prototype);var At={init:function(e,t){if(e.componentInstance&&!e.componentInstance._isDestroyed&&e.data.keepAlive){var n=e;At.prepatch(n,n)}else{(e.componentInstance=function(e,t){var n={_isComponent:!0,_parentVnode:e,parent:t},r=e.data.inlineTemplate;o(r)&&(n.render=r.render,n.staticRenderFns=r.staticRenderFns);return new e.componentOptions.Ctor(n)}(e,Jt)).$mount(t?e.elm:void 0,t)}},prepatch:function(e,t){var n=t.componentOptions;!function(e,t,n,r,i){0;var o=r.data.scopedSlots,s=e.$scopedSlots,l=!!(o&&!o.$stable||s!==a&&!s.$stable||o&&e.$scopedSlots.$key!==o.$key),c=!!(i||e.$options._renderChildren||l);e.$options._parentVnode=r,e.$vnode=r,e._vnode&&(e._vnode.parent=r);if(e.$options._renderChildren=i,e.$attrs=r.data.attrs||a,e.$listeners=n||a,t&&e.$options.props){Ie(!1);for(var u=e._props,d=e.$options._propKeys||[],p=0;p<d.length;p++){var m=d[p],h=e.$options.props;u[m]=Fe(m,h,t,e)}Ie(!0),e.$options.propsData=t}n=n||a;var f=e.$options._parentListeners;e.$options._parentListeners=n,Qt(e,n,f),c&&(e.$slots=mt(i,r.context),e.$forceUpdate());0}(t.componentInstance=e.componentInstance,n.propsData,n.listeners,t,n.children)},insert:function(e){var t,n=e.context,r=e.componentInstance;r._isMounted||(r._isMounted=!0,en(r,"mounted")),e.data.keepAlive&&(n._isMounted?((t=r)._inactive=!1,nn.push(t)):Zt(r,!0))},destroy:function(e){var t=e.componentInstance;t._isDestroyed||(e.data.keepAlive?function e(t,n){if(n&&(t._directInactive=!0,Xt(t)))return;if(!t._inactive){t._inactive=!0;for(var r=0;r<t.$children.length;r++)e(t.$children[r]);en(t,"deactivated")}}(t,!0):t.$destroy())}},Lt=Object.keys(At);function Kt(e,t,n,r,l){if(!i(e)){var u=n.$options._base;if(c(e)&&(e=u.extend(e)),"function"==typeof e){var d;if(i(e.cid)&&void 0===(e=function(e,t){if(s(e.error)&&o(e.errorComp))return e.errorComp;if(o(e.resolved))return e.resolved;var n=Ut;n&&o(e.owners)&&-1===e.owners.indexOf(n)&&e.owners.push(n);if(s(e.loading)&&o(e.loadingComp))return e.loadingComp;if(n&&!o(e.owners)){var r=e.owners=[n],a=!0,l=null,u=null;n.$on("hook:destroyed",(function(){return b(r,n)}));var d=function(e){for(var t=0,n=r.length;t<n;t++)r[t].$forceUpdate();e&&(r.length=0,null!==l&&(clearTimeout(l),l=null),null!==u&&(clearTimeout(u),u=null))},p=L((function(n){e.resolved=Bt(n,t),a?r.length=0:d(!0)})),m=L((function(t){o(e.errorComp)&&(e.error=!0,d(!0))})),f=e(p,m);return c(f)&&(h(f)?i(e.resolved)&&f.then(p,m):h(f.component)&&(f.component.then(p,m),o(f.error)&&(e.errorComp=Bt(f.error,t)),o(f.loading)&&(e.loadingComp=Bt(f.loading,t),0===f.delay?e.loading=!0:l=setTimeout((function(){l=null,i(e.resolved)&&i(e.error)&&(e.loading=!0,d(!1))}),f.delay||200)),o(f.timeout)&&(u=setTimeout((function(){u=null,i(e.resolved)&&m(null)}),f.timeout)))),a=!1,e.loading?e.loadingComp:e.resolved}}(d=e,u)))return function(e,t,n,r,a){var i=ye();return i.asyncFactory=e,i.asyncMeta={data:t,context:n,children:r,tag:a},i}(d,t,n,r,l);t=t||{},Tn(e),o(t.model)&&function(e,t){var n=e.model&&e.model.prop||"value",r=e.model&&e.model.event||"input";(t.attrs||(t.attrs={}))[n]=t.model.value;var a=t.on||(t.on={}),i=a[r],s=t.model.callback;o(i)?(Array.isArray(i)?-1===i.indexOf(s):i!==s)&&(a[r]=[s].concat(i)):a[r]=s}(e.options,t);var p=function(e,t,n){var r=t.options.props;if(!i(r)){var a={},s=e.attrs,l=e.props;if(o(s)||o(l))for(var c in r){var u=z(c);ct(a,l,c,u,!0)||ct(a,s,c,u,!1)}return a}}(t,e);if(s(e.options.functional))return function(e,t,n,r,i){var s=e.options,l={},c=s.props;if(o(c))for(var u in c)l[u]=Fe(u,c,t||a);else o(n.attrs)&&Pt(l,n.attrs),o(n.props)&&Pt(l,n.props);var d=new Ct(n,l,i,r,e),p=s.render.call(null,d._c,d);if(p instanceof fe)return Ot(p,n,d.parent,s,d);if(Array.isArray(p)){for(var m=ut(p)||[],h=new Array(m.length),f=0;f<m.length;f++)h[f]=Ot(m[f],n,d.parent,s,d);return h}}(e,p,t,n,r);var m=t.on;if(t.on=t.nativeOn,s(e.options.abstract)){var f=t.slot;t={},f&&(t.slot=f)}!function(e){for(var t=e.hook||(e.hook={}),n=0;n<Lt.length;n++){var r=Lt[n],a=t[r],i=At[r];a===i||a&&a._merged||(t[r]=a?Ft(i,a):i)}}(t);var g=e.options.name||l;return new fe("vue-component-"+e.cid+(g?"-"+g:""),t,void 0,void 0,void 0,n,{Ctor:e,propsData:p,listeners:m,tag:l,children:r},d)}}}function Ft(e,t){var n=function(n,r){e(n,r),t(n,r)};return n._merged=!0,n}function Mt(e,t,n,r,a,u){return(Array.isArray(n)||l(n))&&(a=r,r=n,n=void 0),s(u)&&(a=2),function(e,t,n,r,a){if(o(n)&&o(n.__ob__))return ye();o(n)&&o(n.is)&&(t=n.is);if(!t)return ye();0;Array.isArray(r)&&"function"==typeof r[0]&&((n=n||{}).scopedSlots={default:r[0]},r.length=0);2===a?r=ut(r):1===a&&(r=function(e){for(var t=0;t<e.length;t++)if(Array.isArray(e[t]))return Array.prototype.concat.apply([],e);return e}(r));var l,u;if("string"==typeof t){var d;u=e.$vnode&&e.$vnode.ns||M.getTagNamespace(t),l=M.isReservedTag(t)?new fe(M.parsePlatformTagName(t),n,r,void 0,void 0,e):n&&n.pre||!o(d=Ke(e.$options,"components",t))?new fe(t,n,r,void 0,void 0,e):Kt(d,n,e,r,t)}else l=Kt(t,n,e,r);return Array.isArray(l)?l:o(l)?(o(u)&&function e(t,n,r){t.ns=n,"foreignObject"===t.tag&&(n=void 0,r=!0);if(o(t.children))for(var a=0,l=t.children.length;a<l;a++){var c=t.children[a];o(c.tag)&&(i(c.ns)||s(r)&&"svg"!==c.tag)&&e(c,n,r)}}(l,u),o(n)&&function(e){c(e.style)&&at(e.style);c(e.class)&&at(e.class)}(n),l):ye()}(e,t,n,r,a)}var Nt,Ut=null;function Bt(e,t){return(e.__esModule||le&&"Module"===e[Symbol.toStringTag])&&(e=e.default),c(e)?t.extend(e):e}function $t(e){return e.isComment&&e.asyncFactory}function Wt(e){if(Array.isArray(e))for(var t=0;t<e.length;t++){var n=e[t];if(o(n)&&(o(n.componentOptions)||$t(n)))return n}}function Gt(e,t){Nt.$on(e,t)}function Vt(e,t){Nt.$off(e,t)}function Ht(e,t){var n=Nt;return function r(){var a=t.apply(null,arguments);null!==a&&n.$off(e,r)}}function Qt(e,t,n){Nt=e,st(t,n||{},Gt,Vt,Ht,e),Nt=void 0}var Jt=null;function Yt(e){var t=Jt;return Jt=e,function(){Jt=t}}function Xt(e){for(;e&&(e=e.$parent);)if(e._inactive)return!0;return!1}function Zt(e,t){if(t){if(e._directInactive=!1,Xt(e))return}else if(e._directInactive)return;if(e._inactive||null===e._inactive){e._inactive=!1;for(var n=0;n<e.$children.length;n++)Zt(e.$children[n]);en(e,"activated")}}function en(e,t){me();var n=e.$options[t],r=t+" hook";if(n)for(var a=0,i=n.length;a<i;a++)$e(n[a],e,null,e,r);e._hasHookEvent&&e.$emit("hook:"+t),he()}var tn=[],nn=[],rn={},an=!1,on=!1,sn=0;var ln=0,cn=Date.now;if(G&&!J){var un=window.performance;un&&"function"==typeof un.now&&cn()>document.createEvent("Event").timeStamp&&(cn=function(){return un.now()})}function dn(){var e,t;for(ln=cn(),on=!0,tn.sort((function(e,t){return e.id-t.id})),sn=0;sn<tn.length;sn++)(e=tn[sn]).before&&e.before(),t=e.id,rn[t]=null,e.run();var n=nn.slice(),r=tn.slice();sn=tn.length=nn.length=0,rn={},an=on=!1,function(e){for(var t=0;t<e.length;t++)e[t]._inactive=!0,Zt(e[t],!0)}(n),function(e){var t=e.length;for(;t--;){var n=e[t],r=n.vm;r._watcher===n&&r._isMounted&&!r._isDestroyed&&en(r,"updated")}}(r),ie&&M.devtools&&ie.emit("flush")}var pn=0,mn=function(e,t,n,r,a){this.vm=e,a&&(e._watcher=this),e._watchers.push(this),r?(this.deep=!!r.deep,this.user=!!r.user,this.lazy=!!r.lazy,this.sync=!!r.sync,this.before=r.before):this.deep=this.user=this.lazy=this.sync=!1,this.cb=n,this.id=++pn,this.active=!0,this.dirty=this.lazy,this.deps=[],this.newDeps=[],this.depIds=new se,this.newDepIds=new se,this.expression="","function"==typeof t?this.getter=t:(this.getter=function(e){if(!B.test(e)){var t=e.split(".");return function(e){for(var n=0;n<t.length;n++){if(!e)return;e=e[t[n]]}return e}}}(t),this.getter||(this.getter=R)),this.value=this.lazy?void 0:this.get()};mn.prototype.get=function(){var e;me(this);var t=this.vm;try{e=this.getter.call(t,t)}catch(e){if(!this.user)throw e;Be(e,t,'getter for watcher "'+this.expression+'"')}finally{this.deep&&at(e),he(),this.cleanupDeps()}return e},mn.prototype.addDep=function(e){var t=e.id;this.newDepIds.has(t)||(this.newDepIds.add(t),this.newDeps.push(e),this.depIds.has(t)||e.addSub(this))},mn.prototype.cleanupDeps=function(){for(var e=this.deps.length;e--;){var t=this.deps[e];this.newDepIds.has(t.id)||t.removeSub(this)}var n=this.depIds;this.depIds=this.newDepIds,this.newDepIds=n,this.newDepIds.clear(),n=this.deps,this.deps=this.newDeps,this.newDeps=n,this.newDeps.length=0},mn.prototype.update=function(){this.lazy?this.dirty=!0:this.sync?this.run():function(e){var t=e.id;if(null==rn[t]){if(rn[t]=!0,on){for(var n=tn.length-1;n>sn&&tn[n].id>e.id;)n--;tn.splice(n+1,0,e)}else tn.push(e);an||(an=!0,nt(dn))}}(this)},mn.prototype.run=function(){if(this.active){var e=this.get();if(e!==this.value||c(e)||this.deep){var t=this.value;if(this.value=e,this.user)try{this.cb.call(this.vm,e,t)}catch(e){Be(e,this.vm,'callback for watcher "'+this.expression+'"')}else this.cb.call(this.vm,e,t)}}},mn.prototype.evaluate=function(){this.value=this.get(),this.dirty=!1},mn.prototype.depend=function(){for(var e=this.deps.length;e--;)this.deps[e].depend()},mn.prototype.teardown=function(){if(this.active){this.vm._isBeingDestroyed||b(this.vm._watchers,this);for(var e=this.deps.length;e--;)this.deps[e].removeSub(this);this.active=!1}};var hn={enumerable:!0,configurable:!0,get:R,set:R};function fn(e,t,n){hn.get=function(){return this[t][n]},hn.set=function(e){this[t][n]=e},Object.defineProperty(e,n,hn)}function gn(e){e._watchers=[];var t=e.$options;t.props&&function(e,t){var n=e.$options.propsData||{},r=e._props={},a=e.$options._propKeys=[];e.$parent&&Ie(!1);var i=function(i){a.push(i);var o=Fe(i,t,n,e);ze(r,i,o),i in e||fn(e,"_props",i)};for(var o in t)i(o);Ie(!0)}(e,t.props),t.methods&&function(e,t){e.$options.props;for(var n in t)e[n]="function"!=typeof t[n]?R:D(t[n],e)}(e,t.methods),t.data?function(e){var t=e.$options.data;d(t=e._data="function"==typeof t?function(e,t){me();try{return e.call(t,t)}catch(e){return Be(e,t,"data()"),{}}finally{he()}}(t,e):t||{})||(t={});var n=Object.keys(t),r=e.$options.props,a=(e.$options.methods,n.length);for(;a--;){var i=n[a];0,r&&w(r,i)||(o=void 0,36!==(o=(i+"").charCodeAt(0))&&95!==o&&fn(e,"_data",i))}var o;je(t,!0)}(e):je(e._data={},!0),t.computed&&function(e,t){var n=e._computedWatchers=Object.create(null),r=ae();for(var a in t){var i=t[a],o="function"==typeof i?i:i.get;0,r||(n[a]=new mn(e,o||R,R,yn)),a in e||vn(e,a,i)}}(e,t.computed),t.watch&&t.watch!==te&&function(e,t){for(var n in t){var r=t[n];if(Array.isArray(r))for(var a=0;a<r.length;a++)wn(e,n,r[a]);else wn(e,n,r)}}(e,t.watch)}var yn={lazy:!0};function vn(e,t,n){var r=!ae();"function"==typeof n?(hn.get=r?bn(t):kn(n),hn.set=R):(hn.get=n.get?r&&!1!==n.cache?bn(t):kn(n.get):R,hn.set=n.set||R),Object.defineProperty(e,t,hn)}function bn(e){return function(){var t=this._computedWatchers&&this._computedWatchers[e];if(t)return t.dirty&&t.evaluate(),de.target&&t.depend(),t.value}}function kn(e){return function(){return e.call(this,this)}}function wn(e,t,n,r){return d(n)&&(r=n,n=n.handler),"string"==typeof n&&(n=e[n]),e.$watch(t,n,r)}var xn=0;function Tn(e){var t=e.options;if(e.super){var n=Tn(e.super);if(n!==e.superOptions){e.superOptions=n;var r=function(e){var t,n=e.options,r=e.sealedOptions;for(var a in n)n[a]!==r[a]&&(t||(t={}),t[a]=n[a]);return t}(e);r&&_(e.extendOptions,r),(t=e.options=Le(n,e.extendOptions)).name&&(t.components[t.name]=e)}}return t}function In(e){this._init(e)}function qn(e){e.cid=0;var t=1;e.extend=function(e){e=e||{};var n=this,r=n.cid,a=e._Ctor||(e._Ctor={});if(a[r])return a[r];var i=e.name||n.options.name;var o=function(e){this._init(e)};return(o.prototype=Object.create(n.prototype)).constructor=o,o.cid=t++,o.options=Le(n.options,e),o.super=n,o.options.props&&function(e){var t=e.options.props;for(var n in t)fn(e.prototype,"_props",n)}(o),o.options.computed&&function(e){var t=e.options.computed;for(var n in t)vn(e.prototype,n,t[n])}(o),o.extend=n.extend,o.mixin=n.mixin,o.use=n.use,K.forEach((function(e){o[e]=n[e]})),i&&(o.options.components[i]=o),o.superOptions=n.options,o.extendOptions=e,o.sealedOptions=_({},o.options),a[r]=o,o}}function jn(e){return e&&(e.Ctor.options.name||e.tag)}function zn(e,t){return Array.isArray(e)?e.indexOf(t)>-1:"string"==typeof e?e.split(",").indexOf(t)>-1:!!p(e)&&e.test(t)}function Dn(e,t){var n=e.cache,r=e.keys,a=e._vnode;for(var i in n){var o=n[i];if(o){var s=jn(o.componentOptions);s&&!t(s)&&En(n,i,r,a)}}}function En(e,t,n,r){var a=e[t];!a||r&&a.tag===r.tag||a.componentInstance.$destroy(),e[t]=null,b(n,t)}In.prototype._init=function(e){var t=this;t._uid=xn++,t._isVue=!0,e&&e._isComponent?function(e,t){var n=e.$options=Object.create(e.constructor.options),r=t._parentVnode;n.parent=t.parent,n._parentVnode=r;var a=r.componentOptions;n.propsData=a.propsData,n._parentListeners=a.listeners,n._renderChildren=a.children,n._componentTag=a.tag,t.render&&(n.render=t.render,n.staticRenderFns=t.staticRenderFns)}(t,e):t.$options=Le(Tn(t.constructor),e||{},t),t._renderProxy=t,t._self=t,function(e){var t=e.$options,n=t.parent;if(n&&!t.abstract){for(;n.$options.abstract&&n.$parent;)n=n.$parent;n.$children.push(e)}e.$parent=n,e.$root=n?n.$root:e,e.$children=[],e.$refs={},e._watcher=null,e._inactive=null,e._directInactive=!1,e._isMounted=!1,e._isDestroyed=!1,e._isBeingDestroyed=!1}(t),function(e){e._events=Object.create(null),e._hasHookEvent=!1;var t=e.$options._parentListeners;t&&Qt(e,t)}(t),function(e){e._vnode=null,e._staticTrees=null;var t=e.$options,n=e.$vnode=t._parentVnode,r=n&&n.context;e.$slots=mt(t._renderChildren,r),e.$scopedSlots=a,e._c=function(t,n,r,a){return Mt(e,t,n,r,a,!1)},e.$createElement=function(t,n,r,a){return Mt(e,t,n,r,a,!0)};var i=n&&n.data;ze(e,"$attrs",i&&i.attrs||a,null,!0),ze(e,"$listeners",t._parentListeners||a,null,!0)}(t),en(t,"beforeCreate"),function(e){var t=pt(e.$options.inject,e);t&&(Ie(!1),Object.keys(t).forEach((function(n){ze(e,n,t[n])})),Ie(!0))}(t),gn(t),function(e){var t=e.$options.provide;t&&(e._provided="function"==typeof t?t.call(e):t)}(t),en(t,"created"),t.$options.el&&t.$mount(t.$options.el)},function(e){var t={get:function(){return this._data}},n={get:function(){return this._props}};Object.defineProperty(e.prototype,"$data",t),Object.defineProperty(e.prototype,"$props",n),e.prototype.$set=De,e.prototype.$delete=Ee,e.prototype.$watch=function(e,t,n){if(d(t))return wn(this,e,t,n);(n=n||{}).user=!0;var r=new mn(this,e,t,n);if(n.immediate)try{t.call(this,r.value)}catch(e){Be(e,this,'callback for immediate watcher "'+r.expression+'"')}return function(){r.teardown()}}}(In),function(e){var t=/^hook:/;e.prototype.$on=function(e,n){var r=this;if(Array.isArray(e))for(var a=0,i=e.length;a<i;a++)r.$on(e[a],n);else(r._events[e]||(r._events[e]=[])).push(n),t.test(e)&&(r._hasHookEvent=!0);return r},e.prototype.$once=function(e,t){var n=this;function r(){n.$off(e,r),t.apply(n,arguments)}return r.fn=t,n.$on(e,r),n},e.prototype.$off=function(e,t){var n=this;if(!arguments.length)return n._events=Object.create(null),n;if(Array.isArray(e)){for(var r=0,a=e.length;r<a;r++)n.$off(e[r],t);return n}var i,o=n._events[e];if(!o)return n;if(!t)return n._events[e]=null,n;for(var s=o.length;s--;)if((i=o[s])===t||i.fn===t){o.splice(s,1);break}return n},e.prototype.$emit=function(e){var t=this,n=t._events[e];if(n){n=n.length>1?E(n):n;for(var r=E(arguments,1),a='event handler for "'+e+'"',i=0,o=n.length;i<o;i++)$e(n[i],t,r,t,a)}return t}}(In),function(e){e.prototype._update=function(e,t){var n=this,r=n.$el,a=n._vnode,i=Yt(n);n._vnode=e,n.$el=a?n.__patch__(a,e):n.__patch__(n.$el,e,t,!1),i(),r&&(r.__vue__=null),n.$el&&(n.$el.__vue__=n),n.$vnode&&n.$parent&&n.$vnode===n.$parent._vnode&&(n.$parent.$el=n.$el)},e.prototype.$forceUpdate=function(){this._watcher&&this._watcher.update()},e.prototype.$destroy=function(){var e=this;if(!e._isBeingDestroyed){en(e,"beforeDestroy"),e._isBeingDestroyed=!0;var t=e.$parent;!t||t._isBeingDestroyed||e.$options.abstract||b(t.$children,e),e._watcher&&e._watcher.teardown();for(var n=e._watchers.length;n--;)e._watchers[n].teardown();e._data.__ob__&&e._data.__ob__.vmCount--,e._isDestroyed=!0,e.__patch__(e._vnode,null),en(e,"destroyed"),e.$off(),e.$el&&(e.$el.__vue__=null),e.$vnode&&(e.$vnode.parent=null)}}}(In),function(e){Rt(e.prototype),e.prototype.$nextTick=function(e){return nt(e,this)},e.prototype._render=function(){var e,t=this,n=t.$options,r=n.render,a=n._parentVnode;a&&(t.$scopedSlots=ft(a.data.scopedSlots,t.$slots,t.$scopedSlots)),t.$vnode=a;try{Ut=t,e=r.call(t._renderProxy,t.$createElement)}catch(n){Be(n,t,"render"),e=t._vnode}finally{Ut=null}return Array.isArray(e)&&1===e.length&&(e=e[0]),e instanceof fe||(e=ye()),e.parent=a,e}}(In);var _n=[String,RegExp,Array],Sn={KeepAlive:{name:"keep-alive",abstract:!0,props:{include:_n,exclude:_n,max:[String,Number]},created:function(){this.cache=Object.create(null),this.keys=[]},destroyed:function(){for(var e in this.cache)En(this.cache,e,this.keys)},mounted:function(){var e=this;this.$watch("include",(function(t){Dn(e,(function(e){return zn(t,e)}))})),this.$watch("exclude",(function(t){Dn(e,(function(e){return!zn(t,e)}))}))},render:function(){var e=this.$slots.default,t=Wt(e),n=t&&t.componentOptions;if(n){var r=jn(n),a=this.include,i=this.exclude;if(a&&(!r||!zn(a,r))||i&&r&&zn(i,r))return t;var o=this.cache,s=this.keys,l=null==t.key?n.Ctor.cid+(n.tag?"::"+n.tag:""):t.key;o[l]?(t.componentInstance=o[l].componentInstance,b(s,l),s.push(l)):(o[l]=t,s.push(l),this.max&&s.length>parseInt(this.max)&&En(o,s[0],s,this._vnode)),t.data.keepAlive=!0}return t||e&&e[0]}}};!function(e){var t={get:function(){return M}};Object.defineProperty(e,"config",t),e.util={warn:ce,extend:_,mergeOptions:Le,defineReactive:ze},e.set=De,e.delete=Ee,e.nextTick=nt,e.observable=function(e){return je(e),e},e.options=Object.create(null),K.forEach((function(t){e.options[t+"s"]=Object.create(null)})),e.options._base=e,_(e.options.components,Sn),function(e){e.use=function(e){var t=this._installedPlugins||(this._installedPlugins=[]);if(t.indexOf(e)>-1)return this;var n=E(arguments,1);return n.unshift(this),"function"==typeof e.install?e.install.apply(e,n):"function"==typeof e&&e.apply(null,n),t.push(e),this}}(e),function(e){e.mixin=function(e){return this.options=Le(this.options,e),this}}(e),qn(e),function(e){K.forEach((function(t){e[t]=function(e,n){return n?("component"===t&&d(n)&&(n.name=n.name||e,n=this.options._base.extend(n)),"directive"===t&&"function"==typeof n&&(n={bind:n,update:n}),this.options[t+"s"][e]=n,n):this.options[t+"s"][e]}}))}(e)}(In),Object.defineProperty(In.prototype,"$isServer",{get:ae}),Object.defineProperty(In.prototype,"$ssrContext",{get:function(){return this.$vnode&&this.$vnode.ssrContext}}),Object.defineProperty(In,"FunctionalRenderContext",{value:Ct}),In.version="2.6.12";var Rn=y("style,class"),Cn=y("input,textarea,option,select,progress"),On=y("contenteditable,draggable,spellcheck"),Pn=y("events,caret,typing,plaintext-only"),An=y("allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,default,defaultchecked,defaultmuted,defaultselected,defer,disabled,enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,required,reversed,scoped,seamless,selected,sortable,translate,truespeed,typemustmatch,visible"),Ln="http://www.w3.org/1999/xlink",Kn=function(e){return":"===e.charAt(5)&&"xlink"===e.slice(0,5)},Fn=function(e){return Kn(e)?e.slice(6,e.length):""},Mn=function(e){return null==e||!1===e};function Nn(e){for(var t=e.data,n=e,r=e;o(r.componentInstance);)(r=r.componentInstance._vnode)&&r.data&&(t=Un(r.data,t));for(;o(n=n.parent);)n&&n.data&&(t=Un(t,n.data));return function(e,t){if(o(e)||o(t))return Bn(e,$n(t));return""}(t.staticClass,t.class)}function Un(e,t){return{staticClass:Bn(e.staticClass,t.staticClass),class:o(e.class)?[e.class,t.class]:t.class}}function Bn(e,t){return e?t?e+" "+t:e:t||""}function $n(e){return Array.isArray(e)?function(e){for(var t,n="",r=0,a=e.length;r<a;r++)o(t=$n(e[r]))&&""!==t&&(n&&(n+=" "),n+=t);return n}(e):c(e)?function(e){var t="";for(var n in e)e[n]&&(t&&(t+=" "),t+=n);return t}(e):"string"==typeof e?e:""}var Wn={svg:"http://www.w3.org/2000/svg",math:"http://www.w3.org/1998/Math/MathML"},Gn=y("html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,menuitem,summary,content,element,shadow,template,blockquote,iframe,tfoot"),Vn=y("svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view",!0),Hn=function(e){return Gn(e)||Vn(e)};var Qn=Object.create(null);var Jn=y("text,number,password,search,email,tel,url");var Yn=Object.freeze({createElement:function(e,t){var n=document.createElement(e);return"select"!==e||t.data&&t.data.attrs&&void 0!==t.data.attrs.multiple&&n.setAttribute("multiple","multiple"),n},createElementNS:function(e,t){return document.createElementNS(Wn[e],t)},createTextNode:function(e){return document.createTextNode(e)},createComment:function(e){return document.createComment(e)},insertBefore:function(e,t,n){e.insertBefore(t,n)},removeChild:function(e,t){e.removeChild(t)},appendChild:function(e,t){e.appendChild(t)},parentNode:function(e){return e.parentNode},nextSibling:function(e){return e.nextSibling},tagName:function(e){return e.tagName},setTextContent:function(e,t){e.textContent=t},setStyleScope:function(e,t){e.setAttribute(t,"")}}),Xn={create:function(e,t){Zn(t)},update:function(e,t){e.data.ref!==t.data.ref&&(Zn(e,!0),Zn(t))},destroy:function(e){Zn(e,!0)}};function Zn(e,t){var n=e.data.ref;if(o(n)){var r=e.context,a=e.componentInstance||e.elm,i=r.$refs;t?Array.isArray(i[n])?b(i[n],a):i[n]===a&&(i[n]=void 0):e.data.refInFor?Array.isArray(i[n])?i[n].indexOf(a)<0&&i[n].push(a):i[n]=[a]:i[n]=a}}var er=new fe("",{},[]),tr=["create","activate","update","remove","destroy"];function nr(e,t){return e.key===t.key&&(e.tag===t.tag&&e.isComment===t.isComment&&o(e.data)===o(t.data)&&function(e,t){if("input"!==e.tag)return!0;var n,r=o(n=e.data)&&o(n=n.attrs)&&n.type,a=o(n=t.data)&&o(n=n.attrs)&&n.type;return r===a||Jn(r)&&Jn(a)}(e,t)||s(e.isAsyncPlaceholder)&&e.asyncFactory===t.asyncFactory&&i(t.asyncFactory.error))}function rr(e,t,n){var r,a,i={};for(r=t;r<=n;++r)o(a=e[r].key)&&(i[a]=r);return i}var ar={create:ir,update:ir,destroy:function(e){ir(e,er)}};function ir(e,t){(e.data.directives||t.data.directives)&&function(e,t){var n,r,a,i=e===er,o=t===er,s=sr(e.data.directives,e.context),l=sr(t.data.directives,t.context),c=[],u=[];for(n in l)r=s[n],a=l[n],r?(a.oldValue=r.value,a.oldArg=r.arg,cr(a,"update",t,e),a.def&&a.def.componentUpdated&&u.push(a)):(cr(a,"bind",t,e),a.def&&a.def.inserted&&c.push(a));if(c.length){var d=function(){for(var n=0;n<c.length;n++)cr(c[n],"inserted",t,e)};i?lt(t,"insert",d):d()}u.length&&lt(t,"postpatch",(function(){for(var n=0;n<u.length;n++)cr(u[n],"componentUpdated",t,e)}));if(!i)for(n in s)l[n]||cr(s[n],"unbind",e,e,o)}(e,t)}var or=Object.create(null);function sr(e,t){var n,r,a=Object.create(null);if(!e)return a;for(n=0;n<e.length;n++)(r=e[n]).modifiers||(r.modifiers=or),a[lr(r)]=r,r.def=Ke(t.$options,"directives",r.name);return a}function lr(e){return e.rawName||e.name+"."+Object.keys(e.modifiers||{}).join(".")}function cr(e,t,n,r,a){var i=e.def&&e.def[t];if(i)try{i(n.elm,e,n,r,a)}catch(r){Be(r,n.context,"directive "+e.name+" "+t+" hook")}}var ur=[Xn,ar];function dr(e,t){var n=t.componentOptions;if(!(o(n)&&!1===n.Ctor.options.inheritAttrs||i(e.data.attrs)&&i(t.data.attrs))){var r,a,s=t.elm,l=e.data.attrs||{},c=t.data.attrs||{};for(r in o(c.__ob__)&&(c=t.data.attrs=_({},c)),c)a=c[r],l[r]!==a&&pr(s,r,a);for(r in(J||X)&&c.value!==l.value&&pr(s,"value",c.value),l)i(c[r])&&(Kn(r)?s.removeAttributeNS(Ln,Fn(r)):On(r)||s.removeAttribute(r))}}function pr(e,t,n){e.tagName.indexOf("-")>-1?mr(e,t,n):An(t)?Mn(n)?e.removeAttribute(t):(n="allowfullscreen"===t&&"EMBED"===e.tagName?"true":t,e.setAttribute(t,n)):On(t)?e.setAttribute(t,function(e,t){return Mn(t)||"false"===t?"false":"contenteditable"===e&&Pn(t)?t:"true"}(t,n)):Kn(t)?Mn(n)?e.removeAttributeNS(Ln,Fn(t)):e.setAttributeNS(Ln,t,n):mr(e,t,n)}function mr(e,t,n){if(Mn(n))e.removeAttribute(t);else{if(J&&!Y&&"TEXTAREA"===e.tagName&&"placeholder"===t&&""!==n&&!e.__ieph){var r=function(t){t.stopImmediatePropagation(),e.removeEventListener("input",r)};e.addEventListener("input",r),e.__ieph=!0}e.setAttribute(t,n)}}var hr={create:dr,update:dr};function fr(e,t){var n=t.elm,r=t.data,a=e.data;if(!(i(r.staticClass)&&i(r.class)&&(i(a)||i(a.staticClass)&&i(a.class)))){var s=Nn(t),l=n._transitionClasses;o(l)&&(s=Bn(s,$n(l))),s!==n._prevClass&&(n.setAttribute("class",s),n._prevClass=s)}}var gr,yr={create:fr,update:fr};function vr(e,t,n){var r=gr;return function a(){var i=t.apply(null,arguments);null!==i&&wr(e,a,n,r)}}var br=He&&!(ee&&Number(ee[1])<=53);function kr(e,t,n,r){if(br){var a=ln,i=t;t=i._wrapper=function(e){if(e.target===e.currentTarget||e.timeStamp>=a||e.timeStamp<=0||e.target.ownerDocument!==document)return i.apply(this,arguments)}}gr.addEventListener(e,t,ne?{capture:n,passive:r}:n)}function wr(e,t,n,r){(r||gr).removeEventListener(e,t._wrapper||t,n)}function xr(e,t){if(!i(e.data.on)||!i(t.data.on)){var n=t.data.on||{},r=e.data.on||{};gr=t.elm,function(e){if(o(e.__r)){var t=J?"change":"input";e[t]=[].concat(e.__r,e[t]||[]),delete e.__r}o(e.__c)&&(e.change=[].concat(e.__c,e.change||[]),delete e.__c)}(n),st(n,r,kr,wr,vr,t.context),gr=void 0}}var Tr,Ir={create:xr,update:xr};function qr(e,t){if(!i(e.data.domProps)||!i(t.data.domProps)){var n,r,a=t.elm,s=e.data.domProps||{},l=t.data.domProps||{};for(n in o(l.__ob__)&&(l=t.data.domProps=_({},l)),s)n in l||(a[n]="");for(n in l){if(r=l[n],"textContent"===n||"innerHTML"===n){if(t.children&&(t.children.length=0),r===s[n])continue;1===a.childNodes.length&&a.removeChild(a.childNodes[0])}if("value"===n&&"PROGRESS"!==a.tagName){a._value=r;var c=i(r)?"":String(r);jr(a,c)&&(a.value=c)}else if("innerHTML"===n&&Vn(a.tagName)&&i(a.innerHTML)){(Tr=Tr||document.createElement("div")).innerHTML="<svg>"+r+"</svg>";for(var u=Tr.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;u.firstChild;)a.appendChild(u.firstChild)}else if(r!==s[n])try{a[n]=r}catch(e){}}}}function jr(e,t){return!e.composing&&("OPTION"===e.tagName||function(e,t){var n=!0;try{n=document.activeElement!==e}catch(e){}return n&&e.value!==t}(e,t)||function(e,t){var n=e.value,r=e._vModifiers;if(o(r)){if(r.number)return g(n)!==g(t);if(r.trim)return n.trim()!==t.trim()}return n!==t}(e,t))}var zr={create:qr,update:qr},Dr=x((function(e){var t={},n=/:(.+)/;return e.split(/;(?![^(]*\))/g).forEach((function(e){if(e){var r=e.split(n);r.length>1&&(t[r[0].trim()]=r[1].trim())}})),t}));function Er(e){var t=_r(e.style);return e.staticStyle?_(e.staticStyle,t):t}function _r(e){return Array.isArray(e)?S(e):"string"==typeof e?Dr(e):e}var Sr,Rr=/^--/,Cr=/\s*!important$/,Or=function(e,t,n){if(Rr.test(t))e.style.setProperty(t,n);else if(Cr.test(n))e.style.setProperty(z(t),n.replace(Cr,""),"important");else{var r=Ar(t);if(Array.isArray(n))for(var a=0,i=n.length;a<i;a++)e.style[r]=n[a];else e.style[r]=n}},Pr=["Webkit","Moz","ms"],Ar=x((function(e){if(Sr=Sr||document.createElement("div").style,"filter"!==(e=I(e))&&e in Sr)return e;for(var t=e.charAt(0).toUpperCase()+e.slice(1),n=0;n<Pr.length;n++){var r=Pr[n]+t;if(r in Sr)return r}}));function Lr(e,t){var n=t.data,r=e.data;if(!(i(n.staticStyle)&&i(n.style)&&i(r.staticStyle)&&i(r.style))){var a,s,l=t.elm,c=r.staticStyle,u=r.normalizedStyle||r.style||{},d=c||u,p=_r(t.data.style)||{};t.data.normalizedStyle=o(p.__ob__)?_({},p):p;var m=function(e,t){var n,r={};if(t)for(var a=e;a.componentInstance;)(a=a.componentInstance._vnode)&&a.data&&(n=Er(a.data))&&_(r,n);(n=Er(e.data))&&_(r,n);for(var i=e;i=i.parent;)i.data&&(n=Er(i.data))&&_(r,n);return r}(t,!0);for(s in d)i(m[s])&&Or(l,s,"");for(s in m)(a=m[s])!==d[s]&&Or(l,s,null==a?"":a)}}var Kr={create:Lr,update:Lr},Fr=/\s+/;function Mr(e,t){if(t&&(t=t.trim()))if(e.classList)t.indexOf(" ")>-1?t.split(Fr).forEach((function(t){return e.classList.add(t)})):e.classList.add(t);else{var n=" "+(e.getAttribute("class")||"")+" ";n.indexOf(" "+t+" ")<0&&e.setAttribute("class",(n+t).trim())}}function Nr(e,t){if(t&&(t=t.trim()))if(e.classList)t.indexOf(" ")>-1?t.split(Fr).forEach((function(t){return e.classList.remove(t)})):e.classList.remove(t),e.classList.length||e.removeAttribute("class");else{for(var n=" "+(e.getAttribute("class")||"")+" ",r=" "+t+" ";n.indexOf(r)>=0;)n=n.replace(r," ");(n=n.trim())?e.setAttribute("class",n):e.removeAttribute("class")}}function Ur(e){if(e){if("object"==typeof e){var t={};return!1!==e.css&&_(t,Br(e.name||"v")),_(t,e),t}return"string"==typeof e?Br(e):void 0}}var Br=x((function(e){return{enterClass:e+"-enter",enterToClass:e+"-enter-to",enterActiveClass:e+"-enter-active",leaveClass:e+"-leave",leaveToClass:e+"-leave-to",leaveActiveClass:e+"-leave-active"}})),$r=G&&!Y,Wr="transition",Gr="transitionend",Vr="animation",Hr="animationend";$r&&(void 0===window.ontransitionend&&void 0!==window.onwebkittransitionend&&(Wr="WebkitTransition",Gr="webkitTransitionEnd"),void 0===window.onanimationend&&void 0!==window.onwebkitanimationend&&(Vr="WebkitAnimation",Hr="webkitAnimationEnd"));var Qr=G?window.requestAnimationFrame?window.requestAnimationFrame.bind(window):setTimeout:function(e){return e()};function Jr(e){Qr((function(){Qr(e)}))}function Yr(e,t){var n=e._transitionClasses||(e._transitionClasses=[]);n.indexOf(t)<0&&(n.push(t),Mr(e,t))}function Xr(e,t){e._transitionClasses&&b(e._transitionClasses,t),Nr(e,t)}function Zr(e,t,n){var r=ta(e,t),a=r.type,i=r.timeout,o=r.propCount;if(!a)return n();var s="transition"===a?Gr:Hr,l=0,c=function(){e.removeEventListener(s,u),n()},u=function(t){t.target===e&&++l>=o&&c()};setTimeout((function(){l<o&&c()}),i+1),e.addEventListener(s,u)}var ea=/\b(transform|all)(,|$)/;function ta(e,t){var n,r=window.getComputedStyle(e),a=(r[Wr+"Delay"]||"").split(", "),i=(r[Wr+"Duration"]||"").split(", "),o=na(a,i),s=(r[Vr+"Delay"]||"").split(", "),l=(r[Vr+"Duration"]||"").split(", "),c=na(s,l),u=0,d=0;return"transition"===t?o>0&&(n="transition",u=o,d=i.length):"animation"===t?c>0&&(n="animation",u=c,d=l.length):d=(n=(u=Math.max(o,c))>0?o>c?"transition":"animation":null)?"transition"===n?i.length:l.length:0,{type:n,timeout:u,propCount:d,hasTransform:"transition"===n&&ea.test(r[Wr+"Property"])}}function na(e,t){for(;e.length<t.length;)e=e.concat(e);return Math.max.apply(null,t.map((function(t,n){return ra(t)+ra(e[n])})))}function ra(e){return 1e3*Number(e.slice(0,-1).replace(",","."))}function aa(e,t){var n=e.elm;o(n._leaveCb)&&(n._leaveCb.cancelled=!0,n._leaveCb());var r=Ur(e.data.transition);if(!i(r)&&!o(n._enterCb)&&1===n.nodeType){for(var a=r.css,s=r.type,l=r.enterClass,u=r.enterToClass,d=r.enterActiveClass,p=r.appearClass,m=r.appearToClass,h=r.appearActiveClass,f=r.beforeEnter,y=r.enter,v=r.afterEnter,b=r.enterCancelled,k=r.beforeAppear,w=r.appear,x=r.afterAppear,T=r.appearCancelled,I=r.duration,q=Jt,j=Jt.$vnode;j&&j.parent;)q=j.context,j=j.parent;var z=!q._isMounted||!e.isRootInsert;if(!z||w||""===w){var D=z&&p?p:l,E=z&&h?h:d,_=z&&m?m:u,S=z&&k||f,R=z&&"function"==typeof w?w:y,C=z&&x||v,O=z&&T||b,P=g(c(I)?I.enter:I);0;var A=!1!==a&&!Y,K=sa(R),F=n._enterCb=L((function(){A&&(Xr(n,_),Xr(n,E)),F.cancelled?(A&&Xr(n,D),O&&O(n)):C&&C(n),n._enterCb=null}));e.data.show||lt(e,"insert",(function(){var t=n.parentNode,r=t&&t._pending&&t._pending[e.key];r&&r.tag===e.tag&&r.elm._leaveCb&&r.elm._leaveCb(),R&&R(n,F)})),S&&S(n),A&&(Yr(n,D),Yr(n,E),Jr((function(){Xr(n,D),F.cancelled||(Yr(n,_),K||(oa(P)?setTimeout(F,P):Zr(n,s,F)))}))),e.data.show&&(t&&t(),R&&R(n,F)),A||K||F()}}}function ia(e,t){var n=e.elm;o(n._enterCb)&&(n._enterCb.cancelled=!0,n._enterCb());var r=Ur(e.data.transition);if(i(r)||1!==n.nodeType)return t();if(!o(n._leaveCb)){var a=r.css,s=r.type,l=r.leaveClass,u=r.leaveToClass,d=r.leaveActiveClass,p=r.beforeLeave,m=r.leave,h=r.afterLeave,f=r.leaveCancelled,y=r.delayLeave,v=r.duration,b=!1!==a&&!Y,k=sa(m),w=g(c(v)?v.leave:v);0;var x=n._leaveCb=L((function(){n.parentNode&&n.parentNode._pending&&(n.parentNode._pending[e.key]=null),b&&(Xr(n,u),Xr(n,d)),x.cancelled?(b&&Xr(n,l),f&&f(n)):(t(),h&&h(n)),n._leaveCb=null}));y?y(T):T()}function T(){x.cancelled||(!e.data.show&&n.parentNode&&((n.parentNode._pending||(n.parentNode._pending={}))[e.key]=e),p&&p(n),b&&(Yr(n,l),Yr(n,d),Jr((function(){Xr(n,l),x.cancelled||(Yr(n,u),k||(oa(w)?setTimeout(x,w):Zr(n,s,x)))}))),m&&m(n,x),b||k||x())}}function oa(e){return"number"==typeof e&&!isNaN(e)}function sa(e){if(i(e))return!1;var t=e.fns;return o(t)?sa(Array.isArray(t)?t[0]:t):(e._length||e.length)>1}function la(e,t){!0!==t.data.show&&aa(t)}var ca=function(e){var t,n,r={},a=e.modules,c=e.nodeOps;for(t=0;t<tr.length;++t)for(r[tr[t]]=[],n=0;n<a.length;++n)o(a[n][tr[t]])&&r[tr[t]].push(a[n][tr[t]]);function u(e){var t=c.parentNode(e);o(t)&&c.removeChild(t,e)}function d(e,t,n,a,i,l,u){if(o(e.elm)&&o(l)&&(e=l[u]=be(e)),e.isRootInsert=!i,!function(e,t,n,a){var i=e.data;if(o(i)){var l=o(e.componentInstance)&&i.keepAlive;if(o(i=i.hook)&&o(i=i.init)&&i(e,!1),o(e.componentInstance))return p(e,t),m(n,e.elm,a),s(l)&&function(e,t,n,a){var i,s=e;for(;s.componentInstance;)if(s=s.componentInstance._vnode,o(i=s.data)&&o(i=i.transition)){for(i=0;i<r.activate.length;++i)r.activate[i](er,s);t.push(s);break}m(n,e.elm,a)}(e,t,n,a),!0}}(e,t,n,a)){var d=e.data,f=e.children,y=e.tag;o(y)?(e.elm=e.ns?c.createElementNS(e.ns,y):c.createElement(y,e),v(e),h(e,f,t),o(d)&&g(e,t),m(n,e.elm,a)):s(e.isComment)?(e.elm=c.createComment(e.text),m(n,e.elm,a)):(e.elm=c.createTextNode(e.text),m(n,e.elm,a))}}function p(e,t){o(e.data.pendingInsert)&&(t.push.apply(t,e.data.pendingInsert),e.data.pendingInsert=null),e.elm=e.componentInstance.$el,f(e)?(g(e,t),v(e)):(Zn(e),t.push(e))}function m(e,t,n){o(e)&&(o(n)?c.parentNode(n)===e&&c.insertBefore(e,t,n):c.appendChild(e,t))}function h(e,t,n){if(Array.isArray(t)){0;for(var r=0;r<t.length;++r)d(t[r],n,e.elm,null,!0,t,r)}else l(e.text)&&c.appendChild(e.elm,c.createTextNode(String(e.text)))}function f(e){for(;e.componentInstance;)e=e.componentInstance._vnode;return o(e.tag)}function g(e,n){for(var a=0;a<r.create.length;++a)r.create[a](er,e);o(t=e.data.hook)&&(o(t.create)&&t.create(er,e),o(t.insert)&&n.push(e))}function v(e){var t;if(o(t=e.fnScopeId))c.setStyleScope(e.elm,t);else for(var n=e;n;)o(t=n.context)&&o(t=t.$options._scopeId)&&c.setStyleScope(e.elm,t),n=n.parent;o(t=Jt)&&t!==e.context&&t!==e.fnContext&&o(t=t.$options._scopeId)&&c.setStyleScope(e.elm,t)}function b(e,t,n,r,a,i){for(;r<=a;++r)d(n[r],i,e,t,!1,n,r)}function k(e){var t,n,a=e.data;if(o(a))for(o(t=a.hook)&&o(t=t.destroy)&&t(e),t=0;t<r.destroy.length;++t)r.destroy[t](e);if(o(t=e.children))for(n=0;n<e.children.length;++n)k(e.children[n])}function w(e,t,n){for(;t<=n;++t){var r=e[t];o(r)&&(o(r.tag)?(x(r),k(r)):u(r.elm))}}function x(e,t){if(o(t)||o(e.data)){var n,a=r.remove.length+1;for(o(t)?t.listeners+=a:t=function(e,t){function n(){0==--n.listeners&&u(e)}return n.listeners=t,n}(e.elm,a),o(n=e.componentInstance)&&o(n=n._vnode)&&o(n.data)&&x(n,t),n=0;n<r.remove.length;++n)r.remove[n](e,t);o(n=e.data.hook)&&o(n=n.remove)?n(e,t):t()}else u(e.elm)}function T(e,t,n,r){for(var a=n;a<r;a++){var i=t[a];if(o(i)&&nr(e,i))return a}}function I(e,t,n,a,l,u){if(e!==t){o(t.elm)&&o(a)&&(t=a[l]=be(t));var p=t.elm=e.elm;if(s(e.isAsyncPlaceholder))o(t.asyncFactory.resolved)?z(e.elm,t,n):t.isAsyncPlaceholder=!0;else if(s(t.isStatic)&&s(e.isStatic)&&t.key===e.key&&(s(t.isCloned)||s(t.isOnce)))t.componentInstance=e.componentInstance;else{var m,h=t.data;o(h)&&o(m=h.hook)&&o(m=m.prepatch)&&m(e,t);var g=e.children,y=t.children;if(o(h)&&f(t)){for(m=0;m<r.update.length;++m)r.update[m](e,t);o(m=h.hook)&&o(m=m.update)&&m(e,t)}i(t.text)?o(g)&&o(y)?g!==y&&function(e,t,n,r,a){var s,l,u,p=0,m=0,h=t.length-1,f=t[0],g=t[h],y=n.length-1,v=n[0],k=n[y],x=!a;for(0;p<=h&&m<=y;)i(f)?f=t[++p]:i(g)?g=t[--h]:nr(f,v)?(I(f,v,r,n,m),f=t[++p],v=n[++m]):nr(g,k)?(I(g,k,r,n,y),g=t[--h],k=n[--y]):nr(f,k)?(I(f,k,r,n,y),x&&c.insertBefore(e,f.elm,c.nextSibling(g.elm)),f=t[++p],k=n[--y]):nr(g,v)?(I(g,v,r,n,m),x&&c.insertBefore(e,g.elm,f.elm),g=t[--h],v=n[++m]):(i(s)&&(s=rr(t,p,h)),i(l=o(v.key)?s[v.key]:T(v,t,p,h))?d(v,r,e,f.elm,!1,n,m):nr(u=t[l],v)?(I(u,v,r,n,m),t[l]=void 0,x&&c.insertBefore(e,u.elm,f.elm)):d(v,r,e,f.elm,!1,n,m),v=n[++m]);p>h?b(e,i(n[y+1])?null:n[y+1].elm,n,m,y,r):m>y&&w(t,p,h)}(p,g,y,n,u):o(y)?(o(e.text)&&c.setTextContent(p,""),b(p,null,y,0,y.length-1,n)):o(g)?w(g,0,g.length-1):o(e.text)&&c.setTextContent(p,""):e.text!==t.text&&c.setTextContent(p,t.text),o(h)&&o(m=h.hook)&&o(m=m.postpatch)&&m(e,t)}}}function q(e,t,n){if(s(n)&&o(e.parent))e.parent.data.pendingInsert=t;else for(var r=0;r<t.length;++r)t[r].data.hook.insert(t[r])}var j=y("attrs,class,staticClass,staticStyle,key");function z(e,t,n,r){var a,i=t.tag,l=t.data,c=t.children;if(r=r||l&&l.pre,t.elm=e,s(t.isComment)&&o(t.asyncFactory))return t.isAsyncPlaceholder=!0,!0;if(o(l)&&(o(a=l.hook)&&o(a=a.init)&&a(t,!0),o(a=t.componentInstance)))return p(t,n),!0;if(o(i)){if(o(c))if(e.hasChildNodes())if(o(a=l)&&o(a=a.domProps)&&o(a=a.innerHTML)){if(a!==e.innerHTML)return!1}else{for(var u=!0,d=e.firstChild,m=0;m<c.length;m++){if(!d||!z(d,c[m],n,r)){u=!1;break}d=d.nextSibling}if(!u||d)return!1}else h(t,c,n);if(o(l)){var f=!1;for(var y in l)if(!j(y)){f=!0,g(t,n);break}!f&&l.class&&at(l.class)}}else e.data!==t.text&&(e.data=t.text);return!0}return function(e,t,n,a){if(!i(t)){var l,u=!1,p=[];if(i(e))u=!0,d(t,p);else{var m=o(e.nodeType);if(!m&&nr(e,t))I(e,t,p,null,null,a);else{if(m){if(1===e.nodeType&&e.hasAttribute("data-server-rendered")&&(e.removeAttribute("data-server-rendered"),n=!0),s(n)&&z(e,t,p))return q(t,p,!0),e;l=e,e=new fe(c.tagName(l).toLowerCase(),{},[],void 0,l)}var h=e.elm,g=c.parentNode(h);if(d(t,p,h._leaveCb?null:g,c.nextSibling(h)),o(t.parent))for(var y=t.parent,v=f(t);y;){for(var b=0;b<r.destroy.length;++b)r.destroy[b](y);if(y.elm=t.elm,v){for(var x=0;x<r.create.length;++x)r.create[x](er,y);var T=y.data.hook.insert;if(T.merged)for(var j=1;j<T.fns.length;j++)T.fns[j]()}else Zn(y);y=y.parent}o(g)?w([e],0,0):o(e.tag)&&k(e)}}return q(t,p,u),t.elm}o(e)&&k(e)}}({nodeOps:Yn,modules:[hr,yr,Ir,zr,Kr,G?{create:la,activate:la,remove:function(e,t){!0!==e.data.show?ia(e,t):t()}}:{}].concat(ur)});Y&&document.addEventListener("selectionchange",(function(){var e=document.activeElement;e&&e.vmodel&&va(e,"input")}));var ua={inserted:function(e,t,n,r){"select"===n.tag?(r.elm&&!r.elm._vOptions?lt(n,"postpatch",(function(){ua.componentUpdated(e,t,n)})):da(e,t,n.context),e._vOptions=[].map.call(e.options,ha)):("textarea"===n.tag||Jn(e.type))&&(e._vModifiers=t.modifiers,t.modifiers.lazy||(e.addEventListener("compositionstart",fa),e.addEventListener("compositionend",ya),e.addEventListener("change",ya),Y&&(e.vmodel=!0)))},componentUpdated:function(e,t,n){if("select"===n.tag){da(e,t,n.context);var r=e._vOptions,a=e._vOptions=[].map.call(e.options,ha);if(a.some((function(e,t){return!P(e,r[t])})))(e.multiple?t.value.some((function(e){return ma(e,a)})):t.value!==t.oldValue&&ma(t.value,a))&&va(e,"change")}}};function da(e,t,n){pa(e,t,n),(J||X)&&setTimeout((function(){pa(e,t,n)}),0)}function pa(e,t,n){var r=t.value,a=e.multiple;if(!a||Array.isArray(r)){for(var i,o,s=0,l=e.options.length;s<l;s++)if(o=e.options[s],a)i=A(r,ha(o))>-1,o.selected!==i&&(o.selected=i);else if(P(ha(o),r))return void(e.selectedIndex!==s&&(e.selectedIndex=s));a||(e.selectedIndex=-1)}}function ma(e,t){return t.every((function(t){return!P(t,e)}))}function ha(e){return"_value"in e?e._value:e.value}function fa(e){e.target.composing=!0}function ya(e){e.target.composing&&(e.target.composing=!1,va(e.target,"input"))}function va(e,t){var n=document.createEvent("HTMLEvents");n.initEvent(t,!0,!0),e.dispatchEvent(n)}function ba(e){return!e.componentInstance||e.data&&e.data.transition?e:ba(e.componentInstance._vnode)}var ka={model:ua,show:{bind:function(e,t,n){var r=t.value,a=(n=ba(n)).data&&n.data.transition,i=e.__vOriginalDisplay="none"===e.style.display?"":e.style.display;r&&a?(n.data.show=!0,aa(n,(function(){e.style.display=i}))):e.style.display=r?i:"none"},update:function(e,t,n){var r=t.value;!r!=!t.oldValue&&((n=ba(n)).data&&n.data.transition?(n.data.show=!0,r?aa(n,(function(){e.style.display=e.__vOriginalDisplay})):ia(n,(function(){e.style.display="none"}))):e.style.display=r?e.__vOriginalDisplay:"none")},unbind:function(e,t,n,r,a){a||(e.style.display=e.__vOriginalDisplay)}}},wa={name:String,appear:Boolean,css:Boolean,mode:String,type:String,enterClass:String,leaveClass:String,enterToClass:String,leaveToClass:String,enterActiveClass:String,leaveActiveClass:String,appearClass:String,appearActiveClass:String,appearToClass:String,duration:[Number,String,Object]};function xa(e){var t=e&&e.componentOptions;return t&&t.Ctor.options.abstract?xa(Wt(t.children)):e}function Ta(e){var t={},n=e.$options;for(var r in n.propsData)t[r]=e[r];var a=n._parentListeners;for(var i in a)t[I(i)]=a[i];return t}function Ia(e,t){if(/\d-keep-alive$/.test(t.tag))return e("keep-alive",{props:t.componentOptions.propsData})}var qa=function(e){return e.tag||$t(e)},ja=function(e){return"show"===e.name},za={name:"transition",props:wa,abstract:!0,render:function(e){var t=this,n=this.$slots.default;if(n&&(n=n.filter(qa)).length){0;var r=this.mode;0;var a=n[0];if(function(e){for(;e=e.parent;)if(e.data.transition)return!0}(this.$vnode))return a;var i=xa(a);if(!i)return a;if(this._leaving)return Ia(e,a);var o="__transition-"+this._uid+"-";i.key=null==i.key?i.isComment?o+"comment":o+i.tag:l(i.key)?0===String(i.key).indexOf(o)?i.key:o+i.key:i.key;var s=(i.data||(i.data={})).transition=Ta(this),c=this._vnode,u=xa(c);if(i.data.directives&&i.data.directives.some(ja)&&(i.data.show=!0),u&&u.data&&!function(e,t){return t.key===e.key&&t.tag===e.tag}(i,u)&&!$t(u)&&(!u.componentInstance||!u.componentInstance._vnode.isComment)){var d=u.data.transition=_({},s);if("out-in"===r)return this._leaving=!0,lt(d,"afterLeave",(function(){t._leaving=!1,t.$forceUpdate()})),Ia(e,a);if("in-out"===r){if($t(i))return c;var p,m=function(){p()};lt(s,"afterEnter",m),lt(s,"enterCancelled",m),lt(d,"delayLeave",(function(e){p=e}))}}return a}}},Da=_({tag:String,moveClass:String},wa);function Ea(e){e.elm._moveCb&&e.elm._moveCb(),e.elm._enterCb&&e.elm._enterCb()}function _a(e){e.data.newPos=e.elm.getBoundingClientRect()}function Sa(e){var t=e.data.pos,n=e.data.newPos,r=t.left-n.left,a=t.top-n.top;if(r||a){e.data.moved=!0;var i=e.elm.style;i.transform=i.WebkitTransform="translate("+r+"px,"+a+"px)",i.transitionDuration="0s"}}delete Da.mode;var Ra={Transition:za,TransitionGroup:{props:Da,beforeMount:function(){var e=this,t=this._update;this._update=function(n,r){var a=Yt(e);e.__patch__(e._vnode,e.kept,!1,!0),e._vnode=e.kept,a(),t.call(e,n,r)}},render:function(e){for(var t=this.tag||this.$vnode.data.tag||"span",n=Object.create(null),r=this.prevChildren=this.children,a=this.$slots.default||[],i=this.children=[],o=Ta(this),s=0;s<a.length;s++){var l=a[s];if(l.tag)if(null!=l.key&&0!==String(l.key).indexOf("__vlist"))i.push(l),n[l.key]=l,(l.data||(l.data={})).transition=o;else;}if(r){for(var c=[],u=[],d=0;d<r.length;d++){var p=r[d];p.data.transition=o,p.data.pos=p.elm.getBoundingClientRect(),n[p.key]?c.push(p):u.push(p)}this.kept=e(t,null,c),this.removed=u}return e(t,null,i)},updated:function(){var e=this.prevChildren,t=this.moveClass||(this.name||"v")+"-move";e.length&&this.hasMove(e[0].elm,t)&&(e.forEach(Ea),e.forEach(_a),e.forEach(Sa),this._reflow=document.body.offsetHeight,e.forEach((function(e){if(e.data.moved){var n=e.elm,r=n.style;Yr(n,t),r.transform=r.WebkitTransform=r.transitionDuration="",n.addEventListener(Gr,n._moveCb=function e(r){r&&r.target!==n||r&&!/transform$/.test(r.propertyName)||(n.removeEventListener(Gr,e),n._moveCb=null,Xr(n,t))})}})))},methods:{hasMove:function(e,t){if(!$r)return!1;if(this._hasMove)return this._hasMove;var n=e.cloneNode();e._transitionClasses&&e._transitionClasses.forEach((function(e){Nr(n,e)})),Mr(n,t),n.style.display="none",this.$el.appendChild(n);var r=ta(n);return this.$el.removeChild(n),this._hasMove=r.hasTransform}}}};In.config.mustUseProp=function(e,t,n){return"value"===n&&Cn(e)&&"button"!==t||"selected"===n&&"option"===e||"checked"===n&&"input"===e||"muted"===n&&"video"===e},In.config.isReservedTag=Hn,In.config.isReservedAttr=Rn,In.config.getTagNamespace=function(e){return Vn(e)?"svg":"math"===e?"math":void 0},In.config.isUnknownElement=function(e){if(!G)return!0;if(Hn(e))return!1;if(e=e.toLowerCase(),null!=Qn[e])return Qn[e];var t=document.createElement(e);return e.indexOf("-")>-1?Qn[e]=t.constructor===window.HTMLUnknownElement||t.constructor===window.HTMLElement:Qn[e]=/HTMLUnknownElement/.test(t.toString())},_(In.options.directives,ka),_(In.options.components,Ra),In.prototype.__patch__=G?ca:R,In.prototype.$mount=function(e,t){return function(e,t,n){var r;return e.$el=t,e.$options.render||(e.$options.render=ye),en(e,"beforeMount"),r=function(){e._update(e._render(),n)},new mn(e,r,R,{before:function(){e._isMounted&&!e._isDestroyed&&en(e,"beforeUpdate")}},!0),n=!1,null==e.$vnode&&(e._isMounted=!0,en(e,"mounted")),e}(this,e=e&&G?function(e){if("string"==typeof e){var t=document.querySelector(e);return t||document.createElement("div")}return e}(e):void 0,t)},G&&setTimeout((function(){M.devtools&&ie&&ie.emit("init",In)}),0);var Ca=In;
/*!
  * vue-router v3.4.3
  * (c) 2020 Evan You
  * @license MIT
  */function Oa(e,t){for(var n in t)e[n]=t[n];return e}var Pa={name:"RouterView",functional:!0,props:{name:{type:String,default:"default"}},render:function(e,t){var n=t.props,r=t.children,a=t.parent,i=t.data;i.routerView=!0;for(var o=a.$createElement,s=n.name,l=a.$route,c=a._routerViewCache||(a._routerViewCache={}),u=0,d=!1;a&&a._routerRoot!==a;){var p=a.$vnode?a.$vnode.data:{};p.routerView&&u++,p.keepAlive&&a._directInactive&&a._inactive&&(d=!0),a=a.$parent}if(i.routerViewDepth=u,d){var m=c[s],h=m&&m.component;return h?(m.configProps&&Aa(h,i,m.route,m.configProps),o(h,i,r)):o()}var f=l.matched[u],g=f&&f.components[s];if(!f||!g)return c[s]=null,o();c[s]={component:g},i.registerRouteInstance=function(e,t){var n=f.instances[s];(t&&n!==e||!t&&n===e)&&(f.instances[s]=t)},(i.hook||(i.hook={})).prepatch=function(e,t){f.instances[s]=t.componentInstance},i.hook.init=function(e){e.data.keepAlive&&e.componentInstance&&e.componentInstance!==f.instances[s]&&(f.instances[s]=e.componentInstance)};var y=f.props&&f.props[s];return y&&(Oa(c[s],{route:l,configProps:y}),Aa(g,i,l,y)),o(g,i,r)}};function Aa(e,t,n,r){var a=t.props=function(e,t){switch(typeof t){case"undefined":return;case"object":return t;case"function":return t(e);case"boolean":return t?e.params:void 0;default:0}}(n,r);if(a){a=t.props=Oa({},a);var i=t.attrs=t.attrs||{};for(var o in a)e.props&&o in e.props||(i[o]=a[o],delete a[o])}}var La=/[!'()*]/g,Ka=function(e){return"%"+e.charCodeAt(0).toString(16)},Fa=/%2C/g,Ma=function(e){return encodeURIComponent(e).replace(La,Ka).replace(Fa,",")},Na=decodeURIComponent;var Ua=function(e){return null==e||"object"==typeof e?e:String(e)};function Ba(e){var t={};return(e=e.trim().replace(/^(\?|#|&)/,""))?(e.split("&").forEach((function(e){var n=e.replace(/\+/g," ").split("="),r=Na(n.shift()),a=n.length>0?Na(n.join("=")):null;void 0===t[r]?t[r]=a:Array.isArray(t[r])?t[r].push(a):t[r]=[t[r],a]})),t):t}function $a(e){var t=e?Object.keys(e).map((function(t){var n=e[t];if(void 0===n)return"";if(null===n)return Ma(t);if(Array.isArray(n)){var r=[];return n.forEach((function(e){void 0!==e&&(null===e?r.push(Ma(t)):r.push(Ma(t)+"="+Ma(e)))})),r.join("&")}return Ma(t)+"="+Ma(n)})).filter((function(e){return e.length>0})).join("&"):null;return t?"?"+t:""}var Wa=/\/?$/;function Ga(e,t,n,r){var a=r&&r.options.stringifyQuery,i=t.query||{};try{i=Va(i)}catch(e){}var o={name:t.name||e&&e.name,meta:e&&e.meta||{},path:t.path||"/",hash:t.hash||"",query:i,params:t.params||{},fullPath:Ja(t,a),matched:e?Qa(e):[]};return n&&(o.redirectedFrom=Ja(n,a)),Object.freeze(o)}function Va(e){if(Array.isArray(e))return e.map(Va);if(e&&"object"==typeof e){var t={};for(var n in e)t[n]=Va(e[n]);return t}return e}var Ha=Ga(null,{path:"/"});function Qa(e){for(var t=[];e;)t.unshift(e),e=e.parent;return t}function Ja(e,t){var n=e.path,r=e.query;void 0===r&&(r={});var a=e.hash;return void 0===a&&(a=""),(n||"/")+(t||$a)(r)+a}function Ya(e,t){return t===Ha?e===t:!!t&&(e.path&&t.path?e.path.replace(Wa,"")===t.path.replace(Wa,"")&&e.hash===t.hash&&Xa(e.query,t.query):!(!e.name||!t.name)&&(e.name===t.name&&e.hash===t.hash&&Xa(e.query,t.query)&&Xa(e.params,t.params)))}function Xa(e,t){if(void 0===e&&(e={}),void 0===t&&(t={}),!e||!t)return e===t;var n=Object.keys(e),r=Object.keys(t);return n.length===r.length&&n.every((function(n){var r=e[n],a=t[n];return null==r||null==a?r===a:"object"==typeof r&&"object"==typeof a?Xa(r,a):String(r)===String(a)}))}function Za(e,t,n){var r=e.charAt(0);if("/"===r)return e;if("?"===r||"#"===r)return t+e;var a=t.split("/");n&&a[a.length-1]||a.pop();for(var i=e.replace(/^\//,"").split("/"),o=0;o<i.length;o++){var s=i[o];".."===s?a.pop():"."!==s&&a.push(s)}return""!==a[0]&&a.unshift(""),a.join("/")}function ei(e){return e.replace(/\/\//g,"/")}var ti=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)},ni=gi,ri=li,ai=function(e,t){return ui(li(e,t),t)},ii=ui,oi=fi,si=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function li(e,t){for(var n,r=[],a=0,i=0,o="",s=t&&t.delimiter||"/";null!=(n=si.exec(e));){var l=n[0],c=n[1],u=n.index;if(o+=e.slice(i,u),i=u+l.length,c)o+=c[1];else{var d=e[i],p=n[2],m=n[3],h=n[4],f=n[5],g=n[6],y=n[7];o&&(r.push(o),o="");var v=null!=p&&null!=d&&d!==p,b="+"===g||"*"===g,k="?"===g||"*"===g,w=n[2]||s,x=h||f;r.push({name:m||a++,prefix:p||"",delimiter:w,optional:k,repeat:b,partial:v,asterisk:!!y,pattern:x?pi(x):y?".*":"[^"+di(w)+"]+?"})}}return i<e.length&&(o+=e.substr(i)),o&&r.push(o),r}function ci(e){return encodeURI(e).replace(/[\/?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function ui(e,t){for(var n=new Array(e.length),r=0;r<e.length;r++)"object"==typeof e[r]&&(n[r]=new RegExp("^(?:"+e[r].pattern+")$",hi(t)));return function(t,r){for(var a="",i=t||{},o=(r||{}).pretty?ci:encodeURIComponent,s=0;s<e.length;s++){var l=e[s];if("string"!=typeof l){var c,u=i[l.name];if(null==u){if(l.optional){l.partial&&(a+=l.prefix);continue}throw new TypeError('Expected "'+l.name+'" to be defined')}if(ti(u)){if(!l.repeat)throw new TypeError('Expected "'+l.name+'" to not repeat, but received `'+JSON.stringify(u)+"`");if(0===u.length){if(l.optional)continue;throw new TypeError('Expected "'+l.name+'" to not be empty')}for(var d=0;d<u.length;d++){if(c=o(u[d]),!n[s].test(c))throw new TypeError('Expected all "'+l.name+'" to match "'+l.pattern+'", but received `'+JSON.stringify(c)+"`");a+=(0===d?l.prefix:l.delimiter)+c}}else{if(c=l.asterisk?encodeURI(u).replace(/[?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})):o(u),!n[s].test(c))throw new TypeError('Expected "'+l.name+'" to match "'+l.pattern+'", but received "'+c+'"');a+=l.prefix+c}}else a+=l}return a}}function di(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function pi(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function mi(e,t){return e.keys=t,e}function hi(e){return e&&e.sensitive?"":"i"}function fi(e,t,n){ti(t)||(n=t||n,t=[]);for(var r=(n=n||{}).strict,a=!1!==n.end,i="",o=0;o<e.length;o++){var s=e[o];if("string"==typeof s)i+=di(s);else{var l=di(s.prefix),c="(?:"+s.pattern+")";t.push(s),s.repeat&&(c+="(?:"+l+c+")*"),i+=c=s.optional?s.partial?l+"("+c+")?":"(?:"+l+"("+c+"))?":l+"("+c+")"}}var u=di(n.delimiter||"/"),d=i.slice(-u.length)===u;return r||(i=(d?i.slice(0,-u.length):i)+"(?:"+u+"(?=$))?"),i+=a?"$":r&&d?"":"(?="+u+"|$)",mi(new RegExp("^"+i,hi(n)),t)}function gi(e,t,n){return ti(t)||(n=t||n,t=[]),n=n||{},e instanceof RegExp?function(e,t){var n=e.source.match(/\((?!\?)/g);if(n)for(var r=0;r<n.length;r++)t.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return mi(e,t)}(e,t):ti(e)?function(e,t,n){for(var r=[],a=0;a<e.length;a++)r.push(gi(e[a],t,n).source);return mi(new RegExp("(?:"+r.join("|")+")",hi(n)),t)}(e,t,n):function(e,t,n){return fi(li(e,n),t,n)}(e,t,n)}ni.parse=ri,ni.compile=ai,ni.tokensToFunction=ii,ni.tokensToRegExp=oi;var yi=Object.create(null);function vi(e,t,n){t=t||{};try{var r=yi[e]||(yi[e]=ni.compile(e));return"string"==typeof t.pathMatch&&(t[0]=t.pathMatch),r(t,{pretty:!0})}catch(e){return""}finally{delete t[0]}}function bi(e,t,n,r){var a="string"==typeof e?{path:e}:e;if(a._normalized)return a;if(a.name){var i=(a=Oa({},e)).params;return i&&"object"==typeof i&&(a.params=Oa({},i)),a}if(!a.path&&a.params&&t){(a=Oa({},a))._normalized=!0;var o=Oa(Oa({},t.params),a.params);if(t.name)a.name=t.name,a.params=o;else if(t.matched.length){var s=t.matched[t.matched.length-1].path;a.path=vi(s,o,t.path)}else 0;return a}var l=function(e){var t="",n="",r=e.indexOf("#");r>=0&&(t=e.slice(r),e=e.slice(0,r));var a=e.indexOf("?");return a>=0&&(n=e.slice(a+1),e=e.slice(0,a)),{path:e,query:n,hash:t}}(a.path||""),c=t&&t.path||"/",u=l.path?Za(l.path,c,n||a.append):c,d=function(e,t,n){void 0===t&&(t={});var r,a=n||Ba;try{r=a(e||"")}catch(e){r={}}for(var i in t){var o=t[i];r[i]=Array.isArray(o)?o.map(Ua):Ua(o)}return r}(l.query,a.query,r&&r.options.parseQuery),p=a.hash||l.hash;return p&&"#"!==p.charAt(0)&&(p="#"+p),{_normalized:!0,path:u,query:d,hash:p}}var ki,wi=function(){},xi={name:"RouterLink",props:{to:{type:[String,Object],required:!0},tag:{type:String,default:"a"},exact:Boolean,append:Boolean,replace:Boolean,activeClass:String,exactActiveClass:String,ariaCurrentValue:{type:String,default:"page"},event:{type:[String,Array],default:"click"}},render:function(e){var t=this,n=this.$router,r=this.$route,a=n.resolve(this.to,r,this.append),i=a.location,o=a.route,s=a.href,l={},c=n.options.linkActiveClass,u=n.options.linkExactActiveClass,d=null==c?"router-link-active":c,p=null==u?"router-link-exact-active":u,m=null==this.activeClass?d:this.activeClass,h=null==this.exactActiveClass?p:this.exactActiveClass,f=o.redirectedFrom?Ga(null,bi(o.redirectedFrom),null,n):o;l[h]=Ya(r,f),l[m]=this.exact?l[h]:function(e,t){return 0===e.path.replace(Wa,"/").indexOf(t.path.replace(Wa,"/"))&&(!t.hash||e.hash===t.hash)&&function(e,t){for(var n in t)if(!(n in e))return!1;return!0}(e.query,t.query)}(r,f);var g=l[h]?this.ariaCurrentValue:null,y=function(e){Ti(e)&&(t.replace?n.replace(i,wi):n.push(i,wi))},v={click:Ti};Array.isArray(this.event)?this.event.forEach((function(e){v[e]=y})):v[this.event]=y;var b={class:l},k=!this.$scopedSlots.$hasNormal&&this.$scopedSlots.default&&this.$scopedSlots.default({href:s,route:o,navigate:y,isActive:l[m],isExactActive:l[h]});if(k){if(1===k.length)return k[0];if(k.length>1||!k.length)return 0===k.length?e():e("span",{},k)}if("a"===this.tag)b.on=v,b.attrs={href:s,"aria-current":g};else{var w=function e(t){var n;if(t)for(var r=0;r<t.length;r++){if("a"===(n=t[r]).tag)return n;if(n.children&&(n=e(n.children)))return n}}(this.$slots.default);if(w){w.isStatic=!1;var x=w.data=Oa({},w.data);for(var T in x.on=x.on||{},x.on){var I=x.on[T];T in v&&(x.on[T]=Array.isArray(I)?I:[I])}for(var q in v)q in x.on?x.on[q].push(v[q]):x.on[q]=y;var j=w.data.attrs=Oa({},w.data.attrs);j.href=s,j["aria-current"]=g}else b.on=v}return e(this.tag,b,this.$slots.default)}};function Ti(e){if(!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey||e.defaultPrevented||void 0!==e.button&&0!==e.button)){if(e.currentTarget&&e.currentTarget.getAttribute){var t=e.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(t))return}return e.preventDefault&&e.preventDefault(),!0}}var Ii="undefined"!=typeof window;function qi(e,t,n,r){var a=t||[],i=n||Object.create(null),o=r||Object.create(null);e.forEach((function(e){!function e(t,n,r,a,i,o){var s=a.path,l=a.name;0;var c=a.pathToRegexpOptions||{},u=function(e,t,n){n||(e=e.replace(/\/$/,""));if("/"===e[0])return e;if(null==t)return e;return ei(t.path+"/"+e)}(s,i,c.strict);"boolean"==typeof a.caseSensitive&&(c.sensitive=a.caseSensitive);var d={path:u,regex:ji(u,c),components:a.components||{default:a.component},instances:{},name:l,parent:i,matchAs:o,redirect:a.redirect,beforeEnter:a.beforeEnter,meta:a.meta||{},props:null==a.props?{}:a.components?a.props:{default:a.props}};a.children&&a.children.forEach((function(a){var i=o?ei(o+"/"+a.path):void 0;e(t,n,r,a,d,i)}));n[d.path]||(t.push(d.path),n[d.path]=d);if(void 0!==a.alias)for(var p=Array.isArray(a.alias)?a.alias:[a.alias],m=0;m<p.length;++m){0;var h={path:p[m],children:a.children};e(t,n,r,h,i,d.path||"/")}l&&(r[l]||(r[l]=d))}(a,i,o,e)}));for(var s=0,l=a.length;s<l;s++)"*"===a[s]&&(a.push(a.splice(s,1)[0]),l--,s--);return{pathList:a,pathMap:i,nameMap:o}}function ji(e,t){return ni(e,[],t)}function zi(e,t){var n=qi(e),r=n.pathList,a=n.pathMap,i=n.nameMap;function o(e,n,o){var s=bi(e,n,!1,t),c=s.name;if(c){var u=i[c];if(!u)return l(null,s);var d=u.regex.keys.filter((function(e){return!e.optional})).map((function(e){return e.name}));if("object"!=typeof s.params&&(s.params={}),n&&"object"==typeof n.params)for(var p in n.params)!(p in s.params)&&d.indexOf(p)>-1&&(s.params[p]=n.params[p]);return s.path=vi(u.path,s.params),l(u,s,o)}if(s.path){s.params={};for(var m=0;m<r.length;m++){var h=r[m],f=a[h];if(Di(f.regex,s.path,s.params))return l(f,s,o)}}return l(null,s)}function s(e,n){var r=e.redirect,a="function"==typeof r?r(Ga(e,n,null,t)):r;if("string"==typeof a&&(a={path:a}),!a||"object"!=typeof a)return l(null,n);var s=a,c=s.name,u=s.path,d=n.query,p=n.hash,m=n.params;if(d=s.hasOwnProperty("query")?s.query:d,p=s.hasOwnProperty("hash")?s.hash:p,m=s.hasOwnProperty("params")?s.params:m,c){i[c];return o({_normalized:!0,name:c,query:d,hash:p,params:m},void 0,n)}if(u){var h=function(e,t){return Za(e,t.parent?t.parent.path:"/",!0)}(u,e);return o({_normalized:!0,path:vi(h,m),query:d,hash:p},void 0,n)}return l(null,n)}function l(e,n,r){return e&&e.redirect?s(e,r||n):e&&e.matchAs?function(e,t,n){var r=o({_normalized:!0,path:vi(n,t.params)});if(r){var a=r.matched,i=a[a.length-1];return t.params=r.params,l(i,t)}return l(null,t)}(0,n,e.matchAs):Ga(e,n,r,t)}return{match:o,addRoutes:function(e){qi(e,r,a,i)}}}function Di(e,t,n){var r=t.match(e);if(!r)return!1;if(!n)return!0;for(var a=1,i=r.length;a<i;++a){var o=e.keys[a-1],s="string"==typeof r[a]?decodeURIComponent(r[a]):r[a];o&&(n[o.name||"pathMatch"]=s)}return!0}var Ei=Ii&&window.performance&&window.performance.now?window.performance:Date;function _i(){return Ei.now().toFixed(3)}var Si=_i();function Ri(){return Si}function Ci(e){return Si=e}var Oi=Object.create(null);function Pi(){"scrollRestoration"in window.history&&(window.history.scrollRestoration="manual");var e=window.location.protocol+"//"+window.location.host,t=window.location.href.replace(e,""),n=Oa({},window.history.state);return n.key=Ri(),window.history.replaceState(n,"",t),window.addEventListener("popstate",Ki),function(){window.removeEventListener("popstate",Ki)}}function Ai(e,t,n,r){if(e.app){var a=e.options.scrollBehavior;a&&e.app.$nextTick((function(){var i=function(){var e=Ri();if(e)return Oi[e]}(),o=a.call(e,t,n,r?i:null);o&&("function"==typeof o.then?o.then((function(e){Bi(e,i)})).catch((function(e){0})):Bi(o,i))}))}}function Li(){var e=Ri();e&&(Oi[e]={x:window.pageXOffset,y:window.pageYOffset})}function Ki(e){Li(),e.state&&e.state.key&&Ci(e.state.key)}function Fi(e){return Ni(e.x)||Ni(e.y)}function Mi(e){return{x:Ni(e.x)?e.x:window.pageXOffset,y:Ni(e.y)?e.y:window.pageYOffset}}function Ni(e){return"number"==typeof e}var Ui=/^#\d/;function Bi(e,t){var n,r="object"==typeof e;if(r&&"string"==typeof e.selector){var a=Ui.test(e.selector)?document.getElementById(e.selector.slice(1)):document.querySelector(e.selector);if(a){var i=e.offset&&"object"==typeof e.offset?e.offset:{};t=function(e,t){var n=document.documentElement.getBoundingClientRect(),r=e.getBoundingClientRect();return{x:r.left-n.left-t.x,y:r.top-n.top-t.y}}(a,i={x:Ni((n=i).x)?n.x:0,y:Ni(n.y)?n.y:0})}else Fi(e)&&(t=Mi(e))}else r&&Fi(e)&&(t=Mi(e));t&&window.scrollTo(t.x,t.y)}var $i,Wi=Ii&&((-1===($i=window.navigator.userAgent).indexOf("Android 2.")&&-1===$i.indexOf("Android 4.0")||-1===$i.indexOf("Mobile Safari")||-1!==$i.indexOf("Chrome")||-1!==$i.indexOf("Windows Phone"))&&window.history&&"function"==typeof window.history.pushState);function Gi(e,t){Li();var n=window.history;try{if(t){var r=Oa({},n.state);r.key=Ri(),n.replaceState(r,"",e)}else n.pushState({key:Ci(_i())},"",e)}catch(n){window.location[t?"replace":"assign"](e)}}function Vi(e){Gi(e,!0)}function Hi(e,t,n){var r=function(a){a>=e.length?n():e[a]?t(e[a],(function(){r(a+1)})):r(a+1)};r(0)}var Qi={redirected:2,aborted:4,cancelled:8,duplicated:16};function Ji(e,t){return Xi(e,t,Qi.redirected,'Redirected when going from "'+e.fullPath+'" to "'+function(e){if("string"==typeof e)return e;if("path"in e)return e.path;var t={};return Zi.forEach((function(n){n in e&&(t[n]=e[n])})),JSON.stringify(t,null,2)}(t)+'" via a navigation guard.')}function Yi(e,t){return Xi(e,t,Qi.cancelled,'Navigation cancelled from "'+e.fullPath+'" to "'+t.fullPath+'" with a new navigation.')}function Xi(e,t,n,r){var a=new Error(r);return a._isRouter=!0,a.from=e,a.to=t,a.type=n,a}var Zi=["params","query","hash"];function eo(e){return Object.prototype.toString.call(e).indexOf("Error")>-1}function to(e,t){return eo(e)&&e._isRouter&&(null==t||e.type===t)}function no(e){return function(t,n,r){var a=!1,i=0,o=null;ro(e,(function(e,t,n,s){if("function"==typeof e&&void 0===e.cid){a=!0,i++;var l,c=oo((function(t){var a;((a=t).__esModule||io&&"Module"===a[Symbol.toStringTag])&&(t=t.default),e.resolved="function"==typeof t?t:ki.extend(t),n.components[s]=t,--i<=0&&r()})),u=oo((function(e){var t="Failed to resolve async component "+s+": "+e;o||(o=eo(e)?e:new Error(t),r(o))}));try{l=e(c,u)}catch(e){u(e)}if(l)if("function"==typeof l.then)l.then(c,u);else{var d=l.component;d&&"function"==typeof d.then&&d.then(c,u)}}})),a||r()}}function ro(e,t){return ao(e.map((function(e){return Object.keys(e.components).map((function(n){return t(e.components[n],e.instances[n],e,n)}))})))}function ao(e){return Array.prototype.concat.apply([],e)}var io="function"==typeof Symbol&&"symbol"==typeof Symbol.toStringTag;function oo(e){var t=!1;return function(){for(var n=[],r=arguments.length;r--;)n[r]=arguments[r];if(!t)return t=!0,e.apply(this,n)}}var so=function(e,t){this.router=e,this.base=function(e){if(!e)if(Ii){var t=document.querySelector("base");e=(e=t&&t.getAttribute("href")||"/").replace(/^https?:\/\/[^\/]+/,"")}else e="/";"/"!==e.charAt(0)&&(e="/"+e);return e.replace(/\/$/,"")}(t),this.current=Ha,this.pending=null,this.ready=!1,this.readyCbs=[],this.readyErrorCbs=[],this.errorCbs=[],this.listeners=[]};function lo(e,t,n,r){var a=ro(e,(function(e,r,a,i){var o=function(e,t){"function"!=typeof e&&(e=ki.extend(e));return e.options[t]}(e,t);if(o)return Array.isArray(o)?o.map((function(e){return n(e,r,a,i)})):n(o,r,a,i)}));return ao(r?a.reverse():a)}function co(e,t){if(t)return function(){return e.apply(t,arguments)}}so.prototype.listen=function(e){this.cb=e},so.prototype.onReady=function(e,t){this.ready?e():(this.readyCbs.push(e),t&&this.readyErrorCbs.push(t))},so.prototype.onError=function(e){this.errorCbs.push(e)},so.prototype.transitionTo=function(e,t,n){var r,a=this;try{r=this.router.match(e,this.current)}catch(e){throw this.errorCbs.forEach((function(t){t(e)})),e}this.confirmTransition(r,(function(){var e=a.current;a.updateRoute(r),t&&t(r),a.ensureURL(),a.router.afterHooks.forEach((function(t){t&&t(r,e)})),a.ready||(a.ready=!0,a.readyCbs.forEach((function(e){e(r)})))}),(function(e){n&&n(e),e&&!a.ready&&(a.ready=!0,to(e,Qi.redirected)?a.readyCbs.forEach((function(e){e(r)})):a.readyErrorCbs.forEach((function(t){t(e)})))}))},so.prototype.confirmTransition=function(e,t,n){var r,a,i=this,o=this.current,s=function(e){!to(e)&&eo(e)&&(i.errorCbs.length?i.errorCbs.forEach((function(t){t(e)})):console.error(e)),n&&n(e)},l=e.matched.length-1,c=o.matched.length-1;if(Ya(e,o)&&l===c&&e.matched[l]===o.matched[c])return this.ensureURL(),s(((a=Xi(r=o,e,Qi.duplicated,'Avoided redundant navigation to current location: "'+r.fullPath+'".')).name="NavigationDuplicated",a));var u=function(e,t){var n,r=Math.max(e.length,t.length);for(n=0;n<r&&e[n]===t[n];n++);return{updated:t.slice(0,n),activated:t.slice(n),deactivated:e.slice(n)}}(this.current.matched,e.matched),d=u.updated,p=u.deactivated,m=u.activated,h=[].concat(function(e){return lo(e,"beforeRouteLeave",co,!0)}(p),this.router.beforeHooks,function(e){return lo(e,"beforeRouteUpdate",co)}(d),m.map((function(e){return e.beforeEnter})),no(m));this.pending=e;var f=function(t,n){if(i.pending!==e)return s(Yi(o,e));try{t(e,o,(function(t){!1===t?(i.ensureURL(!0),s(function(e,t){return Xi(e,t,Qi.aborted,'Navigation aborted from "'+e.fullPath+'" to "'+t.fullPath+'" via a navigation guard.')}(o,e))):eo(t)?(i.ensureURL(!0),s(t)):"string"==typeof t||"object"==typeof t&&("string"==typeof t.path||"string"==typeof t.name)?(s(Ji(o,e)),"object"==typeof t&&t.replace?i.replace(t):i.push(t)):n(t)}))}catch(e){s(e)}};Hi(h,f,(function(){var n=[];Hi(function(e,t,n){return lo(e,"beforeRouteEnter",(function(e,r,a,i){return function(e,t,n,r,a){return function(i,o,s){return e(i,o,(function(e){"function"==typeof e&&r.push((function(){!function e(t,n,r,a){n[r]&&!n[r]._isBeingDestroyed?t(n[r]):a()&&setTimeout((function(){e(t,n,r,a)}),16)}(e,t.instances,n,a)})),s(e)}))}}(e,a,i,t,n)}))}(m,n,(function(){return i.current===e})).concat(i.router.resolveHooks),f,(function(){if(i.pending!==e)return s(Yi(o,e));i.pending=null,t(e),i.router.app&&i.router.app.$nextTick((function(){n.forEach((function(e){e()}))}))}))}))},so.prototype.updateRoute=function(e){this.current=e,this.cb&&this.cb(e)},so.prototype.setupListeners=function(){},so.prototype.teardownListeners=function(){this.listeners.forEach((function(e){e()})),this.listeners=[]};var uo=function(e){function t(t,n){e.call(this,t,n),this._startLocation=po(this.base)}return e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t,t.prototype.setupListeners=function(){var e=this;if(!(this.listeners.length>0)){var t=this.router,n=t.options.scrollBehavior,r=Wi&&n;r&&this.listeners.push(Pi());var a=function(){var n=e.current,a=po(e.base);e.current===Ha&&a===e._startLocation||e.transitionTo(a,(function(e){r&&Ai(t,e,n,!0)}))};window.addEventListener("popstate",a),this.listeners.push((function(){window.removeEventListener("popstate",a)}))}},t.prototype.go=function(e){window.history.go(e)},t.prototype.push=function(e,t,n){var r=this,a=this.current;this.transitionTo(e,(function(e){Gi(ei(r.base+e.fullPath)),Ai(r.router,e,a,!1),t&&t(e)}),n)},t.prototype.replace=function(e,t,n){var r=this,a=this.current;this.transitionTo(e,(function(e){Vi(ei(r.base+e.fullPath)),Ai(r.router,e,a,!1),t&&t(e)}),n)},t.prototype.ensureURL=function(e){if(po(this.base)!==this.current.fullPath){var t=ei(this.base+this.current.fullPath);e?Gi(t):Vi(t)}},t.prototype.getCurrentLocation=function(){return po(this.base)},t}(so);function po(e){var t=decodeURI(window.location.pathname);return e&&0===t.toLowerCase().indexOf(e.toLowerCase())&&(t=t.slice(e.length)),(t||"/")+window.location.search+window.location.hash}var mo=function(e){function t(t,n,r){e.call(this,t,n),r&&function(e){var t=po(e);if(!/^\/#/.test(t))return window.location.replace(ei(e+"/#"+t)),!0}(this.base)||ho()}return e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t,t.prototype.setupListeners=function(){var e=this;if(!(this.listeners.length>0)){var t=this.router.options.scrollBehavior,n=Wi&&t;n&&this.listeners.push(Pi());var r=function(){var t=e.current;ho()&&e.transitionTo(fo(),(function(r){n&&Ai(e.router,r,t,!0),Wi||vo(r.fullPath)}))},a=Wi?"popstate":"hashchange";window.addEventListener(a,r),this.listeners.push((function(){window.removeEventListener(a,r)}))}},t.prototype.push=function(e,t,n){var r=this,a=this.current;this.transitionTo(e,(function(e){yo(e.fullPath),Ai(r.router,e,a,!1),t&&t(e)}),n)},t.prototype.replace=function(e,t,n){var r=this,a=this.current;this.transitionTo(e,(function(e){vo(e.fullPath),Ai(r.router,e,a,!1),t&&t(e)}),n)},t.prototype.go=function(e){window.history.go(e)},t.prototype.ensureURL=function(e){var t=this.current.fullPath;fo()!==t&&(e?yo(t):vo(t))},t.prototype.getCurrentLocation=function(){return fo()},t}(so);function ho(){var e=fo();return"/"===e.charAt(0)||(vo("/"+e),!1)}function fo(){var e=window.location.href,t=e.indexOf("#");if(t<0)return"";var n=(e=e.slice(t+1)).indexOf("?");if(n<0){var r=e.indexOf("#");e=r>-1?decodeURI(e.slice(0,r))+e.slice(r):decodeURI(e)}else e=decodeURI(e.slice(0,n))+e.slice(n);return e}function go(e){var t=window.location.href,n=t.indexOf("#");return(n>=0?t.slice(0,n):t)+"#"+e}function yo(e){Wi?Gi(go(e)):window.location.hash=e}function vo(e){Wi?Vi(go(e)):window.location.replace(go(e))}var bo=function(e){function t(t,n){e.call(this,t,n),this.stack=[],this.index=-1}return e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t,t.prototype.push=function(e,t,n){var r=this;this.transitionTo(e,(function(e){r.stack=r.stack.slice(0,r.index+1).concat(e),r.index++,t&&t(e)}),n)},t.prototype.replace=function(e,t,n){var r=this;this.transitionTo(e,(function(e){r.stack=r.stack.slice(0,r.index).concat(e),t&&t(e)}),n)},t.prototype.go=function(e){var t=this,n=this.index+e;if(!(n<0||n>=this.stack.length)){var r=this.stack[n];this.confirmTransition(r,(function(){t.index=n,t.updateRoute(r)}),(function(e){to(e,Qi.duplicated)&&(t.index=n)}))}},t.prototype.getCurrentLocation=function(){var e=this.stack[this.stack.length-1];return e?e.fullPath:"/"},t.prototype.ensureURL=function(){},t}(so),ko=function(e){void 0===e&&(e={}),this.app=null,this.apps=[],this.options=e,this.beforeHooks=[],this.resolveHooks=[],this.afterHooks=[],this.matcher=zi(e.routes||[],this);var t=e.mode||"hash";switch(this.fallback="history"===t&&!Wi&&!1!==e.fallback,this.fallback&&(t="hash"),Ii||(t="abstract"),this.mode=t,t){case"history":this.history=new uo(this,e.base);break;case"hash":this.history=new mo(this,e.base,this.fallback);break;case"abstract":this.history=new bo(this,e.base);break;default:0}},wo={currentRoute:{configurable:!0}};function xo(e,t){return e.push(t),function(){var n=e.indexOf(t);n>-1&&e.splice(n,1)}}ko.prototype.match=function(e,t,n){return this.matcher.match(e,t,n)},wo.currentRoute.get=function(){return this.history&&this.history.current},ko.prototype.init=function(e){var t=this;if(this.apps.push(e),e.$once("hook:destroyed",(function(){var n=t.apps.indexOf(e);n>-1&&t.apps.splice(n,1),t.app===e&&(t.app=t.apps[0]||null),t.app||t.history.teardownListeners()})),!this.app){this.app=e;var n=this.history;if(n instanceof uo||n instanceof mo){var r=function(e){n.setupListeners(),function(e){var r=n.current,a=t.options.scrollBehavior;Wi&&a&&"fullPath"in e&&Ai(t,e,r,!1)}(e)};n.transitionTo(n.getCurrentLocation(),r,r)}n.listen((function(e){t.apps.forEach((function(t){t._route=e}))}))}},ko.prototype.beforeEach=function(e){return xo(this.beforeHooks,e)},ko.prototype.beforeResolve=function(e){return xo(this.resolveHooks,e)},ko.prototype.afterEach=function(e){return xo(this.afterHooks,e)},ko.prototype.onReady=function(e,t){this.history.onReady(e,t)},ko.prototype.onError=function(e){this.history.onError(e)},ko.prototype.push=function(e,t,n){var r=this;if(!t&&!n&&"undefined"!=typeof Promise)return new Promise((function(t,n){r.history.push(e,t,n)}));this.history.push(e,t,n)},ko.prototype.replace=function(e,t,n){var r=this;if(!t&&!n&&"undefined"!=typeof Promise)return new Promise((function(t,n){r.history.replace(e,t,n)}));this.history.replace(e,t,n)},ko.prototype.go=function(e){this.history.go(e)},ko.prototype.back=function(){this.go(-1)},ko.prototype.forward=function(){this.go(1)},ko.prototype.getMatchedComponents=function(e){var t=e?e.matched?e:this.resolve(e).route:this.currentRoute;return t?[].concat.apply([],t.matched.map((function(e){return Object.keys(e.components).map((function(t){return e.components[t]}))}))):[]},ko.prototype.resolve=function(e,t,n){var r=bi(e,t=t||this.history.current,n,this),a=this.match(r,t),i=a.redirectedFrom||a.fullPath;return{location:r,route:a,href:function(e,t,n){var r="hash"===n?"#"+t:t;return e?ei(e+"/"+r):r}(this.history.base,i,this.mode),normalizedTo:r,resolved:a}},ko.prototype.addRoutes=function(e){this.matcher.addRoutes(e),this.history.current!==Ha&&this.history.transitionTo(this.history.getCurrentLocation())},Object.defineProperties(ko.prototype,wo),ko.install=function e(t){if(!e.installed||ki!==t){e.installed=!0,ki=t;var n=function(e){return void 0!==e},r=function(e,t){var r=e.$options._parentVnode;n(r)&&n(r=r.data)&&n(r=r.registerRouteInstance)&&r(e,t)};t.mixin({beforeCreate:function(){n(this.$options.router)?(this._routerRoot=this,this._router=this.$options.router,this._router.init(this),t.util.defineReactive(this,"_route",this._router.history.current)):this._routerRoot=this.$parent&&this.$parent._routerRoot||this,r(this,this)},destroyed:function(){r(this)}}),Object.defineProperty(t.prototype,"$router",{get:function(){return this._routerRoot._router}}),Object.defineProperty(t.prototype,"$route",{get:function(){return this._routerRoot._route}}),t.component("RouterView",Pa),t.component("RouterLink",xi);var a=t.config.optionMergeStrategies;a.beforeRouteEnter=a.beforeRouteLeave=a.beforeRouteUpdate=a.created}},ko.version="3.4.3",ko.isNavigationFailure=to,ko.NavigationFailureType=Qi,Ii&&window.Vue&&window.Vue.use(ko);var To=ko;n(103),n(204),n(206),n(186),n(137),n(99),n(208),n(104);function Io(e){e.locales&&Object.keys(e.locales).forEach((function(t){e.locales[t].path=t})),Object.freeze(e)}n(187),n(140),n(44),n(189),n(69),n(50),n(57),n(87);function qo(e){return(qo="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var jo=n(42),zo={NotFound:function(){return n.e(9).then(n.bind(null,389))},Layout:function(){return Promise.all([n.e(0),n.e(2)]).then(n.bind(null,388))}},Do={"v-3140ed9c":function(){return n.e(37).then(n.bind(null,452))},"v-24306408":function(){return n.e(10).then(n.bind(null,454))},"v-04b425b0":function(){return n.e(11).then(n.bind(null,456))},"v-be84a670":function(){return n.e(7).then(n.bind(null,458))},"v-11cc6b58":function(){return n.e(12).then(n.bind(null,460))},"v-a42a4c0e":function(){return n.e(13).then(n.bind(null,462))},"v-631e077a":function(){return n.e(14).then(n.bind(null,464))},"v-477f7948":function(){return n.e(15).then(n.bind(null,466))},"v-587c915c":function(){return n.e(16).then(n.bind(null,467))},"v-5a7b3ee8":function(){return n.e(4).then(n.bind(null,469))},"v-550d8c48":function(){return n.e(17).then(n.bind(null,471))},"v-8488a8b4":function(){return n.e(18).then(n.bind(null,473))},"v-2a1991f2":function(){return n.e(19).then(n.bind(null,475))},"v-7db39c08":function(){return n.e(20).then(n.bind(null,477))},"v-019a6270":function(){return n.e(8).then(n.bind(null,479))},"v-a824f470":function(){return n.e(21).then(n.bind(null,481))},"v-92b626b0":function(){return n.e(22).then(n.bind(null,482))},"v-08c54868":function(){return n.e(23).then(n.bind(null,484))},"v-7e6b41b0":function(){return n.e(24).then(n.bind(null,486))},"v-2b85cc88":function(){return n.e(25).then(n.bind(null,488))},"v-084d894c":function(){return n.e(26).then(n.bind(null,490))},"v-801f5ac2":function(){return n.e(27).then(n.bind(null,489))},"v-4a03194d":function(){return n.e(28).then(n.bind(null,487))},"v-472d66c8":function(){return n.e(29).then(n.bind(null,485))},"v-64927783":function(){return n.e(30).then(n.bind(null,483))},"v-6ae2b2a3":function(){return n.e(31).then(n.bind(null,480))},"v-7aff5bba":function(){return n.e(32).then(n.bind(null,478))},"v-b253103a":function(){return n.e(33).then(n.bind(null,476))},"v-cdabe47a":function(){return n.e(34).then(n.bind(null,474))},"v-65ccacc3":function(){return n.e(35).then(n.bind(null,472))},"v-787eb528":function(){return n.e(5).then(n.bind(null,470))},"v-209f3a3c":function(){return n.e(3).then(n.bind(null,468))},"v-c6119a3a":function(){return n.e(36).then(n.bind(null,465))},"v-8c82ad54":function(){return n.e(38).then(n.bind(null,463))},"v-887ced7e":function(){return n.e(39).then(n.bind(null,461))},"v-71cae13a":function(){return n.e(40).then(n.bind(null,459))},"v-6f20d009":function(){return n.e(41).then(n.bind(null,457))},"v-692642c3":function(){return n.e(42).then(n.bind(null,455))},"v-1b5304cf":function(){return n.e(43).then(n.bind(null,453))},"v-4accb5fa":function(){return n.e(44).then(n.bind(null,451))},"v-0ca17f3a":function(){return n.e(45).then(n.bind(null,449))},"v-473550c3":function(){return n.e(46).then(n.bind(null,447))},"v-42fac8a3":function(){return n.e(47).then(n.bind(null,445))},"v-a00a283a":function(){return n.e(48).then(n.bind(null,443))},"v-1ac7383a":function(){return n.e(49).then(n.bind(null,390))},"v-63747bba":function(){return n.e(50).then(n.bind(null,439))},"v-b4935bfa":function(){return n.e(51).then(n.bind(null,437))},"v-35363b7a":function(){return n.e(52).then(n.bind(null,435))},"v-73b9fb3a":function(){return n.e(53).then(n.bind(null,433))},"v-7fe967a3":function(){return n.e(54).then(n.bind(null,431))},"v-463aa523":function(){return n.e(55).then(n.bind(null,429))},"v-76e169a3":function(){return n.e(56).then(n.bind(null,427))},"v-79a66723":function(){return n.e(57).then(n.bind(null,425))},"v-44dca4c3":function(){return n.e(58).then(n.bind(null,423))},"v-1172039b":function(){return n.e(59).then(n.bind(null,421))},"v-471db309":function(){return n.e(60).then(n.bind(null,419))},"v-2a294a03":function(){return n.e(61).then(n.bind(null,417))},"v-87b63d3a":function(){return n.e(62).then(n.bind(null,415))},"v-56e82843":function(){return n.e(63).then(n.bind(null,413))},"v-6ba611ba":function(){return n.e(64).then(n.bind(null,411))},"v-1bc88783":function(){return n.e(65).then(n.bind(null,409))},"v-b6c1b05a":function(){return n.e(66).then(n.bind(null,407))},"v-93fb047a":function(){return n.e(67).then(n.bind(null,405))},"v-083b59d3":function(){return n.e(68).then(n.bind(null,403))},"v-044d2e63":function(){return n.e(69).then(n.bind(null,401))},"v-76b2f7fa":function(){return n.e(70).then(n.bind(null,400))},"v-1c1031ff":function(){return n.e(71).then(n.bind(null,399))},"v-af22b77a":function(){return n.e(72).then(n.bind(null,397))},"v-b73cd7ba":function(){return n.e(73).then(n.bind(null,396))},"v-347ef2ba":function(){return n.e(74).then(n.bind(null,491))},"v-9161553a":function(){return n.e(75).then(n.bind(null,398))},"v-39894003":function(){return n.e(76).then(n.bind(null,492))},"v-495a34ed":function(){return n.e(77).then(n.bind(null,391))},"v-bcd429ea":function(){return n.e(78).then(n.bind(null,441))},"v-2d12e13a":function(){return n.e(79).then(n.bind(null,438))},"v-6ca79c83":function(){return n.e(80).then(n.bind(null,394))},"v-5fe87717":function(){return n.e(81).then(n.bind(null,393))},"v-8568b3d6":function(){return n.e(82).then(n.bind(null,392))},"v-1a7c016b":function(){return n.e(83).then(n.bind(null,450))},"v-4189dac7":function(){return n.e(84).then(n.bind(null,448))},"v-3f13b63a":function(){return n.e(85).then(n.bind(null,446))},"v-02718283":function(){return n.e(86).then(n.bind(null,444))},"v-780273ba":function(){return n.e(87).then(n.bind(null,442))},"v-6a9eb8e3":function(){return n.e(88).then(n.bind(null,440))},"v-56588943":function(){return n.e(89).then(n.bind(null,493))},"v-28b0bb5a":function(){return n.e(90).then(n.bind(null,436))},"v-50e7ae83":function(){return n.e(91).then(n.bind(null,434))},"v-23af7da3":function(){return n.e(92).then(n.bind(null,432))},"v-b51bc33a":function(){return n.e(93).then(n.bind(null,430))},"v-3f3b5722":function(){return n.e(94).then(n.bind(null,428))},"v-625fbfba":function(){return n.e(95).then(n.bind(null,426))},"v-a5890592":function(){return n.e(96).then(n.bind(null,424))},"v-1342f403":function(){return n.e(97).then(n.bind(null,422))},"v-c55cb926":function(){return n.e(98).then(n.bind(null,420))},"v-c96f8dba":function(){return n.e(99).then(n.bind(null,418))},"v-8b587e3a":function(){return n.e(100).then(n.bind(null,416))},"v-a838197a":function(){return n.e(101).then(n.bind(null,414))},"v-3eef13ba":function(){return n.e(102).then(n.bind(null,412))},"v-69d470a3":function(){return n.e(103).then(n.bind(null,410))},"v-584500cb":function(){return n.e(104).then(n.bind(null,408))},"v-39c4896b":function(){return n.e(105).then(n.bind(null,406))},"v-7af6bb63":function(){return n.e(106).then(n.bind(null,404))},"v-51c6d563":function(){return n.e(107).then(n.bind(null,402))}};function Eo(e){var t=Object.create(null);return function(n){return t[n]||(t[n]=e(n))}}var _o=/-(\w)/g,So=Eo((function(e){return e.replace(_o,(function(e,t){return t?t.toUpperCase():""}))})),Ro=/\B([A-Z])/g,Co=Eo((function(e){return e.replace(Ro,"-$1").toLowerCase()})),Oo=Eo((function(e){return e.charAt(0).toUpperCase()+e.slice(1)}));function Po(e,t){if(t)return e(t)?e(t):t.includes("-")?e(Oo(So(t))):e(Oo(t))||e(Co(t))}var Ao=Object.assign({},zo,Do),Lo=function(e){return Ao[e]},Ko=function(e){return Do[e]},Fo=function(e){return zo[e]},Mo=function(e){return Ca.component(e)};function No(e){return Po(Ko,e)}function Uo(e){return Po(Fo,e)}function Bo(e){return Po(Lo,e)}function $o(e){return Po(Mo,e)}function Wo(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Promise.all(t.filter((function(e){return e})).map(function(){var e=Object(r.a)(regeneratorRuntime.mark((function e(t){var n;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if($o(t)||!Bo(t)){e.next=5;break}return e.next=3,Bo(t)();case 3:n=e.sent,Ca.component(t,n.default);case 5:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}()))}function Go(e,t){"undefined"!=typeof window&&window.__VUEPRESS__&&(window.__VUEPRESS__[e]=t)}n(177),n(178);var Vo=n(98),Ho=n(167),Qo=n.n(Ho),Jo={created:function(){if(this.siteMeta=this.$site.headTags.filter((function(e){return"meta"===Object(Vo.a)(e,1)[0]})).map((function(e){var t=Object(Vo.a)(e,2);t[0];return t[1]})),this.$ssrContext){var e=this.getMergedMetaTags();this.$ssrContext.title=this.$title,this.$ssrContext.lang=this.$lang,this.$ssrContext.pageMeta=(t=e)?t.map((function(e){var t="<meta";return Object.keys(e).forEach((function(n){t+=" ".concat(n,'="').concat(e[n],'"')})),t+">"})).join("\n    "):""}var t},mounted:function(){this.currentMetaTags=Object(jo.a)(document.querySelectorAll("meta")),this.updateMeta()},methods:{updateMeta:function(){document.title=this.$title,document.documentElement.lang=this.$lang;var e=this.getMergedMetaTags();this.currentMetaTags=Yo(e,this.currentMetaTags)},getMergedMetaTags:function(){var e=this.$page.frontmatter.meta||[];return Qo()([{name:"description",content:this.$description}],e,this.siteMeta,Xo)}},watch:{$page:function(){this.updateMeta()}},beforeDestroy:function(){Yo(null,this.currentMetaTags)}};function Yo(e,t){if(t&&Object(jo.a)(t).filter((function(e){return e.parentNode===document.head})).forEach((function(e){return document.head.removeChild(e)})),e)return e.map((function(e){var t=document.createElement("meta");return Object.keys(e).forEach((function(n){t.setAttribute(n,e[n])})),document.head.appendChild(t),t}))}function Xo(e){for(var t=0,n=["name","property","itemprop"];t<n.length;t++){var r=n[t];if(e.hasOwnProperty(r))return e[r]+r}return JSON.stringify(e)}n(169);var Zo=n(66),es=n.n(Zo),ts={mounted:function(){window.addEventListener("scroll",this.onScroll)},methods:{onScroll:es()((function(){this.setActiveHash()}),300),setActiveHash:function(){for(var e=this,t=[].slice.call(document.querySelectorAll(".sidebar-link")),n=[].slice.call(document.querySelectorAll(".header-anchor")).filter((function(e){return t.some((function(t){return t.hash===e.hash}))})),r=Math.max(window.pageYOffset,document.documentElement.scrollTop,document.body.scrollTop),a=Math.max(document.documentElement.scrollHeight,document.body.scrollHeight),i=window.innerHeight+r,o=0;o<n.length;o++){var s=n[o],l=n[o+1],c=0===o&&0===r||r>=s.parentElement.offsetTop+10&&(!l||r<l.parentElement.offsetTop-10),u=decodeURIComponent(this.$route.hash);if(c&&u!==decodeURIComponent(s.hash)){var d=s;if(i===a)for(var p=o+1;p<n.length;p++)if(u===decodeURIComponent(n[p].hash))return;return this.$vuepress.$set("disableScrollBehavior",!0),void this.$router.replace(decodeURIComponent(d.hash),(function(){e.$nextTick((function(){e.$vuepress.$set("disableScrollBehavior",!1)}))}))}}}},beforeDestroy:function(){window.removeEventListener("scroll",this.onScroll)}},ns=n(168),rs=n.n(ns),as={mounted:function(){rs.a.polyfill()}},is=(n(88),n(67)),os=n.n(is),ss={mounted:function(){var e=this;os.a.configure({showSpinner:!1}),this.$router.beforeEach((function(e,t,n){e.path===t.path||Ca.component(e.name)||os.a.start(),n()})),this.$router.afterEach((function(){os.a.done(),e.isSidebarOpen=!1}))}};n(164),n(304);function ls(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}n(181);function cs(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function us(e,t,n){return t&&cs(e.prototype,t),n&&cs(e,n),e}
/*! medium-zoom 1.0.6 | MIT License | https://github.com/francoischalifour/medium-zoom */var ds=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},ps=function(e){return"IMG"===e.tagName},ms=function(e){return e&&1===e.nodeType},hs=function(e){return".svg"===(e.currentSrc||e.src).substr(-4).toLowerCase()},fs=function(e){try{return Array.isArray(e)?e.filter(ps):function(e){return NodeList.prototype.isPrototypeOf(e)}(e)?[].slice.call(e).filter(ps):ms(e)?[e].filter(ps):"string"==typeof e?[].slice.call(document.querySelectorAll(e)).filter(ps):[]}catch(e){throw new TypeError("The provided selector is invalid.\nExpects a CSS selector, a Node element, a NodeList or an array.\nSee: https://github.com/francoischalifour/medium-zoom")}},gs=function(e){var t=document.createElement("div");return t.classList.add("medium-zoom-overlay"),t.style.background=e,t},ys=function(e){var t=e.getBoundingClientRect(),n=t.top,r=t.left,a=t.width,i=t.height,o=e.cloneNode(),s=window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0,l=window.pageXOffset||document.documentElement.scrollLeft||document.body.scrollLeft||0;return o.removeAttribute("id"),o.style.position="absolute",o.style.top=n+s+"px",o.style.left=r+l+"px",o.style.width=a+"px",o.style.height=i+"px",o.style.transform="",o},vs=function(e,t){var n=ds({bubbles:!1,cancelable:!1,detail:void 0},t);if("function"==typeof window.CustomEvent)return new CustomEvent(e,n);var r=document.createEvent("CustomEvent");return r.initCustomEvent(e,n.bubbles,n.cancelable,n.detail),r};!function(e,t){void 0===t&&(t={});var n=t.insertAt;if(e&&"undefined"!=typeof document){var r=document.head||document.getElementsByTagName("head")[0],a=document.createElement("style");a.type="text/css","top"===n&&r.firstChild?r.insertBefore(a,r.firstChild):r.appendChild(a),a.styleSheet?a.styleSheet.cssText=e:a.appendChild(document.createTextNode(e))}}(".medium-zoom-overlay{position:fixed;top:0;right:0;bottom:0;left:0;opacity:0;transition:opacity .3s;will-change:opacity}.medium-zoom--opened .medium-zoom-overlay{cursor:pointer;cursor:zoom-out;opacity:1}.medium-zoom-image{cursor:pointer;cursor:zoom-in;transition:transform .3s cubic-bezier(.2,0,.2,1)!important}.medium-zoom-image--hidden{visibility:hidden}.medium-zoom-image--opened{position:relative;cursor:pointer;cursor:zoom-out;will-change:transform}");var bs=function e(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=window.Promise||function(e){function t(){}e(t,t)},a=function(e){var t=e.target;t!==q?-1!==b.indexOf(t)&&f({target:t}):h()},i=function(){if(!w&&I.original){var e=window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0;Math.abs(x-e)>T.scrollOffset&&setTimeout(h,150)}},o=function(e){var t=e.key||e.keyCode;"Escape"!==t&&"Esc"!==t&&27!==t||h()},s=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e;if(e.background&&(q.style.background=e.background),e.container&&e.container instanceof Object&&(t.container=ds({},T.container,e.container)),e.template){var n=ms(e.template)?e.template:document.querySelector(e.template);t.template=n}return T=ds({},T,t),b.forEach((function(e){e.dispatchEvent(vs("medium-zoom:update",{detail:{zoom:j}}))})),j},l=function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return e(ds({},T,t))},c=function(){for(var e=arguments.length,t=Array(e),n=0;n<e;n++)t[n]=arguments[n];var r=t.reduce((function(e,t){return[].concat(e,fs(t))}),[]);return r.filter((function(e){return-1===b.indexOf(e)})).forEach((function(e){b.push(e),e.classList.add("medium-zoom-image")})),k.forEach((function(e){var t=e.type,n=e.listener,a=e.options;r.forEach((function(e){e.addEventListener(t,n,a)}))})),j},u=function(){for(var e=arguments.length,t=Array(e),n=0;n<e;n++)t[n]=arguments[n];I.zoomed&&h();var r=t.length>0?t.reduce((function(e,t){return[].concat(e,fs(t))}),[]):b;return r.forEach((function(e){e.classList.remove("medium-zoom-image"),e.dispatchEvent(vs("medium-zoom:detach",{detail:{zoom:j}}))})),b=b.filter((function(e){return-1===r.indexOf(e)})),j},d=function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return b.forEach((function(r){r.addEventListener("medium-zoom:"+e,t,n)})),k.push({type:"medium-zoom:"+e,listener:t,options:n}),j},p=function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return b.forEach((function(r){r.removeEventListener("medium-zoom:"+e,t,n)})),k=k.filter((function(n){return!(n.type==="medium-zoom:"+e&&n.listener.toString()===t.toString())})),j},m=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e.target,n=function(){var e={width:document.documentElement.clientWidth,height:document.documentElement.clientHeight,left:0,top:0,right:0,bottom:0},t=void 0,n=void 0;if(T.container)if(T.container instanceof Object)t=(e=ds({},e,T.container)).width-e.left-e.right-2*T.margin,n=e.height-e.top-e.bottom-2*T.margin;else{var r=(ms(T.container)?T.container:document.querySelector(T.container)).getBoundingClientRect(),a=r.width,i=r.height,o=r.left,s=r.top;e=ds({},e,{width:a,height:i,left:o,top:s})}t=t||e.width-2*T.margin,n=n||e.height-2*T.margin;var l=I.zoomedHd||I.original,c=hs(l)?t:l.naturalWidth||t,u=hs(l)?n:l.naturalHeight||n,d=l.getBoundingClientRect(),p=d.top,m=d.left,h=d.width,f=d.height,g=Math.min(c,t)/h,y=Math.min(u,n)/f,v=Math.min(g,y),b="scale("+v+") translate3d("+((t-h)/2-m+T.margin+e.left)/v+"px, "+((n-f)/2-p+T.margin+e.top)/v+"px, 0)";I.zoomed.style.transform=b,I.zoomedHd&&(I.zoomedHd.style.transform=b)};return new r((function(e){if(t&&-1===b.indexOf(t))e(j);else{if(I.zoomed)e(j);else{if(t)I.original=t;else{if(!(b.length>0))return void e(j);var r=b;I.original=r[0]}if(I.original.dispatchEvent(vs("medium-zoom:open",{detail:{zoom:j}})),x=window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0,w=!0,I.zoomed=ys(I.original),document.body.appendChild(q),T.template){var a=ms(T.template)?T.template:document.querySelector(T.template);I.template=document.createElement("div"),I.template.appendChild(a.content.cloneNode(!0)),document.body.appendChild(I.template)}if(document.body.appendChild(I.zoomed),window.requestAnimationFrame((function(){document.body.classList.add("medium-zoom--opened")})),I.original.classList.add("medium-zoom-image--hidden"),I.zoomed.classList.add("medium-zoom-image--opened"),I.zoomed.addEventListener("click",h),I.zoomed.addEventListener("transitionend",(function t(){w=!1,I.zoomed.removeEventListener("transitionend",t),I.original.dispatchEvent(vs("medium-zoom:opened",{detail:{zoom:j}})),e(j)})),I.original.getAttribute("data-zoom-src")){I.zoomedHd=I.zoomed.cloneNode(),I.zoomedHd.removeAttribute("srcset"),I.zoomedHd.removeAttribute("sizes"),I.zoomedHd.src=I.zoomed.getAttribute("data-zoom-src"),I.zoomedHd.onerror=function(){clearInterval(i),console.warn("Unable to reach the zoom image target "+I.zoomedHd.src),I.zoomedHd=null,n()};var i=setInterval((function(){I.zoomedHd.complete&&(clearInterval(i),I.zoomedHd.classList.add("medium-zoom-image--opened"),I.zoomedHd.addEventListener("click",h),document.body.appendChild(I.zoomedHd),n())}),10)}else if(I.original.hasAttribute("srcset")){I.zoomedHd=I.zoomed.cloneNode(),I.zoomedHd.removeAttribute("sizes"),I.zoomedHd.removeAttribute("loading");var o=I.zoomedHd.addEventListener("load",(function(){I.zoomedHd.removeEventListener("load",o),I.zoomedHd.classList.add("medium-zoom-image--opened"),I.zoomedHd.addEventListener("click",h),document.body.appendChild(I.zoomedHd),n()}))}else n()}}}))},h=function(){return new r((function(e){if(!w&&I.original){w=!0,document.body.classList.remove("medium-zoom--opened"),I.zoomed.style.transform="",I.zoomedHd&&(I.zoomedHd.style.transform=""),I.template&&(I.template.style.transition="opacity 150ms",I.template.style.opacity=0),I.original.dispatchEvent(vs("medium-zoom:close",{detail:{zoom:j}})),I.zoomed.addEventListener("transitionend",(function t(){I.original.classList.remove("medium-zoom-image--hidden"),document.body.removeChild(I.zoomed),I.zoomedHd&&document.body.removeChild(I.zoomedHd),document.body.removeChild(q),I.zoomed.classList.remove("medium-zoom-image--opened"),I.template&&document.body.removeChild(I.template),w=!1,I.zoomed.removeEventListener("transitionend",t),I.original.dispatchEvent(vs("medium-zoom:closed",{detail:{zoom:j}})),I.original=null,I.zoomed=null,I.zoomedHd=null,I.template=null,e(j)}))}else e(j)}))},f=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e.target;return I.original?h():m({target:t})},g=function(){return T},y=function(){return b},v=function(){return I.original},b=[],k=[],w=!1,x=0,T=n,I={original:null,zoomed:null,zoomedHd:null,template:null};"[object Object]"===Object.prototype.toString.call(t)?T=t:(t||"string"==typeof t)&&c(t),T=ds({margin:0,background:"#fff",scrollOffset:40,container:null,template:null},T);var q=gs(T.background);document.addEventListener("click",a),document.addEventListener("keyup",o),document.addEventListener("scroll",i),window.addEventListener("resize",h);var j={open:m,close:h,toggle:f,update:s,clone:l,attach:c,detach:u,on:d,off:p,getOptions:g,getImages:y,getZoomedImage:v};return j},ks=".theme-default-content img",ws=JSON.parse("{}"),xs=Number("500"),Ts=function(){function e(){ls(this,e),this.instance=null}return us(e,[{key:"update",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:ks;"undefined"!=typeof window&&(null===this.instance?this.instance=bs(e,ws):(this.instance.detach(),this.instance.attach(e)))}},{key:"updateDelay",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:ks,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:xs;setTimeout((function(){return e.update(t)}),n)}}]),e}(),Is=(n(305),[Jo,ts,as,ss,{watch:{"$page.path":function(){void 0!==this.$vuepress.mediumZoom&&this.$vuepress.mediumZoom.updateDelay()}},mounted:function(){this.$vuepress.mediumZoom=new Ts,this.$vuepress.mediumZoom.updateDelay()}}]),qs={name:"GlobalLayout",computed:{layout:function(){var e=this.getLayout();return Go("layout",e),Ca.component(e)}},methods:{getLayout:function(){if(this.$page.path){var e=this.$page.frontmatter.layout;return e&&(this.$vuepress.getLayoutAsyncComponent(e)||this.$vuepress.getVueComponent(e))?e:"Layout"}return"NotFound"}}},js=n(25),zs=Object(js.a)(qs,(function(){var e=this.$createElement;return(this._self._c||e)(this.layout,{tag:"component"})}),[],!1,null,null,null).exports;!function(e,t,n){var r;switch(t){case"components":e[t]||(e[t]={}),Object.assign(e[t],n);break;case"mixins":e[t]||(e[t]=[]),(r=e[t]).push.apply(r,Object(jo.a)(n));break;default:throw new Error("Unknown option name.")}}(zs,"mixins",Is);var Ds=[{name:"v-3140ed9c",path:"/",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-3140ed9c").then(n)}},{path:"/index.html",redirect:"/"},{name:"v-24306408",path:"/docs/",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-24306408").then(n)}},{path:"/docs/index.html",redirect:"/docs/"},{name:"v-04b425b0",path:"/docs/administrator-guide/",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-04b425b0").then(n)}},{path:"/docs/administrator-guide/index.html",redirect:"/docs/administrator-guide/"},{name:"v-be84a670",path:"/docs/architecture/",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-be84a670").then(n)}},{path:"/docs/architecture/index.html",redirect:"/docs/architecture/"},{name:"v-11cc6b58",path:"/docs/concepts/",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-11cc6b58").then(n)}},{path:"/docs/concepts/index.html",redirect:"/docs/concepts/"},{name:"v-a42a4c0e",path:"/docs/concepts/executions.html",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-a42a4c0e").then(n)}},{name:"v-631e077a",path:"/docs/concepts/flows.html",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-631e077a").then(n)}},{name:"v-477f7948",path:"/docs/developer-guide/",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-477f7948").then(n)}},{path:"/docs/developer-guide/index.html",redirect:"/docs/developer-guide/"},{name:"v-587c915c",path:"/docs/developer-guide/conditions/",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-587c915c").then(n)}},{path:"/docs/developer-guide/conditions/index.html",redirect:"/docs/developer-guide/conditions/"},{name:"v-5a7b3ee8",path:"/docs/developer-guide/documentation/",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-5a7b3ee8").then(n)}},{path:"/docs/developer-guide/documentation/index.html",redirect:"/docs/developer-guide/documentation/"},{name:"v-550d8c48",path:"/docs/developer-guide/errors-handling/",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-550d8c48").then(n)}},{path:"/docs/developer-guide/errors-handling/index.html",redirect:"/docs/developer-guide/errors-handling/"},{name:"v-8488a8b4",path:"/docs/developer-guide/flow/",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-8488a8b4").then(n)}},{path:"/docs/developer-guide/flow/index.html",redirect:"/docs/developer-guide/flow/"},{name:"v-2a1991f2",path:"/docs/developer-guide/flowable/",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-2a1991f2").then(n)}},{path:"/docs/developer-guide/flowable/index.html",redirect:"/docs/developer-guide/flowable/"},{name:"v-7db39c08",path:"/docs/developer-guide/helpers/",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-7db39c08").then(n)}},{path:"/docs/developer-guide/helpers/index.html",redirect:"/docs/developer-guide/helpers/"},{name:"v-019a6270",path:"/docs/developer-guide/inputs/",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-019a6270").then(n)}},{path:"/docs/developer-guide/inputs/index.html",redirect:"/docs/developer-guide/inputs/"},{name:"v-a824f470",path:"/docs/developer-guide/listeners/",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-a824f470").then(n)}},{path:"/docs/developer-guide/listeners/index.html",redirect:"/docs/developer-guide/listeners/"},{name:"v-92b626b0",path:"/docs/developer-guide/outputs/",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-92b626b0").then(n)}},{path:"/docs/developer-guide/outputs/index.html",redirect:"/docs/developer-guide/outputs/"},{name:"v-08c54868",path:"/docs/developer-guide/plugins/",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-08c54868").then(n)}},{path:"/docs/developer-guide/plugins/index.html",redirect:"/docs/developer-guide/plugins/"},{name:"v-7e6b41b0",path:"/docs/developer-guide/retries/",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-7e6b41b0").then(n)}},{path:"/docs/developer-guide/retries/index.html",redirect:"/docs/developer-guide/retries/"},{name:"v-2b85cc88",path:"/docs/developer-guide/templates/",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-2b85cc88").then(n)}},{path:"/docs/developer-guide/templates/index.html",redirect:"/docs/developer-guide/templates/"},{name:"v-084d894c",path:"/docs/developer-guide/triggers/",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-084d894c").then(n)}},{path:"/docs/developer-guide/triggers/index.html",redirect:"/docs/developer-guide/triggers/"},{name:"v-801f5ac2",path:"/docs/developer-guide/triggers/flow.html",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-801f5ac2").then(n)}},{name:"v-4a03194d",path:"/docs/developer-guide/triggers/schedule.html",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-4a03194d").then(n)}},{name:"v-472d66c8",path:"/docs/developer-guide/variables/",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-472d66c8").then(n)}},{path:"/docs/developer-guide/variables/index.html",redirect:"/docs/developer-guide/variables/"},{name:"v-64927783",path:"/docs/developer-guide/variables/boolean.html",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-64927783").then(n)}},{name:"v-6ae2b2a3",path:"/docs/developer-guide/variables/date.html",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-6ae2b2a3").then(n)}},{name:"v-7aff5bba",path:"/docs/developer-guide/variables/iterations.html",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-7aff5bba").then(n)}},{name:"v-b253103a",path:"/docs/developer-guide/variables/json.html",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-b253103a").then(n)}},{name:"v-cdabe47a",path:"/docs/developer-guide/variables/number.html",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-cdabe47a").then(n)}},{name:"v-65ccacc3",path:"/docs/developer-guide/variables/string.html",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-65ccacc3").then(n)}},{name:"v-787eb528",path:"/docs/getting-started/",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-787eb528").then(n)}},{path:"/docs/getting-started/index.html",redirect:"/docs/getting-started/"},{name:"v-209f3a3c",path:"/docs/user-interface-guide/",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-209f3a3c").then(n)}},{path:"/docs/user-interface-guide/index.html",redirect:"/docs/user-interface-guide/"},{name:"v-c6119a3a",path:"/docs/user-interface-guide/restart.html",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-c6119a3a").then(n)}},{name:"v-8c82ad54",path:"/plugins/",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-8c82ad54").then(n)}},{path:"/plugins/index.html",redirect:"/plugins/"},{name:"v-887ced7e",path:"/plugins/core/conditions/org.kestra.core.models.conditions.types.ExecutionFlowCondition.html",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-887ced7e").then(n)}},{name:"v-71cae13a",path:"/plugins/core/conditions/org.kestra.core.models.conditions.types.ExecutionNamespaceCondition.html",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-71cae13a").then(n)}},{name:"v-6f20d009",path:"/plugins/core/conditions/org.kestra.core.models.conditions.types.ExecutionStatusCondition.html",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-6f20d009").then(n)}},{name:"v-692642c3",path:"/plugins/core/conditions/org.kestra.core.models.conditions.types.FlowCondition.html",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-692642c3").then(n)}},{name:"v-1b5304cf",path:"/plugins/core/conditions/org.kestra.core.models.conditions.types.FlowNamespaceCondition.html",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-1b5304cf").then(n)}},{name:"v-4accb5fa",path:"/plugins/core/conditions/org.kestra.core.models.conditions.types.VariableCondition.html",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-4accb5fa").then(n)}},{name:"v-0ca17f3a",path:"/plugins/core/conditions/org.kestra.core.models.listeners.types.ExecutionStatusCondition.html",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-0ca17f3a").then(n)}},{name:"v-473550c3",path:"/plugins/core/tasks/debugs/org.kestra.core.tasks.debugs.Echo.html",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-473550c3").then(n)}},{name:"v-42fac8a3",path:"/plugins/core/tasks/debugs/org.kestra.core.tasks.debugs.Return.html",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-42fac8a3").then(n)}},{name:"v-a00a283a",path:"/plugins/core/tasks/flows/org.kestra.core.tasks.flows.EachParallel.html",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-a00a283a").then(n)}},{name:"v-1ac7383a",path:"/plugins/core/tasks/flows/org.kestra.core.tasks.flows.EachSequential.html",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-1ac7383a").then(n)}},{name:"v-63747bba",path:"/plugins/core/tasks/flows/org.kestra.core.tasks.flows.Flow.html",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-63747bba").then(n)}},{name:"v-b4935bfa",path:"/plugins/core/tasks/flows/org.kestra.core.tasks.flows.Parallel.html",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-b4935bfa").then(n)}},{name:"v-35363b7a",path:"/plugins/core/tasks/flows/org.kestra.core.tasks.flows.Sequential.html",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-35363b7a").then(n)}},{name:"v-73b9fb3a",path:"/plugins/core/tasks/flows/org.kestra.core.tasks.flows.Switch.html",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-73b9fb3a").then(n)}},{name:"v-7fe967a3",path:"/plugins/core/tasks/flows/org.kestra.core.tasks.flows.Template.html",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-7fe967a3").then(n)}},{name:"v-463aa523",path:"/plugins/core/tasks/scripts/org.kestra.core.tasks.scripts.Bash.html",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-463aa523").then(n)}},{name:"v-76e169a3",path:"/plugins/core/tasks/scripts/org.kestra.core.tasks.scripts.Python.html",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-76e169a3").then(n)}},{name:"v-79a66723",path:"/plugins/core/tasks/storages/org.kestra.core.tasks.storages.Concat.html",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-79a66723").then(n)}},{name:"v-44dca4c3",path:"/plugins/core/tasks/storages/org.kestra.core.tasks.storages.Delete.html",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-44dca4c3").then(n)}},{name:"v-1172039b",path:"/plugins/core/triggers/org.kestra.core.models.triggers.types.Flow.html",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-1172039b").then(n)}},{name:"v-471db309",path:"/plugins/core/triggers/org.kestra.core.models.triggers.types.Schedule.html",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-471db309").then(n)}},{name:"v-2a294a03",path:"/plugins/task-aws/tasks/s3/org.kestra.task.aws.s3.CreateBucket.html",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-2a294a03").then(n)}},{name:"v-87b63d3a",path:"/plugins/task-aws/tasks/s3/org.kestra.task.aws.s3.Delete.html",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-87b63d3a").then(n)}},{name:"v-56e82843",path:"/plugins/task-aws/tasks/s3/org.kestra.task.aws.s3.Download.html",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-56e82843").then(n)}},{name:"v-6ba611ba",path:"/plugins/task-aws/tasks/s3/org.kestra.task.aws.s3.Upload.html",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-6ba611ba").then(n)}},{name:"v-1bc88783",path:"/plugins/task-crypto/tasks/openpgp/org.kestra.task.crypto.openpgp.Decrypt.html",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-1bc88783").then(n)}},{name:"v-b6c1b05a",path:"/plugins/task-crypto/tasks/openpgp/org.kestra.task.crypto.openpgp.Encrypt.html",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-b6c1b05a").then(n)}},{name:"v-93fb047a",path:"/plugins/task-fs/tasks/http/org.kestra.task.fs.http.Download.html",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-93fb047a").then(n)}},{name:"v-083b59d3",path:"/plugins/task-fs/tasks/http/org.kestra.task.fs.http.Request.html",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-083b59d3").then(n)}},{name:"v-044d2e63",path:"/plugins/task-fs/tasks/sftp/org.kestra.task.fs.sftp.Delete.html",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-044d2e63").then(n)}},{name:"v-76b2f7fa",path:"/plugins/task-fs/tasks/sftp/org.kestra.task.fs.sftp.Download.html",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-76b2f7fa").then(n)}},{name:"v-1c1031ff",path:"/plugins/task-fs/tasks/sftp/org.kestra.task.fs.sftp.Downloads.html",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-1c1031ff").then(n)}},{name:"v-af22b77a",path:"/plugins/task-fs/tasks/sftp/org.kestra.task.fs.sftp.List.html",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-af22b77a").then(n)}},{name:"v-b73cd7ba",path:"/plugins/task-fs/tasks/sftp/org.kestra.task.fs.sftp.Move.html",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-b73cd7ba").then(n)}},{name:"v-347ef2ba",path:"/plugins/task-fs/tasks/sftp/org.kestra.task.fs.sftp.Upload.html",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-347ef2ba").then(n)}},{name:"v-9161553a",path:"/plugins/task-fs/triggers/sftp/org.kestra.task.fs.sftp.Trigger.html",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-9161553a").then(n)}},{name:"v-39894003",path:"/plugins/task-gcp/tasks/auth/org.kestra.task.gcp.auth.OauthAccessToken.html",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-39894003").then(n)}},{name:"v-495a34ed",path:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.CreateDataset.html",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-495a34ed").then(n)}},{name:"v-bcd429ea",path:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.DeleteDataset.html",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-bcd429ea").then(n)}},{name:"v-2d12e13a",path:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.ExtractToGcs.html",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-2d12e13a").then(n)}},{name:"v-6ca79c83",path:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.Load.html",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-6ca79c83").then(n)}},{name:"v-5fe87717",path:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.LoadFromGcs.html",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-5fe87717").then(n)}},{name:"v-8568b3d6",path:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.Query.html",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-8568b3d6").then(n)}},{name:"v-1a7c016b",path:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.TableMetadata.html",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-1a7c016b").then(n)}},{name:"v-4189dac7",path:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.UpdateDataset.html",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-4189dac7").then(n)}},{name:"v-3f13b63a",path:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.Copy.html",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-3f13b63a").then(n)}},{name:"v-02718283",path:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.CreateBucket.html",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-02718283").then(n)}},{name:"v-780273ba",path:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.Delete.html",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-780273ba").then(n)}},{name:"v-6a9eb8e3",path:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.DeleteBucket.html",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-6a9eb8e3").then(n)}},{name:"v-56588943",path:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.Download.html",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-56588943").then(n)}},{name:"v-28b0bb5a",path:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.Downloads.html",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-28b0bb5a").then(n)}},{name:"v-50e7ae83",path:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.List.html",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-50e7ae83").then(n)}},{name:"v-23af7da3",path:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.UpdateBucket.html",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-23af7da3").then(n)}},{name:"v-b51bc33a",path:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.Upload.html",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-b51bc33a").then(n)}},{name:"v-3f3b5722",path:"/plugins/task-gcp/tasks/gke/org.kestra.task.gcp.gke.ClusterMetadata.html",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-3f3b5722").then(n)}},{name:"v-625fbfba",path:"/plugins/task-gcp/triggers/gcs/org.kestra.task.gcp.gcs.Trigger.html",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-625fbfba").then(n)}},{name:"v-a5890592",path:"/plugins/task-jdbc-mysql/tasks/mysql/org.kestra.task.jdbc.mysql.Query.html",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-a5890592").then(n)}},{name:"v-1342f403",path:"/plugins/task-jdbc-postgres/tasks/postgresql/org.kestra.task.jdbc.postgresql.Query.html",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-1342f403").then(n)}},{name:"v-c55cb926",path:"/plugins/task-kubernetes/tasks/org.kestra.task.kubernetes.JobCreate.html",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-c55cb926").then(n)}},{name:"v-c96f8dba",path:"/plugins/task-notifications/tasks/mail/org.kestra.task.notifications.mail.MailExecution.html",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-c96f8dba").then(n)}},{name:"v-8b587e3a",path:"/plugins/task-notifications/tasks/mail/org.kestra.task.notifications.mail.MailSend.html",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-8b587e3a").then(n)}},{name:"v-a838197a",path:"/plugins/task-notifications/tasks/slack/org.kestra.task.notifications.slack.SlackExecution.html",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-a838197a").then(n)}},{name:"v-3eef13ba",path:"/plugins/task-notifications/tasks/slack/org.kestra.task.notifications.slack.SlackIncomingWebhook.html",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-3eef13ba").then(n)}},{name:"v-69d470a3",path:"/plugins/task-serdes/tasks/avro/org.kestra.task.serdes.avro.AvroWriter.html",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-69d470a3").then(n)}},{name:"v-584500cb",path:"/plugins/task-serdes/tasks/csv/org.kestra.task.serdes.csv.CsvReader.html",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-584500cb").then(n)}},{name:"v-39c4896b",path:"/plugins/task-serdes/tasks/csv/org.kestra.task.serdes.csv.CsvWriter.html",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-39c4896b").then(n)}},{name:"v-7af6bb63",path:"/plugins/task-serdes/tasks/json/org.kestra.task.serdes.json.JsonReader.html",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-7af6bb63").then(n)}},{name:"v-51c6d563",path:"/plugins/task-serdes/tasks/json/org.kestra.task.serdes.json.JsonWriter.html",component:zs,beforeEnter:function(e,t,n){Wo("Layout","v-51c6d563").then(n)}},{path:"*",component:zs}],Es={title:"Kestra",description:"",base:"/",headTags:[],pages:[{title:"Home",frontmatter:{home:!0,heroImage:"logo.svg",heroText:"The modern workflow management platform",tagline:"Real time, usable and scalable task processing.",actionText:"Go to documentation →",actionLink:"/docs/",meta:[{property:"article:modified_time",content:"2020-11-03T13:38:34.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Home"},{property:"og:description",content:"Home | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/"},{name:"twitter:title",content:"Home"},{name:"twitter:description",content:"Home | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Home | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/",relativePath:"index.md",key:"v-3140ed9c",path:"/",lastUpdated:"11/3/2020, 1:38:34 PM",headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"What’s Kestra?",frontmatter:{order:0,meta:[{property:"article:modified_time",content:"2020-11-03T13:38:34.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"What’s Kestra?"},{property:"og:description",content:"What’s Kestra? | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/docs/"},{name:"twitter:title",content:"What’s Kestra?"},{name:"twitter:description",content:"What’s Kestra? | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/docs/"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"What’s Kestra? | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/docs/",relativePath:"docs/README.md",key:"v-24306408",path:"/docs/",lastUpdated:"11/3/2020, 1:38:34 PM",headersStr:null,content:"# What’s Kestra?\nKestra is a orchestration tool that helps you to build, run, schedule, and monitor complex pipelines of tasks.",normalizedContent:"# what’s kestra?\nkestra is a orchestration tool that helps you to build, run, schedule, and monitor complex pipelines of tasks.",charsets:{}},{title:"Administrator Guide",frontmatter:{order:5,meta:[{property:"article:modified_time",content:"2020-11-03T13:38:34.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Administrator Guide"},{property:"og:description",content:"Administrator Guide | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/docs/administrator-guide/"},{name:"twitter:title",content:"Administrator Guide"},{name:"twitter:description",content:"Administrator Guide | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/docs/administrator-guide/"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Administrator Guide | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/docs/administrator-guide/",relativePath:"docs/administrator-guide/README.md",key:"v-04b425b0",path:"/docs/administrator-guide/",lastUpdated:"11/3/2020, 1:38:34 PM",headersStr:null,content:"# Administrator Guide\nWARNING\n\nTODO",normalizedContent:"# administrator guide\nwarning\n\ntodo",charsets:{}},{title:"Architecture",frontmatter:{order:3,meta:[{property:"article:modified_time",content:"2020-11-03T13:38:34.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Architecture"},{property:"og:description",content:"Architecture | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/docs/architecture/"},{name:"twitter:title",content:"Architecture"},{name:"twitter:description",content:"Architecture | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/docs/architecture/"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Architecture | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/docs/architecture/",relativePath:"docs/architecture/README.md",key:"v-be84a670",path:"/docs/architecture/",headers:[{level:2,title:"Dependencies",slug:"dependencies",normalizedTitle:"dependencies",charIndex:19},{level:3,title:"Kafka",slug:"kafka",normalizedTitle:"kafka",charIndex:197},{level:3,title:"ElasticSearch",slug:"elasticsearch",normalizedTitle:"elasticsearch",charIndex:378},{level:3,title:"Storage",slug:"storage",normalizedTitle:"storage",charIndex:524},{level:2,title:"Servers",slug:"servers",normalizedTitle:"servers",charIndex:1162},{level:3,title:"Executor",slug:"executor",normalizedTitle:"executor",charIndex:969},{level:3,title:"Worker",slug:"worker",normalizedTitle:"worker",charIndex:1819},{level:3,title:"Scheduler",slug:"scheduler",normalizedTitle:"scheduler",charIndex:2830},{level:3,title:"Indexer",slug:"indexer",normalizedTitle:"indexer",charIndex:984},{level:3,title:"Webserver",slug:"webserver",normalizedTitle:"webserver",charIndex:3757},{level:2,title:"Plugins",slug:"plugins",normalizedTitle:"plugins",charIndex:4403}],lastUpdated:"11/3/2020, 1:38:34 PM",headersStr:"Dependencies Kafka ElasticSearch Storage Servers Executor Worker Scheduler Indexer Webserver Plugins",content:"# Architecture\n\n\n# Dependencies\nAt the heart, Kestra have a pluggable system allowing to switch some dependencies, but for now there is only one production environments architecture available :\n\n# Kafka\nKafka is the real main dependencies of Kestra, all the most important servers need to have a Kafka up & running. Kafka allowing Kestra to be an infinite scalable solution.\n\n# ElasticSearch\nElasticSearch is the database of Kestra, allowing displaying, search, aggregate all the data from Kestra (Flow, executions, ...)\n\n# Storage\nKestra need to store some files (incoming or outgoing files) and this notion is included in the heart of Kestra. Nowadays, storage availability are backup by many file systems, we rely on these in order to guarantee scalability of Kestra.\n\nThe storage is a simple plugin that you need to include and configure, by default only a Local (not scalable) storage is available.\n\nThe storage is used can be used by any Kestra servers exept the Executor & the Indexer that don't need it.\n\nAvailable storage are :\n\n * Storage Minio for Minio compatible with AWS S3 and all others S3 Like storage\n * Storage GCS for Google Cloud Storage\n\n# Servers\nKestra consist of multiple servers that can be scaled independently:\n\n# Executor\nExecutors handle all executions and flowable tasks. The only goal is to receive created execution and find what will be next tasks.\nThere isn't (and can't) heavy computing on this part. Only looking at current execution and find next tasks.\n\nThe executor also handle special execution case :\n\n * Listeners\n * Flow Trigger\n * Template\n\nInternally, the executor is a heavy Kafka Stream. The executor processes all events coming from Kafka in the right order, keep an internal state of the execution and merge taskrun result coming from the worker.\nIt also detect a dead Worker and resubmit the task running by a dead worker.\n\nSince the application is a Kafka Stream, the application can be scale infinitely (with the limit of partition count on Kafka) but since no heavy computation are done on the executor, this server doesn't use a lot of resources (except if you have a very high rate of execution).\n\n# Worker\nWorkers is where the task are done. Worker will receive task from Executor and will process then.\nSince tasks could be everything (heavy computation, simple api call), worker is ThreadPool where you can configure the amount of thread you need.\n\nInternally, Worker are a simple Kafka Consumer that will process any taskrun submitted. Worker will receive all task and dispatch internally in his Thread Pool.\nYou can also scale as you want workers and have many instance on multiple servers(with the limit of partition count on Kafka), each own with Thread Pool.\nIf a worker is dead, the Executor will detect him and resubmit their current taskrun to another worker.\n\n# Scheduler\nScheduler will handle most of the triggers (except the Flow Trigger). It will watch continuously all the triggers and detect if all the conditions is meet to trigger an Execution (submitted to Executor).\n\nInternally, Scheduler are 2 ThreadPool :\n\n * ScheduledExecutorService : that will tick every second and try to find a available job\n * CachedThreadPool : that will compute in a separate Thread for all the trigger\n\nWARNING\n\nFor now, Scheduler can be only a single instance per cluster! In a near future, Scheduler will also be scalable as other services.\n\nAlso for now, Scheduler depends on Repositories to keep the last execution date for all the trigger, and in a futur, we will remove the dependency to rely only on Kafka\n\n# Indexer\nIndexer will watch for many Kafka topic and will simply copy the content to Repositories. This will save to ElastiSearch all the execution & flow allowing to have a rich ui.\n\n# Webserver\nWebserver will offer 2 main module in the same server :\n\n * Api: All the api allowing triggering execution for any systems, and to interact with Kestra.\n * Ui: The ui is also serve from the same webserver\n\nThe webserver mostly interact with Elasticsearch in order to have a rich api / ui. And it also interacts with Kafka in order to trigger new execution, follow execution in real-time, ...\n\nTIP\n\nAs you understand, all the application is able to work only with Kafka and Storage (mostly except Scheduler).\nElasticsearch is only available for the Web ui and if ElasticSearch is down, you are able to continue any workload on Kestra\n\n# Plugins\nKestra core doesn't allow to handle many tasks type. We have included a Plugins systems that allow you to develop as many tasks as you need.\nA wide range of plugins will delivered by Kestra team !",normalizedContent:"# architecture\n\n\n# dependencies\nat the heart, kestra have a pluggable system allowing to switch some dependencies, but for now there is only one production environments architecture available :\n\n# kafka\nkafka is the real main dependencies of kestra, all the most important servers need to have a kafka up & running. kafka allowing kestra to be an infinite scalable solution.\n\n# elasticsearch\nelasticsearch is the database of kestra, allowing displaying, search, aggregate all the data from kestra (flow, executions, ...)\n\n# storage\nkestra need to store some files (incoming or outgoing files) and this notion is included in the heart of kestra. nowadays, storage availability are backup by many file systems, we rely on these in order to guarantee scalability of kestra.\n\nthe storage is a simple plugin that you need to include and configure, by default only a local (not scalable) storage is available.\n\nthe storage is used can be used by any kestra servers exept the executor & the indexer that don't need it.\n\navailable storage are :\n\n * storage minio for minio compatible with aws s3 and all others s3 like storage\n * storage gcs for google cloud storage\n\n# servers\nkestra consist of multiple servers that can be scaled independently:\n\n# executor\nexecutors handle all executions and flowable tasks. the only goal is to receive created execution and find what will be next tasks.\nthere isn't (and can't) heavy computing on this part. only looking at current execution and find next tasks.\n\nthe executor also handle special execution case :\n\n * listeners\n * flow trigger\n * template\n\ninternally, the executor is a heavy kafka stream. the executor processes all events coming from kafka in the right order, keep an internal state of the execution and merge taskrun result coming from the worker.\nit also detect a dead worker and resubmit the task running by a dead worker.\n\nsince the application is a kafka stream, the application can be scale infinitely (with the limit of partition count on kafka) but since no heavy computation are done on the executor, this server doesn't use a lot of resources (except if you have a very high rate of execution).\n\n# worker\nworkers is where the task are done. worker will receive task from executor and will process then.\nsince tasks could be everything (heavy computation, simple api call), worker is threadpool where you can configure the amount of thread you need.\n\ninternally, worker are a simple kafka consumer that will process any taskrun submitted. worker will receive all task and dispatch internally in his thread pool.\nyou can also scale as you want workers and have many instance on multiple servers(with the limit of partition count on kafka), each own with thread pool.\nif a worker is dead, the executor will detect him and resubmit their current taskrun to another worker.\n\n# scheduler\nscheduler will handle most of the triggers (except the flow trigger). it will watch continuously all the triggers and detect if all the conditions is meet to trigger an execution (submitted to executor).\n\ninternally, scheduler are 2 threadpool :\n\n * scheduledexecutorservice : that will tick every second and try to find a available job\n * cachedthreadpool : that will compute in a separate thread for all the trigger\n\nwarning\n\nfor now, scheduler can be only a single instance per cluster! in a near future, scheduler will also be scalable as other services.\n\nalso for now, scheduler depends on repositories to keep the last execution date for all the trigger, and in a futur, we will remove the dependency to rely only on kafka\n\n# indexer\nindexer will watch for many kafka topic and will simply copy the content to repositories. this will save to elastisearch all the execution & flow allowing to have a rich ui.\n\n# webserver\nwebserver will offer 2 main module in the same server :\n\n * api: all the api allowing triggering execution for any systems, and to interact with kestra.\n * ui: the ui is also serve from the same webserver\n\nthe webserver mostly interact with elasticsearch in order to have a rich api / ui. and it also interacts with kafka in order to trigger new execution, follow execution in real-time, ...\n\ntip\n\nas you understand, all the application is able to work only with kafka and storage (mostly except scheduler).\nelasticsearch is only available for the web ui and if elasticsearch is down, you are able to continue any workload on kestra\n\n# plugins\nkestra core doesn't allow to handle many tasks type. we have included a plugins systems that allow you to develop as many tasks as you need.\na wide range of plugins will delivered by kestra team !",charsets:{}},{title:"Concepts",frontmatter:{order:2,meta:[{property:"article:modified_time",content:"2020-11-03T13:38:34.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Concepts"},{property:"og:description",content:"Concepts | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/docs/concepts/"},{name:"twitter:title",content:"Concepts"},{name:"twitter:description",content:"Concepts | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/docs/concepts/"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Concepts | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/docs/concepts/",relativePath:"docs/concepts/README.md",key:"v-11cc6b58",path:"/docs/concepts/",lastUpdated:"11/3/2020, 1:38:34 PM",headersStr:null,content:"# Concepts\nThis section describe some specific terms usage for Kestra system. It aims to make it simpler\nto understand the system for newcomers.\n\n * Flow\n   \n    * Task * Flowable Task\n       * Runnable Task\n      \n      \n    * Namespace\n    * Inputs\n    * Revision\n    * Listeners\n   \n   \n * Execution\n   \n    * Task Run\n    * Attempts\n    * Outputs\n    * Metrics",normalizedContent:"# concepts\nthis section describe some specific terms usage for kestra system. it aims to make it simpler\nto understand the system for newcomers.\n\n * flow\n   \n    * task * flowable task\n       * runnable task\n      \n      \n    * namespace\n    * inputs\n    * revision\n    * listeners\n   \n   \n * execution\n   \n    * task run\n    * attempts\n    * outputs\n    * metrics",charsets:{}},{title:"Execution",frontmatter:{order:2,meta:[{property:"article:modified_time",content:"2020-11-03T13:38:34.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Execution"},{property:"og:description",content:"Execution | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/docs/concepts/executions.html"},{name:"twitter:title",content:"Execution"},{name:"twitter:description",content:"Execution | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/docs/concepts/executions.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Execution | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/docs/concepts/executions.html",relativePath:"docs/concepts/executions.md",key:"v-a42a4c0e",path:"/docs/concepts/executions.html",headers:[{level:2,title:"Task Run",slug:"task-run",normalizedTitle:"task run",charIndex:200},{level:2,title:"Attempts",slug:"attempts",normalizedTitle:"attempts",charIndex:343},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:538},{level:2,title:"Metrics",slug:"metrics",normalizedTitle:"metrics",charIndex:649},{level:2,title:"State",slug:"state",normalizedTitle:"state",charIndex:867}],lastUpdated:"11/3/2020, 1:38:34 PM",headersStr:"Task Run Attempts Outputs Metrics State",content:"# Execution\nAn execution is a flow that is currently processing or have already finished doing things. It is a task set processing together to achieve the flow goal that is to be ran successfully.\n\n# Task Run\nA task run is a task that was executed and associated to its operationnal data like execution_id, state, start_date, end_date, ...\n\n# Attempts\nEach task run will be produce 1 or more attempt. Most common task run will have only 1 attempt, but you can add some Retries that will generate new attempts for every failed taskrun.\n\n# Outputs\nEach task can generate some output data that can be reused in other tasks of the current execution.\n\n# Metrics\nEach task can generate some metrics data that be useful to understand what the current task are doing.\nThis can be for example file.size, row.count, ...\n\nThere is 2 kind of metrics :\n\n * Duration\n * Counter\n\n# State\nDefine all the state that a Task Run or an Execution can have.\n\nThe Execution or Task Run can have these state :\n\n * CREATED: not handle internally, waiting to be treated. Mostly the execution is in a queue.\n * RUNNING: the tasks are running right now.\n * SUCCESS: all the task are done without any failure.\n * FAILED: execution have any unintended behaviour that cause the execution to failed.\n * KILLING: execution was asked to be killed and waiting tasks were killed.\n * KILLED: execution was killed, and no more task will be done.\n * RESTARTED: this status is a transitive status that mean CREATED, only for keep track of the restart",normalizedContent:"# execution\nan execution is a flow that is currently processing or have already finished doing things. it is a task set processing together to achieve the flow goal that is to be ran successfully.\n\n# task run\na task run is a task that was executed and associated to its operationnal data like execution_id, state, start_date, end_date, ...\n\n# attempts\neach task run will be produce 1 or more attempt. most common task run will have only 1 attempt, but you can add some retries that will generate new attempts for every failed taskrun.\n\n# outputs\neach task can generate some output data that can be reused in other tasks of the current execution.\n\n# metrics\neach task can generate some metrics data that be useful to understand what the current task are doing.\nthis can be for example file.size, row.count, ...\n\nthere is 2 kind of metrics :\n\n * duration\n * counter\n\n# state\ndefine all the state that a task run or an execution can have.\n\nthe execution or task run can have these state :\n\n * created: not handle internally, waiting to be treated. mostly the execution is in a queue.\n * running: the tasks are running right now.\n * success: all the task are done without any failure.\n * failed: execution have any unintended behaviour that cause the execution to failed.\n * killing: execution was asked to be killed and waiting tasks were killed.\n * killed: execution was killed, and no more task will be done.\n * restarted: this status is a transitive status that mean created, only for keep track of the restart",charsets:{}},{title:"Flow",frontmatter:{order:1,meta:[{property:"article:modified_time",content:"2020-11-03T13:38:34.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Flow"},{property:"og:description",content:"Flow | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/docs/concepts/flows.html"},{name:"twitter:title",content:"Flow"},{name:"twitter:description",content:"Flow | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/docs/concepts/flows.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Flow | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/docs/concepts/flows.html",relativePath:"docs/concepts/flows.md",key:"v-631e077a",path:"/docs/concepts/flows.html",headers:[{level:2,title:"Task",slug:"task",normalizedTitle:"task",charIndex:132},{level:3,title:"Flowable Task",slug:"flowable-task",normalizedTitle:"flowable task",charIndex:334},{level:3,title:"Runnable Task",slug:"runnable-task",normalizedTitle:"runnable task",charIndex:822},{level:2,title:"Namespace",slug:"namespace",normalizedTitle:"namespace",charIndex:1155},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:1413},{level:2,title:"Revision",slug:"revision",normalizedTitle:"revision",charIndex:1715},{level:2,title:"Listeners",slug:"listeners",normalizedTitle:"listeners",charIndex:1931},{level:2,title:"Triggers",slug:"triggers",normalizedTitle:"triggers",charIndex:2245},{level:2,title:"Templates",slug:"templates",normalizedTitle:"templates",charIndex:2401}],lastUpdated:"11/3/2020, 1:38:34 PM",headersStr:"Task Flowable Task Runnable Task Namespace Inputs Revision Listeners Triggers Templates",content:"# Flow\nA flow is a list of task for Kestra. It defines all the behavior you want for the current flow. So, a flow is simple list of Task, group by namespace.\n\n# Task\nA Task is single action in a flow.\nA task is can optionally takes inputs, performs an action, and produces an optional outputs.\n\nThere is 2 kind of Task in Kestra :\n\n# Flowable Task\nFlowable Task are tasks only handle workflow state and trigger new tasks. It will handle the logic of the flow allowing doing complex workflow like branching, parallel tasks, ...\nA simple example is a Switch task that can take any inputs and decide witch are the next tasks to run (and allow branching).\n\nA Flowable Task is handled by Executors and can be called very often, so it can't run intensive computation.\n\nThe Most common Flowable Task will be keep in the core.\n\n# Runnable Task\nRunnable Task are here to handle any computation work. This can be anything like file systems operation, api call, database query, ... Theses tasks can be compute intensive since it will be\nhandle by Workers. By default, Kestra don't have a lot of RunnableTask and mostly all the tasks will be available as Plugins.\n\n# Namespace\nA namespace is a like a folder for file system. It aims to group flows in a limitless hierarchy.\nNamespace is compose by word and letters separated by .. The hierarchy depth is not limited and is free for Kestra users to fit their organization.\n\n# Inputs\nInputs are mandatory or optional parameters sent to a flow in order to be successfully run. It can be anythings (string, int, file, ...) to will be send when the execution is created. Flow must defined possible inputs and mandatory one will be validated before the creation of the execution.\n\n# Revision\nEach flow modification will produce a new revision, revision is a simple increments number that will update after each change of the flow. Internally Kestra will track and keep all revisions of the flow.\n\n# Listeners\nListeners are special task that can listen to the current flow and launch task outside of the flow.\nThe result of the tasks will not change the execution status. Mostly Listeners are here to send notification or handle special end task behaviour that you don't want to be considered as main workflow.\n\n# Triggers\nTriggers are way to start a flow with external events. For example, on a schedule date or waiting for some external events (like file creation)\n\n# Templates\nTemplates are list of tasks that can be shared between flows. You can define a template and call it from other flows allowing to share a list of tasks and keep these task updated without changing your flow.",normalizedContent:"# flow\na flow is a list of task for kestra. it defines all the behavior you want for the current flow. so, a flow is simple list of task, group by namespace.\n\n# task\na task is single action in a flow.\na task is can optionally takes inputs, performs an action, and produces an optional outputs.\n\nthere is 2 kind of task in kestra :\n\n# flowable task\nflowable task are tasks only handle workflow state and trigger new tasks. it will handle the logic of the flow allowing doing complex workflow like branching, parallel tasks, ...\na simple example is a switch task that can take any inputs and decide witch are the next tasks to run (and allow branching).\n\na flowable task is handled by executors and can be called very often, so it can't run intensive computation.\n\nthe most common flowable task will be keep in the core.\n\n# runnable task\nrunnable task are here to handle any computation work. this can be anything like file systems operation, api call, database query, ... theses tasks can be compute intensive since it will be\nhandle by workers. by default, kestra don't have a lot of runnabletask and mostly all the tasks will be available as plugins.\n\n# namespace\na namespace is a like a folder for file system. it aims to group flows in a limitless hierarchy.\nnamespace is compose by word and letters separated by .. the hierarchy depth is not limited and is free for kestra users to fit their organization.\n\n# inputs\ninputs are mandatory or optional parameters sent to a flow in order to be successfully run. it can be anythings (string, int, file, ...) to will be send when the execution is created. flow must defined possible inputs and mandatory one will be validated before the creation of the execution.\n\n# revision\neach flow modification will produce a new revision, revision is a simple increments number that will update after each change of the flow. internally kestra will track and keep all revisions of the flow.\n\n# listeners\nlisteners are special task that can listen to the current flow and launch task outside of the flow.\nthe result of the tasks will not change the execution status. mostly listeners are here to send notification or handle special end task behaviour that you don't want to be considered as main workflow.\n\n# triggers\ntriggers are way to start a flow with external events. for example, on a schedule date or waiting for some external events (like file creation)\n\n# templates\ntemplates are list of tasks that can be shared between flows. you can define a template and call it from other flows allowing to share a list of tasks and keep these task updated without changing your flow.",charsets:{}},{title:"Developer Guide",frontmatter:{order:4,meta:[{property:"article:modified_time",content:"2020-11-03T13:38:34.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Developer Guide"},{property:"og:description",content:"Developer Guide | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/docs/developer-guide/"},{name:"twitter:title",content:"Developer Guide"},{name:"twitter:description",content:"Developer Guide | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/docs/developer-guide/"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Developer Guide | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/docs/developer-guide/",relativePath:"docs/developer-guide/README.md",key:"v-477f7948",path:"/docs/developer-guide/",lastUpdated:"11/3/2020, 1:38:34 PM",headersStr:null,content:"# Developer Guide\nWARNING\n\nTODO",normalizedContent:"# developer guide\nwarning\n\ntodo",charsets:{}},{title:"Conditions",frontmatter:{order:7,meta:[{property:"article:modified_time",content:"2020-11-03T13:38:34.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Conditions"},{property:"og:description",content:"Conditions | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/docs/developer-guide/conditions/"},{name:"twitter:title",content:"Conditions"},{name:"twitter:description",content:"Conditions | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/docs/developer-guide/conditions/"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Conditions | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/docs/developer-guide/conditions/",relativePath:"docs/developer-guide/conditions/README.md",key:"v-587c915c",path:"/docs/developer-guide/conditions/",lastUpdated:"11/3/2020, 1:38:34 PM",headersStr:null,content:"# Conditions\nConditions are use in Triggers & Listeners in order to limit the case this one could happen.\nFor example:\n\n * you can limit the listeners to only specified status\n * you can limit triggers to specified namespace prefix\n * ....\n\nYou can pass a list of conditions and all the conditions must match to enable the current action.\n\nAvailable condition are :\n\n * ExecutionFlowCondition\n * ExecutionNamespaceCondition\n * ExecutionStatusCondition\n * FlowCondition\n * FlowNamespaceCondition\n * VariableCondition",normalizedContent:"# conditions\nconditions are use in triggers & listeners in order to limit the case this one could happen.\nfor example:\n\n * you can limit the listeners to only specified status\n * you can limit triggers to specified namespace prefix\n * ....\n\nyou can pass a list of conditions and all the conditions must match to enable the current action.\n\navailable condition are :\n\n * executionflowcondition\n * executionnamespacecondition\n * executionstatuscondition\n * flowcondition\n * flownamespacecondition\n * variablecondition",charsets:{}},{title:"Document your flow",frontmatter:{order:11,meta:[{property:"article:modified_time",content:"2020-11-03T13:38:34.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Document your flow"},{property:"og:description",content:"Document your flow | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/docs/developer-guide/documentation/"},{name:"twitter:title",content:"Document your flow"},{name:"twitter:description",content:"Document your flow | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/docs/developer-guide/documentation/"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Document your flow | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/docs/developer-guide/documentation/",relativePath:"docs/developer-guide/documentation/README.md",key:"v-5a7b3ee8",path:"/docs/developer-guide/documentation/",lastUpdated:"11/3/2020, 1:38:34 PM",headersStr:null,content:"# Document your flow\nYou can document from flow, task, ... in order to explain what is the goal of the current element.\n\nFor this, Kestra allow to add a description attribute where you can write some documentation of the current element.\nDescription must be written on Markdown.\n\nYou can add description attribute on :\n\n * Flow\n * Task\n * Listeners\n * Triggers\n\nAll description will be visible on the ui :",normalizedContent:"# document your flow\nyou can document from flow, task, ... in order to explain what is the goal of the current element.\n\nfor this, kestra allow to add a description attribute where you can write some documentation of the current element.\ndescription must be written on markdown.\n\nyou can add description attribute on :\n\n * flow\n * task\n * listeners\n * triggers\n\nall description will be visible on the ui :",charsets:{}},{title:"Errors handling",frontmatter:{order:5,meta:[{property:"article:modified_time",content:"2020-11-03T13:38:34.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Errors handling"},{property:"og:description",content:"Errors handling | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/docs/developer-guide/errors-handling/"},{name:"twitter:title",content:"Errors handling"},{name:"twitter:description",content:"Errors handling | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/docs/developer-guide/errors-handling/"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Errors handling | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/docs/developer-guide/errors-handling/",relativePath:"docs/developer-guide/errors-handling/README.md",key:"v-550d8c48",path:"/docs/developer-guide/errors-handling/",headers:[{level:2,title:"Global Error",slug:"global-error",normalizedTitle:"global error",charIndex:324},{level:2,title:"Local Error",slug:"local-error",normalizedTitle:"local error",charIndex:717}],lastUpdated:"11/3/2020, 1:38:34 PM",headersStr:"Global Error Local Error",content:'# Errors handling\nErrors are special branch of your flow, where you can define how to handle it if any task failed.\n\n2 kinds of errors can be defined :\n\n * Global: for the flow and must be at root of the flow.\n * Local: that is available for all Flowable Task, that allow to be only for this tasks and all theirs childs.\n\n# Global Error\nThis example processes a task which fails immediately. Then a tasks sequence is processed in the error branch of the flow.\n\nid: errors\nnamespace: org.kestra.tests\n\ntasks:\n  - id: failed\n    type: org.kestra.core.tasks.scripts.Bash\n    commands:\n      - exit 1\nerrors:\n  - id: 2nd\n    type: org.kestra.core.tasks.debugs.Echo\n    format: I\'m failing {{task.id}}\n    level: INFO\n\n\n# Local Error\nIn this case, the error branch will be used only if all childs of task t2 have an errors.\nIn this specific example, if the task t1 failed, no errors will be used. This is really usefull to do some cleanup of ressource for this tasks only.\n\nid: errors\nnamespace: org.kestra.tests\n\ntasks:\n  - id: parent-seq\n    type: org.kestra.core.tasks.flows.Sequential\n    tasks:\n      - id: t1\n        type: org.kestra.core.tasks.debugs.Return\n        format: "{{task.id}} > {{taskrun.startDate}}"\n      - id: t2\n        type: org.kestra.core.tasks.flows.Sequential\n        tasks:\n          - id: t2-t1\n            type: org.kestra.core.tasks.scripts.Bash\n            commands:\n              - \'exit 1\'\n        errors:\n          - id: error-t1\n            type: org.kestra.core.tasks.debugs.Return\n            format: "Error Trigger ! {{task.id}}"',normalizedContent:'# errors handling\nerrors are special branch of your flow, where you can define how to handle it if any task failed.\n\n2 kinds of errors can be defined :\n\n * global: for the flow and must be at root of the flow.\n * local: that is available for all flowable task, that allow to be only for this tasks and all theirs childs.\n\n# global error\nthis example processes a task which fails immediately. then a tasks sequence is processed in the error branch of the flow.\n\nid: errors\nnamespace: org.kestra.tests\n\ntasks:\n  - id: failed\n    type: org.kestra.core.tasks.scripts.bash\n    commands:\n      - exit 1\nerrors:\n  - id: 2nd\n    type: org.kestra.core.tasks.debugs.echo\n    format: i\'m failing {{task.id}}\n    level: info\n\n\n# local error\nin this case, the error branch will be used only if all childs of task t2 have an errors.\nin this specific example, if the task t1 failed, no errors will be used. this is really usefull to do some cleanup of ressource for this tasks only.\n\nid: errors\nnamespace: org.kestra.tests\n\ntasks:\n  - id: parent-seq\n    type: org.kestra.core.tasks.flows.sequential\n    tasks:\n      - id: t1\n        type: org.kestra.core.tasks.debugs.return\n        format: "{{task.id}} > {{taskrun.startdate}}"\n      - id: t2\n        type: org.kestra.core.tasks.flows.sequential\n        tasks:\n          - id: t2-t1\n            type: org.kestra.core.tasks.scripts.bash\n            commands:\n              - \'exit 1\'\n        errors:\n          - id: error-t1\n            type: org.kestra.core.tasks.debugs.return\n            format: "error trigger ! {{task.id}}"',charsets:{}},{title:"Flow",frontmatter:{order:1,meta:[{property:"article:modified_time",content:"2020-11-03T13:38:34.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Flow"},{property:"og:description",content:"Flow | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/docs/developer-guide/flow/"},{name:"twitter:title",content:"Flow"},{name:"twitter:description",content:"Flow | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/docs/developer-guide/flow/"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Flow | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/docs/developer-guide/flow/",relativePath:"docs/developer-guide/flow/README.md",key:"v-8488a8b4",path:"/docs/developer-guide/flow/",headers:[{level:2,title:"Flow sample",slug:"flow-sample",normalizedTitle:"flow sample",charIndex:107},{level:2,title:"Flow Properties",slug:"flow-properties",normalizedTitle:"flow properties",charIndex:359}],lastUpdated:"11/3/2020, 1:38:34 PM",headersStr:"Flow sample Flow Properties",content:'# Flow\n> Flow is the base of your workload, it defined all the tasks you want to do and theirs orders.\n\n\n# Flow sample\nThe flow model is a yaml document describing how Kestra will schedule and compute your workload.\n\nHere is a full sample flow demonstrating the flow definition.\nThe following code is a sample existing task in Kestra for testing purposes.\n\n# Flow Properties\nid: samples \nnamespace: org.kestra.tests \nrevision: 8\n\ndescription: "Some flow **documentation** in *Markdown*"\n\ninputs:\n  - name: my-value\n    type: STRING\n    required: false\n\nvariables:\n  first: "1"\n  second: "{{vars.first}} > 2"\n  third: "{{vars.second}} > 3"\n\ntasks: \n  - id: date \n    type: org.kestra.core.tasks.debugs.Return\n    description: "Some tasks **documentation** in *Markdown*"\n    format: "A log line content with a contextual date variable {{taskrun.startDate}}" \n\nerrors: \n  - id: failed-echo \n    type: org.kestra.core.tasks.debugs.Echo  \n    format: I\'m failing {{task.id}}\n\nlisteners:\n  - description: "some listener **documentation** in *Markdown*"\n    conditions:\n      - type: org.kestra.core.models.conditions.types.ExecutionStatusCondition\n        in:\n          - SUCCESS\n    tasks:\n      - id: execution-failed-listener\n        type: org.kestra.core.tasks.scripts.Bash\n        commands:\n          - echo "I\'m a listeners"\n\ntriggers:\n  - id: monthly\n    type: org.kestra.core.models.triggers.types.Schedule\n    description: "some trigger **documentation** in *Markdown*"\n    cron: 0 0 1 * *\n    backfill:\n      start: 2020-01-01T00:00:00+02:00\n\n\nField                       Description                                                                                                                                        \nid                          Flow identifier, must be unique across namespaces.                                                                                                 \nnamespace                   Each task live in one arbitrary namespace, this is useful for task organisation. Namespace is required.                                            \nrevision                    Flow version, handle internally by kestra, and will be incremented for each modifications save, not required since autogenerated.                  \ndescription                 Description for documentation, more details here                                                                                                   \ninputs                      List of inputs for current flow, more details here                                                                                                 \ninputs.[].name              The name for this inputs, allowing to use it as vars on the current flow                                                                           \ninputs.[].type              The type for this inputs, for example (STRING, FILE, ...)                                                                                          \ninputs.[].required          If the input is required (and prevent flow to be executed without this input                                                                       \nvariables                   A list of variables (as key, value) for the current flow that can be reach with {{ vars.name }}                                                    \ntasks                       A list of related tasks the current flow, all tasks will be run sequentially.                                                                      \ntasks.[].id                 The task id that must be unique for current flow.                                                                                                  \ntasks.[].type               The task type that is a full java class name.                                                                                                      \ntasks.[].description        Description for documentation, more details here                                                                                                   \ntasks.[].xxx                Each task type come with specific specific field that is documented on plugins page                                                                \nerrors                      A list of errors tasks the current flow, all tasks will be run sequentially and will be run only if there is any error on the current execution.   \nerrors.[].xxx               The same property as tasks, error can be any normal tasks, more details here                                                                       \nlisteners                   List of listeners for current flow, more details here                                                                                              \nlisteners.[].description    Description for documentation, more details here                                                                                                   \nlisteners.[].condition      The condition that will be valided in order to launch or skip this listeners                                                                       \nlisteners.[].tasks.[].xxx   The same property as tasks, the task to run for this listeners                                                                                     \ntriggers                    Triggers are external events (like date for example) to launch this jobs,more details here                                                         \ntriggers.[].id              The trigger id that must be unique and can\'t be updated.                                                                                           \ntriggers.[].type            The trigger type that is a full java class name.                                                                                                   \ntriggers.[].description     Description for documentation, more details here                                                                                                   \ntriggers.[].xxx             Like task, each trigger have theirs properties',normalizedContent:'# flow\n> flow is the base of your workload, it defined all the tasks you want to do and theirs orders.\n\n\n# flow sample\nthe flow model is a yaml document describing how kestra will schedule and compute your workload.\n\nhere is a full sample flow demonstrating the flow definition.\nthe following code is a sample existing task in kestra for testing purposes.\n\n# flow properties\nid: samples \nnamespace: org.kestra.tests \nrevision: 8\n\ndescription: "some flow **documentation** in *markdown*"\n\ninputs:\n  - name: my-value\n    type: string\n    required: false\n\nvariables:\n  first: "1"\n  second: "{{vars.first}} > 2"\n  third: "{{vars.second}} > 3"\n\ntasks: \n  - id: date \n    type: org.kestra.core.tasks.debugs.return\n    description: "some tasks **documentation** in *markdown*"\n    format: "a log line content with a contextual date variable {{taskrun.startdate}}" \n\nerrors: \n  - id: failed-echo \n    type: org.kestra.core.tasks.debugs.echo  \n    format: i\'m failing {{task.id}}\n\nlisteners:\n  - description: "some listener **documentation** in *markdown*"\n    conditions:\n      - type: org.kestra.core.models.conditions.types.executionstatuscondition\n        in:\n          - success\n    tasks:\n      - id: execution-failed-listener\n        type: org.kestra.core.tasks.scripts.bash\n        commands:\n          - echo "i\'m a listeners"\n\ntriggers:\n  - id: monthly\n    type: org.kestra.core.models.triggers.types.schedule\n    description: "some trigger **documentation** in *markdown*"\n    cron: 0 0 1 * *\n    backfill:\n      start: 2020-01-01t00:00:00+02:00\n\n\nfield                       description                                                                                                                                        \nid                          flow identifier, must be unique across namespaces.                                                                                                 \nnamespace                   each task live in one arbitrary namespace, this is useful for task organisation. namespace is required.                                            \nrevision                    flow version, handle internally by kestra, and will be incremented for each modifications save, not required since autogenerated.                  \ndescription                 description for documentation, more details here                                                                                                   \ninputs                      list of inputs for current flow, more details here                                                                                                 \ninputs.[].name              the name for this inputs, allowing to use it as vars on the current flow                                                                           \ninputs.[].type              the type for this inputs, for example (string, file, ...)                                                                                          \ninputs.[].required          if the input is required (and prevent flow to be executed without this input                                                                       \nvariables                   a list of variables (as key, value) for the current flow that can be reach with {{ vars.name }}                                                    \ntasks                       a list of related tasks the current flow, all tasks will be run sequentially.                                                                      \ntasks.[].id                 the task id that must be unique for current flow.                                                                                                  \ntasks.[].type               the task type that is a full java class name.                                                                                                      \ntasks.[].description        description for documentation, more details here                                                                                                   \ntasks.[].xxx                each task type come with specific specific field that is documented on plugins page                                                                \nerrors                      a list of errors tasks the current flow, all tasks will be run sequentially and will be run only if there is any error on the current execution.   \nerrors.[].xxx               the same property as tasks, error can be any normal tasks, more details here                                                                       \nlisteners                   list of listeners for current flow, more details here                                                                                              \nlisteners.[].description    description for documentation, more details here                                                                                                   \nlisteners.[].condition      the condition that will be valided in order to launch or skip this listeners                                                                       \nlisteners.[].tasks.[].xxx   the same property as tasks, the task to run for this listeners                                                                                     \ntriggers                    triggers are external events (like date for example) to launch this jobs,more details here                                                         \ntriggers.[].id              the trigger id that must be unique and can\'t be updated.                                                                                           \ntriggers.[].type            the trigger type that is a full java class name.                                                                                                   \ntriggers.[].description     description for documentation, more details here                                                                                                   \ntriggers.[].xxx             like task, each trigger have theirs properties',charsets:{}},{title:"Flowable Task",frontmatter:{order:2,meta:[{property:"article:modified_time",content:"2020-11-03T13:38:34.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Flowable Task"},{property:"og:description",content:"Flowable Task | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/docs/developer-guide/flowable/"},{name:"twitter:title",content:"Flowable Task"},{name:"twitter:description",content:"Flowable Task | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/docs/developer-guide/flowable/"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Flowable Task | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/docs/developer-guide/flowable/",relativePath:"docs/developer-guide/flowable/README.md",key:"v-2a1991f2",path:"/docs/developer-guide/flowable/",headers:[{level:2,title:"Sequential",slug:"sequential",normalizedTitle:"sequential",charIndex:419},{level:2,title:"Parallel",slug:"parallel",normalizedTitle:"parallel",charIndex:1041},{level:2,title:"Switch",slug:"switch",normalizedTitle:"switch",charIndex:338},{level:2,title:"EachSequential",slug:"eachsequential",normalizedTitle:"eachsequential",charIndex:2605},{level:2,title:"EachParallel",slug:"eachparallel",normalizedTitle:"eachparallel",charIndex:3474},{level:2,title:"Flow",slug:"flow",normalizedTitle:"flow",charIndex:2},{level:2,title:"Templates",slug:"templates",normalizedTitle:"templates",charIndex:4728}],lastUpdated:"11/3/2020, 1:38:34 PM",headersStr:"Sequential Parallel Switch EachSequential EachParallel Flow Templates",content:'# Flowable Task\nIn kestra, we orchestrate your workflow with Flowable Tasks. These tasks don\'t compute any things but allow you to build more complex workflow.\nLike branching, doing tasks in parallel, ...\n\nFlowable mostly use context with variables in order to define next tasks.\nFor example, you can use the outputs of a variables to do Switch to defined the next tasks.\n\nHere is the current list of Flowable Tasks\n\n# Sequential\nThis flow processes tasks ones after others sequentially.\nMostly use in order to group tasks.\n\nid: sequential\nnamespace: org.kestra.tests\nrevision: 8\ntasks:\n  - id: sequential\n    type: org.kestra.core.tasks.flows.Sequential\n    tasks:\n      - id: 1st\n        type: org.kestra.core.tasks.debugs.Return\n        format: "{{task.id}} > {{taskrun.startDate}}"\n      - id: 2nd\n        type: org.kestra.core.tasks.debugs.Return\n        format: "{{task.id}} > {{taskrun.id}}"\n  - id: last\n    type: org.kestra.core.tasks.debugs.Return\n    format: "{{task.id}} > {{taskrun.startDate}}"\n\n\nSequential Task documentation# Parallel\nThis flow processes tasks in parallel. It makes it convinient to process many tasks at once.\n\nid: parallel\nnamespace: org.kestra.tests\nrevision: 8\ntasks:\n  - id: parallel\n    type: org.kestra.core.tasks.flows.Parallel\n    tasks:\n      - id: 1st\n        type: org.kestra.core.tasks.debugs.Return\n        format: "{{task.id}} > {{taskrun.startDate}}"\n      - id: 2nd\n        type: org.kestra.core.tasks.debugs.Return\n        format: "{{task.id}} > {{taskrun.id}}"\n  - id: last\n    type: org.kestra.core.tasks.debugs.Return\n    format: "{{task.id}} > {{taskrun.startDate}}"\n\n\nParallel Task documentation# Switch\nThis flow processes some tasks conditionnaly depending on a contextual value.\nIn this case, an input value will trigger only some parts of the flow.\n\nid: switch\nnamespace: org.kestra.tests\n\ninputs:\n  - name: string\n    type: STRING\n    required: true\n\ntasks:\n  - id: switch\n    type: org.kestra.core.tasks.flows.Switch\n    value: "{{inputs.string}}"\n    cases:\n      FIRST:\n        - id: 1st\n          type: org.kestra.core.tasks.debugs.Return\n          format: "{{task.id}} > {{taskrun.startDate}}"\n      SECOND:\n        - id: 2nd\n          type: org.kestra.core.tasks.debugs.Return\n          format: "{{task.id}} > {{taskrun.startDate}}"\n      THIRD:\n        - id: 3th\n          type: org.kestra.core.tasks.debugs.Return\n          format: "{{task.id}} > {{taskrun.startDate}}"\n    defaults:\n      - id: default\n        type: org.kestra.core.tasks.debugs.Return\n        format: "{{task.id}} > {{taskrun.startDate}}"\n\n\nSwitch Task documentation# EachSequential\nThis flow will generate many tasks at runtime depending on a value field.\nHere this field is static, but it can be generated from a previous task output and\ntrigger an arbitrary number of subtasks. Each subtask will run after others sequentially.\n\nid: each\nnamespace: org.kestra.tests\nrevision: 8\ntasks:\n  - id: each\n    type: org.kestra.core.tasks.flows.EachSequential\n    value: \'["value 1", "value 2", "value 3"]\'\n    tasks:\n      - id: 1st\n        type: org.kestra.core.tasks.debugs.Return\n        format: "{{task.id}} > {{taskrun.value}} > {{taskrun.startDate}}"\n      - id: 2nd\n        type: org.kestra.core.tasks.debugs.Return\n        format: "{{task.id}} > {{taskrun.value}} > {{taskrun.startDate}}"\n  - id: last\n    type: org.kestra.core.tasks.debugs.Return\n    format: "{{task.id}} > {{taskrun.startDate}}"\n\n\nEachSequential Task documentation# EachParallel\nThis flow is the same as EachSequential but each subtask will run after in parallel.\n\nid: each-parallel\nnamespace: org.kestra.tests\n\ntasks:\n  - id: 1_each\n    type: org.kestra.core.tasks.flows.EachParallel\n    value: \'["value 1", "value 2", "value 3"]\'\n    tasks:\n      - id: 1-1\n        type: org.kestra.core.tasks.scripts.Bash\n        commands:\n          - \'echo "{{task.id}} > $(date +"%T.%N")"\'\n          - \'sleep 1\'\n      - id: 1-2\n        type: org.kestra.core.tasks.scripts.Bash\n        commands:\n          - \'echo "{{task.id}} > $(date +"%T.%N")"\'\n          - \'sleep 1\'\n  - id: 2_end\n    type: org.kestra.core.tasks.debugs.Return\n    format: "{{task.id}} > {{taskrun.startDate}}"\n\n\nEachParallel Task documentation# Flow\nThis flow will trigger another one.\nThis allows to decouple the first one from the second one and to monitor each flows individually.\n\nYou can pass outputs to the trigger flow as inputs (that you need to declare in the subflow).\n\nid: each\nnamespace: org.kestra.tests\nrevision: 8\ntasks:\n  - id: "subflow"  \n    type: org.kestra.core.tasks.flows.Flow\n    namespace: org.kestra.tests\n    flowId: my-sub-flows\n    inputs:\n      file: "{{ outputs.my-task.files.resolver\' }}"\n      store: 12\n\n\nFlow Task documentation# Templates\nTemplates are a special task that will include task from a template at runtime.\nYou defined the template and can use on every flow you want, allowing to share the common tasks between your flows.\n\nid: each\nnamespace: org.kestra.tests\nrevision: 8\ntasks:\n  - id: template\n    type: org.kestra.core.tasks.flows.Template\n    namespace: org.kestra.tests\n    templateId: template\n\n\nTemplate Task documentation',normalizedContent:'# flowable task\nin kestra, we orchestrate your workflow with flowable tasks. these tasks don\'t compute any things but allow you to build more complex workflow.\nlike branching, doing tasks in parallel, ...\n\nflowable mostly use context with variables in order to define next tasks.\nfor example, you can use the outputs of a variables to do switch to defined the next tasks.\n\nhere is the current list of flowable tasks\n\n# sequential\nthis flow processes tasks ones after others sequentially.\nmostly use in order to group tasks.\n\nid: sequential\nnamespace: org.kestra.tests\nrevision: 8\ntasks:\n  - id: sequential\n    type: org.kestra.core.tasks.flows.sequential\n    tasks:\n      - id: 1st\n        type: org.kestra.core.tasks.debugs.return\n        format: "{{task.id}} > {{taskrun.startdate}}"\n      - id: 2nd\n        type: org.kestra.core.tasks.debugs.return\n        format: "{{task.id}} > {{taskrun.id}}"\n  - id: last\n    type: org.kestra.core.tasks.debugs.return\n    format: "{{task.id}} > {{taskrun.startdate}}"\n\n\nsequential task documentation# parallel\nthis flow processes tasks in parallel. it makes it convinient to process many tasks at once.\n\nid: parallel\nnamespace: org.kestra.tests\nrevision: 8\ntasks:\n  - id: parallel\n    type: org.kestra.core.tasks.flows.parallel\n    tasks:\n      - id: 1st\n        type: org.kestra.core.tasks.debugs.return\n        format: "{{task.id}} > {{taskrun.startdate}}"\n      - id: 2nd\n        type: org.kestra.core.tasks.debugs.return\n        format: "{{task.id}} > {{taskrun.id}}"\n  - id: last\n    type: org.kestra.core.tasks.debugs.return\n    format: "{{task.id}} > {{taskrun.startdate}}"\n\n\nparallel task documentation# switch\nthis flow processes some tasks conditionnaly depending on a contextual value.\nin this case, an input value will trigger only some parts of the flow.\n\nid: switch\nnamespace: org.kestra.tests\n\ninputs:\n  - name: string\n    type: string\n    required: true\n\ntasks:\n  - id: switch\n    type: org.kestra.core.tasks.flows.switch\n    value: "{{inputs.string}}"\n    cases:\n      first:\n        - id: 1st\n          type: org.kestra.core.tasks.debugs.return\n          format: "{{task.id}} > {{taskrun.startdate}}"\n      second:\n        - id: 2nd\n          type: org.kestra.core.tasks.debugs.return\n          format: "{{task.id}} > {{taskrun.startdate}}"\n      third:\n        - id: 3th\n          type: org.kestra.core.tasks.debugs.return\n          format: "{{task.id}} > {{taskrun.startdate}}"\n    defaults:\n      - id: default\n        type: org.kestra.core.tasks.debugs.return\n        format: "{{task.id}} > {{taskrun.startdate}}"\n\n\nswitch task documentation# eachsequential\nthis flow will generate many tasks at runtime depending on a value field.\nhere this field is static, but it can be generated from a previous task output and\ntrigger an arbitrary number of subtasks. each subtask will run after others sequentially.\n\nid: each\nnamespace: org.kestra.tests\nrevision: 8\ntasks:\n  - id: each\n    type: org.kestra.core.tasks.flows.eachsequential\n    value: \'["value 1", "value 2", "value 3"]\'\n    tasks:\n      - id: 1st\n        type: org.kestra.core.tasks.debugs.return\n        format: "{{task.id}} > {{taskrun.value}} > {{taskrun.startdate}}"\n      - id: 2nd\n        type: org.kestra.core.tasks.debugs.return\n        format: "{{task.id}} > {{taskrun.value}} > {{taskrun.startdate}}"\n  - id: last\n    type: org.kestra.core.tasks.debugs.return\n    format: "{{task.id}} > {{taskrun.startdate}}"\n\n\neachsequential task documentation# eachparallel\nthis flow is the same as eachsequential but each subtask will run after in parallel.\n\nid: each-parallel\nnamespace: org.kestra.tests\n\ntasks:\n  - id: 1_each\n    type: org.kestra.core.tasks.flows.eachparallel\n    value: \'["value 1", "value 2", "value 3"]\'\n    tasks:\n      - id: 1-1\n        type: org.kestra.core.tasks.scripts.bash\n        commands:\n          - \'echo "{{task.id}} > $(date +"%t.%n")"\'\n          - \'sleep 1\'\n      - id: 1-2\n        type: org.kestra.core.tasks.scripts.bash\n        commands:\n          - \'echo "{{task.id}} > $(date +"%t.%n")"\'\n          - \'sleep 1\'\n  - id: 2_end\n    type: org.kestra.core.tasks.debugs.return\n    format: "{{task.id}} > {{taskrun.startdate}}"\n\n\neachparallel task documentation# flow\nthis flow will trigger another one.\nthis allows to decouple the first one from the second one and to monitor each flows individually.\n\nyou can pass outputs to the trigger flow as inputs (that you need to declare in the subflow).\n\nid: each\nnamespace: org.kestra.tests\nrevision: 8\ntasks:\n  - id: "subflow"  \n    type: org.kestra.core.tasks.flows.flow\n    namespace: org.kestra.tests\n    flowid: my-sub-flows\n    inputs:\n      file: "{{ outputs.my-task.files.resolver\' }}"\n      store: 12\n\n\nflow task documentation# templates\ntemplates are a special task that will include task from a template at runtime.\nyou defined the template and can use on every flow you want, allowing to share the common tasks between your flows.\n\nid: each\nnamespace: org.kestra.tests\nrevision: 8\ntasks:\n  - id: template\n    type: org.kestra.core.tasks.flows.template\n    namespace: org.kestra.tests\n    templateid: template\n\n\ntemplate task documentation',charsets:{}},{title:"Helpers",frontmatter:{order:10,meta:[{property:"article:modified_time",content:"2020-11-03T13:38:34.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Helpers"},{property:"og:description",content:"Helpers | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/docs/developer-guide/helpers/"},{name:"twitter:title",content:"Helpers"},{name:"twitter:description",content:"Helpers | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/docs/developer-guide/helpers/"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Helpers | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/docs/developer-guide/helpers/",relativePath:"docs/developer-guide/helpers/README.md",key:"v-7db39c08",path:"/docs/developer-guide/helpers/",headers:[{level:2,title:"Expand the flow to be uploaded to the server",slug:"expand-the-flow-to-be-uploaded-to-the-server",normalizedTitle:"expand the flow to be uploaded to the server",charIndex:268},{level:2,title:"[[> file.txt]]: Include another file",slug:"file-txt-include-another-file",normalizedTitle:"[[&gt; file.txt]]: include another file",charIndex:null}],lastUpdated:"11/3/2020, 1:38:34 PM",headersStr:"Expand the flow to be uploaded to the server [[> file.txt]]: Include another file",content:'# Helpers\nKestra have some helpers function that can help during flow development.\n\nWARNING\n\nThese helpers are only available during flow development in order to test on your local installation.\nYou must expand the flow definition before sending it to your server.\n\n# Expand the flow to be uploaded to the server\nThere is a convient task on Kestra executable that allow validation of the current flow and\nwill output the expanded version of your flow without any helper :\n\n./kestra flow validate path-to-your-flow.yaml \n\n\n# [[> file.txt]]: Include another file\nWhen doing a large flow, the flow can be messy when a lot of tasks are defined and\nspecially when you have some big text inside the flow (example, sql statement, ...).\n\nLet\'s take an example :\n\nid: include\nnamespace: org.kestra.tests\n\ntasks:\n- id: t1\n  type: org.kestra.core.tasks.debugs.Return\n  format: |\n    Lorem Ipsum is simply dummy text of the printing \n    .....\n    500 lines later\n\n\nYou can replace the flow with this one :\n\nid: include\nnamespace: org.kestra.tests\n\ntasks:\n- id: t1\n  type: org.kestra.core.tasks.debugs.Return\n  format: "[[> lorem.txt]]"\n\n\nand have a local file lorem.txt with the large content.\n\nThe path can be :\n\n * [[> lorem.txt]]: a relative path from the flow (flow.yaml & lorem.txt are on the same directory)\n * [[> /path/to/lorem.txt]]: an absolute path\n * [[> path/to/lorem.txt]]: a relative path from the flow (flow.yaml with a subdirectory path/to/)',normalizedContent:'# helpers\nkestra have some helpers function that can help during flow development.\n\nwarning\n\nthese helpers are only available during flow development in order to test on your local installation.\nyou must expand the flow definition before sending it to your server.\n\n# expand the flow to be uploaded to the server\nthere is a convient task on kestra executable that allow validation of the current flow and\nwill output the expanded version of your flow without any helper :\n\n./kestra flow validate path-to-your-flow.yaml \n\n\n# [[> file.txt]]: include another file\nwhen doing a large flow, the flow can be messy when a lot of tasks are defined and\nspecially when you have some big text inside the flow (example, sql statement, ...).\n\nlet\'s take an example :\n\nid: include\nnamespace: org.kestra.tests\n\ntasks:\n- id: t1\n  type: org.kestra.core.tasks.debugs.return\n  format: |\n    lorem ipsum is simply dummy text of the printing \n    .....\n    500 lines later\n\n\nyou can replace the flow with this one :\n\nid: include\nnamespace: org.kestra.tests\n\ntasks:\n- id: t1\n  type: org.kestra.core.tasks.debugs.return\n  format: "[[> lorem.txt]]"\n\n\nand have a local file lorem.txt with the large content.\n\nthe path can be :\n\n * [[> lorem.txt]]: a relative path from the flow (flow.yaml & lorem.txt are on the same directory)\n * [[> /path/to/lorem.txt]]: an absolute path\n * [[> path/to/lorem.txt]]: a relative path from the flow (flow.yaml with a subdirectory path/to/)',charsets:{cjk:!0}},{title:"Inputs",frontmatter:{order:3,meta:[{property:"article:modified_time",content:"2020-11-03T13:38:34.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Inputs"},{property:"og:description",content:"Inputs | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/docs/developer-guide/inputs/"},{name:"twitter:title",content:"Inputs"},{name:"twitter:description",content:"Inputs | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/docs/developer-guide/inputs/"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Inputs | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/docs/developer-guide/inputs/",relativePath:"docs/developer-guide/inputs/README.md",key:"v-019a6270",path:"/docs/developer-guide/inputs/",headers:[{level:2,title:"Declaring inputs",slug:"declaring-inputs",normalizedTitle:"declaring inputs",charIndex:319},{level:2,title:"Input types",slug:"input-types",normalizedTitle:"input types",charIndex:1224},{level:3,title:"STRING",slug:"string",normalizedTitle:"string",charIndex:874},{level:3,title:"INT",slug:"int",normalizedTitle:"int",charIndex:980},{level:3,title:"FLOAT",slug:"float",normalizedTitle:"float",charIndex:1029},{level:3,title:"DATETIME",slug:"datetime",normalizedTitle:"datetime",charIndex:1082},{level:3,title:"FILE",slug:"file",normalizedTitle:"file",charIndex:1138},{level:2,title:"Using input value in flow",slug:"using-input-value-in-flow",normalizedTitle:"using input value in flow",charIndex:1901},{level:2,title:"Send inputs programmatically",slug:"send-inputs-programmatically",normalizedTitle:"send inputs programmatically",charIndex:2222},{level:2,title:"Send inputs via WebUI",slug:"send-inputs-via-webui",normalizedTitle:"send inputs via webui",charIndex:2814}],lastUpdated:"11/3/2020, 1:38:34 PM",headersStr:"Declaring inputs Input types STRING INT FLOAT DATETIME FILE Using input value in flow Send inputs programmatically Send inputs via WebUI",content:'# Inputs\nKestra\'s flow can be parametrized using inputs. Inputs will be available in variable\ncontext and can be used during the whole flow, in order to customize it depending on\ninputs.\n\nA good example is you need to have an identifier (ex: storeId, paymentId) in order to\nchange save path for the uplodated files.\n\n# Declaring inputs\nYou can declare as many inputs for any flow. Input can be required or not.\nIf the input are required, the flow couldn\'t start if the input are not provide during the\ncreation of the execution.\nAlso, every inputs will be parsed during the creation of the execution and any invalid\ninputs will refuse to create the execution.\n\nWARNING\n\nIf the execution is not created due to invalid or missing inputs, no execution will be\nfound on the executions list.\n\nExamples:\n\nid: my-flow\nnamespace: org.kestra.docs\n\ninputs:\n  - name: string\n    type: STRING\n    required: true\n  - name: optional\n    type: STRING\n    required: false\n  - name: int\n    type: INT\n    required: true\n  - name: float\n    type: FLOAT\n    required: true\n  - name: instant\n    type: DATETIME\n    required: true\n  - name: my-file\n    type: FILE\n    required: true\n  - name: optionalFile\n    type: FILE\n    required: false\n\n\n# Input types\nHere are the following input fields available :\n\n# STRING\nNo control is done on this input type (no parsing), can be any string.\n\n# INT\nMust be a valid integer (without any decimals).\n\n# FLOAT\nMust be a valid float (with any decimals).\n\n# DATETIME\nMust be a valid valid full ISO 8601 datetime with timezone in UTC from a text string such as\n2007-12-03T10:15:30.00Z.\n\n# FILE\nMust be a files send with multipart/form-data. All the file are automatically uploaded\nto Storage and is available for further task. The return will be a full qualified url\nwith the form kestra:///.../.../, Kestra are able to handle this url and this inputs can\nbe passed as is to tasks.\n\n# Using input value in flow\nEvery input is available with dynamic variable like : {{ inputs.NAME }}.\n\nFor example, considering that you declare your input :\n\ninputs:\n  - name: my-file\n    type: FILE\n  - name: my-value\n    type: STRING\n    required: true\n\n\nYou can use the value of the inputs with {{ inputs.my-value }}.\n\n# Send inputs programmatically\nThe flow my-flow above can be triggered programmaticaly, here is an example with curl:\n\ncurl -v "http://kestra:8080/api/v1/executions/trigger/org.kestra.docs/my-flow" \\\n    -H "Transfer-Encoding:chunked" \\\n    -H "Content-Type:multipart/form-data" \\\n    -F string="a string"  \\\n    -F optional="an optionnal string"  \\\n    -F int=1  \\\n    -F float=1.255  \\\n    -F instant=2020-01-14T23:00:00.000Z \\\n    -F "files=@/tmp/128M.txt;filename=my-file"\n\n\nAll files must be send in a form data files with an header filename=my-file that\nwill be the name of the input.\n\n# Send inputs via WebUI\nWith such flow, the web ui let you input some inputs by generating a form accordingly\non the flow > trigger view. The input form for the task above looks like below :\n\n\n\nOnce inputs filled, you can trigger a flow execution that will run with\ncontextual inputs as task variables.',normalizedContent:'# inputs\nkestra\'s flow can be parametrized using inputs. inputs will be available in variable\ncontext and can be used during the whole flow, in order to customize it depending on\ninputs.\n\na good example is you need to have an identifier (ex: storeid, paymentid) in order to\nchange save path for the uplodated files.\n\n# declaring inputs\nyou can declare as many inputs for any flow. input can be required or not.\nif the input are required, the flow couldn\'t start if the input are not provide during the\ncreation of the execution.\nalso, every inputs will be parsed during the creation of the execution and any invalid\ninputs will refuse to create the execution.\n\nwarning\n\nif the execution is not created due to invalid or missing inputs, no execution will be\nfound on the executions list.\n\nexamples:\n\nid: my-flow\nnamespace: org.kestra.docs\n\ninputs:\n  - name: string\n    type: string\n    required: true\n  - name: optional\n    type: string\n    required: false\n  - name: int\n    type: int\n    required: true\n  - name: float\n    type: float\n    required: true\n  - name: instant\n    type: datetime\n    required: true\n  - name: my-file\n    type: file\n    required: true\n  - name: optionalfile\n    type: file\n    required: false\n\n\n# input types\nhere are the following input fields available :\n\n# string\nno control is done on this input type (no parsing), can be any string.\n\n# int\nmust be a valid integer (without any decimals).\n\n# float\nmust be a valid float (with any decimals).\n\n# datetime\nmust be a valid valid full iso 8601 datetime with timezone in utc from a text string such as\n2007-12-03t10:15:30.00z.\n\n# file\nmust be a files send with multipart/form-data. all the file are automatically uploaded\nto storage and is available for further task. the return will be a full qualified url\nwith the form kestra:///.../.../, kestra are able to handle this url and this inputs can\nbe passed as is to tasks.\n\n# using input value in flow\nevery input is available with dynamic variable like : {{ inputs.name }}.\n\nfor example, considering that you declare your input :\n\ninputs:\n  - name: my-file\n    type: file\n  - name: my-value\n    type: string\n    required: true\n\n\nyou can use the value of the inputs with {{ inputs.my-value }}.\n\n# send inputs programmatically\nthe flow my-flow above can be triggered programmaticaly, here is an example with curl:\n\ncurl -v "http://kestra:8080/api/v1/executions/trigger/org.kestra.docs/my-flow" \\\n    -h "transfer-encoding:chunked" \\\n    -h "content-type:multipart/form-data" \\\n    -f string="a string"  \\\n    -f optional="an optionnal string"  \\\n    -f int=1  \\\n    -f float=1.255  \\\n    -f instant=2020-01-14t23:00:00.000z \\\n    -f "files=@/tmp/128m.txt;filename=my-file"\n\n\nall files must be send in a form data files with an header filename=my-file that\nwill be the name of the input.\n\n# send inputs via webui\nwith such flow, the web ui let you input some inputs by generating a form accordingly\non the flow > trigger view. the input form for the task above looks like below :\n\n\n\nonce inputs filled, you can trigger a flow execution that will run with\ncontextual inputs as task variables.',charsets:{}},{title:"Listeners",frontmatter:{order:8,meta:[{property:"article:modified_time",content:"2020-11-03T13:38:34.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Listeners"},{property:"og:description",content:"Listeners | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/docs/developer-guide/listeners/"},{name:"twitter:title",content:"Listeners"},{name:"twitter:description",content:"Listeners | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/docs/developer-guide/listeners/"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Listeners | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/docs/developer-guide/listeners/",relativePath:"docs/developer-guide/listeners/README.md",key:"v-a824f470",path:"/docs/developer-guide/listeners/",lastUpdated:"11/3/2020, 1:38:34 PM",headersStr:null,content:"# Listeners\nListeners are special task that can listen to the current flow and launch task outside of the flow.\nThe result of the tasks will not change the execution status. Mostly Listeners are here to send notification or handle special end task behaviour that you don't want to be considered as main workflow.\n\nWARNING\n\nTODO",normalizedContent:"# listeners\nlisteners are special task that can listen to the current flow and launch task outside of the flow.\nthe result of the tasks will not change the execution status. mostly listeners are here to send notification or handle special end task behaviour that you don't want to be considered as main workflow.\n\nwarning\n\ntodo",charsets:{}},{title:"Outputs",frontmatter:{order:4,meta:[{property:"article:modified_time",content:"2020-11-03T13:38:34.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Outputs"},{property:"og:description",content:"Outputs | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/docs/developer-guide/outputs/"},{name:"twitter:title",content:"Outputs"},{name:"twitter:description",content:"Outputs | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/docs/developer-guide/outputs/"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Outputs | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/docs/developer-guide/outputs/",relativePath:"docs/developer-guide/outputs/README.md",key:"v-92b626b0",path:"/docs/developer-guide/outputs/",headers:[{level:2,title:"Using outputs",slug:"using-outputs",normalizedTitle:"using outputs",charIndex:356},{level:2,title:"Specific outputs for dynamic tasks",slug:"specific-outputs-for-dynamic-tasks",normalizedTitle:"specific outputs for dynamic tasks",charIndex:1627}],lastUpdated:"11/3/2020, 1:38:34 PM",headersStr:"Using outputs Specific outputs for dynamic tasks",content:'# Outputs\nKestra\'s flow can produce outputs when processing tasks. Output data are stored in flow execution context and can be handled and used by tasks next to the output producer one.\n\nYou can use outputs every where variables are allowed, so it can be used as next task values for iteration or conditional processing or even as extra output content.\n\n# Using outputs\nYou can declare as many outputs for any flow. Outputs context variables are stored following each task declaration.\n\nHere how to use output between tasks into a flow:\n\ntasks:\n- id: produce-output\n  type: org.kestra.core.tasks.debugs.Return\n  format: my output {{ execution.id }}\n- id: use-output\n  type: org.kestra.core.tasks.debugs.Echo\n  format: This task display previous task output {{ outputs.produce-output.value }}\n\n\nIn the example above the first task produces an output with the format yaml property. the ouput content is then used in the second task output formating. Indeed, the use-output task uses the templating system {{ outputs.produce-output.value }} to reference the previous task output.\n\nUsing this template context variable interpolates the bracket reference with the entire output generated by the first task.\n\nnote\n\nThe .value in the template bracket that reach another task\'s output content is a value that depends on what data is produced per value. In our case, for the Return task, the value content is filled with the output. It could be bq_table for another task implemented for big query management. Have a look at each task documentation for specific information about what context variable are filled with ouput contents.\n\n# Specific outputs for dynamic tasks\nAnother more specific case for output management is the runtime generated tasks output variables. It is the case for the EachSequential or EachParallel task that produces dynamically other tasks depending on it\'s value property. In this case it is possible to reach each iteration output individually using the following syntax :\n\nid: output-sample\nnamespace: org.kestra.tests\n\ntasks:\n  - id: 1-output\n    type: org.kestra.core.tasks.flows.EachSequential\n    value: \'["s1", "s2", "s3"]\'\n    tasks:\n        - id: 1_1-produce_output\n        type: org.kestra.core.tasks.debugs.Return\n        format: "{{task.id}} > {{taskrun.value}} > {{taskrun.startDate}}"\n  - id: 2_use_output\n    type: org.kestra.core.tasks.debugs.Return\n    format: "Previous task produced output : {{outputs.1_1-produce_output.s1.a.value}}"\n\n\nHere the outputs.1_1-produce_output.s1.a.value reach the first 1-output task element.',normalizedContent:'# outputs\nkestra\'s flow can produce outputs when processing tasks. output data are stored in flow execution context and can be handled and used by tasks next to the output producer one.\n\nyou can use outputs every where variables are allowed, so it can be used as next task values for iteration or conditional processing or even as extra output content.\n\n# using outputs\nyou can declare as many outputs for any flow. outputs context variables are stored following each task declaration.\n\nhere how to use output between tasks into a flow:\n\ntasks:\n- id: produce-output\n  type: org.kestra.core.tasks.debugs.return\n  format: my output {{ execution.id }}\n- id: use-output\n  type: org.kestra.core.tasks.debugs.echo\n  format: this task display previous task output {{ outputs.produce-output.value }}\n\n\nin the example above the first task produces an output with the format yaml property. the ouput content is then used in the second task output formating. indeed, the use-output task uses the templating system {{ outputs.produce-output.value }} to reference the previous task output.\n\nusing this template context variable interpolates the bracket reference with the entire output generated by the first task.\n\nnote\n\nthe .value in the template bracket that reach another task\'s output content is a value that depends on what data is produced per value. in our case, for the return task, the value content is filled with the output. it could be bq_table for another task implemented for big query management. have a look at each task documentation for specific information about what context variable are filled with ouput contents.\n\n# specific outputs for dynamic tasks\nanother more specific case for output management is the runtime generated tasks output variables. it is the case for the eachsequential or eachparallel task that produces dynamically other tasks depending on it\'s value property. in this case it is possible to reach each iteration output individually using the following syntax :\n\nid: output-sample\nnamespace: org.kestra.tests\n\ntasks:\n  - id: 1-output\n    type: org.kestra.core.tasks.flows.eachsequential\n    value: \'["s1", "s2", "s3"]\'\n    tasks:\n        - id: 1_1-produce_output\n        type: org.kestra.core.tasks.debugs.return\n        format: "{{task.id}} > {{taskrun.value}} > {{taskrun.startdate}}"\n  - id: 2_use_output\n    type: org.kestra.core.tasks.debugs.return\n    format: "previous task produced output : {{outputs.1_1-produce_output.s1.a.value}}"\n\n\nhere the outputs.1_1-produce_output.s1.a.value reach the first 1-output task element.',charsets:{}},{title:"Plugins",frontmatter:{order:12,meta:[{property:"article:modified_time",content:"2020-11-03T13:38:34.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Plugins"},{property:"og:description",content:"Plugins | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/docs/developer-guide/plugins/"},{name:"twitter:title",content:"Plugins"},{name:"twitter:description",content:"Plugins | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/docs/developer-guide/plugins/"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Plugins | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/docs/developer-guide/plugins/",relativePath:"docs/developer-guide/plugins/README.md",key:"v-08c54868",path:"/docs/developer-guide/plugins/",headers:[{level:2,title:"Backend plugins",slug:"backend-plugins",normalizedTitle:"backend plugins",charIndex:295},{level:2,title:"Frontend plugins",slug:"frontend-plugins",normalizedTitle:"frontend plugins",charIndex:489}],lastUpdated:"11/3/2020, 1:38:34 PM",headersStr:"Backend plugins Frontend plugins",content:"# Plugins\nKestra is extensible at core. It allows you to add extra features by providing some developer tools and conviniences to contribute to Kestra's ecosystem.\n\nHave a look at the technical architecture section to understand how is made Kestra and how you should start to create plugins.\n\n# Backend plugins\nThe Kestra's core backend is micronaut / java powered. In order to start developping a plugin for Kestra you have to setup a working development environment on your computer.\n\n# Frontend plugins\nKestra frontend is a vue js webapp. A plugin manager is planned later.",normalizedContent:"# plugins\nkestra is extensible at core. it allows you to add extra features by providing some developer tools and conviniences to contribute to kestra's ecosystem.\n\nhave a look at the technical architecture section to understand how is made kestra and how you should start to create plugins.\n\n# backend plugins\nthe kestra's core backend is micronaut / java powered. in order to start developping a plugin for kestra you have to setup a working development environment on your computer.\n\n# frontend plugins\nkestra frontend is a vue js webapp. a plugin manager is planned later.",charsets:{}},{title:"Retries",frontmatter:{order:6,meta:[{property:"article:modified_time",content:"2020-11-03T13:38:34.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Retries"},{property:"og:description",content:"Retries | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/docs/developer-guide/retries/"},{name:"twitter:title",content:"Retries"},{name:"twitter:description",content:"Retries | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/docs/developer-guide/retries/"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Retries | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/docs/developer-guide/retries/",relativePath:"docs/developer-guide/retries/README.md",key:"v-7e6b41b0",path:"/docs/developer-guide/retries/",headers:[{level:2,title:"Example",slug:"example",normalizedTitle:"example",charIndex:183},{level:2,title:"Retry options for all type",slug:"retry-options-for-all-type",normalizedTitle:"retry options for all type",charIndex:471},{level:3,title:"Duration",slug:"duration",normalizedTitle:"duration",charIndex:831},{level:3,title:"Retry types",slug:"retry-types",normalizedTitle:"retry types",charIndex:1290}],lastUpdated:"11/3/2020, 1:38:34 PM",headersStr:"Example Retry options for all type Duration Retry types",content:"# Retries\nKestra provide some task retry feature. This sub system makes it convinient to add failed executions retry behavior depending on retry configuration in flow description.\n\n# Example\nBelow a flow sample that retry execute a task on failure maximum 5 times each 15 minutes :\n\n- id: retry-sample\n  type: org.kestra.core.tasks.debugs.Echo\n  format: my output for task {{task.id}}\n  timeout: 1000\n  retry:\n    maxAttempt: 5\n    type: constant\n    interval: PT15M\n\n\n# Retry options for all type\nname          type       description                                                                         \ntype          string     Retry behavior to apply. Can be one of constant, exponential, random.               \nmaxAttempt    integer    Number of retries performed before the system stops retry.                          \nmaxDuration   Duration   Maxium delay the execution is retried. Once passed, the task is no more processed   \n\n# Duration\nSome of the option above have to be filled with duration notation.\nDurations are expressed in ISO 8601 Durations\nand here is some examples :\n\nname       description                \nPT0.250S   250 milliseconds delay     \nPT2S       2 seconds delay            \nPT1M       1 minute delay             \nPT3.5H     3 hours and a half delay   \n\n# Retry types\n# constant\nConstant retry times, when time is set to 10 minutes it retries each 10 minutes\n\nname       type       description                    \ninterval   Duration   Duration between each retry.   \n\n# exponential\nRetry behavior that waits longer between each retry e.g. 1s, 5s, 15s ...\n\nname          type       description                                                                                                                                            \ninterval      Duration   Duration between each retry.                                                                                                                           \ndelayFactor   Double     Multiplier for interval on each retry, default is 2. For example, with and interval=30s and delayFactor=2, retry will append at 30s, 1m30, 3m30, ...   \n\n# random\nRetry with random delay with min and max limits\n\nname          type       description                            \nminInterval   Duration   Minimal duration between each retry.   \nmaxInterval   Duration   Maximum duration between each retry.",normalizedContent:"# retries\nkestra provide some task retry feature. this sub system makes it convinient to add failed executions retry behavior depending on retry configuration in flow description.\n\n# example\nbelow a flow sample that retry execute a task on failure maximum 5 times each 15 minutes :\n\n- id: retry-sample\n  type: org.kestra.core.tasks.debugs.echo\n  format: my output for task {{task.id}}\n  timeout: 1000\n  retry:\n    maxattempt: 5\n    type: constant\n    interval: pt15m\n\n\n# retry options for all type\nname          type       description                                                                         \ntype          string     retry behavior to apply. can be one of constant, exponential, random.               \nmaxattempt    integer    number of retries performed before the system stops retry.                          \nmaxduration   duration   maxium delay the execution is retried. once passed, the task is no more processed   \n\n# duration\nsome of the option above have to be filled with duration notation.\ndurations are expressed in iso 8601 durations\nand here is some examples :\n\nname       description                \npt0.250s   250 milliseconds delay     \npt2s       2 seconds delay            \npt1m       1 minute delay             \npt3.5h     3 hours and a half delay   \n\n# retry types\n# constant\nconstant retry times, when time is set to 10 minutes it retries each 10 minutes\n\nname       type       description                    \ninterval   duration   duration between each retry.   \n\n# exponential\nretry behavior that waits longer between each retry e.g. 1s, 5s, 15s ...\n\nname          type       description                                                                                                                                            \ninterval      duration   duration between each retry.                                                                                                                           \ndelayfactor   double     multiplier for interval on each retry, default is 2. for example, with and interval=30s and delayfactor=2, retry will append at 30s, 1m30, 3m30, ...   \n\n# random\nretry with random delay with min and max limits\n\nname          type       description                            \nmininterval   duration   minimal duration between each retry.   \nmaxinterval   duration   maximum duration between each retry.",charsets:{}},{title:"Templates",frontmatter:{order:9,meta:[{property:"article:modified_time",content:"2020-11-03T13:38:34.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Templates"},{property:"og:description",content:"Templates | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/docs/developer-guide/templates/"},{name:"twitter:title",content:"Templates"},{name:"twitter:description",content:"Templates | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/docs/developer-guide/templates/"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Templates | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/docs/developer-guide/templates/",relativePath:"docs/developer-guide/templates/README.md",key:"v-2b85cc88",path:"/docs/developer-guide/templates/",headers:[{level:2,title:"Example",slug:"example",normalizedTitle:"example",charIndex:396}],lastUpdated:"11/3/2020, 1:38:34 PM",headersStr:"Example",content:'# Templates\nTemplates are list of tasks that can be shared between flows. You can define a template and call it from other flows allowing to share a list of tasks and keep these task updated without changing your flow.\n\nAll tasks in a template will be executed sequentially, you can provide the same tasks than in standard flow and you can also have an errros path.\n\nTemplate Task documentation# Example\nBelow a flow sample that will include a template :\n\nid: with-template\nnamespace: org.kestra.tests\n\ntasks:\n  - id: template\n    type: org.kestra.core.tasks.flows.Template\n    namespace: org.kestra.tests\n    templateId: template\n\n\nIf the template is defined like that :\n\nid: template\nnamespace: org.kestra.tests\n\ntasks:\n  - id: 1-return\n    type: org.kestra.core.tasks.debugs.Return\n    format: "{{task.id}} > {{taskrun.startDate}}"\n\n\nIt will produce a flow same that this one :\n\nid: with-template\nnamespace: org.kestra.tests\n\ntasks:\n  - id: template\n    type: org.kestra.core.tasks.flows.Sequential\n    tasks:\n      - id: 1-return\n        type: org.kestra.core.tasks.debugs.Return\n        format: "{{task.id}} > {{taskrun.startDate}}"\n\n\nAll the tasks within the template will be copied at the runtime',normalizedContent:'# templates\ntemplates are list of tasks that can be shared between flows. you can define a template and call it from other flows allowing to share a list of tasks and keep these task updated without changing your flow.\n\nall tasks in a template will be executed sequentially, you can provide the same tasks than in standard flow and you can also have an errros path.\n\ntemplate task documentation# example\nbelow a flow sample that will include a template :\n\nid: with-template\nnamespace: org.kestra.tests\n\ntasks:\n  - id: template\n    type: org.kestra.core.tasks.flows.template\n    namespace: org.kestra.tests\n    templateid: template\n\n\nif the template is defined like that :\n\nid: template\nnamespace: org.kestra.tests\n\ntasks:\n  - id: 1-return\n    type: org.kestra.core.tasks.debugs.return\n    format: "{{task.id}} > {{taskrun.startdate}}"\n\n\nit will produce a flow same that this one :\n\nid: with-template\nnamespace: org.kestra.tests\n\ntasks:\n  - id: template\n    type: org.kestra.core.tasks.flows.sequential\n    tasks:\n      - id: 1-return\n        type: org.kestra.core.tasks.debugs.return\n        format: "{{task.id}} > {{taskrun.startdate}}"\n\n\nall the tasks within the template will be copied at the runtime',charsets:{}},{title:"Triggers & schedule",frontmatter:{order:5,meta:[{property:"article:modified_time",content:"2020-11-03T13:38:34.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Triggers & schedule"},{property:"og:description",content:"Triggers & schedule | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/docs/developer-guide/triggers/"},{name:"twitter:title",content:"Triggers & schedule"},{name:"twitter:description",content:"Triggers & schedule | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/docs/developer-guide/triggers/"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Triggers & schedule | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/docs/developer-guide/triggers/",relativePath:"docs/developer-guide/triggers/README.md",key:"v-084d894c",path:"/docs/developer-guide/triggers/",lastUpdated:"11/3/2020, 1:38:34 PM",headersStr:null,content:"# Triggers & schedule\nTriggers are way to start a flow with external events. For example, on a schedule date or waiting for some external events (like file creation or another flow end)\n\nHere is the current available triggers :\n\n * Flow trigger\n * Schedule",normalizedContent:"# triggers & schedule\ntriggers are way to start a flow with external events. for example, on a schedule date or waiting for some external events (like file creation or another flow end)\n\nhere is the current available triggers :\n\n * flow trigger\n * schedule",charsets:{}},{title:"Flow trigger",frontmatter:{meta:[{property:"article:modified_time",content:"2020-11-03T13:38:34.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Flow trigger"},{property:"og:description",content:"Flow trigger | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/docs/developer-guide/triggers/flow.html"},{name:"twitter:title",content:"Flow trigger"},{name:"twitter:description",content:"Flow trigger | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/docs/developer-guide/triggers/flow.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Flow trigger | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/docs/developer-guide/triggers/flow.html",relativePath:"docs/developer-guide/triggers/flow.md",key:"v-801f5ac2",path:"/docs/developer-guide/triggers/flow.html",headers:[{level:2,title:"Example",slug:"example",normalizedTitle:"example",charIndex:276},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:1074},{level:3,title:"id",slug:"id",normalizedTitle:"id",charIndex:435},{level:3,title:"inputs",slug:"inputs-2",normalizedTitle:"inputs",charIndex:502},{level:3,title:"conditions",slug:"conditions",normalizedTitle:"conditions",charIndex:814},{level:2,title:"Variables",slug:"variables",normalizedTitle:"variables",charIndex:1753}],lastUpdated:"11/3/2020, 1:38:34 PM",headersStr:"Example Inputs id inputs conditions Variables",content:"# Flow trigger\ntype: \"org.kestra.core.models.triggers.types.Schedule\"\n\n\n> Kestra is able to trigger flow after another one. This allows chaining flow without need to update the base flows.\nWith that, you can break responsibility between different flow to different teams.\n\n\n# Example\n> This flow will be triggered after each successfully execution of flow org.kestra.tests.trigger-flow and forward the uri of my-task taskId outputs.\n\n\nid: trigger-flow-listener\nnamespace: org.kestra.tests\nrevision: 1\n\ninputs:\n  - name: from-parent\n    type: STRING\n\ntasks:\n  - id: only-no-input\n    type: org.kestra.core.tasks.debugs.Return\n    format: \"v1: {{trigger.executionId}}\"\n\ntriggers:\n  - id: listen-flow\n    type: org.kestra.core.models.triggers.types.Flow\n    inputs:\n      from-parent: '{{ outputs.my-task.uri }}'\n    conditions:\n      - type: org.kestra.core.models.conditions.types.FlowCondition\n        namespace: org.kestra.tests\n        flowId: trigger-flow\n      - type: org.kestra.core.models.conditions.types.ExecutionStatusCondition\n        in:\n          - SUCCESS\n\n\n# Inputs\n# id\n * Type: \n * Required: ✔\n\n> unique for a flow\n\n\n# inputs\n * Type: \n * Required: ❌\n * Dynamic: ✔\n\n> fill input of this flow based on output of current flow, allowing to pass data or file on the triggered flow\n\n\nWARNING\n\nIf you provide invalid input, the flow will be created and already state as FAILED! Since there is no task started, you can't log any reason visible on the ui.\nSo you will need to go to server log to understand the error\n\n# conditions\n * Type: \n * Required: ❌\n\n> List of Conditions in order to limit the flow trigger.\n\n\nWARNING\n\nIf you don't provide any conditions, the flow will be triggered for EVERY execution of EVERY flow on your instance.\n\n# Variables\nWhen the flow is trigger by another one, some context variables will be injected to allow some customization of the flow.\n\nParameter                    Description                                               \n{{ trigger.executionId }}    the execution id that trigger the current flow            \n{{ trigger.namespace }}      the namespace of the flow that trigger the current flow   \n{{ trigger.flowId }}         the flow id that trigger the current flow                 \n{{ trigger.flowRevision }}   the flow revision that trigger the current flow",normalizedContent:"# flow trigger\ntype: \"org.kestra.core.models.triggers.types.schedule\"\n\n\n> kestra is able to trigger flow after another one. this allows chaining flow without need to update the base flows.\nwith that, you can break responsibility between different flow to different teams.\n\n\n# example\n> this flow will be triggered after each successfully execution of flow org.kestra.tests.trigger-flow and forward the uri of my-task taskid outputs.\n\n\nid: trigger-flow-listener\nnamespace: org.kestra.tests\nrevision: 1\n\ninputs:\n  - name: from-parent\n    type: string\n\ntasks:\n  - id: only-no-input\n    type: org.kestra.core.tasks.debugs.return\n    format: \"v1: {{trigger.executionid}}\"\n\ntriggers:\n  - id: listen-flow\n    type: org.kestra.core.models.triggers.types.flow\n    inputs:\n      from-parent: '{{ outputs.my-task.uri }}'\n    conditions:\n      - type: org.kestra.core.models.conditions.types.flowcondition\n        namespace: org.kestra.tests\n        flowid: trigger-flow\n      - type: org.kestra.core.models.conditions.types.executionstatuscondition\n        in:\n          - success\n\n\n# inputs\n# id\n * type: \n * required: ✔\n\n> unique for a flow\n\n\n# inputs\n * type: \n * required: ❌\n * dynamic: ✔\n\n> fill input of this flow based on output of current flow, allowing to pass data or file on the triggered flow\n\n\nwarning\n\nif you provide invalid input, the flow will be created and already state as failed! since there is no task started, you can't log any reason visible on the ui.\nso you will need to go to server log to understand the error\n\n# conditions\n * type: \n * required: ❌\n\n> list of conditions in order to limit the flow trigger.\n\n\nwarning\n\nif you don't provide any conditions, the flow will be triggered for every execution of every flow on your instance.\n\n# variables\nwhen the flow is trigger by another one, some context variables will be injected to allow some customization of the flow.\n\nparameter                    description                                               \n{{ trigger.executionid }}    the execution id that trigger the current flow            \n{{ trigger.namespace }}      the namespace of the flow that trigger the current flow   \n{{ trigger.flowid }}         the flow id that trigger the current flow                 \n{{ trigger.flowrevision }}   the flow revision that trigger the current flow",charsets:{}},{title:"Schedule",frontmatter:{meta:[{property:"article:modified_time",content:"2020-11-03T13:38:34.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Schedule"},{property:"og:description",content:"Schedule | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/docs/developer-guide/triggers/schedule.html"},{name:"twitter:title",content:"Schedule"},{name:"twitter:description",content:"Schedule | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/docs/developer-guide/triggers/schedule.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Schedule | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/docs/developer-guide/triggers/schedule.html",relativePath:"docs/developer-guide/triggers/schedule.md",key:"v-4a03194d",path:"/docs/developer-guide/triggers/schedule.html",headers:[{level:2,title:"Example",slug:"example",normalizedTitle:"example",charIndex:275},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:444},{level:3,title:"id",slug:"id",normalizedTitle:"id",charIndex:297},{level:3,title:"cron",slug:"cron",normalizedTitle:"cron",charIndex:371},{level:3,title:"backfill",slug:"backfill",normalizedTitle:"backfill",charIndex:396},{level:3,title:"backfill.start",slug:"backfill-start",normalizedTitle:"backfill.start",charIndex:810},{level:2,title:"Backfill",slug:"backfill-2",normalizedTitle:"backfill",charIndex:771},{level:2,title:"Variables",slug:"variables",normalizedTitle:"variables",charIndex:1127}],lastUpdated:"11/3/2020, 1:38:34 PM",headersStr:"Example Inputs id cron backfill backfill.start Backfill Variables",content:'# Schedule\ntype: "org.kestra.core.models.triggers.types.Schedule"\n\n\n> Kestra is able to trigger flow based on Schedule (aka the time). If you need to wait another system to be ready and can\'t use any event mechanism, you can schedule 1 or more time for the current flow.\n\n\n# Example\ntriggers:\n  - id: schedule\n    type: org.kestra.core.models.triggers.types.Schedule\n    cron: "*/15 * * * *"\n    backfill:\n      start: 2020-06-25T14:00:00Z\n\n\n# Inputs\n# id\n * Type: \n * Required: ✔\n\n> unique for a flow. The scheduler will keep the last execution date for this schedule. This allow you to change the cron expression without restart all the past execution (if backfill exists)\n\n\n# cron\n * Type: \n * Required: ✔\n\n> a cron expression\n\n\n# backfill\n * Type: \n * Required: ❌\n\n> Backfill in order to play the past\n\n\n# backfill.start\n * Type: \n * Required: ✔\n\n> Backfill date\n\n\n# Backfill\nKestra will handle optionnaly a backfill. The concept of backfill is the replay the missing schedule because we create the flow later.\n\nBackfill will do all schedules between define date & current date and will start after the normal schedule.\n\n# Variables\nWhen the flow is schedule, some context variables are injected to allow some customization of the flow\n(like filename, where in sql query).\n\nParameter                 Description                     \n{{ schedule.date }}       the date of current schedule    \n{{ schedule.next }}       the date of next schedule       \n{{ schedule.previous }}   the date of previous schedule   \n\nWARNING\n\nSchedule cannot overlap, this mean that we can\'t have any concurrent schedule. If the previous schedule is not ended when the next one must start, the scheduler will wait the end of the previous one. Same is applied for backfill.',normalizedContent:'# schedule\ntype: "org.kestra.core.models.triggers.types.schedule"\n\n\n> kestra is able to trigger flow based on schedule (aka the time). if you need to wait another system to be ready and can\'t use any event mechanism, you can schedule 1 or more time for the current flow.\n\n\n# example\ntriggers:\n  - id: schedule\n    type: org.kestra.core.models.triggers.types.schedule\n    cron: "*/15 * * * *"\n    backfill:\n      start: 2020-06-25t14:00:00z\n\n\n# inputs\n# id\n * type: \n * required: ✔\n\n> unique for a flow. the scheduler will keep the last execution date for this schedule. this allow you to change the cron expression without restart all the past execution (if backfill exists)\n\n\n# cron\n * type: \n * required: ✔\n\n> a cron expression\n\n\n# backfill\n * type: \n * required: ❌\n\n> backfill in order to play the past\n\n\n# backfill.start\n * type: \n * required: ✔\n\n> backfill date\n\n\n# backfill\nkestra will handle optionnaly a backfill. the concept of backfill is the replay the missing schedule because we create the flow later.\n\nbackfill will do all schedules between define date & current date and will start after the normal schedule.\n\n# variables\nwhen the flow is schedule, some context variables are injected to allow some customization of the flow\n(like filename, where in sql query).\n\nparameter                 description                     \n{{ schedule.date }}       the date of current schedule    \n{{ schedule.next }}       the date of next schedule       \n{{ schedule.previous }}   the date of previous schedule   \n\nwarning\n\nschedule cannot overlap, this mean that we can\'t have any concurrent schedule. if the previous schedule is not ended when the next one must start, the scheduler will wait the end of the previous one. same is applied for backfill.',charsets:{}},{title:"Variables",frontmatter:{order:2,meta:[{property:"article:modified_time",content:"2020-11-03T13:38:34.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Variables"},{property:"og:description",content:"Variables | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/docs/developer-guide/variables/"},{name:"twitter:title",content:"Variables"},{name:"twitter:description",content:"Variables | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/docs/developer-guide/variables/"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Variables | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/docs/developer-guide/variables/",relativePath:"docs/developer-guide/variables/README.md",key:"v-472d66c8",path:"/docs/developer-guide/variables/",headers:[{level:2,title:"Default variable",slug:"default-variable",normalizedTitle:"default variable",charIndex:333},{level:3,title:"Flow & Execution",slug:"flow-execution",normalizedTitle:"flow &amp; execution",charIndex:null},{level:3,title:"Inputs variables",slug:"inputs-variables",normalizedTitle:"inputs variables",charIndex:3764},{level:3,title:"Outputs variables",slug:"outputs-variables",normalizedTitle:"outputs variables",charIndex:4027},{level:3,title:"Dynamic variables",slug:"dynamic-variables",normalizedTitle:"dynamic variables",charIndex:4574},{level:2,title:"Functions",slug:"functions",normalizedTitle:"functions",charIndex:6479}],lastUpdated:"11/3/2020, 1:38:34 PM",headersStr:"Default variable Flow & Execution Inputs variables Outputs variables Dynamic variables Functions",content:'# Variables\nVariables are specific fields for task. They use the power of handlebars with Kestra\'s special context system, allowing powerfull task composition.\n\nVariables can use variable information registrered / existing in the execution context. This context are some data injected in Variables and are from different sources:\n\n# Default variable\n# Flow & Execution\nFlow & Execution variables allow using current context for this execution in order to customize the tasks (example: name file with current date or current execution id, ...)\n\nThe following table lists all the default variables available on each execution.\n\nParameter                        Description                                                                                                                              \n{{ flow.id }}                    The name the current flow Id                                                                                                             \n{{ flow.namespace }}             The name current namespace                                                                                                               \n{{ execution.id }}               Return the execution Id, a unique id for each                                                                                            \n{{ execution.startDate }}        The start date of the current execution, you can format it with {{ instantFormat execution.startDate "yyyy-MM-dd HH:mm:ss.SSSSSS"}}      \n{{ task.id }}                    The current task Id                                                                                                                      \n{{ task.type }}                  The current task Type (full class name)                                                                                                  \n{{ taskrun.id }}                 The current task Id                                                                                                                      \n{{ taskrun.value }}              The value for current taskrun, only available with (Flowable Task)                                                                       \n{{ taskrun.attemptsCount }}      The number of attempts for current task (when retry or restart is done)                                                                  \n{{ parents.[].taskrun.value }}   The value of parents taskrun, the index if based on closest Flowable Task, only available with tasks previsouly in a (Flowable Task)     \n{{ parents.[].outputs }}         The outputs of parents taskrun, the index if based on closest Flowable Task, only available with tasks previsouly in a (Flowable Task)   \n\nIf the flow is triggered by a schedule, this vars are also available :\n\nParameter                 Description                     \n{{ schedule.date }}       the date of current schedule    \n{{ schedule.next }}       the date of next schedule       \n{{ schedule.previous }}   the date of previous schedule   \n\nIf the flow is triggered by a flow, this vars are also available :\n\nParameter                    Description                                               \n{{ trigger.executionId }}    the execution id that trigger the current flow            \n{{ trigger.namespace }}      the namespace of the flow that trigger the current flow   \n{{ trigger.flowId }}         the flow id that trigger the current flow                 \n{{ trigger.flowRevision }}   the flow revision that trigger the current flow           \n\nHere some example usage :\n\nid: context-example\nnamespace: org.kestra.tests\n\ntasks:\n  - id: echo\n    type: org.kestra.core.tasks.debugs.Return\n    format: |\n      taskid: {{task.id}}\n      date: {{ instantFormat execution.startDate "yyyy-MM-dd HH:mm:ss.SSSSSS" }}\n\n\n# Inputs variables\nYou can use any inputs using his name, example:\n\nid: context-inputs\nnamespace: org.kestra.tests\n\ninputs:\n  - name: myinput\n    type: STRING\n\ntasks:\n  - id: mytask\n    type: org.kestra.core.tasks.debugs.Return\n    format: "{{inputs.myinput}}"\n\n\n# Outputs variables\nOutputs variables can also be referencing their names with the form\noutputs.NAME.PROPERTY :\n\n * NAME is the taskId you want to locate\n * PROPERTY is the property you want to use, each task type can emit different properties, so look at the\n   documentation of one.\n\nid: context-outpouts\nnamespace: org.kestra.tests\n\ntasks:\n    - id: task-id\n      type: io.kestra.task.templates.Example\n      format: "{{task.id}}"\n    - id: flow-id\n      type: io.kestra.task.templates.Example\n      format: "{{outputs.task-id.child.value}}"\n\n\n# Dynamic variables\nSome tasks are dynamic like EachSequential,\nEachParallel or\nSwitch and can hold a special taskrun.value.\n\n# Current value\nYou can access the current value with {{ taskrun.value }} like that:\n\ntasks:\n  - id: each\n    type: org.kestra.core.tasks.flows.EachSequential\n    value: \'["value 1", "value 2", "value 3"]\'\n    tasks:\n      - id: inner\n        type: org.kestra.core.tasks.debugs.Return\n        format: "{{task.id}} > {{taskrun.value}} > {{taskrun.startDate}}"\n\n\n# Previous task lookup\nIt\'s also possible to locate a special task by his value:\n\ntasks:\n  - id: each\n    type: org.kestra.core.tasks.flows.EachSequential\n    value: \'["value 1", "value 2", "value 3"]\'\n    tasks:\n      - id: inner\n        type: org.kestra.core.tasks.debugs.Return\n        format: "{{task.id}}"\n  - id: end\n    type: org.kestra.core.tasks.debugs.Return\n    format: "{{task.id}} > {{outputs.inner.[value 1].value}}"\n\n\nwith the format outputs.TASKID.[VALUE].PROPERTY. The special bracket [] in .[VALUE]. enable special chars like space (and can be remove without any special characters)\n\n# Lookup in current childs tasks tree\nSometime, it can be useful to access to previous outputs on current task tree, for example on\nEachSequential,\nyou iterate for a list of value, doing a first tasks (Download a file for example) and\nloading previous files to a database.\n\nFor this, you will need a special function eval :\n\ntasks:\n  - id: each\n    type: org.kestra.core.tasks.flows.EachSequential\n    value: \'["value 1", "value 2", "value 3"]\'\n    tasks:\n      - id: first\n        type: org.kestra.core.tasks.debugs.Return\n        format: "{{task.id}}"\n      - id: second\n        type: org.kestra.core.tasks.debugs.Return\n        format: "{{ eval \'outputs.first.[{{taskrun.value}}].value\' }}"\n  - id: end\n    type: org.kestra.core.tasks.debugs.Return\n    format: "{{task.id}} > {{outputs.inner.[value 1].value}}"\n\n\n# Functions\nSome time, you need to change the format of variables. For this, you can use some functions:\n\n * String functions\n * Boolean functions\n * Number functions\n * Date functions\n * Json functions\n * Iterations functions',normalizedContent:'# variables\nvariables are specific fields for task. they use the power of handlebars with kestra\'s special context system, allowing powerfull task composition.\n\nvariables can use variable information registrered / existing in the execution context. this context are some data injected in variables and are from different sources:\n\n# default variable\n# flow & execution\nflow & execution variables allow using current context for this execution in order to customize the tasks (example: name file with current date or current execution id, ...)\n\nthe following table lists all the default variables available on each execution.\n\nparameter                        description                                                                                                                              \n{{ flow.id }}                    the name the current flow id                                                                                                             \n{{ flow.namespace }}             the name current namespace                                                                                                               \n{{ execution.id }}               return the execution id, a unique id for each                                                                                            \n{{ execution.startdate }}        the start date of the current execution, you can format it with {{ instantformat execution.startdate "yyyy-mm-dd hh:mm:ss.ssssss"}}      \n{{ task.id }}                    the current task id                                                                                                                      \n{{ task.type }}                  the current task type (full class name)                                                                                                  \n{{ taskrun.id }}                 the current task id                                                                                                                      \n{{ taskrun.value }}              the value for current taskrun, only available with (flowable task)                                                                       \n{{ taskrun.attemptscount }}      the number of attempts for current task (when retry or restart is done)                                                                  \n{{ parents.[].taskrun.value }}   the value of parents taskrun, the index if based on closest flowable task, only available with tasks previsouly in a (flowable task)     \n{{ parents.[].outputs }}         the outputs of parents taskrun, the index if based on closest flowable task, only available with tasks previsouly in a (flowable task)   \n\nif the flow is triggered by a schedule, this vars are also available :\n\nparameter                 description                     \n{{ schedule.date }}       the date of current schedule    \n{{ schedule.next }}       the date of next schedule       \n{{ schedule.previous }}   the date of previous schedule   \n\nif the flow is triggered by a flow, this vars are also available :\n\nparameter                    description                                               \n{{ trigger.executionid }}    the execution id that trigger the current flow            \n{{ trigger.namespace }}      the namespace of the flow that trigger the current flow   \n{{ trigger.flowid }}         the flow id that trigger the current flow                 \n{{ trigger.flowrevision }}   the flow revision that trigger the current flow           \n\nhere some example usage :\n\nid: context-example\nnamespace: org.kestra.tests\n\ntasks:\n  - id: echo\n    type: org.kestra.core.tasks.debugs.return\n    format: |\n      taskid: {{task.id}}\n      date: {{ instantformat execution.startdate "yyyy-mm-dd hh:mm:ss.ssssss" }}\n\n\n# inputs variables\nyou can use any inputs using his name, example:\n\nid: context-inputs\nnamespace: org.kestra.tests\n\ninputs:\n  - name: myinput\n    type: string\n\ntasks:\n  - id: mytask\n    type: org.kestra.core.tasks.debugs.return\n    format: "{{inputs.myinput}}"\n\n\n# outputs variables\noutputs variables can also be referencing their names with the form\noutputs.name.property :\n\n * name is the taskid you want to locate\n * property is the property you want to use, each task type can emit different properties, so look at the\n   documentation of one.\n\nid: context-outpouts\nnamespace: org.kestra.tests\n\ntasks:\n    - id: task-id\n      type: io.kestra.task.templates.example\n      format: "{{task.id}}"\n    - id: flow-id\n      type: io.kestra.task.templates.example\n      format: "{{outputs.task-id.child.value}}"\n\n\n# dynamic variables\nsome tasks are dynamic like eachsequential,\neachparallel or\nswitch and can hold a special taskrun.value.\n\n# current value\nyou can access the current value with {{ taskrun.value }} like that:\n\ntasks:\n  - id: each\n    type: org.kestra.core.tasks.flows.eachsequential\n    value: \'["value 1", "value 2", "value 3"]\'\n    tasks:\n      - id: inner\n        type: org.kestra.core.tasks.debugs.return\n        format: "{{task.id}} > {{taskrun.value}} > {{taskrun.startdate}}"\n\n\n# previous task lookup\nit\'s also possible to locate a special task by his value:\n\ntasks:\n  - id: each\n    type: org.kestra.core.tasks.flows.eachsequential\n    value: \'["value 1", "value 2", "value 3"]\'\n    tasks:\n      - id: inner\n        type: org.kestra.core.tasks.debugs.return\n        format: "{{task.id}}"\n  - id: end\n    type: org.kestra.core.tasks.debugs.return\n    format: "{{task.id}} > {{outputs.inner.[value 1].value}}"\n\n\nwith the format outputs.taskid.[value].property. the special bracket [] in .[value]. enable special chars like space (and can be remove without any special characters)\n\n# lookup in current childs tasks tree\nsometime, it can be useful to access to previous outputs on current task tree, for example on\neachsequential,\nyou iterate for a list of value, doing a first tasks (download a file for example) and\nloading previous files to a database.\n\nfor this, you will need a special function eval :\n\ntasks:\n  - id: each\n    type: org.kestra.core.tasks.flows.eachsequential\n    value: \'["value 1", "value 2", "value 3"]\'\n    tasks:\n      - id: first\n        type: org.kestra.core.tasks.debugs.return\n        format: "{{task.id}}"\n      - id: second\n        type: org.kestra.core.tasks.debugs.return\n        format: "{{ eval \'outputs.first.[{{taskrun.value}}].value\' }}"\n  - id: end\n    type: org.kestra.core.tasks.debugs.return\n    format: "{{task.id}} > {{outputs.inner.[value 1].value}}"\n\n\n# functions\nsome time, you need to change the format of variables. for this, you can use some functions:\n\n * string functions\n * boolean functions\n * number functions\n * date functions\n * json functions\n * iterations functions',charsets:{cjk:!0}},{title:"Boolean functions",frontmatter:{meta:[{property:"article:modified_time",content:"2020-11-03T13:38:34.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Boolean functions"},{property:"og:description",content:"Boolean functions | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/docs/developer-guide/variables/boolean.html"},{name:"twitter:title",content:"Boolean functions"},{name:"twitter:description",content:"Boolean functions | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/docs/developer-guide/variables/boolean.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Boolean functions | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/docs/developer-guide/variables/boolean.html",relativePath:"docs/developer-guide/variables/boolean.md",key:"v-64927783",path:"/docs/developer-guide/variables/boolean.html",headers:[{level:3,title:"eq: Equality",slug:"eq-equality",normalizedTitle:"eq: equality",charIndex:23},{level:3,title:"neq: Not equality",slug:"neq-not-equality",normalizedTitle:"neq: not equality",charIndex:39},{level:3,title:"gt: Greater operator",slug:"gt-greater-operator",normalizedTitle:"gt: greater operator",charIndex:60},{level:3,title:"gte: Greater or equal operator",slug:"gte-greater-or-equal-operator",normalizedTitle:"gte: greater or equal operator",charIndex:84},{level:3,title:"lt: Less operator",slug:"lt-less-operator",normalizedTitle:"lt: less operator",charIndex:118},{level:3,title:"lte: Less or equal operator",slug:"lte-less-or-equal-operator",normalizedTitle:"lte: less or equal operator",charIndex:139},{level:3,title:"and: And operator",slug:"and-and-operator",normalizedTitle:"and: and operator",charIndex:170},{level:3,title:"or: Or operator",slug:"or-or-operator",normalizedTitle:"or: or operator",charIndex:191},{level:3,title:"not: Not operator",slug:"not-not-operator",normalizedTitle:"not: not operator",charIndex:210},{level:3,title:"cmp: Compare operator",slug:"cmp-compare-operator",normalizedTitle:"cmp: compare operator",charIndex:231}],lastUpdated:"11/3/2020, 1:38:34 PM",headersStr:"eq: Equality neq: Not equality gt: Greater operator gte: Greater or equal operator lt: Less operator lte: Less or equal operator and: And operator or: Or operator not: Not operator cmp: Compare operator",content:"# Boolean functions\n * eq: Equality\n * neq: Not equality\n * gt: Greater operator\n * gte: Greater or equal operator\n * lt: Less operator\n * lte: Less or equal operator\n * and: And operator\n * or: Or operator\n * not: Not operator\n * cmp: Compare operator\n\n\n\n# eq: Equality\nTest if two elements are equals.\n\n> Render yes or no:\n\n\n  {{#eq a b}}\n    yes\n  {{else}}\n    no\n  {{/eq}}\n\n\n> Render true or false:\n\n\n  {{eq a b}}\n\n\n> Render yes or no:\n\n\n  {{eq a b yes='yes' no='no'}}\n\n\n# neq: Not equality\nTest if two elements are NOT equals.\n\n> Render yes or no:\n\n\n  {{#neq a b}}\n    yes\n  {{else}}\n    no\n  {{/neq}}\n\n\n> Render true or false:\n\n\n  {{neq a b}}\n\n\n> Render yes or no:\n\n\n  {{neq a b yes='yes' no='no'}}\n\n\n# gt: Greater operator\nGreater operator (arguments must be Comparable elements).\n\n> Render yes or no:\n\n\n  {{#gt a b}}\n    yes\n  {{else}}\n    no\n  {{/gt}}\n\n\n> Render true or false:\n\n\n  {{gt a b}}\n\n\n> Render yes or no:\n\n\n  {{gte a b yes='yes' no='no'}}\n\n\n# gte: Greater or equal operator\nGreater or equal operator (arguments must be Comparable elements).\n\n> Render yes or no:\n\n\n  {{#gte a b}}\n    yes\n  {{else}}\n    no\n  {{/gte}}\n\n\n> Render true or false:\n\n\n  {{gte a b}}\n\n\n> Render yes or no:\n\n\n  {{gte a b yes='yes' no='no'}}\n\n\n# lt: Less operator\nLess than operator (arguments must be Comparable elements).\n\n> Render yes or no:\n\n\n  {{#lt a b}}\n    yes\n  {{else}}\n    no\n  {{/lt}}\n\n\n> Render true or false:\n\n\n  {{lt a b}}\n\n\n> Render yes or no:\n\n\n  {{lt a b yes='yes' no='no'}}\n\n\n# lte: Less or equal operator\nLess than operator (arguments must be Comparable elements.\n\n> Render yes or no:\n\n\n  {{#lte a b}}\n    yes\n  {{else}}\n    no\n  {{/lte}}\n\n\n> Render true or false:\n\n\n  {{lte a b}}\n\n\n> Render yes or no:\n\n\n  {{lte a b yes='yes' no='no'}}\n\n\n# and: And operator\nAnd operator. This is a boolean operation.\n\nTruthiness of arguments is determined by isEmpty, so this\nhelper can be used with non-boolean values.\n\nMultiple arguments are supported too:\n\n  {{#and a b c d}}\n    yes\n  {{else}}\n    no\n  {{/and}}\n\n\n> Render yes or no:\n\n\n  {{#and a b}}\n    yes\n  {{else}}\n    no\n  {{/and}}\n\n\n> Render true or false:\n\n\n  {{and a b}}\n\n\n> Render yes or no:\n\n\n  {{and a b yes='yes' no='no'}}\n\n\n# or: Or operator\nOr operator. This is a boolean operation\n\nTruthiness of arguments is determined by isEmpty, so this\nhelper can be used with non-boolean values.\n\nMultiple arguments are supported too:\n\n  {{#or a b c d}}\n    yes\n  {{else}}\n    no\n  {{/or}}\n\n\n> Render yes or no:\n\n\n  {{#or a b}}\n    yes\n  {{else}}\n    no\n  {{/or}}\n\n\n> Render true or false:\n\n\n  {{or a b}}\n\n\n> Render yes or no:\n\n\n  {{or a b yes='yes' no='no'}}\n\n\n# not: Not operator\nTruthiness of arguments is determined by isEmpty, so this\nhelper can be used with non-boolean values.\n\n> Render yes or no:\n\n\n  {{#not a}}\n    yes\n  {{else}}\n    no\n  {{/not}}\n\n\n> Render true or false:\n\n\n  {{not a}}\n\n\n> Render y or n:\n\n\n  {{not a yes='yes' no='no'}}\n\n\n# cmp: Compare operator\nCompare to object as Comparables.\n\n> Renders 1 if a > b, 0 if a == b -1 if a < b\n\n\n  {{cmp a b}}",normalizedContent:"# boolean functions\n * eq: equality\n * neq: not equality\n * gt: greater operator\n * gte: greater or equal operator\n * lt: less operator\n * lte: less or equal operator\n * and: and operator\n * or: or operator\n * not: not operator\n * cmp: compare operator\n\n\n\n# eq: equality\ntest if two elements are equals.\n\n> render yes or no:\n\n\n  {{#eq a b}}\n    yes\n  {{else}}\n    no\n  {{/eq}}\n\n\n> render true or false:\n\n\n  {{eq a b}}\n\n\n> render yes or no:\n\n\n  {{eq a b yes='yes' no='no'}}\n\n\n# neq: not equality\ntest if two elements are not equals.\n\n> render yes or no:\n\n\n  {{#neq a b}}\n    yes\n  {{else}}\n    no\n  {{/neq}}\n\n\n> render true or false:\n\n\n  {{neq a b}}\n\n\n> render yes or no:\n\n\n  {{neq a b yes='yes' no='no'}}\n\n\n# gt: greater operator\ngreater operator (arguments must be comparable elements).\n\n> render yes or no:\n\n\n  {{#gt a b}}\n    yes\n  {{else}}\n    no\n  {{/gt}}\n\n\n> render true or false:\n\n\n  {{gt a b}}\n\n\n> render yes or no:\n\n\n  {{gte a b yes='yes' no='no'}}\n\n\n# gte: greater or equal operator\ngreater or equal operator (arguments must be comparable elements).\n\n> render yes or no:\n\n\n  {{#gte a b}}\n    yes\n  {{else}}\n    no\n  {{/gte}}\n\n\n> render true or false:\n\n\n  {{gte a b}}\n\n\n> render yes or no:\n\n\n  {{gte a b yes='yes' no='no'}}\n\n\n# lt: less operator\nless than operator (arguments must be comparable elements).\n\n> render yes or no:\n\n\n  {{#lt a b}}\n    yes\n  {{else}}\n    no\n  {{/lt}}\n\n\n> render true or false:\n\n\n  {{lt a b}}\n\n\n> render yes or no:\n\n\n  {{lt a b yes='yes' no='no'}}\n\n\n# lte: less or equal operator\nless than operator (arguments must be comparable elements.\n\n> render yes or no:\n\n\n  {{#lte a b}}\n    yes\n  {{else}}\n    no\n  {{/lte}}\n\n\n> render true or false:\n\n\n  {{lte a b}}\n\n\n> render yes or no:\n\n\n  {{lte a b yes='yes' no='no'}}\n\n\n# and: and operator\nand operator. this is a boolean operation.\n\ntruthiness of arguments is determined by isempty, so this\nhelper can be used with non-boolean values.\n\nmultiple arguments are supported too:\n\n  {{#and a b c d}}\n    yes\n  {{else}}\n    no\n  {{/and}}\n\n\n> render yes or no:\n\n\n  {{#and a b}}\n    yes\n  {{else}}\n    no\n  {{/and}}\n\n\n> render true or false:\n\n\n  {{and a b}}\n\n\n> render yes or no:\n\n\n  {{and a b yes='yes' no='no'}}\n\n\n# or: or operator\nor operator. this is a boolean operation\n\ntruthiness of arguments is determined by isempty, so this\nhelper can be used with non-boolean values.\n\nmultiple arguments are supported too:\n\n  {{#or a b c d}}\n    yes\n  {{else}}\n    no\n  {{/or}}\n\n\n> render yes or no:\n\n\n  {{#or a b}}\n    yes\n  {{else}}\n    no\n  {{/or}}\n\n\n> render true or false:\n\n\n  {{or a b}}\n\n\n> render yes or no:\n\n\n  {{or a b yes='yes' no='no'}}\n\n\n# not: not operator\ntruthiness of arguments is determined by isempty, so this\nhelper can be used with non-boolean values.\n\n> render yes or no:\n\n\n  {{#not a}}\n    yes\n  {{else}}\n    no\n  {{/not}}\n\n\n> render true or false:\n\n\n  {{not a}}\n\n\n> render y or n:\n\n\n  {{not a yes='yes' no='no'}}\n\n\n# cmp: compare operator\ncompare to object as comparables.\n\n> renders 1 if a > b, 0 if a == b -1 if a < b\n\n\n  {{cmp a b}}",charsets:{}},{title:"Date functions",frontmatter:{meta:[{property:"article:modified_time",content:"2020-11-03T13:38:34.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Date functions"},{property:"og:description",content:"Date functions | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/docs/developer-guide/variables/date.html"},{name:"twitter:title",content:"Date functions"},{name:"twitter:description",content:"Date functions | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/docs/developer-guide/variables/date.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Date functions | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/docs/developer-guide/variables/date.html",relativePath:"docs/developer-guide/variables/date.md",key:"v-6ae2b2a3",path:"/docs/developer-guide/variables/date.html",headers:[{level:2,title:"dateFormat: Date format",slug:"dateformat-date-format",normalizedTitle:"dateformat: date format",charIndex:20},{level:2,title:"now: Current date",slug:"now-current-date",normalizedTitle:"now: current date",charIndex:47},{level:2,title:"timestamp: Current second timestamp",slug:"timestamp-current-second-timestamp",normalizedTitle:"timestamp: current second timestamp",charIndex:68},{level:2,title:"namotimestamp: Current nano timestamp",slug:"namotimestamp-current-nano-timestamp",normalizedTitle:"namotimestamp: current nano timestamp",charIndex:107},{level:2,title:"microtimestamp: Current micro timestamp",slug:"microtimestamp-current-micro-timestamp",normalizedTitle:"microtimestamp: current micro timestamp",charIndex:148}],lastUpdated:"11/3/2020, 1:38:34 PM",headersStr:"dateFormat: Date format now: Current date timestamp: Current second timestamp namotimestamp: Current nano timestamp microtimestamp: Current micro timestamp",content:"# Date functions\n * dateFormat: Date format\n * now: Current date\n * timestamp: Current second timestamp\n * namotimestamp: Current nano timestamp\n * microtimestamp: Current micro timestamp\n\n\n\n# dateFormat: Date format\n{{dateFormat date [`format`] [format=`format`][tz=timeZone|timeZoneId]}}\n\n\n# Arguments:\n * format: Format parameters is one of * full: Sunday, September 8, 2013 at 4:19:12 PM Central European Summer Time\n    * long: September 8, 2013 at 4:19:12 PM CEST\n    * medium: Sep 8, 2013, 4:19:12 PM\n    * short: 9/8/13, 4:19 PM\n    * iso: 2013-09-08T16:19:12.000000+02:00\n    * iso_sec: 2013-09-08T16:19:12+02:00\n    * sql: 2013-09-08 16:19:12.000000\n    * sql_seq: 2013-09-08 16:19:12\n    * iso_date_time: 2013-09-08T16:19:12+02:00[Europe/Paris]\n    * iso_date: 2013-09-08+02:00\n    * iso_time: 16:19:12+02:00\n    * iso_local_date: 2013-09-08\n    * iso_instant: 2013-09-08T14:19:12Z\n    * iso_local_date_time: 2013-09-08T16:19:12\n    * iso_local_time: 16:19:12\n    * iso_offset_time: 16:19:12+02:00\n    * iso_ordinal_date: 2013-251+02:00\n    * iso_week_date: 2013-W36-7+02:00\n    * iso_zoned_date_time: 2013-09-08T16:19:12+02:00[Europe/Paris]\n    * rfc_1123_date_time: Sun, 8 Sep 2013 16:19:12 +0200\n    * pattern: a date pattern.\n   \n   \n * Otherwise, the default formatter iso will be used. The format option can be specified as a parameter or hash (a.k.a named parameter).\n * timezeome: with the format Europe/Paris\n\n# now: Current date\n   {{now [`format`] [tz=timeZone|timeZoneId]}}\n\n\n# Arguments:\n * format: Same format as dateFormat\n * timezeome: with the format Europe/Paris\n\n# timestamp: Current second timestamp\n   {{timestamp}}\n\n\n# namotimestamp: Current nano timestamp\n   {{namotimestamp}}\n\n\n# microtimestamp: Current micro timestamp\n   {{microtimestamp}}",normalizedContent:"# date functions\n * dateformat: date format\n * now: current date\n * timestamp: current second timestamp\n * namotimestamp: current nano timestamp\n * microtimestamp: current micro timestamp\n\n\n\n# dateformat: date format\n{{dateformat date [`format`] [format=`format`][tz=timezone|timezoneid]}}\n\n\n# arguments:\n * format: format parameters is one of * full: sunday, september 8, 2013 at 4:19:12 pm central european summer time\n    * long: september 8, 2013 at 4:19:12 pm cest\n    * medium: sep 8, 2013, 4:19:12 pm\n    * short: 9/8/13, 4:19 pm\n    * iso: 2013-09-08t16:19:12.000000+02:00\n    * iso_sec: 2013-09-08t16:19:12+02:00\n    * sql: 2013-09-08 16:19:12.000000\n    * sql_seq: 2013-09-08 16:19:12\n    * iso_date_time: 2013-09-08t16:19:12+02:00[europe/paris]\n    * iso_date: 2013-09-08+02:00\n    * iso_time: 16:19:12+02:00\n    * iso_local_date: 2013-09-08\n    * iso_instant: 2013-09-08t14:19:12z\n    * iso_local_date_time: 2013-09-08t16:19:12\n    * iso_local_time: 16:19:12\n    * iso_offset_time: 16:19:12+02:00\n    * iso_ordinal_date: 2013-251+02:00\n    * iso_week_date: 2013-w36-7+02:00\n    * iso_zoned_date_time: 2013-09-08t16:19:12+02:00[europe/paris]\n    * rfc_1123_date_time: sun, 8 sep 2013 16:19:12 +0200\n    * pattern: a date pattern.\n   \n   \n * otherwise, the default formatter iso will be used. the format option can be specified as a parameter or hash (a.k.a named parameter).\n * timezeome: with the format europe/paris\n\n# now: current date\n   {{now [`format`] [tz=timezone|timezoneid]}}\n\n\n# arguments:\n * format: same format as dateformat\n * timezeome: with the format europe/paris\n\n# timestamp: current second timestamp\n   {{timestamp}}\n\n\n# namotimestamp: current nano timestamp\n   {{namotimestamp}}\n\n\n# microtimestamp: current micro timestamp\n   {{microtimestamp}}",charsets:{cjk:!0}},{title:"Iterations functions",frontmatter:{meta:[{property:"article:modified_time",content:"2020-11-03T13:38:34.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Iterations functions"},{property:"og:description",content:"Iterations functions | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/docs/developer-guide/variables/iterations.html"},{name:"twitter:title",content:"Iterations functions"},{name:"twitter:description",content:"Iterations functions | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/docs/developer-guide/variables/iterations.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Iterations functions | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/docs/developer-guide/variables/iterations.html",relativePath:"docs/developer-guide/variables/iterations.md",key:"v-7aff5bba",path:"/docs/developer-guide/variables/iterations.html",headers:[{level:2,title:"For each",slug:"for-each",normalizedTitle:"for each",charIndex:26}],lastUpdated:"11/3/2020, 1:38:34 PM",headersStr:"For each",content:'# Iterations functions\n * For each\n\n\n\n# For each\nYou can iterate over a list using the built-in each helper. Inside the block, you can use this to reference the element being iterated over. contextualListVariable is an iterable item on which the mydata property is displayed for all entries.\n\nThe @index is a special variable available in the each loop context which value is the current index of the element beeing iterated. There are agic* variables like @index in a each context. The following ones are also available: @key @index @first @last @odd @even\n\nSee handlebars documentation for more about this topic.\n\n{{#each contextualListVariable}}\n    {{this.mydata}} {{@index}}\n{{/each}}\n\n\nwill produce\n\none 0\ntwo 1\nthree 2\ndjango! 3\n\n\nfor the following data sample when\n\ncontextualListVariable = [\n  {"mydata": "one"},\n  {"mydata": "two"},\n  {"mydata": "three"},\n  {"mydata": "django!"},\n]\n\n\nIf the contextual this is not convinient to use data as you wish it is possible to alias it like below:\n\n{{#each iterableVariable as | myItem | }}\n    {{myItem.mydata}}\n{{/each}}',normalizedContent:'# iterations functions\n * for each\n\n\n\n# for each\nyou can iterate over a list using the built-in each helper. inside the block, you can use this to reference the element being iterated over. contextuallistvariable is an iterable item on which the mydata property is displayed for all entries.\n\nthe @index is a special variable available in the each loop context which value is the current index of the element beeing iterated. there are agic* variables like @index in a each context. the following ones are also available: @key @index @first @last @odd @even\n\nsee handlebars documentation for more about this topic.\n\n{{#each contextuallistvariable}}\n    {{this.mydata}} {{@index}}\n{{/each}}\n\n\nwill produce\n\none 0\ntwo 1\nthree 2\ndjango! 3\n\n\nfor the following data sample when\n\ncontextuallistvariable = [\n  {"mydata": "one"},\n  {"mydata": "two"},\n  {"mydata": "three"},\n  {"mydata": "django!"},\n]\n\n\nif the contextual this is not convinient to use data as you wish it is possible to alias it like below:\n\n{{#each iterablevariable as | myitem | }}\n    {{myitem.mydata}}\n{{/each}}',charsets:{cjk:!0}},{title:"JSON functions",frontmatter:{meta:[{property:"article:modified_time",content:"2020-11-03T13:38:34.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"JSON functions"},{property:"og:description",content:"JSON functions | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/docs/developer-guide/variables/json.html"},{name:"twitter:title",content:"JSON functions"},{name:"twitter:description",content:"JSON functions | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/docs/developer-guide/variables/json.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"JSON functions | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/docs/developer-guide/variables/json.html",relativePath:"docs/developer-guide/variables/json.md",key:"v-b253103a",path:"/docs/developer-guide/variables/json.html",headers:[{level:2,title:"json Convert an object to json",slug:"json-convert-an-object-to-json",normalizedTitle:"json convert an object to json",charIndex:20},{level:2,title:"jq Transform vars with JQ",slug:"jq-transform-vars-with-jq",normalizedTitle:"jq transform vars with jq",charIndex:54}],lastUpdated:"11/3/2020, 1:38:34 PM",headersStr:"json Convert an object to json jq Transform vars with JQ",content:'# JSON functions\n * json Convert an object to json\n * jq Transform vars with JQ\n\n\n\n# json Convert an object to json\nConvert an object to is JSON representation\n\n{{json output.task-id}}\n\n\nExample, if the current context is :\n\n{\n  "outputs": {\n    "task1": {\n      "value": 1,\n      "text": "awesome1"\n    },\n    "task2": {\n      "value": 2,\n      "text": "awesome2"\n    }\n  }\n}\n\n\nthe output will be {"value":2,"text":"awesome2"}.\n\n# jq Transform vars with JQ\nApply the JQ expression to a variables.\n\n{{jq vars expr [first=false]}}\n\n\nWARNING\n\nInternally, Jackson JQ is used and support only a large subset of official JQ.\n\nExample, if the current context is :\n\n{\n  "outputs": {\n    "task1": {\n      "value": 1,\n      "text": "awesome1"\n    },\n    "task2": {\n      "value": 2,\n      "text": "awesome2"\n    }\n  }\n}\n\n\n{{jq outputs .task1.value true}}\n\n\nthe output will be 1.',normalizedContent:'# json functions\n * json convert an object to json\n * jq transform vars with jq\n\n\n\n# json convert an object to json\nconvert an object to is json representation\n\n{{json output.task-id}}\n\n\nexample, if the current context is :\n\n{\n  "outputs": {\n    "task1": {\n      "value": 1,\n      "text": "awesome1"\n    },\n    "task2": {\n      "value": 2,\n      "text": "awesome2"\n    }\n  }\n}\n\n\nthe output will be {"value":2,"text":"awesome2"}.\n\n# jq transform vars with jq\napply the jq expression to a variables.\n\n{{jq vars expr [first=false]}}\n\n\nwarning\n\ninternally, jackson jq is used and support only a large subset of official jq.\n\nexample, if the current context is :\n\n{\n  "outputs": {\n    "task1": {\n      "value": 1,\n      "text": "awesome1"\n    },\n    "task2": {\n      "value": 2,\n      "text": "awesome2"\n    }\n  }\n}\n\n\n{{jq outputs .task1.value true}}\n\n\nthe output will be 1.',charsets:{}},{title:"Number functions",frontmatter:{meta:[{property:"article:modified_time",content:"2020-11-03T13:38:34.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Number functions"},{property:"og:description",content:"Number functions | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/docs/developer-guide/variables/number.html"},{name:"twitter:title",content:"Number functions"},{name:"twitter:description",content:"Number functions | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/docs/developer-guide/variables/number.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Number functions | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/docs/developer-guide/variables/number.html",relativePath:"docs/developer-guide/variables/number.md",key:"v-cdabe47a",path:"/docs/developer-guide/variables/number.html",headers:[{level:2,title:"numberFormat: Format a number",slug:"numberformat-format-a-number",normalizedTitle:"numberformat: format a number",charIndex:22}],lastUpdated:"11/3/2020, 1:38:34 PM",headersStr:"numberFormat: Format a number",content:'# Number functions\n * numberFormat: Format a number\n\n\n\n# numberFormat: Format a number\n   {{numberFormat number ["format"] [locale=default]}}\n\n\nArguments:\n\n * format: Format parameters is one of: * "integer": the integer number format\n    * "percent": the percent number format\n    * "currency": the decimal number format\n    * "pattern": a decimal pattern.\n    * Otherwise, the default formatter will be used.\n   \n   \n\nMore options:\n\n * groupingUsed: Set whether or not grouping will be used in this format.\n * maximumFractionDigits: Sets the maximum number of digits allowed in the fraction portion of\n   a number.\n * maximumIntegerDigits: Sets the maximum number of digits allowed in the integer portion of a\n   number\n * minimumFractionDigits: Sets the minimum number of digits allowed in the fraction portion of\n   a number\n * minimumIntegerDigits: Sets the minimum number of digits allowed in the integer portion of a\n   number.\n * parseIntegerOnly: Sets whether or not numbers should be parsed as integers only.\n * roundingMode: Sets the {@link java.math.RoundingMode} used in this NumberFormat.',normalizedContent:'# number functions\n * numberformat: format a number\n\n\n\n# numberformat: format a number\n   {{numberformat number ["format"] [locale=default]}}\n\n\narguments:\n\n * format: format parameters is one of: * "integer": the integer number format\n    * "percent": the percent number format\n    * "currency": the decimal number format\n    * "pattern": a decimal pattern.\n    * otherwise, the default formatter will be used.\n   \n   \n\nmore options:\n\n * groupingused: set whether or not grouping will be used in this format.\n * maximumfractiondigits: sets the maximum number of digits allowed in the fraction portion of\n   a number.\n * maximumintegerdigits: sets the maximum number of digits allowed in the integer portion of a\n   number\n * minimumfractiondigits: sets the minimum number of digits allowed in the fraction portion of\n   a number\n * minimumintegerdigits: sets the minimum number of digits allowed in the integer portion of a\n   number.\n * parseintegeronly: sets whether or not numbers should be parsed as integers only.\n * roundingmode: sets the {@link java.math.roundingmode} used in this numberformat.',charsets:{}},{title:"String functions",frontmatter:{meta:[{property:"article:modified_time",content:"2020-11-03T13:38:34.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"String functions"},{property:"og:description",content:"String functions | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/docs/developer-guide/variables/string.html"},{name:"twitter:title",content:"String functions"},{name:"twitter:description",content:"String functions | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/docs/developer-guide/variables/string.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"String functions | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/docs/developer-guide/variables/string.html",relativePath:"docs/developer-guide/variables/string.md",key:"v-65ccacc3",path:"/docs/developer-guide/variables/string.html",headers:[{level:2,title:"capitalizeFirst: Capitalizes the first character of the value.",slug:"capitalizefirst-capitalizes-the-first-character-of-the-value",normalizedTitle:"capitalizefirst: capitalizes the first character of the value.",charIndex:22},{level:2,title:"center: Centers the value in a field of a given width.",slug:"center-centers-the-value-in-a-field-of-a-given-width",normalizedTitle:"center: centers the value in a field of a given width.",charIndex:88},{level:2,title:"cut: Removes all values of arg from the given string.",slug:"cut-removes-all-values-of-arg-from-the-given-string",normalizedTitle:"cut: removes all values of arg from the given string.",charIndex:146},{level:2,title:"defaultIfEmpty: Default if empty",slug:"defaultifempty-default-if-empty",normalizedTitle:"defaultifempty: default if empty",charIndex:203},{level:2,title:"join: Join string",slug:"join-join-string",normalizedTitle:"join: join string",charIndex:239},{level:2,title:"ljust: Left-aligns the value in a field of a given width.",slug:"ljust-left-aligns-the-value-in-a-field-of-a-given-width",normalizedTitle:"ljust: left-aligns the value in a field of a given width.",charIndex:260},{level:2,title:"rjust: Right-aligns the value in a field of a given width.",slug:"rjust-right-aligns-the-value-in-a-field-of-a-given-width",normalizedTitle:"rjust: right-aligns the value in a field of a given width.",charIndex:321},{level:2,title:"substring Substring",slug:"substring-substring",normalizedTitle:"substring substring",charIndex:383},{level:2,title:"lower: Converts a string into all lowercase.",slug:"lower-converts-a-string-into-all-lowercase",normalizedTitle:"lower: converts a string into all lowercase.",charIndex:406},{level:2,title:"upper Converts a string into all uppercase.",slug:"upper-converts-a-string-into-all-uppercase",normalizedTitle:"upper converts a string into all uppercase.",charIndex:454},{level:2,title:"stringFormat: Formats the variable",slug:"stringformat-formats-the-variable",normalizedTitle:"stringformat: formats the variable",charIndex:501},{level:2,title:"stripTags: Strips all [X]HTML tags.",slug:"striptags-strips-all-x-html-tags",normalizedTitle:"striptags: strips all [x]html tags.",charIndex:539},{level:2,title:"capitalize: Capitalizes all the whitespace separated words in a String.",slug:"capitalize-capitalizes-all-the-whitespace-separated-words-in-a-string",normalizedTitle:"capitalize: capitalizes all the whitespace separated words in a string.",charIndex:578},{level:2,title:"abbreviate: Truncates a string",slug:"abbreviate-truncates-a-string",normalizedTitle:"abbreviate: truncates a string",charIndex:653},{level:2,title:"wordWrap: Wraps words",slug:"wordwrap-wraps-words",normalizedTitle:"wordwrap: wraps words",charIndex:687},{level:2,title:"replace Replaces",slug:"replace-replaces",normalizedTitle:"replace replaces",charIndex:712},{level:2,title:"yesno: Boolean to yes / no",slug:"yesno-boolean-to-yes-no",normalizedTitle:"yesno: boolean to yes / no",charIndex:732}],lastUpdated:"11/3/2020, 1:38:34 PM",headersStr:"capitalizeFirst: Capitalizes the first character of the value. center: Centers the value in a field of a given width. cut: Removes all values of arg from the given string. defaultIfEmpty: Default if empty join: Join string ljust: Left-aligns the value in a field of a given width. rjust: Right-aligns the value in a field of a given width. substring Substring lower: Converts a string into all lowercase. upper Converts a string into all uppercase. stringFormat: Formats the variable stripTags: Strips all [X]HTML tags. capitalize: Capitalizes all the whitespace separated words in a String. abbreviate: Truncates a string wordWrap: Wraps words replace Replaces yesno: Boolean to yes / no",content:'# String functions\n * capitalizeFirst: Capitalizes the first character of the value.\n * center: Centers the value in a field of a given width.\n * cut: Removes all values of arg from the given string.\n * defaultIfEmpty: Default if empty\n * join: Join string\n * ljust: Left-aligns the value in a field of a given width.\n * rjust: Right-aligns the value in a field of a given width.\n * substring Substring\n * lower: Converts a string into all lowercase.\n * upper Converts a string into all uppercase.\n * stringFormat: Formats the variable\n * stripTags: Strips all [X]HTML tags.\n * capitalize: Capitalizes all the whitespace separated words in a String.\n * abbreviate: Truncates a string\n * wordWrap: Wraps words\n * replace Replaces\n * yesno: Boolean to yes / no\n\n\n\n# capitalizeFirst: Capitalizes the first character of the value.\nIf value is "kestra is cool !", the output will be "Kestra is cool !".\n\n{{capitalizeFirst value}}\n\n\n# center: Centers the value in a field of a given width.\nIf value is "Handlebars.java", the output will be " Handlebars.java ".\n\n{{ center value size=19 [pad="char"] }}\n\n\n# Arguments:\n * size\n * pad\n\n# cut: Removes all values of arg from the given string.\nIf value is "String with spaces", the output will be "Stringwithspaces".\n\n{{cut value [" "]}}\n\n\n# defaultIfEmpty: Default if empty\nIf value evaluates to False, uses the given default. Otherwise, uses the\nvalue. If value is "" (the empty string), the output will be nothing.\n\n{{defaultIfEmpty value ["nothing"] }}\n\n\n# join: Join string\nJoins an array, iterator or an iterable with a string.\n\n{{join value join [prefix=""] [suffix=""]}}\n\n\n# Arguments:\n * join\n * prefix\n * suffix\n\n> If value is the list [\'a\', \'b\', \'c\'], the output will be the string "a // b // c".\n\n\n{{join value " // " [prefix=""] [suffix=""]}}\n\n\n> Join the "a", "b", "c", the output will be the string "a // b // c".\n\n\n{{join "a" "b" "c" " // " [prefix=""] [suffix=""]}}\n\n\n# ljust: Left-aligns the value in a field of a given width.\nIf value is Handlebars.java, the output will be "Handlebars.java ".\n\n{{ljust value 20 [pad=" "] }}\n\n\n# Arguments:\n * field size\n\n# rjust: Right-aligns the value in a field of a given width.\nIf value is Handlebars.java, the output will be " Handlebars.java".\n\n{{rjust value 20 [pad=" "] }}\n\n\n# Arguments:\n * field size\n * pad\n\n# substring Substring\nReturns a new CharSequence that is a subsequence of this sequence.\nThe subsequence starts with the char value at the specified index and\nends with the char value at nd - 1*\n\n{{substring value start end }}\n\n\n# Arguments:\n * start offset\n * end offset\n\nFor example:\n\n> If value is Handlebars.java, the output will be "java".\n\n\n{{substring value 11 }}\n\n\n> If value is Handlebars.java, the output will be "Handlebars".\n\n\n{{substring value 0 10 }}\n\n\n# lower: Converts a string into all lowercase.\nIf value is \'Still MAD At Yoko\', the output will be \'still mad at yoko\'.\n\n{{lower value}}\n\n\n# upper Converts a string into all uppercase.\nIf value is \'Hello\', the output will be \'HELLO\'.\n\n{{upper value}}\n\n\n# slugify Converts to lowercase\nremoves non-word characters (alphanumerics and underscores) and converts spaces to hyphens. Also strips leading and trailing whitespace.\nIf value is "Joel is a slug", the output will be "joel-is-a-slug".\n\n{{slugify value}}\n\n\n# stringFormat: Formats the variable\nAccording to the argument, a string formatting specifier.\nIf value is "Hello %s" "handlebars.java", the output will be "Hello handlebars.java".\n\n{{stringFormat string param0 param1 ... paramN}}\n\n\n# Arguments:\n * format\n * paramN\n\n# stripTags: Strips all [X]HTML tags.\n{{stripTags value}}\n\n\n# capitalize: Capitalizes all the whitespace separated words in a String.\nIf value is "my first post", the output will be "My First Post".\n\n{{ capitalize value [fully=false]}}\n\n\nArguments:\n\n * fully\n\n# abbreviate: Truncates a string\nIf it is longer than the specified number of characters.\nTruncated strings will end with a translatable ellipsis sequence ("...").\nIf value is "Handlebars rocks", the output will be "Handlebars...".\n\n{{abbreviate value 13 }}\n\n\n# Arguments:\n * Number of characters to truncate to\n\n# wordWrap: Wraps words\nWrap sentence at specified line length. If value is Joel is a slug, the output would be: Joel\\nis a\\nslug\n\n{{ wordWrap value 5 }}\n\n\n# Arguments:\n * number of characters at which to wrap the text\n\n# replace Replaces\nEach substring of this string that matches the literal target sequence with the specified literal replacement sequence.\nIf value is "Handlebars ...", the output will be "Handlebars rocks".\n\n{{ replace value "..." "rocks" }}\n\n\n# yesno: Boolean to yes / no\nFor true, false and (optionally) null, to the strings "yes", "no", "maybe".\n\n# Arguments:\n * yes\n * no\n * maybe\n\n{{yesno value [yes="yes"] [no="no"] maybe=["maybe"] }}',normalizedContent:'# string functions\n * capitalizefirst: capitalizes the first character of the value.\n * center: centers the value in a field of a given width.\n * cut: removes all values of arg from the given string.\n * defaultifempty: default if empty\n * join: join string\n * ljust: left-aligns the value in a field of a given width.\n * rjust: right-aligns the value in a field of a given width.\n * substring substring\n * lower: converts a string into all lowercase.\n * upper converts a string into all uppercase.\n * stringformat: formats the variable\n * striptags: strips all [x]html tags.\n * capitalize: capitalizes all the whitespace separated words in a string.\n * abbreviate: truncates a string\n * wordwrap: wraps words\n * replace replaces\n * yesno: boolean to yes / no\n\n\n\n# capitalizefirst: capitalizes the first character of the value.\nif value is "kestra is cool !", the output will be "kestra is cool !".\n\n{{capitalizefirst value}}\n\n\n# center: centers the value in a field of a given width.\nif value is "handlebars.java", the output will be " handlebars.java ".\n\n{{ center value size=19 [pad="char"] }}\n\n\n# arguments:\n * size\n * pad\n\n# cut: removes all values of arg from the given string.\nif value is "string with spaces", the output will be "stringwithspaces".\n\n{{cut value [" "]}}\n\n\n# defaultifempty: default if empty\nif value evaluates to false, uses the given default. otherwise, uses the\nvalue. if value is "" (the empty string), the output will be nothing.\n\n{{defaultifempty value ["nothing"] }}\n\n\n# join: join string\njoins an array, iterator or an iterable with a string.\n\n{{join value join [prefix=""] [suffix=""]}}\n\n\n# arguments:\n * join\n * prefix\n * suffix\n\n> if value is the list [\'a\', \'b\', \'c\'], the output will be the string "a // b // c".\n\n\n{{join value " // " [prefix=""] [suffix=""]}}\n\n\n> join the "a", "b", "c", the output will be the string "a // b // c".\n\n\n{{join "a" "b" "c" " // " [prefix=""] [suffix=""]}}\n\n\n# ljust: left-aligns the value in a field of a given width.\nif value is handlebars.java, the output will be "handlebars.java ".\n\n{{ljust value 20 [pad=" "] }}\n\n\n# arguments:\n * field size\n\n# rjust: right-aligns the value in a field of a given width.\nif value is handlebars.java, the output will be " handlebars.java".\n\n{{rjust value 20 [pad=" "] }}\n\n\n# arguments:\n * field size\n * pad\n\n# substring substring\nreturns a new charsequence that is a subsequence of this sequence.\nthe subsequence starts with the char value at the specified index and\nends with the char value at nd - 1*\n\n{{substring value start end }}\n\n\n# arguments:\n * start offset\n * end offset\n\nfor example:\n\n> if value is handlebars.java, the output will be "java".\n\n\n{{substring value 11 }}\n\n\n> if value is handlebars.java, the output will be "handlebars".\n\n\n{{substring value 0 10 }}\n\n\n# lower: converts a string into all lowercase.\nif value is \'still mad at yoko\', the output will be \'still mad at yoko\'.\n\n{{lower value}}\n\n\n# upper converts a string into all uppercase.\nif value is \'hello\', the output will be \'hello\'.\n\n{{upper value}}\n\n\n# slugify converts to lowercase\nremoves non-word characters (alphanumerics and underscores) and converts spaces to hyphens. also strips leading and trailing whitespace.\nif value is "joel is a slug", the output will be "joel-is-a-slug".\n\n{{slugify value}}\n\n\n# stringformat: formats the variable\naccording to the argument, a string formatting specifier.\nif value is "hello %s" "handlebars.java", the output will be "hello handlebars.java".\n\n{{stringformat string param0 param1 ... paramn}}\n\n\n# arguments:\n * format\n * paramn\n\n# striptags: strips all [x]html tags.\n{{striptags value}}\n\n\n# capitalize: capitalizes all the whitespace separated words in a string.\nif value is "my first post", the output will be "my first post".\n\n{{ capitalize value [fully=false]}}\n\n\narguments:\n\n * fully\n\n# abbreviate: truncates a string\nif it is longer than the specified number of characters.\ntruncated strings will end with a translatable ellipsis sequence ("...").\nif value is "handlebars rocks", the output will be "handlebars...".\n\n{{abbreviate value 13 }}\n\n\n# arguments:\n * number of characters to truncate to\n\n# wordwrap: wraps words\nwrap sentence at specified line length. if value is joel is a slug, the output would be: joel\\nis a\\nslug\n\n{{ wordwrap value 5 }}\n\n\n# arguments:\n * number of characters at which to wrap the text\n\n# replace replaces\neach substring of this string that matches the literal target sequence with the specified literal replacement sequence.\nif value is "handlebars ...", the output will be "handlebars rocks".\n\n{{ replace value "..." "rocks" }}\n\n\n# yesno: boolean to yes / no\nfor true, false and (optionally) null, to the strings "yes", "no", "maybe".\n\n# arguments:\n * yes\n * no\n * maybe\n\n{{yesno value [yes="yes"] [no="no"] maybe=["maybe"] }}',charsets:{}},{title:"Getting Started",frontmatter:{order:1,meta:[{property:"article:modified_time",content:"2020-11-03T13:38:34.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Getting Started"},{property:"og:description",content:"Getting Started | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/docs/getting-started/"},{name:"twitter:title",content:"Getting Started"},{name:"twitter:description",content:"Getting Started | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/docs/getting-started/"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Getting Started | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/docs/getting-started/",relativePath:"docs/getting-started/README.md",key:"v-787eb528",path:"/docs/getting-started/",headers:[{level:2,title:"Presentation",slug:"presentation",normalizedTitle:"presentation",charIndex:73},{level:3,title:"Goals",slug:"goals",normalizedTitle:"goals",charIndex:398},{level:2,title:"Install java JRE 11",slug:"install-java-jre-11",normalizedTitle:"install java jre 11",charIndex:407},{level:3,title:"On windows",slug:"on-windows",normalizedTitle:"on windows",charIndex:728},{level:3,title:"On Linux",slug:"on-linux",normalizedTitle:"on linux",charIndex:1480},{level:2,title:"Setup Kestra",slug:"setup-kestra",normalizedTitle:"setup kestra",charIndex:1646}],lastUpdated:"11/3/2020, 1:38:34 PM",headersStr:"Presentation Goals Install java JRE 11 On windows On Linux Setup Kestra",content:"# Getting Started\n# Install and configure Kestra for flow developments\n# Presentation\nIn this tutorial we'll be interested in how to setup a working Kestra environement for flow developments By following this tutorial, you will be able to finally describe and execute a sample flow.\n\nIn a next tutorial, we'll see what tools and concepts are available in Kestra and how to efficiently use them.\n\n# Goals\n * Install java JRE 11 is a requirement to let kestra run properly\n * Download and run Kestra executable to run our first flow command\n\nTIP\n\nThis is windows based tutorial. The same tutorial will work on linux systems but some setup steps will be different. The following should also work on macos.\n\n# Install java JRE 11\n# On windows\nYou may have an existing java installation on your computer. You can check this install by opening a window command line and typing java *-version.\nIf you have either a response from the terminal like java: command not found or java version 8, then you have to install the following java 11 version.\n\n * Download and install Java JRE 11 from here will let your computer be able to run Kestra executable (this is a 32bit version for windows 7. Choose another version here if you need something else.)\n * Run the installer and add set JAVA_HOME variable to the install like the picture below\n   \n * Check the install by opening a window command line and do the following command java --version. Ensure you have the version 11 at least.\n   \n\n# On Linux\nfor debian / ubuntu based distros, you can run the following command to install JAVA :\n\nsudo apt install openjdk-11-jre\n\nYou are now ready to run Kestra.\n\n# Setup Kestra\nKestra is a java application. You will have to download a built version and then run commands in the terminal to test it works as expected.\n\n * Download Kestra latest version here\n * Move the downloaded file in some cool place like c:\\kestra\\kestra-xxx.jar (on linux /home/<username>/kestra will be ok)\n * Add the following flow sample file to the following location c:\\kestra\\sample.yaml with the following content :\n\nWARNING\n\nBeware the flow file MUST be a .yaml extension (.yml will not work)\n\nid: sample\nnamespace: org.kestra.tests\n\ntasks:\n- id: date\n  type: org.kestra.core.tasks.debugs.Return\n  format: \"{{taskrun.startDate}}\"\n\n\n * Check your setup is ready to go by issuing the follwing command in the terminal cd c:\\kestra then java -jar kestra-xxx.jar test sample.yaml\n\n]\n(Right click on the image, then display image to see the entire output)\n\nOn the command output above, you can see the flow has been processed properly in a while.\n\nTIP\n\nThe output will render better on windows soon. for now log color output does not render. On unix terminals, output renders will colors.\n\nIf all of this work, you are ready to go further with kestra. You now may have a look at Kestra concepts and flow definition tutorial to start developping flows for kestra.",normalizedContent:"# getting started\n# install and configure kestra for flow developments\n# presentation\nin this tutorial we'll be interested in how to setup a working kestra environement for flow developments by following this tutorial, you will be able to finally describe and execute a sample flow.\n\nin a next tutorial, we'll see what tools and concepts are available in kestra and how to efficiently use them.\n\n# goals\n * install java jre 11 is a requirement to let kestra run properly\n * download and run kestra executable to run our first flow command\n\ntip\n\nthis is windows based tutorial. the same tutorial will work on linux systems but some setup steps will be different. the following should also work on macos.\n\n# install java jre 11\n# on windows\nyou may have an existing java installation on your computer. you can check this install by opening a window command line and typing java *-version.\nif you have either a response from the terminal like java: command not found or java version 8, then you have to install the following java 11 version.\n\n * download and install java jre 11 from here will let your computer be able to run kestra executable (this is a 32bit version for windows 7. choose another version here if you need something else.)\n * run the installer and add set java_home variable to the install like the picture below\n   \n * check the install by opening a window command line and do the following command java --version. ensure you have the version 11 at least.\n   \n\n# on linux\nfor debian / ubuntu based distros, you can run the following command to install java :\n\nsudo apt install openjdk-11-jre\n\nyou are now ready to run kestra.\n\n# setup kestra\nkestra is a java application. you will have to download a built version and then run commands in the terminal to test it works as expected.\n\n * download kestra latest version here\n * move the downloaded file in some cool place like c:\\kestra\\kestra-xxx.jar (on linux /home/<username>/kestra will be ok)\n * add the following flow sample file to the following location c:\\kestra\\sample.yaml with the following content :\n\nwarning\n\nbeware the flow file must be a .yaml extension (.yml will not work)\n\nid: sample\nnamespace: org.kestra.tests\n\ntasks:\n- id: date\n  type: org.kestra.core.tasks.debugs.return\n  format: \"{{taskrun.startdate}}\"\n\n\n * check your setup is ready to go by issuing the follwing command in the terminal cd c:\\kestra then java -jar kestra-xxx.jar test sample.yaml\n\n]\n(right click on the image, then display image to see the entire output)\n\non the command output above, you can see the flow has been processed properly in a while.\n\ntip\n\nthe output will render better on windows soon. for now log color output does not render. on unix terminals, output renders will colors.\n\nif all of this work, you are ready to go further with kestra. you now may have a look at kestra concepts and flow definition tutorial to start developping flows for kestra.",charsets:{}},{title:"User Interface Guide",frontmatter:{order:6,meta:[{property:"article:modified_time",content:"2020-11-03T13:38:34.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"User Interface Guide"},{property:"og:description",content:"User Interface Guide | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/docs/user-interface-guide/"},{name:"twitter:title",content:"User Interface Guide"},{name:"twitter:description",content:"User Interface Guide | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/docs/user-interface-guide/"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"User Interface Guide | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/docs/user-interface-guide/",relativePath:"docs/user-interface-guide/README.md",key:"v-209f3a3c",path:"/docs/user-interface-guide/",headers:[{level:2,title:"Homepage / Flow list",slug:"homepage-flow-list",normalizedTitle:"homepage / flow list",charIndex:137},{level:2,title:"Flow details",slug:"flow-details",normalizedTitle:"flow details",charIndex:610},{level:2,title:"Execution list",slug:"execution-list",normalizedTitle:"execution list",charIndex:1664},{level:2,title:"Execution details",slug:"execution-details",normalizedTitle:"execution details",charIndex:1826},{level:2,title:"Table how to",slug:"table-how-to",normalizedTitle:"table how to",charIndex:2695}],lastUpdated:"11/3/2020, 1:38:34 PM",headersStr:"Homepage / Flow list Flow details Execution list Execution details Table how to",content:"# User Interface Guide\nKestra comes with a web user interface. This section is the documentation related to the user interface usage.\n\n# Homepage / Flow list\nWhen launching Kestra webui, the first page you reach is the flow page where flows are searchable.\n\nOn the left, the menu let you reach all parts of the frontend. You can browse to Flows and Executions.\n\nThe flows list shows all registered flows in the system. You can dig into the flow detail by clicking on the show column on the right (or double click on a row).\n\nHave a look at the table how to section for more details about this page usage.\n\n\n\n# Flow details\nThe flow detail view shows the following tabs:\n\nTab          Description                                                                                                                                                                             \nOverview     A visual rendering for current flow.                                                                                                                                                    \nExecutions   the same view as executions list, but scoped to the current flow. Displayed executions are related to current flow.                                                                     \nTrigger      Display a form to trigger a flow. This will display some input fields depending on flow input requirements. . Go to task model for more details about how to describe a working flow.   \nSource       Display and let you edit current flow from a text editor. The flow is a yaml document describing how tasks are related and what they do.                                                \n\n# Execution list\nOn the execution list page executions are listed and filterable to search some specific execution. It works the same way than the flow list.\na\n\n\n# Execution details\nThe execution detail view shows the following tabs:\n\nTab        Description                                                                                                                                        \nOverview   A sumup for the execution information.                                                                                                             \nGantt      A Gantt diagram representation for the current flow execution processing. Note : Gantt colored lines are clickable to display related log ouputs   \nLogs       The execution logs. This is a filterable list for execution outputs                                                                                \nTopology   A visual rendering for current flow.                                                                                                               \n\n# Table how to\nData tables are tables that display information in table format. There are for example some list of flows and executions displayed like this.\n\nThis table display let you browse data in many ways. Here are the main concepts about browsing data:\n\nSorting : Data tables let you sort data by clicking on the column header. This will order data depending on it's type (string, number, date...)\n\nFiltering : The search field on top of the table let you type anything that will filter table results depending on their content. By default, the search input will dig into the whole collection of searchable data.\n\nPagination : The pagination system let you browse all results pages one by one and display the amount of row displayed per page at once.\n\nNote: All filters are combinable and the more filter are enable the more accurate the result set will be.",normalizedContent:"# user interface guide\nkestra comes with a web user interface. this section is the documentation related to the user interface usage.\n\n# homepage / flow list\nwhen launching kestra webui, the first page you reach is the flow page where flows are searchable.\n\non the left, the menu let you reach all parts of the frontend. you can browse to flows and executions.\n\nthe flows list shows all registered flows in the system. you can dig into the flow detail by clicking on the show column on the right (or double click on a row).\n\nhave a look at the table how to section for more details about this page usage.\n\n\n\n# flow details\nthe flow detail view shows the following tabs:\n\ntab          description                                                                                                                                                                             \noverview     a visual rendering for current flow.                                                                                                                                                    \nexecutions   the same view as executions list, but scoped to the current flow. displayed executions are related to current flow.                                                                     \ntrigger      display a form to trigger a flow. this will display some input fields depending on flow input requirements. . go to task model for more details about how to describe a working flow.   \nsource       display and let you edit current flow from a text editor. the flow is a yaml document describing how tasks are related and what they do.                                                \n\n# execution list\non the execution list page executions are listed and filterable to search some specific execution. it works the same way than the flow list.\na\n\n\n# execution details\nthe execution detail view shows the following tabs:\n\ntab        description                                                                                                                                        \noverview   a sumup for the execution information.                                                                                                             \ngantt      a gantt diagram representation for the current flow execution processing. note : gantt colored lines are clickable to display related log ouputs   \nlogs       the execution logs. this is a filterable list for execution outputs                                                                                \ntopology   a visual rendering for current flow.                                                                                                               \n\n# table how to\ndata tables are tables that display information in table format. there are for example some list of flows and executions displayed like this.\n\nthis table display let you browse data in many ways. here are the main concepts about browsing data:\n\nsorting : data tables let you sort data by clicking on the column header. this will order data depending on it's type (string, number, date...)\n\nfiltering : the search field on top of the table let you type anything that will filter table results depending on their content. by default, the search input will dig into the whole collection of searchable data.\n\npagination : the pagination system let you browse all results pages one by one and display the amount of row displayed per page at once.\n\nnote: all filters are combinable and the more filter are enable the more accurate the result set will be.",charsets:{}},{title:"Restart",frontmatter:{meta:[{property:"article:modified_time",content:"2020-11-03T13:38:34.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Restart"},{property:"og:description",content:"Restart | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/docs/user-interface-guide/restart.html"},{name:"twitter:title",content:"Restart"},{name:"twitter:description",content:"Restart | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/docs/user-interface-guide/restart.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Restart | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/docs/user-interface-guide/restart.html",relativePath:"docs/user-interface-guide/restart.md",key:"v-c6119a3a",path:"/docs/user-interface-guide/restart.html",lastUpdated:"11/3/2020, 1:38:34 PM",headersStr:null,content:"# Restart\nNote\n\nWhen an execution is beeing retried, a new execution is generated with same exact input data that were used for current execution. It is entirely indemendent, however it is related to the retried execution with a parentId property in the new execution that references the retried execution id.",normalizedContent:"# restart\nnote\n\nwhen an execution is beeing retried, a new execution is generated with same exact input data that were used for current execution. it is entirely indemendent, however it is related to the retried execution with a parentid property in the new execution that references the retried execution id.",charsets:{}},{title:"Overview",frontmatter:{meta:[{property:"article:modified_time",content:"2020-11-03T13:38:34.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Overview"},{property:"og:description",content:"Overview | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/"},{name:"twitter:title",content:"Overview"},{name:"twitter:description",content:"Overview | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/plugins/"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Overview | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/plugins/",relativePath:"plugins/README.md",key:"v-8c82ad54",path:"/plugins/",lastUpdated:"11/3/2020, 1:38:34 PM",headersStr:null,content:"# Overview\nWARNING\n\nTODO",normalizedContent:"# overview\nwarning\n\ntodo",charsets:{}},{title:"ExecutionFlowCondition",frontmatter:{title:"ExecutionFlowCondition",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"ExecutionFlowCondition"},{property:"og:description",content:"ExecutionFlowCondition | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/core/conditions/org.kestra.core.models.conditions.types.ExecutionFlowCondition.html"},{name:"twitter:title",content:"ExecutionFlowCondition"},{name:"twitter:description",content:"ExecutionFlowCondition | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/plugins/core/conditions/org.kestra.core.models.conditions.types.ExecutionFlowCondition.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"ExecutionFlowCondition | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/plugins/core/conditions/org.kestra.core.models.conditions.types.ExecutionFlowCondition.html",relativePath:"plugins/core/conditions/org.kestra.core.models.conditions.types.ExecutionFlowCondition.md",key:"v-887ced7e",path:"/plugins/core/conditions/org.kestra.core.models.conditions.types.ExecutionFlowCondition.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:150},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:316},{level:3,title:"flowId",slug:"flowid",normalizedTitle:"flowid",charIndex:288},{level:3,title:"namespace",slug:"namespace",normalizedTitle:"namespace",charIndex:254}],headersStr:"Examples Inputs flowId namespace",content:'# ExecutionFlowCondition\ntype: "org.kestra.core.models.conditions.types.ExecutionFlowCondition"\n\n\n> Condition for a specific flow of an execution\n\n\n# Examples\n- conditions:\n    - type: org.kestra.core.models.conditions.types.ExecutionFlowCondition\n      namespace: org.kestra.tests\n      flowId: my-current-flow\n\n\n# Inputs\n# flowId\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n\n> The flow id\n\n\n# namespace\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n\n> The namespace of the flow',normalizedContent:'# executionflowcondition\ntype: "org.kestra.core.models.conditions.types.executionflowcondition"\n\n\n> condition for a specific flow of an execution\n\n\n# examples\n- conditions:\n    - type: org.kestra.core.models.conditions.types.executionflowcondition\n      namespace: org.kestra.tests\n      flowid: my-current-flow\n\n\n# inputs\n# flowid\n * type: string\n * dynamic: ❓\n * required: ✔️\n\n> the flow id\n\n\n# namespace\n * type: string\n * dynamic: ❓\n * required: ✔️\n\n> the namespace of the flow',charsets:{}},{title:"ExecutionNamespaceCondition",frontmatter:{title:"ExecutionNamespaceCondition",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"ExecutionNamespaceCondition"},{property:"og:description",content:"ExecutionNamespaceCondition | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/core/conditions/org.kestra.core.models.conditions.types.ExecutionNamespaceCondition.html"},{name:"twitter:title",content:"ExecutionNamespaceCondition"},{name:"twitter:description",content:"ExecutionNamespaceCondition | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/plugins/core/conditions/org.kestra.core.models.conditions.types.ExecutionNamespaceCondition.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"ExecutionNamespaceCondition | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/plugins/core/conditions/org.kestra.core.models.conditions.types.ExecutionNamespaceCondition.html",relativePath:"plugins/core/conditions/org.kestra.core.models.conditions.types.ExecutionNamespaceCondition.md",key:"v-71cae13a",path:"/plugins/core/conditions/org.kestra.core.models.conditions.types.ExecutionNamespaceCondition.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:151},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:311},{level:3,title:"namespace",slug:"namespace",normalizedTitle:"namespace",charIndex:137},{level:3,title:"prefix",slug:"prefix",normalizedTitle:"prefix",charIndex:294}],headersStr:"Examples Inputs namespace prefix",content:'# ExecutionNamespaceCondition\ntype: "org.kestra.core.models.conditions.types.ExecutionNamespaceCondition"\n\n\n> Condition for an execution namespace\n\n\n# Examples\n- conditions:\n    - type: org.kestra.core.models.conditions.types.ExecutionNamespaceCondition\n      namespace: org.kestra.tests\n      prefix: true\n\n\n# Inputs\n# namespace\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n\nThe namespace of the flow or the prefix if prefix is true\n\n# prefix\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\nIf we must look at the flow namespace by prefix (simple startWith case sensitive)',normalizedContent:'# executionnamespacecondition\ntype: "org.kestra.core.models.conditions.types.executionnamespacecondition"\n\n\n> condition for an execution namespace\n\n\n# examples\n- conditions:\n    - type: org.kestra.core.models.conditions.types.executionnamespacecondition\n      namespace: org.kestra.tests\n      prefix: true\n\n\n# inputs\n# namespace\n * type: string\n * dynamic: ❓\n * required: ✔️\n\nthe namespace of the flow or the prefix if prefix is true\n\n# prefix\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\nif we must look at the flow namespace by prefix (simple startwith case sensitive)',charsets:{}},{title:"ExecutionStatusCondition",frontmatter:{title:"ExecutionStatusCondition",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"ExecutionStatusCondition"},{property:"og:description",content:"ExecutionStatusCondition | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/core/conditions/org.kestra.core.models.conditions.types.ExecutionStatusCondition.html"},{name:"twitter:title",content:"ExecutionStatusCondition"},{name:"twitter:description",content:"ExecutionStatusCondition | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/plugins/core/conditions/org.kestra.core.models.conditions.types.ExecutionStatusCondition.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"ExecutionStatusCondition | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/plugins/core/conditions/org.kestra.core.models.conditions.types.ExecutionStatusCondition.html",relativePath:"plugins/core/conditions/org.kestra.core.models.conditions.types.ExecutionStatusCondition.md",key:"v-6f20d009",path:"/plugins/core/conditions/org.kestra.core.models.conditions.types.ExecutionStatusCondition.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:144},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:307},{level:3,title:"in",slug:"in",normalizedTitle:"in",charIndex:250},{level:3,title:"notIn",slug:"notin",normalizedTitle:"notin",charIndex:278}],headersStr:"Examples Inputs in notIn",content:'# ExecutionStatusCondition\ntype: "org.kestra.core.models.conditions.types.ExecutionStatusCondition"\n\n\n> Condition based on execution status\n\n\n# Examples\n- conditions:\n    - type: org.kestra.core.models.conditions.types.ExecutionStatusCondition\n      in:\n        - SUCCESS\n      notIn: \n        - FAILED\n\n\n# Inputs\n# in\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n\n> List of state that are authorized\n\n\n# notIn\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n\n> List of state that aren\'t authorized',normalizedContent:'# executionstatuscondition\ntype: "org.kestra.core.models.conditions.types.executionstatuscondition"\n\n\n> condition based on execution status\n\n\n# examples\n- conditions:\n    - type: org.kestra.core.models.conditions.types.executionstatuscondition\n      in:\n        - success\n      notin: \n        - failed\n\n\n# inputs\n# in\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n\n> list of state that are authorized\n\n\n# notin\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n\n> list of state that aren\'t authorized',charsets:{}},{title:"FlowCondition",frontmatter:{title:"FlowCondition",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"FlowCondition"},{property:"og:description",content:"FlowCondition | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/core/conditions/org.kestra.core.models.conditions.types.FlowCondition.html"},{name:"twitter:title",content:"FlowCondition"},{name:"twitter:description",content:"FlowCondition | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/plugins/core/conditions/org.kestra.core.models.conditions.types.FlowCondition.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"FlowCondition | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/plugins/core/conditions/org.kestra.core.models.conditions.types.FlowCondition.html",relativePath:"plugins/core/conditions/org.kestra.core.models.conditions.types.FlowCondition.md",key:"v-692642c3",path:"/plugins/core/conditions/org.kestra.core.models.conditions.types.FlowCondition.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:116},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:273},{level:3,title:"flowId",slug:"flowid",normalizedTitle:"flowid",charIndex:245},{level:3,title:"namespace",slug:"namespace",normalizedTitle:"namespace",charIndex:211}],headersStr:"Examples Inputs flowId namespace",content:'# FlowCondition\ntype: "org.kestra.core.models.conditions.types.FlowCondition"\n\n\n> Condition for a specific flow\n\n\n# Examples\n- conditions:\n    - type: org.kestra.core.models.conditions.types.FlowCondition\n      namespace: org.kestra.tests\n      flowId: my-current-flow\n\n\n# Inputs\n# flowId\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n\n> The flow id\n\n\n# namespace\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n\n> The namespace of the flow',normalizedContent:'# flowcondition\ntype: "org.kestra.core.models.conditions.types.flowcondition"\n\n\n> condition for a specific flow\n\n\n# examples\n- conditions:\n    - type: org.kestra.core.models.conditions.types.flowcondition\n      namespace: org.kestra.tests\n      flowid: my-current-flow\n\n\n# inputs\n# flowid\n * type: string\n * dynamic: ❓\n * required: ✔️\n\n> the flow id\n\n\n# namespace\n * type: string\n * dynamic: ❓\n * required: ✔️\n\n> the namespace of the flow',charsets:{}},{title:"FlowNamespaceCondition",frontmatter:{title:"FlowNamespaceCondition",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"FlowNamespaceCondition"},{property:"og:description",content:"FlowNamespaceCondition | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/core/conditions/org.kestra.core.models.conditions.types.FlowNamespaceCondition.html"},{name:"twitter:title",content:"FlowNamespaceCondition"},{name:"twitter:description",content:"FlowNamespaceCondition | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/plugins/core/conditions/org.kestra.core.models.conditions.types.FlowNamespaceCondition.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"FlowNamespaceCondition | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/plugins/core/conditions/org.kestra.core.models.conditions.types.FlowNamespaceCondition.html",relativePath:"plugins/core/conditions/org.kestra.core.models.conditions.types.FlowNamespaceCondition.md",key:"v-1b5304cf",path:"/plugins/core/conditions/org.kestra.core.models.conditions.types.FlowNamespaceCondition.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:135},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:290},{level:3,title:"namespace",slug:"namespace",normalizedTitle:"namespace",charIndex:121},{level:3,title:"prefix",slug:"prefix",normalizedTitle:"prefix",charIndex:273}],headersStr:"Examples Inputs namespace prefix",content:'# FlowNamespaceCondition\ntype: "org.kestra.core.models.conditions.types.FlowNamespaceCondition"\n\n\n> Condition for a flow namespace\n\n\n# Examples\n- conditions:\n    - type: org.kestra.core.models.conditions.types.FlowNamespaceCondition\n      namespace: org.kestra.tests\n      prefix: true\n\n\n# Inputs\n# namespace\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n\n> The namespace of the flow or the prefix if prefix is true\n\n\n# prefix\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n> If we must look at the flow namespace by prefix (simple startWith case sensitive)',normalizedContent:'# flownamespacecondition\ntype: "org.kestra.core.models.conditions.types.flownamespacecondition"\n\n\n> condition for a flow namespace\n\n\n# examples\n- conditions:\n    - type: org.kestra.core.models.conditions.types.flownamespacecondition\n      namespace: org.kestra.tests\n      prefix: true\n\n\n# inputs\n# namespace\n * type: string\n * dynamic: ❓\n * required: ✔️\n\n> the namespace of the flow or the prefix if prefix is true\n\n\n# prefix\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n> if we must look at the flow namespace by prefix (simple startwith case sensitive)',charsets:{}},{title:"VariableCondition",frontmatter:{title:"VariableCondition",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"VariableCondition"},{property:"og:description",content:"VariableCondition | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/core/conditions/org.kestra.core.models.conditions.types.VariableCondition.html"},{name:"twitter:title",content:"VariableCondition"},{name:"twitter:description",content:"VariableCondition | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/plugins/core/conditions/org.kestra.core.models.conditions.types.VariableCondition.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"VariableCondition | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/plugins/core/conditions/org.kestra.core.models.conditions.types.VariableCondition.html",relativePath:"plugins/core/conditions/org.kestra.core.models.conditions.types.VariableCondition.md",key:"v-4accb5fa",path:"/plugins/core/conditions/org.kestra.core.models.conditions.types.VariableCondition.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:238},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:433},{level:3,title:"expression",slug:"expression",normalizedTitle:"expression",charIndex:119}],headersStr:"Examples Inputs expression",content:'# VariableCondition\ntype: "org.kestra.core.models.conditions.types.VariableCondition"\n\n\n> Condition based on variables expression\n\n\nIf the result is an empty string, a string containing only space or false, the condition will be false\n\n# Examples\n> A condition that will return false for a missing variable\n\n\n- conditions:\n    - type: org.kestra.core.models.conditions.types.VariableCondition\n      expression: {{ and unknown }}\n\n\n# Inputs\n# expression\n * Type: string\n * Dynamic: ❓\n * Required: ✔️',normalizedContent:'# variablecondition\ntype: "org.kestra.core.models.conditions.types.variablecondition"\n\n\n> condition based on variables expression\n\n\nif the result is an empty string, a string containing only space or false, the condition will be false\n\n# examples\n> a condition that will return false for a missing variable\n\n\n- conditions:\n    - type: org.kestra.core.models.conditions.types.variablecondition\n      expression: {{ and unknown }}\n\n\n# inputs\n# expression\n * type: string\n * dynamic: ❓\n * required: ✔️',charsets:{}},{title:"ExecutionStatusCondition",frontmatter:{title:"ExecutionStatusCondition",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"ExecutionStatusCondition"},{property:"og:description",content:"ExecutionStatusCondition | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/core/conditions/org.kestra.core.models.listeners.types.ExecutionStatusCondition.html"},{name:"twitter:title",content:"ExecutionStatusCondition"},{name:"twitter:description",content:"ExecutionStatusCondition | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/plugins/core/conditions/org.kestra.core.models.listeners.types.ExecutionStatusCondition.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"ExecutionStatusCondition | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/plugins/core/conditions/org.kestra.core.models.listeners.types.ExecutionStatusCondition.html",relativePath:"plugins/core/conditions/org.kestra.core.models.listeners.types.ExecutionStatusCondition.md",key:"v-0ca17f3a",path:"/plugins/core/conditions/org.kestra.core.models.listeners.types.ExecutionStatusCondition.html",headers:[{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:188},{level:3,title:"in",slug:"in",normalizedTitle:"in",charIndex:197},{level:3,title:"notIn",slug:"notin",normalizedTitle:"notin",charIndex:304}],headersStr:"Inputs in notIn",content:'# ExecutionStatusCondition\ntype: "org.kestra.core.models.listeners.types.ExecutionStatusCondition"\n\n\n> Deprecated, use org.kestra.core.models.conditions.types.ExecutionStatusCondition\n\n\n# Inputs\n# in\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n\n> List of state that are authorized\n\n\n# notIn\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n\n> List of state that aren\'t authorized',normalizedContent:'# executionstatuscondition\ntype: "org.kestra.core.models.listeners.types.executionstatuscondition"\n\n\n> deprecated, use org.kestra.core.models.conditions.types.executionstatuscondition\n\n\n# inputs\n# in\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n\n> list of state that are authorized\n\n\n# notin\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n\n> list of state that aren\'t authorized',charsets:{}},{title:"Echo",frontmatter:{title:"Echo",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Echo"},{property:"og:description",content:"Echo | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/core/tasks/debugs/org.kestra.core.tasks.debugs.Echo.html"},{name:"twitter:title",content:"Echo"},{name:"twitter:description",content:"Echo | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/plugins/core/tasks/debugs/org.kestra.core.tasks.debugs.Echo.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Echo | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/plugins/core/tasks/debugs/org.kestra.core.tasks.debugs.Echo.html",relativePath:"plugins/core/tasks/debugs/org.kestra.core.tasks.debugs.Echo.md",key:"v-473550c3",path:"/plugins/core/tasks/debugs/org.kestra.core.tasks.debugs.Echo.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:264},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:388},{level:3,title:"format",slug:"format",normalizedTitle:"format",charIndex:338},{level:3,title:"level",slug:"level",normalizedTitle:"level",charIndex:326}],headersStr:"Examples Inputs format level",content:'# Echo\ntype: "org.kestra.core.tasks.debugs.Echo"\n\n\n> Simple debugging task that log a renderer value.\n\n\nThis task is mostly useful for debugging purpose.\n\nThis one allow you to logs inputs or outputs variables for example, or to debug some templated functions.\n\n# Examples\nid: "echo"\ntype: "org.kestra.core.tasks.debugs.Echo"\nlevel: WARN\nformat: "{{task.id}} > {{taskrun.startDate}}"\n\n\n# Inputs\n# format\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# level\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Default: INFO',normalizedContent:'# echo\ntype: "org.kestra.core.tasks.debugs.echo"\n\n\n> simple debugging task that log a renderer value.\n\n\nthis task is mostly useful for debugging purpose.\n\nthis one allow you to logs inputs or outputs variables for example, or to debug some templated functions.\n\n# examples\nid: "echo"\ntype: "org.kestra.core.tasks.debugs.echo"\nlevel: warn\nformat: "{{task.id}} > {{taskrun.startdate}}"\n\n\n# inputs\n# format\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# level\n * type: string\n * dynamic: ❓\n * required: ❌\n * default: info',charsets:{}},{title:"Return",frontmatter:{title:"Return",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Return"},{property:"og:description",content:"Return | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/core/tasks/debugs/org.kestra.core.tasks.debugs.Return.html"},{name:"twitter:title",content:"Return"},{name:"twitter:description",content:"Return | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/plugins/core/tasks/debugs/org.kestra.core.tasks.debugs.Return.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Return | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/plugins/core/tasks/debugs/org.kestra.core.tasks.debugs.Return.html",relativePath:"plugins/core/tasks/debugs/org.kestra.core.tasks.debugs.Return.md",key:"v-42fac8a3",path:"/plugins/core/tasks/debugs/org.kestra.core.tasks.debugs.Return.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:270},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:386},{level:3,title:"format",slug:"format",normalizedTitle:"format",charIndex:336},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:488},{level:3,title:"value",slug:"value",normalizedTitle:"value",charIndex:102}],headersStr:"Examples Inputs format Outputs value",content:'# Return\ntype: "org.kestra.core.tasks.debugs.Return"\n\n\n> Simple debugging task that return a renderer value.\n\n\nThis task is mostly useful for debugging purpose.\n\nThis one allow you to see inputs or outputs variables for example, or to debug some templated functions.\n\n# Examples\nid: "return"\ntype: "org.kestra.core.tasks.debugs.Return"\nformat: "{{task.id}} > {{taskrun.startDate}}"\n\n\n# Inputs\n# format\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The templatized string to render\n\n\n# Outputs\n# value\n * Type: string\n\n> The generated string',normalizedContent:'# return\ntype: "org.kestra.core.tasks.debugs.return"\n\n\n> simple debugging task that return a renderer value.\n\n\nthis task is mostly useful for debugging purpose.\n\nthis one allow you to see inputs or outputs variables for example, or to debug some templated functions.\n\n# examples\nid: "return"\ntype: "org.kestra.core.tasks.debugs.return"\nformat: "{{task.id}} > {{taskrun.startdate}}"\n\n\n# inputs\n# format\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the templatized string to render\n\n\n# outputs\n# value\n * type: string\n\n> the generated string',charsets:{}},{title:"EachParallel",frontmatter:{title:"EachParallel",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"EachParallel"},{property:"og:description",content:"EachParallel | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/core/tasks/flows/org.kestra.core.tasks.flows.EachParallel.html"},{name:"twitter:title",content:"EachParallel"},{name:"twitter:description",content:"EachParallel | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/plugins/core/tasks/flows/org.kestra.core.tasks.flows.EachParallel.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"EachParallel | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/plugins/core/tasks/flows/org.kestra.core.tasks.flows.EachParallel.html",relativePath:"plugins/core/tasks/flows/org.kestra.core.tasks.flows.EachParallel.md",key:"v-a00a283a",path:"/plugins/core/tasks/flows/org.kestra.core.tasks.flows.EachParallel.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:644},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:1508},{level:3,title:"concurrent",slug:"concurrent",normalizedTitle:"concurrent",charIndex:558},{level:3,title:"errors",slug:"errors",normalizedTitle:"errors",charIndex:1577},{level:3,title:"tasks",slug:"tasks",normalizedTitle:"tasks",charIndex:38},{level:3,title:"value",slug:"value",normalizedTitle:"value",charIndex:98}],headersStr:"Examples Inputs concurrent errors tasks value",content:'# EachParallel\ntype: "org.kestra.core.tasks.flows.EachParallel"\n\n\n> Execute a tasks for a list of value in parallel.\n\n\nFor each value, tasks will be executed\nThe value must be valid json string representing an arrays, like ["value1", "value2"] and must be a string\nThe current value is available on vars {{ taskrun.value }}.\nThe task list will be executed in parallel, for example if you have a 3 value with each one 2 tasks, all the 6 tasks will be computed in parallel with out any garantee on the order.\nIf you want to have each value in parallel, but no concurrent task for each value, you need to wrap the tasks with a Sequential tasks\n\n# Examples\nid: "each_parallel"\ntype: "org.kestra.core.tasks.flows.EachParallel"\nvalue: \'["value 1", "value 2", "value 3"]\'\ntasks:\n  - id: each-value\n    type: org.kestra.core.tasks.debugs.Return\n    format: "{{ task.id }} with current value \'{{ taskrun.value }}\'"\n\n\n> Handling each value in parralel but only 1 child task for each value at the same time.\n\n\nid: "each_parallel"\ntype: "org.kestra.core.tasks.flows.EachParallel"\nvalue: \'["value 1", "value 2", "value 3"]\'\ntasks:\n  - id: seq\n    type: org.kestra.core.tasks.flows.Sequential\n    tasks:\n    - id: t1\n      type: org.kestra.core.tasks.scripts.Bash\n      commands:\n        - \'echo "{{task.id}} > {{ parents.0.taskrun.value }}\n        - \'sleep 1\'\n    - id: t2\n      type: org.kestra.core.tasks.scripts.Bash\n      commands:\n        - \'echo "{{task.id}} > {{ parents.0.taskrun.value }}\n        - \'sleep 1\'\n\n\n# Inputs\n# concurrent\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n# errors\n * Type: array\n * SubType: object\n * Dynamic: ❓\n * Required: ❌\n\n# tasks\n * Type: array\n * SubType: object\n * Dynamic: ❓\n * Required: ❌\n\n# value\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n * Min length: 1',normalizedContent:'# eachparallel\ntype: "org.kestra.core.tasks.flows.eachparallel"\n\n\n> execute a tasks for a list of value in parallel.\n\n\nfor each value, tasks will be executed\nthe value must be valid json string representing an arrays, like ["value1", "value2"] and must be a string\nthe current value is available on vars {{ taskrun.value }}.\nthe task list will be executed in parallel, for example if you have a 3 value with each one 2 tasks, all the 6 tasks will be computed in parallel with out any garantee on the order.\nif you want to have each value in parallel, but no concurrent task for each value, you need to wrap the tasks with a sequential tasks\n\n# examples\nid: "each_parallel"\ntype: "org.kestra.core.tasks.flows.eachparallel"\nvalue: \'["value 1", "value 2", "value 3"]\'\ntasks:\n  - id: each-value\n    type: org.kestra.core.tasks.debugs.return\n    format: "{{ task.id }} with current value \'{{ taskrun.value }}\'"\n\n\n> handling each value in parralel but only 1 child task for each value at the same time.\n\n\nid: "each_parallel"\ntype: "org.kestra.core.tasks.flows.eachparallel"\nvalue: \'["value 1", "value 2", "value 3"]\'\ntasks:\n  - id: seq\n    type: org.kestra.core.tasks.flows.sequential\n    tasks:\n    - id: t1\n      type: org.kestra.core.tasks.scripts.bash\n      commands:\n        - \'echo "{{task.id}} > {{ parents.0.taskrun.value }}\n        - \'sleep 1\'\n    - id: t2\n      type: org.kestra.core.tasks.scripts.bash\n      commands:\n        - \'echo "{{task.id}} > {{ parents.0.taskrun.value }}\n        - \'sleep 1\'\n\n\n# inputs\n# concurrent\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n# errors\n * type: array\n * subtype: object\n * dynamic: ❓\n * required: ❌\n\n# tasks\n * type: array\n * subtype: object\n * dynamic: ❓\n * required: ❌\n\n# value\n * type: string\n * dynamic: ❓\n * required: ✔️\n * min length: 1',charsets:{}},{title:"EachSequential",frontmatter:{title:"EachSequential",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"EachSequential"},{property:"og:description",content:"EachSequential | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/core/tasks/flows/org.kestra.core.tasks.flows.EachSequential.html"},{name:"twitter:title",content:"EachSequential"},{name:"twitter:description",content:"EachSequential | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/plugins/core/tasks/flows/org.kestra.core.tasks.flows.EachSequential.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"EachSequential | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/plugins/core/tasks/flows/org.kestra.core.tasks.flows.EachSequential.html",relativePath:"plugins/core/tasks/flows/org.kestra.core.tasks.flows.EachSequential.md",key:"v-1ac7383a",path:"/plugins/core/tasks/flows/org.kestra.core.tasks.flows.EachSequential.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:332},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:602},{level:3,title:"errors",slug:"errors",normalizedTitle:"errors",charIndex:611},{level:3,title:"tasks",slug:"tasks",normalizedTitle:"tasks",charIndex:40},{level:3,title:"value",slug:"value",normalizedTitle:"value",charIndex:102}],headersStr:"Examples Inputs errors tasks value",content:'# EachSequential\ntype: "org.kestra.core.tasks.flows.EachSequential"\n\n\n> Execute a tasks for a list of value sequentially\n\n\nFor each value, tasks will be executed\nThe value must be valid json string representing an arrays, like ["value1", "value2"] and must be a string\nThe current value is available on vars {{ taskrun.value }}.\n\n# Examples\nid: "each_sequential"\ntype: "org.kestra.core.tasks.flows.EachSequential"\nvalue: \'["value 1", "value 2", "value 3"]\'\ntasks:\n  - id: each-value\n    type: org.kestra.core.tasks.debugs.Return\n    format: "{{ task.id }} with current value \'{{ taskrun.value }}\'"\n\n\n# Inputs\n# errors\n * Type: array\n * SubType: object\n * Dynamic: ❓\n * Required: ❌\n\n# tasks\n * Type: array\n * SubType: object\n * Dynamic: ❓\n * Required: ✔️\n * Min items: 1\n\n# value\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n * Min length: 1',normalizedContent:'# eachsequential\ntype: "org.kestra.core.tasks.flows.eachsequential"\n\n\n> execute a tasks for a list of value sequentially\n\n\nfor each value, tasks will be executed\nthe value must be valid json string representing an arrays, like ["value1", "value2"] and must be a string\nthe current value is available on vars {{ taskrun.value }}.\n\n# examples\nid: "each_sequential"\ntype: "org.kestra.core.tasks.flows.eachsequential"\nvalue: \'["value 1", "value 2", "value 3"]\'\ntasks:\n  - id: each-value\n    type: org.kestra.core.tasks.debugs.return\n    format: "{{ task.id }} with current value \'{{ taskrun.value }}\'"\n\n\n# inputs\n# errors\n * type: array\n * subtype: object\n * dynamic: ❓\n * required: ❌\n\n# tasks\n * type: array\n * subtype: object\n * dynamic: ❓\n * required: ✔️\n * min items: 1\n\n# value\n * type: string\n * dynamic: ❓\n * required: ✔️\n * min length: 1',charsets:{}},{title:"Flow",frontmatter:{title:"Flow",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Flow"},{property:"og:description",content:"Flow | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/core/tasks/flows/org.kestra.core.tasks.flows.Flow.html"},{name:"twitter:title",content:"Flow"},{name:"twitter:description",content:"Flow | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/plugins/core/tasks/flows/org.kestra.core.tasks.flows.Flow.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Flow | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/plugins/core/tasks/flows/org.kestra.core.tasks.flows.Flow.html",relativePath:"plugins/core/tasks/flows/org.kestra.core.tasks.flows.Flow.md",key:"v-63747bba",path:"/plugins/core/tasks/flows/org.kestra.core.tasks.flows.Flow.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:77},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:329},{level:3,title:"flowId",slug:"flowid",normalizedTitle:"flowid",charIndex:224},{level:3,title:"inputs",slug:"inputs-2",normalizedTitle:"inputs",charIndex:245},{level:3,title:"namespace",slug:"namespace",normalizedTitle:"namespace",charIndex:196},{level:3,title:"revision",slug:"revision",normalizedTitle:"revision",charIndex:622},{level:3,title:"transmitFailed",slug:"transmitfailed",normalizedTitle:"transmitfailed",charIndex:772},{level:3,title:"wait",slug:"wait",normalizedTitle:"wait",charIndex:313},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1176},{level:3,title:"executionId",slug:"executionid",normalizedTitle:"executionid",charIndex:1186},{level:3,title:"state",slug:"state",normalizedTitle:"state",charIndex:1254}],headersStr:"Examples Inputs flowId inputs namespace revision transmitFailed wait Outputs executionId state",content:'# Flow\ntype: "org.kestra.core.tasks.flows.Flow"\n\n\n> Trigger another flow\n\n\n# Examples\n> Trigger another flow, passing some file and arguments\n\n\nid: "flow"\ntype: "org.kestra.core.tasks.flows.Flow"\nnamespace: org.kestra.tests\nflowId: my-sub-flows\ninputs:\n  file: "{{ outputs.my-task.files.resolver\' }}"\n  store: 12\nwait: false\n\n\n# Inputs\n# flowId\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The flowId to trigger\n\n\n# inputs\n * Type: object\n * Dynamic: ✔️\n * Required: ❌\n\n> The input to pass to the triggered flow\n\n\n# namespace\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The namespace of the flow to trigger\n\n\n# revision\n * Type: integer\n * Dynamic: ✔️\n * Required: ❌\n\n> The revision of the flow you want to trigger\n\n\nBy default, we trigger the last version.\n\n# transmitFailed\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n\n> Failed the current execution if the waited execution is failed or killed.\n\n\nwait need to be true to make it work\n\n# wait\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n\n> Wait the end of the execution.\n\n\nBy default, we don\'t wait till the end of the flow, if you set to true, we wait the end of the trigger flow before continue this one.\n\n# Outputs\n# executionId\n * Type: string\n\n> The id of the execution trigger.\n\n\n# state\n * Type: string\n\n> The state of the execution trigger.\n\n\nOnly available if the execution is waited with wait options',normalizedContent:'# flow\ntype: "org.kestra.core.tasks.flows.flow"\n\n\n> trigger another flow\n\n\n# examples\n> trigger another flow, passing some file and arguments\n\n\nid: "flow"\ntype: "org.kestra.core.tasks.flows.flow"\nnamespace: org.kestra.tests\nflowid: my-sub-flows\ninputs:\n  file: "{{ outputs.my-task.files.resolver\' }}"\n  store: 12\nwait: false\n\n\n# inputs\n# flowid\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the flowid to trigger\n\n\n# inputs\n * type: object\n * dynamic: ✔️\n * required: ❌\n\n> the input to pass to the triggered flow\n\n\n# namespace\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the namespace of the flow to trigger\n\n\n# revision\n * type: integer\n * dynamic: ✔️\n * required: ❌\n\n> the revision of the flow you want to trigger\n\n\nby default, we trigger the last version.\n\n# transmitfailed\n * type: boolean\n * dynamic: ❌\n * required: ❌\n\n> failed the current execution if the waited execution is failed or killed.\n\n\nwait need to be true to make it work\n\n# wait\n * type: boolean\n * dynamic: ❌\n * required: ❌\n\n> wait the end of the execution.\n\n\nby default, we don\'t wait till the end of the flow, if you set to true, we wait the end of the trigger flow before continue this one.\n\n# outputs\n# executionid\n * type: string\n\n> the id of the execution trigger.\n\n\n# state\n * type: string\n\n> the state of the execution trigger.\n\n\nonly available if the execution is waited with wait options',charsets:{}},{title:"Parallel",frontmatter:{title:"Parallel",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Parallel"},{property:"og:description",content:"Parallel | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/core/tasks/flows/org.kestra.core.tasks.flows.Parallel.html"},{name:"twitter:title",content:"Parallel"},{name:"twitter:description",content:"Parallel | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/plugins/core/tasks/flows/org.kestra.core.tasks.flows.Parallel.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Parallel | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/plugins/core/tasks/flows/org.kestra.core.tasks.flows.Parallel.html",relativePath:"plugins/core/tasks/flows/org.kestra.core.tasks.flows.Parallel.md",key:"v-b4935bfa",path:"/plugins/core/tasks/flows/org.kestra.core.tasks.flows.Parallel.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:183},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:662},{level:3,title:"concurrent",slug:"concurrent",normalizedTitle:"concurrent",charIndex:671},{level:3,title:"errors",slug:"errors",normalizedTitle:"errors",charIndex:731},{level:3,title:"tasks",slug:"tasks",normalizedTitle:"tasks",charIndex:34}],headersStr:"Examples Inputs concurrent errors tasks",content:'# Parallel\ntype: "org.kestra.core.tasks.flows.Parallel"\n\n\n> Process task in parallel\n\n\nThis task processes tasks in parallel. It makes it convinient to process many tasks at once.\n\n# Examples\nid: parallel\nnamespace: org.kestra.tests\n\ntasks:\n  - id: parallel\n    type: org.kestra.core.tasks.flows.Parallel\n    tasks:\n      - id: 1st\n        type: org.kestra.core.tasks.debugs.Return\n        format: "{{task.id}} > {{taskrun.startDate}}"\n      - id: 2nd\n        type: org.kestra.core.tasks.debugs.Return\n        format: "{{task.id}} > {{taskrun.id}}"\n  - id: last\n    type: org.kestra.core.tasks.debugs.Return\n    format: "{{task.id}} > {{taskrun.startDate}}"\n\n\n# Inputs\n# concurrent\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n# errors\n * Type: array\n * SubType: object\n * Dynamic: ❓\n * Required: ❌\n\n# tasks\n * Type: array\n * SubType: object\n * Dynamic: ❓\n * Required: ❌',normalizedContent:'# parallel\ntype: "org.kestra.core.tasks.flows.parallel"\n\n\n> process task in parallel\n\n\nthis task processes tasks in parallel. it makes it convinient to process many tasks at once.\n\n# examples\nid: parallel\nnamespace: org.kestra.tests\n\ntasks:\n  - id: parallel\n    type: org.kestra.core.tasks.flows.parallel\n    tasks:\n      - id: 1st\n        type: org.kestra.core.tasks.debugs.return\n        format: "{{task.id}} > {{taskrun.startdate}}"\n      - id: 2nd\n        type: org.kestra.core.tasks.debugs.return\n        format: "{{task.id}} > {{taskrun.id}}"\n  - id: last\n    type: org.kestra.core.tasks.debugs.return\n    format: "{{task.id}} > {{taskrun.startdate}}"\n\n\n# inputs\n# concurrent\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n# errors\n * type: array\n * subtype: object\n * dynamic: ❓\n * required: ❌\n\n# tasks\n * type: array\n * subtype: object\n * dynamic: ❓\n * required: ❌',charsets:{}},{title:"Sequential",frontmatter:{title:"Sequential",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Sequential"},{property:"og:description",content:"Sequential | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/core/tasks/flows/org.kestra.core.tasks.flows.Sequential.html"},{name:"twitter:title",content:"Sequential"},{name:"twitter:description",content:"Sequential | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/plugins/core/tasks/flows/org.kestra.core.tasks.flows.Sequential.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Sequential | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/plugins/core/tasks/flows/org.kestra.core.tasks.flows.Sequential.html",relativePath:"plugins/core/tasks/flows/org.kestra.core.tasks.flows.Sequential.md",key:"v-35363b7a",path:"/plugins/core/tasks/flows/org.kestra.core.tasks.flows.Sequential.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:150},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:635},{level:3,title:"errors",slug:"errors",normalizedTitle:"errors",charIndex:644},{level:3,title:"tasks",slug:"tasks",normalizedTitle:"tasks",charIndex:36}],headersStr:"Examples Inputs errors tasks",content:'# Sequential\ntype: "org.kestra.core.tasks.flows.Sequential"\n\n\n> Process tasks ones after others sequentially\n\n\nMostly use in order to group tasks.\n\n# Examples\nid: sequential\nnamespace: org.kestra.tests\n\ntasks:\n  - id: sequential\n    type: org.kestra.core.tasks.flows.Sequential\n    tasks:\n      - id: 1st\n        type: org.kestra.core.tasks.debugs.Return\n        format: "{{task.id}} > {{taskrun.startDate}}"\n      - id: 2nd\n        type: org.kestra.core.tasks.debugs.Return\n        format: "{{task.id}} > {{taskrun.id}}"\n  - id: last\n    type: org.kestra.core.tasks.debugs.Return\n    format: "{{task.id}} > {{taskrun.startDate}}"\n\n\n# Inputs\n# errors\n * Type: array\n * SubType: object\n * Dynamic: ❓\n * Required: ❌\n\n# tasks\n * Type: array\n * SubType: object\n * Dynamic: ❓\n * Required: ✔️\n * Min items: 1',normalizedContent:'# sequential\ntype: "org.kestra.core.tasks.flows.sequential"\n\n\n> process tasks ones after others sequentially\n\n\nmostly use in order to group tasks.\n\n# examples\nid: sequential\nnamespace: org.kestra.tests\n\ntasks:\n  - id: sequential\n    type: org.kestra.core.tasks.flows.sequential\n    tasks:\n      - id: 1st\n        type: org.kestra.core.tasks.debugs.return\n        format: "{{task.id}} > {{taskrun.startdate}}"\n      - id: 2nd\n        type: org.kestra.core.tasks.debugs.return\n        format: "{{task.id}} > {{taskrun.id}}"\n  - id: last\n    type: org.kestra.core.tasks.debugs.return\n    format: "{{task.id}} > {{taskrun.startdate}}"\n\n\n# inputs\n# errors\n * type: array\n * subtype: object\n * dynamic: ❓\n * required: ❌\n\n# tasks\n * type: array\n * subtype: object\n * dynamic: ❓\n * required: ✔️\n * min items: 1',charsets:{}},{title:"Switch",frontmatter:{title:"Switch",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Switch"},{property:"og:description",content:"Switch | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/core/tasks/flows/org.kestra.core.tasks.flows.Switch.html"},{name:"twitter:title",content:"Switch"},{name:"twitter:description",content:"Switch | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/plugins/core/tasks/flows/org.kestra.core.tasks.flows.Switch.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Switch | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/plugins/core/tasks/flows/org.kestra.core.tasks.flows.Switch.html",relativePath:"plugins/core/tasks/flows/org.kestra.core.tasks.flows.Switch.md",key:"v-73b9fb3a",path:"/plugins/core/tasks/flows/org.kestra.core.tasks.flows.Switch.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:223},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:1003},{level:3,title:"cases",slug:"cases",normalizedTitle:"cases",charIndex:436},{level:3,title:"defaults",slug:"defaults",normalizedTitle:"defaults",charIndex:865},{level:3,title:"errors",slug:"errors",normalizedTitle:"errors",charIndex:1141},{level:3,title:"value",slug:"value",normalizedTitle:"value",charIndex:115},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1286},{level:3,title:"defaults",slug:"defaults-2",normalizedTitle:"defaults",charIndex:865},{level:3,title:"value",slug:"value-2",normalizedTitle:"value",charIndex:115}],headersStr:"Examples Inputs cases defaults errors value Outputs defaults value",content:'# Switch\ntype: "org.kestra.core.tasks.flows.Switch"\n\n\n> Process some tasks conditionnaly depending on a contextual value\n\n\nAllow some workflow based on context variables, allow you to branch your based on previous task.\n\n# Examples\nid: switch\nnamespace: org.kestra.tests\n\ninputs:\n  - name: string\n    type: STRING\n    required: true\n\ntasks:\n  - id: switch\n    type: org.kestra.core.tasks.flows.Switch\n    value: "{{inputs.string}}"\n    cases:\n      FIRST:\n        - id: 1st\n          type: org.kestra.core.tasks.debugs.Return\n          format: "{{task.id}} > {{taskrun.startDate}}"\n      SECOND:\n        - id: 2nd\n          type: org.kestra.core.tasks.debugs.Return\n          format: "{{task.id}} > {{taskrun.startDate}}"\n      THIRD:\n        - id: 3th\n          type: org.kestra.core.tasks.debugs.Return\n          format: "{{task.id}} > {{taskrun.startDate}}"\n    defaults:\n      - id: default\n        type: org.kestra.core.tasks.debugs.Return\n        format: "{{task.id}} > {{taskrun.startDate}}"\n\n\n# Inputs\n# cases\n * Type: object\n * Dynamic: ❓\n * Required: ❌\n\n# defaults\n * Type: array\n * SubType: object\n * Dynamic: ❓\n * Required: ❌\n\n# errors\n * Type: array\n * SubType: object\n * Dynamic: ❓\n * Required: ❌\n\n# value\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n * Min length: 1\n\n# Outputs\n# defaults\n * Type: boolean\n\n# value\n * Type: string',normalizedContent:'# switch\ntype: "org.kestra.core.tasks.flows.switch"\n\n\n> process some tasks conditionnaly depending on a contextual value\n\n\nallow some workflow based on context variables, allow you to branch your based on previous task.\n\n# examples\nid: switch\nnamespace: org.kestra.tests\n\ninputs:\n  - name: string\n    type: string\n    required: true\n\ntasks:\n  - id: switch\n    type: org.kestra.core.tasks.flows.switch\n    value: "{{inputs.string}}"\n    cases:\n      first:\n        - id: 1st\n          type: org.kestra.core.tasks.debugs.return\n          format: "{{task.id}} > {{taskrun.startdate}}"\n      second:\n        - id: 2nd\n          type: org.kestra.core.tasks.debugs.return\n          format: "{{task.id}} > {{taskrun.startdate}}"\n      third:\n        - id: 3th\n          type: org.kestra.core.tasks.debugs.return\n          format: "{{task.id}} > {{taskrun.startdate}}"\n    defaults:\n      - id: default\n        type: org.kestra.core.tasks.debugs.return\n        format: "{{task.id}} > {{taskrun.startdate}}"\n\n\n# inputs\n# cases\n * type: object\n * dynamic: ❓\n * required: ❌\n\n# defaults\n * type: array\n * subtype: object\n * dynamic: ❓\n * required: ❌\n\n# errors\n * type: array\n * subtype: object\n * dynamic: ❓\n * required: ❌\n\n# value\n * type: string\n * dynamic: ❓\n * required: ✔️\n * min length: 1\n\n# outputs\n# defaults\n * type: boolean\n\n# value\n * type: string',charsets:{}},{title:"Template",frontmatter:{title:"Template",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Template"},{property:"og:description",content:"Template | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/core/tasks/flows/org.kestra.core.tasks.flows.Template.html"},{name:"twitter:title",content:"Template"},{name:"twitter:description",content:"Template | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/plugins/core/tasks/flows/org.kestra.core.tasks.flows.Template.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Template | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/plugins/core/tasks/flows/org.kestra.core.tasks.flows.Template.html",relativePath:"plugins/core/tasks/flows/org.kestra.core.tasks.flows.Template.md",key:"v-7fe967a3",path:"/plugins/core/tasks/flows/org.kestra.core.tasks.flows.Template.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:146},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:625},{level:3,title:"errors",slug:"errors",normalizedTitle:"errors",charIndex:634},{level:3,title:"namespace",slug:"namespace",normalizedTitle:"namespace",charIndex:168},{level:3,title:"tasks",slug:"tasks",normalizedTitle:"tasks",charIndex:34},{level:3,title:"templateId",slug:"templateid",normalizedTitle:"templateid",charIndex:837}],headersStr:"Examples Inputs errors namespace tasks templateId",content:'# Template\ntype: "org.kestra.core.tasks.flows.Template"\n\n\n> Process tasks ones after others sequentially\n\n\nMostly use in order to group tasks.\n\n# Examples\nid: template\nnamespace: org.kestra.tests\n\ntasks:\n  - id: template\n    type: org.kestra.core.tasks.flows.Template\n    tasks:\n      - id: 1st\n        type: org.kestra.core.tasks.debugs.Return\n        format: "{{task.id}} > {{taskrun.startDate}}"\n      - id: 2nd\n        type: org.kestra.core.tasks.debugs.Return\n        format: "{{task.id}} > {{taskrun.id}}"\n  - id: last\n    type: org.kestra.core.tasks.debugs.Return\n    format: "{{task.id}} > {{taskrun.startDate}}"\n\n\n# Inputs\n# errors\n * Type: array\n * SubType: object\n * Dynamic: ❓\n * Required: ❌\n\n# namespace\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# tasks\n * Type: array\n * SubType: object\n * Dynamic: ❓\n * Required: ❌\n\n# templateId\n * Type: string\n * Dynamic: ❓\n * Required: ❌',normalizedContent:'# template\ntype: "org.kestra.core.tasks.flows.template"\n\n\n> process tasks ones after others sequentially\n\n\nmostly use in order to group tasks.\n\n# examples\nid: template\nnamespace: org.kestra.tests\n\ntasks:\n  - id: template\n    type: org.kestra.core.tasks.flows.template\n    tasks:\n      - id: 1st\n        type: org.kestra.core.tasks.debugs.return\n        format: "{{task.id}} > {{taskrun.startdate}}"\n      - id: 2nd\n        type: org.kestra.core.tasks.debugs.return\n        format: "{{task.id}} > {{taskrun.id}}"\n  - id: last\n    type: org.kestra.core.tasks.debugs.return\n    format: "{{task.id}} > {{taskrun.startdate}}"\n\n\n# inputs\n# errors\n * type: array\n * subtype: object\n * dynamic: ❓\n * required: ❌\n\n# namespace\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# tasks\n * type: array\n * subtype: object\n * dynamic: ❓\n * required: ❌\n\n# templateid\n * type: string\n * dynamic: ❓\n * required: ❌',charsets:{}},{title:"Bash",frontmatter:{title:"Bash",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Bash"},{property:"og:description",content:"Bash | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/core/tasks/scripts/org.kestra.core.tasks.scripts.Bash.html"},{name:"twitter:title",content:"Bash"},{name:"twitter:description",content:"Bash | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/plugins/core/tasks/scripts/org.kestra.core.tasks.scripts.Bash.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Bash | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/plugins/core/tasks/scripts/org.kestra.core.tasks.scripts.Bash.html",relativePath:"plugins/core/tasks/scripts/org.kestra.core.tasks.scripts.Bash.md",key:"v-463aa523",path:"/plugins/core/tasks/scripts/org.kestra.core.tasks.scripts.Bash.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:109},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:685},{level:3,title:"commands",slug:"commands",normalizedTitle:"commands",charIndex:95},{level:3,title:"exitOnFailed",slug:"exitonfailed",normalizedTitle:"exitonfailed",charIndex:871},{level:3,title:"files",slug:"files",normalizedTitle:"files",charIndex:533},{level:3,title:"inputFiles",slug:"inputfiles",normalizedTitle:"inputfiles",charIndex:1424},{level:3,title:"interpreter",slug:"interpreter",normalizedTitle:"interpreter",charIndex:1828},{level:3,title:"interpreterArgs",slug:"interpreterargs",normalizedTitle:"interpreterargs",charIndex:1947},{level:3,title:"outputsFiles",slug:"outputsfiles",normalizedTitle:"outputsfiles",charIndex:389},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:2504},{level:3,title:"exitCode",slug:"exitcode",normalizedTitle:"exitcode",charIndex:2514},{level:3,title:"files",slug:"files-2",normalizedTitle:"files",charIndex:533},{level:3,title:"stdErr",slug:"stderr",normalizedTitle:"stderr",charIndex:2680},{level:3,title:"stdOut",slug:"stdout",normalizedTitle:"stdout",charIndex:2763}],headersStr:"Examples Inputs commands exitOnFailed files inputFiles interpreter interpreterArgs outputsFiles Outputs exitCode files stdErr stdOut",content:'# Bash\ntype: "org.kestra.core.tasks.scripts.Bash"\n\n\n> Execute a Bash script, command or set of commands.\n\n\n# Examples\n> Single bash command\n\n\nid: "bash"\ntype: "org.kestra.core.tasks.scripts.Bash"\ncommands:\n- echo "The current execution is : {{execution.id}}"\n\n\n> Bash command that generate file in storage accessible through outputs\n\n\nid: "bash"\ntype: "org.kestra.core.tasks.scripts.Bash"\noutputsFiles:\n- first\n- second\ncommands:\n- echo "1" >> {{ outputFiles.first }}\n- echo "2" >> {{ outputFiles.second }}\n\n\n> Bash with some inputs files\n\n\nid: "bash"\ntype: "org.kestra.core.tasks.scripts.Bash"\ninputsFiles:\n  script.sh: |\n    echo {{ workingDir }}\ncommands:\n- /bin/bash script.sh\n\n\n# Inputs\n# commands\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ✔️\n * Min items: 1\n\n> The commands to run\n\n\nDefault command will be launched with /bin/sh -c "commands"\n\n# exitOnFailed\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Exit if any non true return value\n\n\nThis tells bash that it should exit the script if any statement returns a non-true return value.\nThe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n# files\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The list of files that will be uploaded to internal storage,\n\n\n/!\\deprecated property, use outputsFiles property instead\n\n# inputFiles\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Input files are extra files supplied by user that make it simpler organize code.\n\n\nDescribe a files map that will be written and usable in execution context. In python execution context is in a temp folder, for bash scripts, you can reach files using a inputsDirectory variable like \'source {{inputsDirectory}}/myfile.sh\'\n\n# interpreter\n * Type: string\n * Dynamic: ❌\n * Required: ✔️\n * Default: /bin/sh\n * Min length: 1\n\nInterpreter to used\n\n# interpreterArgs\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n * Default: [-c]\n\n> Interpreter args used\n\n\n# outputsFiles\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Output file list that will be uploaded to internal storage\n\n\nList of key that will generate temporary files.\nOn the command, just can use with special variable named outputFiles.key.\nIf you add a files with ["first"], you can use the special vars echo 1 >> {[ outputFiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n# Outputs\n# exitCode\n * Type: integer\n\n> The exit code of the whole execution\n\n\n# files\n * Type: object\n * SubType: object\n\n> The output files uri in Kestra internal storage\n\n\n# stdErr\n * Type: array\n * SubType: string\n\n> The standard error of the commands\n\n\n# stdOut\n * Type: array\n * SubType: string\n\n> The standard output of the commands',normalizedContent:'# bash\ntype: "org.kestra.core.tasks.scripts.bash"\n\n\n> execute a bash script, command or set of commands.\n\n\n# examples\n> single bash command\n\n\nid: "bash"\ntype: "org.kestra.core.tasks.scripts.bash"\ncommands:\n- echo "the current execution is : {{execution.id}}"\n\n\n> bash command that generate file in storage accessible through outputs\n\n\nid: "bash"\ntype: "org.kestra.core.tasks.scripts.bash"\noutputsfiles:\n- first\n- second\ncommands:\n- echo "1" >> {{ outputfiles.first }}\n- echo "2" >> {{ outputfiles.second }}\n\n\n> bash with some inputs files\n\n\nid: "bash"\ntype: "org.kestra.core.tasks.scripts.bash"\ninputsfiles:\n  script.sh: |\n    echo {{ workingdir }}\ncommands:\n- /bin/bash script.sh\n\n\n# inputs\n# commands\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ✔️\n * min items: 1\n\n> the commands to run\n\n\ndefault command will be launched with /bin/sh -c "commands"\n\n# exitonfailed\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> exit if any non true return value\n\n\nthis tells bash that it should exit the script if any statement returns a non-true return value.\nthe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n# files\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> the list of files that will be uploaded to internal storage,\n\n\n/!\\deprecated property, use outputsfiles property instead\n\n# inputfiles\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> input files are extra files supplied by user that make it simpler organize code.\n\n\ndescribe a files map that will be written and usable in execution context. in python execution context is in a temp folder, for bash scripts, you can reach files using a inputsdirectory variable like \'source {{inputsdirectory}}/myfile.sh\'\n\n# interpreter\n * type: string\n * dynamic: ❌\n * required: ✔️\n * default: /bin/sh\n * min length: 1\n\ninterpreter to used\n\n# interpreterargs\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n * default: [-c]\n\n> interpreter args used\n\n\n# outputsfiles\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> output file list that will be uploaded to internal storage\n\n\nlist of key that will generate temporary files.\non the command, just can use with special variable named outputfiles.key.\nif you add a files with ["first"], you can use the special vars echo 1 >> {[ outputfiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n# outputs\n# exitcode\n * type: integer\n\n> the exit code of the whole execution\n\n\n# files\n * type: object\n * subtype: object\n\n> the output files uri in kestra internal storage\n\n\n# stderr\n * type: array\n * subtype: string\n\n> the standard error of the commands\n\n\n# stdout\n * type: array\n * subtype: string\n\n> the standard output of the commands',charsets:{cjk:!0}},{title:"Python",frontmatter:{title:"Python",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Python"},{property:"og:description",content:"Python | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/core/tasks/scripts/org.kestra.core.tasks.scripts.Python.html"},{name:"twitter:title",content:"Python"},{name:"twitter:description",content:"Python | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/plugins/core/tasks/scripts/org.kestra.core.tasks.scripts.Python.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Python | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/plugins/core/tasks/scripts/org.kestra.core.tasks.scripts.Python.html",relativePath:"plugins/core/tasks/scripts/org.kestra.core.tasks.scripts.Python.md",key:"v-76e169a3",path:"/plugins/core/tasks/scripts/org.kestra.core.tasks.scripts.Python.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:567},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:1048},{level:3,title:"args",slug:"args",normalizedTitle:"args",charIndex:997},{level:3,title:"exitOnFailed",slug:"exitonfailed",normalizedTitle:"exitonfailed",charIndex:1199},{level:3,title:"files",slug:"files",normalizedTitle:"files",charIndex:332},{level:3,title:"inputFiles",slug:"inputfiles",normalizedTitle:"inputfiles",charIndex:341},{level:3,title:"interpreter",slug:"interpreter",normalizedTitle:"interpreter",charIndex:2156},{level:3,title:"interpreterArgs",slug:"interpreterargs",normalizedTitle:"interpreterargs",charIndex:2275},{level:3,title:"outputsFiles",slug:"outputsfiles",normalizedTitle:"outputsfiles",charIndex:1719},{level:3,title:"pythonPath",slug:"pythonpath",normalizedTitle:"pythonpath",charIndex:2832},{level:3,title:"requirements",slug:"requirements",normalizedTitle:"requirements",charIndex:255},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:3268},{level:3,title:"exitCode",slug:"exitcode",normalizedTitle:"exitcode",charIndex:3278},{level:3,title:"files",slug:"files-2",normalizedTitle:"files",charIndex:332},{level:3,title:"stdErr",slug:"stderr",normalizedTitle:"stderr",charIndex:3444},{level:3,title:"stdOut",slug:"stdout",normalizedTitle:"stdout",charIndex:3527}],headersStr:"Examples Inputs args exitOnFailed files inputFiles interpreter interpreterArgs outputsFiles pythonPath requirements Outputs exitCode files stdErr stdOut",content:'# Python\ntype: "org.kestra.core.tasks.scripts.Python"\n\n\n> Execute a Python script\n\n\nWith this Python task, we can execute a full python script.\nThe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nBy convention, you need to define at least a main.py files in inputFiles that will be the script used.\nBut you are also to add as many script as you need in inputFiles.\n\nYou can also add a pip.conf in inputFiles to customize the pip download of dependencies (like a private registry).\n\n# Examples\n> Execute a python script\n\n\nid: "python"\ntype: "org.kestra.core.tasks.scripts.Python"\ninputFiles:\n  data.json: |\n          {"status": "OK"}\n  main.py: |\n    import json\n    import requests\n    import sys\n    result = json.loads(open(sys.argv[1]).read())\n    print(f"python script {result[\'status\']}")\n    print(requests.get(\'http://google.com\').status_code)\n  pip.conf: |\n    # some specific pip repository configuration\nargs:\n  - data.json\nrequirements:\n  - requests\n\n\n# Inputs\n# args\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Python command args\n\n\nArguments list to pass to main python script\n\n# exitOnFailed\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Exit if any non true return value\n\n\nThis tells bash that it should exit the script if any statement returns a non-true return value.\nThe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n# files\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The list of files that will be uploaded to internal storage,\n\n\n/!\\deprecated property, use outputsFiles property instead\n\n# inputFiles\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Input files are extra files supplied by user that make it simpler organize code.\n\n\nDescribe a files map that will be written and usable in execution context. In python execution context is in a temp folder, for bash scripts, you can reach files using a inputsDirectory variable like \'source {{inputsDirectory}}/myfile.sh\'\n\n# interpreter\n * Type: string\n * Dynamic: ❌\n * Required: ✔️\n * Default: /bin/sh\n * Min length: 1\n\nInterpreter to used\n\n# interpreterArgs\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n * Default: [-c]\n\n> Interpreter args used\n\n\n# outputsFiles\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Output file list that will be uploaded to internal storage\n\n\nList of key that will generate temporary files.\nOn the command, just can use with special variable named outputFiles.key.\nIf you add a files with ["first"], you can use the special vars echo 1 >> {[ outputFiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n# pythonPath\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Default: /usr/bin/python3\n * Min length: 1\n\n> The python interpreter to use\n\n\nSet the python interpreter path to use\n\n# requirements\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Requirements are python dependencies to add to the python execution process\n\n\nPython dependencies list to setup in the virtualenv, in the same format than requirements.txt\n\n# Outputs\n# exitCode\n * Type: integer\n\n> The exit code of the whole execution\n\n\n# files\n * Type: object\n * SubType: object\n\n> The output files uri in Kestra internal storage\n\n\n# stdErr\n * Type: array\n * SubType: string\n\n> The standard error of the commands\n\n\n# stdOut\n * Type: array\n * SubType: string\n\n> The standard output of the commands',normalizedContent:'# python\ntype: "org.kestra.core.tasks.scripts.python"\n\n\n> execute a python script\n\n\nwith this python task, we can execute a full python script.\nthe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nby convention, you need to define at least a main.py files in inputfiles that will be the script used.\nbut you are also to add as many script as you need in inputfiles.\n\nyou can also add a pip.conf in inputfiles to customize the pip download of dependencies (like a private registry).\n\n# examples\n> execute a python script\n\n\nid: "python"\ntype: "org.kestra.core.tasks.scripts.python"\ninputfiles:\n  data.json: |\n          {"status": "ok"}\n  main.py: |\n    import json\n    import requests\n    import sys\n    result = json.loads(open(sys.argv[1]).read())\n    print(f"python script {result[\'status\']}")\n    print(requests.get(\'http://google.com\').status_code)\n  pip.conf: |\n    # some specific pip repository configuration\nargs:\n  - data.json\nrequirements:\n  - requests\n\n\n# inputs\n# args\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> python command args\n\n\narguments list to pass to main python script\n\n# exitonfailed\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> exit if any non true return value\n\n\nthis tells bash that it should exit the script if any statement returns a non-true return value.\nthe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n# files\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> the list of files that will be uploaded to internal storage,\n\n\n/!\\deprecated property, use outputsfiles property instead\n\n# inputfiles\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> input files are extra files supplied by user that make it simpler organize code.\n\n\ndescribe a files map that will be written and usable in execution context. in python execution context is in a temp folder, for bash scripts, you can reach files using a inputsdirectory variable like \'source {{inputsdirectory}}/myfile.sh\'\n\n# interpreter\n * type: string\n * dynamic: ❌\n * required: ✔️\n * default: /bin/sh\n * min length: 1\n\ninterpreter to used\n\n# interpreterargs\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n * default: [-c]\n\n> interpreter args used\n\n\n# outputsfiles\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> output file list that will be uploaded to internal storage\n\n\nlist of key that will generate temporary files.\non the command, just can use with special variable named outputfiles.key.\nif you add a files with ["first"], you can use the special vars echo 1 >> {[ outputfiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n# pythonpath\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * default: /usr/bin/python3\n * min length: 1\n\n> the python interpreter to use\n\n\nset the python interpreter path to use\n\n# requirements\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> requirements are python dependencies to add to the python execution process\n\n\npython dependencies list to setup in the virtualenv, in the same format than requirements.txt\n\n# outputs\n# exitcode\n * type: integer\n\n> the exit code of the whole execution\n\n\n# files\n * type: object\n * subtype: object\n\n> the output files uri in kestra internal storage\n\n\n# stderr\n * type: array\n * subtype: string\n\n> the standard error of the commands\n\n\n# stdout\n * type: array\n * subtype: string\n\n> the standard output of the commands',charsets:{cjk:!0}},{title:"Concat",frontmatter:{title:"Concat",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Concat"},{property:"og:description",content:"Concat | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/core/tasks/storages/org.kestra.core.tasks.storages.Concat.html"},{name:"twitter:title",content:"Concat"},{name:"twitter:description",content:"Concat | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/plugins/core/tasks/storages/org.kestra.core.tasks.storages.Concat.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Concat | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/plugins/core/tasks/storages/org.kestra.core.tasks.storages.Concat.html",relativePath:"plugins/core/tasks/storages/org.kestra.core.tasks.storages.Concat.md",key:"v-79a66723",path:"/plugins/core/tasks/storages/org.kestra.core.tasks.storages.Concat.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:96},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:926},{level:3,title:"files",slug:"files",normalizedTitle:"files",charIndex:64},{level:3,title:"separator",slug:"separator",normalizedTitle:"separator",charIndex:136},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1202},{level:3,title:"uri",slug:"uri",normalizedTitle:"uri",charIndex:1212}],headersStr:"Examples Inputs files separator Outputs uri",content:'# Concat\ntype: "org.kestra.core.tasks.storages.Concat"\n\n\nConcat files from internal storage.\n\n# Examples\n> Concat 2 files with a custom separator\n\n\nid: "concat"\ntype: "org.kestra.core.tasks.storages.Concat"\nfiles: \n  - "kestra://long/url/file1.txt"\n  - "kestra://long/url/file2.txt"\nseparator: "\\n"\n\n\n> Concat file generated by a each tasks\n\n\ntasks:\n  - id: each\n    type: org.kestra.core.tasks.flows.EachSequential\n    tasks:\n      - id: start_api_call\n        type: org.kestra.core.tasks.scripts.Bash\n        commands:\n          - echo {{ taskrun.value }} > {{ temp.generated }}\n        files:\n          - generated\n    value: \'["value1", "value2", "value3"]\'\n  - id: concat\n    type: org.kestra.core.tasks.storages.Concat\n    files:\n      - "{{ outputs.start_api_call.value1.files.generated }}"\n      - "{{ outputs.start_api_call.value2.files.generated }}"\n      - "{{ outputs.start_api_call.value3.files.generated }}"\n\n\n# Inputs\n# files\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> List of files to be concatenated.\n\n\nMust be a kestra:// storage url\n\n# separator\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The separator to used between files, default is no seprator\n\n\n# Outputs\n# uri\n * Type: object\n\n> The concatenate file uri.',normalizedContent:'# concat\ntype: "org.kestra.core.tasks.storages.concat"\n\n\nconcat files from internal storage.\n\n# examples\n> concat 2 files with a custom separator\n\n\nid: "concat"\ntype: "org.kestra.core.tasks.storages.concat"\nfiles: \n  - "kestra://long/url/file1.txt"\n  - "kestra://long/url/file2.txt"\nseparator: "\\n"\n\n\n> concat file generated by a each tasks\n\n\ntasks:\n  - id: each\n    type: org.kestra.core.tasks.flows.eachsequential\n    tasks:\n      - id: start_api_call\n        type: org.kestra.core.tasks.scripts.bash\n        commands:\n          - echo {{ taskrun.value }} > {{ temp.generated }}\n        files:\n          - generated\n    value: \'["value1", "value2", "value3"]\'\n  - id: concat\n    type: org.kestra.core.tasks.storages.concat\n    files:\n      - "{{ outputs.start_api_call.value1.files.generated }}"\n      - "{{ outputs.start_api_call.value2.files.generated }}"\n      - "{{ outputs.start_api_call.value3.files.generated }}"\n\n\n# inputs\n# files\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> list of files to be concatenated.\n\n\nmust be a kestra:// storage url\n\n# separator\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the separator to used between files, default is no seprator\n\n\n# outputs\n# uri\n * type: object\n\n> the concatenate file uri.',charsets:{}},{title:"Delete",frontmatter:{title:"Delete",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Delete"},{property:"og:description",content:"Delete | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/core/tasks/storages/org.kestra.core.tasks.storages.Delete.html"},{name:"twitter:title",content:"Delete"},{name:"twitter:description",content:"Delete | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/plugins/core/tasks/storages/org.kestra.core.tasks.storages.Delete.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Delete | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/plugins/core/tasks/storages/org.kestra.core.tasks.storages.Delete.html",relativePath:"plugins/core/tasks/storages/org.kestra.core.tasks.storages.Delete.md",key:"v-44dca4c3",path:"/plugins/core/tasks/storages/org.kestra.core.tasks.storages.Delete.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:97},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:203},{level:3,title:"errorOnMissing",slug:"erroronmissing",normalizedTitle:"erroronmissing",charIndex:212},{level:3,title:"uri",slug:"uri",normalizedTitle:"uri",charIndex:165},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:430},{level:3,title:"deleted",slug:"deleted",normalizedTitle:"deleted",charIndex:440},{level:3,title:"uri",slug:"uri-2",normalizedTitle:"uri",charIndex:165}],headersStr:"Examples Inputs errorOnMissing uri Outputs deleted uri",content:'# Delete\ntype: "org.kestra.core.tasks.storages.Delete"\n\n\nDelete a file from internal storage.\n\n# Examples\nid: "delete"\ntype: "org.kestra.core.tasks.storages.Delete"\nuri: "kestra://long/url/file.txt"\n\n\n# Inputs\n# errorOnMissing\n * Type: boolean\n * Dynamic: ✔️\n * Required: ❌\n\n> raise an error if the file is not found\n\n\n# uri\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> the file to delete\n\n\nMust be a kestra:// storage url\n\n# Outputs\n# deleted\n * Type: boolean\n\n> If the files was really deleted\n\n\n# uri\n * Type: object\n\n> The deleted',normalizedContent:'# delete\ntype: "org.kestra.core.tasks.storages.delete"\n\n\ndelete a file from internal storage.\n\n# examples\nid: "delete"\ntype: "org.kestra.core.tasks.storages.delete"\nuri: "kestra://long/url/file.txt"\n\n\n# inputs\n# erroronmissing\n * type: boolean\n * dynamic: ✔️\n * required: ❌\n\n> raise an error if the file is not found\n\n\n# uri\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the file to delete\n\n\nmust be a kestra:// storage url\n\n# outputs\n# deleted\n * type: boolean\n\n> if the files was really deleted\n\n\n# uri\n * type: object\n\n> the deleted',charsets:{}},{title:"Flow",frontmatter:{title:"Flow",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Flow"},{property:"og:description",content:"Flow | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/core/triggers/org.kestra.core.models.triggers.types.Flow.html"},{name:"twitter:title",content:"Flow"},{name:"twitter:description",content:"Flow | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/plugins/core/triggers/org.kestra.core.models.triggers.types.Flow.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Flow | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/plugins/core/triggers/org.kestra.core.models.triggers.types.Flow.html",relativePath:"plugins/core/triggers/org.kestra.core.models.triggers.types.Flow.md",key:"v-1172039b",path:"/plugins/core/triggers/org.kestra.core.models.triggers.types.Flow.html",headers:[{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:62},{level:3,title:"inputs",slug:"inputs-2",normalizedTitle:"inputs",charIndex:71}],headersStr:"Inputs inputs",content:'# Flow\ntype: "org.kestra.core.models.triggers.types.Flow"\n\n\n# Inputs\n# inputs\n * Type: object\n * Dynamic: ❓\n * Required: ❌',normalizedContent:'# flow\ntype: "org.kestra.core.models.triggers.types.flow"\n\n\n# inputs\n# inputs\n * type: object\n * dynamic: ❓\n * required: ❌',charsets:{}},{title:"Schedule",frontmatter:{title:"Schedule",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Schedule"},{property:"og:description",content:"Schedule | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/core/triggers/org.kestra.core.models.triggers.types.Schedule.html"},{name:"twitter:title",content:"Schedule"},{name:"twitter:description",content:"Schedule | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/plugins/core/triggers/org.kestra.core.models.triggers.types.Schedule.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Schedule | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/plugins/core/triggers/org.kestra.core.models.triggers.types.Schedule.html",relativePath:"plugins/core/triggers/org.kestra.core.models.triggers.types.Schedule.md",key:"v-471db309",path:"/plugins/core/triggers/org.kestra.core.models.triggers.types.Schedule.html",headers:[{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:70},{level:3,title:"backfill",slug:"backfill",normalizedTitle:"backfill",charIndex:79},{level:3,title:"backfill.start",slug:"backfill-start",normalizedTitle:"backfill.start",charIndex:136},{level:3,title:"cron",slug:"cron",normalizedTitle:"cron",charIndex:199},{level:3,title:"interval",slug:"interval",normalizedTitle:"interval",charIndex:253},{level:3,title:"interval.seconds",slug:"interval-seconds",normalizedTitle:"interval.seconds",charIndex:334}],headersStr:"Inputs backfill backfill.start cron interval interval.seconds",content:'# Schedule\ntype: "org.kestra.core.models.triggers.types.Schedule"\n\n\n# Inputs\n# backfill\n * Type: object\n * Dynamic: ❓\n * Required: ❌\n\n# backfill.start\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# cron\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n\n# interval\n * Type: object\n * Dynamic: ❓\n * Required: ❌\n * Default: 1.000000000\n\n# interval.seconds\n * Type: integer\n * Dynamic: ❓\n * Required: ❌',normalizedContent:'# schedule\ntype: "org.kestra.core.models.triggers.types.schedule"\n\n\n# inputs\n# backfill\n * type: object\n * dynamic: ❓\n * required: ❌\n\n# backfill.start\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# cron\n * type: string\n * dynamic: ❓\n * required: ✔️\n\n# interval\n * type: object\n * dynamic: ❓\n * required: ❌\n * default: 1.000000000\n\n# interval.seconds\n * type: integer\n * dynamic: ❓\n * required: ❌',charsets:{}},{title:"CreateBucket",frontmatter:{title:"CreateBucket",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"CreateBucket"},{property:"og:description",content:"CreateBucket | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-aws/tasks/s3/org.kestra.task.aws.s3.CreateBucket.html"},{name:"twitter:title",content:"CreateBucket"},{name:"twitter:description",content:"CreateBucket | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/plugins/task-aws/tasks/s3/org.kestra.task.aws.s3.CreateBucket.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"CreateBucket | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/plugins/task-aws/tasks/s3/org.kestra.task.aws.s3.CreateBucket.html",relativePath:"plugins/task-aws/tasks/s3/org.kestra.task.aws.s3.CreateBucket.md",key:"v-2a294a03",path:"/plugins/task-aws/tasks/s3/org.kestra.task.aws.s3.CreateBucket.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:83},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:240},{level:3,title:"accessKeyId",slug:"accesskeyid",normalizedTitle:"accesskeyid",charIndex:249},{level:3,title:"acl",slug:"acl",normalizedTitle:"acl",charIndex:469},{level:3,title:"bucket",slug:"bucket",normalizedTitle:"bucket",charIndex:72},{level:3,title:"grantFullControl",slug:"grantfullcontrol",normalizedTitle:"grantfullcontrol",charIndex:660},{level:3,title:"grantRead",slug:"grantread",normalizedTitle:"grantread",charIndex:810},{level:3,title:"grantReadACP",slug:"grantreadacp",normalizedTitle:"grantreadacp",charIndex:923},{level:3,title:"grantWrite",slug:"grantwrite",normalizedTitle:"grantwrite",charIndex:1039},{level:3,title:"grantWriteACP",slug:"grantwriteacp",normalizedTitle:"grantwriteacp",charIndex:1177},{level:3,title:"objectLockEnabledForBucket",slug:"objectlockenabledforbucket",normalizedTitle:"objectlockenabledforbucket",charIndex:1303},{level:3,title:"region",slug:"region",normalizedTitle:"region",charIndex:216},{level:3,title:"secretKeyId",slug:"secretkeyid",normalizedTitle:"secretkeyid",charIndex:1542},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1762},{level:3,title:"bucket",slug:"bucket-2",normalizedTitle:"bucket",charIndex:72},{level:3,title:"region",slug:"region-2",normalizedTitle:"region",charIndex:216}],headersStr:"Examples Inputs accessKeyId acl bucket grantFullControl grantRead grantReadACP grantWrite grantWriteACP objectLockEnabledForBucket region secretKeyId Outputs bucket region",content:'# CreateBucket\ntype: "org.kestra.task.aws.s3.CreateBucket"\n\n\n> Create a bucket\n\n\n# Examples\n> Create a new bucket with some options\n\n\nid: "create_bucket"\ntype: "org.kestra.task.aws.s3.CreateBucket"\nname: "my-bucket"\nregion: "eu-west-1"\n\n\n# Inputs\n# accessKeyId\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The Access Key Id in order to connect to AWS\n\n\nIf no connection is defined, we will use default DefaultCredentialsProvider that will try to guess the value\n\n# acl\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The canned ACL to apply to the bucket.\n\n\n# bucket\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\nThe bucket where to download the file\n\n# grantFullControl\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\nAllows grantee the read, write, read ACP, and write ACP permissions on the bucket.\n\n# grantRead\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Allows grantee to list the objects in the bucket.\n\n\n# grantReadACP\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Allows grantee to list the objects in the bucket.\n\n\n# grantWrite\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Allows grantee to create, overwrite, and delete any object in the bucket.\n\n\n# grantWriteACP\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Allows grantee to write the ACL for the applicable bucket.\n\n\n# objectLockEnabledForBucket\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n> Specifies whether you want S3 Object Lock to be enabled for the new bucket.\n\n\n# region\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The AWS region to used\n\n\n# secretKeyId\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The Secret Key Id in order to connect to AWS\n\n\nIf no connection is defined, we will use default DefaultCredentialsProvider that will try to guess the value\n\n# Outputs\n# bucket\n * Type: string\n\n# region\n * Type: string',normalizedContent:'# createbucket\ntype: "org.kestra.task.aws.s3.createbucket"\n\n\n> create a bucket\n\n\n# examples\n> create a new bucket with some options\n\n\nid: "create_bucket"\ntype: "org.kestra.task.aws.s3.createbucket"\nname: "my-bucket"\nregion: "eu-west-1"\n\n\n# inputs\n# accesskeyid\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the access key id in order to connect to aws\n\n\nif no connection is defined, we will use default defaultcredentialsprovider that will try to guess the value\n\n# acl\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the canned acl to apply to the bucket.\n\n\n# bucket\n * type: string\n * dynamic: ✔️\n * required: ❌\n\nthe bucket where to download the file\n\n# grantfullcontrol\n * type: string\n * dynamic: ✔️\n * required: ❌\n\nallows grantee the read, write, read acp, and write acp permissions on the bucket.\n\n# grantread\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> allows grantee to list the objects in the bucket.\n\n\n# grantreadacp\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> allows grantee to list the objects in the bucket.\n\n\n# grantwrite\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> allows grantee to create, overwrite, and delete any object in the bucket.\n\n\n# grantwriteacp\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> allows grantee to write the acl for the applicable bucket.\n\n\n# objectlockenabledforbucket\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n> specifies whether you want s3 object lock to be enabled for the new bucket.\n\n\n# region\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the aws region to used\n\n\n# secretkeyid\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the secret key id in order to connect to aws\n\n\nif no connection is defined, we will use default defaultcredentialsprovider that will try to guess the value\n\n# outputs\n# bucket\n * type: string\n\n# region\n * type: string',charsets:{}},{title:"Delete",frontmatter:{title:"Delete",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Delete"},{property:"og:description",content:"Delete | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-aws/tasks/s3/org.kestra.task.aws.s3.Delete.html"},{name:"twitter:title",content:"Delete"},{name:"twitter:description",content:"Delete | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/plugins/task-aws/tasks/s3/org.kestra.task.aws.s3.Delete.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Delete | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/plugins/task-aws/tasks/s3/org.kestra.task.aws.s3.Delete.html",relativePath:"plugins/task-aws/tasks/s3/org.kestra.task.aws.s3.Delete.md",key:"v-87b63d3a",path:"/plugins/task-aws/tasks/s3/org.kestra.task.aws.s3.Delete.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:87},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:191},{level:3,title:"accessKeyId",slug:"accesskeyid",normalizedTitle:"accesskeyid",charIndex:200},{level:3,title:"bucket",slug:"bucket",normalizedTitle:"bucket",charIndex:75},{level:3,title:"bypassGovernanceRetention",slug:"bypassgovernanceretention",normalizedTitle:"bypassgovernanceretention",charIndex:491},{level:3,title:"key",slug:"key",normalizedTitle:"key",charIndex:167},{level:3,title:"mfa",slug:"mfa",normalizedTitle:"mfa",charIndex:748},{level:3,title:"region",slug:"region",normalizedTitle:"region",charIndex:1045},{level:3,title:"requestPayer",slug:"requestpayer",normalizedTitle:"requestpayer",charIndex:1128},{level:3,title:"secretKeyId",slug:"secretkeyid",normalizedTitle:"secretkeyid",charIndex:1252},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1472},{level:3,title:"deleteMarker",slug:"deletemarker",normalizedTitle:"deletemarker",charIndex:1482},{level:3,title:"requestCharged",slug:"requestcharged",normalizedTitle:"requestcharged",charIndex:1634},{level:3,title:"versionId",slug:"versionid",normalizedTitle:"versionid",charIndex:1738}],headersStr:"Examples Inputs accessKeyId bucket bypassGovernanceRetention key mfa region requestPayer secretKeyId Outputs deleteMarker requestCharged versionId",content:'# Delete\ntype: "org.kestra.task.aws.s3.Delete"\n\n\n> Download a file to a S3 bucket.\n\n\n# Examples\nid: "delete"\ntype: "org.kestra.task.aws.s3.Delete"\nbucket: "my-bucket"\nkey: "path/to/file"\n\n\n# Inputs\n# accessKeyId\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The Access Key Id in order to connect to AWS\n\n\nIf no connection is defined, we will use default DefaultCredentialsProvider that will try to guess the value\n\n# bucket\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The bucket\n\n\n# bypassGovernanceRetention\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n> Indicates whether S3 Object Lock should bypass Governance-mode restrictions to process this operation.\n\n\n# key\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The key to delete\n\n\n# mfa\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The concatenation of the authentication device\'s serial number, a space, and the value that is displayed on your authentication device.\n\n\nRequired to permanently delete a versioned object if versioning is configured with MFA delete enabled.\n\n# region\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The AWS region to used\n\n\n# requestPayer\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\nSets the value of the RequestPayer property for this object.\n\n# secretKeyId\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The Secret Key Id in order to connect to AWS\n\n\nIf no connection is defined, we will use default DefaultCredentialsProvider that will try to guess the value\n\n# Outputs\n# deleteMarker\n * Type: boolean\n\n> Specifies whether the versioned object that was permanently deleted was (true) or was not (false) a delete marker.\n\n\n# requestCharged\n * Type: string\n\n> Returns the value of the RequestCharged property for this object.\n\n\n# versionId\n * Type: string\n\n> Returns the version ID of the delete marker created as a result of the DELETE operation.',normalizedContent:'# delete\ntype: "org.kestra.task.aws.s3.delete"\n\n\n> download a file to a s3 bucket.\n\n\n# examples\nid: "delete"\ntype: "org.kestra.task.aws.s3.delete"\nbucket: "my-bucket"\nkey: "path/to/file"\n\n\n# inputs\n# accesskeyid\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the access key id in order to connect to aws\n\n\nif no connection is defined, we will use default defaultcredentialsprovider that will try to guess the value\n\n# bucket\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the bucket\n\n\n# bypassgovernanceretention\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n> indicates whether s3 object lock should bypass governance-mode restrictions to process this operation.\n\n\n# key\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the key to delete\n\n\n# mfa\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the concatenation of the authentication device\'s serial number, a space, and the value that is displayed on your authentication device.\n\n\nrequired to permanently delete a versioned object if versioning is configured with mfa delete enabled.\n\n# region\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the aws region to used\n\n\n# requestpayer\n * type: string\n * dynamic: ✔️\n * required: ❌\n\nsets the value of the requestpayer property for this object.\n\n# secretkeyid\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the secret key id in order to connect to aws\n\n\nif no connection is defined, we will use default defaultcredentialsprovider that will try to guess the value\n\n# outputs\n# deletemarker\n * type: boolean\n\n> specifies whether the versioned object that was permanently deleted was (true) or was not (false) a delete marker.\n\n\n# requestcharged\n * type: string\n\n> returns the value of the requestcharged property for this object.\n\n\n# versionid\n * type: string\n\n> returns the version id of the delete marker created as a result of the delete operation.',charsets:{}},{title:"Download",frontmatter:{title:"Download",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Download"},{property:"og:description",content:"Download | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-aws/tasks/s3/org.kestra.task.aws.s3.Download.html"},{name:"twitter:title",content:"Download"},{name:"twitter:description",content:"Download | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/plugins/task-aws/tasks/s3/org.kestra.task.aws.s3.Download.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Download | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/plugins/task-aws/tasks/s3/org.kestra.task.aws.s3.Download.html",relativePath:"plugins/task-aws/tasks/s3/org.kestra.task.aws.s3.Download.md",key:"v-56e82843",path:"/plugins/task-aws/tasks/s3/org.kestra.task.aws.s3.Download.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:91},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:199},{level:3,title:"accessKeyId",slug:"accesskeyid",normalizedTitle:"accesskeyid",charIndex:208},{level:3,title:"bucket",slug:"bucket",normalizedTitle:"bucket",charIndex:79},{level:3,title:"key",slug:"key",normalizedTitle:"key",charIndex:175},{level:3,title:"region",slug:"region",normalizedTitle:"region",charIndex:618},{level:3,title:"requestPayer",slug:"requestpayer",normalizedTitle:"requestpayer",charIndex:701},{level:3,title:"secretKeyId",slug:"secretkeyid",normalizedTitle:"secretkeyid",charIndex:828},{level:3,title:"versionId",slug:"versionid",normalizedTitle:"versionid",charIndex:1048},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1173},{level:3,title:"contentLength",slug:"contentlength",normalizedTitle:"contentlength",charIndex:1183},{level:3,title:"contentType",slug:"contenttype",normalizedTitle:"contenttype",charIndex:1248},{level:3,title:"metadata",slug:"metadata",normalizedTitle:"metadata",charIndex:1346},{level:3,title:"uri",slug:"uri",normalizedTitle:"uri",charIndex:1428},{level:3,title:"versionId",slug:"versionid-2",normalizedTitle:"versionid",charIndex:1048}],headersStr:"Examples Inputs accessKeyId bucket key region requestPayer secretKeyId versionId Outputs contentLength contentType metadata uri versionId",content:'# Download\ntype: "org.kestra.task.aws.s3.Download"\n\n\n> Download a file to a S3 bucket.\n\n\n# Examples\nid: "download"\ntype: "org.kestra.task.aws.s3.Download"\nbucket: "my-bucket"\nkey: "path/to/file"\n\n\n# Inputs\n# accessKeyId\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The Access Key Id in order to connect to AWS\n\n\nIf no connection is defined, we will use default DefaultCredentialsProvider that will try to guess the value\n\n# bucket\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The bucket where to download the file\n\n\n# key\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The key where to download the file\n\n\n# region\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The AWS region to used\n\n\n# requestPayer\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Sets the value of the RequestPayer property for this object.\n\n\n# secretKeyId\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The Secret Key Id in order to connect to AWS\n\n\nIf no connection is defined, we will use default DefaultCredentialsProvider that will try to guess the value\n\n# versionId\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> VersionId used to reference a specific version of the object.\n\n\n# Outputs\n# contentLength\n * Type: integer\n\n> Size of the body in bytes.\n\n\n# contentType\n * Type: string\n\n> A standard MIME type describing the format of the object data.\n\n\n# metadata\n * Type: object\n\n> A map of metadata to store with the object in S3.\n\n\n# uri\n * Type: object\n\n# versionId\n * Type: string\n\n> Version of the object.',normalizedContent:'# download\ntype: "org.kestra.task.aws.s3.download"\n\n\n> download a file to a s3 bucket.\n\n\n# examples\nid: "download"\ntype: "org.kestra.task.aws.s3.download"\nbucket: "my-bucket"\nkey: "path/to/file"\n\n\n# inputs\n# accesskeyid\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the access key id in order to connect to aws\n\n\nif no connection is defined, we will use default defaultcredentialsprovider that will try to guess the value\n\n# bucket\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the bucket where to download the file\n\n\n# key\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the key where to download the file\n\n\n# region\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the aws region to used\n\n\n# requestpayer\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> sets the value of the requestpayer property for this object.\n\n\n# secretkeyid\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the secret key id in order to connect to aws\n\n\nif no connection is defined, we will use default defaultcredentialsprovider that will try to guess the value\n\n# versionid\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> versionid used to reference a specific version of the object.\n\n\n# outputs\n# contentlength\n * type: integer\n\n> size of the body in bytes.\n\n\n# contenttype\n * type: string\n\n> a standard mime type describing the format of the object data.\n\n\n# metadata\n * type: object\n\n> a map of metadata to store with the object in s3.\n\n\n# uri\n * type: object\n\n# versionid\n * type: string\n\n> version of the object.',charsets:{}},{title:"Upload",frontmatter:{title:"Upload",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Upload"},{property:"og:description",content:"Upload | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-aws/tasks/s3/org.kestra.task.aws.s3.Upload.html"},{name:"twitter:title",content:"Upload"},{name:"twitter:description",content:"Upload | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/plugins/task-aws/tasks/s3/org.kestra.task.aws.s3.Upload.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Upload | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/plugins/task-aws/tasks/s3/org.kestra.task.aws.s3.Upload.html",relativePath:"plugins/task-aws/tasks/s3/org.kestra.task.aws.s3.Upload.md",key:"v-6ba611ba",path:"/plugins/task-aws/tasks/s3/org.kestra.task.aws.s3.Upload.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:85},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:215},{level:3,title:"accessKeyId",slug:"accesskeyid",normalizedTitle:"accesskeyid",charIndex:224},{level:3,title:"bucket",slug:"bucket",normalizedTitle:"bucket",charIndex:73},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:145},{level:3,title:"key",slug:"key",normalizedTitle:"key",charIndex:191},{level:3,title:"metadata",slug:"metadata",normalizedTitle:"metadata",charIndex:707},{level:3,title:"region",slug:"region",normalizedTitle:"region",charIndex:818},{level:3,title:"requestPayer",slug:"requestpayer",normalizedTitle:"requestpayer",charIndex:901},{level:3,title:"secretKeyId",slug:"secretkeyid",normalizedTitle:"secretkeyid",charIndex:1028},{level:3,title:"storageClass",slug:"storageclass",normalizedTitle:"storageclass",charIndex:1248},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1420},{level:3,title:"bucket",slug:"bucket-2",normalizedTitle:"bucket",charIndex:73},{level:3,title:"key",slug:"key-2",normalizedTitle:"key",charIndex:191},{level:3,title:"versionId",slug:"versionid",normalizedTitle:"versionid",charIndex:1479}],headersStr:"Examples Inputs accessKeyId bucket from key metadata region requestPayer secretKeyId storageClass Outputs bucket key versionId",content:'# Upload\ntype: "org.kestra.task.aws.s3.Upload"\n\n\n> Upload a file to a S3 bucket.\n\n\n# Examples\nid: "upload"\ntype: "org.kestra.task.aws.s3.Upload"\nfrom: "{{ inputs.file }}"\nbucket: "my-bucket"\nkey: "path/to/file"\n\n\n# Inputs\n# accessKeyId\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The Access Key Id in order to connect to AWS\n\n\nIf no connection is defined, we will use default DefaultCredentialsProvider that will try to guess the value\n\n# bucket\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The bucket where to upload the file\n\n\n# from\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The file to upload\n\n\n# key\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The key where to upload the file\n\n\n# metadata\n * Type: object\n * Dynamic: ❌\n * Required: ❌\n\n> A map of metadata to store with the object in S3.\n\n\n# region\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The AWS region to used\n\n\n# requestPayer\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Sets the value of the RequestPayer property for this object.\n\n\n# secretKeyId\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The Secret Key Id in order to connect to AWS\n\n\nIf no connection is defined, we will use default DefaultCredentialsProvider that will try to guess the value\n\n# storageClass\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> If you don\'t specify, S3 Standard is the default storage class. Amazon S3 supports other storage classes.\n\n\n# Outputs\n# bucket\n * Type: string\n\n# key\n * Type: string\n\n# versionId\n * Type: string\n\n> Version of the object.',normalizedContent:'# upload\ntype: "org.kestra.task.aws.s3.upload"\n\n\n> upload a file to a s3 bucket.\n\n\n# examples\nid: "upload"\ntype: "org.kestra.task.aws.s3.upload"\nfrom: "{{ inputs.file }}"\nbucket: "my-bucket"\nkey: "path/to/file"\n\n\n# inputs\n# accesskeyid\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the access key id in order to connect to aws\n\n\nif no connection is defined, we will use default defaultcredentialsprovider that will try to guess the value\n\n# bucket\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the bucket where to upload the file\n\n\n# from\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the file to upload\n\n\n# key\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the key where to upload the file\n\n\n# metadata\n * type: object\n * dynamic: ❌\n * required: ❌\n\n> a map of metadata to store with the object in s3.\n\n\n# region\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the aws region to used\n\n\n# requestpayer\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> sets the value of the requestpayer property for this object.\n\n\n# secretkeyid\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the secret key id in order to connect to aws\n\n\nif no connection is defined, we will use default defaultcredentialsprovider that will try to guess the value\n\n# storageclass\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> if you don\'t specify, s3 standard is the default storage class. amazon s3 supports other storage classes.\n\n\n# outputs\n# bucket\n * type: string\n\n# key\n * type: string\n\n# versionid\n * type: string\n\n> version of the object.',charsets:{}},{title:"Decrypt",frontmatter:{title:"Decrypt",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Decrypt"},{property:"og:description",content:"Decrypt | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-crypto/tasks/openpgp/org.kestra.task.crypto.openpgp.Decrypt.html"},{name:"twitter:title",content:"Decrypt"},{name:"twitter:description",content:"Decrypt | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/plugins/task-crypto/tasks/openpgp/org.kestra.task.crypto.openpgp.Decrypt.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Decrypt | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/plugins/task-crypto/tasks/openpgp/org.kestra.task.crypto.openpgp.Decrypt.html",relativePath:"plugins/task-crypto/tasks/openpgp/org.kestra.task.crypto.openpgp.Decrypt.md",key:"v-1bc88783",path:"/plugins/task-crypto/tasks/openpgp/org.kestra.task.crypto.openpgp.Decrypt.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:97},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:631},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:186},{level:3,title:"privateKey",slug:"privatekey",normalizedTitle:"privatekey",charIndex:212},{level:3,title:"privateKeyPassphrase",slug:"privatekeypassphrase",normalizedTitle:"privatekeypassphrase",charIndex:266},{level:3,title:"requiredSignerUsers",slug:"requiredsignerusers",normalizedTitle:"requiredsignerusers",charIndex:584},{level:3,title:"signUsersKey",slug:"signuserskey",normalizedTitle:"signuserskey",charIndex:521},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1300},{level:3,title:"uri",slug:"uri",normalizedTitle:"uri",charIndex:1310}],headersStr:"Examples Inputs from privateKey privateKeyPassphrase requiredSignerUsers signUsersKey Outputs uri",content:'# Decrypt\ntype: "org.kestra.task.crypto.openpgp.Decrypt"\n\n\n> Decrypt a file crypted with PGP\n\n\n# Examples\n> Decrypt a file\n\n\nid: "decrypt"\ntype: "org.kestra.task.crypto.openpgp.Decrypt"\nfrom: "{{ inputs.file }}"\nprivateKey: |\n  -----BEGIN PGP PRIVATE KEY BLOCK-----\nprivateKeyPassphrase: my-passphrase\n\n\n> Decrypt a file and verify signature\n\n\nid: "decrypt"\ntype: "org.kestra.task.crypto.openpgp.Decrypt"\nfrom: "{{ inputs.file }}"\nprivateKey: |\n  -----BEGIN PGP PRIVATE KEY BLOCK-----\nprivateKeyPassphrase: my-passphrase\nsignUsersKey: \n  - |\n    -----BEGIN PGP PRIVATE KEY BLOCK-----\nrequiredSignerUsers: \n  - signer@kestra.io\n\n\n# Inputs\n# from\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The file to crypt\n\n\n# privateKey\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The private key to decrypt\n\n\nMust be an ascii key export with gpg --export-secret-key -a\n\n# privateKeyPassphrase\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The passphrase use to unlock the secret ring\n\n\n# requiredSignerUsers\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The list of recipients the file will be generated.\n\n\n# signUsersKey\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The public key use to sign the files\n\n\nMust be an ascii key export with gpg --export -a\n\n# Outputs\n# uri\n * Type: object\n\n> The decrypted files uri',normalizedContent:'# decrypt\ntype: "org.kestra.task.crypto.openpgp.decrypt"\n\n\n> decrypt a file crypted with pgp\n\n\n# examples\n> decrypt a file\n\n\nid: "decrypt"\ntype: "org.kestra.task.crypto.openpgp.decrypt"\nfrom: "{{ inputs.file }}"\nprivatekey: |\n  -----begin pgp private key block-----\nprivatekeypassphrase: my-passphrase\n\n\n> decrypt a file and verify signature\n\n\nid: "decrypt"\ntype: "org.kestra.task.crypto.openpgp.decrypt"\nfrom: "{{ inputs.file }}"\nprivatekey: |\n  -----begin pgp private key block-----\nprivatekeypassphrase: my-passphrase\nsignuserskey: \n  - |\n    -----begin pgp private key block-----\nrequiredsignerusers: \n  - signer@kestra.io\n\n\n# inputs\n# from\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the file to crypt\n\n\n# privatekey\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the private key to decrypt\n\n\nmust be an ascii key export with gpg --export-secret-key -a\n\n# privatekeypassphrase\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the passphrase use to unlock the secret ring\n\n\n# requiredsignerusers\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> the list of recipients the file will be generated.\n\n\n# signuserskey\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> the public key use to sign the files\n\n\nmust be an ascii key export with gpg --export -a\n\n# outputs\n# uri\n * type: object\n\n> the decrypted files uri',charsets:{cjk:!0}},{title:"Encrypt",frontmatter:{title:"Encrypt",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Encrypt"},{property:"og:description",content:"Encrypt | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-crypto/tasks/openpgp/org.kestra.task.crypto.openpgp.Encrypt.html"},{name:"twitter:title",content:"Encrypt"},{name:"twitter:description",content:"Encrypt | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/plugins/task-crypto/tasks/openpgp/org.kestra.task.crypto.openpgp.Encrypt.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Encrypt | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/plugins/task-crypto/tasks/openpgp/org.kestra.task.crypto.openpgp.Encrypt.html",relativePath:"plugins/task-crypto/tasks/openpgp/org.kestra.task.crypto.openpgp.Encrypt.md",key:"v-b6c1b05a",path:"/plugins/task-crypto/tasks/openpgp/org.kestra.task.crypto.openpgp.Encrypt.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:97},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:684},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:197},{level:3,title:"key",slug:"key",normalizedTitle:"key",charIndex:223},{level:3,title:"recipients",slug:"recipients",normalizedTitle:"recipients",charIndex:274},{level:3,title:"signPassphrase",slug:"signpassphrase",normalizedTitle:"signpassphrase",charIndex:623},{level:3,title:"signPrivateKey",slug:"signprivatekey",normalizedTitle:"signprivatekey",charIndex:565},{level:3,title:"signPublicKey",slug:"signpublickey",normalizedTitle:"signpublickey",charIndex:504},{level:3,title:"signUser",slug:"signuser",normalizedTitle:"signuser",charIndex:653},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1630},{level:3,title:"uri",slug:"uri",normalizedTitle:"uri",charIndex:1640}],headersStr:"Examples Inputs from key recipients signPassphrase signPrivateKey signPublicKey signUser Outputs uri",content:'# Encrypt\ntype: "org.kestra.task.crypto.openpgp.Encrypt"\n\n\n> Encrypt a file crypted with PGP\n\n\n# Examples\n> Encrypt a file not signed\n\n\nid: "encrypt"\ntype: "org.kestra.task.crypto.openpgp.Encrypt"\nfrom: "{{ inputs.file }}"\nkey: |\n  -----BEGIN PGP PUBLIC KEY BLOCK----- ... \nrecipients:\n  - hello@kestra.io\n\n\n> Encrypt a file signed\n\n\nid: "encrypt"\ntype: "org.kestra.task.crypto.openpgp.Encrypt"\nfrom: "{{ inputs.file }}"\nkey: |\n  -----BEGIN PGP PUBLIC KEY BLOCK----- ... \nrecipients:\n  - hello@kestra.io\nsignPublicKey: |\n  -----BEGIN PGP PUBLIC KEY BLOCK----- ... \nsignPrivateKey: |\n  -----BEGIN PGP PRIVATE KEY BLOCK-----\nsignPassphrase: my-passphrase\nsignUser: signer@kestra.io\n\n\n# Inputs\n# from\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The file to crypt\n\n\n# key\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The public key use to sign the files\n\n\nMust be an ascii key export with gpg --export -a\n\n# recipients\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The list of recipients the file will be generated.\n\n\n# signPassphrase\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The passphrase use to unlock the secret ring\n\n\n# signPrivateKey\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The public key use to sign the files\n\n\nMust be an ascii key export with gpg --export -a\n\n# signPublicKey\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The public key use to sign the files\n\n\nMust be an ascii key export with gpg --export -a\n\n# signUser\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The user that will signed the files\n\n\nIf you want to sign the file, you need to provide a privateKey\n\n# Outputs\n# uri\n * Type: object\n\n> The encrypted files uri',normalizedContent:'# encrypt\ntype: "org.kestra.task.crypto.openpgp.encrypt"\n\n\n> encrypt a file crypted with pgp\n\n\n# examples\n> encrypt a file not signed\n\n\nid: "encrypt"\ntype: "org.kestra.task.crypto.openpgp.encrypt"\nfrom: "{{ inputs.file }}"\nkey: |\n  -----begin pgp public key block----- ... \nrecipients:\n  - hello@kestra.io\n\n\n> encrypt a file signed\n\n\nid: "encrypt"\ntype: "org.kestra.task.crypto.openpgp.encrypt"\nfrom: "{{ inputs.file }}"\nkey: |\n  -----begin pgp public key block----- ... \nrecipients:\n  - hello@kestra.io\nsignpublickey: |\n  -----begin pgp public key block----- ... \nsignprivatekey: |\n  -----begin pgp private key block-----\nsignpassphrase: my-passphrase\nsignuser: signer@kestra.io\n\n\n# inputs\n# from\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the file to crypt\n\n\n# key\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the public key use to sign the files\n\n\nmust be an ascii key export with gpg --export -a\n\n# recipients\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> the list of recipients the file will be generated.\n\n\n# signpassphrase\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the passphrase use to unlock the secret ring\n\n\n# signprivatekey\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the public key use to sign the files\n\n\nmust be an ascii key export with gpg --export -a\n\n# signpublickey\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the public key use to sign the files\n\n\nmust be an ascii key export with gpg --export -a\n\n# signuser\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the user that will signed the files\n\n\nif you want to sign the file, you need to provide a privatekey\n\n# outputs\n# uri\n * type: object\n\n> the encrypted files uri',charsets:{cjk:!0}},{title:"Download",frontmatter:{title:"Download",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Download"},{property:"og:description",content:"Download | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-fs/tasks/http/org.kestra.task.fs.http.Download.html"},{name:"twitter:title",content:"Download"},{name:"twitter:description",content:"Download | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/plugins/task-fs/tasks/http/org.kestra.task.fs.http.Download.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Download | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/plugins/task-fs/tasks/http/org.kestra.task.fs.http.Download.html",relativePath:"plugins/task-fs/tasks/http/org.kestra.task.fs.http.Download.md",key:"v-93fb047a",path:"/plugins/task-fs/tasks/http/org.kestra.task.fs.http.Download.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:163},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:299},{level:3,title:"body",slug:"body",normalizedTitle:"body",charIndex:308},{level:3,title:"contentType",slug:"contenttype",normalizedTitle:"contenttype",charIndex:390},{level:3,title:"formData",slug:"formdata",normalizedTitle:"formdata",charIndex:480},{level:3,title:"headers",slug:"headers",normalizedTitle:"headers",charIndex:228},{level:3,title:"method",slug:"method",normalizedTitle:"method",charIndex:664},{level:3,title:"uri",slug:"uri",normalizedTitle:"uri",charIndex:264},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:882},{level:3,title:"code",slug:"code",normalizedTitle:"code",charIndex:892},{level:3,title:"headers",slug:"headers-2",normalizedTitle:"headers",charIndex:228},{level:3,title:"uri",slug:"uri-2",normalizedTitle:"uri",charIndex:264}],headersStr:"Examples Inputs body contentType formData headers method uri Outputs code headers uri",content:'# Download\ntype: "org.kestra.task.fs.http.Download"\n\n\n> Download file from http server\n\n\nThis task connects to http server and copy file to kestra file storage\n\n# Examples\nid: "download"\ntype: "org.kestra.task.fs.http.Download"\nheaders: \n  user-agent: "kestra-io"\nuri: "https://server.com/file"\n\n\n# Inputs\n# body\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The full body as string\n\n\n# contentType\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The request content type\n\n\n# formData\n * Type: object\n * Dynamic: ❓\n * Required: ❌\n\n> The form data to be send\n\n\n# headers\n * Type: object\n * Dynamic: ❓\n * Required: ❌\n\n> The header to pass to current request\n\n\n# method\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Default: GET\n\n> The http method to use\n\n\n# uri\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The fully-qualified URIs that point to destination http server\n\n\n# Outputs\n# code\n * Type: integer\n\n> The status code of the response\n\n\n# headers\n * Type: object\n\n> The headers of the response\n\n\n# uri\n * Type: object\n\n> The url of the downloaded file on kestra storage',normalizedContent:'# download\ntype: "org.kestra.task.fs.http.download"\n\n\n> download file from http server\n\n\nthis task connects to http server and copy file to kestra file storage\n\n# examples\nid: "download"\ntype: "org.kestra.task.fs.http.download"\nheaders: \n  user-agent: "kestra-io"\nuri: "https://server.com/file"\n\n\n# inputs\n# body\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the full body as string\n\n\n# contenttype\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the request content type\n\n\n# formdata\n * type: object\n * dynamic: ❓\n * required: ❌\n\n> the form data to be send\n\n\n# headers\n * type: object\n * dynamic: ❓\n * required: ❌\n\n> the header to pass to current request\n\n\n# method\n * type: string\n * dynamic: ❓\n * required: ❌\n * default: get\n\n> the http method to use\n\n\n# uri\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the fully-qualified uris that point to destination http server\n\n\n# outputs\n# code\n * type: integer\n\n> the status code of the response\n\n\n# headers\n * type: object\n\n> the headers of the response\n\n\n# uri\n * type: object\n\n> the url of the downloaded file on kestra storage',charsets:{}},{title:"Request",frontmatter:{title:"Request",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Request"},{property:"og:description",content:"Request | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-fs/tasks/http/org.kestra.task.fs.http.Request.html"},{name:"twitter:title",content:"Request"},{name:"twitter:description",content:"Request | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/plugins/task-fs/tasks/http/org.kestra.task.fs.http.Request.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Request | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/plugins/task-fs/tasks/http/org.kestra.task.fs.http.Request.html",relativePath:"plugins/task-fs/tasks/http/org.kestra.task.fs.http.Request.md",key:"v-083b59d3",path:"/plugins/task-fs/tasks/http/org.kestra.task.fs.http.Request.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:175},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:401},{level:3,title:"allowFailed",slug:"allowfailed",normalizedTitle:"allowfailed",charIndex:410},{level:3,title:"body",slug:"body",normalizedTitle:"body",charIndex:533},{level:3,title:"contentType",slug:"contenttype",normalizedTitle:"contenttype",charIndex:615},{level:3,title:"formData",slug:"formdata",normalizedTitle:"formdata",charIndex:353},{level:3,title:"headers",slug:"headers",normalizedTitle:"headers",charIndex:302},{level:3,title:"method",slug:"method",normalizedTitle:"method",charIndex:338},{level:3,title:"uri",slug:"uri",normalizedTitle:"uri",charIndex:270},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1107},{level:3,title:"body",slug:"body-2",normalizedTitle:"body",charIndex:533},{level:3,title:"code",slug:"code",normalizedTitle:"code",charIndex:502},{level:3,title:"headers",slug:"headers-2",normalizedTitle:"headers",charIndex:302},{level:3,title:"uri",slug:"uri-2",normalizedTitle:"uri",charIndex:270}],headersStr:"Examples Inputs allowFailed body contentType formData headers method uri Outputs body code headers uri",content:'# Request\ntype: "org.kestra.task.fs.http.Request"\n\n\n> Request an http server\n\n\nThis task connects to http server, request the provided url and store the response as output\n\n# Examples\n> Post request to a webserver\n\n\nid: "request"\ntype: "org.kestra.task.fs.http.Request"\nuri: "https://server.com/login"\nheaders: \n  user-agent: "kestra-io"\nmethod: "POST"\nformData:\n  user: "user"\n  password: "pass"\n\n\n# Inputs\n# allowFailed\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n> If true, allow failed response code (response code >=400)\n\n\n# body\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The full body as string\n\n\n# contentType\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The request content type\n\n\n# formData\n * Type: object\n * Dynamic: ❓\n * Required: ❌\n\n> The form data to be send\n\n\n# headers\n * Type: object\n * Dynamic: ❓\n * Required: ❌\n\n> The header to pass to current request\n\n\n# method\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Default: GET\n\n> The http method to use\n\n\n# uri\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The fully-qualified URIs that point to destination http server\n\n\n# Outputs\n# body\n * Type: string\n\n> The body of the response\n\n\n# code\n * Type: integer\n\n> The status code of the response\n\n\n# headers\n * Type: object\n\n> The headers of the response\n\n\n# uri\n * Type: object\n\n> The url of the current request',normalizedContent:'# request\ntype: "org.kestra.task.fs.http.request"\n\n\n> request an http server\n\n\nthis task connects to http server, request the provided url and store the response as output\n\n# examples\n> post request to a webserver\n\n\nid: "request"\ntype: "org.kestra.task.fs.http.request"\nuri: "https://server.com/login"\nheaders: \n  user-agent: "kestra-io"\nmethod: "post"\nformdata:\n  user: "user"\n  password: "pass"\n\n\n# inputs\n# allowfailed\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n> if true, allow failed response code (response code >=400)\n\n\n# body\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the full body as string\n\n\n# contenttype\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the request content type\n\n\n# formdata\n * type: object\n * dynamic: ❓\n * required: ❌\n\n> the form data to be send\n\n\n# headers\n * type: object\n * dynamic: ❓\n * required: ❌\n\n> the header to pass to current request\n\n\n# method\n * type: string\n * dynamic: ❓\n * required: ❌\n * default: get\n\n> the http method to use\n\n\n# uri\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the fully-qualified uris that point to destination http server\n\n\n# outputs\n# body\n * type: string\n\n> the body of the response\n\n\n# code\n * type: integer\n\n> the status code of the response\n\n\n# headers\n * type: object\n\n> the headers of the response\n\n\n# uri\n * type: object\n\n> the url of the current request',charsets:{}},{title:"Delete",frontmatter:{title:"Delete",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Delete"},{property:"og:description",content:"Delete | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-fs/tasks/sftp/org.kestra.task.fs.sftp.Delete.html"},{name:"twitter:title",content:"Delete"},{name:"twitter:description",content:"Delete | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/plugins/task-fs/tasks/sftp/org.kestra.task.fs.sftp.Delete.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Delete | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/plugins/task-fs/tasks/sftp/org.kestra.task.fs.sftp.Delete.html",relativePath:"plugins/task-fs/tasks/sftp/org.kestra.task.fs.sftp.Delete.md",key:"v-044d2e63",path:"/plugins/task-fs/tasks/sftp/org.kestra.task.fs.sftp.Delete.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:88},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:238},{level:3,title:"errorOnMissing",slug:"erroronmissing",normalizedTitle:"erroronmissing",charIndex:247},{level:3,title:"host",slug:"host",normalizedTitle:"host",charIndex:149},{level:3,title:"keyfile",slug:"keyfile",normalizedTitle:"keyfile",charIndex:443},{level:3,title:"passphrase",slug:"passphrase",normalizedTitle:"passphrase",charIndex:600},{level:3,title:"password",slug:"password",normalizedTitle:"password",charIndex:190},{level:3,title:"port",slug:"port",normalizedTitle:"port",charIndex:165},{level:3,title:"uri",slug:"uri",normalizedTitle:"uri",charIndex:205},{level:3,title:"username",slug:"username",normalizedTitle:"username",charIndex:176},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1033},{level:3,title:"deleted",slug:"deleted",normalizedTitle:"deleted",charIndex:1043},{level:3,title:"uri",slug:"uri-2",normalizedTitle:"uri",charIndex:205}],headersStr:"Examples Inputs errorOnMissing host keyfile passphrase password port uri username Outputs deleted uri",content:'# Delete\ntype: "org.kestra.task.fs.sftp.Delete"\n\n\n> Delete a file to a SFTP server.\n\n\n# Examples\nid: "delete"\ntype: "org.kestra.task.fs.sftp.Delete"\nhost: localhost\nport: 6622\nusername: foo\npassword: pass\nuri: "/upload/dir1/file.txt"\n\n\n# Inputs\n# errorOnMissing\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n> raise an error if the file is not found\n\n\n# host\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Hostname of the remote server\n\n\n# keyfile\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Private keyfile to login on the source server with ssh\n\n\nMust be the ssh key content, not a path\n\n# passphrase\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Passphrase of the ssh key\n\n\n# password\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Password on the remote server\n\n\n# port\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Port of the remote server\n\n\n# uri\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The file to delete\n\n\n# username\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Username on the remote server\n\n\n# Outputs\n# deleted\n * Type: boolean\n\n> If the files was really deleted\n\n\n# uri\n * Type: object\n\n> The deleted uri',normalizedContent:'# delete\ntype: "org.kestra.task.fs.sftp.delete"\n\n\n> delete a file to a sftp server.\n\n\n# examples\nid: "delete"\ntype: "org.kestra.task.fs.sftp.delete"\nhost: localhost\nport: 6622\nusername: foo\npassword: pass\nuri: "/upload/dir1/file.txt"\n\n\n# inputs\n# erroronmissing\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n> raise an error if the file is not found\n\n\n# host\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> hostname of the remote server\n\n\n# keyfile\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> private keyfile to login on the source server with ssh\n\n\nmust be the ssh key content, not a path\n\n# passphrase\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> passphrase of the ssh key\n\n\n# password\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> password on the remote server\n\n\n# port\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> port of the remote server\n\n\n# uri\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the file to delete\n\n\n# username\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> username on the remote server\n\n\n# outputs\n# deleted\n * type: boolean\n\n> if the files was really deleted\n\n\n# uri\n * type: object\n\n> the deleted uri',charsets:{}},{title:"Download",frontmatter:{title:"Download",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Download"},{property:"og:description",content:"Download | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-fs/tasks/sftp/org.kestra.task.fs.sftp.Download.html"},{name:"twitter:title",content:"Download"},{name:"twitter:description",content:"Download | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/plugins/task-fs/tasks/sftp/org.kestra.task.fs.sftp.Download.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Download | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/plugins/task-fs/tasks/sftp/org.kestra.task.fs.sftp.Download.html",relativePath:"plugins/task-fs/tasks/sftp/org.kestra.task.fs.sftp.Download.md",key:"v-76b2f7fa",path:"/plugins/task-fs/tasks/sftp/org.kestra.task.fs.sftp.Download.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:91},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:237},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:70},{level:3,title:"host",slug:"host",normalizedTitle:"host",charIndex:156},{level:3,title:"keyfile",slug:"keyfile",normalizedTitle:"keyfile",charIndex:448},{level:3,title:"passphrase",slug:"passphrase",normalizedTitle:"passphrase",charIndex:605},{level:3,title:"password",slug:"password",normalizedTitle:"password",charIndex:197},{level:3,title:"port",slug:"port",normalizedTitle:"port",charIndex:172},{level:3,title:"username",slug:"username",normalizedTitle:"username",charIndex:183},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:963},{level:3,title:"from",slug:"from-2",normalizedTitle:"from",charIndex:70},{level:3,title:"to",slug:"to",normalizedTitle:"to",charIndex:336}],headersStr:"Examples Inputs from host keyfile passphrase password port username Outputs from to",content:'# Download\ntype: "org.kestra.task.fs.sftp.Download"\n\n\n> Download file from sftp server\n\n\n# Examples\nid: "download"\ntype: "org.kestra.task.fs.sftp.Download"\nhost: localhost\nport: 6622\nusername: foo\npassword: pass\nfrom: "/in/file.txt"\n\n\n# Inputs\n# from\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The fully-qualified URIs that point to destination path\n\n\n# host\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Hostname of the remote server\n\n\n# keyfile\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Private keyfile to login on the source server with ssh\n\n\nMust be the ssh key content, not a path\n\n# passphrase\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Passphrase of the ssh key\n\n\n# password\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Password on the remote server\n\n\n# port\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Port of the remote server\n\n\n# username\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Username on the remote server\n\n\n# Outputs\n# from\n * Type: object\n\n> The fully-qualified URIs that point to destination path\n\n\n# to\n * Type: object\n\n> The fully-qualified URIs that point to source data',normalizedContent:'# download\ntype: "org.kestra.task.fs.sftp.download"\n\n\n> download file from sftp server\n\n\n# examples\nid: "download"\ntype: "org.kestra.task.fs.sftp.download"\nhost: localhost\nport: 6622\nusername: foo\npassword: pass\nfrom: "/in/file.txt"\n\n\n# inputs\n# from\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the fully-qualified uris that point to destination path\n\n\n# host\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> hostname of the remote server\n\n\n# keyfile\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> private keyfile to login on the source server with ssh\n\n\nmust be the ssh key content, not a path\n\n# passphrase\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> passphrase of the ssh key\n\n\n# password\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> password on the remote server\n\n\n# port\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> port of the remote server\n\n\n# username\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> username on the remote server\n\n\n# outputs\n# from\n * type: object\n\n> the fully-qualified uris that point to destination path\n\n\n# to\n * type: object\n\n> the fully-qualified uris that point to source data',charsets:{}},{title:"Downloads",frontmatter:{title:"Downloads",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Downloads"},{property:"og:description",content:"Downloads | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-fs/tasks/sftp/org.kestra.task.fs.sftp.Downloads.html"},{name:"twitter:title",content:"Downloads"},{name:"twitter:description",content:"Downloads | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/plugins/task-fs/tasks/sftp/org.kestra.task.fs.sftp.Downloads.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Downloads | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/plugins/task-fs/tasks/sftp/org.kestra.task.fs.sftp.Downloads.html",relativePath:"plugins/task-fs/tasks/sftp/org.kestra.task.fs.sftp.Downloads.md",key:"v-1c1031ff",path:"/plugins/task-fs/tasks/sftp/org.kestra.task.fs.sftp.Downloads.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:103},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:362},{level:3,title:"action",slug:"action",normalizedTitle:"action",charIndex:318},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:82},{level:3,title:"host",slug:"host",normalizedTitle:"host",charIndex:233},{level:3,title:"keyfile",slug:"keyfile",normalizedTitle:"keyfile",charIndex:631},{level:3,title:"moveDirectory",slug:"movedirectory",normalizedTitle:"movedirectory",charIndex:331},{level:3,title:"passphrase",slug:"passphrase",normalizedTitle:"passphrase",charIndex:898},{level:3,title:"password",slug:"password",normalizedTitle:"password",charIndex:274},{level:3,title:"port",slug:"port",normalizedTitle:"port",charIndex:249},{level:3,title:"regExp",slug:"regexp",normalizedTitle:"regexp",charIndex:1164},{level:3,title:"username",slug:"username",normalizedTitle:"username",charIndex:260},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1348},{level:3,title:"files",slug:"files",normalizedTitle:"files",charIndex:76}],headersStr:"Examples Inputs action from host keyfile moveDirectory passphrase password port regExp username Outputs files",content:'# Downloads\ntype: "org.kestra.task.fs.sftp.Downloads"\n\n\n> Download multiple files from sftp server\n\n\n# Examples\n> Download a list of files and move it to an archive folders\n\n\nid: "downloads"\ntype: "org.kestra.task.fs.sftp.Downloads"\nhost: localhost\nport: 6622\nusername: foo\npassword: pass\nfrom: "/in/"\ninterval: PT10S\naction: MOVE\nmoveDirectory: "/archive/"\n\n\n# Inputs\n# action\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The action to do on find files\n\n\n# from\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The directory to list\n\n\n# host\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Hostname of the remote server\n\n\n# keyfile\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Private keyfile to login on the source server with ssh\n\n\nMust be the ssh key content, not a path\n\n# moveDirectory\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The destination directory in case off MOVE\n\n\n# passphrase\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Passphrase of the ssh key\n\n\n# password\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Password on the remote server\n\n\n# port\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Port of the remote server\n\n\n# regExp\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> A regexp to filter on full path\n\n\n# username\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Username on the remote server\n\n\n# Outputs\n# files\n * Type: array\n * SubType: object\n\n> The bucket of the downloaded file',normalizedContent:'# downloads\ntype: "org.kestra.task.fs.sftp.downloads"\n\n\n> download multiple files from sftp server\n\n\n# examples\n> download a list of files and move it to an archive folders\n\n\nid: "downloads"\ntype: "org.kestra.task.fs.sftp.downloads"\nhost: localhost\nport: 6622\nusername: foo\npassword: pass\nfrom: "/in/"\ninterval: pt10s\naction: move\nmovedirectory: "/archive/"\n\n\n# inputs\n# action\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the action to do on find files\n\n\n# from\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the directory to list\n\n\n# host\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> hostname of the remote server\n\n\n# keyfile\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> private keyfile to login on the source server with ssh\n\n\nmust be the ssh key content, not a path\n\n# movedirectory\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the destination directory in case off move\n\n\n# passphrase\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> passphrase of the ssh key\n\n\n# password\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> password on the remote server\n\n\n# port\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> port of the remote server\n\n\n# regexp\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> a regexp to filter on full path\n\n\n# username\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> username on the remote server\n\n\n# outputs\n# files\n * type: array\n * subtype: object\n\n> the bucket of the downloaded file',charsets:{}},{title:"List",frontmatter:{title:"List",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"List"},{property:"og:description",content:"List | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-fs/tasks/sftp/org.kestra.task.fs.sftp.List.html"},{name:"twitter:title",content:"List"},{name:"twitter:description",content:"List | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/plugins/task-fs/tasks/sftp/org.kestra.task.fs.sftp.List.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"List | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/plugins/task-fs/tasks/sftp/org.kestra.task.fs.sftp.List.html",relativePath:"plugins/task-fs/tasks/sftp/org.kestra.task.fs.sftp.List.md",key:"v-af22b77a",path:"/plugins/task-fs/tasks/sftp/org.kestra.task.fs.sftp.List.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:90},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:243},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:182},{level:3,title:"host",slug:"host",normalizedTitle:"host",charIndex:354},{level:3,title:"keyfile",slug:"keyfile",normalizedTitle:"keyfile",charIndex:442},{level:3,title:"passphrase",slug:"passphrase",normalizedTitle:"passphrase",charIndex:599},{level:3,title:"password",slug:"password",normalizedTitle:"password",charIndex:689},{level:3,title:"port",slug:"port",normalizedTitle:"port",charIndex:781},{level:3,title:"regExp",slug:"regexp",normalizedTitle:"regexp",charIndex:204},{level:3,title:"username",slug:"username",normalizedTitle:"username",charIndex:957},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1049},{level:3,title:"files",slug:"files",normalizedTitle:"files",charIndex:53}],headersStr:"Examples Inputs from host keyfile passphrase password port regExp username Outputs files",content:'# List\ntype: "org.kestra.task.fs.sftp.List"\n\n\n> List files in a sftp server directory\n\n\n# Examples\nid: "list"\ntype: "org.kestra.task.fs.sftp.List"\ntype: org.kestra.task.fs.sftp.List\nfrom: "/upload/dir1/"\nregExp: ".*\\/dir1\\/.*\\.(yaml|yml)"\n\n\n# Inputs\n# from\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The fully-qualified URIs that point to path\n\n\n# host\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Hostname of the remote server\n\n\n# keyfile\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Private keyfile to login on the source server with ssh\n\n\nMust be the ssh key content, not a path\n\n# passphrase\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Passphrase of the ssh key\n\n\n# password\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Password on the remote server\n\n\n# port\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Port of the remote server\n\n\n# regExp\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> A regexp to filter on full path\n\n\n# username\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Username on the remote server\n\n\n# Outputs\n# files\n * Type: array\n * SubType: object\n\n> The list of files',normalizedContent:'# list\ntype: "org.kestra.task.fs.sftp.list"\n\n\n> list files in a sftp server directory\n\n\n# examples\nid: "list"\ntype: "org.kestra.task.fs.sftp.list"\ntype: org.kestra.task.fs.sftp.list\nfrom: "/upload/dir1/"\nregexp: ".*\\/dir1\\/.*\\.(yaml|yml)"\n\n\n# inputs\n# from\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the fully-qualified uris that point to path\n\n\n# host\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> hostname of the remote server\n\n\n# keyfile\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> private keyfile to login on the source server with ssh\n\n\nmust be the ssh key content, not a path\n\n# passphrase\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> passphrase of the ssh key\n\n\n# password\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> password on the remote server\n\n\n# port\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> port of the remote server\n\n\n# regexp\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> a regexp to filter on full path\n\n\n# username\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> username on the remote server\n\n\n# outputs\n# files\n * type: array\n * subtype: object\n\n> the list of files',charsets:{cjk:!0}},{title:"Move",frontmatter:{title:"Move",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Move"},{property:"og:description",content:"Move | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-fs/tasks/sftp/org.kestra.task.fs.sftp.Move.html"},{name:"twitter:title",content:"Move"},{name:"twitter:description",content:"Move | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/plugins/task-fs/tasks/sftp/org.kestra.task.fs.sftp.Move.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Move | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/plugins/task-fs/tasks/sftp/org.kestra.task.fs.sftp.Move.html",relativePath:"plugins/task-fs/tasks/sftp/org.kestra.task.fs.sftp.Move.md",key:"v-b73cd7ba",path:"/plugins/task-fs/tasks/sftp/org.kestra.task.fs.sftp.Move.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:146},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:321},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:259},{level:3,title:"host",slug:"host",normalizedTitle:"host",charIndex:203},{level:3,title:"keyfile",slug:"keyfile",normalizedTitle:"keyfile",charIndex:493},{level:3,title:"passphrase",slug:"passphrase",normalizedTitle:"passphrase",charIndex:650},{level:3,title:"password",slug:"password",normalizedTitle:"password",charIndex:244},{level:3,title:"port",slug:"port",normalizedTitle:"port",charIndex:219},{level:3,title:"to",slug:"to",normalizedTitle:"to",charIndex:60},{level:3,title:"username",slug:"username",normalizedTitle:"username",charIndex:230},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1192},{level:3,title:"from",slug:"from-2",normalizedTitle:"from",charIndex:259},{level:3,title:"to",slug:"to-2",normalizedTitle:"to",charIndex:60}],headersStr:"Examples Inputs from host keyfile passphrase password port to username Outputs from to",content:'# Move\ntype: "org.kestra.task.fs.sftp.Move"\n\n\n> Move a file to a SFTP server.\n\n\nIf the destination directory doesn\'t exist, it will be created\n\n# Examples\nid: "move"\ntype: "org.kestra.task.fs.sftp.Move"\nhost: localhost\nport: 6622\nusername: foo\npassword: pass\nfrom: "/upload/dir1/file.txt"\nto: "/upload/dir2/file.txt"\n\n\n# Inputs\n# from\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The file to move\n\n\n# host\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Hostname of the remote server\n\n\n# keyfile\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Private keyfile to login on the source server with ssh\n\n\nMust be the ssh key content, not a path\n\n# passphrase\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Passphrase of the ssh key\n\n\n# password\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Password on the remote server\n\n\n# port\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Port of the remote server\n\n\n# to\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The destination path to move\n\n\nThe full destination path (with filename optionnaly)\nIf the destFile exists, it is deleted first.\n\n# username\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Username on the remote server\n\n\n# Outputs\n# from\n * Type: object\n\n> The from uri\n\n\n# to\n * Type: object\n\n> The destination uri',normalizedContent:'# move\ntype: "org.kestra.task.fs.sftp.move"\n\n\n> move a file to a sftp server.\n\n\nif the destination directory doesn\'t exist, it will be created\n\n# examples\nid: "move"\ntype: "org.kestra.task.fs.sftp.move"\nhost: localhost\nport: 6622\nusername: foo\npassword: pass\nfrom: "/upload/dir1/file.txt"\nto: "/upload/dir2/file.txt"\n\n\n# inputs\n# from\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the file to move\n\n\n# host\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> hostname of the remote server\n\n\n# keyfile\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> private keyfile to login on the source server with ssh\n\n\nmust be the ssh key content, not a path\n\n# passphrase\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> passphrase of the ssh key\n\n\n# password\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> password on the remote server\n\n\n# port\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> port of the remote server\n\n\n# to\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the destination path to move\n\n\nthe full destination path (with filename optionnaly)\nif the destfile exists, it is deleted first.\n\n# username\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> username on the remote server\n\n\n# outputs\n# from\n * type: object\n\n> the from uri\n\n\n# to\n * type: object\n\n> the destination uri',charsets:{}},{title:"Upload",frontmatter:{title:"Upload",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Upload"},{property:"og:description",content:"Upload | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-fs/tasks/sftp/org.kestra.task.fs.sftp.Upload.html"},{name:"twitter:title",content:"Upload"},{name:"twitter:description",content:"Upload | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/plugins/task-fs/tasks/sftp/org.kestra.task.fs.sftp.Upload.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Upload | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/plugins/task-fs/tasks/sftp/org.kestra.task.fs.sftp.Upload.html",relativePath:"plugins/task-fs/tasks/sftp/org.kestra.task.fs.sftp.Upload.md",key:"v-347ef2ba",path:"/plugins/task-fs/tasks/sftp/org.kestra.task.fs.sftp.Upload.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:87},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:269},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:204},{level:3,title:"host",slug:"host",normalizedTitle:"host",charIndex:148},{level:3,title:"keyfile",slug:"keyfile",normalizedTitle:"keyfile",charIndex:446},{level:3,title:"passphrase",slug:"passphrase",normalizedTitle:"passphrase",charIndex:603},{level:3,title:"password",slug:"password",normalizedTitle:"password",charIndex:189},{level:3,title:"port",slug:"port",normalizedTitle:"port",charIndex:164},{level:3,title:"to",slug:"to",normalizedTitle:"to",charIndex:66},{level:3,title:"username",slug:"username",normalizedTitle:"username",charIndex:175},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1038},{level:3,title:"from",slug:"from-2",normalizedTitle:"from",charIndex:204},{level:3,title:"to",slug:"to-2",normalizedTitle:"to",charIndex:66}],headersStr:"Examples Inputs from host keyfile passphrase password port to username Outputs from to",content:'# Upload\ntype: "org.kestra.task.fs.sftp.Upload"\n\n\n> Upload a file to a sftp server\n\n\n# Examples\nid: "upload"\ntype: "org.kestra.task.fs.sftp.Upload"\nhost: localhost\nport: 6622\nusername: foo\npassword: pass\nfrom: "{{ outputs.taskid.uri }}"\nto: "/upload/dir2/file.txt"\n\n\n# Inputs\n# from\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The file path to copy\n\n\n# host\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Hostname of the remote server\n\n\n# keyfile\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Private keyfile to login on the source server with ssh\n\n\nMust be the ssh key content, not a path\n\n# passphrase\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Passphrase of the ssh key\n\n\n# password\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Password on the remote server\n\n\n# port\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Port of the remote server\n\n\n# to\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The destination path\n\n\n# username\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Username on the remote server\n\n\n# Outputs\n# from\n * Type: object\n\n> The fully-qualified URIs that point to destination path\n\n\n# to\n * Type: object\n\n> The fully-qualified URIs that point to source data',normalizedContent:'# upload\ntype: "org.kestra.task.fs.sftp.upload"\n\n\n> upload a file to a sftp server\n\n\n# examples\nid: "upload"\ntype: "org.kestra.task.fs.sftp.upload"\nhost: localhost\nport: 6622\nusername: foo\npassword: pass\nfrom: "{{ outputs.taskid.uri }}"\nto: "/upload/dir2/file.txt"\n\n\n# inputs\n# from\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the file path to copy\n\n\n# host\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> hostname of the remote server\n\n\n# keyfile\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> private keyfile to login on the source server with ssh\n\n\nmust be the ssh key content, not a path\n\n# passphrase\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> passphrase of the ssh key\n\n\n# password\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> password on the remote server\n\n\n# port\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> port of the remote server\n\n\n# to\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the destination path\n\n\n# username\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> username on the remote server\n\n\n# outputs\n# from\n * type: object\n\n> the fully-qualified uris that point to destination path\n\n\n# to\n * type: object\n\n> the fully-qualified uris that point to source data',charsets:{}},{title:"Trigger",frontmatter:{title:"Trigger",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Trigger"},{property:"og:description",content:"Trigger | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-fs/triggers/sftp/org.kestra.task.fs.sftp.Trigger.html"},{name:"twitter:title",content:"Trigger"},{name:"twitter:description",content:"Trigger | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/plugins/task-fs/triggers/sftp/org.kestra.task.fs.sftp.Trigger.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Trigger | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/plugins/task-fs/triggers/sftp/org.kestra.task.fs.sftp.Trigger.html",relativePath:"plugins/task-fs/triggers/sftp/org.kestra.task.fs.sftp.Trigger.md",key:"v-9161553a",path:"/plugins/task-fs/triggers/sftp/org.kestra.task.fs.sftp.Trigger.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:97},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:691},{level:3,title:"action",slug:"action",normalizedTitle:"action",charIndex:643},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:606},{level:3,title:"host",slug:"host",normalizedTitle:"host",charIndex:534},{level:3,title:"interval",slug:"interval",normalizedTitle:"interval",charIndex:623},{level:3,title:"interval.seconds",slug:"interval-seconds",normalizedTitle:"interval.seconds",charIndex:1085},{level:3,title:"keyfile",slug:"keyfile",normalizedTitle:"keyfile",charIndex:1151},{level:3,title:"moveDirectory",slug:"movedirectory",normalizedTitle:"movedirectory",charIndex:660},{level:3,title:"passphrase",slug:"passphrase",normalizedTitle:"passphrase",charIndex:1418},{level:3,title:"password",slug:"password",normalizedTitle:"password",charIndex:587},{level:3,title:"port",slug:"port",normalizedTitle:"port",charIndex:554},{level:3,title:"regExp",slug:"regexp",normalizedTitle:"regexp",charIndex:1684},{level:3,title:"username",slug:"username",normalizedTitle:"username",charIndex:569}],headersStr:"Examples Inputs action from host interval interval.seconds keyfile moveDirectory passphrase password port regExp username",content:'# Trigger\ntype: "org.kestra.task.fs.sftp.Trigger"\n\n\n> Wait for files on Google cloud storage\n\n\n# Examples\n> Wait for a list of file on a GCS bucket and iterate through the files\n\n\nid: gcs-listen\nnamespace: org.kestra.tests\n\ntasks:\n  - id: each\n    type: org.kestra.core.tasks.flows.EachSequential\n    tasks:\n      - id: return\n        type: org.kestra.core.tasks.debugs.Return\n        format: "{{taskrun.value}}"\n    value: "{{ jq trigger \'.files[].uri\' true }}"\n\ntriggers:\n  - id: watch\n    type: org.kestra.task.fs.sftp.Trigger\n    host: localhost\n    port: 6622\n    username: foo\n    password: pass\n    from: "/in/"\n    interval: PT10S\n    action: MOVE\n    moveDirectory: "/archive/"\n\n\n# Inputs\n# action\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The action to do on find files\n\n\n# from\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The directory to list\n\n\n# host\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Hostname of the remote server\n\n\n# interval\n * Type: object\n * Dynamic: ❓\n * Required: ❌\n * Default: 60.000000000\n\n> The interval between test of triggers\n\n\n# interval.seconds\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n# keyfile\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Private keyfile to login on the source server with ssh\n\n\nMust be the ssh key content, not a path\n\n# moveDirectory\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The destination directory in case off MOVE\n\n\n# passphrase\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Passphrase of the ssh key\n\n\n# password\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Password on the remote server\n\n\n# port\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Port of the remote server\n\n\n# regExp\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> A regexp to filter on full path\n\n\n# username\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Username on the remote server',normalizedContent:'# trigger\ntype: "org.kestra.task.fs.sftp.trigger"\n\n\n> wait for files on google cloud storage\n\n\n# examples\n> wait for a list of file on a gcs bucket and iterate through the files\n\n\nid: gcs-listen\nnamespace: org.kestra.tests\n\ntasks:\n  - id: each\n    type: org.kestra.core.tasks.flows.eachsequential\n    tasks:\n      - id: return\n        type: org.kestra.core.tasks.debugs.return\n        format: "{{taskrun.value}}"\n    value: "{{ jq trigger \'.files[].uri\' true }}"\n\ntriggers:\n  - id: watch\n    type: org.kestra.task.fs.sftp.trigger\n    host: localhost\n    port: 6622\n    username: foo\n    password: pass\n    from: "/in/"\n    interval: pt10s\n    action: move\n    movedirectory: "/archive/"\n\n\n# inputs\n# action\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the action to do on find files\n\n\n# from\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the directory to list\n\n\n# host\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> hostname of the remote server\n\n\n# interval\n * type: object\n * dynamic: ❓\n * required: ❌\n * default: 60.000000000\n\n> the interval between test of triggers\n\n\n# interval.seconds\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n# keyfile\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> private keyfile to login on the source server with ssh\n\n\nmust be the ssh key content, not a path\n\n# movedirectory\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the destination directory in case off move\n\n\n# passphrase\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> passphrase of the ssh key\n\n\n# password\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> password on the remote server\n\n\n# port\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> port of the remote server\n\n\n# regexp\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> a regexp to filter on full path\n\n\n# username\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> username on the remote server',charsets:{}},{title:"OauthAccessToken",frontmatter:{title:"OauthAccessToken",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"OauthAccessToken"},{property:"og:description",content:"OauthAccessToken | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-gcp/tasks/auth/org.kestra.task.gcp.auth.OauthAccessToken.html"},{name:"twitter:title",content:"OauthAccessToken"},{name:"twitter:description",content:"OauthAccessToken | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/plugins/task-gcp/tasks/auth/org.kestra.task.gcp.auth.OauthAccessToken.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"OauthAccessToken | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/plugins/task-gcp/tasks/auth/org.kestra.task.gcp.auth.OauthAccessToken.html",relativePath:"plugins/task-gcp/tasks/auth/org.kestra.task.gcp.auth.OauthAccessToken.md",key:"v-39894003",path:"/plugins/task-gcp/tasks/auth/org.kestra.task.gcp.auth.OauthAccessToken.html",headers:[{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:106},{level:3,title:"scopes",slug:"scopes",normalizedTitle:"scopes",charIndex:115},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:406},{level:3,title:"accessToken",slug:"accesstoken",normalizedTitle:"accesstoken",charIndex:416},{level:3,title:"accessToken.tokenValue",slug:"accesstoken-tokenvalue",normalizedTitle:"accesstoken.tokenvalue",charIndex:493}],headersStr:"Inputs scopes Outputs accessToken accessToken.tokenValue",content:'# OauthAccessToken\ntype: "org.kestra.task.gcp.auth.OauthAccessToken"\n\n\n> Fetch an OAuth access token.\n\n\n# Inputs\n# scopes\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ✔️\n * Default: [https://www.googleapis.com/auth/cloud-platform]\n * Min items: 1\n\n> The scopes requested for the access token.\n\n\nFull list can be found here\n\ndefault is ["https://www.googleapis.com/auth/cloud-platform"]\n\n# Outputs\n# accessToken\n * Type: object\n\n> A oauth access token for the current user\n\n\n# accessToken.tokenValue\n * Type: string',normalizedContent:'# oauthaccesstoken\ntype: "org.kestra.task.gcp.auth.oauthaccesstoken"\n\n\n> fetch an oauth access token.\n\n\n# inputs\n# scopes\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ✔️\n * default: [https://www.googleapis.com/auth/cloud-platform]\n * min items: 1\n\n> the scopes requested for the access token.\n\n\nfull list can be found here\n\ndefault is ["https://www.googleapis.com/auth/cloud-platform"]\n\n# outputs\n# accesstoken\n * type: object\n\n> a oauth access token for the current user\n\n\n# accesstoken.tokenvalue\n * type: string',charsets:{}},{title:"CreateDataset",frontmatter:{title:"CreateDataset",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"CreateDataset"},{property:"og:description",content:"CreateDataset | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.CreateDataset.html"},{name:"twitter:title",content:"CreateDataset"},{name:"twitter:description",content:"CreateDataset | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.CreateDataset.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"CreateDataset | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.CreateDataset.html",relativePath:"plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.CreateDataset.md",key:"v-495a34ed",path:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.CreateDataset.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:124},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:294},{level:3,title:"acl",slug:"acl",normalizedTitle:"acl",charIndex:303},{level:3,title:"defaultEncryptionConfiguration",slug:"defaultencryptionconfiguration",normalizedTitle:"defaultencryptionconfiguration",charIndex:420},{level:3,title:"defaultEncryptionConfiguration.kmsKeyName",slug:"defaultencryptionconfiguration-kmskeyname",normalizedTitle:"defaultencryptionconfiguration.kmskeyname",charIndex:744},{level:3,title:"defaultPartitionExpirationMs",slug:"defaultpartitionexpirationms",normalizedTitle:"defaultpartitionexpirationms",charIndex:834},{level:3,title:"defaultTableLifetime",slug:"defaulttablelifetime",normalizedTitle:"defaulttablelifetime",charIndex:1779},{level:3,title:"description",slug:"description",normalizedTitle:"description",charIndex:2611},{level:3,title:"friendlyName",slug:"friendlyname",normalizedTitle:"friendlyname",charIndex:2734},{level:3,title:"ifExists",slug:"ifexists",normalizedTitle:"ifexists",charIndex:273},{level:3,title:"labels",slug:"labels",normalizedTitle:"labels",charIndex:2961},{level:3,title:"location",slug:"location",normalizedTitle:"location",charIndex:258},{level:3,title:"name",slug:"name",normalizedTitle:"name",charIndex:239},{level:3,title:"projectId",slug:"projectid",normalizedTitle:"projectid",charIndex:3344},{level:3,title:"retryAuto",slug:"retryauto",normalizedTitle:"retryauto",charIndex:3426},{level:3,title:"retryMessages",slug:"retrymessages",normalizedTitle:"retrymessages",charIndex:3482},{level:3,title:"retryReasons",slug:"retryreasons",normalizedTitle:"retryreasons",charIndex:3731},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:3913},{level:3,title:"dataset",slug:"dataset",normalizedTitle:"dataset",charIndex:80},{level:3,title:"description",slug:"description-2",normalizedTitle:"description",charIndex:2611},{level:3,title:"friendlyName",slug:"friendlyname-2",normalizedTitle:"friendlyname",charIndex:2734},{level:3,title:"location",slug:"location-2",normalizedTitle:"location",charIndex:258},{level:3,title:"project",slug:"project",normalizedTitle:"project",charIndex:3344}],headersStr:"Examples Inputs acl defaultEncryptionConfiguration defaultEncryptionConfiguration.kmsKeyName defaultPartitionExpirationMs defaultTableLifetime description friendlyName ifExists labels location name projectId retryAuto retryMessages retryReasons Outputs dataset description friendlyName location project",content:'# CreateDataset\ntype: "org.kestra.task.gcp.bigquery.CreateDataset"\n\n\n> Create a dataset or update if it already exists.\n\n\n# Examples\n> Create a dataset if not exits\n\n\nid: "create_dataset"\ntype: "org.kestra.task.gcp.bigquery.CreateDataset"\nname: "my_dataset"\nlocation: "EU"\nifExists: "SKIP"\n\n\n# Inputs\n# acl\n * Type: array\n * SubType: object\n * Dynamic: ❓\n * Required: ❌\n\n> The dataset\'s access control configuration\n\n\n# defaultEncryptionConfiguration\n * Type: object\n * Dynamic: ❓\n * Required: ❌\n\n> The default encryption key for all tables in the dataset\n\n\nOnce this property is set, all\nnewly-created partitioned tables in the dataset will have encryption key set to this value,\nunless table creation request (or query) overrides the key.\n\n# defaultEncryptionConfiguration.kmsKeyName\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# defaultPartitionExpirationMs\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n> [Optional] The default partition expiration time for all partitioned tables in the dataset, in milliseconds\n\n\nOnce this property is set, all newly-created partitioned tables in the\ndataset will has an expirationMs property in the timePartitioning settings set to this value.\nChanging the value only affect new tables, not existing ones. The storage in a partition will\nhave an expiration time of its partition time plus this value. Setting this property\noverrides the use of defaultTableExpirationMs for partitioned tables: only one of\ndefaultTableExpirationMs and defaultPartitionExpirationMs will be used for any new\npartitioned table. If you provide an explicit timePartitioning.expirationMs when creating or\nupdating a partitioned table, that value takes precedence over the default partition\nexpiration time indicated by this property. The value may be null.\n\n# defaultTableLifetime\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n> The default lifetime of all tables in the dataset, in milliseconds\n\n\nThe minimum value is\n3600000 milliseconds (one hour). Once this property is set, all newly-created tables in the\ndataset will have an expirationTime property set to the creation time plus the value in this\nproperty, and changing the value will only affect new tables, not existing ones. When the\nexpirationTime for a given table is reached, that table will be deleted automatically. If a\ntable\'s expirationTime is modified or removed before the table expires, or if you provide an\nexplicit expirationTime when creating a table, that value takes precedence over the default\nexpiration time indicated by this property. This property is experimental and might be\nsubject to change or removed.\n\n# description\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Description\n\n\nA user-friendly description for the dataset.\n\n# friendlyName\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> A user-friendly name for the dataset\n\n\n# ifExists\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Default: ERROR\n\n> Policy to apply if a dataset already exists.\n\n\n# labels\n * Type: object\n * Dynamic: ❓\n * Required: ❌\n\n> The dataset\'s labels\n\n\n# location\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The geographic location where the dataset should reside\n\n\nThis property is experimental\nand might be subject to change or removed.\n\nSee Dataset Location\n\n# name\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The dataset\'s user-defined id\n\n\n# projectId\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The GCP project id\n\n\n# retryAuto\n * Type: ====\n * Dynamic: ❓\n * Required: ❌\n\n# retryMessages\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: [due to concurrent update]\n\n> The message that are valid for a automatic retry.\n\n\nMessage is tested as a substring of the full message and case insensitive\n\n# retryReasons\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: [rateLimitExceeded, jobBackendError]\n\n> The reason that are valid for a automatic retry.\n\n\n# Outputs\n# dataset\n * Type: string\n\n> The dataset\'s user-defined id\n\n\n# description\n * Type: string\n\n> A user-friendly description for the dataset\n\n\n# friendlyName\n * Type: string\n\n> A user-friendly name for the dataset\n\n\n# location\n * Type: string\n\n> The geographic location where the dataset should reside\n\n\nThis property is experimental\nand might be subject to change or removed.\n\nSee Dataset Location\n\n# project\n * Type: string\n\n> The GCP project id',normalizedContent:'# createdataset\ntype: "org.kestra.task.gcp.bigquery.createdataset"\n\n\n> create a dataset or update if it already exists.\n\n\n# examples\n> create a dataset if not exits\n\n\nid: "create_dataset"\ntype: "org.kestra.task.gcp.bigquery.createdataset"\nname: "my_dataset"\nlocation: "eu"\nifexists: "skip"\n\n\n# inputs\n# acl\n * type: array\n * subtype: object\n * dynamic: ❓\n * required: ❌\n\n> the dataset\'s access control configuration\n\n\n# defaultencryptionconfiguration\n * type: object\n * dynamic: ❓\n * required: ❌\n\n> the default encryption key for all tables in the dataset\n\n\nonce this property is set, all\nnewly-created partitioned tables in the dataset will have encryption key set to this value,\nunless table creation request (or query) overrides the key.\n\n# defaultencryptionconfiguration.kmskeyname\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# defaultpartitionexpirationms\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n> [optional] the default partition expiration time for all partitioned tables in the dataset, in milliseconds\n\n\nonce this property is set, all newly-created partitioned tables in the\ndataset will has an expirationms property in the timepartitioning settings set to this value.\nchanging the value only affect new tables, not existing ones. the storage in a partition will\nhave an expiration time of its partition time plus this value. setting this property\noverrides the use of defaulttableexpirationms for partitioned tables: only one of\ndefaulttableexpirationms and defaultpartitionexpirationms will be used for any new\npartitioned table. if you provide an explicit timepartitioning.expirationms when creating or\nupdating a partitioned table, that value takes precedence over the default partition\nexpiration time indicated by this property. the value may be null.\n\n# defaulttablelifetime\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n> the default lifetime of all tables in the dataset, in milliseconds\n\n\nthe minimum value is\n3600000 milliseconds (one hour). once this property is set, all newly-created tables in the\ndataset will have an expirationtime property set to the creation time plus the value in this\nproperty, and changing the value will only affect new tables, not existing ones. when the\nexpirationtime for a given table is reached, that table will be deleted automatically. if a\ntable\'s expirationtime is modified or removed before the table expires, or if you provide an\nexplicit expirationtime when creating a table, that value takes precedence over the default\nexpiration time indicated by this property. this property is experimental and might be\nsubject to change or removed.\n\n# description\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> description\n\n\na user-friendly description for the dataset.\n\n# friendlyname\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> a user-friendly name for the dataset\n\n\n# ifexists\n * type: string\n * dynamic: ❓\n * required: ❌\n * default: error\n\n> policy to apply if a dataset already exists.\n\n\n# labels\n * type: object\n * dynamic: ❓\n * required: ❌\n\n> the dataset\'s labels\n\n\n# location\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the geographic location where the dataset should reside\n\n\nthis property is experimental\nand might be subject to change or removed.\n\nsee dataset location\n\n# name\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the dataset\'s user-defined id\n\n\n# projectid\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the gcp project id\n\n\n# retryauto\n * type: ====\n * dynamic: ❓\n * required: ❌\n\n# retrymessages\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n * default: [due to concurrent update]\n\n> the message that are valid for a automatic retry.\n\n\nmessage is tested as a substring of the full message and case insensitive\n\n# retryreasons\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n * default: [ratelimitexceeded, jobbackenderror]\n\n> the reason that are valid for a automatic retry.\n\n\n# outputs\n# dataset\n * type: string\n\n> the dataset\'s user-defined id\n\n\n# description\n * type: string\n\n> a user-friendly description for the dataset\n\n\n# friendlyname\n * type: string\n\n> a user-friendly name for the dataset\n\n\n# location\n * type: string\n\n> the geographic location where the dataset should reside\n\n\nthis property is experimental\nand might be subject to change or removed.\n\nsee dataset location\n\n# project\n * type: string\n\n> the gcp project id',charsets:{}},{title:"DeleteDataset",frontmatter:{title:"DeleteDataset",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"DeleteDataset"},{property:"og:description",content:"DeleteDataset | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.DeleteDataset.html"},{name:"twitter:title",content:"DeleteDataset"},{name:"twitter:description",content:"DeleteDataset | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.DeleteDataset.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"DeleteDataset | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.DeleteDataset.html",relativePath:"plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.DeleteDataset.md",key:"v-bcd429ea",path:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.DeleteDataset.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:93},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:238},{level:3,title:"deleteContents",slug:"deletecontents",normalizedTitle:"deletecontents",charIndex:213},{level:3,title:"location",slug:"location",normalizedTitle:"location",charIndex:461},{level:3,title:"name",slug:"name",normalizedTitle:"name",charIndex:195},{level:3,title:"projectId",slug:"projectid",normalizedTitle:"projectid",charIndex:764},{level:3,title:"retryAuto",slug:"retryauto",normalizedTitle:"retryauto",charIndex:846},{level:3,title:"retryMessages",slug:"retrymessages",normalizedTitle:"retrymessages",charIndex:902},{level:3,title:"retryReasons",slug:"retryreasons",normalizedTitle:"retryreasons",charIndex:1151},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1333},{level:3,title:"dataset",slug:"dataset",normalizedTitle:"dataset",charIndex:80}],headersStr:"Examples Inputs deleteContents location name projectId retryAuto retryMessages retryReasons Outputs dataset",content:'# DeleteDataset\ntype: "org.kestra.task.gcp.bigquery.DeleteDataset"\n\n\n> Delete a dataset.\n\n\n# Examples\n> Delete a dataset\n\n\nid: "delete_dataset"\ntype: "org.kestra.task.gcp.bigquery.DeleteDataset"\nname: "my-bucket"\ndeleteContents: true\n\n\n# Inputs\n# deleteContents\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n> Whether to delete a dataset even if non-empty\n\n\nIf not provided, attempting to\ndelete a non-empty dataset will result in a exception being thrown.\n\n# location\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The geographic location where the dataset should reside\n\n\nThis property is experimental\nand might be subject to change or removed.\n\nSee Dataset Location\n\n# name\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The dataset\'s user-defined id\n\n\n# projectId\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The GCP project id\n\n\n# retryAuto\n * Type: ====\n * Dynamic: ❓\n * Required: ❌\n\n# retryMessages\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: [due to concurrent update]\n\n> The message that are valid for a automatic retry.\n\n\nMessage is tested as a substring of the full message and case insensitive\n\n# retryReasons\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: [rateLimitExceeded, jobBackendError]\n\n> The reason that are valid for a automatic retry.\n\n\n# Outputs\n# dataset\n * Type: string\n\n> The dataset\'s user-defined id',normalizedContent:'# deletedataset\ntype: "org.kestra.task.gcp.bigquery.deletedataset"\n\n\n> delete a dataset.\n\n\n# examples\n> delete a dataset\n\n\nid: "delete_dataset"\ntype: "org.kestra.task.gcp.bigquery.deletedataset"\nname: "my-bucket"\ndeletecontents: true\n\n\n# inputs\n# deletecontents\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n> whether to delete a dataset even if non-empty\n\n\nif not provided, attempting to\ndelete a non-empty dataset will result in a exception being thrown.\n\n# location\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the geographic location where the dataset should reside\n\n\nthis property is experimental\nand might be subject to change or removed.\n\nsee dataset location\n\n# name\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the dataset\'s user-defined id\n\n\n# projectid\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the gcp project id\n\n\n# retryauto\n * type: ====\n * dynamic: ❓\n * required: ❌\n\n# retrymessages\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n * default: [due to concurrent update]\n\n> the message that are valid for a automatic retry.\n\n\nmessage is tested as a substring of the full message and case insensitive\n\n# retryreasons\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n * default: [ratelimitexceeded, jobbackenderror]\n\n> the reason that are valid for a automatic retry.\n\n\n# outputs\n# dataset\n * type: string\n\n> the dataset\'s user-defined id',charsets:{}},{title:"ExtractToGcs",frontmatter:{title:"ExtractToGcs",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"ExtractToGcs"},{property:"og:description",content:"ExtractToGcs | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.ExtractToGcs.html"},{name:"twitter:title",content:"ExtractToGcs"},{name:"twitter:description",content:"ExtractToGcs | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.ExtractToGcs.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"ExtractToGcs | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.ExtractToGcs.html",relativePath:"plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.ExtractToGcs.md",key:"v-2d12e13a",path:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.ExtractToGcs.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:136},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:415},{level:3,title:"compression",slug:"compression",normalizedTitle:"compression",charIndex:424},{level:3,title:"destinationUris",slug:"destinationuris",normalizedTitle:"destinationuris",charIndex:261},{level:3,title:"fieldDelimiter",slug:"fielddelimiter",normalizedTitle:"fielddelimiter",charIndex:373},{level:3,title:"format",slug:"format",normalizedTitle:"format",charIndex:361},{level:3,title:"jobTimeoutMs",slug:"jobtimeoutms",normalizedTitle:"jobtimeoutms",charIndex:1074},{level:3,title:"labels",slug:"labels",normalizedTitle:"labels",charIndex:1255},{level:3,title:"location",slug:"location",normalizedTitle:"location",charIndex:1780},{level:3,title:"printHeader",slug:"printheader",normalizedTitle:"printheader",charIndex:393},{level:3,title:"projectId",slug:"projectid",normalizedTitle:"projectid",charIndex:2142},{level:3,title:"retryAuto",slug:"retryauto",normalizedTitle:"retryauto",charIndex:2224},{level:3,title:"retryMessages",slug:"retrymessages",normalizedTitle:"retrymessages",charIndex:2280},{level:3,title:"retryReasons",slug:"retryreasons",normalizedTitle:"retryreasons",charIndex:2529},{level:3,title:"sourceTable",slug:"sourcetable",normalizedTitle:"sourcetable",charIndex:315},{level:3,title:"useAvroLogicalTypes",slug:"useavrologicaltypes",normalizedTitle:"useavrologicaltypes",charIndex:2797},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:3242},{level:3,title:"destinationUris",slug:"destinationuris-2",normalizedTitle:"destinationuris",charIndex:261},{level:3,title:"fileCounts",slug:"filecounts",normalizedTitle:"filecounts",charIndex:3334},{level:3,title:"jobId",slug:"jobid",normalizedTitle:"jobid",charIndex:3413},{level:3,title:"sourceTable",slug:"sourcetable-2",normalizedTitle:"sourcetable",charIndex:315}],headersStr:"Examples Inputs compression destinationUris fieldDelimiter format jobTimeoutMs labels location printHeader projectId retryAuto retryMessages retryReasons sourceTable useAvroLogicalTypes Outputs destinationUris fileCounts jobId sourceTable",content:'# ExtractToGcs\ntype: "org.kestra.task.gcp.bigquery.ExtractToGcs"\n\n\n> Extract data from BigQuery table to GCS (Google Cloud Storage)\n\n\n# Examples\n> Extract a BigQuery table to a gcs bucket\n\n\nid: "extract_to_gcs"\ntype: "org.kestra.task.gcp.bigquery.ExtractToGcs"\ndestinationUris: \n  - "gs://bucket_name/filename.csv"\nsourceTable: "my_project.my_dataset.my_table"\nformat: CSV\nfieldDelimiter: \';\'\nprintHeader: true\n\n\n# Inputs\n# compression\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> the compression value to use for exported files. If not set exported files are not compressed.\n\n\n# destinationUris\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The list of fully-qualified Google Cloud Storage URIs (e.g. gs://bucket/path) where the extracted table should be written.\n\n\n# fieldDelimiter\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The delimiter to use between fields in the exported data. By default "," is used.\n\n\n# format\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The exported file format. If not set table is exported in CSV format.\n\n\n# jobTimeoutMs\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n> [Optional] Job timeout in milliseconds. If this time limit is exceeded, BigQuery may attempt to terminate the job.\n\n\n# labels\n * Type: object\n * Dynamic: ✔️\n * Required: ❌\n\n> The labels associated with this job.\n\n\nThe labels associated with this job. You can use these to organize and group your jobs. Label keys and values can be no longer than 63 characters, can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. Label values are optional. Label keys must start with a letter and each label in the list must have a different key.\nParameters:\nlabels - labels or null for none\n\n# location\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The geographic location where the dataset should reside\n\n\nThis property is experimental\nand might be subject to change or removed.\n\nSee Dataset Location\n\n# printHeader\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n> Whether to print out a header row in the results. By default an header is printed.\n\n\n# projectId\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The GCP project id\n\n\n# retryAuto\n * Type: ====\n * Dynamic: ❓\n * Required: ❌\n\n# retryMessages\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: [due to concurrent update]\n\n> The message that are valid for a automatic retry.\n\n\nMessage is tested as a substring of the full message and case insensitive\n\n# retryReasons\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: [rateLimitExceeded, jobBackendError]\n\n> The reason that are valid for a automatic retry.\n\n\n# sourceTable\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The table to export.\n\n\n# useAvroLogicalTypes\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n> [Optional] Flag if format is set to "AVRO".\n\n\n[Optional] If destinationFormat is set to "AVRO", this flag indicates whether to enable extracting applicable column types (such as TIMESTAMP) to their corresponding AVRO logical types (timestamp-micros), instead of only using their raw types (avro-long).\nParameters:\nuseAvroLogicalTypes - useAvroLogicalTypes or null for none\n\n# Outputs\n# destinationUris\n * Type: array\n * SubType: string\n\n> The destination URI file\n\n\n# fileCounts\n * Type: array\n * SubType: integer\n\n> Number of extracted files\n\n\n# jobId\n * Type: string\n\n> The job id\n\n\n# sourceTable\n * Type: string\n\n> source Table',normalizedContent:'# extracttogcs\ntype: "org.kestra.task.gcp.bigquery.extracttogcs"\n\n\n> extract data from bigquery table to gcs (google cloud storage)\n\n\n# examples\n> extract a bigquery table to a gcs bucket\n\n\nid: "extract_to_gcs"\ntype: "org.kestra.task.gcp.bigquery.extracttogcs"\ndestinationuris: \n  - "gs://bucket_name/filename.csv"\nsourcetable: "my_project.my_dataset.my_table"\nformat: csv\nfielddelimiter: \';\'\nprintheader: true\n\n\n# inputs\n# compression\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the compression value to use for exported files. if not set exported files are not compressed.\n\n\n# destinationuris\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> the list of fully-qualified google cloud storage uris (e.g. gs://bucket/path) where the extracted table should be written.\n\n\n# fielddelimiter\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the delimiter to use between fields in the exported data. by default "," is used.\n\n\n# format\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the exported file format. if not set table is exported in csv format.\n\n\n# jobtimeoutms\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n> [optional] job timeout in milliseconds. if this time limit is exceeded, bigquery may attempt to terminate the job.\n\n\n# labels\n * type: object\n * dynamic: ✔️\n * required: ❌\n\n> the labels associated with this job.\n\n\nthe labels associated with this job. you can use these to organize and group your jobs. label keys and values can be no longer than 63 characters, can only contain lowercase letters, numeric characters, underscores and dashes. international characters are allowed. label values are optional. label keys must start with a letter and each label in the list must have a different key.\nparameters:\nlabels - labels or null for none\n\n# location\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the geographic location where the dataset should reside\n\n\nthis property is experimental\nand might be subject to change or removed.\n\nsee dataset location\n\n# printheader\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n> whether to print out a header row in the results. by default an header is printed.\n\n\n# projectid\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the gcp project id\n\n\n# retryauto\n * type: ====\n * dynamic: ❓\n * required: ❌\n\n# retrymessages\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n * default: [due to concurrent update]\n\n> the message that are valid for a automatic retry.\n\n\nmessage is tested as a substring of the full message and case insensitive\n\n# retryreasons\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n * default: [ratelimitexceeded, jobbackenderror]\n\n> the reason that are valid for a automatic retry.\n\n\n# sourcetable\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the table to export.\n\n\n# useavrologicaltypes\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n> [optional] flag if format is set to "avro".\n\n\n[optional] if destinationformat is set to "avro", this flag indicates whether to enable extracting applicable column types (such as timestamp) to their corresponding avro logical types (timestamp-micros), instead of only using their raw types (avro-long).\nparameters:\nuseavrologicaltypes - useavrologicaltypes or null for none\n\n# outputs\n# destinationuris\n * type: array\n * subtype: string\n\n> the destination uri file\n\n\n# filecounts\n * type: array\n * subtype: integer\n\n> number of extracted files\n\n\n# jobid\n * type: string\n\n> the job id\n\n\n# sourcetable\n * type: string\n\n> source table',charsets:{}},{title:"Load",frontmatter:{title:"Load",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Load"},{property:"og:description",content:"Load | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.Load.html"},{name:"twitter:title",content:"Load"},{name:"twitter:description",content:"Load | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.Load.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Load | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.Load.html",relativePath:"plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.Load.md",key:"v-6ca79c83",path:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.Load.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:95},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:324},{level:3,title:"autodetect",slug:"autodetect",normalizedTitle:"autodetect",charIndex:333},{level:3,title:"avroOptions",slug:"avrooptions",normalizedTitle:"avrooptions",charIndex:483},{level:3,title:"avroOptions.useAvroLogicalTypes",slug:"avrooptions-useavrologicaltypes",normalizedTitle:"avrooptions.useavrologicaltypes",charIndex:568},{level:3,title:"clusteringFields",slug:"clusteringfields",normalizedTitle:"clusteringfields",charIndex:850},{level:3,title:"createDisposition",slug:"createdisposition",normalizedTitle:"createdisposition",charIndex:993},{level:3,title:"csvOptions",slug:"csvoptions",normalizedTitle:"csvoptions",charIndex:286},{level:3,title:"csvOptions.allowJaggedRows",slug:"csvoptions-allowjaggedrows",normalizedTitle:"csvoptions.allowjaggedrows",charIndex:1190},{level:3,title:"csvOptions.allowQuotedNewLines",slug:"csvoptions-allowquotednewlines",normalizedTitle:"csvoptions.allowquotednewlines",charIndex:1663},{level:3,title:"csvOptions.encoding",slug:"csvoptions-encoding",normalizedTitle:"csvoptions.encoding",charIndex:1889},{level:3,title:"csvOptions.fieldDelimiter",slug:"csvoptions-fielddelimiter",normalizedTitle:"csvoptions.fielddelimiter",charIndex:2230},{level:3,title:"csvOptions.quote",slug:"csvoptions-quote",normalizedTitle:"csvoptions.quote",charIndex:2609},{level:3,title:"csvOptions.skipLeadingRows",slug:"csvoptions-skipleadingrows",normalizedTitle:"csvoptions.skipleadingrows",charIndex:3155},{level:3,title:"destinationTable",slug:"destinationtable",normalizedTitle:"destinationtable",charIndex:223},{level:3,title:"format",slug:"format",normalizedTitle:"format",charIndex:274},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:63},{level:3,title:"ignoreUnknownValues",slug:"ignoreunknownvalues",normalizedTitle:"ignoreunknownvalues",charIndex:3826},{level:3,title:"location",slug:"location",normalizedTitle:"location",charIndex:4222},{level:3,title:"maxBadRecords",slug:"maxbadrecords",normalizedTitle:"maxbadrecords",charIndex:4436},{level:3,title:"projectId",slug:"projectid",normalizedTitle:"projectid",charIndex:4718},{level:3,title:"retryAuto",slug:"retryauto",normalizedTitle:"retryauto",charIndex:4800},{level:3,title:"retryMessages",slug:"retrymessages",normalizedTitle:"retrymessages",charIndex:4856},{level:3,title:"retryReasons",slug:"retryreasons",normalizedTitle:"retryreasons",charIndex:5105},{level:3,title:"schema",slug:"schema",normalizedTitle:"schema",charIndex:447},{level:3,title:"schemaUpdateOptions",slug:"schemaupdateoptions",normalizedTitle:"schemaupdateoptions",charIndex:5553},{level:3,title:"timePartitioningField",slug:"timepartitioningfield",normalizedTitle:"timepartitioningfield",charIndex:6045},{level:3,title:"writeDisposition",slug:"writedisposition",normalizedTitle:"writedisposition",charIndex:5812},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:6320},{level:3,title:"destinationTable",slug:"destinationtable-2",normalizedTitle:"destinationtable",charIndex:223},{level:3,title:"jobId",slug:"jobid",normalizedTitle:"jobid",charIndex:6388},{level:3,title:"rows",slug:"rows",normalizedTitle:"rows",charIndex:1298}],headersStr:"Examples Inputs autodetect avroOptions avroOptions.useAvroLogicalTypes clusteringFields createDisposition csvOptions csvOptions.allowJaggedRows csvOptions.allowQuotedNewLines csvOptions.encoding csvOptions.fieldDelimiter csvOptions.quote csvOptions.skipLeadingRows destinationTable format from ignoreUnknownValues location maxBadRecords projectId retryAuto retryMessages retryReasons schema schemaUpdateOptions timePartitioningField writeDisposition Outputs destinationTable jobId rows",content:'# Load\ntype: "org.kestra.task.gcp.bigquery.Load"\n\n\n> Load data from local file to BigQuery\n\n\n# Examples\n> Load an csv file from an input file\n\n\nid: "load"\ntype: "org.kestra.task.gcp.bigquery.Load"\nfrom: "{{ inputs.file }}"\ndestinationTable: "my_project.my_dataset.my_table"\nformat: CSV\ncsvOptions:\n  fieldDelimiter: ";"\n\n\n# Inputs\n# autodetect\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n\n> [Experimental] Automatic inference of the options and schema for CSV and JSON sources\n\n\n# avroOptions\n * Type: object\n * Dynamic: ❓\n * Required: ❌\n\n> Avro parsing options\n\n\n# avroOptions.useAvroLogicalTypes\n * Type: boolean\n * Dynamic: ✔️\n * Required: ❌\n\n> If Format option is set to AVRO, you can interpret logical types into their corresponding\ntypes (such as TIMESTAMP) instead of only using their raw types (such as INTEGER)\n\n\nThe value may be null.\n\n# clusteringFields\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The clustering specification for the destination table\n\n\n# createDisposition\n * Type: string\n * Dynamic: ❌\n * Required: ❌\n\n> Whether the job is allowed to create tables\n\n\n# csvOptions\n * Type: object\n * Dynamic: ❓\n * Required: ❌\n\n> Csv parsing options\n\n\n# csvOptions.allowJaggedRows\n * Type: boolean\n * Dynamic: ✔️\n * Required: ❌\n\n> Whether BigQuery should accept rows that are missing trailing optional columns\n\n\nIf true, BigQuery treats missing trailing columns as null values. If {@code false}, records\nwith missing trailing columns are treated as bad records, and if there are too many bad\nrecords, an invalid error is returned in the job result. By default, rows with missing\ntrailing columns are considered bad records.\n\n# csvOptions.allowQuotedNewLines\n * Type: boolean\n * Dynamic: ✔️\n * Required: ❌\n\n> Whether BigQuery should allow quoted data sections that contain newline characters in a CSV file\n\n\nBy default quoted newline are not allowed.\n\n# csvOptions.encoding\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The character encoding of the data\n\n\nThe supported values are UTF-8 or ISO-8859-1. The\ndefault value is UTF-8. BigQuery decodes the data after the raw, binary data has been split\nusing the values set in {@link #setQuote(String)} and {@link #setFieldDelimiter(String)}.\n\n# csvOptions.fieldDelimiter\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The separator for fields in a CSV file\n\n\nBigQuery converts the string to ISO-8859-1\nencoding, and then uses the first byte of the encoded string to split the data in its raw,\nbinary state. BigQuery also supports the escape sequence "\\t" to specify a tab separator. The\ndefault value is a comma (\',\').\n\n# csvOptions.quote\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The value that is used to quote data sections in a CSV file\n\n\nBigQuery converts the\nstring to ISO-8859-1 encoding, and then uses the first byte of the encoded string to split\nthe data in its raw, binary state. The default value is a double-quote (\'"\'). If your data\ndoes not contain quoted sections, set the property value to an empty string. If your data\ncontains quoted newline characters, you must also set {@link\n#setAllowQuotedNewLines(boolean)} property to {@code true}.\n\n# csvOptions.skipLeadingRows\n * Type: integer\n * Dynamic: ✔️\n * Required: ❌\n\n> The number of rows at the top of a CSV file that BigQuery will skip when reading the data\n\n\nThe default value is 0. This property is useful if you have header rows in the file\nthat should be skipped.\n\n# destinationTable\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The table where to put query results\n\n\nIf not provided a new table is created.\n\n# format\n * Type: string\n * Dynamic: ❌\n * Required: ❌\n\n> The source format, and possibly some parsing options, of the external data\n\n\n# from\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The fully-qualified URIs that point to source data\n\n\n# ignoreUnknownValues\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n\n> Whether BigQuery should allow extra values that are not represented in the table schema\n\n\nIf true, the extra values are ignored. If false, records with extra columns\nare treated as bad records, and if there are too many bad records, an invalid error is\nreturned in the job result. By default unknown values are not allowed.\n\n# location\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The geographic location where the dataset should reside\n\n\nThis property is experimental\nand might be subject to change or removed.\n\nSee Dataset Location\n\n# maxBadRecords\n * Type: integer\n * Dynamic: ❌\n * Required: ❌\n\n> The maximum number of bad records that BigQuery can ignore when running the job\n\n\nIf the number of bad records exceeds this value, an invalid error is returned in the job result.\nBy default no bad record is ignored.\n\n# projectId\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The GCP project id\n\n\n# retryAuto\n * Type: ====\n * Dynamic: ❓\n * Required: ❌\n\n# retryMessages\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: [due to concurrent update]\n\n> The message that are valid for a automatic retry.\n\n\nMessage is tested as a substring of the full message and case insensitive\n\n# retryReasons\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: [rateLimitExceeded, jobBackendError]\n\n> The reason that are valid for a automatic retry.\n\n\n# schema\n * Type: object\n * Dynamic: ❌\n * Required: ❌\n\n> The schema for the destination table\n\n\nThe schema can be omitted if the destination table\nalready exists, or if you\'re loading data from a Google Cloud Datastore backup (i.e.\nDATASTORE_BACKUP format option).\n\n# schemaUpdateOptions\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> [Experimental] Options allowing the schema of the destination table to be updated as a side effect of the query job\n\n\nSchema update options are supported in two cases: when\nwriteDisposition is WRITE_APPEND; when writeDisposition is WRITE_TRUNCATE and the destination\ntable is a partition of a table, specified by partition decorators. For normal tables,\nWRITE_TRUNCATE will always overwrite the schema.\n\n# timePartitioningField\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The time partitioning specification for the destination table\n\n\n# writeDisposition\n * Type: string\n * Dynamic: ❌\n * Required: ❌\n\n> The action that should occur if the destination table already exists\n\n\n# Outputs\n# destinationTable\n * Type: string\n\n> Destination table\n\n\n# jobId\n * Type: string\n\n> The job id\n\n\n# rows\n * Type: integer\n\n> Output rows count',normalizedContent:'# load\ntype: "org.kestra.task.gcp.bigquery.load"\n\n\n> load data from local file to bigquery\n\n\n# examples\n> load an csv file from an input file\n\n\nid: "load"\ntype: "org.kestra.task.gcp.bigquery.load"\nfrom: "{{ inputs.file }}"\ndestinationtable: "my_project.my_dataset.my_table"\nformat: csv\ncsvoptions:\n  fielddelimiter: ";"\n\n\n# inputs\n# autodetect\n * type: boolean\n * dynamic: ❌\n * required: ❌\n\n> [experimental] automatic inference of the options and schema for csv and json sources\n\n\n# avrooptions\n * type: object\n * dynamic: ❓\n * required: ❌\n\n> avro parsing options\n\n\n# avrooptions.useavrologicaltypes\n * type: boolean\n * dynamic: ✔️\n * required: ❌\n\n> if format option is set to avro, you can interpret logical types into their corresponding\ntypes (such as timestamp) instead of only using their raw types (such as integer)\n\n\nthe value may be null.\n\n# clusteringfields\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> the clustering specification for the destination table\n\n\n# createdisposition\n * type: string\n * dynamic: ❌\n * required: ❌\n\n> whether the job is allowed to create tables\n\n\n# csvoptions\n * type: object\n * dynamic: ❓\n * required: ❌\n\n> csv parsing options\n\n\n# csvoptions.allowjaggedrows\n * type: boolean\n * dynamic: ✔️\n * required: ❌\n\n> whether bigquery should accept rows that are missing trailing optional columns\n\n\nif true, bigquery treats missing trailing columns as null values. if {@code false}, records\nwith missing trailing columns are treated as bad records, and if there are too many bad\nrecords, an invalid error is returned in the job result. by default, rows with missing\ntrailing columns are considered bad records.\n\n# csvoptions.allowquotednewlines\n * type: boolean\n * dynamic: ✔️\n * required: ❌\n\n> whether bigquery should allow quoted data sections that contain newline characters in a csv file\n\n\nby default quoted newline are not allowed.\n\n# csvoptions.encoding\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the character encoding of the data\n\n\nthe supported values are utf-8 or iso-8859-1. the\ndefault value is utf-8. bigquery decodes the data after the raw, binary data has been split\nusing the values set in {@link #setquote(string)} and {@link #setfielddelimiter(string)}.\n\n# csvoptions.fielddelimiter\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the separator for fields in a csv file\n\n\nbigquery converts the string to iso-8859-1\nencoding, and then uses the first byte of the encoded string to split the data in its raw,\nbinary state. bigquery also supports the escape sequence "\\t" to specify a tab separator. the\ndefault value is a comma (\',\').\n\n# csvoptions.quote\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the value that is used to quote data sections in a csv file\n\n\nbigquery converts the\nstring to iso-8859-1 encoding, and then uses the first byte of the encoded string to split\nthe data in its raw, binary state. the default value is a double-quote (\'"\'). if your data\ndoes not contain quoted sections, set the property value to an empty string. if your data\ncontains quoted newline characters, you must also set {@link\n#setallowquotednewlines(boolean)} property to {@code true}.\n\n# csvoptions.skipleadingrows\n * type: integer\n * dynamic: ✔️\n * required: ❌\n\n> the number of rows at the top of a csv file that bigquery will skip when reading the data\n\n\nthe default value is 0. this property is useful if you have header rows in the file\nthat should be skipped.\n\n# destinationtable\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the table where to put query results\n\n\nif not provided a new table is created.\n\n# format\n * type: string\n * dynamic: ❌\n * required: ❌\n\n> the source format, and possibly some parsing options, of the external data\n\n\n# from\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the fully-qualified uris that point to source data\n\n\n# ignoreunknownvalues\n * type: boolean\n * dynamic: ❌\n * required: ❌\n\n> whether bigquery should allow extra values that are not represented in the table schema\n\n\nif true, the extra values are ignored. if false, records with extra columns\nare treated as bad records, and if there are too many bad records, an invalid error is\nreturned in the job result. by default unknown values are not allowed.\n\n# location\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the geographic location where the dataset should reside\n\n\nthis property is experimental\nand might be subject to change or removed.\n\nsee dataset location\n\n# maxbadrecords\n * type: integer\n * dynamic: ❌\n * required: ❌\n\n> the maximum number of bad records that bigquery can ignore when running the job\n\n\nif the number of bad records exceeds this value, an invalid error is returned in the job result.\nby default no bad record is ignored.\n\n# projectid\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the gcp project id\n\n\n# retryauto\n * type: ====\n * dynamic: ❓\n * required: ❌\n\n# retrymessages\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n * default: [due to concurrent update]\n\n> the message that are valid for a automatic retry.\n\n\nmessage is tested as a substring of the full message and case insensitive\n\n# retryreasons\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n * default: [ratelimitexceeded, jobbackenderror]\n\n> the reason that are valid for a automatic retry.\n\n\n# schema\n * type: object\n * dynamic: ❌\n * required: ❌\n\n> the schema for the destination table\n\n\nthe schema can be omitted if the destination table\nalready exists, or if you\'re loading data from a google cloud datastore backup (i.e.\ndatastore_backup format option).\n\n# schemaupdateoptions\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> [experimental] options allowing the schema of the destination table to be updated as a side effect of the query job\n\n\nschema update options are supported in two cases: when\nwritedisposition is write_append; when writedisposition is write_truncate and the destination\ntable is a partition of a table, specified by partition decorators. for normal tables,\nwrite_truncate will always overwrite the schema.\n\n# timepartitioningfield\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the time partitioning specification for the destination table\n\n\n# writedisposition\n * type: string\n * dynamic: ❌\n * required: ❌\n\n> the action that should occur if the destination table already exists\n\n\n# outputs\n# destinationtable\n * type: string\n\n> destination table\n\n\n# jobid\n * type: string\n\n> the job id\n\n\n# rows\n * type: integer\n\n> output rows count',charsets:{}},{title:"LoadFromGcs",frontmatter:{title:"LoadFromGcs",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"LoadFromGcs"},{property:"og:description",content:"LoadFromGcs | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.LoadFromGcs.html"},{name:"twitter:title",content:"LoadFromGcs"},{name:"twitter:description",content:"LoadFromGcs | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.LoadFromGcs.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"LoadFromGcs | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.LoadFromGcs.html",relativePath:"plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.LoadFromGcs.md",key:"v-5fe87717",path:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.LoadFromGcs.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:125},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:390},{level:3,title:"autodetect",slug:"autodetect",normalizedTitle:"autodetect",charIndex:399},{level:3,title:"avroOptions",slug:"avrooptions",normalizedTitle:"avrooptions",charIndex:345},{level:3,title:"avroOptions.useAvroLogicalTypes",slug:"avrooptions-useavrologicaltypes",normalizedTitle:"avrooptions.useavrologicaltypes",charIndex:634},{level:3,title:"clusteringFields",slug:"clusteringfields",normalizedTitle:"clusteringfields",charIndex:916},{level:3,title:"createDisposition",slug:"createdisposition",normalizedTitle:"createdisposition",charIndex:1059},{level:3,title:"csvOptions",slug:"csvoptions",normalizedTitle:"csvoptions",charIndex:1173},{level:3,title:"csvOptions.allowJaggedRows",slug:"csvoptions-allowjaggedrows",normalizedTitle:"csvoptions.allowjaggedrows",charIndex:1256},{level:3,title:"csvOptions.allowQuotedNewLines",slug:"csvoptions-allowquotednewlines",normalizedTitle:"csvoptions.allowquotednewlines",charIndex:1729},{level:3,title:"csvOptions.encoding",slug:"csvoptions-encoding",normalizedTitle:"csvoptions.encoding",charIndex:1955},{level:3,title:"csvOptions.fieldDelimiter",slug:"csvoptions-fielddelimiter",normalizedTitle:"csvoptions.fielddelimiter",charIndex:2296},{level:3,title:"csvOptions.quote",slug:"csvoptions-quote",normalizedTitle:"csvoptions.quote",charIndex:2675},{level:3,title:"csvOptions.skipLeadingRows",slug:"csvoptions-skipleadingrows",normalizedTitle:"csvoptions.skipleadingrows",charIndex:3221},{level:3,title:"destinationTable",slug:"destinationtable",normalizedTitle:"destinationtable",charIndex:281},{level:3,title:"format",slug:"format",normalizedTitle:"format",charIndex:332},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:77},{level:3,title:"ignoreUnknownValues",slug:"ignoreunknownvalues",normalizedTitle:"ignoreunknownvalues",charIndex:4083},{level:3,title:"location",slug:"location",normalizedTitle:"location",charIndex:4479},{level:3,title:"maxBadRecords",slug:"maxbadrecords",normalizedTitle:"maxbadrecords",charIndex:4693},{level:3,title:"projectId",slug:"projectid",normalizedTitle:"projectid",charIndex:4975},{level:3,title:"retryAuto",slug:"retryauto",normalizedTitle:"retryauto",charIndex:5057},{level:3,title:"retryMessages",slug:"retrymessages",normalizedTitle:"retrymessages",charIndex:5113},{level:3,title:"retryReasons",slug:"retryreasons",normalizedTitle:"retryreasons",charIndex:5362},{level:3,title:"schema",slug:"schema",normalizedTitle:"schema",charIndex:513},{level:3,title:"schemaUpdateOptions",slug:"schemaupdateoptions",normalizedTitle:"schemaupdateoptions",charIndex:5810},{level:3,title:"timePartitioningField",slug:"timepartitioningfield",normalizedTitle:"timepartitioningfield",charIndex:6302},{level:3,title:"writeDisposition",slug:"writedisposition",normalizedTitle:"writedisposition",charIndex:6069},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:6577},{level:3,title:"destinationTable",slug:"destinationtable-2",normalizedTitle:"destinationtable",charIndex:281},{level:3,title:"jobId",slug:"jobid",normalizedTitle:"jobid",charIndex:6645},{level:3,title:"rows",slug:"rows",normalizedTitle:"rows",charIndex:1364}],headersStr:"Examples Inputs autodetect avroOptions avroOptions.useAvroLogicalTypes clusteringFields createDisposition csvOptions csvOptions.allowJaggedRows csvOptions.allowQuotedNewLines csvOptions.encoding csvOptions.fieldDelimiter csvOptions.quote csvOptions.skipLeadingRows destinationTable format from ignoreUnknownValues location maxBadRecords projectId retryAuto retryMessages retryReasons schema schemaUpdateOptions timePartitioningField writeDisposition Outputs destinationTable jobId rows",content:'# LoadFromGcs\ntype: "org.kestra.task.gcp.bigquery.LoadFromGcs"\n\n\n> Load data from GCS (Google Cloud Storage) to BigQuery\n\n\n# Examples\n> Load an avro file from a gcs bucket\n\n\nid: "load_from_gcs"\ntype: "org.kestra.task.gcp.bigquery.LoadFromGcs"\nfrom:\n  - "{{ outputs.avro-to-gcs }}"\ndestinationTable: "my_project.my_dataset.my_table"\nformat: AVRO\navroOptions:\n  useAvroLogicalTypes: true\n\n\n# Inputs\n# autodetect\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n\n> [Experimental] Automatic inference of the options and schema for CSV and JSON sources\n\n\n# avroOptions\n * Type: object\n * Dynamic: ❓\n * Required: ❌\n\n> Avro parsing options\n\n\n# avroOptions.useAvroLogicalTypes\n * Type: boolean\n * Dynamic: ✔️\n * Required: ❌\n\n> If Format option is set to AVRO, you can interpret logical types into their corresponding\ntypes (such as TIMESTAMP) instead of only using their raw types (such as INTEGER)\n\n\nThe value may be null.\n\n# clusteringFields\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The clustering specification for the destination table\n\n\n# createDisposition\n * Type: string\n * Dynamic: ❌\n * Required: ❌\n\n> Whether the job is allowed to create tables\n\n\n# csvOptions\n * Type: object\n * Dynamic: ❓\n * Required: ❌\n\n> Csv parsing options\n\n\n# csvOptions.allowJaggedRows\n * Type: boolean\n * Dynamic: ✔️\n * Required: ❌\n\n> Whether BigQuery should accept rows that are missing trailing optional columns\n\n\nIf true, BigQuery treats missing trailing columns as null values. If {@code false}, records\nwith missing trailing columns are treated as bad records, and if there are too many bad\nrecords, an invalid error is returned in the job result. By default, rows with missing\ntrailing columns are considered bad records.\n\n# csvOptions.allowQuotedNewLines\n * Type: boolean\n * Dynamic: ✔️\n * Required: ❌\n\n> Whether BigQuery should allow quoted data sections that contain newline characters in a CSV file\n\n\nBy default quoted newline are not allowed.\n\n# csvOptions.encoding\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The character encoding of the data\n\n\nThe supported values are UTF-8 or ISO-8859-1. The\ndefault value is UTF-8. BigQuery decodes the data after the raw, binary data has been split\nusing the values set in {@link #setQuote(String)} and {@link #setFieldDelimiter(String)}.\n\n# csvOptions.fieldDelimiter\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The separator for fields in a CSV file\n\n\nBigQuery converts the string to ISO-8859-1\nencoding, and then uses the first byte of the encoded string to split the data in its raw,\nbinary state. BigQuery also supports the escape sequence "\\t" to specify a tab separator. The\ndefault value is a comma (\',\').\n\n# csvOptions.quote\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The value that is used to quote data sections in a CSV file\n\n\nBigQuery converts the\nstring to ISO-8859-1 encoding, and then uses the first byte of the encoded string to split\nthe data in its raw, binary state. The default value is a double-quote (\'"\'). If your data\ndoes not contain quoted sections, set the property value to an empty string. If your data\ncontains quoted newline characters, you must also set {@link\n#setAllowQuotedNewLines(boolean)} property to {@code true}.\n\n# csvOptions.skipLeadingRows\n * Type: integer\n * Dynamic: ✔️\n * Required: ❌\n\n> The number of rows at the top of a CSV file that BigQuery will skip when reading the data\n\n\nThe default value is 0. This property is useful if you have header rows in the file\nthat should be skipped.\n\n# destinationTable\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The table where to put query results\n\n\nIf not provided a new table is created.\n\n# format\n * Type: string\n * Dynamic: ❌\n * Required: ❌\n\n> The source format, and possibly some parsing options, of the external data\n\n\n# from\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Google Cloud Storage source data\n\n\nThe fully-qualified URIs that point to source data in Google Cloud Storage (e.g.\ngs://bucket/path). Each URI can contain one \'*\' wildcard character and it must come after the\n\'bucket\' name.\n\n# ignoreUnknownValues\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n\n> Whether BigQuery should allow extra values that are not represented in the table schema\n\n\nIf true, the extra values are ignored. If false, records with extra columns\nare treated as bad records, and if there are too many bad records, an invalid error is\nreturned in the job result. By default unknown values are not allowed.\n\n# location\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The geographic location where the dataset should reside\n\n\nThis property is experimental\nand might be subject to change or removed.\n\nSee Dataset Location\n\n# maxBadRecords\n * Type: integer\n * Dynamic: ❌\n * Required: ❌\n\n> The maximum number of bad records that BigQuery can ignore when running the job\n\n\nIf the number of bad records exceeds this value, an invalid error is returned in the job result.\nBy default no bad record is ignored.\n\n# projectId\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The GCP project id\n\n\n# retryAuto\n * Type: ====\n * Dynamic: ❓\n * Required: ❌\n\n# retryMessages\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: [due to concurrent update]\n\n> The message that are valid for a automatic retry.\n\n\nMessage is tested as a substring of the full message and case insensitive\n\n# retryReasons\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: [rateLimitExceeded, jobBackendError]\n\n> The reason that are valid for a automatic retry.\n\n\n# schema\n * Type: object\n * Dynamic: ❌\n * Required: ❌\n\n> The schema for the destination table\n\n\nThe schema can be omitted if the destination table\nalready exists, or if you\'re loading data from a Google Cloud Datastore backup (i.e.\nDATASTORE_BACKUP format option).\n\n# schemaUpdateOptions\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> [Experimental] Options allowing the schema of the destination table to be updated as a side effect of the query job\n\n\nSchema update options are supported in two cases: when\nwriteDisposition is WRITE_APPEND; when writeDisposition is WRITE_TRUNCATE and the destination\ntable is a partition of a table, specified by partition decorators. For normal tables,\nWRITE_TRUNCATE will always overwrite the schema.\n\n# timePartitioningField\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The time partitioning specification for the destination table\n\n\n# writeDisposition\n * Type: string\n * Dynamic: ❌\n * Required: ❌\n\n> The action that should occur if the destination table already exists\n\n\n# Outputs\n# destinationTable\n * Type: string\n\n> Destination table\n\n\n# jobId\n * Type: string\n\n> The job id\n\n\n# rows\n * Type: integer\n\n> Output rows count',normalizedContent:'# loadfromgcs\ntype: "org.kestra.task.gcp.bigquery.loadfromgcs"\n\n\n> load data from gcs (google cloud storage) to bigquery\n\n\n# examples\n> load an avro file from a gcs bucket\n\n\nid: "load_from_gcs"\ntype: "org.kestra.task.gcp.bigquery.loadfromgcs"\nfrom:\n  - "{{ outputs.avro-to-gcs }}"\ndestinationtable: "my_project.my_dataset.my_table"\nformat: avro\navrooptions:\n  useavrologicaltypes: true\n\n\n# inputs\n# autodetect\n * type: boolean\n * dynamic: ❌\n * required: ❌\n\n> [experimental] automatic inference of the options and schema for csv and json sources\n\n\n# avrooptions\n * type: object\n * dynamic: ❓\n * required: ❌\n\n> avro parsing options\n\n\n# avrooptions.useavrologicaltypes\n * type: boolean\n * dynamic: ✔️\n * required: ❌\n\n> if format option is set to avro, you can interpret logical types into their corresponding\ntypes (such as timestamp) instead of only using their raw types (such as integer)\n\n\nthe value may be null.\n\n# clusteringfields\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> the clustering specification for the destination table\n\n\n# createdisposition\n * type: string\n * dynamic: ❌\n * required: ❌\n\n> whether the job is allowed to create tables\n\n\n# csvoptions\n * type: object\n * dynamic: ❓\n * required: ❌\n\n> csv parsing options\n\n\n# csvoptions.allowjaggedrows\n * type: boolean\n * dynamic: ✔️\n * required: ❌\n\n> whether bigquery should accept rows that are missing trailing optional columns\n\n\nif true, bigquery treats missing trailing columns as null values. if {@code false}, records\nwith missing trailing columns are treated as bad records, and if there are too many bad\nrecords, an invalid error is returned in the job result. by default, rows with missing\ntrailing columns are considered bad records.\n\n# csvoptions.allowquotednewlines\n * type: boolean\n * dynamic: ✔️\n * required: ❌\n\n> whether bigquery should allow quoted data sections that contain newline characters in a csv file\n\n\nby default quoted newline are not allowed.\n\n# csvoptions.encoding\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the character encoding of the data\n\n\nthe supported values are utf-8 or iso-8859-1. the\ndefault value is utf-8. bigquery decodes the data after the raw, binary data has been split\nusing the values set in {@link #setquote(string)} and {@link #setfielddelimiter(string)}.\n\n# csvoptions.fielddelimiter\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the separator for fields in a csv file\n\n\nbigquery converts the string to iso-8859-1\nencoding, and then uses the first byte of the encoded string to split the data in its raw,\nbinary state. bigquery also supports the escape sequence "\\t" to specify a tab separator. the\ndefault value is a comma (\',\').\n\n# csvoptions.quote\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the value that is used to quote data sections in a csv file\n\n\nbigquery converts the\nstring to iso-8859-1 encoding, and then uses the first byte of the encoded string to split\nthe data in its raw, binary state. the default value is a double-quote (\'"\'). if your data\ndoes not contain quoted sections, set the property value to an empty string. if your data\ncontains quoted newline characters, you must also set {@link\n#setallowquotednewlines(boolean)} property to {@code true}.\n\n# csvoptions.skipleadingrows\n * type: integer\n * dynamic: ✔️\n * required: ❌\n\n> the number of rows at the top of a csv file that bigquery will skip when reading the data\n\n\nthe default value is 0. this property is useful if you have header rows in the file\nthat should be skipped.\n\n# destinationtable\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the table where to put query results\n\n\nif not provided a new table is created.\n\n# format\n * type: string\n * dynamic: ❌\n * required: ❌\n\n> the source format, and possibly some parsing options, of the external data\n\n\n# from\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> google cloud storage source data\n\n\nthe fully-qualified uris that point to source data in google cloud storage (e.g.\ngs://bucket/path). each uri can contain one \'*\' wildcard character and it must come after the\n\'bucket\' name.\n\n# ignoreunknownvalues\n * type: boolean\n * dynamic: ❌\n * required: ❌\n\n> whether bigquery should allow extra values that are not represented in the table schema\n\n\nif true, the extra values are ignored. if false, records with extra columns\nare treated as bad records, and if there are too many bad records, an invalid error is\nreturned in the job result. by default unknown values are not allowed.\n\n# location\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the geographic location where the dataset should reside\n\n\nthis property is experimental\nand might be subject to change or removed.\n\nsee dataset location\n\n# maxbadrecords\n * type: integer\n * dynamic: ❌\n * required: ❌\n\n> the maximum number of bad records that bigquery can ignore when running the job\n\n\nif the number of bad records exceeds this value, an invalid error is returned in the job result.\nby default no bad record is ignored.\n\n# projectid\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the gcp project id\n\n\n# retryauto\n * type: ====\n * dynamic: ❓\n * required: ❌\n\n# retrymessages\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n * default: [due to concurrent update]\n\n> the message that are valid for a automatic retry.\n\n\nmessage is tested as a substring of the full message and case insensitive\n\n# retryreasons\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n * default: [ratelimitexceeded, jobbackenderror]\n\n> the reason that are valid for a automatic retry.\n\n\n# schema\n * type: object\n * dynamic: ❌\n * required: ❌\n\n> the schema for the destination table\n\n\nthe schema can be omitted if the destination table\nalready exists, or if you\'re loading data from a google cloud datastore backup (i.e.\ndatastore_backup format option).\n\n# schemaupdateoptions\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> [experimental] options allowing the schema of the destination table to be updated as a side effect of the query job\n\n\nschema update options are supported in two cases: when\nwritedisposition is write_append; when writedisposition is write_truncate and the destination\ntable is a partition of a table, specified by partition decorators. for normal tables,\nwrite_truncate will always overwrite the schema.\n\n# timepartitioningfield\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the time partitioning specification for the destination table\n\n\n# writedisposition\n * type: string\n * dynamic: ❌\n * required: ❌\n\n> the action that should occur if the destination table already exists\n\n\n# outputs\n# destinationtable\n * type: string\n\n> destination table\n\n\n# jobid\n * type: string\n\n> the job id\n\n\n# rows\n * type: integer\n\n> output rows count',charsets:{}},{title:"Query",frontmatter:{title:"Query",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Query"},{property:"og:description",content:"Query | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.Query.html"},{name:"twitter:title",content:"Query"},{name:"twitter:description",content:"Query | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.Query.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Query | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.Query.html",relativePath:"plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.Query.md",key:"v-8568b3d6",path:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.Query.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:118},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:1220},{level:3,title:"clusteringFields",slug:"clusteringfields",normalizedTitle:"clusteringfields",charIndex:1229},{level:3,title:"createDisposition",slug:"createdisposition",normalizedTitle:"createdisposition",charIndex:1372},{level:3,title:"destinationTable",slug:"destinationtable",normalizedTitle:"destinationtable",charIndex:221},{level:3,title:"fetch",slug:"fetch",normalizedTitle:"fetch",charIndex:839},{level:3,title:"fetchOne",slug:"fetchone",normalizedTitle:"fetchone",charIndex:1762},{level:3,title:"legacySql",slug:"legacysql",normalizedTitle:"legacysql",charIndex:1901},{level:3,title:"location",slug:"location",normalizedTitle:"location",charIndex:2068},{level:3,title:"projectId",slug:"projectid",normalizedTitle:"projectid",charIndex:2282},{level:3,title:"retryAuto",slug:"retryauto",normalizedTitle:"retryauto",charIndex:2364},{level:3,title:"retryMessages",slug:"retrymessages",normalizedTitle:"retrymessages",charIndex:2420},{level:3,title:"retryReasons",slug:"retryreasons",normalizedTitle:"retryreasons",charIndex:2669},{level:3,title:"schemaUpdateOptions",slug:"schemaupdateoptions",normalizedTitle:"schemaupdateoptions",charIndex:2851},{level:3,title:"sql",slug:"sql",normalizedTitle:"sql",charIndex:303},{level:3,title:"store",slug:"store",normalizedTitle:"store",charIndex:3422},{level:3,title:"timePartitioningField",slug:"timepartitioningfield",normalizedTitle:"timepartitioningfield",charIndex:3563},{level:3,title:"writeDisposition",slug:"writedisposition",normalizedTitle:"writedisposition",charIndex:272},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:3839},{level:3,title:"jobId",slug:"jobid",normalizedTitle:"jobid",charIndex:3849},{level:3,title:"row",slug:"row",normalizedTitle:"row",charIndex:1149},{level:3,title:"rows",slug:"rows",normalizedTitle:"rows",charIndex:1149},{level:3,title:"size",slug:"size",normalizedTitle:"size",charIndex:4149},{level:3,title:"uri",slug:"uri",normalizedTitle:"uri",charIndex:4272}],headersStr:"Examples Inputs clusteringFields createDisposition destinationTable fetch fetchOne legacySql location projectId retryAuto retryMessages retryReasons schemaUpdateOptions sql store timePartitioningField writeDisposition Outputs jobId row rows size uri",content:'# Query\ntype: "org.kestra.task.gcp.bigquery.Query"\n\n\n> Execute BigQuery SQL query in a specific BigQuery database\n\n\n# Examples\n> Create a table with a custom query\n\n\nid: "query"\ntype: "org.kestra.task.gcp.bigquery.Query"\ndestinationTable: "my_project.my_dataset.my_table"\nwriteDisposition: WRITE_APPEND\nsql: |\n  SELECT \n    "hello" as string,\n    NULL AS `nullable`,\n    1 as int,\n    1.25 AS float,\n    DATE("2008-12-25") AS date,\n    DATETIME "2008-12-25 15:30:00.123456" AS datetime,\n    TIME(DATETIME "2008-12-25 15:30:00.123456") AS time,\n    TIMESTAMP("2008-12-25 15:30:00.123456") AS timestamp,\n    ST_GEOGPOINT(50.6833, 2.9) AS geopoint,\n    ARRAY(SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3) AS `array`,\n    STRUCT(4 AS x, 0 AS y, ARRAY(SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3) AS z) AS `struct`\n\n\n> Execute a query and fetch results sets on another task\n\n\ntasks:\n- id: fetch\n  type: org.kestra.task.gcp.bigquery.Query\n  fetch: true\n  sql: |\n    SELECT 1 as id, "John" as name\n    UNION ALL\n    SELECT 2 as id, "Doe" as name\n- id: use-fetched-data\n  type: org.kestra.core.tasks.debugs.Return\n  format: |\n    {{#each outputs.fetch.rows}}\n    id : {{ this.id }}, name: {{ this.name }}\n    {{/each}}\n\n\n# Inputs\n# clusteringFields\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The clustering specification for the destination table\n\n\n# createDisposition\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Whether the job is allowed to create tables\n\n\n# destinationTable\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The table where to put query results\n\n\nIf not provided a new table is created.\n\n# fetch\n * Type: boolean\n * Dynamic: ✔️\n * Required: ❌\n\n> Whether to Fetch the data from the query result to the task output\n\n\n# fetchOne\n * Type: boolean\n * Dynamic: ✔️\n * Required: ❌\n\n> Whether to Fetch only one data row from the query result to the task output\n\n\n# legacySql\n * Type: boolean\n * Dynamic: ✔️\n * Required: ❌\n\n> Whether to use BigQuery\'s legacy SQL dialect for this query\n\n\nBy default this property is set to false.\n\n# location\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The geographic location where the dataset should reside\n\n\nThis property is experimental\nand might be subject to change or removed.\n\nSee Dataset Location\n\n# projectId\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The GCP project id\n\n\n# retryAuto\n * Type: ====\n * Dynamic: ❓\n * Required: ❌\n\n# retryMessages\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: [due to concurrent update]\n\n> The message that are valid for a automatic retry.\n\n\nMessage is tested as a substring of the full message and case insensitive\n\n# retryReasons\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: [rateLimitExceeded, jobBackendError]\n\n> The reason that are valid for a automatic retry.\n\n\n# schemaUpdateOptions\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> [Experimental] Options allowing the schema of the destination table to be updated as a side effect of the query job\n\n\nSchema update options are supported in two cases: when\nwriteDisposition is WRITE_APPEND; when writeDisposition is WRITE_TRUNCATE and the destination\ntable is a partition of a table, specified by partition decorators. For normal tables,\nWRITE_TRUNCATE will always overwrite the schema.\n\n# sql\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The sql query to run\n\n\n# store\n * Type: boolean\n * Dynamic: ✔️\n * Required: ❌\n\n> Whether to store the data from the query result into an ion serialized data file\n\n\n# timePartitioningField\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The time partitioning specification for the destination table\n\n\n# writeDisposition\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The action that should occur if the destination table already exists\n\n\n# Outputs\n# jobId\n * Type: string\n\n> The job id\n\n\n# row\n * Type: object\n\n> Map containing the first row of fetched data\n\n\nOnly populated if \'fetchOne\' parameter is set to true.\n\n# rows\n * Type: array\n * SubType: object\n\n> List containing the fetched data\n\n\nOnly populated if \'fetch\' parameter is set to true.\n\n# size\n * Type: integer\n\n> The size of the rows fetch\n\n\nOnly populated if \'fetchOne\' or \'fetch\' parameter is set to true.\n\n# uri\n * Type: object\n\n> The uri of store result\n\n\nOnly populated if \'store\' is set to true.',normalizedContent:'# query\ntype: "org.kestra.task.gcp.bigquery.query"\n\n\n> execute bigquery sql query in a specific bigquery database\n\n\n# examples\n> create a table with a custom query\n\n\nid: "query"\ntype: "org.kestra.task.gcp.bigquery.query"\ndestinationtable: "my_project.my_dataset.my_table"\nwritedisposition: write_append\nsql: |\n  select \n    "hello" as string,\n    null as `nullable`,\n    1 as int,\n    1.25 as float,\n    date("2008-12-25") as date,\n    datetime "2008-12-25 15:30:00.123456" as datetime,\n    time(datetime "2008-12-25 15:30:00.123456") as time,\n    timestamp("2008-12-25 15:30:00.123456") as timestamp,\n    st_geogpoint(50.6833, 2.9) as geopoint,\n    array(select 1 union all select 2 union all select 3) as `array`,\n    struct(4 as x, 0 as y, array(select 1 union all select 2 union all select 3) as z) as `struct`\n\n\n> execute a query and fetch results sets on another task\n\n\ntasks:\n- id: fetch\n  type: org.kestra.task.gcp.bigquery.query\n  fetch: true\n  sql: |\n    select 1 as id, "john" as name\n    union all\n    select 2 as id, "doe" as name\n- id: use-fetched-data\n  type: org.kestra.core.tasks.debugs.return\n  format: |\n    {{#each outputs.fetch.rows}}\n    id : {{ this.id }}, name: {{ this.name }}\n    {{/each}}\n\n\n# inputs\n# clusteringfields\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> the clustering specification for the destination table\n\n\n# createdisposition\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> whether the job is allowed to create tables\n\n\n# destinationtable\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the table where to put query results\n\n\nif not provided a new table is created.\n\n# fetch\n * type: boolean\n * dynamic: ✔️\n * required: ❌\n\n> whether to fetch the data from the query result to the task output\n\n\n# fetchone\n * type: boolean\n * dynamic: ✔️\n * required: ❌\n\n> whether to fetch only one data row from the query result to the task output\n\n\n# legacysql\n * type: boolean\n * dynamic: ✔️\n * required: ❌\n\n> whether to use bigquery\'s legacy sql dialect for this query\n\n\nby default this property is set to false.\n\n# location\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the geographic location where the dataset should reside\n\n\nthis property is experimental\nand might be subject to change or removed.\n\nsee dataset location\n\n# projectid\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the gcp project id\n\n\n# retryauto\n * type: ====\n * dynamic: ❓\n * required: ❌\n\n# retrymessages\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n * default: [due to concurrent update]\n\n> the message that are valid for a automatic retry.\n\n\nmessage is tested as a substring of the full message and case insensitive\n\n# retryreasons\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n * default: [ratelimitexceeded, jobbackenderror]\n\n> the reason that are valid for a automatic retry.\n\n\n# schemaupdateoptions\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> [experimental] options allowing the schema of the destination table to be updated as a side effect of the query job\n\n\nschema update options are supported in two cases: when\nwritedisposition is write_append; when writedisposition is write_truncate and the destination\ntable is a partition of a table, specified by partition decorators. for normal tables,\nwrite_truncate will always overwrite the schema.\n\n# sql\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the sql query to run\n\n\n# store\n * type: boolean\n * dynamic: ✔️\n * required: ❌\n\n> whether to store the data from the query result into an ion serialized data file\n\n\n# timepartitioningfield\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the time partitioning specification for the destination table\n\n\n# writedisposition\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the action that should occur if the destination table already exists\n\n\n# outputs\n# jobid\n * type: string\n\n> the job id\n\n\n# row\n * type: object\n\n> map containing the first row of fetched data\n\n\nonly populated if \'fetchone\' parameter is set to true.\n\n# rows\n * type: array\n * subtype: object\n\n> list containing the fetched data\n\n\nonly populated if \'fetch\' parameter is set to true.\n\n# size\n * type: integer\n\n> the size of the rows fetch\n\n\nonly populated if \'fetchone\' or \'fetch\' parameter is set to true.\n\n# uri\n * type: object\n\n> the uri of store result\n\n\nonly populated if \'store\' is set to true.',charsets:{cjk:!0}},{title:"TableMetadata",frontmatter:{title:"TableMetadata",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"TableMetadata"},{property:"og:description",content:"TableMetadata | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.TableMetadata.html"},{name:"twitter:title",content:"TableMetadata"},{name:"twitter:description",content:"TableMetadata | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.TableMetadata.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"TableMetadata | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.TableMetadata.html",relativePath:"plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.TableMetadata.md",key:"v-1a7c016b",path:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.TableMetadata.html",headers:[{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:94},{level:3,title:"dataset",slug:"dataset",normalizedTitle:"dataset",charIndex:103},{level:3,title:"ifNotExists",slug:"ifnotexists",normalizedTitle:"ifnotexists",charIndex:195},{level:3,title:"location",slug:"location",normalizedTitle:"location",charIndex:413},{level:3,title:"projectId",slug:"projectid",normalizedTitle:"projectid",charIndex:627},{level:3,title:"retryAuto",slug:"retryauto",normalizedTitle:"retryauto",charIndex:709},{level:3,title:"retryMessages",slug:"retrymessages",normalizedTitle:"retrymessages",charIndex:765},{level:3,title:"retryReasons",slug:"retryreasons",normalizedTitle:"retryreasons",charIndex:1014},{level:3,title:"table",slug:"table",normalizedTitle:"table",charIndex:75},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1282},{level:3,title:"creationTime",slug:"creationtime",normalizedTitle:"creationtime",charIndex:1292},{level:3,title:"datasetId",slug:"datasetid",normalizedTitle:"datasetid",charIndex:1365},{level:3,title:"definition",slug:"definition",normalizedTitle:"definition",charIndex:1415},{level:3,title:"definition.externalTableDefinition",slug:"definition-externaltabledefinition",normalizedTitle:"definition.externaltabledefinition",charIndex:1470},{level:3,title:"definition.materializedViewDefinition",slug:"definition-materializedviewdefinition",normalizedTitle:"definition.materializedviewdefinition",charIndex:1590},{level:3,title:"definition.schema",slug:"definition-schema",normalizedTitle:"definition.schema",charIndex:1725},{level:3,title:"definition.standardTableDefinition",slug:"definition-standardtabledefinition",normalizedTitle:"definition.standardtabledefinition",charIndex:1794},{level:3,title:"definition.type",slug:"definition-type",normalizedTitle:"definition.type",charIndex:1902},{level:3,title:"definition.viewDefinition",slug:"definition-viewdefinition",normalizedTitle:"definition.viewdefinition",charIndex:1967},{level:3,title:"description",slug:"description",normalizedTitle:"description",charIndex:2064},{level:3,title:"encryptionConfiguration",slug:"encryptionconfiguration",normalizedTitle:"encryptionconfiguration",charIndex:2143},{level:3,title:"encryptionConfiguration.kmsKeyName",slug:"encryptionconfiguration-kmskeyname",normalizedTitle:"encryptionconfiguration.kmskeyname",charIndex:2219},{level:3,title:"etag",slug:"etag",normalizedTitle:"etag",charIndex:2273},{level:3,title:"expirationTime",slug:"expirationtime",normalizedTitle:"expirationtime",charIndex:2332},{level:3,title:"externalTableDefinition.autodetect",slug:"externaltabledefinition-autodetect",normalizedTitle:"externaltabledefinition.autodetect",charIndex:2525},{level:3,title:"externalTableDefinition.compression",slug:"externaltabledefinition-compression",normalizedTitle:"externaltabledefinition.compression",charIndex:2670},{level:3,title:"externalTableDefinition.ignoreUnknownValues",slug:"externaltabledefinition-ignoreunknownvalues",normalizedTitle:"externaltabledefinition.ignoreunknownvalues",charIndex:2778},{level:3,title:"externalTableDefinition.maxBadRecords",slug:"externaltabledefinition-maxbadrecords",normalizedTitle:"externaltabledefinition.maxbadrecords",charIndex:3135},{level:3,title:"externalTableDefinition.sourceUris",slug:"externaltabledefinition-sourceuris",normalizedTitle:"externaltabledefinition.sourceuris",charIndex:3381},{level:3,title:"friendlyName",slug:"friendlyname",normalizedTitle:"friendlyname",charIndex:3767},{level:3,title:"generatedId",slug:"generatedid",normalizedTitle:"generatedid",charIndex:3840},{level:3,title:"labels",slug:"labels",normalizedTitle:"labels",charIndex:3914},{level:3,title:"lastModifiedTime",slug:"lastmodifiedtime",normalizedTitle:"lastmodifiedtime",charIndex:3989},{level:3,title:"materializedViewDefinition.enableRefresh",slug:"materializedviewdefinition-enablerefresh",normalizedTitle:"materializedviewdefinition.enablerefresh",charIndex:4072},{level:3,title:"materializedViewDefinition.lastRefreshDate",slug:"materializedviewdefinition-lastrefreshdate",normalizedTitle:"materializedviewdefinition.lastrefreshdate",charIndex:4221},{level:3,title:"materializedViewDefinition.query",slug:"materializedviewdefinition-query",normalizedTitle:"materializedviewdefinition.query",charIndex:4338},{level:3,title:"materializedViewDefinition.refreshIntervalMs",slug:"materializedviewdefinition-refreshintervalms",normalizedTitle:"materializedviewdefinition.refreshintervalms",charIndex:4430},{level:3,title:"numBytes",slug:"numbytes",normalizedTitle:"numbytes",charIndex:4571},{level:3,title:"numLongTermBytes",slug:"numlongtermbytes",normalizedTitle:"numlongtermbytes",charIndex:4636},{level:3,title:"numRows",slug:"numrows",normalizedTitle:"numrows",charIndex:4758},{level:3,title:"projectId",slug:"projectid-2",normalizedTitle:"projectid",charIndex:627},{level:3,title:"range.end",slug:"range-end",normalizedTitle:"range.end",charIndex:4881},{level:3,title:"range.interval",slug:"range-interval",normalizedTitle:"range.interval",charIndex:4911},{level:3,title:"range.start",slug:"range-start",normalizedTitle:"range.start",charIndex:4946},{level:3,title:"rangePartitioning.field",slug:"rangepartitioning-field",normalizedTitle:"rangepartitioning.field",charIndex:4978},{level:3,title:"rangePartitioning.range",slug:"rangepartitioning-range",normalizedTitle:"rangepartitioning.range",charIndex:5021},{level:3,title:"requirePartitionFilter",slug:"requirepartitionfilter",normalizedTitle:"requirepartitionfilter",charIndex:5064},{level:3,title:"selfLink",slug:"selflink",normalizedTitle:"selflink",charIndex:5231},{level:3,title:"standardTableDefinition.clustering",slug:"standardtabledefinition-clustering",normalizedTitle:"standardtabledefinition.clustering",charIndex:5375},{level:3,title:"standardTableDefinition.rangePartitioning",slug:"standardtabledefinition-rangepartitioning",normalizedTitle:"standardtabledefinition.rangepartitioning",charIndex:5531},{level:3,title:"standardTableDefinition.streamingBuffer",slug:"standardtabledefinition-streamingbuffer",normalizedTitle:"standardtabledefinition.streamingbuffer",charIndex:5710},{level:3,title:"standardTableDefinition.timePartitioning",slug:"standardtabledefinition-timepartitioning",normalizedTitle:"standardtabledefinition.timepartitioning",charIndex:5892},{level:3,title:"streamingBuffer.estimatedBytes",slug:"streamingbuffer-estimatedbytes",normalizedTitle:"streamingbuffer.estimatedbytes",charIndex:6068},{level:3,title:"streamingBuffer.estimatedRows",slug:"streamingbuffer-estimatedrows",normalizedTitle:"streamingbuffer.estimatedrows",charIndex:6119},{level:3,title:"streamingBuffer.oldestEntryTime",slug:"streamingbuffer-oldestentrytime",normalizedTitle:"streamingbuffer.oldestentrytime",charIndex:6169},{level:3,title:"table",slug:"table-2",normalizedTitle:"table",charIndex:75},{level:3,title:"viewDefinition.query",slug:"viewdefinition-query",normalizedTitle:"viewdefinition.query",charIndex:6265},{level:3,title:"viewDefinition.viewUserDefinedFunctions",slug:"viewdefinition-viewuserdefinedfunctions",normalizedTitle:"viewdefinition.viewuserdefinedfunctions",charIndex:6345}],headersStr:"Inputs dataset ifNotExists location projectId retryAuto retryMessages retryReasons table Outputs creationTime datasetId definition definition.externalTableDefinition definition.materializedViewDefinition definition.schema definition.standardTableDefinition definition.type definition.viewDefinition description encryptionConfiguration encryptionConfiguration.kmsKeyName etag expirationTime externalTableDefinition.autodetect externalTableDefinition.compression externalTableDefinition.ignoreUnknownValues externalTableDefinition.maxBadRecords externalTableDefinition.sourceUris friendlyName generatedId labels lastModifiedTime materializedViewDefinition.enableRefresh materializedViewDefinition.lastRefreshDate materializedViewDefinition.query materializedViewDefinition.refreshIntervalMs numBytes numLongTermBytes numRows projectId range.end range.interval range.start rangePartitioning.field rangePartitioning.range requirePartitionFilter selfLink standardTableDefinition.clustering standardTableDefinition.rangePartitioning standardTableDefinition.streamingBuffer standardTableDefinition.timePartitioning streamingBuffer.estimatedBytes streamingBuffer.estimatedRows streamingBuffer.oldestEntryTime table viewDefinition.query viewDefinition.viewUserDefinedFunctions",content:"# TableMetadata\ntype: \"org.kestra.task.gcp.bigquery.TableMetadata\"\n\n\n> Get table metadata\n\n\n# Inputs\n# dataset\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The dataset's user-defined id\n\n\n# ifNotExists\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Default: ERROR\n\n> Policy to apply if a table don't exists.\n\n\nIf the policy is SKIP, the output will contain only null value, otherwize an error is raised.\n\n# location\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The geographic location where the dataset should reside\n\n\nThis property is experimental\nand might be subject to change or removed.\n\nSee Dataset Location\n\n# projectId\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The GCP project id\n\n\n# retryAuto\n * Type: ====\n * Dynamic: ❓\n * Required: ❌\n\n# retryMessages\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: [due to concurrent update]\n\n> The message that are valid for a automatic retry.\n\n\nMessage is tested as a substring of the full message and case insensitive\n\n# retryReasons\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: [rateLimitExceeded, jobBackendError]\n\n> The reason that are valid for a automatic retry.\n\n\n# table\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The table user-defined id\n\n\n# Outputs\n# creationTime\n * Type: string\n\n> The time when this table was created\n\n\n# datasetId\n * Type: string\n\n> The dataset's id\n\n\n# definition\n * Type: object\n\n> The table definition\n\n\n# definition.externalTableDefinition\n * Type: object\n\n> Returns the external table definition if the type is EXTERNAL\n\n\n# definition.materializedViewDefinition\n * Type: object\n\n> Returns the materialized view definition if the type is MATERIALIZED_VIEW\n\n\n# definition.schema\n * Type: object\n\n> Returns the table's schema.\n\n\n# definition.standardTableDefinition\n * Type: object\n\n> Returns the table definition if the type is TABLE\n\n\n# definition.type\n * Type: string\n\n> Returns the table's type.\n\n\n# definition.viewDefinition\n * Type: object\n\n> Returns the view definition if the type is VIEW\n\n\n# description\n * Type: string\n\n> The user-friendly description for the table\n\n\n# encryptionConfiguration\n * Type: object\n\n> The encryption configuration\n\n\n# encryptionConfiguration.kmsKeyName\n * Type: string\n\n# etag\n * Type: string\n\n> The hash of the table resource\n\n\n# expirationTime\n * Type: string\n\n> Returns the time when this table expires\n\n\nIf not present, the table will persist indefinitely. Expired tables will be deleted and their storage reclaimed.\n\n# externalTableDefinition.autodetect\n * Type: boolean\n\n> Returns whether automatic detection of schema and format options should be performed.\n\n\n# externalTableDefinition.compression\n * Type: string\n\n> Returns the compression type of the data source.\n\n\n# externalTableDefinition.ignoreUnknownValues\n * Type: boolean\n\n> Returns whether BigQuery should allow extra values that are not represented in the table schema.\n\n\nIf true, the extra values are ignored. If false, records with extra columns are treated as bad records, and if there are too many bad records, an invalid error is returned in the job result.\n\n# externalTableDefinition.maxBadRecords\n * Type: integer\n\n> Returns the maximum number of bad records that BigQuery can ignore when reading data.\n\n\nIf the number of bad records exceeds this value, an invalid error is returned in the job result.\n\n# externalTableDefinition.sourceUris\n * Type: array\n * SubType: string\n\n> Returns the fully-qualified URIs that point to your data in Google Cloud Storage.\n\n\nEach URI can\n\n * contain one '*' wildcard character that must come after the bucket's name. Size limits related\n * to load jobs apply to external data sources, plus an additional limit of 10 GB maximum size\n * across all URIs.\n\n# friendlyName\n * Type: string\n\n> The user-friendly name for the table\n\n\n# generatedId\n * Type: string\n\n> The service-generated id for the table\n\n\n# labels\n * Type: object\n\n> Return a map for labels applied to the table\n\n\n# lastModifiedTime\n * Type: string\n\n> The time when this table was last modified\n\n\n# materializedViewDefinition.enableRefresh\n * Type: boolean\n\n> is enable automatic refresh of the materialized view when the base table is updated\n\n\n# materializedViewDefinition.lastRefreshDate\n * Type: string\n\n> Date when this materialized view was last modified\n\n\n# materializedViewDefinition.query\n * Type: string\n\n> the query whose result is persisted\n\n\n# materializedViewDefinition.refreshIntervalMs\n * Type: integer\n\n> the maximum frequency at which this materialized view will be refreshed\n\n\n# numBytes\n * Type: integer\n\n> The size of this table in bytes\n\n\n# numLongTermBytes\n * Type: integer\n\n> The number of bytes considered \"long-term storage\" for reduced billing purposes.\n\n\n# numRows\n * Type: integer\n\n> The number of rows of data in this table\n\n\n# projectId\n * Type: string\n\n> The project's id\n\n\n# range.end\n * Type: integer\n\n# range.interval\n * Type: integer\n\n# range.start\n * Type: integer\n\n# rangePartitioning.field\n * Type: string\n\n# rangePartitioning.range\n * Type: object\n\n# requirePartitionFilter\n * Type: boolean\n\n> Return true if a partition filter (that can be used for partition elimination) is required for queries over this table.\n\n\n# selfLink\n * Type: string\n\n> The URL that can be used to access the resource again. The returned URL can be used for get or update requests.\n\n\n# standardTableDefinition.clustering\n * Type: object\n\n> Returns the clustering configuration for this table. If {@code null}, the table is not clustered.\n\n\n# standardTableDefinition.rangePartitioning\n * Type: object\n\n> Returns the range partitioning configuration for this table. If {@code null}, the table is not range-partitioned.\n\n\n# standardTableDefinition.streamingBuffer\n * Type: object\n\n> Returns information on the table's streaming buffer if any exists. Returns {@code null} if no streaming buffer exists.\n\n\n# standardTableDefinition.timePartitioning\n * Type: object\n\n> Returns the time partitioning configuration for this table. If {@code null}, the table is not time-partitioned.\n\n\n# streamingBuffer.estimatedBytes\n * Type: integer\n\n# streamingBuffer.estimatedRows\n * Type: integer\n\n# streamingBuffer.oldestEntryTime\n * Type: integer\n\n# table\n * Type: string\n\n> The table name\n\n\n# viewDefinition.query\n * Type: string\n\n> The query whose result is persisted\n\n\n# viewDefinition.viewUserDefinedFunctions\n * Type: array\n * SubType: object\n\n> User defined functions that can be used by query. Returns null if not set.",normalizedContent:"# tablemetadata\ntype: \"org.kestra.task.gcp.bigquery.tablemetadata\"\n\n\n> get table metadata\n\n\n# inputs\n# dataset\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the dataset's user-defined id\n\n\n# ifnotexists\n * type: string\n * dynamic: ❓\n * required: ❌\n * default: error\n\n> policy to apply if a table don't exists.\n\n\nif the policy is skip, the output will contain only null value, otherwize an error is raised.\n\n# location\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the geographic location where the dataset should reside\n\n\nthis property is experimental\nand might be subject to change or removed.\n\nsee dataset location\n\n# projectid\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the gcp project id\n\n\n# retryauto\n * type: ====\n * dynamic: ❓\n * required: ❌\n\n# retrymessages\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n * default: [due to concurrent update]\n\n> the message that are valid for a automatic retry.\n\n\nmessage is tested as a substring of the full message and case insensitive\n\n# retryreasons\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n * default: [ratelimitexceeded, jobbackenderror]\n\n> the reason that are valid for a automatic retry.\n\n\n# table\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the table user-defined id\n\n\n# outputs\n# creationtime\n * type: string\n\n> the time when this table was created\n\n\n# datasetid\n * type: string\n\n> the dataset's id\n\n\n# definition\n * type: object\n\n> the table definition\n\n\n# definition.externaltabledefinition\n * type: object\n\n> returns the external table definition if the type is external\n\n\n# definition.materializedviewdefinition\n * type: object\n\n> returns the materialized view definition if the type is materialized_view\n\n\n# definition.schema\n * type: object\n\n> returns the table's schema.\n\n\n# definition.standardtabledefinition\n * type: object\n\n> returns the table definition if the type is table\n\n\n# definition.type\n * type: string\n\n> returns the table's type.\n\n\n# definition.viewdefinition\n * type: object\n\n> returns the view definition if the type is view\n\n\n# description\n * type: string\n\n> the user-friendly description for the table\n\n\n# encryptionconfiguration\n * type: object\n\n> the encryption configuration\n\n\n# encryptionconfiguration.kmskeyname\n * type: string\n\n# etag\n * type: string\n\n> the hash of the table resource\n\n\n# expirationtime\n * type: string\n\n> returns the time when this table expires\n\n\nif not present, the table will persist indefinitely. expired tables will be deleted and their storage reclaimed.\n\n# externaltabledefinition.autodetect\n * type: boolean\n\n> returns whether automatic detection of schema and format options should be performed.\n\n\n# externaltabledefinition.compression\n * type: string\n\n> returns the compression type of the data source.\n\n\n# externaltabledefinition.ignoreunknownvalues\n * type: boolean\n\n> returns whether bigquery should allow extra values that are not represented in the table schema.\n\n\nif true, the extra values are ignored. if false, records with extra columns are treated as bad records, and if there are too many bad records, an invalid error is returned in the job result.\n\n# externaltabledefinition.maxbadrecords\n * type: integer\n\n> returns the maximum number of bad records that bigquery can ignore when reading data.\n\n\nif the number of bad records exceeds this value, an invalid error is returned in the job result.\n\n# externaltabledefinition.sourceuris\n * type: array\n * subtype: string\n\n> returns the fully-qualified uris that point to your data in google cloud storage.\n\n\neach uri can\n\n * contain one '*' wildcard character that must come after the bucket's name. size limits related\n * to load jobs apply to external data sources, plus an additional limit of 10 gb maximum size\n * across all uris.\n\n# friendlyname\n * type: string\n\n> the user-friendly name for the table\n\n\n# generatedid\n * type: string\n\n> the service-generated id for the table\n\n\n# labels\n * type: object\n\n> return a map for labels applied to the table\n\n\n# lastmodifiedtime\n * type: string\n\n> the time when this table was last modified\n\n\n# materializedviewdefinition.enablerefresh\n * type: boolean\n\n> is enable automatic refresh of the materialized view when the base table is updated\n\n\n# materializedviewdefinition.lastrefreshdate\n * type: string\n\n> date when this materialized view was last modified\n\n\n# materializedviewdefinition.query\n * type: string\n\n> the query whose result is persisted\n\n\n# materializedviewdefinition.refreshintervalms\n * type: integer\n\n> the maximum frequency at which this materialized view will be refreshed\n\n\n# numbytes\n * type: integer\n\n> the size of this table in bytes\n\n\n# numlongtermbytes\n * type: integer\n\n> the number of bytes considered \"long-term storage\" for reduced billing purposes.\n\n\n# numrows\n * type: integer\n\n> the number of rows of data in this table\n\n\n# projectid\n * type: string\n\n> the project's id\n\n\n# range.end\n * type: integer\n\n# range.interval\n * type: integer\n\n# range.start\n * type: integer\n\n# rangepartitioning.field\n * type: string\n\n# rangepartitioning.range\n * type: object\n\n# requirepartitionfilter\n * type: boolean\n\n> return true if a partition filter (that can be used for partition elimination) is required for queries over this table.\n\n\n# selflink\n * type: string\n\n> the url that can be used to access the resource again. the returned url can be used for get or update requests.\n\n\n# standardtabledefinition.clustering\n * type: object\n\n> returns the clustering configuration for this table. if {@code null}, the table is not clustered.\n\n\n# standardtabledefinition.rangepartitioning\n * type: object\n\n> returns the range partitioning configuration for this table. if {@code null}, the table is not range-partitioned.\n\n\n# standardtabledefinition.streamingbuffer\n * type: object\n\n> returns information on the table's streaming buffer if any exists. returns {@code null} if no streaming buffer exists.\n\n\n# standardtabledefinition.timepartitioning\n * type: object\n\n> returns the time partitioning configuration for this table. if {@code null}, the table is not time-partitioned.\n\n\n# streamingbuffer.estimatedbytes\n * type: integer\n\n# streamingbuffer.estimatedrows\n * type: integer\n\n# streamingbuffer.oldestentrytime\n * type: integer\n\n# table\n * type: string\n\n> the table name\n\n\n# viewdefinition.query\n * type: string\n\n> the query whose result is persisted\n\n\n# viewdefinition.viewuserdefinedfunctions\n * type: array\n * subtype: object\n\n> user defined functions that can be used by query. returns null if not set.",charsets:{}},{title:"UpdateDataset",frontmatter:{title:"UpdateDataset",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"UpdateDataset"},{property:"og:description",content:"UpdateDataset | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.UpdateDataset.html"},{name:"twitter:title",content:"UpdateDataset"},{name:"twitter:description",content:"UpdateDataset | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.UpdateDataset.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"UpdateDataset | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.UpdateDataset.html",relativePath:"plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.UpdateDataset.md",key:"v-4189dac7",path:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.UpdateDataset.html",headers:[{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:93},{level:3,title:"acl",slug:"acl",normalizedTitle:"acl",charIndex:102},{level:3,title:"defaultEncryptionConfiguration",slug:"defaultencryptionconfiguration",normalizedTitle:"defaultencryptionconfiguration",charIndex:219},{level:3,title:"defaultEncryptionConfiguration.kmsKeyName",slug:"defaultencryptionconfiguration-kmskeyname",normalizedTitle:"defaultencryptionconfiguration.kmskeyname",charIndex:543},{level:3,title:"defaultPartitionExpirationMs",slug:"defaultpartitionexpirationms",normalizedTitle:"defaultpartitionexpirationms",charIndex:633},{level:3,title:"defaultTableLifetime",slug:"defaulttablelifetime",normalizedTitle:"defaulttablelifetime",charIndex:1578},{level:3,title:"description",slug:"description",normalizedTitle:"description",charIndex:2410},{level:3,title:"friendlyName",slug:"friendlyname",normalizedTitle:"friendlyname",charIndex:2533},{level:3,title:"labels",slug:"labels",normalizedTitle:"labels",charIndex:2636},{level:3,title:"location",slug:"location",normalizedTitle:"location",charIndex:2716},{level:3,title:"name",slug:"name",normalizedTitle:"name",charIndex:2611},{level:3,title:"projectId",slug:"projectid",normalizedTitle:"projectid",charIndex:3019},{level:3,title:"retryAuto",slug:"retryauto",normalizedTitle:"retryauto",charIndex:3101},{level:3,title:"retryMessages",slug:"retrymessages",normalizedTitle:"retrymessages",charIndex:3157},{level:3,title:"retryReasons",slug:"retryreasons",normalizedTitle:"retryreasons",charIndex:3406},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:3588},{level:3,title:"dataset",slug:"dataset",normalizedTitle:"dataset",charIndex:80},{level:3,title:"description",slug:"description-2",normalizedTitle:"description",charIndex:2410},{level:3,title:"friendlyName",slug:"friendlyname-2",normalizedTitle:"friendlyname",charIndex:2533},{level:3,title:"location",slug:"location-2",normalizedTitle:"location",charIndex:2716},{level:3,title:"project",slug:"project",normalizedTitle:"project",charIndex:3019}],headersStr:"Inputs acl defaultEncryptionConfiguration defaultEncryptionConfiguration.kmsKeyName defaultPartitionExpirationMs defaultTableLifetime description friendlyName labels location name projectId retryAuto retryMessages retryReasons Outputs dataset description friendlyName location project",content:"# UpdateDataset\ntype: \"org.kestra.task.gcp.bigquery.UpdateDataset\"\n\n\n> Update a dataset.\n\n\n# Inputs\n# acl\n * Type: array\n * SubType: object\n * Dynamic: ❓\n * Required: ❌\n\n> The dataset's access control configuration\n\n\n# defaultEncryptionConfiguration\n * Type: object\n * Dynamic: ❓\n * Required: ❌\n\n> The default encryption key for all tables in the dataset\n\n\nOnce this property is set, all\nnewly-created partitioned tables in the dataset will have encryption key set to this value,\nunless table creation request (or query) overrides the key.\n\n# defaultEncryptionConfiguration.kmsKeyName\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# defaultPartitionExpirationMs\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n> [Optional] The default partition expiration time for all partitioned tables in the dataset, in milliseconds\n\n\nOnce this property is set, all newly-created partitioned tables in the\ndataset will has an expirationMs property in the timePartitioning settings set to this value.\nChanging the value only affect new tables, not existing ones. The storage in a partition will\nhave an expiration time of its partition time plus this value. Setting this property\noverrides the use of defaultTableExpirationMs for partitioned tables: only one of\ndefaultTableExpirationMs and defaultPartitionExpirationMs will be used for any new\npartitioned table. If you provide an explicit timePartitioning.expirationMs when creating or\nupdating a partitioned table, that value takes precedence over the default partition\nexpiration time indicated by this property. The value may be null.\n\n# defaultTableLifetime\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n> The default lifetime of all tables in the dataset, in milliseconds\n\n\nThe minimum value is\n3600000 milliseconds (one hour). Once this property is set, all newly-created tables in the\ndataset will have an expirationTime property set to the creation time plus the value in this\nproperty, and changing the value will only affect new tables, not existing ones. When the\nexpirationTime for a given table is reached, that table will be deleted automatically. If a\ntable's expirationTime is modified or removed before the table expires, or if you provide an\nexplicit expirationTime when creating a table, that value takes precedence over the default\nexpiration time indicated by this property. This property is experimental and might be\nsubject to change or removed.\n\n# description\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Description\n\n\nA user-friendly description for the dataset.\n\n# friendlyName\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> A user-friendly name for the dataset\n\n\n# labels\n * Type: object\n * Dynamic: ❓\n * Required: ❌\n\n> The dataset's labels\n\n\n# location\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The geographic location where the dataset should reside\n\n\nThis property is experimental\nand might be subject to change or removed.\n\nSee Dataset Location\n\n# name\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The dataset's user-defined id\n\n\n# projectId\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The GCP project id\n\n\n# retryAuto\n * Type: ====\n * Dynamic: ❓\n * Required: ❌\n\n# retryMessages\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: [due to concurrent update]\n\n> The message that are valid for a automatic retry.\n\n\nMessage is tested as a substring of the full message and case insensitive\n\n# retryReasons\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: [rateLimitExceeded, jobBackendError]\n\n> The reason that are valid for a automatic retry.\n\n\n# Outputs\n# dataset\n * Type: string\n\n> The dataset's user-defined id\n\n\n# description\n * Type: string\n\n> A user-friendly description for the dataset\n\n\n# friendlyName\n * Type: string\n\n> A user-friendly name for the dataset\n\n\n# location\n * Type: string\n\n> The geographic location where the dataset should reside\n\n\nThis property is experimental\nand might be subject to change or removed.\n\nSee Dataset Location\n\n# project\n * Type: string\n\n> The GCP project id",normalizedContent:"# updatedataset\ntype: \"org.kestra.task.gcp.bigquery.updatedataset\"\n\n\n> update a dataset.\n\n\n# inputs\n# acl\n * type: array\n * subtype: object\n * dynamic: ❓\n * required: ❌\n\n> the dataset's access control configuration\n\n\n# defaultencryptionconfiguration\n * type: object\n * dynamic: ❓\n * required: ❌\n\n> the default encryption key for all tables in the dataset\n\n\nonce this property is set, all\nnewly-created partitioned tables in the dataset will have encryption key set to this value,\nunless table creation request (or query) overrides the key.\n\n# defaultencryptionconfiguration.kmskeyname\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# defaultpartitionexpirationms\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n> [optional] the default partition expiration time for all partitioned tables in the dataset, in milliseconds\n\n\nonce this property is set, all newly-created partitioned tables in the\ndataset will has an expirationms property in the timepartitioning settings set to this value.\nchanging the value only affect new tables, not existing ones. the storage in a partition will\nhave an expiration time of its partition time plus this value. setting this property\noverrides the use of defaulttableexpirationms for partitioned tables: only one of\ndefaulttableexpirationms and defaultpartitionexpirationms will be used for any new\npartitioned table. if you provide an explicit timepartitioning.expirationms when creating or\nupdating a partitioned table, that value takes precedence over the default partition\nexpiration time indicated by this property. the value may be null.\n\n# defaulttablelifetime\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n> the default lifetime of all tables in the dataset, in milliseconds\n\n\nthe minimum value is\n3600000 milliseconds (one hour). once this property is set, all newly-created tables in the\ndataset will have an expirationtime property set to the creation time plus the value in this\nproperty, and changing the value will only affect new tables, not existing ones. when the\nexpirationtime for a given table is reached, that table will be deleted automatically. if a\ntable's expirationtime is modified or removed before the table expires, or if you provide an\nexplicit expirationtime when creating a table, that value takes precedence over the default\nexpiration time indicated by this property. this property is experimental and might be\nsubject to change or removed.\n\n# description\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> description\n\n\na user-friendly description for the dataset.\n\n# friendlyname\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> a user-friendly name for the dataset\n\n\n# labels\n * type: object\n * dynamic: ❓\n * required: ❌\n\n> the dataset's labels\n\n\n# location\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the geographic location where the dataset should reside\n\n\nthis property is experimental\nand might be subject to change or removed.\n\nsee dataset location\n\n# name\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the dataset's user-defined id\n\n\n# projectid\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the gcp project id\n\n\n# retryauto\n * type: ====\n * dynamic: ❓\n * required: ❌\n\n# retrymessages\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n * default: [due to concurrent update]\n\n> the message that are valid for a automatic retry.\n\n\nmessage is tested as a substring of the full message and case insensitive\n\n# retryreasons\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n * default: [ratelimitexceeded, jobbackenderror]\n\n> the reason that are valid for a automatic retry.\n\n\n# outputs\n# dataset\n * type: string\n\n> the dataset's user-defined id\n\n\n# description\n * type: string\n\n> a user-friendly description for the dataset\n\n\n# friendlyname\n * type: string\n\n> a user-friendly name for the dataset\n\n\n# location\n * type: string\n\n> the geographic location where the dataset should reside\n\n\nthis property is experimental\nand might be subject to change or removed.\n\nsee dataset location\n\n# project\n * type: string\n\n> the gcp project id",charsets:{}},{title:"Copy",frontmatter:{title:"Copy",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Copy"},{property:"og:description",content:"Copy | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.Copy.html"},{name:"twitter:title",content:"Copy"},{name:"twitter:description",content:"Copy | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.Copy.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Copy | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.Copy.html",relativePath:"plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.Copy.md",key:"v-3f13b63a",path:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.Copy.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:148},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:284},{level:3,title:"delete",slug:"delete",normalizedTitle:"delete",charIndex:267},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:241},{level:3,title:"projectId",slug:"projectid",normalizedTitle:"projectid",charIndex:496},{level:3,title:"to",slug:"to",normalizedTitle:"to",charIndex:109},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:655},{level:3,title:"uri",slug:"uri",normalizedTitle:"uri",charIndex:665}],headersStr:"Examples Inputs delete from projectId to Outputs uri",content:'# Copy\ntype: "org.kestra.task.gcp.gcs.Copy"\n\n\n> Copy a file between bucket\n\n\nCopy the file between Internal Storage or Google Cloud Storage file\n\n# Examples\n> Move a file between bucket path\n\n\nid: "copy"\ntype: "org.kestra.task.gcp.gcs.Copy"\nfrom: "{{ inputs.file }}"\ndelete: true\n\n\n# Inputs\n# delete\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n> Whether to delete the source files (from parameter) on success copy\n\n\n# from\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The file to copy\n\n\n# projectId\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The GCP project id\n\n\n# to\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The destination path\n\n\n# Outputs\n# uri\n * Type: object\n\n> The destination full uri\n\n\nThe full url will be like gs://{bucket}/{path}/{file}',normalizedContent:'# copy\ntype: "org.kestra.task.gcp.gcs.copy"\n\n\n> copy a file between bucket\n\n\ncopy the file between internal storage or google cloud storage file\n\n# examples\n> move a file between bucket path\n\n\nid: "copy"\ntype: "org.kestra.task.gcp.gcs.copy"\nfrom: "{{ inputs.file }}"\ndelete: true\n\n\n# inputs\n# delete\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n> whether to delete the source files (from parameter) on success copy\n\n\n# from\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the file to copy\n\n\n# projectid\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the gcp project id\n\n\n# to\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the destination path\n\n\n# outputs\n# uri\n * type: object\n\n> the destination full uri\n\n\nthe full url will be like gs://{bucket}/{path}/{file}',charsets:{}},{title:"CreateBucket",frontmatter:{title:"CreateBucket",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"CreateBucket"},{property:"og:description",content:"CreateBucket | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.CreateBucket.html"},{name:"twitter:title",content:"CreateBucket"},{name:"twitter:description",content:"CreateBucket | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.CreateBucket.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"CreateBucket | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.CreateBucket.html",relativePath:"plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.CreateBucket.md",key:"v-02718283",path:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.CreateBucket.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:116},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:308},{level:3,title:"acl",slug:"acl",normalizedTitle:"acl",charIndex:317},{level:3,title:"cors",slug:"cors",normalizedTitle:"cors",charIndex:465},{level:3,title:"defaultAcl",slug:"defaultacl",normalizedTitle:"defaultacl",charIndex:646},{level:3,title:"defaultEventBasedHold",slug:"defaulteventbasedhold",normalizedTitle:"defaulteventbasedhold",charIndex:904},{level:3,title:"defaultKmsKeyName",slug:"defaultkmskeyname",normalizedTitle:"defaultkmskeyname",charIndex:1024},{level:3,title:"iamConfiguration",slug:"iamconfiguration",normalizedTitle:"iamconfiguration",charIndex:1141},{level:3,title:"iamConfiguration.uniformBucketLevelAccessLockedTime",slug:"iamconfiguration-uniformbucketlevelaccesslockedtime",normalizedTitle:"iamconfiguration.uniformbucketlevelaccesslockedtime",charIndex:1274},{level:3,title:"ifExists",slug:"ifexists",normalizedTitle:"ifexists",charIndex:1375},{level:3,title:"indexPage",slug:"indexpage",normalizedTitle:"indexpage",charIndex:1498},{level:3,title:"labels",slug:"labels",normalizedTitle:"labels",charIndex:274},{level:3,title:"lifecycleRules",slug:"lifecyclerules",normalizedTitle:"lifecyclerules",charIndex:1776},{level:3,title:"location",slug:"location",normalizedTitle:"location",charIndex:2037},{level:3,title:"logging",slug:"logging",normalizedTitle:"logging",charIndex:2245},{level:3,title:"logging.logBucket",slug:"logging-logbucket",normalizedTitle:"logging.logbucket",charIndex:2447},{level:3,title:"logging.logObjectPrefix",slug:"logging-logobjectprefix",normalizedTitle:"logging.logobjectprefix",charIndex:2513},{level:3,title:"name",slug:"name",normalizedTitle:"name",charIndex:232},{level:3,title:"notFoundPage",slug:"notfoundpage",normalizedTitle:"notfoundpage",charIndex:2665},{level:3,title:"projectId",slug:"projectid",normalizedTitle:"projectid",charIndex:2797},{level:3,title:"requesterPays",slug:"requesterpays",normalizedTitle:"requesterpays",charIndex:2879},{level:3,title:"retentionPeriod",slug:"retentionperiod",normalizedTitle:"retentionperiod",charIndex:3098},{level:3,title:"storageClass",slug:"storageclass",normalizedTitle:"storageclass",charIndex:3326},{level:3,title:"versioningEnabled",slug:"versioningenabled",normalizedTitle:"versioningenabled",charIndex:250},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:3733},{level:3,title:"bucket",slug:"bucket",normalizedTitle:"bucket",charIndex:73},{level:3,title:"bucketUri",slug:"bucketuri",normalizedTitle:"bucketuri",charIndex:3798},{level:3,title:"indexPage",slug:"indexpage-2",normalizedTitle:"indexpage",charIndex:1498},{level:3,title:"location",slug:"location-2",normalizedTitle:"location",charIndex:2037},{level:3,title:"notFoundPage",slug:"notfoundpage-2",normalizedTitle:"notfoundpage",charIndex:2665}],headersStr:"Examples Inputs acl cors defaultAcl defaultEventBasedHold defaultKmsKeyName iamConfiguration iamConfiguration.uniformBucketLevelAccessLockedTime ifExists indexPage labels lifecycleRules location logging logging.logBucket logging.logObjectPrefix name notFoundPage projectId requesterPays retentionPeriod storageClass versioningEnabled Outputs bucket bucketUri indexPage location notFoundPage",content:"# CreateBucket\ntype: \"org.kestra.task.gcp.gcs.CreateBucket\"\n\n\n> Create a bucket or update if it already exists.\n\n\n# Examples\n> Create a new bucket with some options\n\n\nid: \"create_bucket\"\ntype: \"org.kestra.task.gcp.gcs.CreateBucket\"\nname: \"my-bucket\"\nversioningEnabled: true\nlabels: \n  my-label: my-value\n\n\n# Inputs\n# acl\n * Type: array\n * SubType: object\n * Dynamic: ❓\n * Required: ❌\n\n> The bucket's access control configuration\n\n\nSee About Access Control Lists\n\n# cors\n * Type: array\n * SubType: object\n * Dynamic: ❓\n * Required: ❌\n\n> The bucket's Cross-Origin Resource Sharing (CORS) configuration\n\n\nSee Cross-Origin Resource Sharing (CORS)\n\n# defaultAcl\n * Type: array\n * SubType: object\n * Dynamic: ❓\n * Required: ❌\n\n> The default access control configuration\n\n\nThe access control configuration to apply to bucket's blobs when no other\nconfiguration is specified.\n\nSsee About Access Control Lists\n\n# defaultEventBasedHold\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n> The default event-based hold for this bucket\n\n\n# defaultKmsKeyName\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The default Cloud KMS key name for this bucket\n\n\n# iamConfiguration\n * Type: object\n * Dynamic: ❓\n * Required: ❌\n\n> The Bucket's IAM Configuration\n\n\nSee uniform bucket-level access\n\n# iamConfiguration.uniformBucketLevelAccessLockedTime\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n# ifExists\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Default: ERROR\n\n> Policy to apply if a bucket already exists.\n\n\n# indexPage\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The bucket's website index page\n\n\nBehaves as the bucket's directory index where missing\nblobs are treated as potential directories.\n\n# labels\n * Type: object\n * Dynamic: ❓\n * Required: ❌\n\n> The labels of this bucket\n\n\n# lifecycleRules\n * Type: array\n * SubType: object\n * Dynamic: ❓\n * Required: ❌\n\n> The bucket's lifecycle configuration\n\n\nThis configuration is expressed as a number of lifecycle rules, consisting of an\naction and a condition.\n\nSee Object Lifecycle Management\n\n# location\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The bucket's location\n\n\nData for blobs in the bucket resides in physical storage within\nthis region. A list of supported values is available here.\n\n# logging\n * Type: object\n * Dynamic: ❓\n * Required: ❌\n\n> The bucket's logging configuration\n\n\nThis configuration defines the destination bucket and optional name\nprefix for the current bucket's logs.\n\n# logging.logBucket\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# logging.logObjectPrefix\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# name\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> Bucket's unique name\n\n\n# notFoundPage\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The custom object to return when a requested resource is not found\n\n\n# projectId\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The GCP project id\n\n\n# requesterPays\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n> Whether the requester pays or not.\n\n\nWhether a user accessing the bucket or an object it contains should assume the transit\ncosts related to the access.\n\n# retentionPeriod\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n> Retention period\n\n\nIf policy is not locked this value can be cleared, increased, and decreased. If policy is\nlocked the retention period can only be increased.\n\n# storageClass\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The bucket's storage class\n\n\nThis defines how blobs in the bucket are stored and\ndetermines the SLA and the cost of storage. A list of supported values is available here.\n\n# versioningEnabled\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n> Whether versioning should be enabled for this bucket\n\n\nWhen set to true, versioning is\nfully enabled.\n\n# Outputs\n# bucket\n * Type: string\n\n> The bucket's unique name\n\n\n# bucketUri\n * Type: object\n\n> The bucket's URI.\n\n\n# indexPage\n * Type: string\n\n> The bucket's website index page.\n\n\n# location\n * Type: string\n\n> The bucket's location\n\n\n# notFoundPage\n * Type: string\n\n> The custom object to return when a requested resource is not found.",normalizedContent:"# createbucket\ntype: \"org.kestra.task.gcp.gcs.createbucket\"\n\n\n> create a bucket or update if it already exists.\n\n\n# examples\n> create a new bucket with some options\n\n\nid: \"create_bucket\"\ntype: \"org.kestra.task.gcp.gcs.createbucket\"\nname: \"my-bucket\"\nversioningenabled: true\nlabels: \n  my-label: my-value\n\n\n# inputs\n# acl\n * type: array\n * subtype: object\n * dynamic: ❓\n * required: ❌\n\n> the bucket's access control configuration\n\n\nsee about access control lists\n\n# cors\n * type: array\n * subtype: object\n * dynamic: ❓\n * required: ❌\n\n> the bucket's cross-origin resource sharing (cors) configuration\n\n\nsee cross-origin resource sharing (cors)\n\n# defaultacl\n * type: array\n * subtype: object\n * dynamic: ❓\n * required: ❌\n\n> the default access control configuration\n\n\nthe access control configuration to apply to bucket's blobs when no other\nconfiguration is specified.\n\nssee about access control lists\n\n# defaulteventbasedhold\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n> the default event-based hold for this bucket\n\n\n# defaultkmskeyname\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the default cloud kms key name for this bucket\n\n\n# iamconfiguration\n * type: object\n * dynamic: ❓\n * required: ❌\n\n> the bucket's iam configuration\n\n\nsee uniform bucket-level access\n\n# iamconfiguration.uniformbucketlevelaccesslockedtime\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n# ifexists\n * type: string\n * dynamic: ❓\n * required: ❌\n * default: error\n\n> policy to apply if a bucket already exists.\n\n\n# indexpage\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the bucket's website index page\n\n\nbehaves as the bucket's directory index where missing\nblobs are treated as potential directories.\n\n# labels\n * type: object\n * dynamic: ❓\n * required: ❌\n\n> the labels of this bucket\n\n\n# lifecyclerules\n * type: array\n * subtype: object\n * dynamic: ❓\n * required: ❌\n\n> the bucket's lifecycle configuration\n\n\nthis configuration is expressed as a number of lifecycle rules, consisting of an\naction and a condition.\n\nsee object lifecycle management\n\n# location\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the bucket's location\n\n\ndata for blobs in the bucket resides in physical storage within\nthis region. a list of supported values is available here.\n\n# logging\n * type: object\n * dynamic: ❓\n * required: ❌\n\n> the bucket's logging configuration\n\n\nthis configuration defines the destination bucket and optional name\nprefix for the current bucket's logs.\n\n# logging.logbucket\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# logging.logobjectprefix\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# name\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> bucket's unique name\n\n\n# notfoundpage\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the custom object to return when a requested resource is not found\n\n\n# projectid\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the gcp project id\n\n\n# requesterpays\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n> whether the requester pays or not.\n\n\nwhether a user accessing the bucket or an object it contains should assume the transit\ncosts related to the access.\n\n# retentionperiod\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n> retention period\n\n\nif policy is not locked this value can be cleared, increased, and decreased. if policy is\nlocked the retention period can only be increased.\n\n# storageclass\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the bucket's storage class\n\n\nthis defines how blobs in the bucket are stored and\ndetermines the sla and the cost of storage. a list of supported values is available here.\n\n# versioningenabled\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n> whether versioning should be enabled for this bucket\n\n\nwhen set to true, versioning is\nfully enabled.\n\n# outputs\n# bucket\n * type: string\n\n> the bucket's unique name\n\n\n# bucketuri\n * type: object\n\n> the bucket's uri.\n\n\n# indexpage\n * type: string\n\n> the bucket's website index page.\n\n\n# location\n * type: string\n\n> the bucket's location\n\n\n# notfoundpage\n * type: string\n\n> the custom object to return when a requested resource is not found.",charsets:{}},{title:"Delete",frontmatter:{title:"Delete",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Delete"},{property:"og:description",content:"Delete | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.Delete.html"},{name:"twitter:title",content:"Delete"},{name:"twitter:description",content:"Delete | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.Delete.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Delete | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.Delete.html",relativePath:"plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.Delete.md",key:"v-780273ba",path:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.Delete.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:87},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:187},{level:3,title:"errorOnMissing",slug:"erroronmissing",normalizedTitle:"erroronmissing",charIndex:196},{level:3,title:"projectId",slug:"projectid",normalizedTitle:"projectid",charIndex:305},{level:3,title:"uri",slug:"uri",normalizedTitle:"uri",charIndex:148},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:463},{level:3,title:"deleted",slug:"deleted",normalizedTitle:"deleted",charIndex:473},{level:3,title:"uri",slug:"uri-2",normalizedTitle:"uri",charIndex:148}],headersStr:"Examples Inputs errorOnMissing projectId uri Outputs deleted uri",content:'# Delete\ntype: "org.kestra.task.gcp.gcs.Delete"\n\n\n> Delete a file to a GCS bucket.\n\n\n# Examples\nid: "delete"\ntype: "org.kestra.task.gcp.gcs.Delete"\nuri: "gs://my_bucket/dir/file.csv"\n\n\n# Inputs\n# errorOnMissing\n * Type: boolean\n * Dynamic: ✔️\n * Required: ❌\n\n> raise an error if the file is not found\n\n\n# projectId\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The GCP project id\n\n\n# uri\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The file to delete\n\n\n# Outputs\n# deleted\n * Type: boolean\n\n> If the files was really deleted\n\n\n# uri\n * Type: object\n\n> The deleted uri',normalizedContent:'# delete\ntype: "org.kestra.task.gcp.gcs.delete"\n\n\n> delete a file to a gcs bucket.\n\n\n# examples\nid: "delete"\ntype: "org.kestra.task.gcp.gcs.delete"\nuri: "gs://my_bucket/dir/file.csv"\n\n\n# inputs\n# erroronmissing\n * type: boolean\n * dynamic: ✔️\n * required: ❌\n\n> raise an error if the file is not found\n\n\n# projectid\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the gcp project id\n\n\n# uri\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the file to delete\n\n\n# outputs\n# deleted\n * type: boolean\n\n> if the files was really deleted\n\n\n# uri\n * type: object\n\n> the deleted uri',charsets:{}},{title:"DeleteBucket",frontmatter:{title:"DeleteBucket",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"DeleteBucket"},{property:"og:description",content:"DeleteBucket | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.DeleteBucket.html"},{name:"twitter:title",content:"DeleteBucket"},{name:"twitter:description",content:"DeleteBucket | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.DeleteBucket.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"DeleteBucket | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.DeleteBucket.html",relativePath:"plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.DeleteBucket.md",key:"v-6a9eb8e3",path:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.DeleteBucket.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:85},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:201},{level:3,title:"name",slug:"name",normalizedTitle:"name",charIndex:179},{level:3,title:"projectId",slug:"projectid",normalizedTitle:"projectid",charIndex:290},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:372},{level:3,title:"bucket",slug:"bucket",normalizedTitle:"bucket",charIndex:73},{level:3,title:"bucketUri",slug:"bucketuri",normalizedTitle:"bucketuri",charIndex:437}],headersStr:"Examples Inputs name projectId Outputs bucket bucketUri",content:'# DeleteBucket\ntype: "org.kestra.task.gcp.gcs.DeleteBucket"\n\n\n> Delete a bucket.\n\n\n# Examples\n> Delete a bucket\n\n\nid: "delete_bucket"\ntype: "org.kestra.task.gcp.gcs.DeleteBucket"\nname: "my-bucket"\n\n\n# Inputs\n# name\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> Bucket\'s unique name\n\n\n# projectId\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The GCP project id\n\n\n# Outputs\n# bucket\n * Type: string\n\n> The bucket\'s unique name\n\n\n# bucketUri\n * Type: object\n\n> The bucket\'s URI',normalizedContent:'# deletebucket\ntype: "org.kestra.task.gcp.gcs.deletebucket"\n\n\n> delete a bucket.\n\n\n# examples\n> delete a bucket\n\n\nid: "delete_bucket"\ntype: "org.kestra.task.gcp.gcs.deletebucket"\nname: "my-bucket"\n\n\n# inputs\n# name\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> bucket\'s unique name\n\n\n# projectid\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the gcp project id\n\n\n# outputs\n# bucket\n * type: string\n\n> the bucket\'s unique name\n\n\n# bucketuri\n * type: object\n\n> the bucket\'s uri',charsets:{}},{title:"Download",frontmatter:{title:"Download",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Download"},{property:"og:description",content:"Download | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.Download.html"},{name:"twitter:title",content:"Download"},{name:"twitter:description",content:"Download | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.Download.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Download | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.Download.html",relativePath:"plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.Download.md",key:"v-56588943",path:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.Download.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:95},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:200},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:72},{level:3,title:"projectId",slug:"projectid",normalizedTitle:"projectid",charIndex:284},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:366},{level:3,title:"bucket",slug:"bucket",normalizedTitle:"bucket",charIndex:83},{level:3,title:"path",slug:"path",normalizedTitle:"path",charIndex:440},{level:3,title:"uri",slug:"uri",normalizedTitle:"uri",charIndex:514}],headersStr:"Examples Inputs from projectId Outputs bucket path uri",content:'# Download\ntype: "org.kestra.task.gcp.gcs.Download"\n\n\n> Download a file from a GCS bucket.\n\n\n# Examples\nid: "download"\ntype: "org.kestra.task.gcp.gcs.Download"\nfrom: "gs://my_bucket/dir/file.csv"\n\n\n# Inputs\n# from\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The file to copy\n\n\n# projectId\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The GCP project id\n\n\n# Outputs\n# bucket\n * Type: string\n\n> The bucket of the downloaded file\n\n\n# path\n * Type: string\n\n> The path on the bucket of the downloaded file\n\n\n# uri\n * Type: object\n\n> The url of the downloaded file on kestra storage',normalizedContent:'# download\ntype: "org.kestra.task.gcp.gcs.download"\n\n\n> download a file from a gcs bucket.\n\n\n# examples\nid: "download"\ntype: "org.kestra.task.gcp.gcs.download"\nfrom: "gs://my_bucket/dir/file.csv"\n\n\n# inputs\n# from\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the file to copy\n\n\n# projectid\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the gcp project id\n\n\n# outputs\n# bucket\n * type: string\n\n> the bucket of the downloaded file\n\n\n# path\n * type: string\n\n> the path on the bucket of the downloaded file\n\n\n# uri\n * type: object\n\n> the url of the downloaded file on kestra storage',charsets:{}},{title:"Downloads",frontmatter:{title:"Downloads",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Downloads"},{property:"og:description",content:"Downloads | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.Downloads.html"},{name:"twitter:title",content:"Downloads"},{name:"twitter:description",content:"Downloads | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.Downloads.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Downloads | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.Downloads.html",relativePath:"plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.Downloads.md",key:"v-28b0bb5a",path:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.Downloads.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:105},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:333},{level:3,title:"action",slug:"action",normalizedTitle:"action",charIndex:270},{level:3,title:"allVersions",slug:"allversions",normalizedTitle:"allversions",charIndex:481},{level:3,title:"filter",slug:"filter",normalizedTitle:"filter",charIndex:615},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:82},{level:3,title:"listingType",slug:"listingtype",normalizedTitle:"listingtype",charIndex:802},{level:3,title:"moveDirectory",slug:"movedirectory",normalizedTitle:"movedirectory",charIndex:283},{level:3,title:"projectId",slug:"projectid",normalizedTitle:"projectid",charIndex:1054},{level:3,title:"regExp",slug:"regexp",normalizedTitle:"regexp",charIndex:1136},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1228},{level:3,title:"blobs",slug:"blobs",normalizedTitle:"blobs",charIndex:1238}],headersStr:"Examples Inputs action allVersions filter from listingType moveDirectory projectId regExp Outputs blobs",content:'# Downloads\ntype: "org.kestra.task.gcp.gcs.Downloads"\n\n\n> Download multiple files from a GCS bucket.\n\n\n# Examples\n> Download a list of files and move it to an archive folders\n\n\nid: "downloads"\ntype: "org.kestra.task.gcp.gcs.Downloads"\nfrom: gs://my-bucket/kestra/files/\naction: MOVE\nmoveDirectory: gs://my-bucket/kestra/archive/\n\n\n# Inputs\n# action\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The action to do on find files\n\n\nCan be null, in this case no action is perform\n\n# allVersions\n * Type: boolean\n * Dynamic: ✔️\n * Required: ❌\n\n> If set to true, lists all versions of a blob. The default is false.\n\n\n# filter\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Default: BOTH\n\n> The filter files or directory\n\n\n# from\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The directory to list\n\n\n# listingType\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Default: DIRECTORY\n\n> The listing type you want (like directory or recursive)\n\n\n# moveDirectory\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The destination directory in case off MOVE\n\n\n# projectId\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The GCP project id\n\n\n# regExp\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> A regexp to filter on full path\n\n\n# Outputs\n# blobs\n * Type: array\n * SubType: object\n\n> The bucket of the downloaded file',normalizedContent:'# downloads\ntype: "org.kestra.task.gcp.gcs.downloads"\n\n\n> download multiple files from a gcs bucket.\n\n\n# examples\n> download a list of files and move it to an archive folders\n\n\nid: "downloads"\ntype: "org.kestra.task.gcp.gcs.downloads"\nfrom: gs://my-bucket/kestra/files/\naction: move\nmovedirectory: gs://my-bucket/kestra/archive/\n\n\n# inputs\n# action\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the action to do on find files\n\n\ncan be null, in this case no action is perform\n\n# allversions\n * type: boolean\n * dynamic: ✔️\n * required: ❌\n\n> if set to true, lists all versions of a blob. the default is false.\n\n\n# filter\n * type: string\n * dynamic: ❓\n * required: ❌\n * default: both\n\n> the filter files or directory\n\n\n# from\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the directory to list\n\n\n# listingtype\n * type: string\n * dynamic: ❓\n * required: ❌\n * default: directory\n\n> the listing type you want (like directory or recursive)\n\n\n# movedirectory\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the destination directory in case off move\n\n\n# projectid\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the gcp project id\n\n\n# regexp\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> a regexp to filter on full path\n\n\n# outputs\n# blobs\n * type: array\n * subtype: object\n\n> the bucket of the downloaded file',charsets:{}},{title:"List",frontmatter:{title:"List",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"List"},{property:"og:description",content:"List | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.List.html"},{name:"twitter:title",content:"List"},{name:"twitter:description",content:"List | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.List.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"List | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.List.html",relativePath:"plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.List.md",key:"v-50e7ae83",path:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.List.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:79},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:195},{level:3,title:"allVersions",slug:"allversions",normalizedTitle:"allversions",charIndex:204},{level:3,title:"filter",slug:"filter",normalizedTitle:"filter",charIndex:338},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:163},{level:3,title:"listingType",slug:"listingtype",normalizedTitle:"listingtype",charIndex:525},{level:3,title:"projectId",slug:"projectid",normalizedTitle:"projectid",charIndex:667},{level:3,title:"regExp",slug:"regexp",normalizedTitle:"regexp",charIndex:749},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:841},{level:3,title:"blobs",slug:"blobs",normalizedTitle:"blobs",charIndex:851}],headersStr:"Examples Inputs allVersions filter from listingType projectId regExp Outputs blobs",content:'# List\ntype: "org.kestra.task.gcp.gcs.List"\n\n\n> List file on a GCS bucket.\n\n\n# Examples\n> List files in a bucket\n\n\nid: "list"\ntype: "org.kestra.task.gcp.gcs.List"\nfrom: "gs://my_bucket/dir/"\n\n\n# Inputs\n# allVersions\n * Type: boolean\n * Dynamic: ✔️\n * Required: ❌\n\n> If set to true, lists all versions of a blob. The default is false.\n\n\n# filter\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Default: BOTH\n\n> The filter files or directory\n\n\n# from\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The directory to list\n\n\n# listingType\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Default: DIRECTORY\n\n> The listing type you want (like directory or recursive)\n\n\n# projectId\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The GCP project id\n\n\n# regExp\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> A regexp to filter on full path\n\n\n# Outputs\n# blobs\n * Type: array\n * SubType: object\n\n> The list of blobs',normalizedContent:'# list\ntype: "org.kestra.task.gcp.gcs.list"\n\n\n> list file on a gcs bucket.\n\n\n# examples\n> list files in a bucket\n\n\nid: "list"\ntype: "org.kestra.task.gcp.gcs.list"\nfrom: "gs://my_bucket/dir/"\n\n\n# inputs\n# allversions\n * type: boolean\n * dynamic: ✔️\n * required: ❌\n\n> if set to true, lists all versions of a blob. the default is false.\n\n\n# filter\n * type: string\n * dynamic: ❓\n * required: ❌\n * default: both\n\n> the filter files or directory\n\n\n# from\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the directory to list\n\n\n# listingtype\n * type: string\n * dynamic: ❓\n * required: ❌\n * default: directory\n\n> the listing type you want (like directory or recursive)\n\n\n# projectid\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the gcp project id\n\n\n# regexp\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> a regexp to filter on full path\n\n\n# outputs\n# blobs\n * type: array\n * subtype: object\n\n> the list of blobs',charsets:{}},{title:"UpdateBucket",frontmatter:{title:"UpdateBucket",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"UpdateBucket"},{property:"og:description",content:"UpdateBucket | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.UpdateBucket.html"},{name:"twitter:title",content:"UpdateBucket"},{name:"twitter:description",content:"UpdateBucket | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.UpdateBucket.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"UpdateBucket | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.UpdateBucket.html",relativePath:"plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.UpdateBucket.md",key:"v-23af7da3",path:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.UpdateBucket.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:85},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:240},{level:3,title:"acl",slug:"acl",normalizedTitle:"acl",charIndex:249},{level:3,title:"cors",slug:"cors",normalizedTitle:"cors",charIndex:397},{level:3,title:"defaultAcl",slug:"defaultacl",normalizedTitle:"defaultacl",charIndex:578},{level:3,title:"defaultEventBasedHold",slug:"defaulteventbasedhold",normalizedTitle:"defaulteventbasedhold",charIndex:836},{level:3,title:"defaultKmsKeyName",slug:"defaultkmskeyname",normalizedTitle:"defaultkmskeyname",charIndex:956},{level:3,title:"iamConfiguration",slug:"iamconfiguration",normalizedTitle:"iamconfiguration",charIndex:1073},{level:3,title:"iamConfiguration.uniformBucketLevelAccessLockedTime",slug:"iamconfiguration-uniformbucketlevelaccesslockedtime",normalizedTitle:"iamconfiguration.uniformbucketlevelaccesslockedtime",charIndex:1206},{level:3,title:"indexPage",slug:"indexpage",normalizedTitle:"indexpage",charIndex:1307},{level:3,title:"labels",slug:"labels",normalizedTitle:"labels",charIndex:115},{level:3,title:"lifecycleRules",slug:"lifecyclerules",normalizedTitle:"lifecyclerules",charIndex:1585},{level:3,title:"location",slug:"location",normalizedTitle:"location",charIndex:1846},{level:3,title:"logging",slug:"logging",normalizedTitle:"logging",charIndex:2054},{level:3,title:"logging.logBucket",slug:"logging-logbucket",normalizedTitle:"logging.logbucket",charIndex:2256},{level:3,title:"logging.logObjectPrefix",slug:"logging-logobjectprefix",normalizedTitle:"logging.logobjectprefix",charIndex:2322},{level:3,title:"name",slug:"name",normalizedTitle:"name",charIndex:189},{level:3,title:"notFoundPage",slug:"notfoundpage",normalizedTitle:"notfoundpage",charIndex:2474},{level:3,title:"projectId",slug:"projectid",normalizedTitle:"projectid",charIndex:2606},{level:3,title:"requesterPays",slug:"requesterpays",normalizedTitle:"requesterpays",charIndex:2688},{level:3,title:"retentionPeriod",slug:"retentionperiod",normalizedTitle:"retentionperiod",charIndex:2907},{level:3,title:"storageClass",slug:"storageclass",normalizedTitle:"storageclass",charIndex:3135},{level:3,title:"versioningEnabled",slug:"versioningenabled",normalizedTitle:"versioningenabled",charIndex:3370},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:3542},{level:3,title:"bucket",slug:"bucket",normalizedTitle:"bucket",charIndex:73},{level:3,title:"bucketUri",slug:"bucketuri",normalizedTitle:"bucketuri",charIndex:3607},{level:3,title:"indexPage",slug:"indexpage-2",normalizedTitle:"indexpage",charIndex:1307},{level:3,title:"location",slug:"location-2",normalizedTitle:"location",charIndex:1846},{level:3,title:"notFoundPage",slug:"notfoundpage-2",normalizedTitle:"notfoundpage",charIndex:2474}],headersStr:"Examples Inputs acl cors defaultAcl defaultEventBasedHold defaultKmsKeyName iamConfiguration iamConfiguration.uniformBucketLevelAccessLockedTime indexPage labels lifecycleRules location logging logging.logBucket logging.logObjectPrefix name notFoundPage projectId requesterPays retentionPeriod storageClass versioningEnabled Outputs bucket bucketUri indexPage location notFoundPage",content:"# UpdateBucket\ntype: \"org.kestra.task.gcp.gcs.UpdateBucket\"\n\n\n> Update a bucket.\n\n\n# Examples\n> Update some bucket labels\n\n\nid: \"update_bucket\"\ntype: \"org.kestra.task.gcp.gcs.UpdateBucket\"\nname: \"my-bucket\"\nlabels:\n  my-label: my-value\n\n\n# Inputs\n# acl\n * Type: array\n * SubType: object\n * Dynamic: ❓\n * Required: ❌\n\n> The bucket's access control configuration\n\n\nSee About Access Control Lists\n\n# cors\n * Type: array\n * SubType: object\n * Dynamic: ❓\n * Required: ❌\n\n> The bucket's Cross-Origin Resource Sharing (CORS) configuration\n\n\nSee Cross-Origin Resource Sharing (CORS)\n\n# defaultAcl\n * Type: array\n * SubType: object\n * Dynamic: ❓\n * Required: ❌\n\n> The default access control configuration\n\n\nThe access control configuration to apply to bucket's blobs when no other\nconfiguration is specified.\n\nSsee About Access Control Lists\n\n# defaultEventBasedHold\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n> The default event-based hold for this bucket\n\n\n# defaultKmsKeyName\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The default Cloud KMS key name for this bucket\n\n\n# iamConfiguration\n * Type: object\n * Dynamic: ❓\n * Required: ❌\n\n> The Bucket's IAM Configuration\n\n\nSee uniform bucket-level access\n\n# iamConfiguration.uniformBucketLevelAccessLockedTime\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n# indexPage\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The bucket's website index page\n\n\nBehaves as the bucket's directory index where missing\nblobs are treated as potential directories.\n\n# labels\n * Type: object\n * Dynamic: ❓\n * Required: ❌\n\n> The labels of this bucket\n\n\n# lifecycleRules\n * Type: array\n * SubType: object\n * Dynamic: ❓\n * Required: ❌\n\n> The bucket's lifecycle configuration\n\n\nThis configuration is expressed as a number of lifecycle rules, consisting of an\naction and a condition.\n\nSee Object Lifecycle Management\n\n# location\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The bucket's location\n\n\nData for blobs in the bucket resides in physical storage within\nthis region. A list of supported values is available here.\n\n# logging\n * Type: object\n * Dynamic: ❓\n * Required: ❌\n\n> The bucket's logging configuration\n\n\nThis configuration defines the destination bucket and optional name\nprefix for the current bucket's logs.\n\n# logging.logBucket\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# logging.logObjectPrefix\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# name\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> Bucket's unique name\n\n\n# notFoundPage\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The custom object to return when a requested resource is not found\n\n\n# projectId\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The GCP project id\n\n\n# requesterPays\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n> Whether the requester pays or not.\n\n\nWhether a user accessing the bucket or an object it contains should assume the transit\ncosts related to the access.\n\n# retentionPeriod\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n> Retention period\n\n\nIf policy is not locked this value can be cleared, increased, and decreased. If policy is\nlocked the retention period can only be increased.\n\n# storageClass\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The bucket's storage class\n\n\nThis defines how blobs in the bucket are stored and\ndetermines the SLA and the cost of storage. A list of supported values is available here.\n\n# versioningEnabled\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n> Whether versioning should be enabled for this bucket\n\n\nWhen set to true, versioning is\nfully enabled.\n\n# Outputs\n# bucket\n * Type: string\n\n> The bucket's unique name\n\n\n# bucketUri\n * Type: object\n\n> The bucket's URI.\n\n\n# indexPage\n * Type: string\n\n> The bucket's website index page.\n\n\n# location\n * Type: string\n\n> The bucket's location\n\n\n# notFoundPage\n * Type: string\n\n> The custom object to return when a requested resource is not found.",normalizedContent:"# updatebucket\ntype: \"org.kestra.task.gcp.gcs.updatebucket\"\n\n\n> update a bucket.\n\n\n# examples\n> update some bucket labels\n\n\nid: \"update_bucket\"\ntype: \"org.kestra.task.gcp.gcs.updatebucket\"\nname: \"my-bucket\"\nlabels:\n  my-label: my-value\n\n\n# inputs\n# acl\n * type: array\n * subtype: object\n * dynamic: ❓\n * required: ❌\n\n> the bucket's access control configuration\n\n\nsee about access control lists\n\n# cors\n * type: array\n * subtype: object\n * dynamic: ❓\n * required: ❌\n\n> the bucket's cross-origin resource sharing (cors) configuration\n\n\nsee cross-origin resource sharing (cors)\n\n# defaultacl\n * type: array\n * subtype: object\n * dynamic: ❓\n * required: ❌\n\n> the default access control configuration\n\n\nthe access control configuration to apply to bucket's blobs when no other\nconfiguration is specified.\n\nssee about access control lists\n\n# defaulteventbasedhold\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n> the default event-based hold for this bucket\n\n\n# defaultkmskeyname\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the default cloud kms key name for this bucket\n\n\n# iamconfiguration\n * type: object\n * dynamic: ❓\n * required: ❌\n\n> the bucket's iam configuration\n\n\nsee uniform bucket-level access\n\n# iamconfiguration.uniformbucketlevelaccesslockedtime\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n# indexpage\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the bucket's website index page\n\n\nbehaves as the bucket's directory index where missing\nblobs are treated as potential directories.\n\n# labels\n * type: object\n * dynamic: ❓\n * required: ❌\n\n> the labels of this bucket\n\n\n# lifecyclerules\n * type: array\n * subtype: object\n * dynamic: ❓\n * required: ❌\n\n> the bucket's lifecycle configuration\n\n\nthis configuration is expressed as a number of lifecycle rules, consisting of an\naction and a condition.\n\nsee object lifecycle management\n\n# location\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the bucket's location\n\n\ndata for blobs in the bucket resides in physical storage within\nthis region. a list of supported values is available here.\n\n# logging\n * type: object\n * dynamic: ❓\n * required: ❌\n\n> the bucket's logging configuration\n\n\nthis configuration defines the destination bucket and optional name\nprefix for the current bucket's logs.\n\n# logging.logbucket\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# logging.logobjectprefix\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# name\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> bucket's unique name\n\n\n# notfoundpage\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the custom object to return when a requested resource is not found\n\n\n# projectid\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the gcp project id\n\n\n# requesterpays\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n> whether the requester pays or not.\n\n\nwhether a user accessing the bucket or an object it contains should assume the transit\ncosts related to the access.\n\n# retentionperiod\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n> retention period\n\n\nif policy is not locked this value can be cleared, increased, and decreased. if policy is\nlocked the retention period can only be increased.\n\n# storageclass\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the bucket's storage class\n\n\nthis defines how blobs in the bucket are stored and\ndetermines the sla and the cost of storage. a list of supported values is available here.\n\n# versioningenabled\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n> whether versioning should be enabled for this bucket\n\n\nwhen set to true, versioning is\nfully enabled.\n\n# outputs\n# bucket\n * type: string\n\n> the bucket's unique name\n\n\n# bucketuri\n * type: object\n\n> the bucket's uri.\n\n\n# indexpage\n * type: string\n\n> the bucket's website index page.\n\n\n# location\n * type: string\n\n> the bucket's location\n\n\n# notfoundpage\n * type: string\n\n> the custom object to return when a requested resource is not found.",charsets:{}},{title:"Upload",frontmatter:{title:"Upload",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Upload"},{property:"og:description",content:"Upload | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.Upload.html"},{name:"twitter:title",content:"Upload"},{name:"twitter:description",content:"Upload | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.Upload.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Upload | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.Upload.html",relativePath:"plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.Upload.md",key:"v-b51bc33a",path:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.Upload.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:87},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:212},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:148},{level:3,title:"projectId",slug:"projectid",normalizedTitle:"projectid",charIndex:296},{level:3,title:"to",slug:"to",normalizedTitle:"to",charIndex:66},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:455},{level:3,title:"uri",slug:"uri",normalizedTitle:"uri",charIndex:465}],headersStr:"Examples Inputs from projectId to Outputs uri",content:'# Upload\ntype: "org.kestra.task.gcp.gcs.Upload"\n\n\n> Upload a file to a GCS bucket.\n\n\n# Examples\nid: "upload"\ntype: "org.kestra.task.gcp.gcs.Upload"\nfrom: "{{ inputs.file }}"\nto: "gs://my_bucket/dir/file.csv"\n\n\n# Inputs\n# from\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The file to copy\n\n\n# projectId\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The GCP project id\n\n\n# to\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The destination path\n\n\n# Outputs\n# uri\n * Type: object',normalizedContent:'# upload\ntype: "org.kestra.task.gcp.gcs.upload"\n\n\n> upload a file to a gcs bucket.\n\n\n# examples\nid: "upload"\ntype: "org.kestra.task.gcp.gcs.upload"\nfrom: "{{ inputs.file }}"\nto: "gs://my_bucket/dir/file.csv"\n\n\n# inputs\n# from\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the file to copy\n\n\n# projectid\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the gcp project id\n\n\n# to\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the destination path\n\n\n# outputs\n# uri\n * type: object',charsets:{}},{title:"ClusterMetadata",frontmatter:{title:"ClusterMetadata",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"ClusterMetadata"},{property:"og:description",content:"ClusterMetadata | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-gcp/tasks/gke/org.kestra.task.gcp.gke.ClusterMetadata.html"},{name:"twitter:title",content:"ClusterMetadata"},{name:"twitter:description",content:"ClusterMetadata | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/plugins/task-gcp/tasks/gke/org.kestra.task.gcp.gke.ClusterMetadata.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"ClusterMetadata | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/plugins/task-gcp/tasks/gke/org.kestra.task.gcp.gke.ClusterMetadata.html",relativePath:"plugins/task-gcp/tasks/gke/org.kestra.task.gcp.gke.ClusterMetadata.md",key:"v-3f3b5722",path:"/plugins/task-gcp/tasks/gke/org.kestra.task.gcp.gke.ClusterMetadata.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:92},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:294},{level:3,title:"clusterId",slug:"clusterid",normalizedTitle:"clusterid",charIndex:265},{level:3,title:"projectId",slug:"projectid",normalizedTitle:"projectid",charIndex:223},{level:3,title:"zone",slug:"zone",normalizedTitle:"zone",charIndex:248},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:587},{level:3,title:"clusterIpv4Cidr",slug:"clusteripv4cidr",normalizedTitle:"clusteripv4cidr",charIndex:597},{level:3,title:"createTime",slug:"createtime",normalizedTitle:"createtime",charIndex:632},{level:3,title:"description",slug:"description",normalizedTitle:"description",charIndex:662},{level:3,title:"endpoint",slug:"endpoint",normalizedTitle:"endpoint",charIndex:693},{level:3,title:"link",slug:"link",normalizedTitle:"link",charIndex:721},{level:3,title:"location",slug:"location",normalizedTitle:"location",charIndex:745},{level:3,title:"loggingService",slug:"loggingservice",normalizedTitle:"loggingservice",charIndex:773},{level:3,title:"masterAuth",slug:"masterauth",normalizedTitle:"masterauth",charIndex:807},{level:3,title:"masterAuth.clientCertificat",slug:"masterauth-clientcertificat",normalizedTitle:"masterauth.clientcertificat",charIndex:837},{level:3,title:"masterAuth.clientKey",slug:"masterauth-clientkey",normalizedTitle:"masterauth.clientkey",charIndex:884},{level:3,title:"masterAuth.clusterCertificat",slug:"masterauth-clustercertificat",normalizedTitle:"masterauth.clustercertificat",charIndex:924},{level:3,title:"masterAuth.password",slug:"masterauth-password",normalizedTitle:"masterauth.password",charIndex:972},{level:3,title:"masterAuth.username",slug:"masterauth-username",normalizedTitle:"masterauth.username",charIndex:1011},{level:3,title:"monitoringService",slug:"monitoringservice",normalizedTitle:"monitoringservice",charIndex:1265},{level:3,title:"name",slug:"name",normalizedTitle:"name",charIndex:205},{level:3,title:"network",slug:"network",normalizedTitle:"network",charIndex:1326},{level:3,title:"nodePools",slug:"nodepools",normalizedTitle:"nodepools",charIndex:1353},{level:3,title:"nodePoolsCount",slug:"nodepoolscount",normalizedTitle:"nodepoolscount",charIndex:1400},{level:3,title:"project",slug:"project",normalizedTitle:"project",charIndex:223},{level:3,title:"subNetwork",slug:"subnetwork",normalizedTitle:"subnetwork",charIndex:1462},{level:3,title:"zone",slug:"zone-2",normalizedTitle:"zone",charIndex:248}],headersStr:"Examples Inputs clusterId projectId zone Outputs clusterIpv4Cidr createTime description endpoint link location loggingService masterAuth masterAuth.clientCertificat masterAuth.clientKey masterAuth.clusterCertificat masterAuth.password masterAuth.username monitoringService name network nodePools nodePoolsCount project subNetwork zone",content:'# ClusterMetadata\ntype: "org.kestra.task.gcp.gke.ClusterMetadata"\n\n\n> Delete a dataset.\n\n\n# Examples\n> Fetch a gke cluster metadata\n\n\nid: "cluster_metadata"\ntype: "org.kestra.task.gcp.gke.ClusterMetadata"\nname: "gke-metas"\nprojectId: my-project-id\nzone: eu-west-1c\nclusterId: my-cluster-id\n\n\n# Inputs\n# clusterId\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> Cluster id where meta data are fetch\n\n\n# projectId\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Project ID in GCP were is located cluster\n\n\n# zone\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Cluster zone in GCP\n\n\n# Outputs\n# clusterIpv4Cidr\n * Type: string\n\n# createTime\n * Type: string\n\n# description\n * Type: string\n\n# endpoint\n * Type: string\n\n# link\n * Type: string\n\n# location\n * Type: string\n\n# loggingService\n * Type: string\n\n# masterAuth\n * Type: object\n\n# masterAuth.clientCertificat\n * Type: string\n\n# masterAuth.clientKey\n * Type: string\n\n# masterAuth.clusterCertificat\n * Type: string\n\n# masterAuth.password\n * Type: string\n\n# masterAuth.username\n * Type: string\n\n> The username to use for HTTP basic authentication to the master endpoint.\n\n\nFor clusters v1.6.0 and later, basic authentication can be disabled byleaving username unspecified (or setting it to the empty string).\n\n# monitoringService\n * Type: string\n\n# name\n * Type: string\n\n# network\n * Type: string\n\n# nodePools\n * Type: array\n * SubType: object\n\n# nodePoolsCount\n * Type: integer\n\n# project\n * Type: string\n\n# subNetwork\n * Type: string\n\n# zone\n * Type: string',normalizedContent:'# clustermetadata\ntype: "org.kestra.task.gcp.gke.clustermetadata"\n\n\n> delete a dataset.\n\n\n# examples\n> fetch a gke cluster metadata\n\n\nid: "cluster_metadata"\ntype: "org.kestra.task.gcp.gke.clustermetadata"\nname: "gke-metas"\nprojectid: my-project-id\nzone: eu-west-1c\nclusterid: my-cluster-id\n\n\n# inputs\n# clusterid\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> cluster id where meta data are fetch\n\n\n# projectid\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> project id in gcp were is located cluster\n\n\n# zone\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> cluster zone in gcp\n\n\n# outputs\n# clusteripv4cidr\n * type: string\n\n# createtime\n * type: string\n\n# description\n * type: string\n\n# endpoint\n * type: string\n\n# link\n * type: string\n\n# location\n * type: string\n\n# loggingservice\n * type: string\n\n# masterauth\n * type: object\n\n# masterauth.clientcertificat\n * type: string\n\n# masterauth.clientkey\n * type: string\n\n# masterauth.clustercertificat\n * type: string\n\n# masterauth.password\n * type: string\n\n# masterauth.username\n * type: string\n\n> the username to use for http basic authentication to the master endpoint.\n\n\nfor clusters v1.6.0 and later, basic authentication can be disabled byleaving username unspecified (or setting it to the empty string).\n\n# monitoringservice\n * type: string\n\n# name\n * type: string\n\n# network\n * type: string\n\n# nodepools\n * type: array\n * subtype: object\n\n# nodepoolscount\n * type: integer\n\n# project\n * type: string\n\n# subnetwork\n * type: string\n\n# zone\n * type: string',charsets:{}},{title:"Trigger",frontmatter:{title:"Trigger",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Trigger"},{property:"og:description",content:"Trigger | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-gcp/triggers/gcs/org.kestra.task.gcp.gcs.Trigger.html"},{name:"twitter:title",content:"Trigger"},{name:"twitter:description",content:"Trigger | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/plugins/task-gcp/triggers/gcs/org.kestra.task.gcp.gcs.Trigger.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Trigger | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/plugins/task-gcp/triggers/gcs/org.kestra.task.gcp.gcs.Trigger.html",relativePath:"plugins/task-gcp/triggers/gcs/org.kestra.task.gcp.gcs.Trigger.md",key:"v-625fbfba",path:"/plugins/task-gcp/triggers/gcs/org.kestra.task.gcp.gcs.Trigger.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:97},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:662},{level:3,title:"action",slug:"action",normalizedTitle:"action",charIndex:595},{level:3,title:"filter",slug:"filter",normalizedTitle:"filter",charIndex:763},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:555},{level:3,title:"interval",slug:"interval",normalizedTitle:"interval",charIndex:534},{level:3,title:"interval.seconds",slug:"interval-seconds",normalizedTitle:"interval.seconds",charIndex:1074},{level:3,title:"listingType",slug:"listingtype",normalizedTitle:"listingtype",charIndex:1140},{level:3,title:"moveDirectory",slug:"movedirectory",normalizedTitle:"movedirectory",charIndex:612},{level:3,title:"projectId",slug:"projectid",normalizedTitle:"projectid",charIndex:1392},{level:3,title:"regExp",slug:"regexp",normalizedTitle:"regexp",charIndex:1474}],headersStr:"Examples Inputs action filter from interval interval.seconds listingType moveDirectory projectId regExp",content:'# Trigger\ntype: "org.kestra.task.gcp.gcs.Trigger"\n\n\n> Wait for files on Google cloud storage\n\n\n# Examples\n> Wait for a list of file on a GCS bucket and iterate through the files\n\n\nid: gcs-listen\nnamespace: org.kestra.tests\n\ntasks:\n  - id: each\n    type: org.kestra.core.tasks.flows.EachSequential\n    tasks:\n      - id: return\n        type: org.kestra.core.tasks.debugs.Return\n        format: "{{taskrun.value}}"\n    value: "{{ jq trigger \'.blobs[].uri\' true }}"\n\ntriggers:\n  - id: watch\n    type: org.kestra.task.gcp.gcs.Trigger\n    interval: "PT5M"\n    from: gs://my-bucket/kestra/listen/\n    action: MOVE\n    moveDirectory: gs://my-bucket/kestra/archive/\n\n\n# Inputs\n# action\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The action to do on find files\n\n\n# filter\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Default: BOTH\n\n> The filter files or directory\n\n\n# from\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The directory to list\n\n\n# interval\n * Type: object\n * Dynamic: ❓\n * Required: ❌\n * Default: 60.000000000\n\n> The interval between test of triggers\n\n\n# interval.seconds\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n# listingType\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Default: DIRECTORY\n\n> The listing type you want (like directory or recursive)\n\n\n# moveDirectory\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The destination directory in case off MOVE\n\n\n# projectId\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The GCP project id\n\n\n# regExp\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> A regexp to filter on full path',normalizedContent:'# trigger\ntype: "org.kestra.task.gcp.gcs.trigger"\n\n\n> wait for files on google cloud storage\n\n\n# examples\n> wait for a list of file on a gcs bucket and iterate through the files\n\n\nid: gcs-listen\nnamespace: org.kestra.tests\n\ntasks:\n  - id: each\n    type: org.kestra.core.tasks.flows.eachsequential\n    tasks:\n      - id: return\n        type: org.kestra.core.tasks.debugs.return\n        format: "{{taskrun.value}}"\n    value: "{{ jq trigger \'.blobs[].uri\' true }}"\n\ntriggers:\n  - id: watch\n    type: org.kestra.task.gcp.gcs.trigger\n    interval: "pt5m"\n    from: gs://my-bucket/kestra/listen/\n    action: move\n    movedirectory: gs://my-bucket/kestra/archive/\n\n\n# inputs\n# action\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the action to do on find files\n\n\n# filter\n * type: string\n * dynamic: ❓\n * required: ❌\n * default: both\n\n> the filter files or directory\n\n\n# from\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the directory to list\n\n\n# interval\n * type: object\n * dynamic: ❓\n * required: ❌\n * default: 60.000000000\n\n> the interval between test of triggers\n\n\n# interval.seconds\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n# listingtype\n * type: string\n * dynamic: ❓\n * required: ❌\n * default: directory\n\n> the listing type you want (like directory or recursive)\n\n\n# movedirectory\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the destination directory in case off move\n\n\n# projectid\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the gcp project id\n\n\n# regexp\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> a regexp to filter on full path',charsets:{}},{title:"Query",frontmatter:{title:"Query",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Query"},{property:"og:description",content:"Query | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-jdbc-mysql/tasks/mysql/org.kestra.task.jdbc.mysql.Query.html"},{name:"twitter:title",content:"Query"},{name:"twitter:description",content:"Query | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/plugins/task-jdbc-mysql/tasks/mysql/org.kestra.task.jdbc.mysql.Query.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Query | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/plugins/task-jdbc-mysql/tasks/mysql/org.kestra.task.jdbc.mysql.Query.html",relativePath:"plugins/task-jdbc-mysql/tasks/mysql/org.kestra.task.jdbc.mysql.Query.md",key:"v-a5890592",path:"/plugins/task-jdbc-mysql/tasks/mysql/org.kestra.task.jdbc.mysql.Query.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:334},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:587},{level:3,title:"fetch",slug:"fetch",normalizedTitle:"fetch",charIndex:380},{level:3,title:"fetchOne",slug:"fetchone",normalizedTitle:"fetchone",charIndex:568},{level:3,title:"password",slug:"password",normalizedTitle:"password",charIndex:517},{level:3,title:"sql",slug:"sql",normalizedTitle:"sql",charIndex:38},{level:3,title:"store",slug:"store",normalizedTitle:"store",charIndex:768},{level:3,title:"timeZoneId",slug:"timezoneid",normalizedTitle:"timezoneid",charIndex:1425},{level:3,title:"url",slug:"url",normalizedTitle:"url",charIndex:458},{level:3,title:"username",slug:"username",normalizedTitle:"username",charIndex:498},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1762},{level:3,title:"row",slug:"row",normalizedTitle:"row",charIndex:388},{level:3,title:"rows",slug:"rows",normalizedTitle:"rows",charIndex:1900},{level:3,title:"size",slug:"size",normalizedTitle:"size",charIndex:2042},{level:3,title:"uri",slug:"uri",normalizedTitle:"uri",charIndex:2164}],headersStr:"Examples Inputs fetch fetchOne password sql store timeZoneId url username Outputs row rows size uri",content:"# Query\ntype: \"org.kestra.task.jdbc.mysql.Query\"\n\n\n> MySQL Query Task.\n\n\nCurrently supported types are the following ones :\n\n * serial,\n * tinyint,\n * char(n),\n * varchar(n),\n * text,\n * bigint,\n * bit(n),\n * float,\n * double,\n * numeric,\n * decimal,\n * date,\n * datetime(n),\n * time,\n * timestamp(n),\n * year(n),\n * json,\n * blob\n\n# Examples\n> Request a PostgresSQL Database and fetch a row as outputs\n\n\nid: \"query\"\ntype: \"org.kestra.task.jdbc.mysql.Query\"\nurl: jdbc:postgresql://127.0.0.1:56982/\nusername: postgres\npassword: pg_passwd\nsql: select * from mysql_types\nfetchOne: true\n\n\n# Inputs\n# fetch\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n> Whether to fetch the data from the query result to the task output This parameter is evaluated after 'fetchOne' and 'store'.\n\n\n# fetchOne\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n> Whether to fetch only one data row from the query result to the task output. This parameter is evaluated before 'store' and 'fetch'.\n\n\n# password\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The database user's password\n\n\n# sql\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The sql query to run\n\n\n# store\n * Type: boolean\n * Dynamic: ✔️\n * Required: ❌\n\n> Whether to fetch data row from the query result to a file in internal storage. File will be saved as Amazon Ion (text format).\nSee Amazon Ion documentation This parameter is evaluated after 'fetchOne' but before 'fetch'.\n\n\n# timeZoneId\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The time zone id to use for date/time manipulation. Default value is the worker default zone id.\n\n\n# url\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The jdbc url to connect to the database\n\n\n# username\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The database user\n\n\n# Outputs\n# row\n * Type: object\n\n> Map containing the first row of fetched data\n\n\nOnly populated if 'fetchOne' parameter is set to true.\n\n# rows\n * Type: array\n * SubType: object\n\n> Lit of map containing rows of fetched data\n\n\nOnly populated if 'fetch' parameter is set to true.\n\n# size\n * Type: integer\n\n> The size of the fetched rows\n\n\nOnly populated if 'store' or 'fetch' parameter is set to true.\n\n# uri\n * Type: object\n\n> The url of the result file on kestra storage (.ion file / Amazon Ion text format)\n\n\nOnly populated if 'store' is set to true.",normalizedContent:"# query\ntype: \"org.kestra.task.jdbc.mysql.query\"\n\n\n> mysql query task.\n\n\ncurrently supported types are the following ones :\n\n * serial,\n * tinyint,\n * char(n),\n * varchar(n),\n * text,\n * bigint,\n * bit(n),\n * float,\n * double,\n * numeric,\n * decimal,\n * date,\n * datetime(n),\n * time,\n * timestamp(n),\n * year(n),\n * json,\n * blob\n\n# examples\n> request a postgressql database and fetch a row as outputs\n\n\nid: \"query\"\ntype: \"org.kestra.task.jdbc.mysql.query\"\nurl: jdbc:postgresql://127.0.0.1:56982/\nusername: postgres\npassword: pg_passwd\nsql: select * from mysql_types\nfetchone: true\n\n\n# inputs\n# fetch\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n> whether to fetch the data from the query result to the task output this parameter is evaluated after 'fetchone' and 'store'.\n\n\n# fetchone\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n> whether to fetch only one data row from the query result to the task output. this parameter is evaluated before 'store' and 'fetch'.\n\n\n# password\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the database user's password\n\n\n# sql\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the sql query to run\n\n\n# store\n * type: boolean\n * dynamic: ✔️\n * required: ❌\n\n> whether to fetch data row from the query result to a file in internal storage. file will be saved as amazon ion (text format).\nsee amazon ion documentation this parameter is evaluated after 'fetchone' but before 'fetch'.\n\n\n# timezoneid\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the time zone id to use for date/time manipulation. default value is the worker default zone id.\n\n\n# url\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the jdbc url to connect to the database\n\n\n# username\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the database user\n\n\n# outputs\n# row\n * type: object\n\n> map containing the first row of fetched data\n\n\nonly populated if 'fetchone' parameter is set to true.\n\n# rows\n * type: array\n * subtype: object\n\n> lit of map containing rows of fetched data\n\n\nonly populated if 'fetch' parameter is set to true.\n\n# size\n * type: integer\n\n> the size of the fetched rows\n\n\nonly populated if 'store' or 'fetch' parameter is set to true.\n\n# uri\n * type: object\n\n> the url of the result file on kestra storage (.ion file / amazon ion text format)\n\n\nonly populated if 'store' is set to true.",charsets:{}},{title:"Query",frontmatter:{title:"Query",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Query"},{property:"og:description",content:"Query | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-jdbc-postgres/tasks/postgresql/org.kestra.task.jdbc.postgresql.Query.html"},{name:"twitter:title",content:"Query"},{name:"twitter:description",content:"Query | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/plugins/task-jdbc-postgres/tasks/postgresql/org.kestra.task.jdbc.postgresql.Query.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Query | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/plugins/task-jdbc-postgres/tasks/postgresql/org.kestra.task.jdbc.postgresql.Query.html",relativePath:"plugins/task-jdbc-postgres/tasks/postgresql/org.kestra.task.jdbc.postgresql.Query.md",key:"v-1342f403",path:"/plugins/task-jdbc-postgres/tasks/postgresql/org.kestra.task.jdbc.postgresql.Query.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:553},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:1475},{level:3,title:"fetch",slug:"fetch",normalizedTitle:"fetch",charIndex:584},{level:3,title:"fetchOne",slug:"fetchone",normalizedTitle:"fetchone",charIndex:1641},{level:3,title:"password",slug:"password",normalizedTitle:"password",charIndex:771},{level:3,title:"sql",slug:"sql",normalizedTitle:"sql",charIndex:43},{level:3,title:"store",slug:"store",normalizedTitle:"store",charIndex:1286},{level:3,title:"timeZoneId",slug:"timezoneid",normalizedTitle:"timezoneid",charIndex:2313},{level:3,title:"url",slug:"url",normalizedTitle:"url",charIndex:708},{level:3,title:"username",slug:"username",normalizedTitle:"username",charIndex:750},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:2650},{level:3,title:"row",slug:"row",normalizedTitle:"row",charIndex:1264},{level:3,title:"rows",slug:"rows",normalizedTitle:"rows",charIndex:1264},{level:3,title:"size",slug:"size",normalizedTitle:"size",charIndex:2930},{level:3,title:"uri",slug:"uri",normalizedTitle:"uri",charIndex:3052}],headersStr:"Examples Inputs fetch fetchOne password sql store timeZoneId url username Outputs row rows size uri",content:"# Query\ntype: \"org.kestra.task.jdbc.postgresql.Query\"\n\n\n> PostgresSQL Query Task\n\n\nCurrently supported types are the following ones :\n\n * serial\n * boolean\n * char(4)\n * varchar(n)\n * text\n * smallint\n * bigint\n * float(n)\n * double precision\n * real\n * numeric\n * date\n * time\n * timez / time with time zone (avoid this type as it can lead to some gap. See this PostgreSQL issue)\n * timestamp\n * timestampz / timestamp with time zone\n * interval\n * integer[]\n * text[][] (ie. array of array ... it may be of another supported type)\n * json\n * bytea\n\n# Examples\n> Execute a query and fetch results on another task to update another table\n\n\ntasks:\n- id: update\n  type: org.kestra.task.jdbc.postgresql.Query\n  url: jdbc:postgresql://127.0.0.1:56982/\n  username: postgres\n  password: pg_passwd\n  sql: select concert_id, available, a, b, c, d, play_time, library_record, floatn_test, double_test, real_test, numeric_test, date_type, time_type, timez_type, timestamp_type, timestampz_type, interval_type, pay_by_quarter, schedule, json_type, blob_type from pgsql_types\n  fetch: true\n- id: use-fetched-data\n  type: org.kestra.task.jdbc.postgresql.Query\n  url: jdbc:postgresql://127.0.0.1:56982/\n  username: postgres\n  password: pg_passwd\n  sql:  \"{{#each outputs.update.rows}} INSERT INTO pl_store_distribute (year_month,store_code, update_date) values ({{this.play_time}}, {{this.concert_id}}, TO_TIMESTAMP('{{this.timestamp_type}}', 'YYYY/MM/DDTHH24:MI:SS.US') ); {{/each}}\"\n\n\n# Inputs\n# fetch\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n> Whether to fetch the data from the query result to the task output This parameter is evaluated after 'fetchOne' and 'store'.\n\n\n# fetchOne\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n> Whether to fetch only one data row from the query result to the task output. This parameter is evaluated before 'store' and 'fetch'.\n\n\n# password\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The database user's password\n\n\n# sql\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The sql query to run\n\n\n# store\n * Type: boolean\n * Dynamic: ✔️\n * Required: ❌\n\n> Whether to fetch data row from the query result to a file in internal storage. File will be saved as Amazon Ion (text format).\nSee Amazon Ion documentation This parameter is evaluated after 'fetchOne' but before 'fetch'.\n\n\n# timeZoneId\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The time zone id to use for date/time manipulation. Default value is the worker default zone id.\n\n\n# url\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The jdbc url to connect to the database\n\n\n# username\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The database user\n\n\n# Outputs\n# row\n * Type: object\n\n> Map containing the first row of fetched data\n\n\nOnly populated if 'fetchOne' parameter is set to true.\n\n# rows\n * Type: array\n * SubType: object\n\n> Lit of map containing rows of fetched data\n\n\nOnly populated if 'fetch' parameter is set to true.\n\n# size\n * Type: integer\n\n> The size of the fetched rows\n\n\nOnly populated if 'store' or 'fetch' parameter is set to true.\n\n# uri\n * Type: object\n\n> The url of the result file on kestra storage (.ion file / Amazon Ion text format)\n\n\nOnly populated if 'store' is set to true.",normalizedContent:"# query\ntype: \"org.kestra.task.jdbc.postgresql.query\"\n\n\n> postgressql query task\n\n\ncurrently supported types are the following ones :\n\n * serial\n * boolean\n * char(4)\n * varchar(n)\n * text\n * smallint\n * bigint\n * float(n)\n * double precision\n * real\n * numeric\n * date\n * time\n * timez / time with time zone (avoid this type as it can lead to some gap. see this postgresql issue)\n * timestamp\n * timestampz / timestamp with time zone\n * interval\n * integer[]\n * text[][] (ie. array of array ... it may be of another supported type)\n * json\n * bytea\n\n# examples\n> execute a query and fetch results on another task to update another table\n\n\ntasks:\n- id: update\n  type: org.kestra.task.jdbc.postgresql.query\n  url: jdbc:postgresql://127.0.0.1:56982/\n  username: postgres\n  password: pg_passwd\n  sql: select concert_id, available, a, b, c, d, play_time, library_record, floatn_test, double_test, real_test, numeric_test, date_type, time_type, timez_type, timestamp_type, timestampz_type, interval_type, pay_by_quarter, schedule, json_type, blob_type from pgsql_types\n  fetch: true\n- id: use-fetched-data\n  type: org.kestra.task.jdbc.postgresql.query\n  url: jdbc:postgresql://127.0.0.1:56982/\n  username: postgres\n  password: pg_passwd\n  sql:  \"{{#each outputs.update.rows}} insert into pl_store_distribute (year_month,store_code, update_date) values ({{this.play_time}}, {{this.concert_id}}, to_timestamp('{{this.timestamp_type}}', 'yyyy/mm/ddthh24:mi:ss.us') ); {{/each}}\"\n\n\n# inputs\n# fetch\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n> whether to fetch the data from the query result to the task output this parameter is evaluated after 'fetchone' and 'store'.\n\n\n# fetchone\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n> whether to fetch only one data row from the query result to the task output. this parameter is evaluated before 'store' and 'fetch'.\n\n\n# password\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the database user's password\n\n\n# sql\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the sql query to run\n\n\n# store\n * type: boolean\n * dynamic: ✔️\n * required: ❌\n\n> whether to fetch data row from the query result to a file in internal storage. file will be saved as amazon ion (text format).\nsee amazon ion documentation this parameter is evaluated after 'fetchone' but before 'fetch'.\n\n\n# timezoneid\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the time zone id to use for date/time manipulation. default value is the worker default zone id.\n\n\n# url\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the jdbc url to connect to the database\n\n\n# username\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the database user\n\n\n# outputs\n# row\n * type: object\n\n> map containing the first row of fetched data\n\n\nonly populated if 'fetchone' parameter is set to true.\n\n# rows\n * type: array\n * subtype: object\n\n> lit of map containing rows of fetched data\n\n\nonly populated if 'fetch' parameter is set to true.\n\n# size\n * type: integer\n\n> the size of the fetched rows\n\n\nonly populated if 'store' or 'fetch' parameter is set to true.\n\n# uri\n * type: object\n\n> the url of the result file on kestra storage (.ion file / amazon ion text format)\n\n\nonly populated if 'store' is set to true.",charsets:{}},{title:"JobCreate",frontmatter:{title:"JobCreate",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"JobCreate"},{property:"og:description",content:"JobCreate | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-kubernetes/tasks/org.kestra.task.kubernetes.JobCreate.html"},{name:"twitter:title",content:"JobCreate"},{name:"twitter:description",content:"JobCreate | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/plugins/task-kubernetes/tasks/org.kestra.task.kubernetes.JobCreate.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"JobCreate | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/plugins/task-kubernetes/tasks/org.kestra.task.kubernetes.JobCreate.html",relativePath:"plugins/task-kubernetes/tasks/org.kestra.task.kubernetes.JobCreate.md",key:"v-c55cb926",path:"/plugins/task-kubernetes/tasks/org.kestra.task.kubernetes.JobCreate.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:103},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:485},{level:3,title:"connection",slug:"connection",normalizedTitle:"connection",charIndex:494},{level:3,title:"connection.apiVersion",slug:"connection-apiversion",normalizedTitle:"connection.apiversion",charIndex:880},{level:3,title:"connection.caCertData",slug:"connection-cacertdata",normalizedTitle:"connection.cacertdata",charIndex:1e3},{level:3,title:"connection.caCertFile",slug:"connection-cacertfile",normalizedTitle:"connection.cacertfile",charIndex:1100},{level:3,title:"connection.clientCertData",slug:"connection-clientcertdata",normalizedTitle:"connection.clientcertdata",charIndex:1203},{level:3,title:"connection.clientCertFile",slug:"connection-clientcertfile",normalizedTitle:"connection.clientcertfile",charIndex:1309},{level:3,title:"connection.clientKeyAlgo",slug:"connection-clientkeyalgo",normalizedTitle:"connection.clientkeyalgo",charIndex:1420},{level:3,title:"connection.clientKeyData",slug:"connection-clientkeydata",normalizedTitle:"connection.clientkeydata",charIndex:1562},{level:3,title:"connection.clientKeyFile",slug:"connection-clientkeyfile",normalizedTitle:"connection.clientkeyfile",charIndex:1659},{level:3,title:"connection.clientKeyPassphrase",slug:"connection-clientkeypassphrase",normalizedTitle:"connection.clientkeypassphrase",charIndex:1761},{level:3,title:"connection.disableHostnameVerification",slug:"connection-disablehostnameverification",normalizedTitle:"connection.disablehostnameverification",charIndex:1867},{level:3,title:"connection.keyStoreFile",slug:"connection-keystorefile",normalizedTitle:"connection.keystorefile",charIndex:1989},{level:3,title:"connection.keyStorePassphrase",slug:"connection-keystorepassphrase",normalizedTitle:"connection.keystorepassphrase",charIndex:2081},{level:3,title:"connection.masterUrl",slug:"connection-masterurl",normalizedTitle:"connection.masterurl",charIndex:2185},{level:3,title:"connection.namespace",slug:"connection-namespace",normalizedTitle:"connection.namespace",charIndex:2328},{level:3,title:"connection.oauthToken",slug:"connection-oauthtoken",normalizedTitle:"connection.oauthtoken",charIndex:2421},{level:3,title:"connection.trustCerts",slug:"connection-trustcerts",normalizedTitle:"connection.trustcerts",charIndex:2508},{level:3,title:"connection.trustStoreFile",slug:"connection-truststorefile",normalizedTitle:"connection.truststorefile",charIndex:2606},{level:3,title:"connection.trustStorePassphrase",slug:"connection-truststorepassphrase",normalizedTitle:"connection.truststorepassphrase",charIndex:2701},{level:3,title:"delete",slug:"delete",normalizedTitle:"delete",charIndex:2808},{level:3,title:"metadata",slug:"metadata",normalizedTitle:"metadata",charIndex:193},{level:3,title:"namespace",slug:"namespace",normalizedTitle:"namespace",charIndex:174},{level:3,title:"spec",slug:"spec",normalizedTitle:"spec",charIndex:236},{level:3,title:"waitUntilRunning",slug:"waituntilrunning",normalizedTitle:"waituntilrunning",charIndex:3212},{level:3,title:"waitUntilRunning.seconds",slug:"waituntilrunning-seconds",normalizedTitle:"waituntilrunning.seconds",charIndex:3506},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:3580},{level:3,title:"job",slug:"job",normalizedTitle:"job",charIndex:70},{level:3,title:"job.annotations",slug:"job-annotations",normalizedTitle:"job.annotations",charIndex:3639},{level:3,title:"job.clusterName",slug:"job-clustername",normalizedTitle:"job.clustername",charIndex:3718},{level:3,title:"job.creationTimestamp",slug:"job-creationtimestamp",normalizedTitle:"job.creationtimestamp",charIndex:3785},{level:3,title:"job.deletionGracePeriodSeconds",slug:"job-deletiongraceperiodseconds",normalizedTitle:"job.deletiongraceperiodseconds",charIndex:3848},{level:3,title:"job.deletionTimestamp",slug:"job-deletiontimestamp",normalizedTitle:"job.deletiontimestamp",charIndex:3938},{level:3,title:"job.finalizers",slug:"job-finalizers",normalizedTitle:"job.finalizers",charIndex:4003},{level:3,title:"job.generateName",slug:"job-generatename",normalizedTitle:"job.generatename",charIndex:4078},{level:3,title:"job.generation",slug:"job-generation",normalizedTitle:"job.generation",charIndex:4148},{level:3,title:"job.labels",slug:"job-labels",normalizedTitle:"job.labels",charIndex:4198},{level:3,title:"job.managedFields",slug:"job-managedfields",normalizedTitle:"job.managedfields",charIndex:4247},{level:3,title:"job.name",slug:"job-name",normalizedTitle:"job.name",charIndex:4329},{level:3,title:"job.namespace",slug:"job-namespace",normalizedTitle:"job.namespace",charIndex:4382},{level:3,title:"job.ownerReferences",slug:"job-ownerreferences",normalizedTitle:"job.ownerreferences",charIndex:4445},{level:3,title:"job.resourceVersion",slug:"job-resourceversion",normalizedTitle:"job.resourceversion",charIndex:4530},{level:3,title:"job.selfLink",slug:"job-selflink",normalizedTitle:"job.selflink",charIndex:4590},{level:3,title:"job.uid",slug:"job-uid",normalizedTitle:"job.uid",charIndex:4666},{level:3,title:"pod",slug:"pod",normalizedTitle:"pod",charIndex:3361},{level:3,title:"pod.annotations",slug:"pod-annotations",normalizedTitle:"pod.annotations",charIndex:4777},{level:3,title:"pod.clusterName",slug:"pod-clustername",normalizedTitle:"pod.clustername",charIndex:4856},{level:3,title:"pod.creationTimestamp",slug:"pod-creationtimestamp",normalizedTitle:"pod.creationtimestamp",charIndex:4923},{level:3,title:"pod.deletionGracePeriodSeconds",slug:"pod-deletiongraceperiodseconds",normalizedTitle:"pod.deletiongraceperiodseconds",charIndex:4986},{level:3,title:"pod.deletionTimestamp",slug:"pod-deletiontimestamp",normalizedTitle:"pod.deletiontimestamp",charIndex:5076},{level:3,title:"pod.finalizers",slug:"pod-finalizers",normalizedTitle:"pod.finalizers",charIndex:5141},{level:3,title:"pod.generateName",slug:"pod-generatename",normalizedTitle:"pod.generatename",charIndex:5216},{level:3,title:"pod.generation",slug:"pod-generation",normalizedTitle:"pod.generation",charIndex:5286},{level:3,title:"pod.labels",slug:"pod-labels",normalizedTitle:"pod.labels",charIndex:5336},{level:3,title:"pod.managedFields",slug:"pod-managedfields",normalizedTitle:"pod.managedfields",charIndex:5385},{level:3,title:"pod.name",slug:"pod-name",normalizedTitle:"pod.name",charIndex:5467},{level:3,title:"pod.namespace",slug:"pod-namespace",normalizedTitle:"pod.namespace",charIndex:5520},{level:3,title:"pod.ownerReferences",slug:"pod-ownerreferences",normalizedTitle:"pod.ownerreferences",charIndex:5583},{level:3,title:"pod.resourceVersion",slug:"pod-resourceversion",normalizedTitle:"pod.resourceversion",charIndex:5668},{level:3,title:"pod.selfLink",slug:"pod-selflink",normalizedTitle:"pod.selflink",charIndex:5728},{level:3,title:"pod.uid",slug:"pod-uid",normalizedTitle:"pod.uid",charIndex:5804}],headersStr:"Examples Inputs connection connection.apiVersion connection.caCertData connection.caCertFile connection.clientCertData connection.clientCertFile connection.clientKeyAlgo connection.clientKeyData connection.clientKeyFile connection.clientKeyPassphrase connection.disableHostnameVerification connection.keyStoreFile connection.keyStorePassphrase connection.masterUrl connection.namespace connection.oauthToken connection.trustCerts connection.trustStoreFile connection.trustStorePassphrase delete metadata namespace spec waitUntilRunning waitUntilRunning.seconds Outputs job job.annotations job.clusterName job.creationTimestamp job.deletionGracePeriodSeconds job.deletionTimestamp job.finalizers job.generateName job.generation job.labels job.managedFields job.name job.namespace job.ownerReferences job.resourceVersion job.selfLink job.uid pod pod.annotations pod.clusterName pod.creationTimestamp pod.deletionGracePeriodSeconds pod.deletionTimestamp pod.finalizers pod.generateName pod.generation pod.labels pod.managedFields pod.name pod.namespace pod.ownerReferences pod.resourceVersion pod.selfLink pod.uid",content:"# JobCreate\ntype: \"org.kestra.task.kubernetes.JobCreate\"\n\n\n> Create a job on a kubernetes cluster.\n\n\n# Examples\nid: \"job_create\"\ntype: \"org.kestra.task.kubernetes.JobCreate\"\nnamespace: default\nmetadata:\n  labels:\n    my-label: my-value\nspec:\n  template:\n    spec:\n      containers:\n      - name: unittest\n        image: debian:stable-slim\n        command: \n          - 'bash' \n          - '-c'\n          - 'for i in {1..10}; do echo $i; sleep 0.1; done'\n      restartPolicy: Never\n\n\n# Inputs\n# connection\n * Type: object\n * Dynamic: ❓\n * Required: ❌\n\n> The connection parameters to Kubernetes cluster\n\n\nIf no connection is defined, we try to load connection from current context in order below:\n\n 1. System properties\n 2. Environment variables\n 3. Kube config file\n 4. Service account token & mounted CA certificate\n\nYou can pass a full configuration with all option if needed\n\n# connection.apiVersion\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: v1\n\n> The api version of API to use\n\n\n# connection.caCertData\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> CA certificate as data (\n\n\n# connection.caCertFile\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> CA certificate as file path\n\n\n# connection.clientCertData\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Client certificate as data\n\n\n# connection.clientCertFile\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Client certificate as file path\n\n\n# connection.clientKeyAlgo\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: RSA\n\n> Client key encryption algorithm\n\n\ndefault is RSA\n\n# connection.clientKeyData\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Client Key as data\n\n\n# connection.clientKeyFile\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Client Key as file path\n\n\n# connection.clientKeyPassphrase\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Client key passphrase\n\n\n# connection.disableHostnameVerification\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n> Disable hostname verification\n\n\n# connection.keyStoreFile\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Key store file\n\n\n# connection.keyStorePassphrase\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Key store passphrase\n\n\n# connection.masterUrl\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: https://kubernetes.default.svc\n\n> The url to kubernetes API\n\n\n# connection.namespace\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The namespace used\n\n\n# connection.oauthToken\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Oauth token\n\n\n# connection.trustCerts\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n> Trust all certificates\n\n\n# connection.trustStoreFile\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Truststore file\n\n\n# connection.trustStorePassphrase\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Truststore passphrase\n\n\n# delete\n * Type: boolean\n * Dynamic: ❓\n * Required: ✔️\n * Default: true\n\n> If the job will be deleted on completion\n\n\n# metadata\n * Type: object\n * Dynamic: ✔️\n * Required: ❌\n\n> Full metadata yaml for a job.\n\n\n# namespace\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The namespace where the job will be created\n\n\n# spec\n * Type: object\n * Dynamic: ✔️\n * Required: ✔️\n\n> Full spec yaml for a job.\n\n\n# waitUntilRunning\n * Type: object\n * Dynamic: ❓\n * Required: ✔️\n * Default: 600.000000000\n\n> The maximum duration we need to wait until the job & the pod is created.\n\n\nThis timeout is the maximum time that k8s scheduler take to\n\n * schedule the job\n * pull the pod image\n * and start the pod\n\n# waitUntilRunning.seconds\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n# Outputs\n# job\n * Type: object\n\n> The full job metadata\n\n\n# job.annotations\n * Type: object\n\n> List of all annotations of the resource\n\n\n# job.clusterName\n * Type: string\n\n> Name of the current cluster\n\n\n# job.creationTimestamp\n * Type: string\n\n> Creation datetime\n\n\n# job.deletionGracePeriodSeconds\n * Type: integer\n\n> Deletetion grace period in seconds\n\n\n# job.deletionTimestamp\n * Type: string\n\n> Deletetion datetime\n\n\n# job.finalizers\n * Type: array\n * SubType: string\n\n> List of finalizers\n\n\n# job.generateName\n * Type: string\n\n> Generate name of the resource\n\n\n# job.generation\n * Type: integer\n\n> Generation\n\n\n# job.labels\n * Type: object\n\n> List of labels\n\n\n# job.managedFields\n * Type: array\n * SubType: object\n\n> List of managed fields\n\n\n# job.name\n * Type: string\n\n> Name of the resource\n\n\n# job.namespace\n * Type: string\n\n> Namespace of the resource\n\n\n# job.ownerReferences\n * Type: array\n * SubType: object\n\n> List of owner reference\n\n\n# job.resourceVersion\n * Type: string\n\n> Resource version\n\n\n# job.selfLink\n * Type: string\n\n> Direct link on the api of this resource\n\n\n# job.uid\n * Type: string\n\n> Generated Uid of this resource\n\n\n# pod\n * Type: object\n\n> The full pod metadata\n\n\n# pod.annotations\n * Type: object\n\n> List of all annotations of the resource\n\n\n# pod.clusterName\n * Type: string\n\n> Name of the current cluster\n\n\n# pod.creationTimestamp\n * Type: string\n\n> Creation datetime\n\n\n# pod.deletionGracePeriodSeconds\n * Type: integer\n\n> Deletetion grace period in seconds\n\n\n# pod.deletionTimestamp\n * Type: string\n\n> Deletetion datetime\n\n\n# pod.finalizers\n * Type: array\n * SubType: string\n\n> List of finalizers\n\n\n# pod.generateName\n * Type: string\n\n> Generate name of the resource\n\n\n# pod.generation\n * Type: integer\n\n> Generation\n\n\n# pod.labels\n * Type: object\n\n> List of labels\n\n\n# pod.managedFields\n * Type: array\n * SubType: object\n\n> List of managed fields\n\n\n# pod.name\n * Type: string\n\n> Name of the resource\n\n\n# pod.namespace\n * Type: string\n\n> Namespace of the resource\n\n\n# pod.ownerReferences\n * Type: array\n * SubType: object\n\n> List of owner reference\n\n\n# pod.resourceVersion\n * Type: string\n\n> Resource version\n\n\n# pod.selfLink\n * Type: string\n\n> Direct link on the api of this resource\n\n\n# pod.uid\n * Type: string\n\n> Generated Uid of this resource",normalizedContent:"# jobcreate\ntype: \"org.kestra.task.kubernetes.jobcreate\"\n\n\n> create a job on a kubernetes cluster.\n\n\n# examples\nid: \"job_create\"\ntype: \"org.kestra.task.kubernetes.jobcreate\"\nnamespace: default\nmetadata:\n  labels:\n    my-label: my-value\nspec:\n  template:\n    spec:\n      containers:\n      - name: unittest\n        image: debian:stable-slim\n        command: \n          - 'bash' \n          - '-c'\n          - 'for i in {1..10}; do echo $i; sleep 0.1; done'\n      restartpolicy: never\n\n\n# inputs\n# connection\n * type: object\n * dynamic: ❓\n * required: ❌\n\n> the connection parameters to kubernetes cluster\n\n\nif no connection is defined, we try to load connection from current context in order below:\n\n 1. system properties\n 2. environment variables\n 3. kube config file\n 4. service account token & mounted ca certificate\n\nyou can pass a full configuration with all option if needed\n\n# connection.apiversion\n * type: string\n * dynamic: ✔️\n * required: ❌\n * default: v1\n\n> the api version of api to use\n\n\n# connection.cacertdata\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> ca certificate as data (\n\n\n# connection.cacertfile\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> ca certificate as file path\n\n\n# connection.clientcertdata\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> client certificate as data\n\n\n# connection.clientcertfile\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> client certificate as file path\n\n\n# connection.clientkeyalgo\n * type: string\n * dynamic: ✔️\n * required: ❌\n * default: rsa\n\n> client key encryption algorithm\n\n\ndefault is rsa\n\n# connection.clientkeydata\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> client key as data\n\n\n# connection.clientkeyfile\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> client key as file path\n\n\n# connection.clientkeypassphrase\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> client key passphrase\n\n\n# connection.disablehostnameverification\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n> disable hostname verification\n\n\n# connection.keystorefile\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> key store file\n\n\n# connection.keystorepassphrase\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> key store passphrase\n\n\n# connection.masterurl\n * type: string\n * dynamic: ✔️\n * required: ❌\n * default: https://kubernetes.default.svc\n\n> the url to kubernetes api\n\n\n# connection.namespace\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the namespace used\n\n\n# connection.oauthtoken\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> oauth token\n\n\n# connection.trustcerts\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n> trust all certificates\n\n\n# connection.truststorefile\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> truststore file\n\n\n# connection.truststorepassphrase\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> truststore passphrase\n\n\n# delete\n * type: boolean\n * dynamic: ❓\n * required: ✔️\n * default: true\n\n> if the job will be deleted on completion\n\n\n# metadata\n * type: object\n * dynamic: ✔️\n * required: ❌\n\n> full metadata yaml for a job.\n\n\n# namespace\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the namespace where the job will be created\n\n\n# spec\n * type: object\n * dynamic: ✔️\n * required: ✔️\n\n> full spec yaml for a job.\n\n\n# waituntilrunning\n * type: object\n * dynamic: ❓\n * required: ✔️\n * default: 600.000000000\n\n> the maximum duration we need to wait until the job & the pod is created.\n\n\nthis timeout is the maximum time that k8s scheduler take to\n\n * schedule the job\n * pull the pod image\n * and start the pod\n\n# waituntilrunning.seconds\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n# outputs\n# job\n * type: object\n\n> the full job metadata\n\n\n# job.annotations\n * type: object\n\n> list of all annotations of the resource\n\n\n# job.clustername\n * type: string\n\n> name of the current cluster\n\n\n# job.creationtimestamp\n * type: string\n\n> creation datetime\n\n\n# job.deletiongraceperiodseconds\n * type: integer\n\n> deletetion grace period in seconds\n\n\n# job.deletiontimestamp\n * type: string\n\n> deletetion datetime\n\n\n# job.finalizers\n * type: array\n * subtype: string\n\n> list of finalizers\n\n\n# job.generatename\n * type: string\n\n> generate name of the resource\n\n\n# job.generation\n * type: integer\n\n> generation\n\n\n# job.labels\n * type: object\n\n> list of labels\n\n\n# job.managedfields\n * type: array\n * subtype: object\n\n> list of managed fields\n\n\n# job.name\n * type: string\n\n> name of the resource\n\n\n# job.namespace\n * type: string\n\n> namespace of the resource\n\n\n# job.ownerreferences\n * type: array\n * subtype: object\n\n> list of owner reference\n\n\n# job.resourceversion\n * type: string\n\n> resource version\n\n\n# job.selflink\n * type: string\n\n> direct link on the api of this resource\n\n\n# job.uid\n * type: string\n\n> generated uid of this resource\n\n\n# pod\n * type: object\n\n> the full pod metadata\n\n\n# pod.annotations\n * type: object\n\n> list of all annotations of the resource\n\n\n# pod.clustername\n * type: string\n\n> name of the current cluster\n\n\n# pod.creationtimestamp\n * type: string\n\n> creation datetime\n\n\n# pod.deletiongraceperiodseconds\n * type: integer\n\n> deletetion grace period in seconds\n\n\n# pod.deletiontimestamp\n * type: string\n\n> deletetion datetime\n\n\n# pod.finalizers\n * type: array\n * subtype: string\n\n> list of finalizers\n\n\n# pod.generatename\n * type: string\n\n> generate name of the resource\n\n\n# pod.generation\n * type: integer\n\n> generation\n\n\n# pod.labels\n * type: object\n\n> list of labels\n\n\n# pod.managedfields\n * type: array\n * subtype: object\n\n> list of managed fields\n\n\n# pod.name\n * type: string\n\n> name of the resource\n\n\n# pod.namespace\n * type: string\n\n> namespace of the resource\n\n\n# pod.ownerreferences\n * type: array\n * subtype: object\n\n> list of owner reference\n\n\n# pod.resourceversion\n * type: string\n\n> resource version\n\n\n# pod.selflink\n * type: string\n\n> direct link on the api of this resource\n\n\n# pod.uid\n * type: string\n\n> generated uid of this resource",charsets:{}},{title:"MailExecution",frontmatter:{title:"MailExecution",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"MailExecution"},{property:"og:description",content:"MailExecution | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-notifications/tasks/mail/org.kestra.task.notifications.mail.MailExecution.html"},{name:"twitter:title",content:"MailExecution"},{name:"twitter:description",content:"MailExecution | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/plugins/task-notifications/tasks/mail/org.kestra.task.notifications.mail.MailExecution.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"MailExecution | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/plugins/task-notifications/tasks/mail/org.kestra.task.notifications.mail.MailExecution.html",relativePath:"plugins/task-notifications/tasks/mail/org.kestra.task.notifications.mail.MailExecution.md",key:"v-c96f8dba",path:"/plugins/task-notifications/tasks/mail/org.kestra.task.notifications.mail.MailExecution.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:242},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:927},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:593},{level:3,title:"host",slug:"host",normalizedTitle:"host",charIndex:658},{level:3,title:"htmlTextContent",slug:"htmltextcontent",normalizedTitle:"htmltextcontent",charIndex:1113},{level:3,title:"password",slug:"password",normalizedTitle:"password",charIndex:730},{level:3,title:"port",slug:"port",normalizedTitle:"port",charIndex:689},{level:3,title:"sessionTimeout",slug:"sessiontimeout",normalizedTitle:"sessiontimeout",charIndex:753},{level:3,title:"subject",slug:"subject",normalizedTitle:"subject",charIndex:621},{level:3,title:"to",slug:"to",normalizedTitle:"to",charIndex:82},{level:3,title:"transportStrategy",slug:"transportstrategy",normalizedTitle:"transportstrategy",charIndex:782},{level:3,title:"username",slug:"username",normalizedTitle:"username",charIndex:707}],headersStr:"Examples Inputs from host htmlTextContent password port sessionTimeout subject to transportStrategy username",content:'# MailExecution\ntype: "org.kestra.task.notifications.mail.MailExecution"\n\n\n> Task to send a mail with execution information\n\n\nMain execution information are provided in the sent mail (id, namespace, flow, state, duration, start date ...).\n\n# Examples\n> Send a mail notification on failed flow\n\n\nid: mail\nnamespace: org.kestra.tests\n\nlisteners:\n  - conditions:\n      - type: org.kestra.core.models.conditions.types.ExecutionStatusCondition\n        in:\n          - FAILED\n    tasks:\n      - id: mail\n        type: org.kestra.task.notifications.mail.MailExecution\n        to: to@mail.com\n        from: from@mail.com\n        subject: This is the subject\n        host: nohost-mail.site\n        port: 465\n        username: user\n        password: pass\n        sessionTimeout: 1000\n        transportStrategy: SMTPS\n\n\ntasks:\n  - id: ok\n    type: org.kestra.core.tasks.debugs.Return\n    format: "{{task.id}} > {{taskrun.startDate}}"\n\n\n# Inputs\n# from\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The address of the sender of this email\n\n\n# host\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The mail server host\n\n\n# htmlTextContent\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The optional email message body in HTML text\n\n\nBoth text and HTML can be provided, which will be offered to the email client as alternative content. Email clients that support it, will favor HTML over plain text and ignore the text body completely\n\n# password\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The mail server password\n\n\n# port\n * Type: integer\n * Dynamic: ✔️\n * Required: ❌\n\n> The mail server port\n\n\n# sessionTimeout\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n * Default: 1000\n\n> Controls the timeout to use when sending emails\n\n\nIt affects socket connect-, read- and write timeouts\n\n# subject\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The optional subject of this email\n\n\n# to\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The recipient email address\n\n\nNote that the email address must be an RFC2822 format compliant address.\n\n# transportStrategy\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Default: SMTPS\n\n> The optional transport strategy\n\n\nWill default to SMTPS if left empty.\n\n# username\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The mail server username',normalizedContent:'# mailexecution\ntype: "org.kestra.task.notifications.mail.mailexecution"\n\n\n> task to send a mail with execution information\n\n\nmain execution information are provided in the sent mail (id, namespace, flow, state, duration, start date ...).\n\n# examples\n> send a mail notification on failed flow\n\n\nid: mail\nnamespace: org.kestra.tests\n\nlisteners:\n  - conditions:\n      - type: org.kestra.core.models.conditions.types.executionstatuscondition\n        in:\n          - failed\n    tasks:\n      - id: mail\n        type: org.kestra.task.notifications.mail.mailexecution\n        to: to@mail.com\n        from: from@mail.com\n        subject: this is the subject\n        host: nohost-mail.site\n        port: 465\n        username: user\n        password: pass\n        sessiontimeout: 1000\n        transportstrategy: smtps\n\n\ntasks:\n  - id: ok\n    type: org.kestra.core.tasks.debugs.return\n    format: "{{task.id}} > {{taskrun.startdate}}"\n\n\n# inputs\n# from\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the address of the sender of this email\n\n\n# host\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the mail server host\n\n\n# htmltextcontent\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the optional email message body in html text\n\n\nboth text and html can be provided, which will be offered to the email client as alternative content. email clients that support it, will favor html over plain text and ignore the text body completely\n\n# password\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the mail server password\n\n\n# port\n * type: integer\n * dynamic: ✔️\n * required: ❌\n\n> the mail server port\n\n\n# sessiontimeout\n * type: integer\n * dynamic: ❓\n * required: ❌\n * default: 1000\n\n> controls the timeout to use when sending emails\n\n\nit affects socket connect-, read- and write timeouts\n\n# subject\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the optional subject of this email\n\n\n# to\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the recipient email address\n\n\nnote that the email address must be an rfc2822 format compliant address.\n\n# transportstrategy\n * type: string\n * dynamic: ❓\n * required: ❌\n * default: smtps\n\n> the optional transport strategy\n\n\nwill default to smtps if left empty.\n\n# username\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the mail server username',charsets:{}},{title:"MailSend",frontmatter:{title:"MailSend",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"MailSend"},{property:"og:description",content:"MailSend | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-notifications/tasks/mail/org.kestra.task.notifications.mail.MailSend.html"},{name:"twitter:title",content:"MailSend"},{name:"twitter:description",content:"MailSend | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/plugins/task-notifications/tasks/mail/org.kestra.task.notifications.mail.MailSend.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"MailSend | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/plugins/task-notifications/tasks/mail/org.kestra.task.notifications.mail.MailSend.html",relativePath:"plugins/task-notifications/tasks/mail/org.kestra.task.notifications.mail.MailSend.md",key:"v-8b587e3a",path:"/plugins/task-notifications/tasks/mail/org.kestra.task.notifications.mail.MailSend.html",headers:[{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:100},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:109},{level:3,title:"host",slug:"host",normalizedTitle:"host",charIndex:207},{level:3,title:"htmlTextContent",slug:"htmltextcontent",normalizedTitle:"htmltextcontent",charIndex:286},{level:3,title:"password",slug:"password",normalizedTitle:"password",charIndex:602},{level:3,title:"port",slug:"port",normalizedTitle:"port",charIndex:522},{level:3,title:"sessionTimeout",slug:"sessiontimeout",normalizedTitle:"sessiontimeout",charIndex:769},{level:3,title:"subject",slug:"subject",normalizedTitle:"subject",charIndex:956},{level:3,title:"to",slug:"to",normalizedTitle:"to",charIndex:80},{level:3,title:"transportStrategy",slug:"transportstrategy",normalizedTitle:"transportstrategy",charIndex:1210},{level:3,title:"username",slug:"username",normalizedTitle:"username",charIndex:1368}],headersStr:"Inputs from host htmlTextContent password port sessionTimeout subject to transportStrategy username",content:'# MailSend\ntype: "org.kestra.task.notifications.mail.MailSend"\n\n\n> Generic task to send a mail.\n\n\n# Inputs\n# from\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The address of the sender of this email\n\n\n# host\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The mail server host\n\n\n# htmlTextContent\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The optional email message body in HTML text\n\n\nBoth text and HTML can be provided, which will be offered to the email client as alternative content. Email clients that support it, will favor HTML over plain text and ignore the text body completely\n\n# password\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The mail server password\n\n\n# port\n * Type: integer\n * Dynamic: ✔️\n * Required: ❌\n\n> The mail server port\n\n\n# sessionTimeout\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n * Default: 1000\n\n> Controls the timeout to use when sending emails\n\n\nIt affects socket connect-, read- and write timeouts\n\n# subject\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The optional subject of this email\n\n\n# to\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The recipient email address\n\n\nNote that the email address must be an RFC2822 format compliant address.\n\n# transportStrategy\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Default: SMTPS\n\n> The optional transport strategy\n\n\nWill default to SMTPS if left empty.\n\n# username\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The mail server username',normalizedContent:'# mailsend\ntype: "org.kestra.task.notifications.mail.mailsend"\n\n\n> generic task to send a mail.\n\n\n# inputs\n# from\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the address of the sender of this email\n\n\n# host\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the mail server host\n\n\n# htmltextcontent\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the optional email message body in html text\n\n\nboth text and html can be provided, which will be offered to the email client as alternative content. email clients that support it, will favor html over plain text and ignore the text body completely\n\n# password\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the mail server password\n\n\n# port\n * type: integer\n * dynamic: ✔️\n * required: ❌\n\n> the mail server port\n\n\n# sessiontimeout\n * type: integer\n * dynamic: ❓\n * required: ❌\n * default: 1000\n\n> controls the timeout to use when sending emails\n\n\nit affects socket connect-, read- and write timeouts\n\n# subject\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the optional subject of this email\n\n\n# to\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the recipient email address\n\n\nnote that the email address must be an rfc2822 format compliant address.\n\n# transportstrategy\n * type: string\n * dynamic: ❓\n * required: ❌\n * default: smtps\n\n> the optional transport strategy\n\n\nwill default to smtps if left empty.\n\n# username\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the mail server username',charsets:{}},{title:"SlackExecution",frontmatter:{title:"SlackExecution",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"SlackExecution"},{property:"og:description",content:"SlackExecution | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-notifications/tasks/slack/org.kestra.task.notifications.slack.SlackExecution.html"},{name:"twitter:title",content:"SlackExecution"},{name:"twitter:description",content:"SlackExecution | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/plugins/task-notifications/tasks/slack/org.kestra.task.notifications.slack.SlackExecution.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"SlackExecution | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/plugins/task-notifications/tasks/slack/org.kestra.task.notifications.slack.SlackExecution.html",relativePath:"plugins/task-notifications/tasks/slack/org.kestra.task.notifications.slack.SlackExecution.md",key:"v-a838197a",path:"/plugins/task-notifications/tasks/slack/org.kestra.task.notifications.slack.SlackExecution.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:257},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:820},{level:3,title:"channel",slug:"channel",normalizedTitle:"channel",charIndex:681},{level:3,title:"iconEmoji",slug:"iconemoji",normalizedTitle:"iconemoji",charIndex:927},{level:3,title:"iconUrl",slug:"iconurl",normalizedTitle:"iconurl",charIndex:1008},{level:3,title:"payload",slug:"payload",normalizedTitle:"payload",charIndex:1092},{level:3,title:"url",slug:"url",normalizedTitle:"url",charIndex:588},{level:3,title:"username",slug:"username",normalizedTitle:"username",charIndex:1291}],headersStr:"Examples Inputs channel iconEmoji iconUrl payload url username",content:'# SlackExecution\ntype: "org.kestra.task.notifications.slack.SlackExecution"\n\n\n> Task to send a slack message with execution information\n\n\nMain execution information are provided in the sent message (id, namespace, flow, state, duration, start date ...).\n\n# Examples\n> Send a slack notification on failed flow\n\n\nid: mail\nnamespace: org.kestra.tests\n\nlisteners:\n  - conditions:\n      - type: org.kestra.core.models.conditions.types.ExecutionStatusCondition\n        in:\n          - FAILED\n    tasks:\n      - id: slack\n        type: org.kestra.task.notifications.slack.SlackExecution\n        url: "https://hooks.slack.com/services/T00000000/B00000000/XXXXXXXXXXXXXXXXXXXXXXXX"\n        channel: "#random"\n\n\ntasks:\n  - id: ok\n    type: org.kestra.core.tasks.debugs.Return\n    format: "{{task.id}} > {{taskrun.startDate}}"\n\n\n# Inputs\n# channel\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Slack channel to send the message to\n\n\n# iconEmoji\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Emoji icon to use\n\n\n# iconUrl\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Url of the icon to use\n\n\n# payload\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Slack message payload\n\n\n# url\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Slack incoming webhook url\n\n\nSee Create an Incoming Webhook\n\n# username\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Author of the slack message',normalizedContent:'# slackexecution\ntype: "org.kestra.task.notifications.slack.slackexecution"\n\n\n> task to send a slack message with execution information\n\n\nmain execution information are provided in the sent message (id, namespace, flow, state, duration, start date ...).\n\n# examples\n> send a slack notification on failed flow\n\n\nid: mail\nnamespace: org.kestra.tests\n\nlisteners:\n  - conditions:\n      - type: org.kestra.core.models.conditions.types.executionstatuscondition\n        in:\n          - failed\n    tasks:\n      - id: slack\n        type: org.kestra.task.notifications.slack.slackexecution\n        url: "https://hooks.slack.com/services/t00000000/b00000000/xxxxxxxxxxxxxxxxxxxxxxxx"\n        channel: "#random"\n\n\ntasks:\n  - id: ok\n    type: org.kestra.core.tasks.debugs.return\n    format: "{{task.id}} > {{taskrun.startdate}}"\n\n\n# inputs\n# channel\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> slack channel to send the message to\n\n\n# iconemoji\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> emoji icon to use\n\n\n# iconurl\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> url of the icon to use\n\n\n# payload\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> slack message payload\n\n\n# url\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> slack incoming webhook url\n\n\nsee create an incoming webhook\n\n# username\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> author of the slack message',charsets:{}},{title:"SlackIncomingWebhook",frontmatter:{title:"SlackIncomingWebhook",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"SlackIncomingWebhook"},{property:"og:description",content:"SlackIncomingWebhook | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-notifications/tasks/slack/org.kestra.task.notifications.slack.SlackIncomingWebhook.html"},{name:"twitter:title",content:"SlackIncomingWebhook"},{name:"twitter:description",content:"SlackIncomingWebhook | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/plugins/task-notifications/tasks/slack/org.kestra.task.notifications.slack.SlackIncomingWebhook.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"SlackIncomingWebhook | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/plugins/task-notifications/tasks/slack/org.kestra.task.notifications.slack.SlackIncomingWebhook.html",relativePath:"plugins/task-notifications/tasks/slack/org.kestra.task.notifications.slack.SlackIncomingWebhook.md",key:"v-3eef13ba",path:"/plugins/task-notifications/tasks/slack/org.kestra.task.notifications.slack.SlackIncomingWebhook.html",headers:[{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:180},{level:3,title:"payload",slug:"payload",normalizedTitle:"payload",charIndex:189},{level:3,title:"url",slug:"url",normalizedTitle:"url",charIndex:272}],headersStr:"Inputs payload url",content:'# SlackIncomingWebhook\ntype: "org.kestra.task.notifications.slack.SlackIncomingWebhook"\n\n\n> Generic task to send a slack message.\n\n\nSee Sending messages using Incoming Webhooks\n\n# Inputs\n# payload\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Slack message payload\n\n\n# url\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Slack incoming webhook url\n\n\nSee Create an Incoming Webhook',normalizedContent:'# slackincomingwebhook\ntype: "org.kestra.task.notifications.slack.slackincomingwebhook"\n\n\n> generic task to send a slack message.\n\n\nsee sending messages using incoming webhooks\n\n# inputs\n# payload\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> slack message payload\n\n\n# url\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> slack incoming webhook url\n\n\nsee create an incoming webhook',charsets:{}},{title:"AvroWriter",frontmatter:{title:"AvroWriter",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"AvroWriter"},{property:"og:description",content:"AvroWriter | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-serdes/tasks/avro/org.kestra.task.serdes.avro.AvroWriter.html"},{name:"twitter:title",content:"AvroWriter"},{name:"twitter:description",content:"AvroWriter | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/plugins/task-serdes/tasks/avro/org.kestra.task.serdes.avro.AvroWriter.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"AvroWriter | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/plugins/task-serdes/tasks/avro/org.kestra.task.serdes.avro.AvroWriter.html",relativePath:"plugins/task-serdes/tasks/avro/org.kestra.task.serdes.avro.AvroWriter.md",key:"v-69d470a3",path:"/plugins/task-serdes/tasks/avro/org.kestra.task.serdes.avro.AvroWriter.html",headers:[{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:144},{level:3,title:"dateFormat",slug:"dateformat",normalizedTitle:"dateformat",charIndex:153},{level:3,title:"datetimeFormat",slug:"datetimeformat",normalizedTitle:"datetimeformat",charIndex:284},{level:3,title:"decimalSeparator",slug:"decimalseparator",normalizedTitle:"decimalseparator",charIndex:444},{level:3,title:"falseValues",slug:"falsevalues",normalizedTitle:"falsevalues",charIndex:610},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:788},{level:3,title:"nullValues",slug:"nullvalues",normalizedTitle:"nullvalues",charIndex:863},{level:3,title:"schema",slug:"schema",normalizedTitle:"schema",charIndex:1102},{level:3,title:"timeFormat",slug:"timeformat",normalizedTitle:"timeformat",charIndex:288},{level:3,title:"trueValues",slug:"truevalues",normalizedTitle:"truevalues",charIndex:1341},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1511},{level:3,title:"uri",slug:"uri",normalizedTitle:"uri",charIndex:1521}],headersStr:"Inputs dateFormat datetimeFormat decimalSeparator falseValues from nullValues schema timeFormat trueValues Outputs uri",content:'# AvroWriter\ntype: "org.kestra.task.serdes.avro.AvroWriter"\n\n\n> Read a provided file containing ion serialized data and convert it to avro.\n\n\n# Inputs\n# dateFormat\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Format to use when parsing date\n\n\nDefault value is yyyy-MM-dd[XXX].\n\n# datetimeFormat\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Format to use when parsing datetime\n\n\nDefault value is yyyy-MM-dd\'T\'HH:mm[:ss][.SSSSSS][XXX]\n\n# decimalSeparator\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Character to recognize as decimal point (e.g. use ‘,’ for European data).\n\n\nDefault value is \'.\'\n\n# falseValues\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Values to consider as False\n\n\nDefault values are "f", "false", "disabled", "0", "off", "no", ""\n\n# from\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> Source file URI\n\n\n# nullValues\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Values to consider as null\n\n\nDefault values are "",\n"#N/A",\n"#N/A N/A",\n"#NA",\n"-1.#IND",\n"-1.#QNAN",\n"-NaN",\n"1.#IND",\n"1.#QNAN",\n"NA",\n"n/a",\n"nan",\n"null"\n\n# schema\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The avro schema associated to the data\n\n\n# timeFormat\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Format to use when parsing time\n\n\nDefault value is HH:mm[:ss][.SSSSSS][XXX]\n\n# trueValues\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Values to consider as True\n\n\nDefault values are "t", "true", "enabled", "1", "on", "yes"\n\n# Outputs\n# uri\n * Type: object\n\n> URI of a temporary result file',normalizedContent:'# avrowriter\ntype: "org.kestra.task.serdes.avro.avrowriter"\n\n\n> read a provided file containing ion serialized data and convert it to avro.\n\n\n# inputs\n# dateformat\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> format to use when parsing date\n\n\ndefault value is yyyy-mm-dd[xxx].\n\n# datetimeformat\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> format to use when parsing datetime\n\n\ndefault value is yyyy-mm-dd\'t\'hh:mm[:ss][.ssssss][xxx]\n\n# decimalseparator\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> character to recognize as decimal point (e.g. use ‘,’ for european data).\n\n\ndefault value is \'.\'\n\n# falsevalues\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> values to consider as false\n\n\ndefault values are "f", "false", "disabled", "0", "off", "no", ""\n\n# from\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> source file uri\n\n\n# nullvalues\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> values to consider as null\n\n\ndefault values are "",\n"#n/a",\n"#n/a n/a",\n"#na",\n"-1.#ind",\n"-1.#qnan",\n"-nan",\n"1.#ind",\n"1.#qnan",\n"na",\n"n/a",\n"nan",\n"null"\n\n# schema\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the avro schema associated to the data\n\n\n# timeformat\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> format to use when parsing time\n\n\ndefault value is hh:mm[:ss][.ssssss][xxx]\n\n# truevalues\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> values to consider as true\n\n\ndefault values are "t", "true", "enabled", "1", "on", "yes"\n\n# outputs\n# uri\n * type: object\n\n> uri of a temporary result file',charsets:{}},{title:"CsvReader",frontmatter:{title:"CsvReader",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"CsvReader"},{property:"og:description",content:"CsvReader | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-serdes/tasks/csv/org.kestra.task.serdes.csv.CsvReader.html"},{name:"twitter:title",content:"CsvReader"},{name:"twitter:description",content:"CsvReader | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/plugins/task-serdes/tasks/csv/org.kestra.task.serdes.csv.CsvReader.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"CsvReader | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/plugins/task-serdes/tasks/csv/org.kestra.task.serdes.csv.CsvReader.html",relativePath:"plugins/task-serdes/tasks/csv/org.kestra.task.serdes.csv.CsvReader.md",key:"v-584500cb",path:"/plugins/task-serdes/tasks/csv/org.kestra.task.serdes.csv.CsvReader.html",headers:[{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:126},{level:3,title:"charset",slug:"charset",normalizedTitle:"charset",charIndex:135},{level:3,title:"errorOnDifferentFieldCount",slug:"errorondifferentfieldcount",normalizedTitle:"errorondifferentfieldcount",charIndex:270},{level:3,title:"fieldSeparator",slug:"fieldseparator",normalizedTitle:"fieldseparator",charIndex:454},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:588},{level:3,title:"header",slug:"header",normalizedTitle:"header",charIndex:663},{level:3,title:"skipEmptyRows",slug:"skipemptyrows",normalizedTitle:"skipemptyrows",charIndex:806},{level:3,title:"skipRows",slug:"skiprows",normalizedTitle:"skiprows",charIndex:931},{level:3,title:"textDelimiter",slug:"textdelimiter",normalizedTitle:"textdelimiter",charIndex:1042},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1182},{level:3,title:"uri",slug:"uri",normalizedTitle:"uri",charIndex:1192}],headersStr:"Inputs charset errorOnDifferentFieldCount fieldSeparator from header skipEmptyRows skipRows textDelimiter Outputs uri",content:"# CsvReader\ntype: \"org.kestra.task.serdes.csv.CsvReader\"\n\n\n> Read a csv file and write it to an ion serialized data file.\n\n\n# Inputs\n# charset\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Default: UTF-8\n\n> The name of a supported charset\n\n\nDefault value is UTF-8.\n\n# errorOnDifferentFieldCount\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n> Specifies if an exception should be thrown, if CSV data contains different field count (default: false)\n\n\n# fieldSeparator\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Default: ,\n\n> The field separator character (default: ',' - comma)\n\n\n# from\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> Source file URI\n\n\n# header\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: true\n\n> Specifies if the first line should be the header (default: false)\n\n\n# skipEmptyRows\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n> Specifies if empty rows should be skipped (default: true)\n\n\n# skipRows\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n> Number of lines to skip at the start of the file\n\n\n# textDelimiter\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Default: \"\n\n> The text delimiter character (default: '\"' - double quotes)\n\n\n# Outputs\n# uri\n * Type: object\n\n> URI of a temporary result file",normalizedContent:"# csvreader\ntype: \"org.kestra.task.serdes.csv.csvreader\"\n\n\n> read a csv file and write it to an ion serialized data file.\n\n\n# inputs\n# charset\n * type: string\n * dynamic: ❓\n * required: ❌\n * default: utf-8\n\n> the name of a supported charset\n\n\ndefault value is utf-8.\n\n# errorondifferentfieldcount\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n> specifies if an exception should be thrown, if csv data contains different field count (default: false)\n\n\n# fieldseparator\n * type: string\n * dynamic: ❓\n * required: ❌\n * default: ,\n\n> the field separator character (default: ',' - comma)\n\n\n# from\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> source file uri\n\n\n# header\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: true\n\n> specifies if the first line should be the header (default: false)\n\n\n# skipemptyrows\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n> specifies if empty rows should be skipped (default: true)\n\n\n# skiprows\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n> number of lines to skip at the start of the file\n\n\n# textdelimiter\n * type: string\n * dynamic: ❓\n * required: ❌\n * default: \"\n\n> the text delimiter character (default: '\"' - double quotes)\n\n\n# outputs\n# uri\n * type: object\n\n> uri of a temporary result file",charsets:{}},{title:"CsvWriter",frontmatter:{title:"CsvWriter",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"CsvWriter"},{property:"og:description",content:"CsvWriter | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-serdes/tasks/csv/org.kestra.task.serdes.csv.CsvWriter.html"},{name:"twitter:title",content:"CsvWriter"},{name:"twitter:description",content:"CsvWriter | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/plugins/task-serdes/tasks/csv/org.kestra.task.serdes.csv.CsvWriter.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"CsvWriter | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/plugins/task-serdes/tasks/csv/org.kestra.task.serdes.csv.CsvWriter.html",relativePath:"plugins/task-serdes/tasks/csv/org.kestra.task.serdes.csv.CsvWriter.md",key:"v-39c4896b",path:"/plugins/task-serdes/tasks/csv/org.kestra.task.serdes.csv.CsvWriter.html",headers:[{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:126},{level:3,title:"alwaysDelimitText",slug:"alwaysdelimittext",normalizedTitle:"alwaysdelimittext",charIndex:135},{level:3,title:"charset",slug:"charset",normalizedTitle:"charset",charIndex:304},{level:3,title:"fieldSeparator",slug:"fieldseparator",normalizedTitle:"fieldseparator",charIndex:439},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:573},{level:3,title:"header",slug:"header",normalizedTitle:"header",charIndex:648},{level:3,title:"lineDelimiter",slug:"linedelimiter",normalizedTitle:"linedelimiter",charIndex:791},{level:3,title:"textDelimiter",slug:"textdelimiter",normalizedTitle:"textdelimiter",charIndex:254},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1067},{level:3,title:"uri",slug:"uri",normalizedTitle:"uri",charIndex:1077}],headersStr:"Inputs alwaysDelimitText charset fieldSeparator from header lineDelimiter textDelimiter Outputs uri",content:"# CsvWriter\ntype: \"org.kestra.task.serdes.csv.CsvWriter\"\n\n\n> Read an ion serialized data file and write it to a csv file.\n\n\n# Inputs\n# alwaysDelimitText\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n> Whether fields should always be delimited using the textDelimiter option.\n\n\nDefault value is false\n\n# charset\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Default: UTF-8\n\n> The name of a supported charset\n\n\nDefault value is UTF-8.\n\n# fieldSeparator\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Default: ,\n\n> The field separator character (default: ',' - comma)\n\n\n# from\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> Source file URI\n\n\n# header\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: true\n\n> Specifies if the first line should be the header (default: false)\n\n\n# lineDelimiter\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n * Default: [ ]\n\n> The character used to separate rows\n\n\n# textDelimiter\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Default: \"\n\n> The text delimiter character (default: '\"' - double quotes)\n\n\n# Outputs\n# uri\n * Type: object\n\n> URI of a temporary result file",normalizedContent:"# csvwriter\ntype: \"org.kestra.task.serdes.csv.csvwriter\"\n\n\n> read an ion serialized data file and write it to a csv file.\n\n\n# inputs\n# alwaysdelimittext\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n> whether fields should always be delimited using the textdelimiter option.\n\n\ndefault value is false\n\n# charset\n * type: string\n * dynamic: ❓\n * required: ❌\n * default: utf-8\n\n> the name of a supported charset\n\n\ndefault value is utf-8.\n\n# fieldseparator\n * type: string\n * dynamic: ❓\n * required: ❌\n * default: ,\n\n> the field separator character (default: ',' - comma)\n\n\n# from\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> source file uri\n\n\n# header\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: true\n\n> specifies if the first line should be the header (default: false)\n\n\n# linedelimiter\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n * default: [ ]\n\n> the character used to separate rows\n\n\n# textdelimiter\n * type: string\n * dynamic: ❓\n * required: ❌\n * default: \"\n\n> the text delimiter character (default: '\"' - double quotes)\n\n\n# outputs\n# uri\n * type: object\n\n> uri of a temporary result file",charsets:{}},{title:"JsonReader",frontmatter:{title:"JsonReader",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"JsonReader"},{property:"og:description",content:"JsonReader | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-serdes/tasks/json/org.kestra.task.serdes.json.JsonReader.html"},{name:"twitter:title",content:"JsonReader"},{name:"twitter:description",content:"JsonReader | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/plugins/task-serdes/tasks/json/org.kestra.task.serdes.json.JsonReader.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"JsonReader | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/plugins/task-serdes/tasks/json/org.kestra.task.serdes.json.JsonReader.html",relativePath:"plugins/task-serdes/tasks/json/org.kestra.task.serdes.json.JsonReader.md",key:"v-7af6bb63",path:"/plugins/task-serdes/tasks/json/org.kestra.task.serdes.json.JsonReader.html",headers:[{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:130},{level:3,title:"charset",slug:"charset",normalizedTitle:"charset",charIndex:139},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:274},{level:3,title:"newLine",slug:"newline",normalizedTitle:"newline",charIndex:349},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:600},{level:3,title:"uri",slug:"uri",normalizedTitle:"uri",charIndex:610}],headersStr:"Inputs charset from newLine Outputs uri",content:'# JsonReader\ntype: "org.kestra.task.serdes.json.JsonReader"\n\n\n> Read a json file and write it to an ion serialized data file.\n\n\n# Inputs\n# charset\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Default: UTF-8\n\n> The name of a supported charset\n\n\nDefault value is UTF-8.\n\n# from\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> Source file URI\n\n\n# newLine\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: true\n\n> Is the file is a json new line (JSON-NL)\n\n\nIs the file is a json with new line separator\nWarning, if not, the whole file will loaded in memory and can lead to out of memory!\n\n# Outputs\n# uri\n * Type: object\n\n> URI of a temporary result file',normalizedContent:'# jsonreader\ntype: "org.kestra.task.serdes.json.jsonreader"\n\n\n> read a json file and write it to an ion serialized data file.\n\n\n# inputs\n# charset\n * type: string\n * dynamic: ❓\n * required: ❌\n * default: utf-8\n\n> the name of a supported charset\n\n\ndefault value is utf-8.\n\n# from\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> source file uri\n\n\n# newline\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: true\n\n> is the file is a json new line (json-nl)\n\n\nis the file is a json with new line separator\nwarning, if not, the whole file will loaded in memory and can lead to out of memory!\n\n# outputs\n# uri\n * type: object\n\n> uri of a temporary result file',charsets:{}},{title:"JsonWriter",frontmatter:{title:"JsonWriter",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"JsonWriter"},{property:"og:description",content:"JsonWriter | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-serdes/tasks/json/org.kestra.task.serdes.json.JsonWriter.html"},{name:"twitter:title",content:"JsonWriter"},{name:"twitter:description",content:"JsonWriter | Kestra is a platform to build, test, schedule & monitor complex pipelines."},{name:"twitter:url",content:"/plugins/task-serdes/tasks/json/org.kestra.task.serdes.json.JsonWriter.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"JsonWriter | Kestra is a platform to build, test, schedule & monitor complex pipelines."}]},regularPath:"/plugins/task-serdes/tasks/json/org.kestra.task.serdes.json.JsonWriter.html",relativePath:"plugins/task-serdes/tasks/json/org.kestra.task.serdes.json.JsonWriter.md",key:"v-51c6d563",path:"/plugins/task-serdes/tasks/json/org.kestra.task.serdes.json.JsonWriter.html",headers:[{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:149},{level:3,title:"charset",slug:"charset",normalizedTitle:"charset",charIndex:158},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:294},{level:3,title:"newLine",slug:"newline",normalizedTitle:"newline",charIndex:369},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:603},{level:3,title:"uri",slug:"uri",normalizedTitle:"uri",charIndex:613}],headersStr:"Inputs charset from newLine Outputs uri",content:'# JsonWriter\ntype: "org.kestra.task.serdes.json.JsonWriter"\n\n\n> Read an ion serialized data file and write it to a new line delimited json file.\n\n\n# Inputs\n# charset\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: UTF-8\n\n> The name of a supported charset\n\n\nDefault value is UTF-8.\n\n# from\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> Source file URI\n\n\n# newLine\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n\n> Is the file is a json new line (JSON-NL)\n\n\nIs the file is a json with new line separator\nWarning, if not, the whole file will loaded in memory and can lead to out of memory!\n\n# Outputs\n# uri\n * Type: object\n\n> URI of a temporary result file',normalizedContent:'# jsonwriter\ntype: "org.kestra.task.serdes.json.jsonwriter"\n\n\n> read an ion serialized data file and write it to a new line delimited json file.\n\n\n# inputs\n# charset\n * type: string\n * dynamic: ✔️\n * required: ❌\n * default: utf-8\n\n> the name of a supported charset\n\n\ndefault value is utf-8.\n\n# from\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> source file uri\n\n\n# newline\n * type: boolean\n * dynamic: ❌\n * required: ❌\n\n> is the file is a json new line (json-nl)\n\n\nis the file is a json with new line separator\nwarning, if not, the whole file will loaded in memory and can lead to out of memory!\n\n# outputs\n# uri\n * type: object\n\n> uri of a temporary result file',charsets:{}}],themeConfig:{logo:"/logo.svg",smoothScroll:!0,nav:[{text:"Documentation",link:"/docs/"},{text:"Plugins & Tasks",link:"/plugins/"}],sidebar:{"/plugins/":[{title:"Plugins & Tasks",collapsable:!0,sidebarDepth:1,children:[{path:"/plugins/",title:"Overview",readme:!0},{title:"Core",children:[{title:"Conditions",children:[{path:"/plugins/core/conditions/org.kestra.core.models.conditions.types.ExecutionFlowCondition",title:"ExecutionFlowCondition",readme:!1},{path:"/plugins/core/conditions/org.kestra.core.models.conditions.types.ExecutionNamespaceCondition",title:"ExecutionNamespaceCondition",readme:!1},{path:"/plugins/core/conditions/org.kestra.core.models.conditions.types.ExecutionStatusCondition",title:"ExecutionStatusCondition",readme:!1},{path:"/plugins/core/conditions/org.kestra.core.models.conditions.types.FlowCondition",title:"FlowCondition",readme:!1},{path:"/plugins/core/conditions/org.kestra.core.models.conditions.types.FlowNamespaceCondition",title:"FlowNamespaceCondition",readme:!1},{path:"/plugins/core/conditions/org.kestra.core.models.conditions.types.VariableCondition",title:"VariableCondition",readme:!1},{path:"/plugins/core/conditions/org.kestra.core.models.listeners.types.ExecutionStatusCondition",title:"ExecutionStatusCondition",readme:!1}]},{title:"Tasks",children:[{title:"Debugs",children:[{path:"/plugins/core/tasks/debugs/org.kestra.core.tasks.debugs.Echo",title:"Echo",readme:!1},{path:"/plugins/core/tasks/debugs/org.kestra.core.tasks.debugs.Return",title:"Return",readme:!1}]},{title:"Flows",children:[{path:"/plugins/core/tasks/flows/org.kestra.core.tasks.flows.EachParallel",title:"EachParallel",readme:!1},{path:"/plugins/core/tasks/flows/org.kestra.core.tasks.flows.EachSequential",title:"EachSequential",readme:!1},{path:"/plugins/core/tasks/flows/org.kestra.core.tasks.flows.Flow",title:"Flow",readme:!1},{path:"/plugins/core/tasks/flows/org.kestra.core.tasks.flows.Parallel",title:"Parallel",readme:!1},{path:"/plugins/core/tasks/flows/org.kestra.core.tasks.flows.Sequential",title:"Sequential",readme:!1},{path:"/plugins/core/tasks/flows/org.kestra.core.tasks.flows.Switch",title:"Switch",readme:!1},{path:"/plugins/core/tasks/flows/org.kestra.core.tasks.flows.Template",title:"Template",readme:!1}]},{title:"Scripts",children:[{path:"/plugins/core/tasks/scripts/org.kestra.core.tasks.scripts.Bash",title:"Bash",readme:!1},{path:"/plugins/core/tasks/scripts/org.kestra.core.tasks.scripts.Python",title:"Python",readme:!1}]},{title:"Storages",children:[{path:"/plugins/core/tasks/storages/org.kestra.core.tasks.storages.Concat",title:"Concat",readme:!1},{path:"/plugins/core/tasks/storages/org.kestra.core.tasks.storages.Delete",title:"Delete",readme:!1}]}]},{title:"Triggers",children:[{path:"/plugins/core/triggers/org.kestra.core.models.triggers.types.Flow",title:"Flow",readme:!1},{path:"/plugins/core/triggers/org.kestra.core.models.triggers.types.Schedule",title:"Schedule",readme:!1}]}]},{title:"Task Aws",children:[{title:"Tasks",children:[{title:"S3",children:[{path:"/plugins/task-aws/tasks/s3/org.kestra.task.aws.s3.CreateBucket",title:"CreateBucket",readme:!1},{path:"/plugins/task-aws/tasks/s3/org.kestra.task.aws.s3.Delete",title:"Delete",readme:!1},{path:"/plugins/task-aws/tasks/s3/org.kestra.task.aws.s3.Download",title:"Download",readme:!1},{path:"/plugins/task-aws/tasks/s3/org.kestra.task.aws.s3.Upload",title:"Upload",readme:!1}]}]}]},{title:"Task Crypto",children:[{title:"Tasks",children:[{title:"Openpgp",children:[{path:"/plugins/task-crypto/tasks/openpgp/org.kestra.task.crypto.openpgp.Decrypt",title:"Decrypt",readme:!1},{path:"/plugins/task-crypto/tasks/openpgp/org.kestra.task.crypto.openpgp.Encrypt",title:"Encrypt",readme:!1}]}]}]},{title:"Task Fs",children:[{title:"Tasks",children:[{title:"Http",children:[{path:"/plugins/task-fs/tasks/http/org.kestra.task.fs.http.Download",title:"Download",readme:!1},{path:"/plugins/task-fs/tasks/http/org.kestra.task.fs.http.Request",title:"Request",readme:!1}]},{title:"Sftp",children:[{path:"/plugins/task-fs/tasks/sftp/org.kestra.task.fs.sftp.Delete",title:"Delete",readme:!1},{path:"/plugins/task-fs/tasks/sftp/org.kestra.task.fs.sftp.Download",title:"Download",readme:!1},{path:"/plugins/task-fs/tasks/sftp/org.kestra.task.fs.sftp.Downloads",title:"Downloads",readme:!1},{path:"/plugins/task-fs/tasks/sftp/org.kestra.task.fs.sftp.List",title:"List",readme:!1},{path:"/plugins/task-fs/tasks/sftp/org.kestra.task.fs.sftp.Move",title:"Move",readme:!1},{path:"/plugins/task-fs/tasks/sftp/org.kestra.task.fs.sftp.Upload",title:"Upload",readme:!1}]}]},{title:"Triggers",children:[{title:"Sftp",children:[{path:"/plugins/task-fs/triggers/sftp/org.kestra.task.fs.sftp.Trigger",title:"Trigger",readme:!1}]}]}]},{title:"Task Gcp",children:[{title:"Tasks",children:[{title:"Auth",children:[{path:"/plugins/task-gcp/tasks/auth/org.kestra.task.gcp.auth.OauthAccessToken",title:"OauthAccessToken",readme:!1}]},{title:"Bigquery",children:[{path:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.CreateDataset",title:"CreateDataset",readme:!1},{path:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.DeleteDataset",title:"DeleteDataset",readme:!1},{path:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.ExtractToGcs",title:"ExtractToGcs",readme:!1},{path:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.Load",title:"Load",readme:!1},{path:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.LoadFromGcs",title:"LoadFromGcs",readme:!1},{path:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.Query",title:"Query",readme:!1},{path:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.TableMetadata",title:"TableMetadata",readme:!1},{path:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.UpdateDataset",title:"UpdateDataset",readme:!1}]},{title:"Gcs",children:[{path:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.Copy",title:"Copy",readme:!1},{path:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.CreateBucket",title:"CreateBucket",readme:!1},{path:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.Delete",title:"Delete",readme:!1},{path:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.DeleteBucket",title:"DeleteBucket",readme:!1},{path:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.Download",title:"Download",readme:!1},{path:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.Downloads",title:"Downloads",readme:!1},{path:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.List",title:"List",readme:!1},{path:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.UpdateBucket",title:"UpdateBucket",readme:!1},{path:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.Upload",title:"Upload",readme:!1}]},{title:"Gke",children:[{path:"/plugins/task-gcp/tasks/gke/org.kestra.task.gcp.gke.ClusterMetadata",title:"ClusterMetadata",readme:!1}]}]},{title:"Triggers",children:[{title:"Gcs",children:[{path:"/plugins/task-gcp/triggers/gcs/org.kestra.task.gcp.gcs.Trigger",title:"Trigger",readme:!1}]}]}]},{title:"Task Jdbc-Mysql",children:[{title:"Tasks",children:[{title:"Mysql",children:[{path:"/plugins/task-jdbc-mysql/tasks/mysql/org.kestra.task.jdbc.mysql.Query",title:"Query",readme:!1}]}]}]},{title:"Task Jdbc-Postgres",children:[{title:"Tasks",children:[{title:"Postgresql",children:[{path:"/plugins/task-jdbc-postgres/tasks/postgresql/org.kestra.task.jdbc.postgresql.Query",title:"Query",readme:!1}]}]}]},{title:"Task Kubernetes",children:[{title:"Tasks",children:[{path:"/plugins/task-kubernetes/tasks/org.kestra.task.kubernetes.JobCreate",title:"JobCreate",readme:!1}]}]},{title:"Task Notifications",children:[{title:"Tasks",children:[{title:"Mail",children:[{path:"/plugins/task-notifications/tasks/mail/org.kestra.task.notifications.mail.MailExecution",title:"MailExecution",readme:!1},{path:"/plugins/task-notifications/tasks/mail/org.kestra.task.notifications.mail.MailSend",title:"MailSend",readme:!1}]},{title:"Slack",children:[{path:"/plugins/task-notifications/tasks/slack/org.kestra.task.notifications.slack.SlackExecution",title:"SlackExecution",readme:!1},{path:"/plugins/task-notifications/tasks/slack/org.kestra.task.notifications.slack.SlackIncomingWebhook",title:"SlackIncomingWebhook",readme:!1}]}]}]},{title:"Task Serdes",children:[{title:"Tasks",children:[{title:"Avro",children:[{path:"/plugins/task-serdes/tasks/avro/org.kestra.task.serdes.avro.AvroWriter",title:"AvroWriter",readme:!1}]},{title:"Csv",children:[{path:"/plugins/task-serdes/tasks/csv/org.kestra.task.serdes.csv.CsvReader",title:"CsvReader",readme:!1},{path:"/plugins/task-serdes/tasks/csv/org.kestra.task.serdes.csv.CsvWriter",title:"CsvWriter",readme:!1}]},{title:"Json",children:[{path:"/plugins/task-serdes/tasks/json/org.kestra.task.serdes.json.JsonReader",title:"JsonReader",readme:!1},{path:"/plugins/task-serdes/tasks/json/org.kestra.task.serdes.json.JsonWriter",title:"JsonWriter",readme:!1}]}]}]}]}],"/docs/":[{title:"Documentation",path:"/docs",collapsable:!1,sidebarDepth:1,children:[{path:"/docs/",title:"What’s Kestra?",readme:!0,order:0},{path:"/docs/getting-started/",title:"Getting Started",readme:!0,order:1},{path:"/docs/concepts/",title:"Concepts",readme:!0,order:2,children:[{path:"/docs/concepts/flows",title:"Flow",readme:!1,order:1},{path:"/docs/concepts/executions",title:"Execution",readme:!1,order:2}]},{path:"/docs/architecture/",title:"Architecture",readme:!0,order:3},{path:"/docs/developer-guide/",title:"Developer Guide",readme:!0,order:4,children:[{path:"/docs/developer-guide/flow/",title:"Flow",readme:!0,order:1},{path:"/docs/developer-guide/flowable/",title:"Flowable Task",readme:!0,order:2},{path:"/docs/developer-guide/variables/",title:"Variables",readme:!0,order:2,children:[{path:"/docs/developer-guide/variables/boolean",title:"Boolean functions",readme:!1},{path:"/docs/developer-guide/variables/date",title:"Date functions",readme:!1},{path:"/docs/developer-guide/variables/iterations",title:"Iterations functions",readme:!1},{path:"/docs/developer-guide/variables/json",title:"JSON functions",readme:!1},{path:"/docs/developer-guide/variables/number",title:"Number functions",readme:!1},{path:"/docs/developer-guide/variables/string",title:"String functions",readme:!1}]},{path:"/docs/developer-guide/inputs/",title:"Inputs",readme:!0,order:3},{path:"/docs/developer-guide/outputs/",title:"Outputs",readme:!0,order:4},{path:"/docs/developer-guide/errors-handling/",title:"Errors handling",readme:!0,order:5},{path:"/docs/developer-guide/triggers/",title:"Triggers & schedule",readme:!0,order:5,children:[{path:"/docs/developer-guide/triggers/flow",title:"Flow trigger",readme:!1},{path:"/docs/developer-guide/triggers/schedule",title:"Schedule",readme:!1}]},{path:"/docs/developer-guide/retries/",title:"Retries",readme:!0,order:6},{path:"/docs/developer-guide/conditions/",title:"Conditions",readme:!0,order:7},{path:"/docs/developer-guide/listeners/",title:"Listeners",readme:!0,order:8},{path:"/docs/developer-guide/templates/",title:"Templates",readme:!0,order:9},{path:"/docs/developer-guide/helpers/",title:"Helpers",readme:!0,order:10},{path:"/docs/developer-guide/documentation/",title:"Document your flow",readme:!0,order:11},{path:"/docs/developer-guide/plugins/",title:"Plugins",readme:!0,order:12}]},{path:"/docs/administrator-guide/",title:"Administrator Guide",readme:!0,order:5},{path:"/docs/user-interface-guide/",title:"User Interface Guide",readme:!0,order:6,children:[{path:"/docs/user-interface-guide/restart",title:"Restart",readme:!1}]}]}]}}};n(306),n(307);Ca.component("Badge",(function(){return Promise.all([n.e(0),n.e(6)]).then(n.bind(null,395))}));n(308);var _s={name:"BackToTop",props:{threshold:{type:Number,default:300}},data:function(){return{scrollTop:null}},computed:{show:function(){return this.scrollTop>this.threshold}},mounted:function(){var e=this;this.scrollTop=this.getScrollTop(),window.addEventListener("scroll",es()((function(){e.scrollTop=e.getScrollTop()}),100))},methods:{getScrollTop:function(){return window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0},scrollToTop:function(){window.scrollTo({top:0,behavior:"smooth"}),this.scrollTop=0}}},Ss=(n(309),Object(js.a)(_s,(function(){var e=this.$createElement,t=this._self._c||e;return t("transition",{attrs:{name:"fade"}},[this.show?t("svg",{staticClass:"go-to-top",attrs:{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 49.484 28.284"},on:{click:this.scrollToTop}},[t("g",{attrs:{transform:"translate(-229 -126.358)"}},[t("rect",{attrs:{fill:"currentColor",width:"35",height:"5",rx:"2",transform:"translate(229 151.107) rotate(-45)"}}),this._v(" "),t("rect",{attrs:{fill:"currentColor",width:"35",height:"5",rx:"2",transform:"translate(274.949 154.642) rotate(-135)"}})])]):this._e()])}),[],!1,null,"5fd4ef0c",null).exports),Rs=(n(310),n(72),[function(e){e.Vue,e.options,e.router,e.siteData},{},function(e){e.Vue.mixin({computed:{$dataBlock:function(){return this.$options.__data__block__}}})},{},function(e){var t=e.Vue;e.router.options.scrollBehavior=function(e,n,r){if(r)return window.scrollTo({top:r.y,behavior:"smooth"});if(e.hash){if(t.$vuepress.$get("disableScrollBehavior"))return!1;var a=document.querySelector(e.hash);return!!a&&window.scrollTo({top:(i=a,o=document.documentElement,s=o.getBoundingClientRect(),l=i.getBoundingClientRect(),{x:l.left-s.left,y:l.top-s.top}).y,behavior:"smooth"})}return window.scrollTo({top:0,behavior:"smooth"});var i,o,s,l}},function(e){e.Vue.component("BackToTop",Ss)},{},function(e){var t,n,r,a,i,o,s=e.router;"undefined"!=typeof window&&(t=window,n=document,r="script",a="ga",t.GoogleAnalyticsObject=a,t.ga=t.ga||function(){(t.ga.q=t.ga.q||[]).push(arguments)},t.ga.l=1*new Date,i=n.createElement(r),o=n.getElementsByTagName(r)[0],i.async=1,i.src="https://www.google-analytics.com/analytics.js",o.parentNode.insertBefore(i,o),ga("create","UA-56021-9","auto"),ga("set","anonymizeIp",!0),s.afterEach((function(e){ga("set","page",e.fullPath),ga("send","pageview")})))}]),Cs=["BackToTop"];n(172);n(165);function Os(e,t){return(Os=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}n(166);function Ps(e){return(Ps=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}n(106);function As(e,t){return!t||"object"!==qo(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function Ls(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,r=Ps(e);if(t){var a=Ps(this).constructor;n=Reflect.construct(r,arguments,a)}else n=r.apply(this,arguments);return As(this,n)}}var Ks=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&Os(e,t)}(n,e);var t=Ls(n);function n(){return ls(this,n),t.apply(this,arguments)}return n}(function(){function e(){ls(this,e),this.store=new Ca({data:{state:{}}})}return us(e,[{key:"$get",value:function(e){return this.store.state[e]}},{key:"$set",value:function(e,t){Ca.set(this.store.state,e,t)}},{key:"$emit",value:function(){var e;(e=this.store).$emit.apply(e,arguments)}},{key:"$on",value:function(){var e;(e=this.store).$on.apply(e,arguments)}}]),e}());Object.assign(Ks.prototype,{getPageAsyncComponent:No,getLayoutAsyncComponent:Uo,getAsyncComponent:Bo,getVueComponent:$o});var Fs={install:function(e){var t=new Ks;e.$vuepress=t,e.prototype.$vuepress=t}};function Ms(e){e.beforeEach((function(t,n,r){if(Ns(e,t.path))r();else if(/(\/|\.html)$/.test(t.path))if(/\/$/.test(t.path)){var a=t.path.replace(/\/$/,"")+".html";Ns(e,a)?r(a):r()}else r();else{var i=t.path+"/",o=t.path+".html";Ns(e,o)?r(o):Ns(e,i)?r(i):r()}}))}function Ns(e,t){return e.options.routes.filter((function(e){return e.path.toLowerCase()===t.toLowerCase()})).length>0}var Us={props:{pageKey:String,slotKey:{type:String,default:"default"}},render:function(e){var t=this.pageKey||this.$parent.$page.key;return Go("pageKey",t),Ca.component(t)||Ca.component(t,No(t)),Ca.component(t)?e(t):e("")}},Bs={functional:!0,props:{slotKey:String,required:!0},render:function(e,t){var n=t.props,r=t.slots;return e("div",{class:["content__".concat(n.slotKey)]},r()[n.slotKey])}},$s=(n(312),Object(js.a)({},(function(e,t){var n=t._c;return n("svg",{staticClass:"icon outbound",attrs:{xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",x:"0px",y:"0px",viewBox:"0 0 100 100",width:"15",height:"15"}},[n("path",{attrs:{fill:"currentColor",d:"M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"}}),t._v(" "),n("polygon",{attrs:{fill:"currentColor",points:"45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"}})])}),[],!0,null,null,null).exports);function Ws(){return(Ws=Object(r.a)(regeneratorRuntime.mark((function e(t){var n,r,a,i;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n="undefined"!=typeof window&&window.__VUEPRESS_ROUTER_BASE__?window.__VUEPRESS_ROUTER_BASE__:Es.routerBase||Es.base,Ms(r=new To({base:n,mode:"history",fallback:!1,routes:Ds,scrollBehavior:function(e,t,n){return n||(e.hash?!Ca.$vuepress.$get("disableScrollBehavior")&&{selector:e.hash}:{x:0,y:0})}})),a={},e.prev=4,e.next=7,Promise.all(Rs.filter((function(e){return"function"==typeof e})).map((function(e){return e({Vue:Ca,options:a,router:r,siteData:Es,isServer:t})})));case 7:e.next=12;break;case 9:e.prev=9,e.t0=e.catch(4),console.error(e.t0);case 12:return i=new Ca(Object.assign(a,{router:r,render:function(e){return e("div",{attrs:{id:"app"}},[e("RouterView",{ref:"layout"}),e("div",{class:"global-ui"},Cs.map((function(t){return e(t)})))])}})),e.abrupt("return",{app:i,router:r});case 14:case"end":return e.stop()}}),e,null,[[4,9]])})))).apply(this,arguments)}Ca.config.productionTip=!1,Ca.use(To),Ca.use(Fs),Ca.mixin(function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Ca;Io(t),n.$vuepress.$set("siteData",t);var r=e(n.$vuepress.$get("siteData")),a=new r,i=Object.getOwnPropertyDescriptors(Object.getPrototypeOf(a)),o={};return Object.keys(i).reduce((function(e,t){return t.startsWith("$")&&(e[t]=i[t].get),e}),o),{computed:o}}((function(e){return function(){function t(){ls(this,t)}return us(t,[{key:"setPage",value:function(e){this.__page=e}},{key:"$site",get:function(){return e}},{key:"$themeConfig",get:function(){return this.$site.themeConfig}},{key:"$frontmatter",get:function(){return this.$page.frontmatter}},{key:"$localeConfig",get:function(){var e,t,n=this.$site.locales,r=void 0===n?{}:n;for(var a in r)"/"===a?t=r[a]:0===this.$page.path.indexOf(a)&&(e=r[a]);return e||t||{}}},{key:"$siteTitle",get:function(){return this.$localeConfig.title||this.$site.title||""}},{key:"$title",get:function(){var e=this.$page,t=this.$page.frontmatter.metaTitle;if("string"==typeof t)return t;var n=this.$siteTitle,r=e.frontmatter.home?null:e.frontmatter.title||e.title;return n?r?r+" | "+n:n:r||"VuePress"}},{key:"$description",get:function(){var e=function(e){if(e){var t=e.filter((function(e){return"description"===e.name}))[0];if(t)return t.content}}(this.$page.frontmatter.meta);return e||(this.$page.frontmatter.description||this.$localeConfig.description||this.$site.description||"")}},{key:"$lang",get:function(){return this.$page.frontmatter.lang||this.$localeConfig.lang||"en-US"}},{key:"$localePath",get:function(){return this.$localeConfig.path||"/"}},{key:"$themeLocaleConfig",get:function(){return(this.$site.themeConfig.locales||{})[this.$localePath]||{}}},{key:"$page",get:function(){return this.__page?this.__page:function(e,t){for(var n=0;n<e.length;n++){var r=e[n];if(r.path.toLowerCase()===t.toLowerCase())return r}return{path:"",frontmatter:{}}}(this.$site.pages,this.$route.path)}}]),t}()}),Es)),Ca.component("Content",Us),Ca.component("ContentSlotsDistributor",Bs),Ca.component("OutboundLink",$s),Ca.component("ClientOnly",{functional:!0,render:function(e,t){var n=t.parent,r=t.children;if(n._isMounted)return r;n.$once("hook:mounted",(function(){n.$forceUpdate()}))}}),Ca.component("Layout",Uo("Layout")),Ca.component("NotFound",Uo("NotFound")),Ca.prototype.$withBase=function(e){var t=this.$site.base;return"/"===e.charAt(0)?t+e.slice(1):e},window.__VUEPRESS__={version:"1.5.4",hash:"2cfbc68"},function(e){return Ws.apply(this,arguments)}(!1).then((function(e){var t=e.app;e.router.onReady((function(){t.$mount("#app")}))}))}]);