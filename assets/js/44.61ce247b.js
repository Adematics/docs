(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{241:function(t,e,a){"use strict";a.r(e);var s=a(0),r=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"extracttogcs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#extracttogcs"}},[t._v("#")]),t._v(" ExtractToGcs")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"org.kestra.task.gcp.bigquery.ExtractToGcs"')]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("Extract data from BigQuery table to GCS (Google Cloud Storage)")])]),t._v(" "),a("h2",{attrs:{id:"examples"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#examples"}},[t._v("#")]),t._v(" Examples")]),t._v(" "),a("blockquote",[a("p",[t._v("Extract a BigQuery table to a gcs bucket")])]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"extract_to_gcs"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"org.kestra.task.gcp.bigquery.ExtractToGcs"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("destinationUris")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" gs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//bucket_name/filename.csv\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("sourceTable")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"my_project.my_dataset.my_table"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("format")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" CSV\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("fieldDelimiter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("';'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("printHeader")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n")])])]),a("h2",{attrs:{id:"inputs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#inputs"}},[t._v("#")]),t._v(" Inputs")]),t._v(" "),a("h3",{attrs:{id:"compression"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#compression"}},[t._v("#")]),t._v(" "),a("code",[t._v("compression")])]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Type:")]),t._v(" "),a("Badge",{attrs:{vertical:"middle",text:"String"}})],1),t._v(" "),a("li",[a("strong",[t._v("Dynamic:")]),t._v(" ✔️")]),t._v(" "),a("li",[a("strong",[t._v("Required:")]),t._v(" ❌")])]),t._v(" "),a("blockquote",[a("p",[t._v("the compression value to use for exported files. If not set exported files are not compressed.")])]),t._v(" "),a("h3",{attrs:{id:"destinationuris"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#destinationuris"}},[t._v("#")]),t._v(" "),a("code",[t._v("destinationUris")])]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Type:")]),t._v(" "),a("Badge",{attrs:{vertical:"middle",text:"List<String>"}})],1),t._v(" "),a("li",[a("strong",[t._v("Dynamic:")]),t._v(" ✔️")]),t._v(" "),a("li",[a("strong",[t._v("Required:")]),t._v(" ❌")])]),t._v(" "),a("blockquote",[a("p",[t._v("The list of fully-qualified Google Cloud Storage URIs (e.g. gs://bucket/path) where the extracted table should be written.")])]),t._v(" "),a("h3",{attrs:{id:"fielddelimiter"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#fielddelimiter"}},[t._v("#")]),t._v(" "),a("code",[t._v("fieldDelimiter")])]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Type:")]),t._v(" "),a("Badge",{attrs:{vertical:"middle",text:"String"}})],1),t._v(" "),a("li",[a("strong",[t._v("Dynamic:")]),t._v(" ✔️")]),t._v(" "),a("li",[a("strong",[t._v("Required:")]),t._v(" ❌")])]),t._v(" "),a("blockquote",[a("p",[t._v('The delimiter to use between fields in the exported data. By default "," is used.')])]),t._v(" "),a("h3",{attrs:{id:"format"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#format"}},[t._v("#")]),t._v(" "),a("code",[t._v("format")])]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Type:")]),t._v(" "),a("Badge",{attrs:{vertical:"middle",text:"String"}})],1),t._v(" "),a("li",[a("strong",[t._v("Dynamic:")]),t._v(" ✔️")]),t._v(" "),a("li",[a("strong",[t._v("Required:")]),t._v(" ❌")])]),t._v(" "),a("blockquote",[a("p",[t._v("The exported file format. If not set table is exported in CSV format.")])]),t._v(" "),a("h3",{attrs:{id:"jobtimeoutms"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jobtimeoutms"}},[t._v("#")]),t._v(" "),a("code",[t._v("jobTimeoutMs")])]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Type:")]),t._v(" "),a("Badge",{attrs:{vertical:"middle",text:"Long"}})],1),t._v(" "),a("li",[a("strong",[t._v("Dynamic:")]),t._v(" ❌")]),t._v(" "),a("li",[a("strong",[t._v("Required:")]),t._v(" ❌")])]),t._v(" "),a("blockquote",[a("p",[t._v("[Optional] Job timeout in milliseconds. If this time limit is exceeded, BigQuery may attempt to terminate the job.")])]),t._v(" "),a("h3",{attrs:{id:"labels"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#labels"}},[t._v("#")]),t._v(" "),a("code",[t._v("labels")])]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Type:")]),t._v(" "),a("Badge",{attrs:{vertical:"middle",text:"Map<String, String>"}})],1),t._v(" "),a("li",[a("strong",[t._v("Dynamic:")]),t._v(" ✔️")]),t._v(" "),a("li",[a("strong",[t._v("Required:")]),t._v(" ❌")])]),t._v(" "),a("blockquote",[a("p",[t._v("The labels associated with this job.")])]),t._v(" "),a("p",[t._v("The labels associated with this job. You can use these to organize and group your jobs. Label keys and values can be no longer than 63 characters, can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. Label values are optional. Label keys must start with a letter and each label in the list must have a different key.\nParameters:\nlabels - labels or null for none")]),t._v(" "),a("h3",{attrs:{id:"location"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#location"}},[t._v("#")]),t._v(" "),a("code",[t._v("location")])]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Type:")]),t._v(" "),a("Badge",{attrs:{vertical:"middle",text:"String"}})],1),t._v(" "),a("li",[a("strong",[t._v("Dynamic:")]),t._v(" ✔️")]),t._v(" "),a("li",[a("strong",[t._v("Required:")]),t._v(" ❌")])]),t._v(" "),a("blockquote",[a("p",[t._v("The geographic location where the dataset should reside")])]),t._v(" "),a("p",[t._v("This property is experimental\nand might be subject to change or removed.")]),t._v(" "),a("p",[t._v("See "),a("a",{attrs:{href:"https://cloud.google.com/bigquery/docs/reference/v2/datasets#location"}},[t._v("Dataset\nLocation")])]),t._v(" "),a("h3",{attrs:{id:"printheader"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#printheader"}},[t._v("#")]),t._v(" "),a("code",[t._v("printHeader")])]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Type:")]),t._v(" "),a("Badge",{attrs:{vertical:"middle",text:"Boolean"}})],1),t._v(" "),a("li",[a("strong",[t._v("Dynamic:")]),t._v(" ❌")]),t._v(" "),a("li",[a("strong",[t._v("Required:")]),t._v(" ❌")])]),t._v(" "),a("blockquote",[a("p",[t._v("Whether to print out a header row in the results. By default an header is printed.")])]),t._v(" "),a("h3",{attrs:{id:"projectid"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#projectid"}},[t._v("#")]),t._v(" "),a("code",[t._v("projectId")])]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Type:")]),t._v(" "),a("Badge",{attrs:{vertical:"middle",text:"String"}})],1),t._v(" "),a("li",[a("strong",[t._v("Dynamic:")]),t._v(" ✔️")]),t._v(" "),a("li",[a("strong",[t._v("Required:")]),t._v(" ❌")])]),t._v(" "),a("blockquote",[a("p",[t._v("The GCP project id")])]),t._v(" "),a("h3",{attrs:{id:"sourcetable"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sourcetable"}},[t._v("#")]),t._v(" "),a("code",[t._v("sourceTable")])]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Type:")]),t._v(" "),a("Badge",{attrs:{vertical:"middle",text:"String"}})],1),t._v(" "),a("li",[a("strong",[t._v("Dynamic:")]),t._v(" ✔️")]),t._v(" "),a("li",[a("strong",[t._v("Required:")]),t._v(" ❌")])]),t._v(" "),a("blockquote",[a("p",[t._v("The table to export.")])]),t._v(" "),a("h3",{attrs:{id:"useavrologicaltypes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#useavrologicaltypes"}},[t._v("#")]),t._v(" "),a("code",[t._v("useAvroLogicalTypes")])]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Type:")]),t._v(" "),a("Badge",{attrs:{vertical:"middle",text:"Boolean"}})],1),t._v(" "),a("li",[a("strong",[t._v("Dynamic:")]),t._v(" ❌")]),t._v(" "),a("li",[a("strong",[t._v("Required:")]),t._v(" ❌")])]),t._v(" "),a("blockquote",[a("p",[t._v('[Optional] Flag if format is set to "AVRO".')])]),t._v(" "),a("p",[t._v('[Optional] If destinationFormat is set to "AVRO", this flag indicates whether to enable extracting applicable column types (such as TIMESTAMP) to their corresponding AVRO logical types (timestamp-micros), instead of only using their raw types (avro-long).\nParameters:\nuseAvroLogicalTypes - useAvroLogicalTypes or null for none')]),t._v(" "),a("h2",{attrs:{id:"outputs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#outputs"}},[t._v("#")]),t._v(" Outputs")]),t._v(" "),a("h3",{attrs:{id:"destinationuris-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#destinationuris-2"}},[t._v("#")]),t._v(" "),a("code",[t._v("destinationUris")])]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Type:")]),t._v(" "),a("Badge",{attrs:{vertical:"middle",text:"List<String>"}})],1)]),t._v(" "),a("blockquote",[a("p",[t._v("The destination URI file")])]),t._v(" "),a("h3",{attrs:{id:"filecounts"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#filecounts"}},[t._v("#")]),t._v(" "),a("code",[t._v("fileCounts")])]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Type:")]),t._v(" "),a("Badge",{attrs:{vertical:"middle",text:"List<Long>"}})],1)]),t._v(" "),a("h3",{attrs:{id:"jobid"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jobid"}},[t._v("#")]),t._v(" "),a("code",[t._v("jobId")])]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Type:")]),t._v(" "),a("Badge",{attrs:{vertical:"middle",text:"String"}})],1)]),t._v(" "),a("blockquote",[a("p",[t._v("The job id")])]),t._v(" "),a("h3",{attrs:{id:"sourcetable-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sourcetable-2"}},[t._v("#")]),t._v(" "),a("code",[t._v("sourceTable")])]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Type:")]),t._v(" "),a("Badge",{attrs:{vertical:"middle",text:"String"}})],1)]),t._v(" "),a("blockquote",[a("p",[t._v("source Table")])])])}),[],!1,null,null,null);e.default=r.exports}}]);