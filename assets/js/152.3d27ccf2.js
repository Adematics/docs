(window.webpackJsonp=window.webpackJsonp||[]).push([[152],{837:function(t,e,a){"use strict";a.r(e);var s=a(19),r=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"math"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#math"}},[t._v("#")]),t._v(" Math")]),t._v(" "),a("p",[t._v("All the regular math operators are available for use. Order of operations applies.")]),t._v(" "),a("div",{staticClass:"language-twig extra-class"},[a("pre",{pre:!0,attrs:{class:"language-twig"}},[a("code",[a("span",{pre:!0,attrs:{class:"token twig language-twig"}},[a("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("{{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("}}")])]),t._v("\n")])])]),a("p",[t._v("The following operators are supported:")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("+")]),t._v(": Adds two numbers together (the operands are casted to numbers). "),a("code",{pre:!0},[t._v("{{"),a("br"),t._v("\n1 + 1 }}")]),t._v(" is 2.")]),t._v(" "),a("li",[a("code",[t._v("-")]),t._v(": Subtracts the second number from the first one. "),a("code",{pre:!0},[t._v("{{ 3 - 2 }}")]),t._v(" is 1.")]),t._v(" "),a("li",[a("code",[t._v("/")]),t._v(": Divides two numbers. The returned value will be a floating point number.  "),a("code",{pre:!0},[t._v("{{ 1 / 2 }}")]),t._v(" is "),a("code",{pre:!0},[t._v("{{ 0.5 }}")]),t._v(".")]),t._v(" "),a("li",[a("code",[t._v("%")]),t._v(": Calculates the remainder of an integer division. "),a("code",{pre:!0},[t._v("{{ 11 % 7 }}")]),t._v(" is 4.")]),t._v(" "),a("li",[a("code",[t._v("*")]),t._v(": Multiplies the left operand with the right one. "),a("code",{pre:!0},[t._v("{{ 2 * 2 }}")]),t._v(" would return 4.")])]),t._v(" "),a("p",[t._v("The result can be negated using the "),a("a",{attrs:{href:"./not"}},[t._v("not")]),t._v(" operator.")])])}),[],!1,null,null,null);e.default=r.exports}}]);