(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[]]);!function(e){function n(n){for(var i,o,s=n[0],l=n[1],u=n[2],d=0,p=[];d<s.length;d++)o=s[d],Object.prototype.hasOwnProperty.call(r,o)&&r[o]&&p.push(r[o][0]),r[o]=0;for(i in l)Object.prototype.hasOwnProperty.call(l,i)&&(e[i]=l[i]);for(c&&c(n);p.length;)p.shift()();return a.push.apply(a,u||[]),t()}function t(){for(var e,n=0;n<a.length;n++){for(var t=a[n],i=!0,s=1;s<t.length;s++){var l=t[s];0!==r[l]&&(i=!1)}i&&(a.splice(n--,1),e=o(o.s=t[0]))}return e}var i={},r={4:0},a=[];function o(n){if(i[n])return i[n].exports;var t=i[n]={i:n,l:!1,exports:{}};return e[n].call(t.exports,t,t.exports,o),t.l=!0,t.exports}o.e=function(e){var n=[],t=r[e];if(0!==t)if(t)n.push(t[2]);else{var i=new Promise((function(n,i){t=r[e]=[n,i]}));n.push(t[2]=i);var a,s=document.createElement("script");s.charset="utf-8",s.timeout=120,o.nc&&s.setAttribute("nonce",o.nc),s.src=function(e){return o.p+"assets/js/"+({}[e]||e)+"."+{1:"8f2e2700",2:"5aa86b08",3:"71f501e3",5:"8747e425",6:"882d0d31",7:"1d5c3bbe",8:"51e5c620",9:"d5b881a4",10:"c3c5bab6",11:"73f86be7",12:"985d173e",13:"3a29ec58",14:"f4f9742c",15:"019df7d8",16:"a4c89037",17:"eb09260f",18:"3164f69b",19:"57d7ee79",20:"ddf15af6",21:"f31cacaf",22:"f8168a7a",23:"57982e21",24:"ff6d8902",25:"b1d14874",26:"bb3831fe",27:"cd4c5efd",28:"76a3783b",29:"2ba61577",30:"a7a3171f",31:"6bdf7b25",32:"041911fa",33:"c2f9771e",34:"a0de9b29",35:"693e5af9",36:"88bd359d",37:"9d3b415f",38:"add25ca3",39:"e540b763",40:"15a99166",41:"a053700b",42:"7bdeb57c",43:"1addbd53",44:"6b35867b",45:"4fa21a5d",46:"36e2d3ff",47:"fc8c0059",48:"be7c1d0f",49:"8220502d",50:"160f035a",51:"b8c04a4f",52:"fcc54530",53:"e5d8a698",54:"ef76622f",55:"cf961f4b",56:"6252d731",57:"91a13bd8",58:"00142a0b",59:"e9965beb",60:"fc1a8da2",61:"8fd8bcf5",62:"6db35b83",63:"105a3fff",64:"8d7b4212",65:"d1929863",66:"d1a99726",67:"2aa60e45",68:"17b45988",69:"7831b5e6",70:"210c0d77",71:"814b22b5",72:"8b0f38dc",73:"9b41919a",74:"0f51bc93",75:"116bbb03",76:"69b4060a",77:"e40cb127",78:"2647c829",79:"f2fb937e",80:"a8e66b8b",81:"283fadae",82:"a89381fe",83:"92b76820",84:"1ae3d22b",85:"ec90aa0c",86:"e362522b",87:"dde243b4",88:"b7df2c79",89:"3adba6d8",90:"5c928d02",91:"ef5e8813",92:"e2099318",93:"d0b25d8f",94:"d16f1e3d",95:"3d0a6f01",96:"c93dab7f",97:"097ad803",98:"32cb95c9",99:"375dc0de",100:"7cc96ba7",101:"8ab8f04c",102:"8980135d",103:"ae661fbc",104:"e0dd7b91",105:"379721c3",106:"45cfd970",107:"5bc4c0f6",108:"3ca484a5",109:"5b5ab3b8",110:"ef24bd9e",111:"51a299ac",112:"74d7b813",113:"16664c00",114:"7831421c",115:"3fb9d5ca",116:"1dde3ac9",117:"edd7c6f6",118:"86de045e",119:"de8e31ae",120:"acca2547",121:"afe0f24b",122:"7895793a",123:"0188e733",124:"cb0fad4d",125:"ae7501d4",126:"9d68bd08",127:"254ccf99",128:"fd8cee55",129:"408a6a2b",130:"c10fc817",131:"a99ad2a1",132:"27d8dd80",133:"65aa06ba",134:"b58ad06d",135:"c488c768",136:"bc3c2fd5",137:"6e212511",138:"2f7bf597",139:"232ee8ef",140:"1bc532d0",141:"e669c827",142:"8b2d0fc5",143:"04cb1909",144:"f1600d7e",145:"60829e23",146:"cd93ab30",147:"fae032c4",148:"3edf6c90",149:"aa5aca94",150:"4f936af8",151:"c374a562",152:"2ef0ef70",153:"bf2a4e1c",154:"170cecd3",155:"fcbd68ca",156:"c8db2000",157:"f0de766f",158:"a59f40a8",159:"3c798578",160:"f71123cf",161:"a5160a58",162:"aab9e99c",163:"3d164404",164:"0839c1eb",165:"30cd3d96",166:"84eac500",167:"1c2b51b5",168:"f003a07e",169:"8500fa98",170:"0b985d2d",171:"c1f8c276",172:"2a0d45fd",173:"162fe4f1",174:"520e2ed6",175:"3d365709",176:"d0a4367a",177:"73c4c3e6",178:"134bd42a",179:"3fe983d9",180:"b4af424d",181:"297d3594",182:"37a173e8",183:"00b54128",184:"16c6b801",185:"2f889475",186:"e34df1b9",187:"a41b237a",188:"7b68f2c2",189:"5274f9f0",190:"7c8df5b3",191:"556d4a2e",192:"7f5a4b59",193:"8b065d26",194:"1a2f4cc0",195:"931f667f",196:"0a988864",197:"68f7da1d",198:"57332d77",199:"621579da",200:"67e11572",201:"18eff026",202:"757f2dbe",203:"955af6d4",204:"f2c466de",205:"4d15bdff",206:"aeb91646",207:"0729aa0d",208:"0dcd4eaf",209:"f640386a",210:"8c86ad8f",211:"8e97a873",212:"39dcfa6b",213:"e4e1d387",214:"aa09d1e8",215:"7efb767d",216:"a1f1c858",217:"1e425e3a",218:"df7a9bfa",219:"d04024cd",220:"ebf47d03",221:"03c6a35a",222:"ddfb0b34",223:"cf22ba53",224:"3e70771a",225:"cc241a69",226:"d45cebb9",227:"36cd2d62",228:"40e60c8d",229:"2eef3dcd",230:"34747856",231:"c9c2a1a2",232:"434e4112",233:"91042c05",234:"e7e1ff75",235:"80be97f9",236:"8ae495f2",237:"736af3cc",238:"a74673ca",239:"918ebfb6",240:"cbfe8fe5",241:"bde32e1c",242:"a6e24f6a",243:"6e5f86d6",244:"5848ded2",245:"6606681d",246:"7a83b938",247:"52c1db2b",248:"29d3fab4",249:"1f36329d",250:"31c32fb6",251:"b426cd51",252:"ce5d6f0a",253:"faebbd2d",254:"b8725883",255:"114bff94",256:"70f7867a",257:"b286974b",258:"3d3d3879",259:"962ab476",260:"38f19ecd",261:"fd3232a5",262:"91160087",263:"0ce645b1",264:"b7a59c97",265:"cdf1d9cb",266:"423152f2",267:"3ea2a5e5",268:"01a8c621",269:"931e1783",270:"b51a8e5c",271:"84316906",272:"7a4c495d",273:"f15c9709",274:"ca8825cc",275:"60c111b9",276:"3a7b4526",277:"6b7b3932",278:"3a3f65a9",279:"fad88a2a",280:"ab7858ba",281:"a066ab65",282:"bef76194",283:"d00cca44",284:"fe554b6e",285:"6bbf1a39",286:"1fd7be32",287:"dafa9ab8",288:"ebfceed8",289:"94a3f2e5",290:"10b3550a",291:"87e681f8",292:"2f48a332",293:"90c86010",294:"32be3fc5",295:"b407fcc1",296:"8a17fe61",297:"a25b35c8",298:"a4b53a9c",299:"20d35f9f",300:"5ac26fe8",301:"9f9877a2",302:"bf4bdc32",303:"cdb9b39b",304:"5a31ccb3",305:"84292bb2",306:"666e78a3",307:"08f94db4",308:"387c5eb5",309:"25222dd5",310:"9bb39cf6",311:"d450218f",312:"ab232022",313:"799d5f35",314:"739e5180",315:"3272a147",316:"9da349f4",317:"9a03e97e",318:"86d911b1",319:"5323d248",320:"bceadb99",321:"83bca784",322:"b7b30cdc",323:"beaf9638",324:"54adc2fe",325:"50af16f0",326:"99f40691",327:"4eee6c87",328:"94868c8c",329:"49f20a0a",330:"a202b8fe",331:"8fe57b4e",332:"a6a5cf0d",333:"53514779",334:"92fef609",335:"c82b7a6d",336:"ecdfaf73",337:"c6025da9",338:"edd70d61",339:"299af8ab",340:"8fb4fbf9",341:"910a506e",342:"6e10ed05",343:"ff9242fd",344:"8ffbbcb9",345:"c01f14b0",346:"7c3fa131",347:"634f6d5e",348:"9e7f9af6",349:"2fd9f712",350:"c51dc436",351:"394809dc",352:"9d682572",353:"f0cd7de1",354:"dc0578b8",355:"34ff7d98",356:"4c686073",357:"f6e37126",358:"8a759812",359:"313035a4",360:"845937bd",361:"fb4cf9df",362:"d07a50ce",363:"33b6f71c",364:"90456ed5",365:"af5f188b",366:"1e80a26f",367:"e471ee33",368:"a5c3f2d5",369:"8cc5110e",370:"d0854665",371:"1ce2a576",372:"30162c78",373:"509f20f3",374:"f139eb8c",375:"bda81f4c",376:"63445a9b",377:"2f24f95c",378:"c9c6319e",379:"7e35fc8c",380:"458eaa68",381:"edee5f64",382:"ecb79c48",383:"4b9d8006",384:"e17bdb88",385:"64155e92",386:"3ba50103",387:"69b925be",388:"3c8f212f",389:"c2caab64"}[e]+".js"}(e);var l=new Error;a=function(n){s.onerror=s.onload=null,clearTimeout(u);var t=r[e];if(0!==t){if(t){var i=n&&("load"===n.type?"missing":n.type),a=n&&n.target&&n.target.src;l.message="Loading chunk "+e+" failed.\n("+i+": "+a+")",l.name="ChunkLoadError",l.type=i,l.request=a,t[1](l)}r[e]=void 0}};var u=setTimeout((function(){a({type:"timeout",target:s})}),12e4);s.onerror=s.onload=a,document.head.appendChild(s)}return Promise.all(n)},o.m=e,o.c=i,o.d=function(e,n,t){o.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:t})},o.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.t=function(e,n){if(1&n&&(e=o(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(o.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var i in e)o.d(t,i,function(n){return e[n]}.bind(null,i));return t},o.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(n,"a",n),n},o.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},o.p="/",o.oe=function(e){throw console.error(e),e};var s=window.webpackJsonp=window.webpackJsonp||[],l=s.push.bind(s);s.push=n,s=s.slice();for(var u=0;u<s.length;u++)n(s[u]);var c=l;a.push([223,0]),t()}([function(e,n){var t=function(e){return e&&e.Math==Math&&e};e.exports=t("object"==typeof globalThis&&globalThis)||t("object"==typeof window&&window)||t("object"==typeof self&&self)||t("object"==typeof global&&global)||function(){return this}()||Function("return this")()},function(e,n,t){var i=t(0),r=t(26).f,a=t(25),o=t(15),s=t(99),l=t(105),u=t(107);e.exports=function(e,n){var t,c,d,p,g,y=e.target,m=e.global,M=e.stat;if(t=m?i:M?i[y]||s(y,{}):(i[y]||{}).prototype)for(c in n){if(p=n[c],d=e.noTargetGet?(g=r(t,c))&&g.value:t[c],!u(m?c:y+(M?".":"#")+c,e.forced)&&void 0!==d){if(typeof p==typeof d)continue;l(p,d)}(e.sham||d&&d.sham)&&a(p,"sham",!0),o(t,c,p,e)}}},function(e,n){var t=Function.prototype,i=t.bind,r=t.call,a=i&&i.bind(r,r);e.exports=i?function(e){return e&&a(e)}:function(e){return e&&function(){return r.apply(e,arguments)}}},function(e,n){e.exports=function(e){try{return!!e()}catch(e){return!0}}},function(e,n,t){"use strict";
/*!
 * Vue.js v2.6.14
 * (c) 2014-2021 Evan You
 * Released under the MIT License.
 */var i=Object.freeze({});function r(e){return null==e}function a(e){return null!=e}function o(e){return!0===e}function s(e){return"string"==typeof e||"number"==typeof e||"symbol"==typeof e||"boolean"==typeof e}function l(e){return null!==e&&"object"==typeof e}var u=Object.prototype.toString;function c(e){return"[object Object]"===u.call(e)}function d(e){return"[object RegExp]"===u.call(e)}function p(e){var n=parseFloat(String(e));return n>=0&&Math.floor(n)===n&&isFinite(e)}function g(e){return a(e)&&"function"==typeof e.then&&"function"==typeof e.catch}function y(e){return null==e?"":Array.isArray(e)||c(e)&&e.toString===u?JSON.stringify(e,null,2):String(e)}function m(e){var n=parseFloat(e);return isNaN(n)?e:n}function M(e,n){for(var t=Object.create(null),i=e.split(","),r=0;r<i.length;r++)t[i[r]]=!0;return n?function(e){return t[e.toLowerCase()]}:function(e){return t[e]}}M("slot,component",!0);var h=M("key,ref,slot,slot-scope,is");function T(e,n){if(e.length){var t=e.indexOf(n);if(t>-1)return e.splice(t,1)}}var I=Object.prototype.hasOwnProperty;function f(e,n){return I.call(e,n)}function N(e){var n=Object.create(null);return function(t){return n[t]||(n[t]=e(t))}}var j=/-(\w)/g,w=N((function(e){return e.replace(j,(function(e,n){return n?n.toUpperCase():""}))})),L=N((function(e){return e.charAt(0).toUpperCase()+e.slice(1)})),D=/\B([A-Z])/g,z=N((function(e){return e.replace(D,"-$1").toLowerCase()}));var b=Function.prototype.bind?function(e,n){return e.bind(n)}:function(e,n){function t(t){var i=arguments.length;return i?i>1?e.apply(n,arguments):e.call(n,t):e.call(n)}return t._length=e.length,t};function k(e,n){n=n||0;for(var t=e.length-n,i=new Array(t);t--;)i[t]=e[t+n];return i}function x(e,n){for(var t in n)e[t]=n[t];return e}function C(e){for(var n={},t=0;t<e.length;t++)e[t]&&x(n,e[t]);return n}function A(e,n,t){}var v=function(e,n,t){return!1},S=function(e){return e};function O(e,n){if(e===n)return!0;var t=l(e),i=l(n);if(!t||!i)return!t&&!i&&String(e)===String(n);try{var r=Array.isArray(e),a=Array.isArray(n);if(r&&a)return e.length===n.length&&e.every((function(e,t){return O(e,n[t])}));if(e instanceof Date&&n instanceof Date)return e.getTime()===n.getTime();if(r||a)return!1;var o=Object.keys(e),s=Object.keys(n);return o.length===s.length&&o.every((function(t){return O(e[t],n[t])}))}catch(e){return!1}}function E(e,n){for(var t=0;t<e.length;t++)if(O(e[t],n))return t;return-1}function U(e){var n=!1;return function(){n||(n=!0,e.apply(this,arguments))}}var Y=["component","directive","filter"],Q=["beforeCreate","created","beforeMount","mounted","beforeUpdate","updated","beforeDestroy","destroyed","activated","deactivated","errorCaptured","serverPrefetch"],R={optionMergeStrategies:Object.create(null),silent:!1,productionTip:!1,devtools:!1,performance:!1,errorHandler:null,warnHandler:null,ignoredElements:[],keyCodes:Object.create(null),isReservedTag:v,isReservedAttr:v,isUnknownElement:v,getTagNamespace:A,parsePlatformTagName:S,mustUseProp:v,async:!0,_lifecycleHooks:Q},q=/a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;function Z(e,n,t,i){Object.defineProperty(e,n,{value:t,enumerable:!!i,writable:!0,configurable:!0})}var P=new RegExp("[^"+q.source+".$_\\d]");var W,G="__proto__"in{},F="undefined"!=typeof window,B="undefined"!=typeof WXEnvironment&&!!WXEnvironment.platform,V=B&&WXEnvironment.platform.toLowerCase(),J=F&&window.navigator.userAgent.toLowerCase(),H=J&&/msie|trident/.test(J),K=J&&J.indexOf("msie 9.0")>0,_=J&&J.indexOf("edge/")>0,X=(J&&J.indexOf("android"),J&&/iphone|ipad|ipod|ios/.test(J)||"ios"===V),$=(J&&/chrome\/\d+/.test(J),J&&/phantomjs/.test(J),J&&J.match(/firefox\/(\d+)/)),ee={}.watch,ne=!1;if(F)try{var te={};Object.defineProperty(te,"passive",{get:function(){ne=!0}}),window.addEventListener("test-passive",null,te)}catch(e){}var ie=function(){return void 0===W&&(W=!F&&!B&&"undefined"!=typeof global&&(global.process&&"server"===global.process.env.VUE_ENV)),W},re=F&&window.__VUE_DEVTOOLS_GLOBAL_HOOK__;function ae(e){return"function"==typeof e&&/native code/.test(e.toString())}var oe,se="undefined"!=typeof Symbol&&ae(Symbol)&&"undefined"!=typeof Reflect&&ae(Reflect.ownKeys);oe="undefined"!=typeof Set&&ae(Set)?Set:function(){function e(){this.set=Object.create(null)}return e.prototype.has=function(e){return!0===this.set[e]},e.prototype.add=function(e){this.set[e]=!0},e.prototype.clear=function(){this.set=Object.create(null)},e}();var le=A,ue=0,ce=function(){this.id=ue++,this.subs=[]};ce.prototype.addSub=function(e){this.subs.push(e)},ce.prototype.removeSub=function(e){T(this.subs,e)},ce.prototype.depend=function(){ce.target&&ce.target.addDep(this)},ce.prototype.notify=function(){var e=this.subs.slice();for(var n=0,t=e.length;n<t;n++)e[n].update()},ce.target=null;var de=[];function pe(e){de.push(e),ce.target=e}function ge(){de.pop(),ce.target=de[de.length-1]}var ye=function(e,n,t,i,r,a,o,s){this.tag=e,this.data=n,this.children=t,this.text=i,this.elm=r,this.ns=void 0,this.context=a,this.fnContext=void 0,this.fnOptions=void 0,this.fnScopeId=void 0,this.key=n&&n.key,this.componentOptions=o,this.componentInstance=void 0,this.parent=void 0,this.raw=!1,this.isStatic=!1,this.isRootInsert=!0,this.isComment=!1,this.isCloned=!1,this.isOnce=!1,this.asyncFactory=s,this.asyncMeta=void 0,this.isAsyncPlaceholder=!1},me={child:{configurable:!0}};me.child.get=function(){return this.componentInstance},Object.defineProperties(ye.prototype,me);var Me=function(e){void 0===e&&(e="");var n=new ye;return n.text=e,n.isComment=!0,n};function he(e){return new ye(void 0,void 0,void 0,String(e))}function Te(e){var n=new ye(e.tag,e.data,e.children&&e.children.slice(),e.text,e.elm,e.context,e.componentOptions,e.asyncFactory);return n.ns=e.ns,n.isStatic=e.isStatic,n.key=e.key,n.isComment=e.isComment,n.fnContext=e.fnContext,n.fnOptions=e.fnOptions,n.fnScopeId=e.fnScopeId,n.asyncMeta=e.asyncMeta,n.isCloned=!0,n}var Ie=Array.prototype,fe=Object.create(Ie);["push","pop","shift","unshift","splice","sort","reverse"].forEach((function(e){var n=Ie[e];Z(fe,e,(function(){for(var t=[],i=arguments.length;i--;)t[i]=arguments[i];var r,a=n.apply(this,t),o=this.__ob__;switch(e){case"push":case"unshift":r=t;break;case"splice":r=t.slice(2)}return r&&o.observeArray(r),o.dep.notify(),a}))}));var Ne=Object.getOwnPropertyNames(fe),je=!0;function we(e){je=e}var Le=function(e){this.value=e,this.dep=new ce,this.vmCount=0,Z(e,"__ob__",this),Array.isArray(e)?(G?function(e,n){e.__proto__=n}(e,fe):function(e,n,t){for(var i=0,r=t.length;i<r;i++){var a=t[i];Z(e,a,n[a])}}(e,fe,Ne),this.observeArray(e)):this.walk(e)};function De(e,n){var t;if(l(e)&&!(e instanceof ye))return f(e,"__ob__")&&e.__ob__ instanceof Le?t=e.__ob__:je&&!ie()&&(Array.isArray(e)||c(e))&&Object.isExtensible(e)&&!e._isVue&&(t=new Le(e)),n&&t&&t.vmCount++,t}function ze(e,n,t,i,r){var a=new ce,o=Object.getOwnPropertyDescriptor(e,n);if(!o||!1!==o.configurable){var s=o&&o.get,l=o&&o.set;s&&!l||2!==arguments.length||(t=e[n]);var u=!r&&De(t);Object.defineProperty(e,n,{enumerable:!0,configurable:!0,get:function(){var n=s?s.call(e):t;return ce.target&&(a.depend(),u&&(u.dep.depend(),Array.isArray(n)&&xe(n))),n},set:function(n){var i=s?s.call(e):t;n===i||n!=n&&i!=i||s&&!l||(l?l.call(e,n):t=n,u=!r&&De(n),a.notify())}})}}function be(e,n,t){if(Array.isArray(e)&&p(n))return e.length=Math.max(e.length,n),e.splice(n,1,t),t;if(n in e&&!(n in Object.prototype))return e[n]=t,t;var i=e.__ob__;return e._isVue||i&&i.vmCount?t:i?(ze(i.value,n,t),i.dep.notify(),t):(e[n]=t,t)}function ke(e,n){if(Array.isArray(e)&&p(n))e.splice(n,1);else{var t=e.__ob__;e._isVue||t&&t.vmCount||f(e,n)&&(delete e[n],t&&t.dep.notify())}}function xe(e){for(var n=void 0,t=0,i=e.length;t<i;t++)(n=e[t])&&n.__ob__&&n.__ob__.dep.depend(),Array.isArray(n)&&xe(n)}Le.prototype.walk=function(e){for(var n=Object.keys(e),t=0;t<n.length;t++)ze(e,n[t])},Le.prototype.observeArray=function(e){for(var n=0,t=e.length;n<t;n++)De(e[n])};var Ce=R.optionMergeStrategies;function Ae(e,n){if(!n)return e;for(var t,i,r,a=se?Reflect.ownKeys(n):Object.keys(n),o=0;o<a.length;o++)"__ob__"!==(t=a[o])&&(i=e[t],r=n[t],f(e,t)?i!==r&&c(i)&&c(r)&&Ae(i,r):be(e,t,r));return e}function ve(e,n,t){return t?function(){var i="function"==typeof n?n.call(t,t):n,r="function"==typeof e?e.call(t,t):e;return i?Ae(i,r):r}:n?e?function(){return Ae("function"==typeof n?n.call(this,this):n,"function"==typeof e?e.call(this,this):e)}:n:e}function Se(e,n){var t=n?e?e.concat(n):Array.isArray(n)?n:[n]:e;return t?function(e){for(var n=[],t=0;t<e.length;t++)-1===n.indexOf(e[t])&&n.push(e[t]);return n}(t):t}function Oe(e,n,t,i){var r=Object.create(e||null);return n?x(r,n):r}Ce.data=function(e,n,t){return t?ve(e,n,t):n&&"function"!=typeof n?e:ve(e,n)},Q.forEach((function(e){Ce[e]=Se})),Y.forEach((function(e){Ce[e+"s"]=Oe})),Ce.watch=function(e,n,t,i){if(e===ee&&(e=void 0),n===ee&&(n=void 0),!n)return Object.create(e||null);if(!e)return n;var r={};for(var a in x(r,e),n){var o=r[a],s=n[a];o&&!Array.isArray(o)&&(o=[o]),r[a]=o?o.concat(s):Array.isArray(s)?s:[s]}return r},Ce.props=Ce.methods=Ce.inject=Ce.computed=function(e,n,t,i){if(!e)return n;var r=Object.create(null);return x(r,e),n&&x(r,n),r},Ce.provide=ve;var Ee=function(e,n){return void 0===n?e:n};function Ue(e,n,t){if("function"==typeof n&&(n=n.options),function(e,n){var t=e.props;if(t){var i,r,a={};if(Array.isArray(t))for(i=t.length;i--;)"string"==typeof(r=t[i])&&(a[w(r)]={type:null});else if(c(t))for(var o in t)r=t[o],a[w(o)]=c(r)?r:{type:r};else 0;e.props=a}}(n),function(e,n){var t=e.inject;if(t){var i=e.inject={};if(Array.isArray(t))for(var r=0;r<t.length;r++)i[t[r]]={from:t[r]};else if(c(t))for(var a in t){var o=t[a];i[a]=c(o)?x({from:a},o):{from:o}}else 0}}(n),function(e){var n=e.directives;if(n)for(var t in n){var i=n[t];"function"==typeof i&&(n[t]={bind:i,update:i})}}(n),!n._base&&(n.extends&&(e=Ue(e,n.extends,t)),n.mixins))for(var i=0,r=n.mixins.length;i<r;i++)e=Ue(e,n.mixins[i],t);var a,o={};for(a in e)s(a);for(a in n)f(e,a)||s(a);function s(i){var r=Ce[i]||Ee;o[i]=r(e[i],n[i],t,i)}return o}function Ye(e,n,t,i){if("string"==typeof t){var r=e[n];if(f(r,t))return r[t];var a=w(t);if(f(r,a))return r[a];var o=L(a);return f(r,o)?r[o]:r[t]||r[a]||r[o]}}function Qe(e,n,t,i){var r=n[e],a=!f(t,e),o=t[e],s=Pe(Boolean,r.type);if(s>-1)if(a&&!f(r,"default"))o=!1;else if(""===o||o===z(e)){var l=Pe(String,r.type);(l<0||s<l)&&(o=!0)}if(void 0===o){o=function(e,n,t){if(!f(n,"default"))return;var i=n.default;0;if(e&&e.$options.propsData&&void 0===e.$options.propsData[t]&&void 0!==e._props[t])return e._props[t];return"function"==typeof i&&"Function"!==qe(n.type)?i.call(e):i}(i,r,e);var u=je;we(!0),De(o),we(u)}return o}var Re=/^\s*function (\w+)/;function qe(e){var n=e&&e.toString().match(Re);return n?n[1]:""}function Ze(e,n){return qe(e)===qe(n)}function Pe(e,n){if(!Array.isArray(n))return Ze(n,e)?0:-1;for(var t=0,i=n.length;t<i;t++)if(Ze(n[t],e))return t;return-1}function We(e,n,t){pe();try{if(n)for(var i=n;i=i.$parent;){var r=i.$options.errorCaptured;if(r)for(var a=0;a<r.length;a++)try{if(!1===r[a].call(i,e,n,t))return}catch(e){Fe(e,i,"errorCaptured hook")}}Fe(e,n,t)}finally{ge()}}function Ge(e,n,t,i,r){var a;try{(a=t?e.apply(n,t):e.call(n))&&!a._isVue&&g(a)&&!a._handled&&(a.catch((function(e){return We(e,i,r+" (Promise/async)")})),a._handled=!0)}catch(e){We(e,i,r)}return a}function Fe(e,n,t){if(R.errorHandler)try{return R.errorHandler.call(null,e,n,t)}catch(n){n!==e&&Be(n,null,"config.errorHandler")}Be(e,n,t)}function Be(e,n,t){if(!F&&!B||"undefined"==typeof console)throw e;console.error(e)}var Ve,Je=!1,He=[],Ke=!1;function _e(){Ke=!1;var e=He.slice(0);He.length=0;for(var n=0;n<e.length;n++)e[n]()}if("undefined"!=typeof Promise&&ae(Promise)){var Xe=Promise.resolve();Ve=function(){Xe.then(_e),X&&setTimeout(A)},Je=!0}else if(H||"undefined"==typeof MutationObserver||!ae(MutationObserver)&&"[object MutationObserverConstructor]"!==MutationObserver.toString())Ve="undefined"!=typeof setImmediate&&ae(setImmediate)?function(){setImmediate(_e)}:function(){setTimeout(_e,0)};else{var $e=1,en=new MutationObserver(_e),nn=document.createTextNode(String($e));en.observe(nn,{characterData:!0}),Ve=function(){$e=($e+1)%2,nn.data=String($e)},Je=!0}function tn(e,n){var t;if(He.push((function(){if(e)try{e.call(n)}catch(e){We(e,n,"nextTick")}else t&&t(n)})),Ke||(Ke=!0,Ve()),!e&&"undefined"!=typeof Promise)return new Promise((function(e){t=e}))}var rn=new oe;function an(e){!function e(n,t){var i,r,a=Array.isArray(n);if(!a&&!l(n)||Object.isFrozen(n)||n instanceof ye)return;if(n.__ob__){var o=n.__ob__.dep.id;if(t.has(o))return;t.add(o)}if(a)for(i=n.length;i--;)e(n[i],t);else for(r=Object.keys(n),i=r.length;i--;)e(n[r[i]],t)}(e,rn),rn.clear()}var on=N((function(e){var n="&"===e.charAt(0),t="~"===(e=n?e.slice(1):e).charAt(0),i="!"===(e=t?e.slice(1):e).charAt(0);return{name:e=i?e.slice(1):e,once:t,capture:i,passive:n}}));function sn(e,n){function t(){var e=arguments,i=t.fns;if(!Array.isArray(i))return Ge(i,null,arguments,n,"v-on handler");for(var r=i.slice(),a=0;a<r.length;a++)Ge(r[a],null,e,n,"v-on handler")}return t.fns=e,t}function ln(e,n,t,i,a,s){var l,u,c,d;for(l in e)u=e[l],c=n[l],d=on(l),r(u)||(r(c)?(r(u.fns)&&(u=e[l]=sn(u,s)),o(d.once)&&(u=e[l]=a(d.name,u,d.capture)),t(d.name,u,d.capture,d.passive,d.params)):u!==c&&(c.fns=u,e[l]=c));for(l in n)r(e[l])&&i((d=on(l)).name,n[l],d.capture)}function un(e,n,t){var i;e instanceof ye&&(e=e.data.hook||(e.data.hook={}));var s=e[n];function l(){t.apply(this,arguments),T(i.fns,l)}r(s)?i=sn([l]):a(s.fns)&&o(s.merged)?(i=s).fns.push(l):i=sn([s,l]),i.merged=!0,e[n]=i}function cn(e,n,t,i,r){if(a(n)){if(f(n,t))return e[t]=n[t],r||delete n[t],!0;if(f(n,i))return e[t]=n[i],r||delete n[i],!0}return!1}function dn(e){return s(e)?[he(e)]:Array.isArray(e)?function e(n,t){var i,l,u,c,d=[];for(i=0;i<n.length;i++)r(l=n[i])||"boolean"==typeof l||(u=d.length-1,c=d[u],Array.isArray(l)?l.length>0&&(pn((l=e(l,(t||"")+"_"+i))[0])&&pn(c)&&(d[u]=he(c.text+l[0].text),l.shift()),d.push.apply(d,l)):s(l)?pn(c)?d[u]=he(c.text+l):""!==l&&d.push(he(l)):pn(l)&&pn(c)?d[u]=he(c.text+l.text):(o(n._isVList)&&a(l.tag)&&r(l.key)&&a(t)&&(l.key="__vlist"+t+"_"+i+"__"),d.push(l)));return d}(e):void 0}function pn(e){return a(e)&&a(e.text)&&!1===e.isComment}function gn(e,n){if(e){for(var t=Object.create(null),i=se?Reflect.ownKeys(e):Object.keys(e),r=0;r<i.length;r++){var a=i[r];if("__ob__"!==a){for(var o=e[a].from,s=n;s;){if(s._provided&&f(s._provided,o)){t[a]=s._provided[o];break}s=s.$parent}if(!s)if("default"in e[a]){var l=e[a].default;t[a]="function"==typeof l?l.call(n):l}else 0}}return t}}function yn(e,n){if(!e||!e.length)return{};for(var t={},i=0,r=e.length;i<r;i++){var a=e[i],o=a.data;if(o&&o.attrs&&o.attrs.slot&&delete o.attrs.slot,a.context!==n&&a.fnContext!==n||!o||null==o.slot)(t.default||(t.default=[])).push(a);else{var s=o.slot,l=t[s]||(t[s]=[]);"template"===a.tag?l.push.apply(l,a.children||[]):l.push(a)}}for(var u in t)t[u].every(mn)&&delete t[u];return t}function mn(e){return e.isComment&&!e.asyncFactory||" "===e.text}function Mn(e){return e.isComment&&e.asyncFactory}function hn(e,n,t){var r,a=Object.keys(n).length>0,o=e?!!e.$stable:!a,s=e&&e.$key;if(e){if(e._normalized)return e._normalized;if(o&&t&&t!==i&&s===t.$key&&!a&&!t.$hasNormal)return t;for(var l in r={},e)e[l]&&"$"!==l[0]&&(r[l]=Tn(n,l,e[l]))}else r={};for(var u in n)u in r||(r[u]=In(n,u));return e&&Object.isExtensible(e)&&(e._normalized=r),Z(r,"$stable",o),Z(r,"$key",s),Z(r,"$hasNormal",a),r}function Tn(e,n,t){var i=function(){var e=arguments.length?t.apply(null,arguments):t({}),n=(e=e&&"object"==typeof e&&!Array.isArray(e)?[e]:dn(e))&&e[0];return e&&(!n||1===e.length&&n.isComment&&!Mn(n))?void 0:e};return t.proxy&&Object.defineProperty(e,n,{get:i,enumerable:!0,configurable:!0}),i}function In(e,n){return function(){return e[n]}}function fn(e,n){var t,i,r,o,s;if(Array.isArray(e)||"string"==typeof e)for(t=new Array(e.length),i=0,r=e.length;i<r;i++)t[i]=n(e[i],i);else if("number"==typeof e)for(t=new Array(e),i=0;i<e;i++)t[i]=n(i+1,i);else if(l(e))if(se&&e[Symbol.iterator]){t=[];for(var u=e[Symbol.iterator](),c=u.next();!c.done;)t.push(n(c.value,t.length)),c=u.next()}else for(o=Object.keys(e),t=new Array(o.length),i=0,r=o.length;i<r;i++)s=o[i],t[i]=n(e[s],s,i);return a(t)||(t=[]),t._isVList=!0,t}function Nn(e,n,t,i){var r,a=this.$scopedSlots[e];a?(t=t||{},i&&(t=x(x({},i),t)),r=a(t)||("function"==typeof n?n():n)):r=this.$slots[e]||("function"==typeof n?n():n);var o=t&&t.slot;return o?this.$createElement("template",{slot:o},r):r}function jn(e){return Ye(this.$options,"filters",e)||S}function wn(e,n){return Array.isArray(e)?-1===e.indexOf(n):e!==n}function Ln(e,n,t,i,r){var a=R.keyCodes[n]||t;return r&&i&&!R.keyCodes[n]?wn(r,i):a?wn(a,e):i?z(i)!==n:void 0===e}function Dn(e,n,t,i,r){if(t)if(l(t)){var a;Array.isArray(t)&&(t=C(t));var o=function(o){if("class"===o||"style"===o||h(o))a=e;else{var s=e.attrs&&e.attrs.type;a=i||R.mustUseProp(n,s,o)?e.domProps||(e.domProps={}):e.attrs||(e.attrs={})}var l=w(o),u=z(o);l in a||u in a||(a[o]=t[o],r&&((e.on||(e.on={}))["update:"+o]=function(e){t[o]=e}))};for(var s in t)o(s)}else;return e}function zn(e,n){var t=this._staticTrees||(this._staticTrees=[]),i=t[e];return i&&!n||kn(i=t[e]=this.$options.staticRenderFns[e].call(this._renderProxy,null,this),"__static__"+e,!1),i}function bn(e,n,t){return kn(e,"__once__"+n+(t?"_"+t:""),!0),e}function kn(e,n,t){if(Array.isArray(e))for(var i=0;i<e.length;i++)e[i]&&"string"!=typeof e[i]&&xn(e[i],n+"_"+i,t);else xn(e,n,t)}function xn(e,n,t){e.isStatic=!0,e.key=n,e.isOnce=t}function Cn(e,n){if(n)if(c(n)){var t=e.on=e.on?x({},e.on):{};for(var i in n){var r=t[i],a=n[i];t[i]=r?[].concat(r,a):a}}else;return e}function An(e,n,t,i){n=n||{$stable:!t};for(var r=0;r<e.length;r++){var a=e[r];Array.isArray(a)?An(a,n,t):a&&(a.proxy&&(a.fn.proxy=!0),n[a.key]=a.fn)}return i&&(n.$key=i),n}function vn(e,n){for(var t=0;t<n.length;t+=2){var i=n[t];"string"==typeof i&&i&&(e[n[t]]=n[t+1])}return e}function Sn(e,n){return"string"==typeof e?n+e:e}function On(e){e._o=bn,e._n=m,e._s=y,e._l=fn,e._t=Nn,e._q=O,e._i=E,e._m=zn,e._f=jn,e._k=Ln,e._b=Dn,e._v=he,e._e=Me,e._u=An,e._g=Cn,e._d=vn,e._p=Sn}function En(e,n,t,r,a){var s,l=this,u=a.options;f(r,"_uid")?(s=Object.create(r))._original=r:(s=r,r=r._original);var c=o(u._compiled),d=!c;this.data=e,this.props=n,this.children=t,this.parent=r,this.listeners=e.on||i,this.injections=gn(u.inject,r),this.slots=function(){return l.$slots||hn(e.scopedSlots,l.$slots=yn(t,r)),l.$slots},Object.defineProperty(this,"scopedSlots",{enumerable:!0,get:function(){return hn(e.scopedSlots,this.slots())}}),c&&(this.$options=u,this.$slots=this.slots(),this.$scopedSlots=hn(e.scopedSlots,this.$slots)),u._scopeId?this._c=function(e,n,t,i){var a=Pn(s,e,n,t,i,d);return a&&!Array.isArray(a)&&(a.fnScopeId=u._scopeId,a.fnContext=r),a}:this._c=function(e,n,t,i){return Pn(s,e,n,t,i,d)}}function Un(e,n,t,i,r){var a=Te(e);return a.fnContext=t,a.fnOptions=i,n.slot&&((a.data||(a.data={})).slot=n.slot),a}function Yn(e,n){for(var t in n)e[w(t)]=n[t]}On(En.prototype);var Qn={init:function(e,n){if(e.componentInstance&&!e.componentInstance._isDestroyed&&e.data.keepAlive){var t=e;Qn.prepatch(t,t)}else{(e.componentInstance=function(e,n){var t={_isComponent:!0,_parentVnode:e,parent:n},i=e.data.inlineTemplate;a(i)&&(t.render=i.render,t.staticRenderFns=i.staticRenderFns);return new e.componentOptions.Ctor(t)}(e,_n)).$mount(n?e.elm:void 0,n)}},prepatch:function(e,n){var t=n.componentOptions;!function(e,n,t,r,a){0;var o=r.data.scopedSlots,s=e.$scopedSlots,l=!!(o&&!o.$stable||s!==i&&!s.$stable||o&&e.$scopedSlots.$key!==o.$key||!o&&e.$scopedSlots.$key),u=!!(a||e.$options._renderChildren||l);e.$options._parentVnode=r,e.$vnode=r,e._vnode&&(e._vnode.parent=r);if(e.$options._renderChildren=a,e.$attrs=r.data.attrs||i,e.$listeners=t||i,n&&e.$options.props){we(!1);for(var c=e._props,d=e.$options._propKeys||[],p=0;p<d.length;p++){var g=d[p],y=e.$options.props;c[g]=Qe(g,y,n,e)}we(!0),e.$options.propsData=n}t=t||i;var m=e.$options._parentListeners;e.$options._parentListeners=t,Kn(e,t,m),u&&(e.$slots=yn(a,r.context),e.$forceUpdate());0}(n.componentInstance=e.componentInstance,t.propsData,t.listeners,n,t.children)},insert:function(e){var n,t=e.context,i=e.componentInstance;i._isMounted||(i._isMounted=!0,nt(i,"mounted")),e.data.keepAlive&&(t._isMounted?((n=i)._inactive=!1,it.push(n)):et(i,!0))},destroy:function(e){var n=e.componentInstance;n._isDestroyed||(e.data.keepAlive?function e(n,t){if(t&&(n._directInactive=!0,$n(n)))return;if(!n._inactive){n._inactive=!0;for(var i=0;i<n.$children.length;i++)e(n.$children[i]);nt(n,"deactivated")}}(n,!0):n.$destroy())}},Rn=Object.keys(Qn);function qn(e,n,t,s,u){if(!r(e)){var c=t.$options._base;if(l(e)&&(e=c.extend(e)),"function"==typeof e){var d;if(r(e.cid)&&void 0===(e=function(e,n){if(o(e.error)&&a(e.errorComp))return e.errorComp;if(a(e.resolved))return e.resolved;var t=Gn;t&&a(e.owners)&&-1===e.owners.indexOf(t)&&e.owners.push(t);if(o(e.loading)&&a(e.loadingComp))return e.loadingComp;if(t&&!a(e.owners)){var i=e.owners=[t],s=!0,u=null,c=null;t.$on("hook:destroyed",(function(){return T(i,t)}));var d=function(e){for(var n=0,t=i.length;n<t;n++)i[n].$forceUpdate();e&&(i.length=0,null!==u&&(clearTimeout(u),u=null),null!==c&&(clearTimeout(c),c=null))},p=U((function(t){e.resolved=Fn(t,n),s?i.length=0:d(!0)})),y=U((function(n){a(e.errorComp)&&(e.error=!0,d(!0))})),m=e(p,y);return l(m)&&(g(m)?r(e.resolved)&&m.then(p,y):g(m.component)&&(m.component.then(p,y),a(m.error)&&(e.errorComp=Fn(m.error,n)),a(m.loading)&&(e.loadingComp=Fn(m.loading,n),0===m.delay?e.loading=!0:u=setTimeout((function(){u=null,r(e.resolved)&&r(e.error)&&(e.loading=!0,d(!1))}),m.delay||200)),a(m.timeout)&&(c=setTimeout((function(){c=null,r(e.resolved)&&y(null)}),m.timeout)))),s=!1,e.loading?e.loadingComp:e.resolved}}(d=e,c)))return function(e,n,t,i,r){var a=Me();return a.asyncFactory=e,a.asyncMeta={data:n,context:t,children:i,tag:r},a}(d,n,t,s,u);n=n||{},wt(e),a(n.model)&&function(e,n){var t=e.model&&e.model.prop||"value",i=e.model&&e.model.event||"input";(n.attrs||(n.attrs={}))[t]=n.model.value;var r=n.on||(n.on={}),o=r[i],s=n.model.callback;a(o)?(Array.isArray(o)?-1===o.indexOf(s):o!==s)&&(r[i]=[s].concat(o)):r[i]=s}(e.options,n);var p=function(e,n,t){var i=n.options.props;if(!r(i)){var o={},s=e.attrs,l=e.props;if(a(s)||a(l))for(var u in i){var c=z(u);cn(o,l,u,c,!0)||cn(o,s,u,c,!1)}return o}}(n,e);if(o(e.options.functional))return function(e,n,t,r,o){var s=e.options,l={},u=s.props;if(a(u))for(var c in u)l[c]=Qe(c,u,n||i);else a(t.attrs)&&Yn(l,t.attrs),a(t.props)&&Yn(l,t.props);var d=new En(t,l,o,r,e),p=s.render.call(null,d._c,d);if(p instanceof ye)return Un(p,t,d.parent,s,d);if(Array.isArray(p)){for(var g=dn(p)||[],y=new Array(g.length),m=0;m<g.length;m++)y[m]=Un(g[m],t,d.parent,s,d);return y}}(e,p,n,t,s);var y=n.on;if(n.on=n.nativeOn,o(e.options.abstract)){var m=n.slot;n={},m&&(n.slot=m)}!function(e){for(var n=e.hook||(e.hook={}),t=0;t<Rn.length;t++){var i=Rn[t],r=n[i],a=Qn[i];r===a||r&&r._merged||(n[i]=r?Zn(a,r):a)}}(n);var M=e.options.name||u;return new ye("vue-component-"+e.cid+(M?"-"+M:""),n,void 0,void 0,void 0,t,{Ctor:e,propsData:p,listeners:y,tag:u,children:s},d)}}}function Zn(e,n){var t=function(t,i){e(t,i),n(t,i)};return t._merged=!0,t}function Pn(e,n,t,i,u,c){return(Array.isArray(t)||s(t))&&(u=i,i=t,t=void 0),o(c)&&(u=2),function(e,n,t,i,s){if(a(t)&&a(t.__ob__))return Me();a(t)&&a(t.is)&&(n=t.is);if(!n)return Me();0;Array.isArray(i)&&"function"==typeof i[0]&&((t=t||{}).scopedSlots={default:i[0]},i.length=0);2===s?i=dn(i):1===s&&(i=function(e){for(var n=0;n<e.length;n++)if(Array.isArray(e[n]))return Array.prototype.concat.apply([],e);return e}(i));var u,c;if("string"==typeof n){var d;c=e.$vnode&&e.$vnode.ns||R.getTagNamespace(n),u=R.isReservedTag(n)?new ye(R.parsePlatformTagName(n),t,i,void 0,void 0,e):t&&t.pre||!a(d=Ye(e.$options,"components",n))?new ye(n,t,i,void 0,void 0,e):qn(d,t,e,i,n)}else u=qn(n,t,e,i);return Array.isArray(u)?u:a(u)?(a(c)&&function e(n,t,i){n.ns=t,"foreignObject"===n.tag&&(t=void 0,i=!0);if(a(n.children))for(var s=0,l=n.children.length;s<l;s++){var u=n.children[s];a(u.tag)&&(r(u.ns)||o(i)&&"svg"!==u.tag)&&e(u,t,i)}}(u,c),a(t)&&function(e){l(e.style)&&an(e.style);l(e.class)&&an(e.class)}(t),u):Me()}(e,n,t,i,u)}var Wn,Gn=null;function Fn(e,n){return(e.__esModule||se&&"Module"===e[Symbol.toStringTag])&&(e=e.default),l(e)?n.extend(e):e}function Bn(e){if(Array.isArray(e))for(var n=0;n<e.length;n++){var t=e[n];if(a(t)&&(a(t.componentOptions)||Mn(t)))return t}}function Vn(e,n){Wn.$on(e,n)}function Jn(e,n){Wn.$off(e,n)}function Hn(e,n){var t=Wn;return function i(){var r=n.apply(null,arguments);null!==r&&t.$off(e,i)}}function Kn(e,n,t){Wn=e,ln(n,t||{},Vn,Jn,Hn,e),Wn=void 0}var _n=null;function Xn(e){var n=_n;return _n=e,function(){_n=n}}function $n(e){for(;e&&(e=e.$parent);)if(e._inactive)return!0;return!1}function et(e,n){if(n){if(e._directInactive=!1,$n(e))return}else if(e._directInactive)return;if(e._inactive||null===e._inactive){e._inactive=!1;for(var t=0;t<e.$children.length;t++)et(e.$children[t]);nt(e,"activated")}}function nt(e,n){pe();var t=e.$options[n],i=n+" hook";if(t)for(var r=0,a=t.length;r<a;r++)Ge(t[r],e,null,e,i);e._hasHookEvent&&e.$emit("hook:"+n),ge()}var tt=[],it=[],rt={},at=!1,ot=!1,st=0;var lt=0,ut=Date.now;if(F&&!H){var ct=window.performance;ct&&"function"==typeof ct.now&&ut()>document.createEvent("Event").timeStamp&&(ut=function(){return ct.now()})}function dt(){var e,n;for(lt=ut(),ot=!0,tt.sort((function(e,n){return e.id-n.id})),st=0;st<tt.length;st++)(e=tt[st]).before&&e.before(),n=e.id,rt[n]=null,e.run();var t=it.slice(),i=tt.slice();st=tt.length=it.length=0,rt={},at=ot=!1,function(e){for(var n=0;n<e.length;n++)e[n]._inactive=!0,et(e[n],!0)}(t),function(e){var n=e.length;for(;n--;){var t=e[n],i=t.vm;i._watcher===t&&i._isMounted&&!i._isDestroyed&&nt(i,"updated")}}(i),re&&R.devtools&&re.emit("flush")}var pt=0,gt=function(e,n,t,i,r){this.vm=e,r&&(e._watcher=this),e._watchers.push(this),i?(this.deep=!!i.deep,this.user=!!i.user,this.lazy=!!i.lazy,this.sync=!!i.sync,this.before=i.before):this.deep=this.user=this.lazy=this.sync=!1,this.cb=t,this.id=++pt,this.active=!0,this.dirty=this.lazy,this.deps=[],this.newDeps=[],this.depIds=new oe,this.newDepIds=new oe,this.expression="","function"==typeof n?this.getter=n:(this.getter=function(e){if(!P.test(e)){var n=e.split(".");return function(e){for(var t=0;t<n.length;t++){if(!e)return;e=e[n[t]]}return e}}}(n),this.getter||(this.getter=A)),this.value=this.lazy?void 0:this.get()};gt.prototype.get=function(){var e;pe(this);var n=this.vm;try{e=this.getter.call(n,n)}catch(e){if(!this.user)throw e;We(e,n,'getter for watcher "'+this.expression+'"')}finally{this.deep&&an(e),ge(),this.cleanupDeps()}return e},gt.prototype.addDep=function(e){var n=e.id;this.newDepIds.has(n)||(this.newDepIds.add(n),this.newDeps.push(e),this.depIds.has(n)||e.addSub(this))},gt.prototype.cleanupDeps=function(){for(var e=this.deps.length;e--;){var n=this.deps[e];this.newDepIds.has(n.id)||n.removeSub(this)}var t=this.depIds;this.depIds=this.newDepIds,this.newDepIds=t,this.newDepIds.clear(),t=this.deps,this.deps=this.newDeps,this.newDeps=t,this.newDeps.length=0},gt.prototype.update=function(){this.lazy?this.dirty=!0:this.sync?this.run():function(e){var n=e.id;if(null==rt[n]){if(rt[n]=!0,ot){for(var t=tt.length-1;t>st&&tt[t].id>e.id;)t--;tt.splice(t+1,0,e)}else tt.push(e);at||(at=!0,tn(dt))}}(this)},gt.prototype.run=function(){if(this.active){var e=this.get();if(e!==this.value||l(e)||this.deep){var n=this.value;if(this.value=e,this.user){var t='callback for watcher "'+this.expression+'"';Ge(this.cb,this.vm,[e,n],this.vm,t)}else this.cb.call(this.vm,e,n)}}},gt.prototype.evaluate=function(){this.value=this.get(),this.dirty=!1},gt.prototype.depend=function(){for(var e=this.deps.length;e--;)this.deps[e].depend()},gt.prototype.teardown=function(){if(this.active){this.vm._isBeingDestroyed||T(this.vm._watchers,this);for(var e=this.deps.length;e--;)this.deps[e].removeSub(this);this.active=!1}};var yt={enumerable:!0,configurable:!0,get:A,set:A};function mt(e,n,t){yt.get=function(){return this[n][t]},yt.set=function(e){this[n][t]=e},Object.defineProperty(e,t,yt)}function Mt(e){e._watchers=[];var n=e.$options;n.props&&function(e,n){var t=e.$options.propsData||{},i=e._props={},r=e.$options._propKeys=[];e.$parent&&we(!1);var a=function(a){r.push(a);var o=Qe(a,n,t,e);ze(i,a,o),a in e||mt(e,"_props",a)};for(var o in n)a(o);we(!0)}(e,n.props),n.methods&&function(e,n){e.$options.props;for(var t in n)e[t]="function"!=typeof n[t]?A:b(n[t],e)}(e,n.methods),n.data?function(e){var n=e.$options.data;c(n=e._data="function"==typeof n?function(e,n){pe();try{return e.call(n,n)}catch(e){return We(e,n,"data()"),{}}finally{ge()}}(n,e):n||{})||(n={});var t=Object.keys(n),i=e.$options.props,r=(e.$options.methods,t.length);for(;r--;){var a=t[r];0,i&&f(i,a)||(o=void 0,36!==(o=(a+"").charCodeAt(0))&&95!==o&&mt(e,"_data",a))}var o;De(n,!0)}(e):De(e._data={},!0),n.computed&&function(e,n){var t=e._computedWatchers=Object.create(null),i=ie();for(var r in n){var a=n[r],o="function"==typeof a?a:a.get;0,i||(t[r]=new gt(e,o||A,A,ht)),r in e||Tt(e,r,a)}}(e,n.computed),n.watch&&n.watch!==ee&&function(e,n){for(var t in n){var i=n[t];if(Array.isArray(i))for(var r=0;r<i.length;r++)Nt(e,t,i[r]);else Nt(e,t,i)}}(e,n.watch)}var ht={lazy:!0};function Tt(e,n,t){var i=!ie();"function"==typeof t?(yt.get=i?It(n):ft(t),yt.set=A):(yt.get=t.get?i&&!1!==t.cache?It(n):ft(t.get):A,yt.set=t.set||A),Object.defineProperty(e,n,yt)}function It(e){return function(){var n=this._computedWatchers&&this._computedWatchers[e];if(n)return n.dirty&&n.evaluate(),ce.target&&n.depend(),n.value}}function ft(e){return function(){return e.call(this,this)}}function Nt(e,n,t,i){return c(t)&&(i=t,t=t.handler),"string"==typeof t&&(t=e[t]),e.$watch(n,t,i)}var jt=0;function wt(e){var n=e.options;if(e.super){var t=wt(e.super);if(t!==e.superOptions){e.superOptions=t;var i=function(e){var n,t=e.options,i=e.sealedOptions;for(var r in t)t[r]!==i[r]&&(n||(n={}),n[r]=t[r]);return n}(e);i&&x(e.extendOptions,i),(n=e.options=Ue(t,e.extendOptions)).name&&(n.components[n.name]=e)}}return n}function Lt(e){this._init(e)}function Dt(e){e.cid=0;var n=1;e.extend=function(e){e=e||{};var t=this,i=t.cid,r=e._Ctor||(e._Ctor={});if(r[i])return r[i];var a=e.name||t.options.name;var o=function(e){this._init(e)};return(o.prototype=Object.create(t.prototype)).constructor=o,o.cid=n++,o.options=Ue(t.options,e),o.super=t,o.options.props&&function(e){var n=e.options.props;for(var t in n)mt(e.prototype,"_props",t)}(o),o.options.computed&&function(e){var n=e.options.computed;for(var t in n)Tt(e.prototype,t,n[t])}(o),o.extend=t.extend,o.mixin=t.mixin,o.use=t.use,Y.forEach((function(e){o[e]=t[e]})),a&&(o.options.components[a]=o),o.superOptions=t.options,o.extendOptions=e,o.sealedOptions=x({},o.options),r[i]=o,o}}function zt(e){return e&&(e.Ctor.options.name||e.tag)}function bt(e,n){return Array.isArray(e)?e.indexOf(n)>-1:"string"==typeof e?e.split(",").indexOf(n)>-1:!!d(e)&&e.test(n)}function kt(e,n){var t=e.cache,i=e.keys,r=e._vnode;for(var a in t){var o=t[a];if(o){var s=o.name;s&&!n(s)&&xt(t,a,i,r)}}}function xt(e,n,t,i){var r=e[n];!r||i&&r.tag===i.tag||r.componentInstance.$destroy(),e[n]=null,T(t,n)}!function(e){e.prototype._init=function(e){var n=this;n._uid=jt++,n._isVue=!0,e&&e._isComponent?function(e,n){var t=e.$options=Object.create(e.constructor.options),i=n._parentVnode;t.parent=n.parent,t._parentVnode=i;var r=i.componentOptions;t.propsData=r.propsData,t._parentListeners=r.listeners,t._renderChildren=r.children,t._componentTag=r.tag,n.render&&(t.render=n.render,t.staticRenderFns=n.staticRenderFns)}(n,e):n.$options=Ue(wt(n.constructor),e||{},n),n._renderProxy=n,n._self=n,function(e){var n=e.$options,t=n.parent;if(t&&!n.abstract){for(;t.$options.abstract&&t.$parent;)t=t.$parent;t.$children.push(e)}e.$parent=t,e.$root=t?t.$root:e,e.$children=[],e.$refs={},e._watcher=null,e._inactive=null,e._directInactive=!1,e._isMounted=!1,e._isDestroyed=!1,e._isBeingDestroyed=!1}(n),function(e){e._events=Object.create(null),e._hasHookEvent=!1;var n=e.$options._parentListeners;n&&Kn(e,n)}(n),function(e){e._vnode=null,e._staticTrees=null;var n=e.$options,t=e.$vnode=n._parentVnode,r=t&&t.context;e.$slots=yn(n._renderChildren,r),e.$scopedSlots=i,e._c=function(n,t,i,r){return Pn(e,n,t,i,r,!1)},e.$createElement=function(n,t,i,r){return Pn(e,n,t,i,r,!0)};var a=t&&t.data;ze(e,"$attrs",a&&a.attrs||i,null,!0),ze(e,"$listeners",n._parentListeners||i,null,!0)}(n),nt(n,"beforeCreate"),function(e){var n=gn(e.$options.inject,e);n&&(we(!1),Object.keys(n).forEach((function(t){ze(e,t,n[t])})),we(!0))}(n),Mt(n),function(e){var n=e.$options.provide;n&&(e._provided="function"==typeof n?n.call(e):n)}(n),nt(n,"created"),n.$options.el&&n.$mount(n.$options.el)}}(Lt),function(e){var n={get:function(){return this._data}},t={get:function(){return this._props}};Object.defineProperty(e.prototype,"$data",n),Object.defineProperty(e.prototype,"$props",t),e.prototype.$set=be,e.prototype.$delete=ke,e.prototype.$watch=function(e,n,t){if(c(n))return Nt(this,e,n,t);(t=t||{}).user=!0;var i=new gt(this,e,n,t);if(t.immediate){var r='callback for immediate watcher "'+i.expression+'"';pe(),Ge(n,this,[i.value],this,r),ge()}return function(){i.teardown()}}}(Lt),function(e){var n=/^hook:/;e.prototype.$on=function(e,t){var i=this;if(Array.isArray(e))for(var r=0,a=e.length;r<a;r++)i.$on(e[r],t);else(i._events[e]||(i._events[e]=[])).push(t),n.test(e)&&(i._hasHookEvent=!0);return i},e.prototype.$once=function(e,n){var t=this;function i(){t.$off(e,i),n.apply(t,arguments)}return i.fn=n,t.$on(e,i),t},e.prototype.$off=function(e,n){var t=this;if(!arguments.length)return t._events=Object.create(null),t;if(Array.isArray(e)){for(var i=0,r=e.length;i<r;i++)t.$off(e[i],n);return t}var a,o=t._events[e];if(!o)return t;if(!n)return t._events[e]=null,t;for(var s=o.length;s--;)if((a=o[s])===n||a.fn===n){o.splice(s,1);break}return t},e.prototype.$emit=function(e){var n=this,t=n._events[e];if(t){t=t.length>1?k(t):t;for(var i=k(arguments,1),r='event handler for "'+e+'"',a=0,o=t.length;a<o;a++)Ge(t[a],n,i,n,r)}return n}}(Lt),function(e){e.prototype._update=function(e,n){var t=this,i=t.$el,r=t._vnode,a=Xn(t);t._vnode=e,t.$el=r?t.__patch__(r,e):t.__patch__(t.$el,e,n,!1),a(),i&&(i.__vue__=null),t.$el&&(t.$el.__vue__=t),t.$vnode&&t.$parent&&t.$vnode===t.$parent._vnode&&(t.$parent.$el=t.$el)},e.prototype.$forceUpdate=function(){this._watcher&&this._watcher.update()},e.prototype.$destroy=function(){var e=this;if(!e._isBeingDestroyed){nt(e,"beforeDestroy"),e._isBeingDestroyed=!0;var n=e.$parent;!n||n._isBeingDestroyed||e.$options.abstract||T(n.$children,e),e._watcher&&e._watcher.teardown();for(var t=e._watchers.length;t--;)e._watchers[t].teardown();e._data.__ob__&&e._data.__ob__.vmCount--,e._isDestroyed=!0,e.__patch__(e._vnode,null),nt(e,"destroyed"),e.$off(),e.$el&&(e.$el.__vue__=null),e.$vnode&&(e.$vnode.parent=null)}}}(Lt),function(e){On(e.prototype),e.prototype.$nextTick=function(e){return tn(e,this)},e.prototype._render=function(){var e,n=this,t=n.$options,i=t.render,r=t._parentVnode;r&&(n.$scopedSlots=hn(r.data.scopedSlots,n.$slots,n.$scopedSlots)),n.$vnode=r;try{Gn=n,e=i.call(n._renderProxy,n.$createElement)}catch(t){We(t,n,"render"),e=n._vnode}finally{Gn=null}return Array.isArray(e)&&1===e.length&&(e=e[0]),e instanceof ye||(e=Me()),e.parent=r,e}}(Lt);var Ct=[String,RegExp,Array],At={KeepAlive:{name:"keep-alive",abstract:!0,props:{include:Ct,exclude:Ct,max:[String,Number]},methods:{cacheVNode:function(){var e=this.cache,n=this.keys,t=this.vnodeToCache,i=this.keyToCache;if(t){var r=t.tag,a=t.componentInstance,o=t.componentOptions;e[i]={name:zt(o),tag:r,componentInstance:a},n.push(i),this.max&&n.length>parseInt(this.max)&&xt(e,n[0],n,this._vnode),this.vnodeToCache=null}}},created:function(){this.cache=Object.create(null),this.keys=[]},destroyed:function(){for(var e in this.cache)xt(this.cache,e,this.keys)},mounted:function(){var e=this;this.cacheVNode(),this.$watch("include",(function(n){kt(e,(function(e){return bt(n,e)}))})),this.$watch("exclude",(function(n){kt(e,(function(e){return!bt(n,e)}))}))},updated:function(){this.cacheVNode()},render:function(){var e=this.$slots.default,n=Bn(e),t=n&&n.componentOptions;if(t){var i=zt(t),r=this.include,a=this.exclude;if(r&&(!i||!bt(r,i))||a&&i&&bt(a,i))return n;var o=this.cache,s=this.keys,l=null==n.key?t.Ctor.cid+(t.tag?"::"+t.tag:""):n.key;o[l]?(n.componentInstance=o[l].componentInstance,T(s,l),s.push(l)):(this.vnodeToCache=n,this.keyToCache=l),n.data.keepAlive=!0}return n||e&&e[0]}}};!function(e){var n={get:function(){return R}};Object.defineProperty(e,"config",n),e.util={warn:le,extend:x,mergeOptions:Ue,defineReactive:ze},e.set=be,e.delete=ke,e.nextTick=tn,e.observable=function(e){return De(e),e},e.options=Object.create(null),Y.forEach((function(n){e.options[n+"s"]=Object.create(null)})),e.options._base=e,x(e.options.components,At),function(e){e.use=function(e){var n=this._installedPlugins||(this._installedPlugins=[]);if(n.indexOf(e)>-1)return this;var t=k(arguments,1);return t.unshift(this),"function"==typeof e.install?e.install.apply(e,t):"function"==typeof e&&e.apply(null,t),n.push(e),this}}(e),function(e){e.mixin=function(e){return this.options=Ue(this.options,e),this}}(e),Dt(e),function(e){Y.forEach((function(n){e[n]=function(e,t){return t?("component"===n&&c(t)&&(t.name=t.name||e,t=this.options._base.extend(t)),"directive"===n&&"function"==typeof t&&(t={bind:t,update:t}),this.options[n+"s"][e]=t,t):this.options[n+"s"][e]}}))}(e)}(Lt),Object.defineProperty(Lt.prototype,"$isServer",{get:ie}),Object.defineProperty(Lt.prototype,"$ssrContext",{get:function(){return this.$vnode&&this.$vnode.ssrContext}}),Object.defineProperty(Lt,"FunctionalRenderContext",{value:En}),Lt.version="2.6.14";var vt=M("style,class"),St=M("input,textarea,option,select,progress"),Ot=M("contenteditable,draggable,spellcheck"),Et=M("events,caret,typing,plaintext-only"),Ut=M("allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,default,defaultchecked,defaultmuted,defaultselected,defer,disabled,enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,required,reversed,scoped,seamless,selected,sortable,truespeed,typemustmatch,visible"),Yt="http://www.w3.org/1999/xlink",Qt=function(e){return":"===e.charAt(5)&&"xlink"===e.slice(0,5)},Rt=function(e){return Qt(e)?e.slice(6,e.length):""},qt=function(e){return null==e||!1===e};function Zt(e){for(var n=e.data,t=e,i=e;a(i.componentInstance);)(i=i.componentInstance._vnode)&&i.data&&(n=Pt(i.data,n));for(;a(t=t.parent);)t&&t.data&&(n=Pt(n,t.data));return function(e,n){if(a(e)||a(n))return Wt(e,Gt(n));return""}(n.staticClass,n.class)}function Pt(e,n){return{staticClass:Wt(e.staticClass,n.staticClass),class:a(e.class)?[e.class,n.class]:n.class}}function Wt(e,n){return e?n?e+" "+n:e:n||""}function Gt(e){return Array.isArray(e)?function(e){for(var n,t="",i=0,r=e.length;i<r;i++)a(n=Gt(e[i]))&&""!==n&&(t&&(t+=" "),t+=n);return t}(e):l(e)?function(e){var n="";for(var t in e)e[t]&&(n&&(n+=" "),n+=t);return n}(e):"string"==typeof e?e:""}var Ft={svg:"http://www.w3.org/2000/svg",math:"http://www.w3.org/1998/Math/MathML"},Bt=M("html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,menuitem,summary,content,element,shadow,template,blockquote,iframe,tfoot"),Vt=M("svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,foreignobject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view",!0),Jt=function(e){return Bt(e)||Vt(e)};var Ht=Object.create(null);var Kt=M("text,number,password,search,email,tel,url");var _t=Object.freeze({createElement:function(e,n){var t=document.createElement(e);return"select"!==e||n.data&&n.data.attrs&&void 0!==n.data.attrs.multiple&&t.setAttribute("multiple","multiple"),t},createElementNS:function(e,n){return document.createElementNS(Ft[e],n)},createTextNode:function(e){return document.createTextNode(e)},createComment:function(e){return document.createComment(e)},insertBefore:function(e,n,t){e.insertBefore(n,t)},removeChild:function(e,n){e.removeChild(n)},appendChild:function(e,n){e.appendChild(n)},parentNode:function(e){return e.parentNode},nextSibling:function(e){return e.nextSibling},tagName:function(e){return e.tagName},setTextContent:function(e,n){e.textContent=n},setStyleScope:function(e,n){e.setAttribute(n,"")}}),Xt={create:function(e,n){$t(n)},update:function(e,n){e.data.ref!==n.data.ref&&($t(e,!0),$t(n))},destroy:function(e){$t(e,!0)}};function $t(e,n){var t=e.data.ref;if(a(t)){var i=e.context,r=e.componentInstance||e.elm,o=i.$refs;n?Array.isArray(o[t])?T(o[t],r):o[t]===r&&(o[t]=void 0):e.data.refInFor?Array.isArray(o[t])?o[t].indexOf(r)<0&&o[t].push(r):o[t]=[r]:o[t]=r}}var ei=new ye("",{},[]),ni=["create","activate","update","remove","destroy"];function ti(e,n){return e.key===n.key&&e.asyncFactory===n.asyncFactory&&(e.tag===n.tag&&e.isComment===n.isComment&&a(e.data)===a(n.data)&&function(e,n){if("input"!==e.tag)return!0;var t,i=a(t=e.data)&&a(t=t.attrs)&&t.type,r=a(t=n.data)&&a(t=t.attrs)&&t.type;return i===r||Kt(i)&&Kt(r)}(e,n)||o(e.isAsyncPlaceholder)&&r(n.asyncFactory.error))}function ii(e,n,t){var i,r,o={};for(i=n;i<=t;++i)a(r=e[i].key)&&(o[r]=i);return o}var ri={create:ai,update:ai,destroy:function(e){ai(e,ei)}};function ai(e,n){(e.data.directives||n.data.directives)&&function(e,n){var t,i,r,a=e===ei,o=n===ei,s=si(e.data.directives,e.context),l=si(n.data.directives,n.context),u=[],c=[];for(t in l)i=s[t],r=l[t],i?(r.oldValue=i.value,r.oldArg=i.arg,ui(r,"update",n,e),r.def&&r.def.componentUpdated&&c.push(r)):(ui(r,"bind",n,e),r.def&&r.def.inserted&&u.push(r));if(u.length){var d=function(){for(var t=0;t<u.length;t++)ui(u[t],"inserted",n,e)};a?un(n,"insert",d):d()}c.length&&un(n,"postpatch",(function(){for(var t=0;t<c.length;t++)ui(c[t],"componentUpdated",n,e)}));if(!a)for(t in s)l[t]||ui(s[t],"unbind",e,e,o)}(e,n)}var oi=Object.create(null);function si(e,n){var t,i,r=Object.create(null);if(!e)return r;for(t=0;t<e.length;t++)(i=e[t]).modifiers||(i.modifiers=oi),r[li(i)]=i,i.def=Ye(n.$options,"directives",i.name);return r}function li(e){return e.rawName||e.name+"."+Object.keys(e.modifiers||{}).join(".")}function ui(e,n,t,i,r){var a=e.def&&e.def[n];if(a)try{a(t.elm,e,t,i,r)}catch(i){We(i,t.context,"directive "+e.name+" "+n+" hook")}}var ci=[Xt,ri];function di(e,n){var t=n.componentOptions;if(!(a(t)&&!1===t.Ctor.options.inheritAttrs||r(e.data.attrs)&&r(n.data.attrs))){var i,o,s=n.elm,l=e.data.attrs||{},u=n.data.attrs||{};for(i in a(u.__ob__)&&(u=n.data.attrs=x({},u)),u)o=u[i],l[i]!==o&&pi(s,i,o,n.data.pre);for(i in(H||_)&&u.value!==l.value&&pi(s,"value",u.value),l)r(u[i])&&(Qt(i)?s.removeAttributeNS(Yt,Rt(i)):Ot(i)||s.removeAttribute(i))}}function pi(e,n,t,i){i||e.tagName.indexOf("-")>-1?gi(e,n,t):Ut(n)?qt(t)?e.removeAttribute(n):(t="allowfullscreen"===n&&"EMBED"===e.tagName?"true":n,e.setAttribute(n,t)):Ot(n)?e.setAttribute(n,function(e,n){return qt(n)||"false"===n?"false":"contenteditable"===e&&Et(n)?n:"true"}(n,t)):Qt(n)?qt(t)?e.removeAttributeNS(Yt,Rt(n)):e.setAttributeNS(Yt,n,t):gi(e,n,t)}function gi(e,n,t){if(qt(t))e.removeAttribute(n);else{if(H&&!K&&"TEXTAREA"===e.tagName&&"placeholder"===n&&""!==t&&!e.__ieph){var i=function(n){n.stopImmediatePropagation(),e.removeEventListener("input",i)};e.addEventListener("input",i),e.__ieph=!0}e.setAttribute(n,t)}}var yi={create:di,update:di};function mi(e,n){var t=n.elm,i=n.data,o=e.data;if(!(r(i.staticClass)&&r(i.class)&&(r(o)||r(o.staticClass)&&r(o.class)))){var s=Zt(n),l=t._transitionClasses;a(l)&&(s=Wt(s,Gt(l))),s!==t._prevClass&&(t.setAttribute("class",s),t._prevClass=s)}}var Mi,hi={create:mi,update:mi};function Ti(e,n,t){var i=Mi;return function r(){var a=n.apply(null,arguments);null!==a&&Ni(e,r,t,i)}}var Ii=Je&&!($&&Number($[1])<=53);function fi(e,n,t,i){if(Ii){var r=lt,a=n;n=a._wrapper=function(e){if(e.target===e.currentTarget||e.timeStamp>=r||e.timeStamp<=0||e.target.ownerDocument!==document)return a.apply(this,arguments)}}Mi.addEventListener(e,n,ne?{capture:t,passive:i}:t)}function Ni(e,n,t,i){(i||Mi).removeEventListener(e,n._wrapper||n,t)}function ji(e,n){if(!r(e.data.on)||!r(n.data.on)){var t=n.data.on||{},i=e.data.on||{};Mi=n.elm,function(e){if(a(e.__r)){var n=H?"change":"input";e[n]=[].concat(e.__r,e[n]||[]),delete e.__r}a(e.__c)&&(e.change=[].concat(e.__c,e.change||[]),delete e.__c)}(t),ln(t,i,fi,Ni,Ti,n.context),Mi=void 0}}var wi,Li={create:ji,update:ji};function Di(e,n){if(!r(e.data.domProps)||!r(n.data.domProps)){var t,i,o=n.elm,s=e.data.domProps||{},l=n.data.domProps||{};for(t in a(l.__ob__)&&(l=n.data.domProps=x({},l)),s)t in l||(o[t]="");for(t in l){if(i=l[t],"textContent"===t||"innerHTML"===t){if(n.children&&(n.children.length=0),i===s[t])continue;1===o.childNodes.length&&o.removeChild(o.childNodes[0])}if("value"===t&&"PROGRESS"!==o.tagName){o._value=i;var u=r(i)?"":String(i);zi(o,u)&&(o.value=u)}else if("innerHTML"===t&&Vt(o.tagName)&&r(o.innerHTML)){(wi=wi||document.createElement("div")).innerHTML="<svg>"+i+"</svg>";for(var c=wi.firstChild;o.firstChild;)o.removeChild(o.firstChild);for(;c.firstChild;)o.appendChild(c.firstChild)}else if(i!==s[t])try{o[t]=i}catch(e){}}}}function zi(e,n){return!e.composing&&("OPTION"===e.tagName||function(e,n){var t=!0;try{t=document.activeElement!==e}catch(e){}return t&&e.value!==n}(e,n)||function(e,n){var t=e.value,i=e._vModifiers;if(a(i)){if(i.number)return m(t)!==m(n);if(i.trim)return t.trim()!==n.trim()}return t!==n}(e,n))}var bi={create:Di,update:Di},ki=N((function(e){var n={},t=/:(.+)/;return e.split(/;(?![^(]*\))/g).forEach((function(e){if(e){var i=e.split(t);i.length>1&&(n[i[0].trim()]=i[1].trim())}})),n}));function xi(e){var n=Ci(e.style);return e.staticStyle?x(e.staticStyle,n):n}function Ci(e){return Array.isArray(e)?C(e):"string"==typeof e?ki(e):e}var Ai,vi=/^--/,Si=/\s*!important$/,Oi=function(e,n,t){if(vi.test(n))e.style.setProperty(n,t);else if(Si.test(t))e.style.setProperty(z(n),t.replace(Si,""),"important");else{var i=Ui(n);if(Array.isArray(t))for(var r=0,a=t.length;r<a;r++)e.style[i]=t[r];else e.style[i]=t}},Ei=["Webkit","Moz","ms"],Ui=N((function(e){if(Ai=Ai||document.createElement("div").style,"filter"!==(e=w(e))&&e in Ai)return e;for(var n=e.charAt(0).toUpperCase()+e.slice(1),t=0;t<Ei.length;t++){var i=Ei[t]+n;if(i in Ai)return i}}));function Yi(e,n){var t=n.data,i=e.data;if(!(r(t.staticStyle)&&r(t.style)&&r(i.staticStyle)&&r(i.style))){var o,s,l=n.elm,u=i.staticStyle,c=i.normalizedStyle||i.style||{},d=u||c,p=Ci(n.data.style)||{};n.data.normalizedStyle=a(p.__ob__)?x({},p):p;var g=function(e,n){var t,i={};if(n)for(var r=e;r.componentInstance;)(r=r.componentInstance._vnode)&&r.data&&(t=xi(r.data))&&x(i,t);(t=xi(e.data))&&x(i,t);for(var a=e;a=a.parent;)a.data&&(t=xi(a.data))&&x(i,t);return i}(n,!0);for(s in d)r(g[s])&&Oi(l,s,"");for(s in g)(o=g[s])!==d[s]&&Oi(l,s,null==o?"":o)}}var Qi={create:Yi,update:Yi},Ri=/\s+/;function qi(e,n){if(n&&(n=n.trim()))if(e.classList)n.indexOf(" ")>-1?n.split(Ri).forEach((function(n){return e.classList.add(n)})):e.classList.add(n);else{var t=" "+(e.getAttribute("class")||"")+" ";t.indexOf(" "+n+" ")<0&&e.setAttribute("class",(t+n).trim())}}function Zi(e,n){if(n&&(n=n.trim()))if(e.classList)n.indexOf(" ")>-1?n.split(Ri).forEach((function(n){return e.classList.remove(n)})):e.classList.remove(n),e.classList.length||e.removeAttribute("class");else{for(var t=" "+(e.getAttribute("class")||"")+" ",i=" "+n+" ";t.indexOf(i)>=0;)t=t.replace(i," ");(t=t.trim())?e.setAttribute("class",t):e.removeAttribute("class")}}function Pi(e){if(e){if("object"==typeof e){var n={};return!1!==e.css&&x(n,Wi(e.name||"v")),x(n,e),n}return"string"==typeof e?Wi(e):void 0}}var Wi=N((function(e){return{enterClass:e+"-enter",enterToClass:e+"-enter-to",enterActiveClass:e+"-enter-active",leaveClass:e+"-leave",leaveToClass:e+"-leave-to",leaveActiveClass:e+"-leave-active"}})),Gi=F&&!K,Fi="transition",Bi="transitionend",Vi="animation",Ji="animationend";Gi&&(void 0===window.ontransitionend&&void 0!==window.onwebkittransitionend&&(Fi="WebkitTransition",Bi="webkitTransitionEnd"),void 0===window.onanimationend&&void 0!==window.onwebkitanimationend&&(Vi="WebkitAnimation",Ji="webkitAnimationEnd"));var Hi=F?window.requestAnimationFrame?window.requestAnimationFrame.bind(window):setTimeout:function(e){return e()};function Ki(e){Hi((function(){Hi(e)}))}function _i(e,n){var t=e._transitionClasses||(e._transitionClasses=[]);t.indexOf(n)<0&&(t.push(n),qi(e,n))}function Xi(e,n){e._transitionClasses&&T(e._transitionClasses,n),Zi(e,n)}function $i(e,n,t){var i=nr(e,n),r=i.type,a=i.timeout,o=i.propCount;if(!r)return t();var s="transition"===r?Bi:Ji,l=0,u=function(){e.removeEventListener(s,c),t()},c=function(n){n.target===e&&++l>=o&&u()};setTimeout((function(){l<o&&u()}),a+1),e.addEventListener(s,c)}var er=/\b(transform|all)(,|$)/;function nr(e,n){var t,i=window.getComputedStyle(e),r=(i[Fi+"Delay"]||"").split(", "),a=(i[Fi+"Duration"]||"").split(", "),o=tr(r,a),s=(i[Vi+"Delay"]||"").split(", "),l=(i[Vi+"Duration"]||"").split(", "),u=tr(s,l),c=0,d=0;return"transition"===n?o>0&&(t="transition",c=o,d=a.length):"animation"===n?u>0&&(t="animation",c=u,d=l.length):d=(t=(c=Math.max(o,u))>0?o>u?"transition":"animation":null)?"transition"===t?a.length:l.length:0,{type:t,timeout:c,propCount:d,hasTransform:"transition"===t&&er.test(i[Fi+"Property"])}}function tr(e,n){for(;e.length<n.length;)e=e.concat(e);return Math.max.apply(null,n.map((function(n,t){return ir(n)+ir(e[t])})))}function ir(e){return 1e3*Number(e.slice(0,-1).replace(",","."))}function rr(e,n){var t=e.elm;a(t._leaveCb)&&(t._leaveCb.cancelled=!0,t._leaveCb());var i=Pi(e.data.transition);if(!r(i)&&!a(t._enterCb)&&1===t.nodeType){for(var o=i.css,s=i.type,u=i.enterClass,c=i.enterToClass,d=i.enterActiveClass,p=i.appearClass,g=i.appearToClass,y=i.appearActiveClass,M=i.beforeEnter,h=i.enter,T=i.afterEnter,I=i.enterCancelled,f=i.beforeAppear,N=i.appear,j=i.afterAppear,w=i.appearCancelled,L=i.duration,D=_n,z=_n.$vnode;z&&z.parent;)D=z.context,z=z.parent;var b=!D._isMounted||!e.isRootInsert;if(!b||N||""===N){var k=b&&p?p:u,x=b&&y?y:d,C=b&&g?g:c,A=b&&f||M,v=b&&"function"==typeof N?N:h,S=b&&j||T,O=b&&w||I,E=m(l(L)?L.enter:L);0;var Y=!1!==o&&!K,Q=sr(v),R=t._enterCb=U((function(){Y&&(Xi(t,C),Xi(t,x)),R.cancelled?(Y&&Xi(t,k),O&&O(t)):S&&S(t),t._enterCb=null}));e.data.show||un(e,"insert",(function(){var n=t.parentNode,i=n&&n._pending&&n._pending[e.key];i&&i.tag===e.tag&&i.elm._leaveCb&&i.elm._leaveCb(),v&&v(t,R)})),A&&A(t),Y&&(_i(t,k),_i(t,x),Ki((function(){Xi(t,k),R.cancelled||(_i(t,C),Q||(or(E)?setTimeout(R,E):$i(t,s,R)))}))),e.data.show&&(n&&n(),v&&v(t,R)),Y||Q||R()}}}function ar(e,n){var t=e.elm;a(t._enterCb)&&(t._enterCb.cancelled=!0,t._enterCb());var i=Pi(e.data.transition);if(r(i)||1!==t.nodeType)return n();if(!a(t._leaveCb)){var o=i.css,s=i.type,u=i.leaveClass,c=i.leaveToClass,d=i.leaveActiveClass,p=i.beforeLeave,g=i.leave,y=i.afterLeave,M=i.leaveCancelled,h=i.delayLeave,T=i.duration,I=!1!==o&&!K,f=sr(g),N=m(l(T)?T.leave:T);0;var j=t._leaveCb=U((function(){t.parentNode&&t.parentNode._pending&&(t.parentNode._pending[e.key]=null),I&&(Xi(t,c),Xi(t,d)),j.cancelled?(I&&Xi(t,u),M&&M(t)):(n(),y&&y(t)),t._leaveCb=null}));h?h(w):w()}function w(){j.cancelled||(!e.data.show&&t.parentNode&&((t.parentNode._pending||(t.parentNode._pending={}))[e.key]=e),p&&p(t),I&&(_i(t,u),_i(t,d),Ki((function(){Xi(t,u),j.cancelled||(_i(t,c),f||(or(N)?setTimeout(j,N):$i(t,s,j)))}))),g&&g(t,j),I||f||j())}}function or(e){return"number"==typeof e&&!isNaN(e)}function sr(e){if(r(e))return!1;var n=e.fns;return a(n)?sr(Array.isArray(n)?n[0]:n):(e._length||e.length)>1}function lr(e,n){!0!==n.data.show&&rr(n)}var ur=function(e){var n,t,i={},l=e.modules,u=e.nodeOps;for(n=0;n<ni.length;++n)for(i[ni[n]]=[],t=0;t<l.length;++t)a(l[t][ni[n]])&&i[ni[n]].push(l[t][ni[n]]);function c(e){var n=u.parentNode(e);a(n)&&u.removeChild(n,e)}function d(e,n,t,r,s,l,c){if(a(e.elm)&&a(l)&&(e=l[c]=Te(e)),e.isRootInsert=!s,!function(e,n,t,r){var s=e.data;if(a(s)){var l=a(e.componentInstance)&&s.keepAlive;if(a(s=s.hook)&&a(s=s.init)&&s(e,!1),a(e.componentInstance))return p(e,n),g(t,e.elm,r),o(l)&&function(e,n,t,r){var o,s=e;for(;s.componentInstance;)if(s=s.componentInstance._vnode,a(o=s.data)&&a(o=o.transition)){for(o=0;o<i.activate.length;++o)i.activate[o](ei,s);n.push(s);break}g(t,e.elm,r)}(e,n,t,r),!0}}(e,n,t,r)){var d=e.data,m=e.children,M=e.tag;a(M)?(e.elm=e.ns?u.createElementNS(e.ns,M):u.createElement(M,e),T(e),y(e,m,n),a(d)&&h(e,n),g(t,e.elm,r)):o(e.isComment)?(e.elm=u.createComment(e.text),g(t,e.elm,r)):(e.elm=u.createTextNode(e.text),g(t,e.elm,r))}}function p(e,n){a(e.data.pendingInsert)&&(n.push.apply(n,e.data.pendingInsert),e.data.pendingInsert=null),e.elm=e.componentInstance.$el,m(e)?(h(e,n),T(e)):($t(e),n.push(e))}function g(e,n,t){a(e)&&(a(t)?u.parentNode(t)===e&&u.insertBefore(e,n,t):u.appendChild(e,n))}function y(e,n,t){if(Array.isArray(n)){0;for(var i=0;i<n.length;++i)d(n[i],t,e.elm,null,!0,n,i)}else s(e.text)&&u.appendChild(e.elm,u.createTextNode(String(e.text)))}function m(e){for(;e.componentInstance;)e=e.componentInstance._vnode;return a(e.tag)}function h(e,t){for(var r=0;r<i.create.length;++r)i.create[r](ei,e);a(n=e.data.hook)&&(a(n.create)&&n.create(ei,e),a(n.insert)&&t.push(e))}function T(e){var n;if(a(n=e.fnScopeId))u.setStyleScope(e.elm,n);else for(var t=e;t;)a(n=t.context)&&a(n=n.$options._scopeId)&&u.setStyleScope(e.elm,n),t=t.parent;a(n=_n)&&n!==e.context&&n!==e.fnContext&&a(n=n.$options._scopeId)&&u.setStyleScope(e.elm,n)}function I(e,n,t,i,r,a){for(;i<=r;++i)d(t[i],a,e,n,!1,t,i)}function f(e){var n,t,r=e.data;if(a(r))for(a(n=r.hook)&&a(n=n.destroy)&&n(e),n=0;n<i.destroy.length;++n)i.destroy[n](e);if(a(n=e.children))for(t=0;t<e.children.length;++t)f(e.children[t])}function N(e,n,t){for(;n<=t;++n){var i=e[n];a(i)&&(a(i.tag)?(j(i),f(i)):c(i.elm))}}function j(e,n){if(a(n)||a(e.data)){var t,r=i.remove.length+1;for(a(n)?n.listeners+=r:n=function(e,n){function t(){0==--t.listeners&&c(e)}return t.listeners=n,t}(e.elm,r),a(t=e.componentInstance)&&a(t=t._vnode)&&a(t.data)&&j(t,n),t=0;t<i.remove.length;++t)i.remove[t](e,n);a(t=e.data.hook)&&a(t=t.remove)?t(e,n):n()}else c(e.elm)}function w(e,n,t,i){for(var r=t;r<i;r++){var o=n[r];if(a(o)&&ti(e,o))return r}}function L(e,n,t,s,l,c){if(e!==n){a(n.elm)&&a(s)&&(n=s[l]=Te(n));var p=n.elm=e.elm;if(o(e.isAsyncPlaceholder))a(n.asyncFactory.resolved)?b(e.elm,n,t):n.isAsyncPlaceholder=!0;else if(o(n.isStatic)&&o(e.isStatic)&&n.key===e.key&&(o(n.isCloned)||o(n.isOnce)))n.componentInstance=e.componentInstance;else{var g,y=n.data;a(y)&&a(g=y.hook)&&a(g=g.prepatch)&&g(e,n);var M=e.children,h=n.children;if(a(y)&&m(n)){for(g=0;g<i.update.length;++g)i.update[g](e,n);a(g=y.hook)&&a(g=g.update)&&g(e,n)}r(n.text)?a(M)&&a(h)?M!==h&&function(e,n,t,i,o){var s,l,c,p=0,g=0,y=n.length-1,m=n[0],M=n[y],h=t.length-1,T=t[0],f=t[h],j=!o;for(0;p<=y&&g<=h;)r(m)?m=n[++p]:r(M)?M=n[--y]:ti(m,T)?(L(m,T,i,t,g),m=n[++p],T=t[++g]):ti(M,f)?(L(M,f,i,t,h),M=n[--y],f=t[--h]):ti(m,f)?(L(m,f,i,t,h),j&&u.insertBefore(e,m.elm,u.nextSibling(M.elm)),m=n[++p],f=t[--h]):ti(M,T)?(L(M,T,i,t,g),j&&u.insertBefore(e,M.elm,m.elm),M=n[--y],T=t[++g]):(r(s)&&(s=ii(n,p,y)),r(l=a(T.key)?s[T.key]:w(T,n,p,y))?d(T,i,e,m.elm,!1,t,g):ti(c=n[l],T)?(L(c,T,i,t,g),n[l]=void 0,j&&u.insertBefore(e,c.elm,m.elm)):d(T,i,e,m.elm,!1,t,g),T=t[++g]);p>y?I(e,r(t[h+1])?null:t[h+1].elm,t,g,h,i):g>h&&N(n,p,y)}(p,M,h,t,c):a(h)?(a(e.text)&&u.setTextContent(p,""),I(p,null,h,0,h.length-1,t)):a(M)?N(M,0,M.length-1):a(e.text)&&u.setTextContent(p,""):e.text!==n.text&&u.setTextContent(p,n.text),a(y)&&a(g=y.hook)&&a(g=g.postpatch)&&g(e,n)}}}function D(e,n,t){if(o(t)&&a(e.parent))e.parent.data.pendingInsert=n;else for(var i=0;i<n.length;++i)n[i].data.hook.insert(n[i])}var z=M("attrs,class,staticClass,staticStyle,key");function b(e,n,t,i){var r,s=n.tag,l=n.data,u=n.children;if(i=i||l&&l.pre,n.elm=e,o(n.isComment)&&a(n.asyncFactory))return n.isAsyncPlaceholder=!0,!0;if(a(l)&&(a(r=l.hook)&&a(r=r.init)&&r(n,!0),a(r=n.componentInstance)))return p(n,t),!0;if(a(s)){if(a(u))if(e.hasChildNodes())if(a(r=l)&&a(r=r.domProps)&&a(r=r.innerHTML)){if(r!==e.innerHTML)return!1}else{for(var c=!0,d=e.firstChild,g=0;g<u.length;g++){if(!d||!b(d,u[g],t,i)){c=!1;break}d=d.nextSibling}if(!c||d)return!1}else y(n,u,t);if(a(l)){var m=!1;for(var M in l)if(!z(M)){m=!0,h(n,t);break}!m&&l.class&&an(l.class)}}else e.data!==n.text&&(e.data=n.text);return!0}return function(e,n,t,s){if(!r(n)){var l,c=!1,p=[];if(r(e))c=!0,d(n,p);else{var g=a(e.nodeType);if(!g&&ti(e,n))L(e,n,p,null,null,s);else{if(g){if(1===e.nodeType&&e.hasAttribute("data-server-rendered")&&(e.removeAttribute("data-server-rendered"),t=!0),o(t)&&b(e,n,p))return D(n,p,!0),e;l=e,e=new ye(u.tagName(l).toLowerCase(),{},[],void 0,l)}var y=e.elm,M=u.parentNode(y);if(d(n,p,y._leaveCb?null:M,u.nextSibling(y)),a(n.parent))for(var h=n.parent,T=m(n);h;){for(var I=0;I<i.destroy.length;++I)i.destroy[I](h);if(h.elm=n.elm,T){for(var j=0;j<i.create.length;++j)i.create[j](ei,h);var w=h.data.hook.insert;if(w.merged)for(var z=1;z<w.fns.length;z++)w.fns[z]()}else $t(h);h=h.parent}a(M)?N([e],0,0):a(e.tag)&&f(e)}}return D(n,p,c),n.elm}a(e)&&f(e)}}({nodeOps:_t,modules:[yi,hi,Li,bi,Qi,F?{create:lr,activate:lr,remove:function(e,n){!0!==e.data.show?ar(e,n):n()}}:{}].concat(ci)});K&&document.addEventListener("selectionchange",(function(){var e=document.activeElement;e&&e.vmodel&&hr(e,"input")}));var cr={inserted:function(e,n,t,i){"select"===t.tag?(i.elm&&!i.elm._vOptions?un(t,"postpatch",(function(){cr.componentUpdated(e,n,t)})):dr(e,n,t.context),e._vOptions=[].map.call(e.options,yr)):("textarea"===t.tag||Kt(e.type))&&(e._vModifiers=n.modifiers,n.modifiers.lazy||(e.addEventListener("compositionstart",mr),e.addEventListener("compositionend",Mr),e.addEventListener("change",Mr),K&&(e.vmodel=!0)))},componentUpdated:function(e,n,t){if("select"===t.tag){dr(e,n,t.context);var i=e._vOptions,r=e._vOptions=[].map.call(e.options,yr);if(r.some((function(e,n){return!O(e,i[n])})))(e.multiple?n.value.some((function(e){return gr(e,r)})):n.value!==n.oldValue&&gr(n.value,r))&&hr(e,"change")}}};function dr(e,n,t){pr(e,n,t),(H||_)&&setTimeout((function(){pr(e,n,t)}),0)}function pr(e,n,t){var i=n.value,r=e.multiple;if(!r||Array.isArray(i)){for(var a,o,s=0,l=e.options.length;s<l;s++)if(o=e.options[s],r)a=E(i,yr(o))>-1,o.selected!==a&&(o.selected=a);else if(O(yr(o),i))return void(e.selectedIndex!==s&&(e.selectedIndex=s));r||(e.selectedIndex=-1)}}function gr(e,n){return n.every((function(n){return!O(n,e)}))}function yr(e){return"_value"in e?e._value:e.value}function mr(e){e.target.composing=!0}function Mr(e){e.target.composing&&(e.target.composing=!1,hr(e.target,"input"))}function hr(e,n){var t=document.createEvent("HTMLEvents");t.initEvent(n,!0,!0),e.dispatchEvent(t)}function Tr(e){return!e.componentInstance||e.data&&e.data.transition?e:Tr(e.componentInstance._vnode)}var Ir={model:cr,show:{bind:function(e,n,t){var i=n.value,r=(t=Tr(t)).data&&t.data.transition,a=e.__vOriginalDisplay="none"===e.style.display?"":e.style.display;i&&r?(t.data.show=!0,rr(t,(function(){e.style.display=a}))):e.style.display=i?a:"none"},update:function(e,n,t){var i=n.value;!i!=!n.oldValue&&((t=Tr(t)).data&&t.data.transition?(t.data.show=!0,i?rr(t,(function(){e.style.display=e.__vOriginalDisplay})):ar(t,(function(){e.style.display="none"}))):e.style.display=i?e.__vOriginalDisplay:"none")},unbind:function(e,n,t,i,r){r||(e.style.display=e.__vOriginalDisplay)}}},fr={name:String,appear:Boolean,css:Boolean,mode:String,type:String,enterClass:String,leaveClass:String,enterToClass:String,leaveToClass:String,enterActiveClass:String,leaveActiveClass:String,appearClass:String,appearActiveClass:String,appearToClass:String,duration:[Number,String,Object]};function Nr(e){var n=e&&e.componentOptions;return n&&n.Ctor.options.abstract?Nr(Bn(n.children)):e}function jr(e){var n={},t=e.$options;for(var i in t.propsData)n[i]=e[i];var r=t._parentListeners;for(var a in r)n[w(a)]=r[a];return n}function wr(e,n){if(/\d-keep-alive$/.test(n.tag))return e("keep-alive",{props:n.componentOptions.propsData})}var Lr=function(e){return e.tag||Mn(e)},Dr=function(e){return"show"===e.name},zr={name:"transition",props:fr,abstract:!0,render:function(e){var n=this,t=this.$slots.default;if(t&&(t=t.filter(Lr)).length){0;var i=this.mode;0;var r=t[0];if(function(e){for(;e=e.parent;)if(e.data.transition)return!0}(this.$vnode))return r;var a=Nr(r);if(!a)return r;if(this._leaving)return wr(e,r);var o="__transition-"+this._uid+"-";a.key=null==a.key?a.isComment?o+"comment":o+a.tag:s(a.key)?0===String(a.key).indexOf(o)?a.key:o+a.key:a.key;var l=(a.data||(a.data={})).transition=jr(this),u=this._vnode,c=Nr(u);if(a.data.directives&&a.data.directives.some(Dr)&&(a.data.show=!0),c&&c.data&&!function(e,n){return n.key===e.key&&n.tag===e.tag}(a,c)&&!Mn(c)&&(!c.componentInstance||!c.componentInstance._vnode.isComment)){var d=c.data.transition=x({},l);if("out-in"===i)return this._leaving=!0,un(d,"afterLeave",(function(){n._leaving=!1,n.$forceUpdate()})),wr(e,r);if("in-out"===i){if(Mn(a))return u;var p,g=function(){p()};un(l,"afterEnter",g),un(l,"enterCancelled",g),un(d,"delayLeave",(function(e){p=e}))}}return r}}},br=x({tag:String,moveClass:String},fr);function kr(e){e.elm._moveCb&&e.elm._moveCb(),e.elm._enterCb&&e.elm._enterCb()}function xr(e){e.data.newPos=e.elm.getBoundingClientRect()}function Cr(e){var n=e.data.pos,t=e.data.newPos,i=n.left-t.left,r=n.top-t.top;if(i||r){e.data.moved=!0;var a=e.elm.style;a.transform=a.WebkitTransform="translate("+i+"px,"+r+"px)",a.transitionDuration="0s"}}delete br.mode;var Ar={Transition:zr,TransitionGroup:{props:br,beforeMount:function(){var e=this,n=this._update;this._update=function(t,i){var r=Xn(e);e.__patch__(e._vnode,e.kept,!1,!0),e._vnode=e.kept,r(),n.call(e,t,i)}},render:function(e){for(var n=this.tag||this.$vnode.data.tag||"span",t=Object.create(null),i=this.prevChildren=this.children,r=this.$slots.default||[],a=this.children=[],o=jr(this),s=0;s<r.length;s++){var l=r[s];if(l.tag)if(null!=l.key&&0!==String(l.key).indexOf("__vlist"))a.push(l),t[l.key]=l,(l.data||(l.data={})).transition=o;else;}if(i){for(var u=[],c=[],d=0;d<i.length;d++){var p=i[d];p.data.transition=o,p.data.pos=p.elm.getBoundingClientRect(),t[p.key]?u.push(p):c.push(p)}this.kept=e(n,null,u),this.removed=c}return e(n,null,a)},updated:function(){var e=this.prevChildren,n=this.moveClass||(this.name||"v")+"-move";e.length&&this.hasMove(e[0].elm,n)&&(e.forEach(kr),e.forEach(xr),e.forEach(Cr),this._reflow=document.body.offsetHeight,e.forEach((function(e){if(e.data.moved){var t=e.elm,i=t.style;_i(t,n),i.transform=i.WebkitTransform=i.transitionDuration="",t.addEventListener(Bi,t._moveCb=function e(i){i&&i.target!==t||i&&!/transform$/.test(i.propertyName)||(t.removeEventListener(Bi,e),t._moveCb=null,Xi(t,n))})}})))},methods:{hasMove:function(e,n){if(!Gi)return!1;if(this._hasMove)return this._hasMove;var t=e.cloneNode();e._transitionClasses&&e._transitionClasses.forEach((function(e){Zi(t,e)})),qi(t,n),t.style.display="none",this.$el.appendChild(t);var i=nr(t);return this.$el.removeChild(t),this._hasMove=i.hasTransform}}}};Lt.config.mustUseProp=function(e,n,t){return"value"===t&&St(e)&&"button"!==n||"selected"===t&&"option"===e||"checked"===t&&"input"===e||"muted"===t&&"video"===e},Lt.config.isReservedTag=Jt,Lt.config.isReservedAttr=vt,Lt.config.getTagNamespace=function(e){return Vt(e)?"svg":"math"===e?"math":void 0},Lt.config.isUnknownElement=function(e){if(!F)return!0;if(Jt(e))return!1;if(e=e.toLowerCase(),null!=Ht[e])return Ht[e];var n=document.createElement(e);return e.indexOf("-")>-1?Ht[e]=n.constructor===window.HTMLUnknownElement||n.constructor===window.HTMLElement:Ht[e]=/HTMLUnknownElement/.test(n.toString())},x(Lt.options.directives,Ir),x(Lt.options.components,Ar),Lt.prototype.__patch__=F?ur:A,Lt.prototype.$mount=function(e,n){return function(e,n,t){var i;return e.$el=n,e.$options.render||(e.$options.render=Me),nt(e,"beforeMount"),i=function(){e._update(e._render(),t)},new gt(e,i,A,{before:function(){e._isMounted&&!e._isDestroyed&&nt(e,"beforeUpdate")}},!0),t=!1,null==e.$vnode&&(e._isMounted=!0,nt(e,"mounted")),e}(this,e=e&&F?function(e){if("string"==typeof e){var n=document.querySelector(e);return n||document.createElement("div")}return e}(e):void 0,n)},F&&setTimeout((function(){R.devtools&&re&&re.emit("init",Lt)}),0),n.a=Lt},function(e,n){e.exports=function(e){return"function"==typeof e}},function(e,n,t){var i=t(0),r=t(69),a=t(11),o=t(70),s=t(100),l=t(143),u=r("wks"),c=i.Symbol,d=c&&c.for,p=l?c:c&&c.withoutSetter||o;e.exports=function(e){if(!a(u,e)||!s&&"string"!=typeof u[e]){var n="Symbol."+e;s&&a(c,e)?u[e]=c[e]:u[e]=l&&d?d(n):p(n)}return u[e]}},function(e,n,t){var i=t(5);e.exports=function(e){return"object"==typeof e?null!==e:i(e)}},function(e,n,t){var i=t(3);e.exports=!i((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]}))},function(e,n,t){var i=t(109),r=t(15),a=t(240);i||r(Object.prototype,"toString",a,{unsafe:!0})},function(e,n,t){var i=t(0),r=t(7),a=i.String,o=i.TypeError;e.exports=function(e){if(r(e))return e;throw o(a(e)+" is not an object")}},function(e,n,t){var i=t(2),r=t(16),a=i({}.hasOwnProperty);e.exports=Object.hasOwn||function(e,n){return a(r(e),n)}},function(e,n){var t=Function.prototype.call;e.exports=t.bind?t.bind(t):function(){return t.apply(t,arguments)}},function(e,n,t){var i=t(0),r=t(68),a=i.String;e.exports=function(e){if("Symbol"===r(e))throw TypeError("Cannot convert a Symbol value to a string");return a(e)}},function(e,n,t){var i=t(0),r=t(8),a=t(145),o=t(144),s=t(10),l=t(72),u=i.TypeError,c=Object.defineProperty,d=Object.getOwnPropertyDescriptor;n.f=r?o?function(e,n,t){if(s(e),n=l(n),s(t),"function"==typeof e&&"prototype"===n&&"value"in t&&"writable"in t&&!t.writable){var i=d(e,n);i&&i.writable&&(e[n]=t.value,t={configurable:"configurable"in t?t.configurable:i.configurable,enumerable:"enumerable"in t?t.enumerable:i.enumerable,writable:!1})}return c(e,n,t)}:c:function(e,n,t){if(s(e),n=l(n),s(t),a)try{return c(e,n,t)}catch(e){}if("get"in t||"set"in t)throw u("Accessors not supported");return"value"in t&&(e[n]=t.value),e}},function(e,n,t){var i=t(0),r=t(5),a=t(11),o=t(25),s=t(99),l=t(76),u=t(41),c=t(93).CONFIGURABLE,d=u.get,p=u.enforce,g=String(String).split("String");(e.exports=function(e,n,t,l){var u,d=!!l&&!!l.unsafe,y=!!l&&!!l.enumerable,m=!!l&&!!l.noTargetGet,M=l&&void 0!==l.name?l.name:n;r(t)&&("Symbol("===String(M).slice(0,7)&&(M="["+String(M).replace(/^Symbol\(([^)]*)\)/,"$1")+"]"),(!a(t,"name")||c&&t.name!==M)&&o(t,"name",M),(u=p(t)).source||(u.source=g.join("string"==typeof M?M:""))),e!==i?(d?!m&&e[n]&&(y=!0):delete e[n],y?e[n]=t:o(e,n,t)):y?e[n]=t:s(n,t)})(Function.prototype,"toString",(function(){return r(this)&&d(this).source||l(this)}))},function(e,n,t){var i=t(0),r=t(20),a=i.Object;e.exports=function(e){return a(r(e))}},function(e,n,t){var i=t(0),r=t(5),a=function(e){return r(e)?e:void 0};e.exports=function(e,n){return arguments.length<2?a(i[e]):i[e]&&i[e][n]}},function(e,n,t){var i=t(54),r=t(20);e.exports=function(e){return i(r(e))}},function(e,n,t){"use strict";function i(e,n,t,i,r,a,o,s){var l,u="function"==typeof e?e.options:e;if(n&&(u.render=n,u.staticRenderFns=t,u._compiled=!0),i&&(u.functional=!0),a&&(u._scopeId="data-v-"+a),o?(l=function(e){(e=e||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(e=__VUE_SSR_CONTEXT__),r&&r.call(this,e),e&&e._registeredComponents&&e._registeredComponents.add(o)},u._ssrRegister=l):r&&(l=s?function(){r.call(this,(u.functional?this.parent:this).$root.$options.shadowRoot)}:r),l)if(u.functional){u._injectStyles=l;var c=u.render;u.render=function(e,n){return l.call(n),c(e,n)}}else{var d=u.beforeCreate;u.beforeCreate=d?[].concat(d,l):[l]}return{exports:e,options:u}}t.d(n,"a",(function(){return i}))},function(e,n,t){var i=t(0).TypeError;e.exports=function(e){if(null==e)throw i("Can't call method on "+e);return e}},function(e,n){e.exports=!1},function(e,n,t){var i=t(49);e.exports=function(e){return i(e.length)}},function(e,n,t){"use strict";var i=t(162).charAt,r=t(13),a=t(41),o=t(149),s=a.set,l=a.getterFor("String Iterator");o(String,"String",(function(e){s(this,{type:"String Iterator",string:r(e),index:0})}),(function(){var e,n=l(this),t=n.string,r=n.index;return r>=t.length?{value:void 0,done:!0}:(e=i(t,r),n.index+=e.length,{value:e,done:!1})}))},function(e,n){var t=Array.isArray;e.exports=t},function(e,n,t){var i=t(8),r=t(14),a=t(42);e.exports=i?function(e,n,t){return r.f(e,n,a(1,t))}:function(e,n,t){return e[n]=t,e}},function(e,n,t){var i=t(8),r=t(12),a=t(95),o=t(42),s=t(18),l=t(72),u=t(11),c=t(145),d=Object.getOwnPropertyDescriptor;n.f=i?d:function(e,n){if(e=s(e),n=l(n),c)try{return d(e,n)}catch(e){}if(u(e,n))return o(!r(a.f,e,n),e[n])}},function(e,n,t){var i=t(179),r="object"==typeof self&&self&&self.Object===Object&&self,a=i||r||Function("return this")();e.exports=a},function(e,n,t){var i=t(0),r=t(163),a=t(164),o=t(136),s=t(25),l=t(6),u=l("iterator"),c=l("toStringTag"),d=o.values,p=function(e,n){if(e){if(e[u]!==d)try{s(e,u,d)}catch(n){e[u]=d}if(e[c]||s(e,c,n),r[n])for(var t in o)if(e[t]!==o[t])try{s(e,t,o[t])}catch(n){e[t]=o[t]}}};for(var g in r)p(i[g]&&i[g].prototype,g);p(a,"DOMTokenList")},function(e,n,t){var i,r=t(10),a=t(101),o=t(104),s=t(55),l=t(148),u=t(71),c=t(75),d=c("IE_PROTO"),p=function(){},g=function(e){return"<script>"+e+"<\/script>"},y=function(e){e.write(g("")),e.close();var n=e.parentWindow.Object;return e=null,n},m=function(){try{i=new ActiveXObject("htmlfile")}catch(e){}var e,n;m="undefined"!=typeof document?document.domain&&i?y(i):((n=u("iframe")).style.display="none",l.appendChild(n),n.src=String("javascript:"),(e=n.contentWindow.document).open(),e.write(g("document.F=Object")),e.close(),e.F):y(i);for(var t=o.length;t--;)delete m.prototype[o[t]];return m()};s[d]=!0,e.exports=Object.create||function(e,n){var t;return null!==e?(p.prototype=r(e),t=new p,p.prototype=null,t[d]=e):t=m(),void 0===n?t:a.f(t,n)}},function(e,n){var t=Function.prototype,i=t.apply,r=t.bind,a=t.call;e.exports="object"==typeof Reflect&&Reflect.apply||(r?a.bind(i):function(){return a.apply(i,arguments)})},function(e,n,t){var i=t(2),r=i({}.toString),a=i("".slice);e.exports=function(e){return a(r(e),8,-1)}},function(e,n,t){var i=t(17);e.exports=i("navigator","userAgent")||""},function(e,n,t){var i=t(0),r=t(5),a=t(74),o=i.TypeError;e.exports=function(e){if(r(e))return e;throw o(a(e)+" is not a function")}},function(e,n,t){"use strict";var i=t(1),r=t(82);i({target:"RegExp",proto:!0,forced:/./.exec!==r},{exec:r})},function(e,n,t){var i=t(2);e.exports=i({}.isPrototypeOf)},function(e,n,t){var i=t(15),r=t(257),a=Error.prototype;a.toString!==r&&i(a,"toString",r)},function(e,n,t){var i=t(1),r=t(0),a=t(30),o=t(253),s=r.WebAssembly,l=7!==Error("e",{cause:7}).cause,u=function(e,n){var t={};t[e]=o(e,n,l),i({global:!0,forced:l},t)},c=function(e,n){if(s&&s[e]){var t={};t[e]=o("WebAssembly."+e,n,l),i({target:"WebAssembly",stat:!0,forced:l},t)}};u("Error",(function(e){return function(n){return a(e,this,arguments)}})),u("EvalError",(function(e){return function(n){return a(e,this,arguments)}})),u("RangeError",(function(e){return function(n){return a(e,this,arguments)}})),u("ReferenceError",(function(e){return function(n){return a(e,this,arguments)}})),u("SyntaxError",(function(e){return function(n){return a(e,this,arguments)}})),u("TypeError",(function(e){return function(n){return a(e,this,arguments)}})),u("URIError",(function(e){return function(n){return a(e,this,arguments)}})),c("CompileError",(function(e){return function(n){return a(e,this,arguments)}})),c("LinkError",(function(e){return function(n){return a(e,this,arguments)}})),c("RuntimeError",(function(e){return function(n){return a(e,this,arguments)}}))},function(e,n,t){var i=t(278),r=t(281);e.exports=function(e,n){var t=r(e,n);return i(t)?t:void 0}},function(e,n,t){"use strict";var i=t(1),r=t(48).filter;i({target:"Array",proto:!0,forced:!t(80)("filter")},{filter:function(e){return r(this,e,arguments.length>1?arguments[1]:void 0)}})},function(e,n,t){"use strict";var i=t(3);e.exports=function(e,n){var t=[][e];return!!t&&i((function(){t.call(null,n||function(){throw 1},1)}))}},function(e,n,t){var i,r,a,o=t(225),s=t(0),l=t(2),u=t(7),c=t(25),d=t(11),p=t(98),g=t(75),y=t(55),m=s.TypeError,M=s.WeakMap;if(o||p.state){var h=p.state||(p.state=new M),T=l(h.get),I=l(h.has),f=l(h.set);i=function(e,n){if(I(h,e))throw new m("Object already initialized");return n.facade=e,f(h,e,n),n},r=function(e){return T(h,e)||{}},a=function(e){return I(h,e)}}else{var N=g("state");y[N]=!0,i=function(e,n){if(d(e,N))throw new m("Object already initialized");return n.facade=e,c(e,N,n),n},r=function(e){return d(e,N)?e[N]:{}},a=function(e){return d(e,N)}}e.exports={set:i,get:r,has:a,enforce:function(e){return a(e)?r(e):i(e,{})},getterFor:function(e){return function(n){var t;if(!u(n)||(t=r(n)).type!==e)throw m("Incompatible receiver, "+e+" required");return t}}}},function(e,n){e.exports=function(e,n){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:n}}},function(e,n){e.exports=function(e){return null!=e&&"object"==typeof e}},function(e,n,t){var i,r,a=t(0),o=t(32),s=a.process,l=a.Deno,u=s&&s.versions||l&&l.version,c=u&&u.v8;c&&(r=(i=c.split("."))[0]>0&&i[0]<4?1:+(i[0]+i[1])),!r&&o&&(!(i=o.match(/Edge\/(\d+)/))||i[1]>=74)&&(i=o.match(/Chrome\/(\d+)/))&&(r=+i[1]),e.exports=r},function(e,n,t){var i=t(33);e.exports=function(e,n){var t=e[n];return null==t?void 0:i(t)}},function(e,n){var t=Math.ceil,i=Math.floor;e.exports=function(e){var n=+e;return n!=n||0===n?0:(n>0?i:t)(n)}},function(e,n,t){var i=t(2),r=t(33),a=i(i.bind);e.exports=function(e,n){return r(e),void 0===n?e:a?a(e,n):function(){return e.apply(n,arguments)}}},function(e,n,t){var i=t(47),r=t(2),a=t(54),o=t(16),s=t(22),l=t(138),u=r([].push),c=function(e){var n=1==e,t=2==e,r=3==e,c=4==e,d=6==e,p=7==e,g=5==e||d;return function(y,m,M,h){for(var T,I,f=o(y),N=a(f),j=i(m,M),w=s(N),L=0,D=h||l,z=n?D(y,w):t||p?D(y,0):void 0;w>L;L++)if((g||L in N)&&(I=j(T=N[L],L,f),e))if(n)z[L]=I;else if(I)switch(e){case 3:return!0;case 5:return T;case 6:return L;case 2:u(z,T)}else switch(e){case 4:return!1;case 7:u(z,T)}return d?-1:r||c?c:z}};e.exports={forEach:c(0),map:c(1),filter:c(2),some:c(3),every:c(4),find:c(5),findIndex:c(6),filterReject:c(7)}},function(e,n,t){var i=t(46),r=Math.min;e.exports=function(e){return e>0?r(i(e),9007199254740991):0}},function(e,n,t){var i=t(14).f,r=t(11),a=t(6)("toStringTag");e.exports=function(e,n,t){e&&!t&&(e=e.prototype),e&&!r(e,a)&&i(e,a,{configurable:!0,value:n})}},function(e,n,t){var i=t(31);e.exports=Array.isArray||function(e){return"Array"==i(e)}},function(e,n,t){var i=t(62),r=t(263),a=t(264),o=i?i.toStringTag:void 0;e.exports=function(e){return null==e?void 0===e?"[object Undefined]":"[object Null]":o&&o in Object(e)?r(e):a(e)}},function(e,n,t){"use strict";t.d(n,"a",(function(){return a}));t(132);var i=t(63);t(61),t(81),t(9),t(115),t(23),t(28),t(173);var r=t(89);t(37),t(36);function a(e){return function(e){if(Array.isArray(e))return Object(i.a)(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||Object(r.a)(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}},function(e,n,t){var i=t(0),r=t(2),a=t(3),o=t(31),s=i.Object,l=r("".split);e.exports=a((function(){return!s("z").propertyIsEnumerable(0)}))?function(e){return"String"==o(e)?l(e,""):s(e)}:s},function(e,n){e.exports={}},function(e,n){e.exports={}},function(e,n,t){var i=t(147),r=t(104).concat("length","prototype");n.f=Object.getOwnPropertyNames||function(e){return i(e,r)}},function(e,n,t){var i=t(2),r=t(10),a=t(226);e.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var e,n=!1,t={};try{(e=i(Object.getOwnPropertyDescriptor(Object.prototype,"__proto__").set))(t,[]),n=t instanceof Array}catch(e){}return function(t,i){return r(t),a(i),n?e(t,i):t.__proto__=i,t}}():void 0)},function(e,n,t){var i=t(2);e.exports=i([].slice)},function(e,n,t){"use strict";var i=t(72),r=t(14),a=t(42);e.exports=function(e,n,t){var o=i(n);o in e?r.f(e,o,a(0,t)):e[o]=t}},function(e,n,t){"use strict";var i=t(1),r=t(0),a=t(17),o=t(30),s=t(12),l=t(2),u=t(21),c=t(8),d=t(100),p=t(3),g=t(11),y=t(51),m=t(5),M=t(7),h=t(35),T=t(73),I=t(10),f=t(16),N=t(18),j=t(72),w=t(13),L=t(42),D=t(29),z=t(67),b=t(57),k=t(170),x=t(106),C=t(26),A=t(14),v=t(101),S=t(95),O=t(59),E=t(15),U=t(69),Y=t(75),Q=t(55),R=t(70),q=t(6),Z=t(171),P=t(172),W=t(50),G=t(41),F=t(48).forEach,B=Y("hidden"),V=q("toPrimitive"),J=G.set,H=G.getterFor("Symbol"),K=Object.prototype,_=r.Symbol,X=_&&_.prototype,$=r.TypeError,ee=r.QObject,ne=a("JSON","stringify"),te=C.f,ie=A.f,re=k.f,ae=S.f,oe=l([].push),se=U("symbols"),le=U("op-symbols"),ue=U("string-to-symbol-registry"),ce=U("symbol-to-string-registry"),de=U("wks"),pe=!ee||!ee.prototype||!ee.prototype.findChild,ge=c&&p((function(){return 7!=D(ie({},"a",{get:function(){return ie(this,"a",{value:7}).a}})).a}))?function(e,n,t){var i=te(K,n);i&&delete K[n],ie(e,n,t),i&&e!==K&&ie(K,n,i)}:ie,ye=function(e,n){var t=se[e]=D(X);return J(t,{type:"Symbol",tag:e,description:n}),c||(t.description=n),t},me=function(e,n,t){e===K&&me(le,n,t),I(e);var i=j(n);return I(t),g(se,i)?(t.enumerable?(g(e,B)&&e[B][i]&&(e[B][i]=!1),t=D(t,{enumerable:L(0,!1)})):(g(e,B)||ie(e,B,L(1,{})),e[B][i]=!0),ge(e,i,t)):ie(e,i,t)},Me=function(e,n){I(e);var t=N(n),i=z(t).concat(fe(t));return F(i,(function(n){c&&!s(he,t,n)||me(e,n,t[n])})),e},he=function(e){var n=j(e),t=s(ae,this,n);return!(this===K&&g(se,n)&&!g(le,n))&&(!(t||!g(this,n)||!g(se,n)||g(this,B)&&this[B][n])||t)},Te=function(e,n){var t=N(e),i=j(n);if(t!==K||!g(se,i)||g(le,i)){var r=te(t,i);return!r||!g(se,i)||g(t,B)&&t[B][i]||(r.enumerable=!0),r}},Ie=function(e){var n=re(N(e)),t=[];return F(n,(function(e){g(se,e)||g(Q,e)||oe(t,e)})),t},fe=function(e){var n=e===K,t=re(n?le:N(e)),i=[];return F(t,(function(e){!g(se,e)||n&&!g(K,e)||oe(i,se[e])})),i};(d||(E(X=(_=function(){if(h(X,this))throw $("Symbol is not a constructor");var e=arguments.length&&void 0!==arguments[0]?w(arguments[0]):void 0,n=R(e),t=function(e){this===K&&s(t,le,e),g(this,B)&&g(this[B],n)&&(this[B][n]=!1),ge(this,n,L(1,e))};return c&&pe&&ge(K,n,{configurable:!0,set:t}),ye(n,e)}).prototype,"toString",(function(){return H(this).tag})),E(_,"withoutSetter",(function(e){return ye(R(e),e)})),S.f=he,A.f=me,v.f=Me,C.f=Te,b.f=k.f=Ie,x.f=fe,Z.f=function(e){return ye(q(e),e)},c&&(ie(X,"description",{configurable:!0,get:function(){return H(this).description}}),u||E(K,"propertyIsEnumerable",he,{unsafe:!0}))),i({global:!0,wrap:!0,forced:!d,sham:!d},{Symbol:_}),F(z(de),(function(e){P(e)})),i({target:"Symbol",stat:!0,forced:!d},{for:function(e){var n=w(e);if(g(ue,n))return ue[n];var t=_(n);return ue[n]=t,ce[t]=n,t},keyFor:function(e){if(!T(e))throw $(e+" is not a symbol");if(g(ce,e))return ce[e]},useSetter:function(){pe=!0},useSimple:function(){pe=!1}}),i({target:"Object",stat:!0,forced:!d,sham:!c},{create:function(e,n){return void 0===n?D(e):Me(D(e),n)},defineProperty:me,defineProperties:Me,getOwnPropertyDescriptor:Te}),i({target:"Object",stat:!0,forced:!d},{getOwnPropertyNames:Ie,getOwnPropertySymbols:fe}),i({target:"Object",stat:!0,forced:p((function(){x.f(1)}))},{getOwnPropertySymbols:function(e){return x.f(f(e))}}),ne)&&i({target:"JSON",stat:!0,forced:!d||p((function(){var e=_();return"[null]"!=ne([e])||"{}"!=ne({a:e})||"{}"!=ne(Object(e))}))},{stringify:function(e,n,t){var i=O(arguments),r=n;if((M(n)||void 0!==e)&&!T(e))return y(n)||(n=function(e,n){if(m(r)&&(n=s(r,this,e,n)),!T(n))return n}),i[1]=n,o(ne,null,i)}});if(!X[V]){var Ne=X.valueOf;E(X,V,(function(e){return s(Ne,this)}))}W(_,"Symbol"),Q[B]=!0},function(e,n,t){var i=t(27).Symbol;e.exports=i},function(e,n,t){"use strict";function i(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,i=new Array(n);t<n;t++)i[t]=e[t];return i}t.d(n,"a",(function(){return i}))},function(e,n,t){"use strict";var i=t(1),r=t(168);i({target:"Array",proto:!0,forced:[].forEach!=r},{forEach:r})},function(e,n,t){var i=t(0),r=t(163),a=t(164),o=t(168),s=t(25),l=function(e){if(e&&e.forEach!==o)try{s(e,"forEach",o)}catch(n){e.forEach=o}};for(var u in r)r[u]&&l(i[u]&&i[u].prototype);l(a)},function(e,n,t){"use strict";var i=t(1),r=t(0),a=t(51),o=t(77),s=t(7),l=t(103),u=t(22),c=t(18),d=t(60),p=t(6),g=t(80),y=t(59),m=g("slice"),M=p("species"),h=r.Array,T=Math.max;i({target:"Array",proto:!0,forced:!m},{slice:function(e,n){var t,i,r,p=c(this),g=u(p),m=l(e,g),I=l(void 0===n?g:n,g);if(a(p)&&(t=p.constructor,(o(t)&&(t===h||a(t.prototype))||s(t)&&null===(t=t[M]))&&(t=void 0),t===h||void 0===t))return y(p,m,I);for(i=new(void 0===t?h:t)(T(I-m,0)),r=0;m<I;m++,r++)m in p&&d(i,r,p[m]);return i.length=r,i}})},function(e,n,t){var i=t(147),r=t(104);e.exports=Object.keys||function(e){return i(e,r)}},function(e,n,t){var i=t(0),r=t(109),a=t(5),o=t(31),s=t(6)("toStringTag"),l=i.Object,u="Arguments"==o(function(){return arguments}());e.exports=r?o:function(e){var n,t,i;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(t=function(e,n){try{return e[n]}catch(e){}}(n=l(e),s))?t:u?o(n):"Object"==(i=o(n))&&a(n.callee)?"Arguments":i}},function(e,n,t){var i=t(21),r=t(98);(e.exports=function(e,n){return r[e]||(r[e]=void 0!==n?n:{})})("versions",[]).push({version:"3.20.2",mode:i?"pure":"global",copyright:"© 2022 Denis Pushkarev (zloirock.ru)"})},function(e,n,t){var i=t(2),r=0,a=Math.random(),o=i(1..toString);e.exports=function(e){return"Symbol("+(void 0===e?"":e)+")_"+o(++r+a,36)}},function(e,n,t){var i=t(0),r=t(7),a=i.document,o=r(a)&&r(a.createElement);e.exports=function(e){return o?a.createElement(e):{}}},function(e,n,t){var i=t(146),r=t(73);e.exports=function(e){var n=i(e,"string");return r(n)?n:n+""}},function(e,n,t){var i=t(0),r=t(17),a=t(5),o=t(35),s=t(143),l=i.Object;e.exports=s?function(e){return"symbol"==typeof e}:function(e){var n=r("Symbol");return a(n)&&o(n.prototype,l(e))}},function(e,n,t){var i=t(0).String;e.exports=function(e){try{return i(e)}catch(e){return"Object"}}},function(e,n,t){var i=t(69),r=t(70),a=i("keys");e.exports=function(e){return a[e]||(a[e]=r(e))}},function(e,n,t){var i=t(2),r=t(5),a=t(98),o=i(Function.toString);r(a.inspectSource)||(a.inspectSource=function(e){return o(e)}),e.exports=a.inspectSource},function(e,n,t){var i=t(2),r=t(3),a=t(5),o=t(68),s=t(17),l=t(76),u=function(){},c=[],d=s("Reflect","construct"),p=/^\s*(?:class|function)\b/,g=i(p.exec),y=!p.exec(u),m=function(e){if(!a(e))return!1;try{return d(u,c,e),!0}catch(e){return!1}},M=function(e){if(!a(e))return!1;switch(o(e)){case"AsyncFunction":case"GeneratorFunction":case"AsyncGeneratorFunction":return!1}try{return y||!!g(p,l(e))}catch(e){return!0}};M.sham=!0,e.exports=!d||r((function(){var e;return m(m.call)||!m(Object)||!m((function(){e=!0}))||e}))?M:m},function(e,n,t){var i=t(31),r=t(0);e.exports="process"==i(r.process)},function(e,n,t){"use strict";t.d(n,"a",(function(){return r}));t(9);function i(e,n,t,i,r,a,o){try{var s=e[a](o),l=s.value}catch(e){return void t(e)}s.done?n(l):Promise.resolve(l).then(i,r)}function r(e){return function(){var n=this,t=arguments;return new Promise((function(r,a){var o=e.apply(n,t);function s(e){i(o,r,a,s,l,"next",e)}function l(e){i(o,r,a,s,l,"throw",e)}s(void 0)}))}}},function(e,n,t){var i=t(3),r=t(6),a=t(44),o=r("species");e.exports=function(e){return a>=51||!i((function(){var n=[];return(n.constructor={})[o]=function(){return{foo:1}},1!==n[e](Boolean).foo}))}},function(e,n,t){"use strict";var i=t(1),r=t(8),a=t(0),o=t(2),s=t(11),l=t(5),u=t(35),c=t(13),d=t(14).f,p=t(105),g=a.Symbol,y=g&&g.prototype;if(r&&l(g)&&(!("description"in y)||void 0!==g().description)){var m={},M=function(){var e=arguments.length<1||void 0===arguments[0]?void 0:c(arguments[0]),n=u(y,this)?new g(e):void 0===e?g():g(e);return""===e&&(m[n]=!0),n};p(M,g),M.prototype=y,y.constructor=M;var h="Symbol(test)"==String(g("test")),T=o(y.toString),I=o(y.valueOf),f=/^Symbol\((.*)\)[^)]+$/,N=o("".replace),j=o("".slice);d(y,"description",{configurable:!0,get:function(){var e=I(this),n=T(e);if(s(m,e))return"";var t=h?j(n,7,-1):N(n,f,"$1");return""===t?void 0:t}}),i({global:!0,forced:!0},{Symbol:M})}},function(e,n,t){"use strict";var i,r,a=t(12),o=t(2),s=t(13),l=t(221),u=t(174),c=t(69),d=t(29),p=t(41).get,g=t(251),y=t(252),m=c("native-string-replace",String.prototype.replace),M=RegExp.prototype.exec,h=M,T=o("".charAt),I=o("".indexOf),f=o("".replace),N=o("".slice),j=(r=/b*/g,a(M,i=/a/,"a"),a(M,r,"a"),0!==i.lastIndex||0!==r.lastIndex),w=u.BROKEN_CARET,L=void 0!==/()??/.exec("")[1];(j||L||w||g||y)&&(h=function(e){var n,t,i,r,o,u,c,g=this,y=p(g),D=s(e),z=y.raw;if(z)return z.lastIndex=g.lastIndex,n=a(h,z,D),g.lastIndex=z.lastIndex,n;var b=y.groups,k=w&&g.sticky,x=a(l,g),C=g.source,A=0,v=D;if(k&&(x=f(x,"y",""),-1===I(x,"g")&&(x+="g"),v=N(D,g.lastIndex),g.lastIndex>0&&(!g.multiline||g.multiline&&"\n"!==T(D,g.lastIndex-1))&&(C="(?: "+C+")",v=" "+v,A++),t=new RegExp("^(?:"+C+")",x)),L&&(t=new RegExp("^"+C+"$(?!\\s)",x)),j&&(i=g.lastIndex),r=a(M,k?t:g,v),k?r?(r.input=N(r.input,A),r[0]=N(r[0],A),r.index=g.lastIndex,g.lastIndex+=r[0].length):g.lastIndex=0:j&&r&&(g.lastIndex=g.global?r.index+r[0].length:i),L&&r&&r.length>1&&a(m,r[0],t,(function(){for(o=1;o<arguments.length-2;o++)void 0===arguments[o]&&(r[o]=void 0)})),r&&b)for(r.groups=u=d(null),o=0;o<b.length;o++)u[(c=b[o])[0]]=r[c[1]];return r}),e.exports=h},function(e,n,t){var i=t(268),r=t(269),a=t(270),o=t(271),s=t(272);function l(e){var n=-1,t=null==e?0:e.length;for(this.clear();++n<t;){var i=e[n];this.set(i[0],i[1])}}l.prototype.clear=i,l.prototype.delete=r,l.prototype.get=a,l.prototype.has=o,l.prototype.set=s,e.exports=l},function(e,n,t){var i=t(181);e.exports=function(e,n){for(var t=e.length;t--;)if(i(e[t][0],n))return t;return-1}},function(e,n,t){var i=t(38)(Object,"create");e.exports=i},function(e,n,t){var i=t(290);e.exports=function(e,n){var t=e.__data__;return i(n)?t["string"==typeof n?"string":"hash"]:t.map}},function(e,n,t){var i=t(123);e.exports=function(e){if("string"==typeof e||i(e))return e;var n=e+"";return"0"==n&&1/e==-1/0?"-0":n}},function(e,n,t){var i=t(1),r=t(8),a=t(14).f;i({target:"Object",stat:!0,forced:Object.defineProperty!==a,sham:!r},{defineProperty:a})},function(e,n,t){"use strict";t.d(n,"a",(function(){return r}));t(66),t(9),t(94),t(173),t(23),t(34),t(128);var i=t(63);function r(e,n){if(e){if("string"==typeof e)return Object(i.a)(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?Object(i.a)(e,n):void 0}}},function(e,n,t){var i,r;
/* NProgress, (c) 2013, 2014 Rico Sta. Cruz - http://ricostacruz.com/nprogress
 * @license MIT */void 0===(r="function"==typeof(i=function(){var e,n,t={version:"0.2.0"},i=t.settings={minimum:.08,easing:"ease",positionUsing:"",speed:200,trickle:!0,trickleRate:.02,trickleSpeed:800,showSpinner:!0,barSelector:'[role="bar"]',spinnerSelector:'[role="spinner"]',parent:"body",template:'<div class="bar" role="bar"><div class="peg"></div></div><div class="spinner" role="spinner"><div class="spinner-icon"></div></div>'};function r(e,n,t){return e<n?n:e>t?t:e}function a(e){return 100*(-1+e)}t.configure=function(e){var n,t;for(n in e)void 0!==(t=e[n])&&e.hasOwnProperty(n)&&(i[n]=t);return this},t.status=null,t.set=function(e){var n=t.isStarted();e=r(e,i.minimum,1),t.status=1===e?null:e;var l=t.render(!n),u=l.querySelector(i.barSelector),c=i.speed,d=i.easing;return l.offsetWidth,o((function(n){""===i.positionUsing&&(i.positionUsing=t.getPositioningCSS()),s(u,function(e,n,t){var r;return(r="translate3d"===i.positionUsing?{transform:"translate3d("+a(e)+"%,0,0)"}:"translate"===i.positionUsing?{transform:"translate("+a(e)+"%,0)"}:{"margin-left":a(e)+"%"}).transition="all "+n+"ms "+t,r}(e,c,d)),1===e?(s(l,{transition:"none",opacity:1}),l.offsetWidth,setTimeout((function(){s(l,{transition:"all "+c+"ms linear",opacity:0}),setTimeout((function(){t.remove(),n()}),c)}),c)):setTimeout(n,c)})),this},t.isStarted=function(){return"number"==typeof t.status},t.start=function(){t.status||t.set(0);var e=function(){setTimeout((function(){t.status&&(t.trickle(),e())}),i.trickleSpeed)};return i.trickle&&e(),this},t.done=function(e){return e||t.status?t.inc(.3+.5*Math.random()).set(1):this},t.inc=function(e){var n=t.status;return n?("number"!=typeof e&&(e=(1-n)*r(Math.random()*n,.1,.95)),n=r(n+e,0,.994),t.set(n)):t.start()},t.trickle=function(){return t.inc(Math.random()*i.trickleRate)},e=0,n=0,t.promise=function(i){return i&&"resolved"!==i.state()?(0===n&&t.start(),e++,n++,i.always((function(){0==--n?(e=0,t.done()):t.set((e-n)/e)})),this):this},t.render=function(e){if(t.isRendered())return document.getElementById("nprogress");u(document.documentElement,"nprogress-busy");var n=document.createElement("div");n.id="nprogress",n.innerHTML=i.template;var r,o=n.querySelector(i.barSelector),l=e?"-100":a(t.status||0),c=document.querySelector(i.parent);return s(o,{transition:"all 0 linear",transform:"translate3d("+l+"%,0,0)"}),i.showSpinner||(r=n.querySelector(i.spinnerSelector))&&p(r),c!=document.body&&u(c,"nprogress-custom-parent"),c.appendChild(n),n},t.remove=function(){c(document.documentElement,"nprogress-busy"),c(document.querySelector(i.parent),"nprogress-custom-parent");var e=document.getElementById("nprogress");e&&p(e)},t.isRendered=function(){return!!document.getElementById("nprogress")},t.getPositioningCSS=function(){var e=document.body.style,n="WebkitTransform"in e?"Webkit":"MozTransform"in e?"Moz":"msTransform"in e?"ms":"OTransform"in e?"O":"";return n+"Perspective"in e?"translate3d":n+"Transform"in e?"translate":"margin"};var o=function(){var e=[];function n(){var t=e.shift();t&&t(n)}return function(t){e.push(t),1==e.length&&n()}}(),s=function(){var e=["Webkit","O","Moz","ms"],n={};function t(t){return t=t.replace(/^-ms-/,"ms-").replace(/-([\da-z])/gi,(function(e,n){return n.toUpperCase()})),n[t]||(n[t]=function(n){var t=document.body.style;if(n in t)return n;for(var i,r=e.length,a=n.charAt(0).toUpperCase()+n.slice(1);r--;)if((i=e[r]+a)in t)return i;return n}(t))}function i(e,n,i){n=t(n),e.style[n]=i}return function(e,n){var t,r,a=arguments;if(2==a.length)for(t in n)void 0!==(r=n[t])&&n.hasOwnProperty(t)&&i(e,t,r);else i(e,a[1],a[2])}}();function l(e,n){return("string"==typeof e?e:d(e)).indexOf(" "+n+" ")>=0}function u(e,n){var t=d(e),i=t+n;l(t,n)||(e.className=i.substring(1))}function c(e,n){var t,i=d(e);l(e,n)&&(t=i.replace(" "+n+" "," "),e.className=t.substring(1,t.length-1))}function d(e){return(" "+(e.className||"")+" ").replace(/\s+/gi," ")}function p(e){e&&e.parentNode&&e.parentNode.removeChild(e)}return t})?i.call(n,t,n,e):i)||(e.exports=r)},function(e,n,t){"use strict";var i=t(8),r=t(0),a=t(2),o=t(107),s=t(15),l=t(11),u=t(175),c=t(35),d=t(73),p=t(146),g=t(3),y=t(57).f,m=t(26).f,M=t(14).f,h=t(356),T=t(141).trim,I=r.Number,f=I.prototype,N=r.TypeError,j=a("".slice),w=a("".charCodeAt),L=function(e){var n=p(e,"number");return"bigint"==typeof n?n:D(n)},D=function(e){var n,t,i,r,a,o,s,l,u=p(e,"number");if(d(u))throw N("Cannot convert a Symbol value to a number");if("string"==typeof u&&u.length>2)if(u=T(u),43===(n=w(u,0))||45===n){if(88===(t=w(u,2))||120===t)return NaN}else if(48===n){switch(w(u,1)){case 66:case 98:i=2,r=49;break;case 79:case 111:i=8,r=55;break;default:return+u}for(o=(a=j(u,2)).length,s=0;s<o;s++)if((l=w(a,s))<48||l>r)return NaN;return parseInt(a,i)}return+u};if(o("Number",!I(" 0o1")||!I("0b1")||I("+0x1"))){for(var z,b=function(e){var n=arguments.length<1?0:I(L(e)),t=this;return c(f,t)&&g((function(){h(t)}))?u(Object(n),t,b):n},k=i?y(I):"MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,isFinite,isInteger,isNaN,isSafeInteger,parseFloat,parseInt,fromString,range".split(","),x=0;k.length>x;x++)l(I,z=k[x])&&!l(b,z)&&M(b,z,m(I,z));b.prototype=f,f.constructor=b,s(r,"Number",b)}},function(e,n,t){"use strict";var i=t(1),r=t(48).map;i({target:"Array",proto:!0,forced:!t(80)("map")},{map:function(e){return r(this,e,arguments.length>1?arguments[1]:void 0)}})},function(e,n,t){var i=t(8),r=t(11),a=Function.prototype,o=i&&Object.getOwnPropertyDescriptor,s=r(a,"name"),l=s&&"something"===function(){}.name,u=s&&(!i||i&&o(a,"name").configurable);e.exports={EXISTS:s,PROPER:l,CONFIGURABLE:u}},function(e,n,t){var i=t(8),r=t(93).EXISTS,a=t(2),o=t(14).f,s=Function.prototype,l=a(s.toString),u=/function\b(?:\s|\/\*[\S\s]*?\*\/|\/\/[^\n\r]*[\n\r]+)*([^\s(/]*)/,c=a(u.exec);i&&!r&&o(s,"name",{configurable:!0,get:function(){try{return c(u,l(this))[1]}catch(e){return""}}})},function(e,n,t){"use strict";var i={}.propertyIsEnumerable,r=Object.getOwnPropertyDescriptor,a=r&&!i.call({1:2},1);n.f=a?function(e){var n=r(this,e);return!!n&&n.enumerable}:i},function(e,n,t){var i=t(68),r=t(45),a=t(56),o=t(6)("iterator");e.exports=function(e){if(null!=e)return r(e,o)||r(e,"@@iterator")||a[i(e)]}},function(e,n,t){var i=t(1),r=t(0),a=t(30),o=t(5),s=t(32),l=t(59),u=/MSIE .\./.test(s),c=r.Function,d=function(e){return function(n,t){var i=arguments.length>2,r=i?l(arguments,2):void 0;return e(i?function(){a(o(n)?n:c(n),this,r)}:n,t)}};i({global:!0,bind:!0,forced:u},{setTimeout:d(r.setTimeout),setInterval:d(r.setInterval)})},function(e,n,t){var i=t(0),r=t(99),a=i["__core-js_shared__"]||r("__core-js_shared__",{});e.exports=a},function(e,n,t){var i=t(0),r=Object.defineProperty;e.exports=function(e,n){try{r(i,e,{value:n,configurable:!0,writable:!0})}catch(t){i[e]=n}return n}},function(e,n,t){var i=t(44),r=t(3);e.exports=!!Object.getOwnPropertySymbols&&!r((function(){var e=Symbol();return!String(e)||!(Object(e)instanceof Symbol)||!Symbol.sham&&i&&i<41}))},function(e,n,t){var i=t(8),r=t(144),a=t(14),o=t(10),s=t(18),l=t(67);n.f=i&&!r?Object.defineProperties:function(e,n){o(e);for(var t,i=s(n),r=l(n),u=r.length,c=0;u>c;)a.f(e,t=r[c++],i[t]);return e}},function(e,n,t){var i=t(18),r=t(103),a=t(22),o=function(e){return function(n,t,o){var s,l=i(n),u=a(l),c=r(o,u);if(e&&t!=t){for(;u>c;)if((s=l[c++])!=s)return!0}else for(;u>c;c++)if((e||c in l)&&l[c]===t)return e||c||0;return!e&&-1}};e.exports={includes:o(!0),indexOf:o(!1)}},function(e,n,t){var i=t(46),r=Math.max,a=Math.min;e.exports=function(e,n){var t=i(e);return t<0?r(t+n,0):a(t,n)}},function(e,n){e.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},function(e,n,t){var i=t(11),r=t(150),a=t(26),o=t(14);e.exports=function(e,n,t){for(var s=r(n),l=o.f,u=a.f,c=0;c<s.length;c++){var d=s[c];i(e,d)||t&&i(t,d)||l(e,d,u(n,d))}}},function(e,n){n.f=Object.getOwnPropertySymbols},function(e,n,t){var i=t(3),r=t(5),a=/#|\.prototype\./,o=function(e,n){var t=l[s(e)];return t==c||t!=u&&(r(n)?i(n):!!n)},s=o.normalize=function(e){return String(e).replace(a,".").toLowerCase()},l=o.data={},u=o.NATIVE="N",c=o.POLYFILL="P";e.exports=o},function(e,n,t){var i=t(0),r=t(11),a=t(5),o=t(16),s=t(75),l=t(152),u=s("IE_PROTO"),c=i.Object,d=c.prototype;e.exports=l?c.getPrototypeOf:function(e){var n=o(e);if(r(n,u))return n[u];var t=n.constructor;return a(t)&&n instanceof t?t.prototype:n instanceof c?d:null}},function(e,n,t){var i={};i[t(6)("toStringTag")]="z",e.exports="[object z]"===String(i)},function(e,n,t){var i=t(10),r=t(157),a=t(6)("species");e.exports=function(e,n){var t,o=i(e).constructor;return void 0===o||null==(t=i(o)[a])?n:r(t)}},function(e,n,t){var i=t(1),r=t(16),a=t(67);i({target:"Object",stat:!0,forced:t(3)((function(){a(1)}))},{keys:function(e){return a(r(e))}})},function(e,n,t){var i=t(0),r=t(167),a=i.TypeError;e.exports=function(e){if(r(e))throw a("The method doesn't accept regular expressions");return e}},function(e,n,t){var i=t(6)("match");e.exports=function(e){var n=/./;try{"/./"[e](n)}catch(t){try{return n[i]=!1,"/./"[e](n)}catch(e){}}return!1}},function(e,n,t){var i=t(0),r=t(103),a=t(22),o=t(60),s=i.Array,l=Math.max;e.exports=function(e,n,t){for(var i=a(e),u=r(n,i),c=r(void 0===t?i:t,i),d=s(l(c-u,0)),p=0;u<c;u++,p++)o(d,p,e[u]);return d.length=p,d}},function(e,n,t){t(172)("iterator")},function(e,n,t){var i=t(262),r=t(43),a=Object.prototype,o=a.hasOwnProperty,s=a.propertyIsEnumerable,l=i(function(){return arguments}())?i:function(e){return r(e)&&o.call(e,"callee")&&!s.call(e,"callee")};e.exports=l},function(e,n,t){var i=t(38)(t(27),"Map");e.exports=i},function(e,n){e.exports=function(e){var n=typeof e;return null!=e&&("object"==n||"function"==n)}},function(e,n,t){var i=t(282),r=t(289),a=t(291),o=t(292),s=t(293);function l(e){var n=-1,t=null==e?0:e.length;for(this.clear();++n<t;){var i=e[n];this.set(i[0],i[1])}}l.prototype.clear=i,l.prototype.delete=r,l.prototype.get=a,l.prototype.has=o,l.prototype.set=s,e.exports=l},function(e,n){e.exports=function(e){var n=-1,t=Array(e.size);return e.forEach((function(e){t[++n]=e})),t}},function(e,n){e.exports=function(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=9007199254740991}},function(e,n,t){var i=t(24),r=t(123),a=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,o=/^\w*$/;e.exports=function(e,n){if(i(e))return!1;var t=typeof e;return!("number"!=t&&"symbol"!=t&&"boolean"!=t&&null!=e&&!r(e))||(o.test(e)||!a.test(e)||null!=n&&e in Object(n))}},function(e,n,t){var i=t(52),r=t(43);e.exports=function(e){return"symbol"==typeof e||r(e)&&"[object Symbol]"==i(e)}},function(e,n){e.exports=function(e){return e}},function(e,n,t){"use strict";t.d(n,"a",(function(){return r}));t(132);t(61),t(81),t(9),t(115),t(23),t(28);var i=t(89);t(37),t(36);function r(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var i,r,a=[],o=!0,s=!1;try{for(t=t.call(e);!(o=(i=t.next()).done)&&(a.push(i.value),!n||a.length!==n);o=!0);}catch(e){s=!0,r=e}finally{try{o||null==t.return||t.return()}finally{if(s)throw r}}return a}}(e,n)||Object(i.a)(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}},function(e,n,t){"use strict";var i=t(30),r=t(12),a=t(2),o=t(133),s=t(3),l=t(10),u=t(5),c=t(46),d=t(49),p=t(13),g=t(20),y=t(139),m=t(45),M=t(258),h=t(134),T=t(6)("replace"),I=Math.max,f=Math.min,N=a([].concat),j=a([].push),w=a("".indexOf),L=a("".slice),D="$0"==="a".replace(/./,"$0"),z=!!/./[T]&&""===/./[T]("a","$0");o("replace",(function(e,n,t){var a=z?"$":"$0";return[function(e,t){var i=g(this),a=null==e?void 0:m(e,T);return a?r(a,e,i,t):r(n,p(i),e,t)},function(e,r){var o=l(this),s=p(e);if("string"==typeof r&&-1===w(r,a)&&-1===w(r,"$<")){var g=t(n,o,s,r);if(g.done)return g.value}var m=u(r);m||(r=p(r));var T=o.global;if(T){var D=o.unicode;o.lastIndex=0}for(var z=[];;){var b=h(o,s);if(null===b)break;if(j(z,b),!T)break;""===p(b[0])&&(o.lastIndex=y(s,d(o.lastIndex),D))}for(var k,x="",C=0,A=0;A<z.length;A++){for(var v=p((b=z[A])[0]),S=I(f(c(b.index),s.length),0),O=[],E=1;E<b.length;E++)j(O,void 0===(k=b[E])?k:String(k));var U=b.groups;if(m){var Y=N([v],O,S,s);void 0!==U&&j(Y,U);var Q=p(i(r,void 0,Y))}else Q=M(v,s,S,O,U,r);S>=C&&(x+=L(s,C,S)+Q,C=S+v.length)}return x+L(s,C)}]}),!!s((function(){var e=/./;return e.exec=function(){var e=[];return e.groups={a:"7"},e},"7"!=="".replace(e,"$<a>")}))||!D||z)},function(e,n,t){"use strict";var i=t(1),r=t(0),a=t(3),o=t(51),s=t(7),l=t(16),u=t(22),c=t(60),d=t(138),p=t(80),g=t(6),y=t(44),m=g("isConcatSpreadable"),M=r.TypeError,h=y>=51||!a((function(){var e=[];return e[m]=!1,e.concat()[0]!==e})),T=p("concat"),I=function(e){if(!s(e))return!1;var n=e[m];return void 0!==n?!!n:o(e)};i({target:"Array",proto:!0,forced:!h||!T},{concat:function(e){var n,t,i,r,a,o=l(this),s=d(o,0),p=0;for(n=-1,i=arguments.length;n<i;n++)if(I(a=-1===n?o:arguments[n])){if(p+(r=u(a))>9007199254740991)throw M("Maximum allowed index exceeded");for(t=0;t<r;t++,p++)t in a&&c(s,p,a[t])}else{if(p>=9007199254740991)throw M("Maximum allowed index exceeded");c(s,p++,a)}return s.length=p,s}})},function(e,n,t){"use strict";t(34);var i,r,a=t(1),o=t(0),s=t(12),l=t(2),u=t(5),c=t(7),d=(i=!1,(r=/[ac]/).exec=function(){return i=!0,/./.exec.apply(this,arguments)},!0===r.test("abc")&&i),p=o.Error,g=l(/./.test);a({target:"RegExp",proto:!0,forced:!d},{test:function(e){var n=this.exec;if(!u(n))return g(this,e);var t=s(n,this,e);if(null!==t&&!c(t))throw new p("RegExp exec method returned something other than an Object or null");return!!t}})},function(e,n,t){var i=t(6),r=t(29),a=t(14),o=i("unscopables"),s=Array.prototype;null==s[o]&&a.f(s,o,{configurable:!0,value:r(null)}),e.exports=function(e){s[o][e]=!0}},function(e,n,t){var i=function(e){"use strict";var n=Object.prototype,t=n.hasOwnProperty,i="function"==typeof Symbol?Symbol:{},r=i.iterator||"@@iterator",a=i.asyncIterator||"@@asyncIterator",o=i.toStringTag||"@@toStringTag";function s(e,n,t){return Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}),e[n]}try{s({},"")}catch(e){s=function(e,n,t){return e[n]=t}}function l(e,n,t,i){var r=n&&n.prototype instanceof d?n:d,a=Object.create(r.prototype),o=new w(i||[]);return a._invoke=function(e,n,t){var i="suspendedStart";return function(r,a){if("executing"===i)throw new Error("Generator is already running");if("completed"===i){if("throw"===r)throw a;return D()}for(t.method=r,t.arg=a;;){var o=t.delegate;if(o){var s=f(o,t);if(s){if(s===c)continue;return s}}if("next"===t.method)t.sent=t._sent=t.arg;else if("throw"===t.method){if("suspendedStart"===i)throw i="completed",t.arg;t.dispatchException(t.arg)}else"return"===t.method&&t.abrupt("return",t.arg);i="executing";var l=u(e,n,t);if("normal"===l.type){if(i=t.done?"completed":"suspendedYield",l.arg===c)continue;return{value:l.arg,done:t.done}}"throw"===l.type&&(i="completed",t.method="throw",t.arg=l.arg)}}}(e,t,o),a}function u(e,n,t){try{return{type:"normal",arg:e.call(n,t)}}catch(e){return{type:"throw",arg:e}}}e.wrap=l;var c={};function d(){}function p(){}function g(){}var y={};s(y,r,(function(){return this}));var m=Object.getPrototypeOf,M=m&&m(m(L([])));M&&M!==n&&t.call(M,r)&&(y=M);var h=g.prototype=d.prototype=Object.create(y);function T(e){["next","throw","return"].forEach((function(n){s(e,n,(function(e){return this._invoke(n,e)}))}))}function I(e,n){var i;this._invoke=function(r,a){function o(){return new n((function(i,o){!function i(r,a,o,s){var l=u(e[r],e,a);if("throw"!==l.type){var c=l.arg,d=c.value;return d&&"object"==typeof d&&t.call(d,"__await")?n.resolve(d.__await).then((function(e){i("next",e,o,s)}),(function(e){i("throw",e,o,s)})):n.resolve(d).then((function(e){c.value=e,o(c)}),(function(e){return i("throw",e,o,s)}))}s(l.arg)}(r,a,i,o)}))}return i=i?i.then(o,o):o()}}function f(e,n){var t=e.iterator[n.method];if(void 0===t){if(n.delegate=null,"throw"===n.method){if(e.iterator.return&&(n.method="return",n.arg=void 0,f(e,n),"throw"===n.method))return c;n.method="throw",n.arg=new TypeError("The iterator does not provide a 'throw' method")}return c}var i=u(t,e.iterator,n.arg);if("throw"===i.type)return n.method="throw",n.arg=i.arg,n.delegate=null,c;var r=i.arg;return r?r.done?(n[e.resultName]=r.value,n.next=e.nextLoc,"return"!==n.method&&(n.method="next",n.arg=void 0),n.delegate=null,c):r:(n.method="throw",n.arg=new TypeError("iterator result is not an object"),n.delegate=null,c)}function N(e){var n={tryLoc:e[0]};1 in e&&(n.catchLoc=e[1]),2 in e&&(n.finallyLoc=e[2],n.afterLoc=e[3]),this.tryEntries.push(n)}function j(e){var n=e.completion||{};n.type="normal",delete n.arg,e.completion=n}function w(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(N,this),this.reset(!0)}function L(e){if(e){var n=e[r];if(n)return n.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var i=-1,a=function n(){for(;++i<e.length;)if(t.call(e,i))return n.value=e[i],n.done=!1,n;return n.value=void 0,n.done=!0,n};return a.next=a}}return{next:D}}function D(){return{value:void 0,done:!0}}return p.prototype=g,s(h,"constructor",g),s(g,"constructor",p),p.displayName=s(g,o,"GeneratorFunction"),e.isGeneratorFunction=function(e){var n="function"==typeof e&&e.constructor;return!!n&&(n===p||"GeneratorFunction"===(n.displayName||n.name))},e.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,g):(e.__proto__=g,s(e,o,"GeneratorFunction")),e.prototype=Object.create(h),e},e.awrap=function(e){return{__await:e}},T(I.prototype),s(I.prototype,a,(function(){return this})),e.AsyncIterator=I,e.async=function(n,t,i,r,a){void 0===a&&(a=Promise);var o=new I(l(n,t,i,r),a);return e.isGeneratorFunction(t)?o:o.next().then((function(e){return e.done?e.value:o.next()}))},T(h),s(h,o,"Generator"),s(h,r,(function(){return this})),s(h,"toString",(function(){return"[object Generator]"})),e.keys=function(e){var n=[];for(var t in e)n.push(t);return n.reverse(),function t(){for(;n.length;){var i=n.pop();if(i in e)return t.value=i,t.done=!1,t}return t.done=!0,t}},e.values=L,w.prototype={constructor:w,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(j),!e)for(var n in this)"t"===n.charAt(0)&&t.call(this,n)&&!isNaN(+n.slice(1))&&(this[n]=void 0)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var n=this;function i(t,i){return o.type="throw",o.arg=e,n.next=t,i&&(n.method="next",n.arg=void 0),!!i}for(var r=this.tryEntries.length-1;r>=0;--r){var a=this.tryEntries[r],o=a.completion;if("root"===a.tryLoc)return i("end");if(a.tryLoc<=this.prev){var s=t.call(a,"catchLoc"),l=t.call(a,"finallyLoc");if(s&&l){if(this.prev<a.catchLoc)return i(a.catchLoc,!0);if(this.prev<a.finallyLoc)return i(a.finallyLoc)}else if(s){if(this.prev<a.catchLoc)return i(a.catchLoc,!0)}else{if(!l)throw new Error("try statement without catch or finally");if(this.prev<a.finallyLoc)return i(a.finallyLoc)}}}},abrupt:function(e,n){for(var i=this.tryEntries.length-1;i>=0;--i){var r=this.tryEntries[i];if(r.tryLoc<=this.prev&&t.call(r,"finallyLoc")&&this.prev<r.finallyLoc){var a=r;break}}a&&("break"===e||"continue"===e)&&a.tryLoc<=n&&n<=a.finallyLoc&&(a=null);var o=a?a.completion:{};return o.type=e,o.arg=n,a?(this.method="next",this.next=a.finallyLoc,c):this.complete(o)},complete:function(e,n){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&n&&(this.next=n),c},finish:function(e){for(var n=this.tryEntries.length-1;n>=0;--n){var t=this.tryEntries[n];if(t.finallyLoc===e)return this.complete(t.completion,t.afterLoc),j(t),c}},catch:function(e){for(var n=this.tryEntries.length-1;n>=0;--n){var t=this.tryEntries[n];if(t.tryLoc===e){var i=t.completion;if("throw"===i.type){var r=i.arg;j(t)}return r}}throw new Error("illegal catch attempt")},delegateYield:function(e,n,t){return this.delegate={iterator:L(e),resultName:n,nextLoc:t},"next"===this.method&&(this.arg=void 0),c}},e}(e.exports);try{regeneratorRuntime=i}catch(e){"object"==typeof globalThis?globalThis.regeneratorRuntime=i:Function("r","regeneratorRuntime = r")(i)}},function(e,n,t){"use strict";var i,r=t(1),a=t(2),o=t(26).f,s=t(49),l=t(13),u=t(112),c=t(20),d=t(113),p=t(21),g=a("".startsWith),y=a("".slice),m=Math.min,M=d("startsWith");r({target:"String",proto:!0,forced:!!(p||M||(i=o(String.prototype,"startsWith"),!i||i.writable))&&!M},{startsWith:function(e){var n=l(c(this));u(e);var t=s(m(arguments.length>1?arguments[1]:void 0,n.length)),i=l(e);return g?g(n,i,t):y(n,t,t+i.length)===i}})},function(e,n,t){t(1)({target:"Array",stat:!0},{isArray:t(51)})},function(e,n,t){"use strict";t(34);var i=t(2),r=t(15),a=t(82),o=t(3),s=t(6),l=t(25),u=s("species"),c=RegExp.prototype;e.exports=function(e,n,t,d){var p=s(e),g=!o((function(){var n={};return n[p]=function(){return 7},7!=""[e](n)})),y=g&&!o((function(){var n=!1,t=/a/;return"split"===e&&((t={}).constructor={},t.constructor[u]=function(){return t},t.flags="",t[p]=/./[p]),t.exec=function(){return n=!0,null},t[p](""),!n}));if(!g||!y||t){var m=i(/./[p]),M=n(p,""[e],(function(e,n,t,r,o){var s=i(e),l=n.exec;return l===a||l===c.exec?g&&!o?{done:!0,value:m(n,t,r)}:{done:!0,value:s(t,n,r)}:{done:!1}}));r(String.prototype,e,M[0]),r(c,p,M[1])}d&&l(c[p],"sham",!0)}},function(e,n,t){var i=t(0),r=t(12),a=t(10),o=t(5),s=t(31),l=t(82),u=i.TypeError;e.exports=function(e,n){var t=e.exec;if(o(t)){var i=r(t,e,n);return null!==i&&a(i),i}if("RegExp"===s(e))return r(l,e,n);throw u("RegExp#exec called on incompatible receiver")}},function(e,n,t){"use strict";t.d(n,"a",(function(){return a}));t(111),t(61),t(39),t(9),t(358),t(64),t(65),t(165),t(359),t(88);var i=t(198);function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){Object(i.a)(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}},function(e,n,t){"use strict";var i=t(18),r=t(129),a=t(56),o=t(41),s=t(14).f,l=t(149),u=t(21),c=t(8),d=o.set,p=o.getterFor("Array Iterator");e.exports=l(Array,"Array",(function(e,n){d(this,{type:"Array Iterator",target:i(e),index:0,kind:n})}),(function(){var e=p(this),n=e.target,t=e.kind,i=e.index++;return!n||i>=n.length?(e.target=void 0,{value:void 0,done:!0}):"keys"==t?{value:i,done:!1}:"values"==t?{value:n[i],done:!1}:{value:[i,n[i]],done:!1}}),"values");var g=a.Arguments=a.Array;if(r("keys"),r("values"),r("entries"),!u&&c&&"values"!==g.name)try{s(g,"name",{value:"values"})}catch(e){}},function(e,n,t){var i=t(0),r=t(12),a=t(33),o=t(10),s=t(74),l=t(96),u=i.TypeError;e.exports=function(e,n){var t=arguments.length<2?l(e):n;if(a(t))return o(r(t,e));throw u(s(e)+" is not iterable")}},function(e,n,t){var i=t(241);e.exports=function(e,n){return new(i(e))(0===n?0:n)}},function(e,n,t){"use strict";var i=t(162).charAt;e.exports=function(e,n,t){return n+(t?i(e,n).length:1)}},function(e,n){e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children||(e.children=[]),Object.defineProperty(e,"loaded",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return e.i}}),e.webpackPolyfill=1),e}},function(e,n,t){var i=t(2),r=t(20),a=t(13),o=t(142),s=i("".replace),l="["+o+"]",u=RegExp("^"+l+l+"*"),c=RegExp(l+l+"*$"),d=function(e){return function(n){var t=a(r(n));return 1&e&&(t=s(t,u,"")),2&e&&(t=s(t,c,"")),t}};e.exports={start:d(1),end:d(2),trim:d(3)}},function(e,n){e.exports="\t\n\v\f\r                　\u2028\u2029\ufeff"},function(e,n,t){var i=t(100);e.exports=i&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},function(e,n,t){var i=t(8),r=t(3);e.exports=i&&r((function(){return 42!=Object.defineProperty((function(){}),"prototype",{value:42,writable:!1}).prototype}))},function(e,n,t){var i=t(8),r=t(3),a=t(71);e.exports=!i&&!r((function(){return 7!=Object.defineProperty(a("div"),"a",{get:function(){return 7}}).a}))},function(e,n,t){var i=t(0),r=t(12),a=t(7),o=t(73),s=t(45),l=t(224),u=t(6),c=i.TypeError,d=u("toPrimitive");e.exports=function(e,n){if(!a(e)||o(e))return e;var t,i=s(e,d);if(i){if(void 0===n&&(n="default"),t=r(i,e,n),!a(t)||o(t))return t;throw c("Can't convert object to primitive value")}return void 0===n&&(n="number"),l(e,n)}},function(e,n,t){var i=t(2),r=t(11),a=t(18),o=t(102).indexOf,s=t(55),l=i([].push);e.exports=function(e,n){var t,i=a(e),u=0,c=[];for(t in i)!r(s,t)&&r(i,t)&&l(c,t);for(;n.length>u;)r(i,t=n[u++])&&(~o(c,t)||l(c,t));return c}},function(e,n,t){var i=t(17);e.exports=i("document","documentElement")},function(e,n,t){"use strict";var i=t(1),r=t(12),a=t(21),o=t(93),s=t(5),l=t(218),u=t(108),c=t(58),d=t(50),p=t(25),g=t(15),y=t(6),m=t(56),M=t(151),h=o.PROPER,T=o.CONFIGURABLE,I=M.IteratorPrototype,f=M.BUGGY_SAFARI_ITERATORS,N=y("iterator"),j=function(){return this};e.exports=function(e,n,t,o,y,M,w){l(t,n,o);var L,D,z,b=function(e){if(e===y&&v)return v;if(!f&&e in C)return C[e];switch(e){case"keys":case"values":case"entries":return function(){return new t(this,e)}}return function(){return new t(this)}},k=n+" Iterator",x=!1,C=e.prototype,A=C[N]||C["@@iterator"]||y&&C[y],v=!f&&A||b(y),S="Array"==n&&C.entries||A;if(S&&(L=u(S.call(new e)))!==Object.prototype&&L.next&&(a||u(L)===I||(c?c(L,I):s(L[N])||g(L,N,j)),d(L,k,!0,!0),a&&(m[k]=j)),h&&"values"==y&&A&&"values"!==A.name&&(!a&&T?p(C,"name","values"):(x=!0,v=function(){return r(A,this)})),y)if(D={values:b("values"),keys:M?v:b("keys"),entries:b("entries")},w)for(z in D)(f||x||!(z in C))&&g(C,z,D[z]);else i({target:n,proto:!0,forced:f||x},D);return a&&!w||C[N]===v||g(C,N,v,{name:y}),m[n]=v,D}},function(e,n,t){var i=t(17),r=t(2),a=t(57),o=t(106),s=t(10),l=r([].concat);e.exports=i("Reflect","ownKeys")||function(e){var n=a.f(s(e)),t=o.f;return t?l(n,t(e)):n}},function(e,n,t){"use strict";var i,r,a,o=t(3),s=t(5),l=t(29),u=t(108),c=t(15),d=t(6),p=t(21),g=d("iterator"),y=!1;[].keys&&("next"in(a=[].keys())?(r=u(u(a)))!==Object.prototype&&(i=r):y=!0),null==i||o((function(){var e={};return i[g].call(e)!==e}))?i={}:p&&(i=l(i)),s(i[g])||c(i,g,(function(){return this})),e.exports={IteratorPrototype:i,BUGGY_SAFARI_ITERATORS:y}},function(e,n,t){var i=t(3);e.exports=!i((function(){function e(){}return e.prototype.constructor=null,Object.getPrototypeOf(new e)!==e.prototype}))},function(e,n,t){var i=t(0);e.exports=i.Promise},function(e,n,t){var i=t(6),r=t(56),a=i("iterator"),o=Array.prototype;e.exports=function(e){return void 0!==e&&(r.Array===e||o[a]===e)}},function(e,n,t){var i=t(12),r=t(10),a=t(45);e.exports=function(e,n,t){var o,s;r(e);try{if(!(o=a(e,"return"))){if("throw"===n)throw t;return t}o=i(o,e)}catch(e){s=!0,o=e}if("throw"===n)throw t;if(s)throw o;return r(o),t}},function(e,n,t){var i=t(6)("iterator"),r=!1;try{var a=0,o={next:function(){return{done:!!a++}},return:function(){r=!0}};o[i]=function(){return this},Array.from(o,(function(){throw 2}))}catch(e){}e.exports=function(e,n){if(!n&&!r)return!1;var t=!1;try{var a={};a[i]=function(){return{next:function(){return{done:t=!0}}}},e(a)}catch(e){}return t}},function(e,n,t){var i=t(0),r=t(77),a=t(74),o=i.TypeError;e.exports=function(e){if(r(e))return e;throw o(a(e)+" is not a constructor")}},function(e,n,t){var i,r,a,o,s=t(0),l=t(30),u=t(47),c=t(5),d=t(11),p=t(3),g=t(148),y=t(59),m=t(71),M=t(159),h=t(78),T=s.setImmediate,I=s.clearImmediate,f=s.process,N=s.Dispatch,j=s.Function,w=s.MessageChannel,L=s.String,D=0,z={};try{i=s.location}catch(e){}var b=function(e){if(d(z,e)){var n=z[e];delete z[e],n()}},k=function(e){return function(){b(e)}},x=function(e){b(e.data)},C=function(e){s.postMessage(L(e),i.protocol+"//"+i.host)};T&&I||(T=function(e){var n=y(arguments,1);return z[++D]=function(){l(c(e)?e:j(e),void 0,n)},r(D),D},I=function(e){delete z[e]},h?r=function(e){f.nextTick(k(e))}:N&&N.now?r=function(e){N.now(k(e))}:w&&!M?(o=(a=new w).port2,a.port1.onmessage=x,r=u(o.postMessage,o)):s.addEventListener&&c(s.postMessage)&&!s.importScripts&&i&&"file:"!==i.protocol&&!p(C)?(r=C,s.addEventListener("message",x,!1)):r="onreadystatechange"in m("script")?function(e){g.appendChild(m("script")).onreadystatechange=function(){g.removeChild(this),b(e)}}:function(e){setTimeout(k(e),0)}),e.exports={set:T,clear:I}},function(e,n,t){var i=t(32);e.exports=/(?:ipad|iphone|ipod).*applewebkit/i.test(i)},function(e,n,t){var i=t(10),r=t(7),a=t(161);e.exports=function(e,n){if(i(e),r(n)&&n.constructor===e)return n;var t=a.f(e);return(0,t.resolve)(n),t.promise}},function(e,n,t){"use strict";var i=t(33),r=function(e){var n,t;this.promise=new e((function(e,i){if(void 0!==n||void 0!==t)throw TypeError("Bad Promise constructor");n=e,t=i})),this.resolve=i(n),this.reject=i(t)};e.exports.f=function(e){return new r(e)}},function(e,n,t){var i=t(2),r=t(46),a=t(13),o=t(20),s=i("".charAt),l=i("".charCodeAt),u=i("".slice),c=function(e){return function(n,t){var i,c,d=a(o(n)),p=r(t),g=d.length;return p<0||p>=g?e?"":void 0:(i=l(d,p))<55296||i>56319||p+1===g||(c=l(d,p+1))<56320||c>57343?e?s(d,p):i:e?u(d,p,p+2):c-56320+(i-55296<<10)+65536}};e.exports={codeAt:c(!1),charAt:c(!0)}},function(e,n){e.exports={CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0}},function(e,n,t){var i=t(71)("span").classList,r=i&&i.constructor&&i.constructor.prototype;e.exports=r===Object.prototype?void 0:r},function(e,n,t){var i=t(1),r=t(8),a=t(150),o=t(18),s=t(26),l=t(60);i({target:"Object",stat:!0,sham:!r},{getOwnPropertyDescriptors:function(e){for(var n,t,i=o(e),r=s.f,u=a(i),c={},d=0;u.length>d;)void 0!==(t=r(i,n=u[d++]))&&l(c,n,t);return c}})},function(e,n,t){var i=t(1),r=t(3),a=t(16),o=t(108),s=t(152);i({target:"Object",stat:!0,forced:r((function(){o(1)})),sham:!s},{getPrototypeOf:function(e){return o(a(e))}})},function(e,n,t){var i=t(7),r=t(31),a=t(6)("match");e.exports=function(e){var n;return i(e)&&(void 0!==(n=e[a])?!!n:"RegExp"==r(e))}},function(e,n,t){"use strict";var i=t(48).forEach,r=t(40)("forEach");e.exports=r?[].forEach:function(e){return i(this,e,arguments.length>1?arguments[1]:void 0)}},function(e,n,t){var i=t(3);e.exports=!i((function(){return Object.isExtensible(Object.preventExtensions({}))}))},function(e,n,t){var i=t(31),r=t(18),a=t(57).f,o=t(114),s="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];e.exports.f=function(e){return s&&"Window"==i(e)?function(e){try{return a(e)}catch(e){return o(s)}}(e):a(r(e))}},function(e,n,t){var i=t(6);n.f=i},function(e,n,t){var i=t(248),r=t(11),a=t(171),o=t(14).f;e.exports=function(e){var n=i.Symbol||(i.Symbol={});r(n,e)||o(n,e,{value:a.f(e)})}},function(e,n,t){var i=t(1),r=t(249);i({target:"Array",stat:!0,forced:!t(156)((function(e){Array.from(e)}))},{from:r})},function(e,n,t){var i=t(3),r=t(0).RegExp,a=i((function(){var e=r("a","y");return e.lastIndex=2,null!=e.exec("abcd")})),o=a||i((function(){return!r("a","y").sticky})),s=a||i((function(){var e=r("^r","gy");return e.lastIndex=2,null!=e.exec("str")}));e.exports={BROKEN_CARET:s,MISSED_STICKY:o,UNSUPPORTED_Y:a}},function(e,n,t){var i=t(5),r=t(7),a=t(58);e.exports=function(e,n,t){var o,s;return a&&i(o=n.constructor)&&o!==t&&r(s=o.prototype)&&s!==t.prototype&&a(e,s),e}},function(e,n,t){var i=t(13);e.exports=function(e,n){return void 0===e?arguments.length<2?"":n:i(e)}},function(e,n,t){t(1)({target:"Object",stat:!0,sham:!t(8)},{create:t(29)})},function(e,n){e.exports=function(e,n){for(var t=-1,i=n.length,r=e.length;++t<i;)e[r+t]=n[t];return e}},function(e,n){var t="object"==typeof global&&global&&global.Object===Object&&global;e.exports=t},function(e,n,t){var i=t(83),r=t(273),a=t(274),o=t(275),s=t(276),l=t(277);function u(e){var n=this.__data__=new i(e);this.size=n.size}u.prototype.clear=r,u.prototype.delete=a,u.prototype.get=o,u.prototype.has=s,u.prototype.set=l,e.exports=u},function(e,n){e.exports=function(e,n){return e===n||e!=e&&n!=n}},function(e,n,t){var i=t(52),r=t(118);e.exports=function(e){if(!r(e))return!1;var n=i(e);return"[object Function]"==n||"[object GeneratorFunction]"==n||"[object AsyncFunction]"==n||"[object Proxy]"==n}},function(e,n){var t=Function.prototype.toString;e.exports=function(e){if(null!=e){try{return t.call(e)}catch(e){}try{return e+""}catch(e){}}return""}},function(e,n,t){var i=t(294),r=t(43);e.exports=function e(n,t,a,o,s){return n===t||(null==n||null==t||!r(n)&&!r(t)?n!=n&&t!=t:i(n,t,a,o,e,s))}},function(e,n,t){var i=t(186),r=t(297),a=t(187);e.exports=function(e,n,t,o,s,l){var u=1&t,c=e.length,d=n.length;if(c!=d&&!(u&&d>c))return!1;var p=l.get(e),g=l.get(n);if(p&&g)return p==n&&g==e;var y=-1,m=!0,M=2&t?new i:void 0;for(l.set(e,n),l.set(n,e);++y<c;){var h=e[y],T=n[y];if(o)var I=u?o(T,h,y,n,e,l):o(h,T,y,e,n,l);if(void 0!==I){if(I)continue;m=!1;break}if(M){if(!r(n,(function(e,n){if(!a(M,n)&&(h===e||s(h,e,t,o,l)))return M.push(n)}))){m=!1;break}}else if(h!==T&&!s(h,T,t,o,l)){m=!1;break}}return l.delete(e),l.delete(n),m}},function(e,n,t){var i=t(119),r=t(295),a=t(296);function o(e){var n=-1,t=null==e?0:e.length;for(this.__data__=new i;++n<t;)this.add(e[n])}o.prototype.add=o.prototype.push=r,o.prototype.has=a,e.exports=o},function(e,n){e.exports=function(e,n){return e.has(n)}},function(e,n,t){var i=t(307),r=t(313),a=t(192);e.exports=function(e){return a(e)?i(e):r(e)}},function(e,n,t){(function(e){var i=t(27),r=t(309),a=n&&!n.nodeType&&n,o=a&&"object"==typeof e&&e&&!e.nodeType&&e,s=o&&o.exports===a?i.Buffer:void 0,l=(s?s.isBuffer:void 0)||r;e.exports=l}).call(this,t(140)(e))},function(e,n){var t=/^(?:0|[1-9]\d*)$/;e.exports=function(e,n){var i=typeof e;return!!(n=null==n?9007199254740991:n)&&("number"==i||"symbol"!=i&&t.test(e))&&e>-1&&e%1==0&&e<n}},function(e,n,t){var i=t(310),r=t(311),a=t(312),o=a&&a.isTypedArray,s=o?r(o):i;e.exports=s},function(e,n,t){var i=t(182),r=t(121);e.exports=function(e){return null!=e&&r(e.length)&&!i(e)}},function(e,n,t){var i=t(38)(t(27),"Set");e.exports=i},function(e,n,t){var i=t(118);e.exports=function(e){return e==e&&!i(e)}},function(e,n){e.exports=function(e,n){return function(t){return null!=t&&(t[e]===n&&(void 0!==n||e in Object(t)))}}},function(e,n,t){var i=t(197),r=t(87);e.exports=function(e,n){for(var t=0,a=(n=i(n,e)).length;null!=e&&t<a;)e=e[r(n[t++])];return t&&t==a?e:void 0}},function(e,n,t){var i=t(24),r=t(122),a=t(324),o=t(327);e.exports=function(e,n){return i(e)?e:r(e,n)?[e]:a(o(e))}},function(e,n,t){"use strict";t.d(n,"a",(function(){return i}));t(88);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}},function(e,n,t){},function(e,n,t){},function(e,n,t){t(1)({target:"Object",stat:!0},{setPrototypeOf:t(58)})},function(e,n,t){var i=t(1),r=t(17),a=t(30),o=t(372),s=t(157),l=t(10),u=t(7),c=t(29),d=t(3),p=r("Reflect","construct"),g=Object.prototype,y=[].push,m=d((function(){function e(){}return!(p((function(){}),[],e)instanceof e)})),M=!d((function(){p((function(){}))})),h=m||M;i({target:"Reflect",stat:!0,forced:h,sham:h},{construct:function(e,n){s(e),l(n);var t=arguments.length<3?e:s(arguments[2]);if(M&&!m)return p(e,n,t);if(e==t){switch(n.length){case 0:return new e;case 1:return new e(n[0]);case 2:return new e(n[0],n[1]);case 3:return new e(n[0],n[1],n[2]);case 4:return new e(n[0],n[1],n[2],n[3])}var i=[null];return a(y,i,n),new(a(o,e,i))}var r=t.prototype,d=c(u(r)?r:g),h=a(e,d,n);return u(h)?h:d}})},function(e,n,t){var i=t(1),r=t(0),a=t(50);i({global:!0},{Reflect:{}}),a(r.Reflect,"Reflect",!0)},function(e,n,t){},function(e,n,t){},function(e,n,t){var i=t(260),r=t(265),a=t(336),o=t(344),s=t(353),l=t(354),u=a((function(e){var n=l(e);return s(n)&&(n=void 0),o(i(e,1,s,!0),r(n,2))}));e.exports=u},function(e,n,t){"use strict";
/*!
 * escape-html
 * Copyright(c) 2012-2013 TJ Holowaychuk
 * Copyright(c) 2015 Andreas Lubbe
 * Copyright(c) 2015 Tiancheng "Timothy" Gu
 * MIT Licensed
 */var i=/["'&<>]/;e.exports=function(e){var n,t=""+e,r=i.exec(t);if(!r)return t;var a="",o=0,s=0;for(o=r.index;o<t.length;o++){switch(t.charCodeAt(o)){case 34:n="&quot;";break;case 38:n="&amp;";break;case 39:n="&#39;";break;case 60:n="&lt;";break;case 62:n="&gt;";break;default:continue}s!==o&&(a+=t.substring(s,o)),s=o+1,a+=n}return s!==o?a+t.substring(s,o):a}},function(e,n,t){!function(){"use strict";e.exports={polyfill:function(){var e=window,n=document;if(!("scrollBehavior"in n.documentElement.style)||!0===e.__forceSmoothScrollPolyfill__){var t,i=e.HTMLElement||e.Element,r={scroll:e.scroll||e.scrollTo,scrollBy:e.scrollBy,elementScroll:i.prototype.scroll||s,scrollIntoView:i.prototype.scrollIntoView},a=e.performance&&e.performance.now?e.performance.now.bind(e.performance):Date.now,o=(t=e.navigator.userAgent,new RegExp(["MSIE ","Trident/","Edge/"].join("|")).test(t)?1:0);e.scroll=e.scrollTo=function(){void 0!==arguments[0]&&(!0!==l(arguments[0])?y.call(e,n.body,void 0!==arguments[0].left?~~arguments[0].left:e.scrollX||e.pageXOffset,void 0!==arguments[0].top?~~arguments[0].top:e.scrollY||e.pageYOffset):r.scroll.call(e,void 0!==arguments[0].left?arguments[0].left:"object"!=typeof arguments[0]?arguments[0]:e.scrollX||e.pageXOffset,void 0!==arguments[0].top?arguments[0].top:void 0!==arguments[1]?arguments[1]:e.scrollY||e.pageYOffset))},e.scrollBy=function(){void 0!==arguments[0]&&(l(arguments[0])?r.scrollBy.call(e,void 0!==arguments[0].left?arguments[0].left:"object"!=typeof arguments[0]?arguments[0]:0,void 0!==arguments[0].top?arguments[0].top:void 0!==arguments[1]?arguments[1]:0):y.call(e,n.body,~~arguments[0].left+(e.scrollX||e.pageXOffset),~~arguments[0].top+(e.scrollY||e.pageYOffset)))},i.prototype.scroll=i.prototype.scrollTo=function(){if(void 0!==arguments[0])if(!0!==l(arguments[0])){var e=arguments[0].left,n=arguments[0].top;y.call(this,this,void 0===e?this.scrollLeft:~~e,void 0===n?this.scrollTop:~~n)}else{if("number"==typeof arguments[0]&&void 0===arguments[1])throw new SyntaxError("Value could not be converted");r.elementScroll.call(this,void 0!==arguments[0].left?~~arguments[0].left:"object"!=typeof arguments[0]?~~arguments[0]:this.scrollLeft,void 0!==arguments[0].top?~~arguments[0].top:void 0!==arguments[1]?~~arguments[1]:this.scrollTop)}},i.prototype.scrollBy=function(){void 0!==arguments[0]&&(!0!==l(arguments[0])?this.scroll({left:~~arguments[0].left+this.scrollLeft,top:~~arguments[0].top+this.scrollTop,behavior:arguments[0].behavior}):r.elementScroll.call(this,void 0!==arguments[0].left?~~arguments[0].left+this.scrollLeft:~~arguments[0]+this.scrollLeft,void 0!==arguments[0].top?~~arguments[0].top+this.scrollTop:~~arguments[1]+this.scrollTop))},i.prototype.scrollIntoView=function(){if(!0!==l(arguments[0])){var t=p(this),i=t.getBoundingClientRect(),a=this.getBoundingClientRect();t!==n.body?(y.call(this,t,t.scrollLeft+a.left-i.left,t.scrollTop+a.top-i.top),"fixed"!==e.getComputedStyle(t).position&&e.scrollBy({left:i.left,top:i.top,behavior:"smooth"})):e.scrollBy({left:a.left,top:a.top,behavior:"smooth"})}else r.scrollIntoView.call(this,void 0===arguments[0]||arguments[0])}}function s(e,n){this.scrollLeft=e,this.scrollTop=n}function l(e){if(null===e||"object"!=typeof e||void 0===e.behavior||"auto"===e.behavior||"instant"===e.behavior)return!0;if("object"==typeof e&&"smooth"===e.behavior)return!1;throw new TypeError("behavior member of ScrollOptions "+e.behavior+" is not a valid value for enumeration ScrollBehavior.")}function u(e,n){return"Y"===n?e.clientHeight+o<e.scrollHeight:"X"===n?e.clientWidth+o<e.scrollWidth:void 0}function c(n,t){var i=e.getComputedStyle(n,null)["overflow"+t];return"auto"===i||"scroll"===i}function d(e){var n=u(e,"Y")&&c(e,"Y"),t=u(e,"X")&&c(e,"X");return n||t}function p(e){for(;e!==n.body&&!1===d(e);)e=e.parentNode||e.host;return e}function g(n){var t,i,r,o,s=(a()-n.startTime)/468;o=s=s>1?1:s,t=.5*(1-Math.cos(Math.PI*o)),i=n.startX+(n.x-n.startX)*t,r=n.startY+(n.y-n.startY)*t,n.method.call(n.scrollable,i,r),i===n.x&&r===n.y||e.requestAnimationFrame(g.bind(e,n))}function y(t,i,o){var l,u,c,d,p=a();t===n.body?(l=e,u=e.scrollX||e.pageXOffset,c=e.scrollY||e.pageYOffset,d=r.scroll):(l=t,u=t.scrollLeft,c=t.scrollTop,d=s),g({scrollable:l,method:d,startTime:p,startX:u,startY:c,x:i,y:o})}}}}()},function(e,n){var t=/^\s+|\s+$/g,i=/^[-+]0x[0-9a-f]+$/i,r=/^0b[01]+$/i,a=/^0o[0-7]+$/i,o=parseInt,s="object"==typeof global&&global&&global.Object===Object&&global,l="object"==typeof self&&self&&self.Object===Object&&self,u=s||l||Function("return this")(),c=Object.prototype.toString,d=Math.max,p=Math.min,g=function(){return u.Date.now()};function y(e){var n=typeof e;return!!e&&("object"==n||"function"==n)}function m(e){if("number"==typeof e)return e;if(function(e){return"symbol"==typeof e||function(e){return!!e&&"object"==typeof e}(e)&&"[object Symbol]"==c.call(e)}(e))return NaN;if(y(e)){var n="function"==typeof e.valueOf?e.valueOf():e;e=y(n)?n+"":n}if("string"!=typeof e)return 0===e?e:+e;e=e.replace(t,"");var s=r.test(e);return s||a.test(e)?o(e.slice(2),s?2:8):i.test(e)?NaN:+e}e.exports=function(e,n,t){var i,r,a,o,s,l,u=0,c=!1,M=!1,h=!0;if("function"!=typeof e)throw new TypeError("Expected a function");function T(n){var t=i,a=r;return i=r=void 0,u=n,o=e.apply(a,t)}function I(e){return u=e,s=setTimeout(N,n),c?T(e):o}function f(e){var t=e-l;return void 0===l||t>=n||t<0||M&&e-u>=a}function N(){var e=g();if(f(e))return j(e);s=setTimeout(N,function(e){var t=n-(e-l);return M?p(t,a-(e-u)):t}(e))}function j(e){return s=void 0,h&&i?T(e):(i=r=void 0,o)}function w(){var e=g(),t=f(e);if(i=arguments,r=this,l=e,t){if(void 0===s)return I(l);if(M)return s=setTimeout(N,n),T(l)}return void 0===s&&(s=setTimeout(N,n)),o}return n=m(n)||0,y(t)&&(c=!!t.leading,a=(M="maxWait"in t)?d(m(t.maxWait)||0,n):a,h="trailing"in t?!!t.trailing:h),w.cancel=function(){void 0!==s&&clearTimeout(s),u=0,i=l=r=s=void 0},w.flush=function(){return void 0===s?o:j(g())},w}},function(e,n,t){"use strict";var i=t(1),r=t(102).includes,a=t(129);i({target:"Array",proto:!0},{includes:function(e){return r(this,e,arguments.length>1?arguments[1]:void 0)}}),a("includes")},function(e,n,t){var i=t(2),r=t(15),a=Date.prototype,o=i(a.toString),s=i(a.getTime);"Invalid Date"!=String(new Date(NaN))&&r(a,"toString",(function(){var e=s(this);return e==e?o(this):"Invalid Date"}))},function(e,n,t){"use strict";var i=t(1),r=t(2),a=t(33),o=t(16),s=t(22),l=t(13),u=t(3),c=t(222),d=t(40),p=t(367),g=t(368),y=t(44),m=t(369),M=[],h=r(M.sort),T=r(M.push),I=u((function(){M.sort(void 0)})),f=u((function(){M.sort(null)})),N=d("sort"),j=!u((function(){if(y)return y<70;if(!(p&&p>3)){if(g)return!0;if(m)return m<603;var e,n,t,i,r="";for(e=65;e<76;e++){switch(n=String.fromCharCode(e),e){case 66:case 69:case 70:case 72:t=3;break;case 68:case 71:t=4;break;default:t=2}for(i=0;i<47;i++)M.push({k:n+i,v:t})}for(M.sort((function(e,n){return n.v-e.v})),i=0;i<M.length;i++)n=M[i].k.charAt(0),r.charAt(r.length-1)!==n&&(r+=n);return"DGBEFHACIJK"!==r}}));i({target:"Array",proto:!0,forced:I||!f||!N||!j},{sort:function(e){void 0!==e&&a(e);var n=o(this);if(j)return void 0===e?h(n):h(n,e);var t,i,r=[],u=s(n);for(i=0;i<u;i++)i in n&&T(r,n[i]);for(c(r,function(e){return function(n,t){return void 0===t?-1:void 0===n?1:void 0!==e?+e(n,t)||0:l(n)>l(t)?1:-1}}(e)),t=r.length,i=0;i<t;)n[i]=r[i++];for(;i<u;)delete n[i++];return n}})},function(e,n,t){"use strict";var i=t(30),r=t(12),a=t(2),o=t(133),s=t(167),l=t(10),u=t(20),c=t(110),d=t(139),p=t(49),g=t(13),y=t(45),m=t(114),M=t(134),h=t(82),T=t(174),I=t(3),f=T.UNSUPPORTED_Y,N=Math.min,j=[].push,w=a(/./.exec),L=a(j),D=a("".slice);o("split",(function(e,n,t){var a;return a="c"=="abbc".split(/(b)*/)[1]||4!="test".split(/(?:)/,-1).length||2!="ab".split(/(?:ab)*/).length||4!=".".split(/(.?)(.?)/).length||".".split(/()()/).length>1||"".split(/.?/).length?function(e,t){var a=g(u(this)),o=void 0===t?4294967295:t>>>0;if(0===o)return[];if(void 0===e)return[a];if(!s(e))return r(n,a,e,o);for(var l,c,d,p=[],y=(e.ignoreCase?"i":"")+(e.multiline?"m":"")+(e.unicode?"u":"")+(e.sticky?"y":""),M=0,T=new RegExp(e.source,y+"g");(l=r(h,T,a))&&!((c=T.lastIndex)>M&&(L(p,D(a,M,l.index)),l.length>1&&l.index<a.length&&i(j,p,m(l,1)),d=l[0].length,M=c,p.length>=o));)T.lastIndex===l.index&&T.lastIndex++;return M===a.length?!d&&w(T,"")||L(p,""):L(p,D(a,M)),p.length>o?m(p,0,o):p}:"0".split(void 0,0).length?function(e,t){return void 0===e&&0===t?[]:r(n,this,e,t)}:n,[function(n,t){var i=u(this),o=null==n?void 0:y(n,e);return o?r(o,n,i,t):r(a,g(i),n,t)},function(e,i){var r=l(this),o=g(e),s=t(a,r,o,i,a!==n);if(s.done)return s.value;var u=c(r,RegExp),y=r.unicode,m=(r.ignoreCase?"i":"")+(r.multiline?"m":"")+(r.unicode?"u":"")+(f?"g":"y"),h=new u(f?"^(?:"+r.source+")":r,m),T=void 0===i?4294967295:i>>>0;if(0===T)return[];if(0===o.length)return null===M(h,o)?[o]:[];for(var I=0,j=0,w=[];j<o.length;){h.lastIndex=f?0:j;var z,b=M(h,f?D(o,j):o);if(null===b||(z=N(p(h.lastIndex+(f?j:0)),o.length))===I)j=d(o,j,y);else{if(L(w,D(o,I,j)),w.length===T)return w;for(var k=1;k<=b.length-1;k++)if(L(w,b[k]),w.length===T)return w;j=I=z}}return L(w,D(o,I)),w}]}),!!I((function(){var e=/(?:)/,n=e.exec;e.exec=function(){return n.apply(this,arguments)};var t="ab".split(e);return 2!==t.length||"a"!==t[0]||"b"!==t[1]})),f)},function(e,n,t){"use strict";var i=t(1),r=t(2),a=t(102).indexOf,o=t(40),s=r([].indexOf),l=!!s&&1/s([1],1,-0)<0,u=o("indexOf");i({target:"Array",proto:!0,forced:l||!u},{indexOf:function(e){var n=arguments.length>1?arguments[1]:void 0;return l?s(this,e,n)||0:a(this,e,n)}})},function(e,n,t){"use strict";var i=t(1),r=t(2),a=t(112),o=t(20),s=t(13),l=t(113),u=r("".indexOf);i({target:"String",proto:!0,forced:!l("includes")},{includes:function(e){return!!~u(s(o(this)),s(a(e)),arguments.length>1?arguments[1]:void 0)}})},function(e,n,t){"use strict";var i=t(1),r=t(2),a=t(54),o=t(18),s=t(40),l=r([].join),u=a!=Object,c=s("join",",");i({target:"Array",proto:!0,forced:u||!c},{join:function(e){return l(o(this),void 0===e?",":e)}})},function(e,n,t){"use strict";var i=t(1),r=t(48).some;i({target:"Array",proto:!0,forced:!t(40)("some")},{some:function(e){return r(this,e,arguments.length>1?arguments[1]:void 0)}})},function(e,n,t){"use strict";var i=t(151).IteratorPrototype,r=t(29),a=t(42),o=t(50),s=t(56),l=function(){return this};e.exports=function(e,n,t,u){var c=n+" Iterator";return e.prototype=r(i,{next:a(+!u,t)}),o(e,c,!1,!0),s[c]=l,e}},function(e,n,t){var i=t(15);e.exports=function(e,n,t){for(var r in n)i(e,r,n[r],t);return e}},function(e,n,t){var i=t(0),r=t(35),a=i.TypeError;e.exports=function(e,n){if(r(n,e))return e;throw a("Incorrect invocation")}},function(e,n,t){"use strict";var i=t(10);e.exports=function(){var e=i(this),n="";return e.global&&(n+="g"),e.ignoreCase&&(n+="i"),e.multiline&&(n+="m"),e.dotAll&&(n+="s"),e.unicode&&(n+="u"),e.sticky&&(n+="y"),n}},function(e,n,t){var i=t(114),r=Math.floor,a=function(e,n){var t=e.length,l=r(t/2);return t<8?o(e,n):s(e,a(i(e,0,l),n),a(i(e,l),n),n)},o=function(e,n){for(var t,i,r=e.length,a=1;a<r;){for(i=a,t=e[a];i&&n(e[i-1],t)>0;)e[i]=e[--i];i!==a++&&(e[i]=t)}return e},s=function(e,n,t,i){for(var r=n.length,a=t.length,o=0,s=0;o<r||s<a;)e[o+s]=o<r&&s<a?i(n[o],t[s])<=0?n[o++]:t[s++]:o<r?n[o++]:t[s++];return e};e.exports=a},function(e,n,t){e.exports=t(375)},function(e,n,t){var i=t(0),r=t(12),a=t(5),o=t(7),s=i.TypeError;e.exports=function(e,n){var t,i;if("string"===n&&a(t=e.toString)&&!o(i=r(t,e)))return i;if(a(t=e.valueOf)&&!o(i=r(t,e)))return i;if("string"!==n&&a(t=e.toString)&&!o(i=r(t,e)))return i;throw s("Can't convert object to primitive value")}},function(e,n,t){var i=t(0),r=t(5),a=t(76),o=i.WeakMap;e.exports=r(o)&&/native code/.test(a(o))},function(e,n,t){var i=t(0),r=t(5),a=i.String,o=i.TypeError;e.exports=function(e){if("object"==typeof e||r(e))return e;throw o("Can't set "+a(e)+" as a prototype")}},function(e,n,t){"use strict";var i,r,a,o,s=t(1),l=t(21),u=t(0),c=t(17),d=t(12),p=t(153),g=t(15),y=t(219),m=t(58),M=t(50),h=t(228),T=t(33),I=t(5),f=t(7),N=t(220),j=t(76),w=t(229),L=t(156),D=t(110),z=t(158).set,b=t(230),k=t(160),x=t(233),C=t(161),A=t(234),v=t(235),S=t(41),O=t(107),E=t(6),U=t(236),Y=t(78),Q=t(44),R=E("species"),q="Promise",Z=S.getterFor(q),P=S.set,W=S.getterFor(q),G=p&&p.prototype,F=p,B=G,V=u.TypeError,J=u.document,H=u.process,K=C.f,_=K,X=!!(J&&J.createEvent&&u.dispatchEvent),$=I(u.PromiseRejectionEvent),ee=!1,ne=O(q,(function(){var e=j(F),n=e!==String(F);if(!n&&66===Q)return!0;if(l&&!B.finally)return!0;if(Q>=51&&/native code/.test(e))return!1;var t=new F((function(e){e(1)})),i=function(e){e((function(){}),(function(){}))};return(t.constructor={})[R]=i,!(ee=t.then((function(){}))instanceof i)||!n&&U&&!$})),te=ne||!L((function(e){F.all(e).catch((function(){}))})),ie=function(e){var n;return!(!f(e)||!I(n=e.then))&&n},re=function(e,n){var t,i,r,a=n.value,o=1==n.state,s=o?e.ok:e.fail,l=e.resolve,u=e.reject,c=e.domain;try{s?(o||(2===n.rejection&&ue(n),n.rejection=1),!0===s?t=a:(c&&c.enter(),t=s(a),c&&(c.exit(),r=!0)),t===e.promise?u(V("Promise-chain cycle")):(i=ie(t))?d(i,t,l,u):l(t)):u(a)}catch(e){c&&!r&&c.exit(),u(e)}},ae=function(e,n){e.notified||(e.notified=!0,b((function(){for(var t,i=e.reactions;t=i.get();)re(t,e);e.notified=!1,n&&!e.rejection&&se(e)})))},oe=function(e,n,t){var i,r;X?((i=J.createEvent("Event")).promise=n,i.reason=t,i.initEvent(e,!1,!0),u.dispatchEvent(i)):i={promise:n,reason:t},!$&&(r=u["on"+e])?r(i):"unhandledrejection"===e&&x("Unhandled promise rejection",t)},se=function(e){d(z,u,(function(){var n,t=e.facade,i=e.value;if(le(e)&&(n=A((function(){Y?H.emit("unhandledRejection",i,t):oe("unhandledrejection",t,i)})),e.rejection=Y||le(e)?2:1,n.error))throw n.value}))},le=function(e){return 1!==e.rejection&&!e.parent},ue=function(e){d(z,u,(function(){var n=e.facade;Y?H.emit("rejectionHandled",n):oe("rejectionhandled",n,e.value)}))},ce=function(e,n,t){return function(i){e(n,i,t)}},de=function(e,n,t){e.done||(e.done=!0,t&&(e=t),e.value=n,e.state=2,ae(e,!0))},pe=function(e,n,t){if(!e.done){e.done=!0,t&&(e=t);try{if(e.facade===n)throw V("Promise can't be resolved itself");var i=ie(n);i?b((function(){var t={done:!1};try{d(i,n,ce(pe,t,e),ce(de,t,e))}catch(n){de(t,n,e)}})):(e.value=n,e.state=1,ae(e,!1))}catch(n){de({done:!1},n,e)}}};if(ne&&(B=(F=function(e){N(this,B),T(e),d(i,this);var n=Z(this);try{e(ce(pe,n),ce(de,n))}catch(e){de(n,e)}}).prototype,(i=function(e){P(this,{type:q,done:!1,notified:!1,parent:!1,reactions:new v,rejection:!1,state:0,value:void 0})}).prototype=y(B,{then:function(e,n){var t=W(this),i=K(D(this,F));return t.parent=!0,i.ok=!I(e)||e,i.fail=I(n)&&n,i.domain=Y?H.domain:void 0,0==t.state?t.reactions.add(i):b((function(){re(i,t)})),i.promise},catch:function(e){return this.then(void 0,e)}}),r=function(){var e=new i,n=Z(e);this.promise=e,this.resolve=ce(pe,n),this.reject=ce(de,n)},C.f=K=function(e){return e===F||e===a?new r(e):_(e)},!l&&I(p)&&G!==Object.prototype)){o=G.then,ee||(g(G,"then",(function(e,n){var t=this;return new F((function(e,n){d(o,t,e,n)})).then(e,n)}),{unsafe:!0}),g(G,"catch",B.catch,{unsafe:!0}));try{delete G.constructor}catch(e){}m&&m(G,B)}s({global:!0,wrap:!0,forced:ne},{Promise:F}),M(F,q,!1,!0),h(q),a=c(q),s({target:q,stat:!0,forced:ne},{reject:function(e){var n=K(this);return d(n.reject,void 0,e),n.promise}}),s({target:q,stat:!0,forced:l||ne},{resolve:function(e){return k(l&&this===a?F:this,e)}}),s({target:q,stat:!0,forced:te},{all:function(e){var n=this,t=K(n),i=t.resolve,r=t.reject,a=A((function(){var t=T(n.resolve),a=[],o=0,s=1;w(e,(function(e){var l=o++,u=!1;s++,d(t,n,e).then((function(e){u||(u=!0,a[l]=e,--s||i(a))}),r)})),--s||i(a)}));return a.error&&r(a.value),t.promise},race:function(e){var n=this,t=K(n),i=t.reject,r=A((function(){var r=T(n.resolve);w(e,(function(e){d(r,n,e).then(t.resolve,i)}))}));return r.error&&i(r.value),t.promise}})},function(e,n,t){"use strict";var i=t(17),r=t(14),a=t(6),o=t(8),s=a("species");e.exports=function(e){var n=i(e),t=r.f;o&&n&&!n[s]&&t(n,s,{configurable:!0,get:function(){return this}})}},function(e,n,t){var i=t(0),r=t(47),a=t(12),o=t(10),s=t(74),l=t(154),u=t(22),c=t(35),d=t(137),p=t(96),g=t(155),y=i.TypeError,m=function(e,n){this.stopped=e,this.result=n},M=m.prototype;e.exports=function(e,n,t){var i,h,T,I,f,N,j,w=t&&t.that,L=!(!t||!t.AS_ENTRIES),D=!(!t||!t.IS_ITERATOR),z=!(!t||!t.INTERRUPTED),b=r(n,w),k=function(e){return i&&g(i,"normal",e),new m(!0,e)},x=function(e){return L?(o(e),z?b(e[0],e[1],k):b(e[0],e[1])):z?b(e,k):b(e)};if(D)i=e;else{if(!(h=p(e)))throw y(s(e)+" is not iterable");if(l(h)){for(T=0,I=u(e);I>T;T++)if((f=x(e[T]))&&c(M,f))return f;return new m(!1)}i=d(e,h)}for(N=i.next;!(j=a(N,i)).done;){try{f=x(j.value)}catch(e){g(i,"throw",e)}if("object"==typeof f&&f&&c(M,f))return f}return new m(!1)}},function(e,n,t){var i,r,a,o,s,l,u,c,d=t(0),p=t(47),g=t(26).f,y=t(158).set,m=t(159),M=t(231),h=t(232),T=t(78),I=d.MutationObserver||d.WebKitMutationObserver,f=d.document,N=d.process,j=d.Promise,w=g(d,"queueMicrotask"),L=w&&w.value;L||(i=function(){var e,n;for(T&&(e=N.domain)&&e.exit();r;){n=r.fn,r=r.next;try{n()}catch(e){throw r?o():a=void 0,e}}a=void 0,e&&e.enter()},m||T||h||!I||!f?!M&&j&&j.resolve?((u=j.resolve(void 0)).constructor=j,c=p(u.then,u),o=function(){c(i)}):T?o=function(){N.nextTick(i)}:(y=p(y,d),o=function(){y(i)}):(s=!0,l=f.createTextNode(""),new I(i).observe(l,{characterData:!0}),o=function(){l.data=s=!s})),e.exports=L||function(e){var n={fn:e,next:void 0};a&&(a.next=n),r||(r=n,o()),a=n}},function(e,n,t){var i=t(32),r=t(0);e.exports=/ipad|iphone|ipod/i.test(i)&&void 0!==r.Pebble},function(e,n,t){var i=t(32);e.exports=/web0s(?!.*chrome)/i.test(i)},function(e,n,t){var i=t(0);e.exports=function(e,n){var t=i.console;t&&t.error&&(1==arguments.length?t.error(e):t.error(e,n))}},function(e,n){e.exports=function(e){try{return{error:!1,value:e()}}catch(e){return{error:!0,value:e}}}},function(e,n){var t=function(){this.head=null,this.tail=null};t.prototype={add:function(e){var n={item:e,next:null};this.head?this.tail.next=n:this.head=n,this.tail=n},get:function(){var e=this.head;if(e)return this.head=e.next,this.tail===e&&(this.tail=null),e.item}},e.exports=t},function(e,n){e.exports="object"==typeof window},function(e,n,t){var i=t(1),r=t(238);i({target:"Object",stat:!0,forced:Object.assign!==r},{assign:r})},function(e,n,t){"use strict";var i=t(8),r=t(2),a=t(12),o=t(3),s=t(67),l=t(106),u=t(95),c=t(16),d=t(54),p=Object.assign,g=Object.defineProperty,y=r([].concat);e.exports=!p||o((function(){if(i&&1!==p({b:1},p(g({},"a",{enumerable:!0,get:function(){g(this,"b",{value:3,enumerable:!1})}}),{b:2})).b)return!0;var e={},n={},t=Symbol();return e[t]=7,"abcdefghijklmnopqrst".split("").forEach((function(e){n[e]=e})),7!=p({},e)[t]||"abcdefghijklmnopqrst"!=s(p({},n)).join("")}))?function(e,n){for(var t=c(e),r=arguments.length,o=1,p=l.f,g=u.f;r>o;)for(var m,M=d(arguments[o++]),h=p?y(s(M),p(M)):s(M),T=h.length,I=0;T>I;)m=h[I++],i&&!a(g,M,m)||(t[m]=M[m]);return t}:p},function(e,n,t){"use strict";var i=t(1),r=t(21),a=t(153),o=t(3),s=t(17),l=t(5),u=t(110),c=t(160),d=t(15);if(i({target:"Promise",proto:!0,real:!0,forced:!!a&&o((function(){a.prototype.finally.call({then:function(){}},(function(){}))}))},{finally:function(e){var n=u(this,s("Promise")),t=l(e);return this.then(t?function(t){return c(n,e()).then((function(){return t}))}:e,t?function(t){return c(n,e()).then((function(){throw t}))}:e)}}),!r&&l(a)){var p=s("Promise").prototype.finally;a.prototype.finally!==p&&d(a.prototype,"finally",p,{unsafe:!0})}},function(e,n,t){"use strict";var i=t(109),r=t(68);e.exports=i?{}.toString:function(){return"[object "+r(this)+"]"}},function(e,n,t){var i=t(0),r=t(51),a=t(77),o=t(7),s=t(6)("species"),l=i.Array;e.exports=function(e){var n;return r(e)&&(n=e.constructor,(a(n)&&(n===l||r(n.prototype))||o(n)&&null===(n=n[s]))&&(n=void 0)),void 0===n?l:n}},function(e,n,t){"use strict";var i=t(1),r=t(243).left,a=t(40),o=t(44),s=t(78);i({target:"Array",proto:!0,forced:!a("reduce")||!s&&o>79&&o<83},{reduce:function(e){var n=arguments.length;return r(this,e,n,n>1?arguments[1]:void 0)}})},function(e,n,t){var i=t(0),r=t(33),a=t(16),o=t(54),s=t(22),l=i.TypeError,u=function(e){return function(n,t,i,u){r(t);var c=a(n),d=o(c),p=s(c),g=e?p-1:0,y=e?-1:1;if(i<2)for(;;){if(g in d){u=d[g],g+=y;break}if(g+=y,e?g<0:p<=g)throw l("Reduce of empty array with no initial value")}for(;e?g>=0:p>g;g+=y)g in d&&(u=t(u,d[g],g,c));return u}};e.exports={left:u(!1),right:u(!0)}},function(e,n,t){var i=t(1),r=t(169),a=t(3),o=t(7),s=t(245).onFreeze,l=Object.freeze;i({target:"Object",stat:!0,forced:a((function(){l(1)})),sham:!r},{freeze:function(e){return l&&o(e)?l(s(e)):e}})},function(e,n,t){var i=t(1),r=t(2),a=t(55),o=t(7),s=t(11),l=t(14).f,u=t(57),c=t(170),d=t(246),p=t(70),g=t(169),y=!1,m=p("meta"),M=0,h=function(e){l(e,m,{value:{objectID:"O"+M++,weakData:{}}})},T=e.exports={enable:function(){T.enable=function(){},y=!0;var e=u.f,n=r([].splice),t={};t[m]=1,e(t).length&&(u.f=function(t){for(var i=e(t),r=0,a=i.length;r<a;r++)if(i[r]===m){n(i,r,1);break}return i},i({target:"Object",stat:!0,forced:!0},{getOwnPropertyNames:c.f}))},fastKey:function(e,n){if(!o(e))return"symbol"==typeof e?e:("string"==typeof e?"S":"P")+e;if(!s(e,m)){if(!d(e))return"F";if(!n)return"E";h(e)}return e[m].objectID},getWeakData:function(e,n){if(!s(e,m)){if(!d(e))return!0;if(!n)return!1;h(e)}return e[m].weakData},onFreeze:function(e){return g&&y&&d(e)&&!s(e,m)&&h(e),e}};a[m]=!0},function(e,n,t){var i=t(3),r=t(7),a=t(31),o=t(247),s=Object.isExtensible,l=i((function(){s(1)}));e.exports=l||o?function(e){return!!r(e)&&((!o||"ArrayBuffer"!=a(e))&&(!s||s(e)))}:s},function(e,n,t){var i=t(3);e.exports=i((function(){if("function"==typeof ArrayBuffer){var e=new ArrayBuffer(8);Object.isExtensible(e)&&Object.defineProperty(e,"a",{value:8})}}))},function(e,n,t){var i=t(0);e.exports=i},function(e,n,t){"use strict";var i=t(0),r=t(47),a=t(12),o=t(16),s=t(250),l=t(154),u=t(77),c=t(22),d=t(60),p=t(137),g=t(96),y=i.Array;e.exports=function(e){var n=o(e),t=u(this),i=arguments.length,m=i>1?arguments[1]:void 0,M=void 0!==m;M&&(m=r(m,i>2?arguments[2]:void 0));var h,T,I,f,N,j,w=g(n),L=0;if(!w||this==y&&l(w))for(h=c(n),T=t?new this(h):y(h);h>L;L++)j=M?m(n[L],L):n[L],d(T,L,j);else for(N=(f=p(n,w)).next,T=t?new this:[];!(I=a(N,f)).done;L++)j=M?s(f,m,[I.value,L],!0):I.value,d(T,L,j);return T.length=L,T}},function(e,n,t){var i=t(10),r=t(155);e.exports=function(e,n,t,a){try{return a?n(i(t)[0],t[1]):n(t)}catch(n){r(e,"throw",n)}}},function(e,n,t){var i=t(3),r=t(0).RegExp;e.exports=i((function(){var e=r(".","s");return!(e.dotAll&&e.exec("\n")&&"s"===e.flags)}))},function(e,n,t){var i=t(3),r=t(0).RegExp;e.exports=i((function(){var e=r("(?<a>b)","g");return"b"!==e.exec("b").groups.a||"bc"!=="b".replace(e,"$<a>c")}))},function(e,n,t){"use strict";var i=t(17),r=t(11),a=t(25),o=t(35),s=t(58),l=t(105),u=t(175),c=t(176),d=t(254),p=t(255),g=t(256),y=t(21);e.exports=function(e,n,t,m){var M=m?2:1,h=e.split("."),T=h[h.length-1],I=i.apply(null,h);if(I){var f=I.prototype;if(!y&&r(f,"cause")&&delete f.cause,!t)return I;var N=i("Error"),j=n((function(e,n){var t=c(m?n:e,void 0),i=m?new I(e):new I;return void 0!==t&&a(i,"message",t),g&&a(i,"stack",p(i.stack,2)),this&&o(f,this)&&u(i,this,j),arguments.length>M&&d(i,arguments[M]),i}));if(j.prototype=f,"Error"!==T&&(s?s(j,N):l(j,N,{name:!0})),l(j,I),!y)try{f.name!==T&&a(f,"name",T),f.constructor=j}catch(e){}return j}}},function(e,n,t){var i=t(7),r=t(25);e.exports=function(e,n){i(n)&&"cause"in n&&r(e,"cause",n.cause)}},function(e,n,t){var i=t(2)("".replace),r=String(Error("zxcasd").stack),a=/\n\s*at [^:]*:[^\n]*/,o=a.test(r);e.exports=function(e,n){if(o&&"string"==typeof e)for(;n--;)e=i(e,a,"");return e}},function(e,n,t){var i=t(3),r=t(42);e.exports=!i((function(){var e=Error("a");return!("stack"in e)||(Object.defineProperty(e,"stack",r(1,7)),7!==e.stack)}))},function(e,n,t){"use strict";var i=t(8),r=t(3),a=t(10),o=t(29),s=t(176),l=Error.prototype.toString,u=r((function(){if(i){var e=o(Object.defineProperty({},"name",{get:function(){return this===e}}));if("true"!==l.call(e))return!0}return"2: 1"!==l.call({message:1,name:2})||"Error"!==l.call({})}));e.exports=u?function(){var e=a(this),n=s(e.name,"Error"),t=s(e.message);return n?t?n+": "+t:n:t}:l},function(e,n,t){var i=t(2),r=t(16),a=Math.floor,o=i("".charAt),s=i("".replace),l=i("".slice),u=/\$([$&'`]|\d{1,2}|<[^>]*>)/g,c=/\$([$&'`]|\d{1,2})/g;e.exports=function(e,n,t,i,d,p){var g=t+e.length,y=i.length,m=c;return void 0!==d&&(d=r(d),m=u),s(p,m,(function(r,s){var u;switch(o(s,0)){case"$":return"$";case"&":return e;case"`":return l(n,0,t);case"'":return l(n,g);case"<":u=d[l(s,1,-1)];break;default:var c=+s;if(0===c)return r;if(c>y){var p=a(c/10);return 0===p?r:p<=y?void 0===i[p-1]?o(s,1):i[p-1]+o(s,1):r}u=i[c-1]}return void 0===u?"":u}))}},function(e,n,t){var i=t(1),r=t(0),a=t(17),o=t(30),s=t(2),l=t(3),u=r.Array,c=a("JSON","stringify"),d=s(/./.exec),p=s("".charAt),g=s("".charCodeAt),y=s("".replace),m=s(1..toString),M=/[\uD800-\uDFFF]/g,h=/^[\uD800-\uDBFF]$/,T=/^[\uDC00-\uDFFF]$/,I=function(e,n,t){var i=p(t,n-1),r=p(t,n+1);return d(h,e)&&!d(T,r)||d(T,e)&&!d(h,i)?"\\u"+m(g(e,0),16):e},f=l((function(){return'"\\udf06\\ud834"'!==c("\udf06\ud834")||'"\\udead"'!==c("\udead")}));c&&i({target:"JSON",stat:!0,forced:f},{stringify:function(e,n,t){for(var i=0,r=arguments.length,a=u(r);i<r;i++)a[i]=arguments[i];var s=o(c,null,a);return"string"==typeof s?y(s,M,I):s}})},function(e,n,t){var i=t(178),r=t(261);e.exports=function e(n,t,a,o,s){var l=-1,u=n.length;for(a||(a=r),s||(s=[]);++l<u;){var c=n[l];t>0&&a(c)?t>1?e(c,t-1,a,o,s):i(s,c):o||(s[s.length]=c)}return s}},function(e,n,t){var i=t(62),r=t(116),a=t(24),o=i?i.isConcatSpreadable:void 0;e.exports=function(e){return a(e)||r(e)||!!(o&&e&&e[o])}},function(e,n,t){var i=t(52),r=t(43);e.exports=function(e){return r(e)&&"[object Arguments]"==i(e)}},function(e,n,t){var i=t(62),r=Object.prototype,a=r.hasOwnProperty,o=r.toString,s=i?i.toStringTag:void 0;e.exports=function(e){var n=a.call(e,s),t=e[s];try{e[s]=void 0;var i=!0}catch(e){}var r=o.call(e);return i&&(n?e[s]=t:delete e[s]),r}},function(e,n){var t=Object.prototype.toString;e.exports=function(e){return t.call(e)}},function(e,n,t){var i=t(266),r=t(322),a=t(124),o=t(24),s=t(333);e.exports=function(e){return"function"==typeof e?e:null==e?a:"object"==typeof e?o(e)?r(e[0],e[1]):i(e):s(e)}},function(e,n,t){var i=t(267),r=t(321),a=t(195);e.exports=function(e){var n=r(e);return 1==n.length&&n[0][2]?a(n[0][0],n[0][1]):function(t){return t===e||i(t,e,n)}}},function(e,n,t){var i=t(180),r=t(184);e.exports=function(e,n,t,a){var o=t.length,s=o,l=!a;if(null==e)return!s;for(e=Object(e);o--;){var u=t[o];if(l&&u[2]?u[1]!==e[u[0]]:!(u[0]in e))return!1}for(;++o<s;){var c=(u=t[o])[0],d=e[c],p=u[1];if(l&&u[2]){if(void 0===d&&!(c in e))return!1}else{var g=new i;if(a)var y=a(d,p,c,e,n,g);if(!(void 0===y?r(p,d,3,a,g):y))return!1}}return!0}},function(e,n){e.exports=function(){this.__data__=[],this.size=0}},function(e,n,t){var i=t(84),r=Array.prototype.splice;e.exports=function(e){var n=this.__data__,t=i(n,e);return!(t<0)&&(t==n.length-1?n.pop():r.call(n,t,1),--this.size,!0)}},function(e,n,t){var i=t(84);e.exports=function(e){var n=this.__data__,t=i(n,e);return t<0?void 0:n[t][1]}},function(e,n,t){var i=t(84);e.exports=function(e){return i(this.__data__,e)>-1}},function(e,n,t){var i=t(84);e.exports=function(e,n){var t=this.__data__,r=i(t,e);return r<0?(++this.size,t.push([e,n])):t[r][1]=n,this}},function(e,n,t){var i=t(83);e.exports=function(){this.__data__=new i,this.size=0}},function(e,n){e.exports=function(e){var n=this.__data__,t=n.delete(e);return this.size=n.size,t}},function(e,n){e.exports=function(e){return this.__data__.get(e)}},function(e,n){e.exports=function(e){return this.__data__.has(e)}},function(e,n,t){var i=t(83),r=t(117),a=t(119);e.exports=function(e,n){var t=this.__data__;if(t instanceof i){var o=t.__data__;if(!r||o.length<199)return o.push([e,n]),this.size=++t.size,this;t=this.__data__=new a(o)}return t.set(e,n),this.size=t.size,this}},function(e,n,t){var i=t(182),r=t(279),a=t(118),o=t(183),s=/^\[object .+?Constructor\]$/,l=Function.prototype,u=Object.prototype,c=l.toString,d=u.hasOwnProperty,p=RegExp("^"+c.call(d).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");e.exports=function(e){return!(!a(e)||r(e))&&(i(e)?p:s).test(o(e))}},function(e,n,t){var i,r=t(280),a=(i=/[^.]+$/.exec(r&&r.keys&&r.keys.IE_PROTO||""))?"Symbol(src)_1."+i:"";e.exports=function(e){return!!a&&a in e}},function(e,n,t){var i=t(27)["__core-js_shared__"];e.exports=i},function(e,n){e.exports=function(e,n){return null==e?void 0:e[n]}},function(e,n,t){var i=t(283),r=t(83),a=t(117);e.exports=function(){this.size=0,this.__data__={hash:new i,map:new(a||r),string:new i}}},function(e,n,t){var i=t(284),r=t(285),a=t(286),o=t(287),s=t(288);function l(e){var n=-1,t=null==e?0:e.length;for(this.clear();++n<t;){var i=e[n];this.set(i[0],i[1])}}l.prototype.clear=i,l.prototype.delete=r,l.prototype.get=a,l.prototype.has=o,l.prototype.set=s,e.exports=l},function(e,n,t){var i=t(85);e.exports=function(){this.__data__=i?i(null):{},this.size=0}},function(e,n){e.exports=function(e){var n=this.has(e)&&delete this.__data__[e];return this.size-=n?1:0,n}},function(e,n,t){var i=t(85),r=Object.prototype.hasOwnProperty;e.exports=function(e){var n=this.__data__;if(i){var t=n[e];return"__lodash_hash_undefined__"===t?void 0:t}return r.call(n,e)?n[e]:void 0}},function(e,n,t){var i=t(85),r=Object.prototype.hasOwnProperty;e.exports=function(e){var n=this.__data__;return i?void 0!==n[e]:r.call(n,e)}},function(e,n,t){var i=t(85);e.exports=function(e,n){var t=this.__data__;return this.size+=this.has(e)?0:1,t[e]=i&&void 0===n?"__lodash_hash_undefined__":n,this}},function(e,n,t){var i=t(86);e.exports=function(e){var n=i(this,e).delete(e);return this.size-=n?1:0,n}},function(e,n){e.exports=function(e){var n=typeof e;return"string"==n||"number"==n||"symbol"==n||"boolean"==n?"__proto__"!==e:null===e}},function(e,n,t){var i=t(86);e.exports=function(e){return i(this,e).get(e)}},function(e,n,t){var i=t(86);e.exports=function(e){return i(this,e).has(e)}},function(e,n,t){var i=t(86);e.exports=function(e,n){var t=i(this,e),r=t.size;return t.set(e,n),this.size+=t.size==r?0:1,this}},function(e,n,t){var i=t(180),r=t(185),a=t(298),o=t(301),s=t(317),l=t(24),u=t(189),c=t(191),d="[object Object]",p=Object.prototype.hasOwnProperty;e.exports=function(e,n,t,g,y,m){var M=l(e),h=l(n),T=M?"[object Array]":s(e),I=h?"[object Array]":s(n),f=(T="[object Arguments]"==T?d:T)==d,N=(I="[object Arguments]"==I?d:I)==d,j=T==I;if(j&&u(e)){if(!u(n))return!1;M=!0,f=!1}if(j&&!f)return m||(m=new i),M||c(e)?r(e,n,t,g,y,m):a(e,n,T,t,g,y,m);if(!(1&t)){var w=f&&p.call(e,"__wrapped__"),L=N&&p.call(n,"__wrapped__");if(w||L){var D=w?e.value():e,z=L?n.value():n;return m||(m=new i),y(D,z,t,g,m)}}return!!j&&(m||(m=new i),o(e,n,t,g,y,m))}},function(e,n){e.exports=function(e){return this.__data__.set(e,"__lodash_hash_undefined__"),this}},function(e,n){e.exports=function(e){return this.__data__.has(e)}},function(e,n){e.exports=function(e,n){for(var t=-1,i=null==e?0:e.length;++t<i;)if(n(e[t],t,e))return!0;return!1}},function(e,n,t){var i=t(62),r=t(299),a=t(181),o=t(185),s=t(300),l=t(120),u=i?i.prototype:void 0,c=u?u.valueOf:void 0;e.exports=function(e,n,t,i,u,d,p){switch(t){case"[object DataView]":if(e.byteLength!=n.byteLength||e.byteOffset!=n.byteOffset)return!1;e=e.buffer,n=n.buffer;case"[object ArrayBuffer]":return!(e.byteLength!=n.byteLength||!d(new r(e),new r(n)));case"[object Boolean]":case"[object Date]":case"[object Number]":return a(+e,+n);case"[object Error]":return e.name==n.name&&e.message==n.message;case"[object RegExp]":case"[object String]":return e==n+"";case"[object Map]":var g=s;case"[object Set]":var y=1&i;if(g||(g=l),e.size!=n.size&&!y)return!1;var m=p.get(e);if(m)return m==n;i|=2,p.set(e,n);var M=o(g(e),g(n),i,u,d,p);return p.delete(e),M;case"[object Symbol]":if(c)return c.call(e)==c.call(n)}return!1}},function(e,n,t){var i=t(27).Uint8Array;e.exports=i},function(e,n){e.exports=function(e){var n=-1,t=Array(e.size);return e.forEach((function(e,i){t[++n]=[i,e]})),t}},function(e,n,t){var i=t(302),r=Object.prototype.hasOwnProperty;e.exports=function(e,n,t,a,o,s){var l=1&t,u=i(e),c=u.length;if(c!=i(n).length&&!l)return!1;for(var d=c;d--;){var p=u[d];if(!(l?p in n:r.call(n,p)))return!1}var g=s.get(e),y=s.get(n);if(g&&y)return g==n&&y==e;var m=!0;s.set(e,n),s.set(n,e);for(var M=l;++d<c;){var h=e[p=u[d]],T=n[p];if(a)var I=l?a(T,h,p,n,e,s):a(h,T,p,e,n,s);if(!(void 0===I?h===T||o(h,T,t,a,s):I)){m=!1;break}M||(M="constructor"==p)}if(m&&!M){var f=e.constructor,N=n.constructor;f==N||!("constructor"in e)||!("constructor"in n)||"function"==typeof f&&f instanceof f&&"function"==typeof N&&N instanceof N||(m=!1)}return s.delete(e),s.delete(n),m}},function(e,n,t){var i=t(303),r=t(304),a=t(188);e.exports=function(e){return i(e,a,r)}},function(e,n,t){var i=t(178),r=t(24);e.exports=function(e,n,t){var a=n(e);return r(e)?a:i(a,t(e))}},function(e,n,t){var i=t(305),r=t(306),a=Object.prototype.propertyIsEnumerable,o=Object.getOwnPropertySymbols,s=o?function(e){return null==e?[]:(e=Object(e),i(o(e),(function(n){return a.call(e,n)})))}:r;e.exports=s},function(e,n){e.exports=function(e,n){for(var t=-1,i=null==e?0:e.length,r=0,a=[];++t<i;){var o=e[t];n(o,t,e)&&(a[r++]=o)}return a}},function(e,n){e.exports=function(){return[]}},function(e,n,t){var i=t(308),r=t(116),a=t(24),o=t(189),s=t(190),l=t(191),u=Object.prototype.hasOwnProperty;e.exports=function(e,n){var t=a(e),c=!t&&r(e),d=!t&&!c&&o(e),p=!t&&!c&&!d&&l(e),g=t||c||d||p,y=g?i(e.length,String):[],m=y.length;for(var M in e)!n&&!u.call(e,M)||g&&("length"==M||d&&("offset"==M||"parent"==M)||p&&("buffer"==M||"byteLength"==M||"byteOffset"==M)||s(M,m))||y.push(M);return y}},function(e,n){e.exports=function(e,n){for(var t=-1,i=Array(e);++t<e;)i[t]=n(t);return i}},function(e,n){e.exports=function(){return!1}},function(e,n,t){var i=t(52),r=t(121),a=t(43),o={};o["[object Float32Array]"]=o["[object Float64Array]"]=o["[object Int8Array]"]=o["[object Int16Array]"]=o["[object Int32Array]"]=o["[object Uint8Array]"]=o["[object Uint8ClampedArray]"]=o["[object Uint16Array]"]=o["[object Uint32Array]"]=!0,o["[object Arguments]"]=o["[object Array]"]=o["[object ArrayBuffer]"]=o["[object Boolean]"]=o["[object DataView]"]=o["[object Date]"]=o["[object Error]"]=o["[object Function]"]=o["[object Map]"]=o["[object Number]"]=o["[object Object]"]=o["[object RegExp]"]=o["[object Set]"]=o["[object String]"]=o["[object WeakMap]"]=!1,e.exports=function(e){return a(e)&&r(e.length)&&!!o[i(e)]}},function(e,n){e.exports=function(e){return function(n){return e(n)}}},function(e,n,t){(function(e){var i=t(179),r=n&&!n.nodeType&&n,a=r&&"object"==typeof e&&e&&!e.nodeType&&e,o=a&&a.exports===r&&i.process,s=function(){try{var e=a&&a.require&&a.require("util").types;return e||o&&o.binding&&o.binding("util")}catch(e){}}();e.exports=s}).call(this,t(140)(e))},function(e,n,t){var i=t(314),r=t(315),a=Object.prototype.hasOwnProperty;e.exports=function(e){if(!i(e))return r(e);var n=[];for(var t in Object(e))a.call(e,t)&&"constructor"!=t&&n.push(t);return n}},function(e,n){var t=Object.prototype;e.exports=function(e){var n=e&&e.constructor;return e===("function"==typeof n&&n.prototype||t)}},function(e,n,t){var i=t(316)(Object.keys,Object);e.exports=i},function(e,n){e.exports=function(e,n){return function(t){return e(n(t))}}},function(e,n,t){var i=t(318),r=t(117),a=t(319),o=t(193),s=t(320),l=t(52),u=t(183),c=u(i),d=u(r),p=u(a),g=u(o),y=u(s),m=l;(i&&"[object DataView]"!=m(new i(new ArrayBuffer(1)))||r&&"[object Map]"!=m(new r)||a&&"[object Promise]"!=m(a.resolve())||o&&"[object Set]"!=m(new o)||s&&"[object WeakMap]"!=m(new s))&&(m=function(e){var n=l(e),t="[object Object]"==n?e.constructor:void 0,i=t?u(t):"";if(i)switch(i){case c:return"[object DataView]";case d:return"[object Map]";case p:return"[object Promise]";case g:return"[object Set]";case y:return"[object WeakMap]"}return n}),e.exports=m},function(e,n,t){var i=t(38)(t(27),"DataView");e.exports=i},function(e,n,t){var i=t(38)(t(27),"Promise");e.exports=i},function(e,n,t){var i=t(38)(t(27),"WeakMap");e.exports=i},function(e,n,t){var i=t(194),r=t(188);e.exports=function(e){for(var n=r(e),t=n.length;t--;){var a=n[t],o=e[a];n[t]=[a,o,i(o)]}return n}},function(e,n,t){var i=t(184),r=t(323),a=t(330),o=t(122),s=t(194),l=t(195),u=t(87);e.exports=function(e,n){return o(e)&&s(n)?l(u(e),n):function(t){var o=r(t,e);return void 0===o&&o===n?a(t,e):i(n,o,3)}}},function(e,n,t){var i=t(196);e.exports=function(e,n,t){var r=null==e?void 0:i(e,n);return void 0===r?t:r}},function(e,n,t){var i=t(325),r=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,a=/\\(\\)?/g,o=i((function(e){var n=[];return 46===e.charCodeAt(0)&&n.push(""),e.replace(r,(function(e,t,i,r){n.push(i?r.replace(a,"$1"):t||e)})),n}));e.exports=o},function(e,n,t){var i=t(326);e.exports=function(e){var n=i(e,(function(e){return 500===t.size&&t.clear(),e})),t=n.cache;return n}},function(e,n,t){var i=t(119);function r(e,n){if("function"!=typeof e||null!=n&&"function"!=typeof n)throw new TypeError("Expected a function");var t=function(){var i=arguments,r=n?n.apply(this,i):i[0],a=t.cache;if(a.has(r))return a.get(r);var o=e.apply(this,i);return t.cache=a.set(r,o)||a,o};return t.cache=new(r.Cache||i),t}r.Cache=i,e.exports=r},function(e,n,t){var i=t(328);e.exports=function(e){return null==e?"":i(e)}},function(e,n,t){var i=t(62),r=t(329),a=t(24),o=t(123),s=i?i.prototype:void 0,l=s?s.toString:void 0;e.exports=function e(n){if("string"==typeof n)return n;if(a(n))return r(n,e)+"";if(o(n))return l?l.call(n):"";var t=n+"";return"0"==t&&1/n==-1/0?"-0":t}},function(e,n){e.exports=function(e,n){for(var t=-1,i=null==e?0:e.length,r=Array(i);++t<i;)r[t]=n(e[t],t,e);return r}},function(e,n,t){var i=t(331),r=t(332);e.exports=function(e,n){return null!=e&&r(e,n,i)}},function(e,n){e.exports=function(e,n){return null!=e&&n in Object(e)}},function(e,n,t){var i=t(197),r=t(116),a=t(24),o=t(190),s=t(121),l=t(87);e.exports=function(e,n,t){for(var u=-1,c=(n=i(n,e)).length,d=!1;++u<c;){var p=l(n[u]);if(!(d=null!=e&&t(e,p)))break;e=e[p]}return d||++u!=c?d:!!(c=null==e?0:e.length)&&s(c)&&o(p,c)&&(a(e)||r(e))}},function(e,n,t){var i=t(334),r=t(335),a=t(122),o=t(87);e.exports=function(e){return a(e)?i(o(e)):r(e)}},function(e,n){e.exports=function(e){return function(n){return null==n?void 0:n[e]}}},function(e,n,t){var i=t(196);e.exports=function(e){return function(n){return i(n,e)}}},function(e,n,t){var i=t(124),r=t(337),a=t(339);e.exports=function(e,n){return a(r(e,n,i),e+"")}},function(e,n,t){var i=t(338),r=Math.max;e.exports=function(e,n,t){return n=r(void 0===n?e.length-1:n,0),function(){for(var a=arguments,o=-1,s=r(a.length-n,0),l=Array(s);++o<s;)l[o]=a[n+o];o=-1;for(var u=Array(n+1);++o<n;)u[o]=a[o];return u[n]=t(l),i(e,this,u)}}},function(e,n){e.exports=function(e,n,t){switch(t.length){case 0:return e.call(n);case 1:return e.call(n,t[0]);case 2:return e.call(n,t[0],t[1]);case 3:return e.call(n,t[0],t[1],t[2])}return e.apply(n,t)}},function(e,n,t){var i=t(340),r=t(343)(i);e.exports=r},function(e,n,t){var i=t(341),r=t(342),a=t(124),o=r?function(e,n){return r(e,"toString",{configurable:!0,enumerable:!1,value:i(n),writable:!0})}:a;e.exports=o},function(e,n){e.exports=function(e){return function(){return e}}},function(e,n,t){var i=t(38),r=function(){try{var e=i(Object,"defineProperty");return e({},"",{}),e}catch(e){}}();e.exports=r},function(e,n){var t=Date.now;e.exports=function(e){var n=0,i=0;return function(){var r=t(),a=16-(r-i);if(i=r,a>0){if(++n>=800)return arguments[0]}else n=0;return e.apply(void 0,arguments)}}},function(e,n,t){var i=t(186),r=t(345),a=t(350),o=t(187),s=t(351),l=t(120);e.exports=function(e,n,t){var u=-1,c=r,d=e.length,p=!0,g=[],y=g;if(t)p=!1,c=a;else if(d>=200){var m=n?null:s(e);if(m)return l(m);p=!1,c=o,y=new i}else y=n?[]:g;e:for(;++u<d;){var M=e[u],h=n?n(M):M;if(M=t||0!==M?M:0,p&&h==h){for(var T=y.length;T--;)if(y[T]===h)continue e;n&&y.push(h),g.push(M)}else c(y,h,t)||(y!==g&&y.push(h),g.push(M))}return g}},function(e,n,t){var i=t(346);e.exports=function(e,n){return!!(null==e?0:e.length)&&i(e,n,0)>-1}},function(e,n,t){var i=t(347),r=t(348),a=t(349);e.exports=function(e,n,t){return n==n?a(e,n,t):i(e,r,t)}},function(e,n){e.exports=function(e,n,t,i){for(var r=e.length,a=t+(i?1:-1);i?a--:++a<r;)if(n(e[a],a,e))return a;return-1}},function(e,n){e.exports=function(e){return e!=e}},function(e,n){e.exports=function(e,n,t){for(var i=t-1,r=e.length;++i<r;)if(e[i]===n)return i;return-1}},function(e,n){e.exports=function(e,n,t){for(var i=-1,r=null==e?0:e.length;++i<r;)if(t(n,e[i]))return!0;return!1}},function(e,n,t){var i=t(193),r=t(352),a=t(120),o=i&&1/a(new i([,-0]))[1]==1/0?function(e){return new i(e)}:r;e.exports=o},function(e,n){e.exports=function(){}},function(e,n,t){var i=t(192),r=t(43);e.exports=function(e){return r(e)&&i(e)}},function(e,n){e.exports=function(e){var n=null==e?0:e.length;return n?e[n-1]:void 0}},function(e,n,t){},function(e,n,t){var i=t(2);e.exports=i(1..valueOf)},function(e,n,t){},function(e,n,t){var i=t(1),r=t(3),a=t(18),o=t(26).f,s=t(8),l=r((function(){o(1)}));i({target:"Object",stat:!0,forced:!s||l,sham:!s},{getOwnPropertyDescriptor:function(e,n){return o(a(e),n)}})},function(e,n,t){var i=t(1),r=t(8),a=t(101).f;i({target:"Object",stat:!0,forced:Object.defineProperties!==a,sham:!r},{defineProperties:a})},function(e,n,t){var i=t(1),r=t(361);i({global:!0,forced:parseInt!=r},{parseInt:r})},function(e,n,t){var i=t(0),r=t(3),a=t(2),o=t(13),s=t(141).trim,l=t(142),u=i.parseInt,c=i.Symbol,d=c&&c.iterator,p=/^[+-]?0x/i,g=a(p.exec),y=8!==u(l+"08")||22!==u(l+"0x16")||d&&!r((function(){u(Object(d))}));e.exports=y?function(e,n){var t=s(o(e));return u(t,n>>>0||(g(p,t)?16:10))}:u},function(e,n,t){"use strict";t(199)},function(e,n,t){},function(e,n,t){},function(e,n,t){"use strict";t(200)},function(e,n,t){},function(e,n,t){var i=t(32).match(/firefox\/(\d+)/i);e.exports=!!i&&+i[1]},function(e,n,t){var i=t(32);e.exports=/MSIE|Trident/.test(i)},function(e,n,t){var i=t(32).match(/AppleWebKit\/(\d+)\./);e.exports=!!i&&+i[1]},function(e,n,t){"use strict";var i=t(1),r=t(2),a=t(20),o=t(46),s=t(13),l=r("".slice),u=Math.max,c=Math.min;i({target:"String",proto:!0,forced:!"".substr||"b"!=="ab".substr(-1)},{substr:function(e,n){var t,i,r=s(a(this)),d=r.length,p=o(e);return p===1/0&&(p=0),p<0&&(p=u(d+p,0)),(t=void 0===n?d:o(n))<=0||t===1/0||p>=(i=c(p+t,d))?"":l(r,p,i)}})},function(e,n,t){"use strict";var i,r=t(1),a=t(2),o=t(26).f,s=t(49),l=t(13),u=t(112),c=t(20),d=t(113),p=t(21),g=a("".endsWith),y=a("".slice),m=Math.min,M=d("endsWith");r({target:"String",proto:!0,forced:!!(p||M||(i=o(String.prototype,"endsWith"),!i||i.writable))&&!M},{endsWith:function(e){var n=l(c(this));u(e);var t=arguments.length>1?arguments[1]:void 0,i=n.length,r=void 0===t?i:m(s(t),i),a=l(e);return g?g(n,a,r):y(n,r-a.length,r)===a}})},function(e,n,t){"use strict";var i=t(0),r=t(2),a=t(33),o=t(7),s=t(11),l=t(59),u=i.Function,c=r([].concat),d=r([].join),p={},g=function(e,n,t){if(!s(p,n)){for(var i=[],r=0;r<n;r++)i[r]="a["+r+"]";p[n]=u("C,a","return new C("+d(i,",")+")")}return p[n](e,t)};e.exports=u.bind||function(e){var n=a(this),t=n.prototype,i=l(arguments,1),r=function(){var t=c(i,l(arguments));return this instanceof r?g(n,t.length,t):n.apply(e,t)};return o(t)&&(r.prototype=t),r}},function(e,n,t){"use strict";t(204)},function(e,n,t){"use strict";t(205)},function(e,n,t){"use strict";t.r(n);t(136),t(227),t(237),t(239);var i=t(79),r=(t(130),t(66),t(9),t(23),t(28),t(92),t(39),t(4));function a(e,n){for(var t in n)e[t]=n[t];return e}var o=/[!'()*]/g,s=function(e){return"%"+e.charCodeAt(0).toString(16)},l=/%2C/g,u=function(e){return encodeURIComponent(e).replace(o,s).replace(l,",")};function c(e){try{return decodeURIComponent(e)}catch(e){0}return e}var d=function(e){return null==e||"object"==typeof e?e:String(e)};function p(e){var n={};return(e=e.trim().replace(/^(\?|#|&)/,""))?(e.split("&").forEach((function(e){var t=e.replace(/\+/g," ").split("="),i=c(t.shift()),r=t.length>0?c(t.join("=")):null;void 0===n[i]?n[i]=r:Array.isArray(n[i])?n[i].push(r):n[i]=[n[i],r]})),n):n}function g(e){var n=e?Object.keys(e).map((function(n){var t=e[n];if(void 0===t)return"";if(null===t)return u(n);if(Array.isArray(t)){var i=[];return t.forEach((function(e){void 0!==e&&(null===e?i.push(u(n)):i.push(u(n)+"="+u(e)))})),i.join("&")}return u(n)+"="+u(t)})).filter((function(e){return e.length>0})).join("&"):null;return n?"?"+n:""}var y=/\/?$/;function m(e,n,t,i){var r=i&&i.options.stringifyQuery,a=n.query||{};try{a=M(a)}catch(e){}var o={name:n.name||e&&e.name,meta:e&&e.meta||{},path:n.path||"/",hash:n.hash||"",query:a,params:n.params||{},fullPath:I(n,r),matched:e?T(e):[]};return t&&(o.redirectedFrom=I(t,r)),Object.freeze(o)}function M(e){if(Array.isArray(e))return e.map(M);if(e&&"object"==typeof e){var n={};for(var t in e)n[t]=M(e[t]);return n}return e}var h=m(null,{path:"/"});function T(e){for(var n=[];e;)n.unshift(e),e=e.parent;return n}function I(e,n){var t=e.path,i=e.query;void 0===i&&(i={});var r=e.hash;return void 0===r&&(r=""),(t||"/")+(n||g)(i)+r}function f(e,n,t){return n===h?e===n:!!n&&(e.path&&n.path?e.path.replace(y,"")===n.path.replace(y,"")&&(t||e.hash===n.hash&&N(e.query,n.query)):!(!e.name||!n.name)&&(e.name===n.name&&(t||e.hash===n.hash&&N(e.query,n.query)&&N(e.params,n.params))))}function N(e,n){if(void 0===e&&(e={}),void 0===n&&(n={}),!e||!n)return e===n;var t=Object.keys(e).sort(),i=Object.keys(n).sort();return t.length===i.length&&t.every((function(t,r){var a=e[t];if(i[r]!==t)return!1;var o=n[t];return null==a||null==o?a===o:"object"==typeof a&&"object"==typeof o?N(a,o):String(a)===String(o)}))}function j(e){for(var n=0;n<e.matched.length;n++){var t=e.matched[n];for(var i in t.instances){var r=t.instances[i],a=t.enteredCbs[i];if(r&&a){delete t.enteredCbs[i];for(var o=0;o<a.length;o++)r._isBeingDestroyed||a[o](r)}}}}var w={name:"RouterView",functional:!0,props:{name:{type:String,default:"default"}},render:function(e,n){var t=n.props,i=n.children,r=n.parent,o=n.data;o.routerView=!0;for(var s=r.$createElement,l=t.name,u=r.$route,c=r._routerViewCache||(r._routerViewCache={}),d=0,p=!1;r&&r._routerRoot!==r;){var g=r.$vnode?r.$vnode.data:{};g.routerView&&d++,g.keepAlive&&r._directInactive&&r._inactive&&(p=!0),r=r.$parent}if(o.routerViewDepth=d,p){var y=c[l],m=y&&y.component;return m?(y.configProps&&L(m,o,y.route,y.configProps),s(m,o,i)):s()}var M=u.matched[d],h=M&&M.components[l];if(!M||!h)return c[l]=null,s();c[l]={component:h},o.registerRouteInstance=function(e,n){var t=M.instances[l];(n&&t!==e||!n&&t===e)&&(M.instances[l]=n)},(o.hook||(o.hook={})).prepatch=function(e,n){M.instances[l]=n.componentInstance},o.hook.init=function(e){e.data.keepAlive&&e.componentInstance&&e.componentInstance!==M.instances[l]&&(M.instances[l]=e.componentInstance),j(u)};var T=M.props&&M.props[l];return T&&(a(c[l],{route:u,configProps:T}),L(h,o,u,T)),s(h,o,i)}};function L(e,n,t,i){var r=n.props=function(e,n){switch(typeof n){case"undefined":return;case"object":return n;case"function":return n(e);case"boolean":return n?e.params:void 0;default:0}}(t,i);if(r){r=n.props=a({},r);var o=n.attrs=n.attrs||{};for(var s in r)e.props&&s in e.props||(o[s]=r[s],delete r[s])}}function D(e,n,t){var i=e.charAt(0);if("/"===i)return e;if("?"===i||"#"===i)return n+e;var r=n.split("/");t&&r[r.length-1]||r.pop();for(var a=e.replace(/^\//,"").split("/"),o=0;o<a.length;o++){var s=a[o];".."===s?r.pop():"."!==s&&r.push(s)}return""!==r[0]&&r.unshift(""),r.join("/")}function z(e){return e.replace(/\/+/g,"/")}var b=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)},k=P,x=O,C=function(e,n){return U(O(e,n),n)},A=U,v=Z,S=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function O(e,n){for(var t,i=[],r=0,a=0,o="",s=n&&n.delimiter||"/";null!=(t=S.exec(e));){var l=t[0],u=t[1],c=t.index;if(o+=e.slice(a,c),a=c+l.length,u)o+=u[1];else{var d=e[a],p=t[2],g=t[3],y=t[4],m=t[5],M=t[6],h=t[7];o&&(i.push(o),o="");var T=null!=p&&null!=d&&d!==p,I="+"===M||"*"===M,f="?"===M||"*"===M,N=t[2]||s,j=y||m;i.push({name:g||r++,prefix:p||"",delimiter:N,optional:f,repeat:I,partial:T,asterisk:!!h,pattern:j?Q(j):h?".*":"[^"+Y(N)+"]+?"})}}return a<e.length&&(o+=e.substr(a)),o&&i.push(o),i}function E(e){return encodeURI(e).replace(/[\/?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function U(e,n){for(var t=new Array(e.length),i=0;i<e.length;i++)"object"==typeof e[i]&&(t[i]=new RegExp("^(?:"+e[i].pattern+")$",q(n)));return function(n,i){for(var r="",a=n||{},o=(i||{}).pretty?E:encodeURIComponent,s=0;s<e.length;s++){var l=e[s];if("string"!=typeof l){var u,c=a[l.name];if(null==c){if(l.optional){l.partial&&(r+=l.prefix);continue}throw new TypeError('Expected "'+l.name+'" to be defined')}if(b(c)){if(!l.repeat)throw new TypeError('Expected "'+l.name+'" to not repeat, but received `'+JSON.stringify(c)+"`");if(0===c.length){if(l.optional)continue;throw new TypeError('Expected "'+l.name+'" to not be empty')}for(var d=0;d<c.length;d++){if(u=o(c[d]),!t[s].test(u))throw new TypeError('Expected all "'+l.name+'" to match "'+l.pattern+'", but received `'+JSON.stringify(u)+"`");r+=(0===d?l.prefix:l.delimiter)+u}}else{if(u=l.asterisk?encodeURI(c).replace(/[?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})):o(c),!t[s].test(u))throw new TypeError('Expected "'+l.name+'" to match "'+l.pattern+'", but received "'+u+'"');r+=l.prefix+u}}else r+=l}return r}}function Y(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function Q(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function R(e,n){return e.keys=n,e}function q(e){return e&&e.sensitive?"":"i"}function Z(e,n,t){b(n)||(t=n||t,n=[]);for(var i=(t=t||{}).strict,r=!1!==t.end,a="",o=0;o<e.length;o++){var s=e[o];if("string"==typeof s)a+=Y(s);else{var l=Y(s.prefix),u="(?:"+s.pattern+")";n.push(s),s.repeat&&(u+="(?:"+l+u+")*"),a+=u=s.optional?s.partial?l+"("+u+")?":"(?:"+l+"("+u+"))?":l+"("+u+")"}}var c=Y(t.delimiter||"/"),d=a.slice(-c.length)===c;return i||(a=(d?a.slice(0,-c.length):a)+"(?:"+c+"(?=$))?"),a+=r?"$":i&&d?"":"(?="+c+"|$)",R(new RegExp("^"+a,q(t)),n)}function P(e,n,t){return b(n)||(t=n||t,n=[]),t=t||{},e instanceof RegExp?function(e,n){var t=e.source.match(/\((?!\?)/g);if(t)for(var i=0;i<t.length;i++)n.push({name:i,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return R(e,n)}(e,n):b(e)?function(e,n,t){for(var i=[],r=0;r<e.length;r++)i.push(P(e[r],n,t).source);return R(new RegExp("(?:"+i.join("|")+")",q(t)),n)}(e,n,t):function(e,n,t){return Z(O(e,t),n,t)}(e,n,t)}k.parse=x,k.compile=C,k.tokensToFunction=A,k.tokensToRegExp=v;var W=Object.create(null);function G(e,n,t){n=n||{};try{var i=W[e]||(W[e]=k.compile(e));return"string"==typeof n.pathMatch&&(n[0]=n.pathMatch),i(n,{pretty:!0})}catch(e){return""}finally{delete n[0]}}function F(e,n,t,i){var r="string"==typeof e?{path:e}:e;if(r._normalized)return r;if(r.name){var o=(r=a({},e)).params;return o&&"object"==typeof o&&(r.params=a({},o)),r}if(!r.path&&r.params&&n){(r=a({},r))._normalized=!0;var s=a(a({},n.params),r.params);if(n.name)r.name=n.name,r.params=s;else if(n.matched.length){var l=n.matched[n.matched.length-1].path;r.path=G(l,s,n.path)}else 0;return r}var u=function(e){var n="",t="",i=e.indexOf("#");i>=0&&(n=e.slice(i),e=e.slice(0,i));var r=e.indexOf("?");return r>=0&&(t=e.slice(r+1),e=e.slice(0,r)),{path:e,query:t,hash:n}}(r.path||""),c=n&&n.path||"/",g=u.path?D(u.path,c,t||r.append):c,y=function(e,n,t){void 0===n&&(n={});var i,r=t||p;try{i=r(e||"")}catch(e){i={}}for(var a in n){var o=n[a];i[a]=Array.isArray(o)?o.map(d):d(o)}return i}(u.query,r.query,i&&i.options.parseQuery),m=r.hash||u.hash;return m&&"#"!==m.charAt(0)&&(m="#"+m),{_normalized:!0,path:g,query:y,hash:m}}var B,V=function(){},J={name:"RouterLink",props:{to:{type:[String,Object],required:!0},tag:{type:String,default:"a"},custom:Boolean,exact:Boolean,exactPath:Boolean,append:Boolean,replace:Boolean,activeClass:String,exactActiveClass:String,ariaCurrentValue:{type:String,default:"page"},event:{type:[String,Array],default:"click"}},render:function(e){var n=this,t=this.$router,i=this.$route,r=t.resolve(this.to,i,this.append),o=r.location,s=r.route,l=r.href,u={},c=t.options.linkActiveClass,d=t.options.linkExactActiveClass,p=null==c?"router-link-active":c,g=null==d?"router-link-exact-active":d,M=null==this.activeClass?p:this.activeClass,h=null==this.exactActiveClass?g:this.exactActiveClass,T=s.redirectedFrom?m(null,F(s.redirectedFrom),null,t):s;u[h]=f(i,T,this.exactPath),u[M]=this.exact||this.exactPath?u[h]:function(e,n){return 0===e.path.replace(y,"/").indexOf(n.path.replace(y,"/"))&&(!n.hash||e.hash===n.hash)&&function(e,n){for(var t in n)if(!(t in e))return!1;return!0}(e.query,n.query)}(i,T);var I=u[h]?this.ariaCurrentValue:null,N=function(e){H(e)&&(n.replace?t.replace(o,V):t.push(o,V))},j={click:H};Array.isArray(this.event)?this.event.forEach((function(e){j[e]=N})):j[this.event]=N;var w={class:u},L=!this.$scopedSlots.$hasNormal&&this.$scopedSlots.default&&this.$scopedSlots.default({href:l,route:s,navigate:N,isActive:u[M],isExactActive:u[h]});if(L){if(1===L.length)return L[0];if(L.length>1||!L.length)return 0===L.length?e():e("span",{},L)}if("a"===this.tag)w.on=j,w.attrs={href:l,"aria-current":I};else{var D=function e(n){var t;if(n)for(var i=0;i<n.length;i++){if("a"===(t=n[i]).tag)return t;if(t.children&&(t=e(t.children)))return t}}(this.$slots.default);if(D){D.isStatic=!1;var z=D.data=a({},D.data);for(var b in z.on=z.on||{},z.on){var k=z.on[b];b in j&&(z.on[b]=Array.isArray(k)?k:[k])}for(var x in j)x in z.on?z.on[x].push(j[x]):z.on[x]=N;var C=D.data.attrs=a({},D.data.attrs);C.href=l,C["aria-current"]=I}else w.on=j}return e(this.tag,w,this.$slots.default)}};function H(e){if(!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey||e.defaultPrevented||void 0!==e.button&&0!==e.button)){if(e.currentTarget&&e.currentTarget.getAttribute){var n=e.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(n))return}return e.preventDefault&&e.preventDefault(),!0}}var K="undefined"!=typeof window;function _(e,n,t,i,r){var a=n||[],o=t||Object.create(null),s=i||Object.create(null);e.forEach((function(e){!function e(n,t,i,r,a,o){var s=r.path,l=r.name;0;var u=r.pathToRegexpOptions||{},c=function(e,n,t){t||(e=e.replace(/\/$/,""));if("/"===e[0])return e;if(null==n)return e;return z(n.path+"/"+e)}(s,a,u.strict);"boolean"==typeof r.caseSensitive&&(u.sensitive=r.caseSensitive);var d={path:c,regex:X(c,u),components:r.components||{default:r.component},alias:r.alias?"string"==typeof r.alias?[r.alias]:r.alias:[],instances:{},enteredCbs:{},name:l,parent:a,matchAs:o,redirect:r.redirect,beforeEnter:r.beforeEnter,meta:r.meta||{},props:null==r.props?{}:r.components?r.props:{default:r.props}};r.children&&r.children.forEach((function(r){var a=o?z(o+"/"+r.path):void 0;e(n,t,i,r,d,a)}));t[d.path]||(n.push(d.path),t[d.path]=d);if(void 0!==r.alias)for(var p=Array.isArray(r.alias)?r.alias:[r.alias],g=0;g<p.length;++g){0;var y={path:p[g],children:r.children};e(n,t,i,y,a,d.path||"/")}l&&(i[l]||(i[l]=d))}(a,o,s,e,r)}));for(var l=0,u=a.length;l<u;l++)"*"===a[l]&&(a.push(a.splice(l,1)[0]),u--,l--);return{pathList:a,pathMap:o,nameMap:s}}function X(e,n){return k(e,[],n)}function $(e,n){var t=_(e),i=t.pathList,r=t.pathMap,a=t.nameMap;function o(e,t,o){var s=F(e,t,!1,n),u=s.name;if(u){var c=a[u];if(!c)return l(null,s);var d=c.regex.keys.filter((function(e){return!e.optional})).map((function(e){return e.name}));if("object"!=typeof s.params&&(s.params={}),t&&"object"==typeof t.params)for(var p in t.params)!(p in s.params)&&d.indexOf(p)>-1&&(s.params[p]=t.params[p]);return s.path=G(c.path,s.params),l(c,s,o)}if(s.path){s.params={};for(var g=0;g<i.length;g++){var y=i[g],m=r[y];if(ee(m.regex,s.path,s.params))return l(m,s,o)}}return l(null,s)}function s(e,t){var i=e.redirect,r="function"==typeof i?i(m(e,t,null,n)):i;if("string"==typeof r&&(r={path:r}),!r||"object"!=typeof r)return l(null,t);var s=r,u=s.name,c=s.path,d=t.query,p=t.hash,g=t.params;if(d=s.hasOwnProperty("query")?s.query:d,p=s.hasOwnProperty("hash")?s.hash:p,g=s.hasOwnProperty("params")?s.params:g,u){a[u];return o({_normalized:!0,name:u,query:d,hash:p,params:g},void 0,t)}if(c){var y=function(e,n){return D(e,n.parent?n.parent.path:"/",!0)}(c,e);return o({_normalized:!0,path:G(y,g),query:d,hash:p},void 0,t)}return l(null,t)}function l(e,t,i){return e&&e.redirect?s(e,i||t):e&&e.matchAs?function(e,n,t){var i=o({_normalized:!0,path:G(t,n.params)});if(i){var r=i.matched,a=r[r.length-1];return n.params=i.params,l(a,n)}return l(null,n)}(0,t,e.matchAs):m(e,t,i,n)}return{match:o,addRoute:function(e,n){var t="object"!=typeof e?a[e]:void 0;_([n||e],i,r,a,t),t&&t.alias.length&&_(t.alias.map((function(e){return{path:e,children:[n]}})),i,r,a,t)},getRoutes:function(){return i.map((function(e){return r[e]}))},addRoutes:function(e){_(e,i,r,a)}}}function ee(e,n,t){var i=n.match(e);if(!i)return!1;if(!t)return!0;for(var r=1,a=i.length;r<a;++r){var o=e.keys[r-1];o&&(t[o.name||"pathMatch"]="string"==typeof i[r]?c(i[r]):i[r])}return!0}var ne=K&&window.performance&&window.performance.now?window.performance:Date;function te(){return ne.now().toFixed(3)}var ie=te();function re(){return ie}function ae(e){return ie=e}var oe=Object.create(null);function se(){"scrollRestoration"in window.history&&(window.history.scrollRestoration="manual");var e=window.location.protocol+"//"+window.location.host,n=window.location.href.replace(e,""),t=a({},window.history.state);return t.key=re(),window.history.replaceState(t,"",n),window.addEventListener("popstate",ce),function(){window.removeEventListener("popstate",ce)}}function le(e,n,t,i){if(e.app){var r=e.options.scrollBehavior;r&&e.app.$nextTick((function(){var a=function(){var e=re();if(e)return oe[e]}(),o=r.call(e,n,t,i?a:null);o&&("function"==typeof o.then?o.then((function(e){me(e,a)})).catch((function(e){0})):me(o,a))}))}}function ue(){var e=re();e&&(oe[e]={x:window.pageXOffset,y:window.pageYOffset})}function ce(e){ue(),e.state&&e.state.key&&ae(e.state.key)}function de(e){return ge(e.x)||ge(e.y)}function pe(e){return{x:ge(e.x)?e.x:window.pageXOffset,y:ge(e.y)?e.y:window.pageYOffset}}function ge(e){return"number"==typeof e}var ye=/^#\d/;function me(e,n){var t,i="object"==typeof e;if(i&&"string"==typeof e.selector){var r=ye.test(e.selector)?document.getElementById(e.selector.slice(1)):document.querySelector(e.selector);if(r){var a=e.offset&&"object"==typeof e.offset?e.offset:{};n=function(e,n){var t=document.documentElement.getBoundingClientRect(),i=e.getBoundingClientRect();return{x:i.left-t.left-n.x,y:i.top-t.top-n.y}}(r,a={x:ge((t=a).x)?t.x:0,y:ge(t.y)?t.y:0})}else de(e)&&(n=pe(e))}else i&&de(e)&&(n=pe(e));n&&("scrollBehavior"in document.documentElement.style?window.scrollTo({left:n.x,top:n.y,behavior:e.behavior}):window.scrollTo(n.x,n.y))}var Me,he=K&&((-1===(Me=window.navigator.userAgent).indexOf("Android 2.")&&-1===Me.indexOf("Android 4.0")||-1===Me.indexOf("Mobile Safari")||-1!==Me.indexOf("Chrome")||-1!==Me.indexOf("Windows Phone"))&&window.history&&"function"==typeof window.history.pushState);function Te(e,n){ue();var t=window.history;try{if(n){var i=a({},t.state);i.key=re(),t.replaceState(i,"",e)}else t.pushState({key:ae(te())},"",e)}catch(t){window.location[n?"replace":"assign"](e)}}function Ie(e){Te(e,!0)}function fe(e,n,t){var i=function(r){r>=e.length?t():e[r]?n(e[r],(function(){i(r+1)})):i(r+1)};i(0)}var Ne={redirected:2,aborted:4,cancelled:8,duplicated:16};function je(e,n){return Le(e,n,Ne.redirected,'Redirected when going from "'+e.fullPath+'" to "'+function(e){if("string"==typeof e)return e;if("path"in e)return e.path;var n={};return De.forEach((function(t){t in e&&(n[t]=e[t])})),JSON.stringify(n,null,2)}(n)+'" via a navigation guard.')}function we(e,n){return Le(e,n,Ne.cancelled,'Navigation cancelled from "'+e.fullPath+'" to "'+n.fullPath+'" with a new navigation.')}function Le(e,n,t,i){var r=new Error(i);return r._isRouter=!0,r.from=e,r.to=n,r.type=t,r}var De=["params","query","hash"];function ze(e){return Object.prototype.toString.call(e).indexOf("Error")>-1}function be(e,n){return ze(e)&&e._isRouter&&(null==n||e.type===n)}function ke(e){return function(n,t,i){var r=!1,a=0,o=null;xe(e,(function(e,n,t,s){if("function"==typeof e&&void 0===e.cid){r=!0,a++;var l,u=ve((function(n){var r;((r=n).__esModule||Ae&&"Module"===r[Symbol.toStringTag])&&(n=n.default),e.resolved="function"==typeof n?n:B.extend(n),t.components[s]=n,--a<=0&&i()})),c=ve((function(e){var n="Failed to resolve async component "+s+": "+e;o||(o=ze(e)?e:new Error(n),i(o))}));try{l=e(u,c)}catch(e){c(e)}if(l)if("function"==typeof l.then)l.then(u,c);else{var d=l.component;d&&"function"==typeof d.then&&d.then(u,c)}}})),r||i()}}function xe(e,n){return Ce(e.map((function(e){return Object.keys(e.components).map((function(t){return n(e.components[t],e.instances[t],e,t)}))})))}function Ce(e){return Array.prototype.concat.apply([],e)}var Ae="function"==typeof Symbol&&"symbol"==typeof Symbol.toStringTag;function ve(e){var n=!1;return function(){for(var t=[],i=arguments.length;i--;)t[i]=arguments[i];if(!n)return n=!0,e.apply(this,t)}}var Se=function(e,n){this.router=e,this.base=function(e){if(!e)if(K){var n=document.querySelector("base");e=(e=n&&n.getAttribute("href")||"/").replace(/^https?:\/\/[^\/]+/,"")}else e="/";"/"!==e.charAt(0)&&(e="/"+e);return e.replace(/\/$/,"")}(n),this.current=h,this.pending=null,this.ready=!1,this.readyCbs=[],this.readyErrorCbs=[],this.errorCbs=[],this.listeners=[]};function Oe(e,n,t,i){var r=xe(e,(function(e,i,r,a){var o=function(e,n){"function"!=typeof e&&(e=B.extend(e));return e.options[n]}(e,n);if(o)return Array.isArray(o)?o.map((function(e){return t(e,i,r,a)})):t(o,i,r,a)}));return Ce(i?r.reverse():r)}function Ee(e,n){if(n)return function(){return e.apply(n,arguments)}}Se.prototype.listen=function(e){this.cb=e},Se.prototype.onReady=function(e,n){this.ready?e():(this.readyCbs.push(e),n&&this.readyErrorCbs.push(n))},Se.prototype.onError=function(e){this.errorCbs.push(e)},Se.prototype.transitionTo=function(e,n,t){var i,r=this;try{i=this.router.match(e,this.current)}catch(e){throw this.errorCbs.forEach((function(n){n(e)})),e}var a=this.current;this.confirmTransition(i,(function(){r.updateRoute(i),n&&n(i),r.ensureURL(),r.router.afterHooks.forEach((function(e){e&&e(i,a)})),r.ready||(r.ready=!0,r.readyCbs.forEach((function(e){e(i)})))}),(function(e){t&&t(e),e&&!r.ready&&(be(e,Ne.redirected)&&a===h||(r.ready=!0,r.readyErrorCbs.forEach((function(n){n(e)}))))}))},Se.prototype.confirmTransition=function(e,n,t){var i=this,r=this.current;this.pending=e;var a,o,s=function(e){!be(e)&&ze(e)&&(i.errorCbs.length?i.errorCbs.forEach((function(n){n(e)})):console.error(e)),t&&t(e)},l=e.matched.length-1,u=r.matched.length-1;if(f(e,r)&&l===u&&e.matched[l]===r.matched[u])return this.ensureURL(),e.hash&&le(this.router,r,e,!1),s(((o=Le(a=r,e,Ne.duplicated,'Avoided redundant navigation to current location: "'+a.fullPath+'".')).name="NavigationDuplicated",o));var c=function(e,n){var t,i=Math.max(e.length,n.length);for(t=0;t<i&&e[t]===n[t];t++);return{updated:n.slice(0,t),activated:n.slice(t),deactivated:e.slice(t)}}(this.current.matched,e.matched),d=c.updated,p=c.deactivated,g=c.activated,y=[].concat(function(e){return Oe(e,"beforeRouteLeave",Ee,!0)}(p),this.router.beforeHooks,function(e){return Oe(e,"beforeRouteUpdate",Ee)}(d),g.map((function(e){return e.beforeEnter})),ke(g)),m=function(n,t){if(i.pending!==e)return s(we(r,e));try{n(e,r,(function(n){!1===n?(i.ensureURL(!0),s(function(e,n){return Le(e,n,Ne.aborted,'Navigation aborted from "'+e.fullPath+'" to "'+n.fullPath+'" via a navigation guard.')}(r,e))):ze(n)?(i.ensureURL(!0),s(n)):"string"==typeof n||"object"==typeof n&&("string"==typeof n.path||"string"==typeof n.name)?(s(je(r,e)),"object"==typeof n&&n.replace?i.replace(n):i.push(n)):t(n)}))}catch(e){s(e)}};fe(y,m,(function(){fe(function(e){return Oe(e,"beforeRouteEnter",(function(e,n,t,i){return function(e,n,t){return function(i,r,a){return e(i,r,(function(e){"function"==typeof e&&(n.enteredCbs[t]||(n.enteredCbs[t]=[]),n.enteredCbs[t].push(e)),a(e)}))}}(e,t,i)}))}(g).concat(i.router.resolveHooks),m,(function(){if(i.pending!==e)return s(we(r,e));i.pending=null,n(e),i.router.app&&i.router.app.$nextTick((function(){j(e)}))}))}))},Se.prototype.updateRoute=function(e){this.current=e,this.cb&&this.cb(e)},Se.prototype.setupListeners=function(){},Se.prototype.teardown=function(){this.listeners.forEach((function(e){e()})),this.listeners=[],this.current=h,this.pending=null};var Ue=function(e){function n(n,t){e.call(this,n,t),this._startLocation=Ye(this.base)}return e&&(n.__proto__=e),n.prototype=Object.create(e&&e.prototype),n.prototype.constructor=n,n.prototype.setupListeners=function(){var e=this;if(!(this.listeners.length>0)){var n=this.router,t=n.options.scrollBehavior,i=he&&t;i&&this.listeners.push(se());var r=function(){var t=e.current,r=Ye(e.base);e.current===h&&r===e._startLocation||e.transitionTo(r,(function(e){i&&le(n,e,t,!0)}))};window.addEventListener("popstate",r),this.listeners.push((function(){window.removeEventListener("popstate",r)}))}},n.prototype.go=function(e){window.history.go(e)},n.prototype.push=function(e,n,t){var i=this,r=this.current;this.transitionTo(e,(function(e){Te(z(i.base+e.fullPath)),le(i.router,e,r,!1),n&&n(e)}),t)},n.prototype.replace=function(e,n,t){var i=this,r=this.current;this.transitionTo(e,(function(e){Ie(z(i.base+e.fullPath)),le(i.router,e,r,!1),n&&n(e)}),t)},n.prototype.ensureURL=function(e){if(Ye(this.base)!==this.current.fullPath){var n=z(this.base+this.current.fullPath);e?Te(n):Ie(n)}},n.prototype.getCurrentLocation=function(){return Ye(this.base)},n}(Se);function Ye(e){var n=window.location.pathname,t=n.toLowerCase(),i=e.toLowerCase();return!e||t!==i&&0!==t.indexOf(z(i+"/"))||(n=n.slice(e.length)),(n||"/")+window.location.search+window.location.hash}var Qe=function(e){function n(n,t,i){e.call(this,n,t),i&&function(e){var n=Ye(e);if(!/^\/#/.test(n))return window.location.replace(z(e+"/#"+n)),!0}(this.base)||Re()}return e&&(n.__proto__=e),n.prototype=Object.create(e&&e.prototype),n.prototype.constructor=n,n.prototype.setupListeners=function(){var e=this;if(!(this.listeners.length>0)){var n=this.router.options.scrollBehavior,t=he&&n;t&&this.listeners.push(se());var i=function(){var n=e.current;Re()&&e.transitionTo(qe(),(function(i){t&&le(e.router,i,n,!0),he||We(i.fullPath)}))},r=he?"popstate":"hashchange";window.addEventListener(r,i),this.listeners.push((function(){window.removeEventListener(r,i)}))}},n.prototype.push=function(e,n,t){var i=this,r=this.current;this.transitionTo(e,(function(e){Pe(e.fullPath),le(i.router,e,r,!1),n&&n(e)}),t)},n.prototype.replace=function(e,n,t){var i=this,r=this.current;this.transitionTo(e,(function(e){We(e.fullPath),le(i.router,e,r,!1),n&&n(e)}),t)},n.prototype.go=function(e){window.history.go(e)},n.prototype.ensureURL=function(e){var n=this.current.fullPath;qe()!==n&&(e?Pe(n):We(n))},n.prototype.getCurrentLocation=function(){return qe()},n}(Se);function Re(){var e=qe();return"/"===e.charAt(0)||(We("/"+e),!1)}function qe(){var e=window.location.href,n=e.indexOf("#");return n<0?"":e=e.slice(n+1)}function Ze(e){var n=window.location.href,t=n.indexOf("#");return(t>=0?n.slice(0,t):n)+"#"+e}function Pe(e){he?Te(Ze(e)):window.location.hash=e}function We(e){he?Ie(Ze(e)):window.location.replace(Ze(e))}var Ge=function(e){function n(n,t){e.call(this,n,t),this.stack=[],this.index=-1}return e&&(n.__proto__=e),n.prototype=Object.create(e&&e.prototype),n.prototype.constructor=n,n.prototype.push=function(e,n,t){var i=this;this.transitionTo(e,(function(e){i.stack=i.stack.slice(0,i.index+1).concat(e),i.index++,n&&n(e)}),t)},n.prototype.replace=function(e,n,t){var i=this;this.transitionTo(e,(function(e){i.stack=i.stack.slice(0,i.index).concat(e),n&&n(e)}),t)},n.prototype.go=function(e){var n=this,t=this.index+e;if(!(t<0||t>=this.stack.length)){var i=this.stack[t];this.confirmTransition(i,(function(){var e=n.current;n.index=t,n.updateRoute(i),n.router.afterHooks.forEach((function(n){n&&n(i,e)}))}),(function(e){be(e,Ne.duplicated)&&(n.index=t)}))}},n.prototype.getCurrentLocation=function(){var e=this.stack[this.stack.length-1];return e?e.fullPath:"/"},n.prototype.ensureURL=function(){},n}(Se),Fe=function(e){void 0===e&&(e={}),this.app=null,this.apps=[],this.options=e,this.beforeHooks=[],this.resolveHooks=[],this.afterHooks=[],this.matcher=$(e.routes||[],this);var n=e.mode||"hash";switch(this.fallback="history"===n&&!he&&!1!==e.fallback,this.fallback&&(n="hash"),K||(n="abstract"),this.mode=n,n){case"history":this.history=new Ue(this,e.base);break;case"hash":this.history=new Qe(this,e.base,this.fallback);break;case"abstract":this.history=new Ge(this,e.base);break;default:0}},Be={currentRoute:{configurable:!0}};function Ve(e,n){return e.push(n),function(){var t=e.indexOf(n);t>-1&&e.splice(t,1)}}Fe.prototype.match=function(e,n,t){return this.matcher.match(e,n,t)},Be.currentRoute.get=function(){return this.history&&this.history.current},Fe.prototype.init=function(e){var n=this;if(this.apps.push(e),e.$once("hook:destroyed",(function(){var t=n.apps.indexOf(e);t>-1&&n.apps.splice(t,1),n.app===e&&(n.app=n.apps[0]||null),n.app||n.history.teardown()})),!this.app){this.app=e;var t=this.history;if(t instanceof Ue||t instanceof Qe){var i=function(e){t.setupListeners(),function(e){var i=t.current,r=n.options.scrollBehavior;he&&r&&"fullPath"in e&&le(n,e,i,!1)}(e)};t.transitionTo(t.getCurrentLocation(),i,i)}t.listen((function(e){n.apps.forEach((function(n){n._route=e}))}))}},Fe.prototype.beforeEach=function(e){return Ve(this.beforeHooks,e)},Fe.prototype.beforeResolve=function(e){return Ve(this.resolveHooks,e)},Fe.prototype.afterEach=function(e){return Ve(this.afterHooks,e)},Fe.prototype.onReady=function(e,n){this.history.onReady(e,n)},Fe.prototype.onError=function(e){this.history.onError(e)},Fe.prototype.push=function(e,n,t){var i=this;if(!n&&!t&&"undefined"!=typeof Promise)return new Promise((function(n,t){i.history.push(e,n,t)}));this.history.push(e,n,t)},Fe.prototype.replace=function(e,n,t){var i=this;if(!n&&!t&&"undefined"!=typeof Promise)return new Promise((function(n,t){i.history.replace(e,n,t)}));this.history.replace(e,n,t)},Fe.prototype.go=function(e){this.history.go(e)},Fe.prototype.back=function(){this.go(-1)},Fe.prototype.forward=function(){this.go(1)},Fe.prototype.getMatchedComponents=function(e){var n=e?e.matched?e:this.resolve(e).route:this.currentRoute;return n?[].concat.apply([],n.matched.map((function(e){return Object.keys(e.components).map((function(n){return e.components[n]}))}))):[]},Fe.prototype.resolve=function(e,n,t){var i=F(e,n=n||this.history.current,t,this),r=this.match(i,n),a=r.redirectedFrom||r.fullPath;return{location:i,route:r,href:function(e,n,t){var i="hash"===t?"#"+n:n;return e?z(e+"/"+i):i}(this.history.base,a,this.mode),normalizedTo:i,resolved:r}},Fe.prototype.getRoutes=function(){return this.matcher.getRoutes()},Fe.prototype.addRoute=function(e,n){this.matcher.addRoute(e,n),this.history.current!==h&&this.history.transitionTo(this.history.getCurrentLocation())},Fe.prototype.addRoutes=function(e){this.matcher.addRoutes(e),this.history.current!==h&&this.history.transitionTo(this.history.getCurrentLocation())},Object.defineProperties(Fe.prototype,Be),Fe.install=function e(n){if(!e.installed||B!==n){e.installed=!0,B=n;var t=function(e){return void 0!==e},i=function(e,n){var i=e.$options._parentVnode;t(i)&&t(i=i.data)&&t(i=i.registerRouteInstance)&&i(e,n)};n.mixin({beforeCreate:function(){t(this.$options.router)?(this._routerRoot=this,this._router=this.$options.router,this._router.init(this),n.util.defineReactive(this,"_route",this._router.history.current)):this._routerRoot=this.$parent&&this.$parent._routerRoot||this,i(this,this)},destroyed:function(){i(this)}}),Object.defineProperty(n.prototype,"$router",{get:function(){return this._routerRoot._router}}),Object.defineProperty(n.prototype,"$route",{get:function(){return this._routerRoot._route}}),n.component("RouterView",w),n.component("RouterLink",J);var r=n.config.optionMergeStrategies;r.beforeRouteEnter=r.beforeRouteLeave=r.beforeRouteUpdate=r.created}},Fe.version="3.5.3",Fe.isNavigationFailure=be,Fe.NavigationFailureType=Ne,Fe.START_LOCATION=h,K&&window.Vue&&window.Vue.use(Fe);var Je=Fe;t(165),t(166),t(242),t(111),t(131),t(64),t(65),t(244);function He(e){e.locales&&Object.keys(e.locales).forEach((function(n){e.locales[n].path=n})),Object.freeze(e)}t(61),t(81),t(115);function Ke(e){return(Ke="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var _e=t(53),Xe=(t(177),t(34),t(126),t(210),t(215),t(37),t(36),{BlogsList:function(){return Promise.all([t.e(0),t.e(1),t.e(2),t.e(20)]).then(t.bind(null,602))},BlogsPost:function(){return Promise.all([t.e(0),t.e(1),t.e(2),t.e(14)]).then(t.bind(null,603))},CompanyAbout:function(){return Promise.all([t.e(0),t.e(1),t.e(10)]).then(t.bind(null,601))},CompanyContact:function(){return Promise.all([t.e(0),t.e(1),t.e(13),t.e(11)]).then(t.bind(null,604))},CompanyLegals:function(){return Promise.all([t.e(0),t.e(1),t.e(2),t.e(16)]).then(t.bind(null,605))},FeaturesFeatures:function(){return Promise.all([t.e(0),t.e(1),t.e(3),t.e(8)]).then(t.bind(null,599))},FeaturesUsage:function(){return Promise.all([t.e(0),t.e(1),t.e(7)]).then(t.bind(null,600))},Home:function(){return Promise.all([t.e(0),t.e(1),t.e(3),t.e(12),t.e(5)]).then(t.bind(null,597))},Layout:function(){return Promise.all([t.e(0),t.e(1),t.e(9),t.e(6)]).then(t.bind(null,606))},NotFound:function(){return t.e(26).then(t.bind(null,607))}}),$e={"v-3140ed9c":function(){return t.e(184).then(t.bind(null,608))},"v-b037671e":function(){return t.e(18).then(t.bind(null,609))},"v-7f3b5936":function(){return t.e(21).then(t.bind(null,610))},"v-1af8f4dc":function(){return t.e(27).then(t.bind(null,611))},"v-79ae536f":function(){return t.e(28).then(t.bind(null,612))},"v-0b50773a":function(){return t.e(29).then(t.bind(null,613))},"v-135cabfa":function(){return t.e(30).then(t.bind(null,614))},"v-f3216c06":function(){return t.e(31).then(t.bind(null,615))},"v-24306408":function(){return t.e(32).then(t.bind(null,616))},"v-04b425b0":function(){return t.e(33).then(t.bind(null,617))},"v-c4be06f0":function(){return t.e(34).then(t.bind(null,618))},"v-6e805448":function(){return t.e(35).then(t.bind(null,619))},"v-46e6e13e":function(){return t.e(36).then(t.bind(null,620))},"v-1a638528":function(){return t.e(37).then(t.bind(null,621))},"v-7dcd35a1":function(){return t.e(38).then(t.bind(null,622))},"v-5efc1fd6":function(){return t.e(39).then(t.bind(null,623))},"v-e6985960":function(){return t.e(40).then(t.bind(null,624))},"v-5e4b3d72":function(){return t.e(41).then(t.bind(null,625))},"v-67c3e868":function(){return t.e(42).then(t.bind(null,626))},"v-636e3ee8":function(){return t.e(43).then(t.bind(null,627))},"v-3ef378d0":function(){return t.e(44).then(t.bind(null,628))},"v-f99b39f0":function(){return t.e(45).then(t.bind(null,629))},"v-55acd5fe":function(){return t.e(46).then(t.bind(null,630))},"v-6842f008":function(){return t.e(47).then(t.bind(null,631))},"v-7854a970":function(){return t.e(48).then(t.bind(null,632))},"v-026cac48":function(){return t.e(49).then(t.bind(null,633))},"v-db882e10":function(){return t.e(50).then(t.bind(null,634))},"v-12b44ec8":function(){return t.e(51).then(t.bind(null,635))},"v-be84a670":function(){return t.e(22).then(t.bind(null,636))},"v-11cc6b58":function(){return t.e(52).then(t.bind(null,637))},"v-a42a4c0e":function(){return t.e(53).then(t.bind(null,638))},"v-631e077a":function(){return t.e(54).then(t.bind(null,639))},"v-477f7948":function(){return t.e(55).then(t.bind(null,640))},"v-2bdad6a8":function(){return t.e(56).then(t.bind(null,641))},"v-587c915c":function(){return t.e(57).then(t.bind(null,642))},"v-5a7b3ee8":function(){return t.e(19).then(t.bind(null,643))},"v-550d8c48":function(){return t.e(58).then(t.bind(null,644))},"v-8488a8b4":function(){return t.e(59).then(t.bind(null,645))},"v-2a1991f2":function(){return t.e(60).then(t.bind(null,646))},"v-7db39c08":function(){return t.e(61).then(t.bind(null,647))},"v-019a6270":function(){return t.e(23).then(t.bind(null,648))},"v-a824f470":function(){return t.e(62).then(t.bind(null,649))},"v-92b626b0":function(){return t.e(63).then(t.bind(null,650))},"v-7e6b41b0":function(){return t.e(64).then(t.bind(null,651))},"v-2b85cc88":function(){return t.e(65).then(t.bind(null,652))},"v-084d894c":function(){return t.e(66).then(t.bind(null,653))},"v-801f5ac2":function(){return t.e(67).then(t.bind(null,654))},"v-4a03194d":function(){return t.e(68).then(t.bind(null,655))},"v-53d2e383":function(){return t.e(69).then(t.bind(null,656))},"v-472d66c8":function(){return t.e(70).then(t.bind(null,657))},"v-64153d4f":function(){return t.e(71).then(t.bind(null,658))},"v-854686b0":function(){return t.e(72).then(t.bind(null,659))},"v-23612046":function(){return t.e(73).then(t.bind(null,660))},"v-379f3ffa":function(){return t.e(74).then(t.bind(null,661))},"v-500babc3":function(){return t.e(75).then(t.bind(null,662))},"v-a9bb447a":function(){return t.e(76).then(t.bind(null,663))},"v-375945a3":function(){return t.e(77).then(t.bind(null,664))},"v-5ce9c2ba":function(){return t.e(78).then(t.bind(null,665))},"v-2d82e9df":function(){return t.e(79).then(t.bind(null,666))},"v-6ad1b17a":function(){return t.e(80).then(t.bind(null,667))},"v-03cc083c":function(){return t.e(81).then(t.bind(null,668))},"v-7048180f":function(){return t.e(82).then(t.bind(null,669))},"v-f7b823fa":function(){return t.e(83).then(t.bind(null,670))},"v-32f7ff6b":function(){return t.e(84).then(t.bind(null,671))},"v-1d9a471b":function(){return t.e(85).then(t.bind(null,672))},"v-25d11766":function(){return t.e(86).then(t.bind(null,673))},"v-37ca54ba":function(){return t.e(87).then(t.bind(null,674))},"v-ee9465ee":function(){return t.e(88).then(t.bind(null,675))},"v-0c942c63":function(){return t.e(89).then(t.bind(null,676))},"v-6a7e2aba":function(){return t.e(90).then(t.bind(null,677))},"v-b5fc07fa":function(){return t.e(91).then(t.bind(null,678))},"v-6aaaa611":function(){return t.e(92).then(t.bind(null,679))},"v-a23bbe52":function(){return t.e(93).then(t.bind(null,680))},"v-013a3ed6":function(){return t.e(94).then(t.bind(null,681))},"v-7ca4bf39":function(){return t.e(95).then(t.bind(null,682))},"v-9b3e234e":function(){return t.e(96).then(t.bind(null,683))},"v-2727b023":function(){return t.e(97).then(t.bind(null,684))},"v-1ff105fa":function(){return t.e(98).then(t.bind(null,685))},"v-8d2ddbb6":function(){return t.e(99).then(t.bind(null,686))},"v-e365f37a":function(){return t.e(100).then(t.bind(null,687))},"v-eb0176fa":function(){return t.e(101).then(t.bind(null,688))},"v-a0e5effa":function(){return t.e(102).then(t.bind(null,689))},"v-277041d2":function(){return t.e(103).then(t.bind(null,690))},"v-4aab2c43":function(){return t.e(104).then(t.bind(null,691))},"v-6a8b44a3":function(){return t.e(105).then(t.bind(null,692))},"v-05829129":function(){return t.e(106).then(t.bind(null,693))},"v-e36ba57a":function(){return t.e(107).then(t.bind(null,694))},"v-74595f62":function(){return t.e(108).then(t.bind(null,695))},"v-3b433f3a":function(){return t.e(109).then(t.bind(null,696))},"v-c3d3ac7a":function(){return t.e(110).then(t.bind(null,697))},"v-43215b83":function(){return t.e(111).then(t.bind(null,698))},"v-413ff743":function(){return t.e(112).then(t.bind(null,699))},"v-42c49689":function(){return t.e(113).then(t.bind(null,700))},"v-12a41843":function(){return t.e(114).then(t.bind(null,701))},"v-af16fdfa":function(){return t.e(115).then(t.bind(null,702))},"v-290ae021":function(){return t.e(116).then(t.bind(null,703))},"v-a615a37a":function(){return t.e(117).then(t.bind(null,704))},"v-8e6978ba":function(){return t.e(118).then(t.bind(null,705))},"v-1fe614e2":function(){return t.e(119).then(t.bind(null,706))},"v-0194b523":function(){return t.e(120).then(t.bind(null,707))},"v-028c2615":function(){return t.e(121).then(t.bind(null,708))},"v-95584f7a":function(){return t.e(123).then(t.bind(null,709))},"v-26ff90c3":function(){return t.e(124).then(t.bind(null,710))},"v-2afbd45e":function(){return t.e(125).then(t.bind(null,711))},"v-5abd22fa":function(){return t.e(122).then(t.bind(null,712))},"v-2d2dbf23":function(){return t.e(126).then(t.bind(null,713))},"v-33246d6c":function(){return t.e(127).then(t.bind(null,714))},"v-97f5f47a":function(){return t.e(128).then(t.bind(null,715))},"v-34f53695":function(){return t.e(129).then(t.bind(null,716))},"v-0d071783":function(){return t.e(132).then(t.bind(null,717))},"v-6fab4526":function(){return t.e(133).then(t.bind(null,718))},"v-a066783a":function(){return t.e(134).then(t.bind(null,719))},"v-68153c43":function(){return t.e(135).then(t.bind(null,720))},"v-0aa012d1":function(){return t.e(136).then(t.bind(null,721))},"v-781b89e8":function(){return t.e(137).then(t.bind(null,722))},"v-2652c323":function(){return t.e(138).then(t.bind(null,723))},"v-8587667a":function(){return t.e(139).then(t.bind(null,724))},"v-e12df7aa":function(){return t.e(140).then(t.bind(null,725))},"v-2b9b85e5":function(){return t.e(142).then(t.bind(null,726))},"v-33b417a3":function(){return t.e(141).then(t.bind(null,727))},"v-f3d3490e":function(){return t.e(143).then(t.bind(null,728))},"v-6fae6643":function(){return t.e(144).then(t.bind(null,729))},"v-2c735824":function(){return t.e(145).then(t.bind(null,730))},"v-4fe9ff3a":function(){return t.e(146).then(t.bind(null,731))},"v-562d6fe3":function(){return t.e(147).then(t.bind(null,732))},"v-416ac725":function(){return t.e(148).then(t.bind(null,733))},"v-f8095e16":function(){return t.e(149).then(t.bind(null,734))},"v-47b2e3ee":function(){return t.e(150).then(t.bind(null,735))},"v-0b5d6643":function(){return t.e(151).then(t.bind(null,736))},"v-3d85960b":function(){return t.e(152).then(t.bind(null,737))},"v-720f7fba":function(){return t.e(153).then(t.bind(null,738))},"v-787eb528":function(){return t.e(17).then(t.bind(null,739))},"v-4e9ad7a0":function(){return t.e(24).then(t.bind(null,740))},"v-af19e69c":function(){return t.e(154).then(t.bind(null,741))},"v-e5195c30":function(){return t.e(155).then(t.bind(null,742))},"v-74d8f83a":function(){return t.e(156).then(t.bind(null,743))},"v-e228dff0":function(){return t.e(157).then(t.bind(null,744))},"v-51cba32a":function(){return t.e(158).then(t.bind(null,745))},"v-c38cdba0":function(){return t.e(159).then(t.bind(null,746))},"v-5cb2b138":function(){return t.e(160).then(t.bind(null,747))},"v-2e06cf88":function(){return t.e(161).then(t.bind(null,748))},"v-528bedd8":function(){return t.e(162).then(t.bind(null,749))},"v-219eff68":function(){return t.e(163).then(t.bind(null,750))},"v-7f4ed1e3":function(){return t.e(164).then(t.bind(null,751))},"v-3711fea3":function(){return t.e(166).then(t.bind(null,752))},"v-66dc4b5d":function(){return t.e(165).then(t.bind(null,753))},"v-6a782823":function(){return t.e(167).then(t.bind(null,754))},"v-27b76acd":function(){return t.e(168).then(t.bind(null,755))},"v-2725e445":function(){return t.e(169).then(t.bind(null,756))},"v-1eda64e3":function(){return t.e(170).then(t.bind(null,757))},"v-19d6ff43":function(){return t.e(171).then(t.bind(null,758))},"v-3a854743":function(){return t.e(172).then(t.bind(null,759))},"v-dc92b792":function(){return t.e(173).then(t.bind(null,760))},"v-738f2343":function(){return t.e(174).then(t.bind(null,761))},"v-7f0a4243":function(){return t.e(175).then(t.bind(null,762))},"v-43eb08ea":function(){return t.e(176).then(t.bind(null,763))},"v-3d69dc03":function(){return t.e(177).then(t.bind(null,764))},"v-01ccd343":function(){return t.e(179).then(t.bind(null,765))},"v-8f9c8b7a":function(){return t.e(178).then(t.bind(null,766))},"v-575b40ba":function(){return t.e(180).then(t.bind(null,767))},"v-e2dba7ba":function(){return t.e(181).then(t.bind(null,768))},"v-209f3a3c":function(){return t.e(15).then(t.bind(null,769))},"v-ce2ac07a":function(){return t.e(182).then(t.bind(null,770))},"v-4d379c23":function(){return t.e(183).then(t.bind(null,771))},"v-8c82ad54":function(){return t.e(185).then(t.bind(null,772))},"v-cb94d530":function(){return t.e(186).then(t.bind(null,773))},"v-afdbda3a":function(){return t.e(187).then(t.bind(null,774))},"v-16365a03":function(){return t.e(188).then(t.bind(null,775))},"v-077dee92":function(){return t.e(189).then(t.bind(null,776))},"v-1813e7fa":function(){return t.e(190).then(t.bind(null,777))},"v-01b63a32":function(){return t.e(191).then(t.bind(null,778))},"v-2ad254c3":function(){return t.e(192).then(t.bind(null,779))},"v-62e587fd":function(){return t.e(193).then(t.bind(null,780))},"v-26cecde3":function(){return t.e(194).then(t.bind(null,781))},"v-44d81fa3":function(){return t.e(195).then(t.bind(null,782))},"v-61ce6341":function(){return t.e(196).then(t.bind(null,783))},"v-71a5b7ba":function(){return t.e(197).then(t.bind(null,784))},"v-8448cf32":function(){return t.e(198).then(t.bind(null,785))},"v-a441d7ce":function(){return t.e(199).then(t.bind(null,786))},"v-775e78a3":function(){return t.e(200).then(t.bind(null,787))},"v-40d34635":function(){return t.e(201).then(t.bind(null,788))},"v-a09528c2":function(){return t.e(202).then(t.bind(null,789))},"v-19408c3a":function(){return t.e(203).then(t.bind(null,790))},"v-23bac36d":function(){return t.e(204).then(t.bind(null,791))},"v-1b25d55f":function(){return t.e(205).then(t.bind(null,792))},"v-1827886f":function(){return t.e(206).then(t.bind(null,793))},"v-3fc91bd3":function(){return t.e(207).then(t.bind(null,794))},"v-4162bd61":function(){return t.e(208).then(t.bind(null,795))},"v-49f10763":function(){return t.e(209).then(t.bind(null,796))},"v-dd1e609e":function(){return t.e(210).then(t.bind(null,797))},"v-797da7c7":function(){return t.e(211).then(t.bind(null,798))},"v-52208f8a":function(){return t.e(213).then(t.bind(null,799))},"v-1efc3447":function(){return t.e(214).then(t.bind(null,800))},"v-1c59ef6b":function(){return t.e(215).then(t.bind(null,801))},"v-6a588fb7":function(){return t.e(216).then(t.bind(null,802))},"v-0943ab37":function(){return t.e(217).then(t.bind(null,803))},"v-66fcc649":function(){return t.e(218).then(t.bind(null,804))},"v-ae992146":function(){return t.e(220).then(t.bind(null,805))},"v-541b8ec5":function(){return t.e(219).then(t.bind(null,806))},"v-719322e3":function(){return t.e(221).then(t.bind(null,807))},"v-19cb5103":function(){return t.e(222).then(t.bind(null,808))},"v-33989629":function(){return t.e(223).then(t.bind(null,809))},"v-63419da8":function(){return t.e(224).then(t.bind(null,810))},"v-f8cd9ab6":function(){return t.e(225).then(t.bind(null,811))},"v-1ac4429b":function(){return t.e(226).then(t.bind(null,812))},"v-222de1a1":function(){return t.e(227).then(t.bind(null,813))},"v-2164bfef":function(){return t.e(228).then(t.bind(null,814))},"v-9e03bf08":function(){return t.e(229).then(t.bind(null,815))},"v-518c7fba":function(){return t.e(230).then(t.bind(null,816))},"v-6717a943":function(){return t.e(212).then(t.bind(null,817))},"v-1644ab03":function(){return t.e(231).then(t.bind(null,818))},"v-773120b3":function(){return t.e(232).then(t.bind(null,819))},"v-2d261431":function(){return t.e(233).then(t.bind(null,820))},"v-73d7027e":function(){return t.e(234).then(t.bind(null,821))},"v-23b873ba":function(){return t.e(235).then(t.bind(null,822))},"v-20fc1dba":function(){return t.e(236).then(t.bind(null,823))},"v-57685830":function(){return t.e(237).then(t.bind(null,824))},"v-95b3b072":function(){return t.e(238).then(t.bind(null,825))},"v-0d5cccba":function(){return t.e(239).then(t.bind(null,826))},"v-7a84821f":function(){return t.e(240).then(t.bind(null,827))},"v-9bcb74fa":function(){return t.e(241).then(t.bind(null,828))},"v-8c4eabfa":function(){return t.e(242).then(t.bind(null,829))},"v-326d1311":function(){return t.e(243).then(t.bind(null,830))},"v-2599af9b":function(){return t.e(244).then(t.bind(null,831))},"v-70b0dc34":function(){return t.e(245).then(t.bind(null,832))},"v-aac0365a":function(){return t.e(246).then(t.bind(null,833))},"v-a582424e":function(){return t.e(247).then(t.bind(null,834))},"v-f82935ba":function(){return t.e(248).then(t.bind(null,835))},"v-8041dca6":function(){return t.e(249).then(t.bind(null,836))},"v-3ee58187":function(){return t.e(250).then(t.bind(null,837))},"v-9d7f3bb2":function(){return t.e(251).then(t.bind(null,838))},"v-5106e98f":function(){return t.e(252).then(t.bind(null,839))},"v-2794b055":function(){return t.e(253).then(t.bind(null,840))},"v-2eb43963":function(){return t.e(254).then(t.bind(null,841))},"v-301a84ae":function(){return t.e(255).then(t.bind(null,842))},"v-c8549002":function(){return t.e(130).then(t.bind(null,843))},"v-66971463":function(){return t.e(257).then(t.bind(null,844))},"v-44eda015":function(){return t.e(258).then(t.bind(null,845))},"v-179b58e3":function(){return t.e(259).then(t.bind(null,846))},"v-4d47e5e2":function(){return t.e(260).then(t.bind(null,847))},"v-dba4f856":function(){return t.e(261).then(t.bind(null,848))},"v-25e39163":function(){return t.e(262).then(t.bind(null,849))},"v-8ddf9dae":function(){return t.e(263).then(t.bind(null,850))},"v-23a689c3":function(){return t.e(264).then(t.bind(null,851))},"v-2227903a":function(){return t.e(265).then(t.bind(null,852))},"v-dd0918da":function(){return t.e(267).then(t.bind(null,853))},"v-2942bfcf":function(){return t.e(266).then(t.bind(null,854))},"v-e8e4bfda":function(){return t.e(268).then(t.bind(null,855))},"v-73d31e48":function(){return t.e(269).then(t.bind(null,856))},"v-7ecaadb9":function(){return t.e(270).then(t.bind(null,857))},"v-fb396f7a":function(){return t.e(271).then(t.bind(null,858))},"v-3c55e943":function(){return t.e(272).then(t.bind(null,859))},"v-dbc6f7ba":function(){return t.e(273).then(t.bind(null,860))},"v-6cf47c7f":function(){return t.e(275).then(t.bind(null,861))},"v-54ad6563":function(){return t.e(274).then(t.bind(null,862))},"v-7be064a9":function(){return t.e(276).then(t.bind(null,863))},"v-4e5709e3":function(){return t.e(277).then(t.bind(null,864))},"v-537b77c3":function(){return t.e(278).then(t.bind(null,865))},"v-70e9faad":function(){return t.e(279).then(t.bind(null,866))},"v-3ecdebba":function(){return t.e(280).then(t.bind(null,867))},"v-3cc1b3e3":function(){return t.e(281).then(t.bind(null,868))},"v-5a70b4ba":function(){return t.e(282).then(t.bind(null,869))},"v-6ac937fa":function(){return t.e(283).then(t.bind(null,870))},"v-f84f1f7a":function(){return t.e(284).then(t.bind(null,871))},"v-71f83321":function(){return t.e(285).then(t.bind(null,872))},"v-0098a6ba":function(){return t.e(286).then(t.bind(null,873))},"v-5d6ce852":function(){return t.e(287).then(t.bind(null,874))},"v-577c0243":function(){return t.e(288).then(t.bind(null,875))},"v-4b49bddb":function(){return t.e(289).then(t.bind(null,876))},"v-705330c6":function(){return t.e(290).then(t.bind(null,877))},"v-767d6be3":function(){return t.e(291).then(t.bind(null,878))},"v-4e398af1":function(){return t.e(292).then(t.bind(null,879))},"v-f98a25f2":function(){return t.e(293).then(t.bind(null,880))},"v-324c92aa":function(){return t.e(294).then(t.bind(null,881))},"v-245a3723":function(){return t.e(295).then(t.bind(null,882))},"v-c4879c7a":function(){return t.e(296).then(t.bind(null,883))},"v-4e1bbd2a":function(){return t.e(297).then(t.bind(null,884))},"v-501aa0f3":function(){return t.e(298).then(t.bind(null,885))},"v-21037370":function(){return t.e(299).then(t.bind(null,886))},"v-5a6906b5":function(){return t.e(300).then(t.bind(null,887))},"v-c5d146d2":function(){return t.e(301).then(t.bind(null,888))},"v-ab3dc446":function(){return t.e(302).then(t.bind(null,889))},"v-e50be976":function(){return t.e(303).then(t.bind(null,890))},"v-4afee39e":function(){return t.e(304).then(t.bind(null,891))},"v-5bc6a46b":function(){return t.e(305).then(t.bind(null,892))},"v-54c3f0d9":function(){return t.e(306).then(t.bind(null,893))},"v-06f7403a":function(){return t.e(307).then(t.bind(null,894))},"v-0d5f7288":function(){return t.e(308).then(t.bind(null,895))},"v-14e1fb83":function(){return t.e(309).then(t.bind(null,896))},"v-54b8ba20":function(){return t.e(310).then(t.bind(null,897))},"v-67f4797a":function(){return t.e(311).then(t.bind(null,898))},"v-10ba6270":function(){return t.e(312).then(t.bind(null,899))},"v-604496fa":function(){return t.e(313).then(t.bind(null,900))},"v-36f917a8":function(){return t.e(314).then(t.bind(null,901))},"v-acc87596":function(){return t.e(315).then(t.bind(null,902))},"v-1fd8c93a":function(){return t.e(316).then(t.bind(null,903))},"v-e377b17a":function(){return t.e(317).then(t.bind(null,904))},"v-3d3efab0":function(){return t.e(318).then(t.bind(null,905))},"v-fbc18ffa":function(){return t.e(319).then(t.bind(null,906))},"v-9ad35d10":function(){return t.e(320).then(t.bind(null,907))},"v-02960fc3":function(){return t.e(321).then(t.bind(null,908))},"v-29f37a98":function(){return t.e(322).then(t.bind(null,909))},"v-c01409fa":function(){return t.e(323).then(t.bind(null,910))},"v-018f4203":function(){return t.e(324).then(t.bind(null,911))},"v-52217188":function(){return t.e(325).then(t.bind(null,912))},"v-2e11c6f2":function(){return t.e(326).then(t.bind(null,913))},"v-0bdf51d6":function(){return t.e(327).then(t.bind(null,914))},"v-3720c639":function(){return t.e(328).then(t.bind(null,915))},"v-6d55a783":function(){return t.e(329).then(t.bind(null,916))},"v-5114ce42":function(){return t.e(330).then(t.bind(null,917))},"v-6aa16659":function(){return t.e(331).then(t.bind(null,918))},"v-3a591248":function(){return t.e(332).then(t.bind(null,919))},"v-4f9eee3a":function(){return t.e(333).then(t.bind(null,920))},"v-f32cad3a":function(){return t.e(334).then(t.bind(null,921))},"v-45663aff":function(){return t.e(335).then(t.bind(null,922))},"v-386bb2dd":function(){return t.e(336).then(t.bind(null,923))},"v-4d8f95c3":function(){return t.e(338).then(t.bind(null,924))},"v-66b72beb":function(){return t.e(337).then(t.bind(null,925))},"v-bdff5170":function(){return t.e(339).then(t.bind(null,926))},"v-02cf38e3":function(){return t.e(340).then(t.bind(null,927))},"v-59bdfabb":function(){return t.e(341).then(t.bind(null,928))},"v-043c5470":function(){return t.e(342).then(t.bind(null,929))},"v-5f95afe3":function(){return t.e(343).then(t.bind(null,930))},"v-5211966b":function(){return t.e(344).then(t.bind(null,931))},"v-0b5737be":function(){return t.e(345).then(t.bind(null,932))},"v-0511d7ba":function(){return t.e(346).then(t.bind(null,933))},"v-5faa4ec7":function(){return t.e(347).then(t.bind(null,934))},"v-3bbf4cdc":function(){return t.e(348).then(t.bind(null,935))},"v-18af94bb":function(){return t.e(349).then(t.bind(null,936))},"v-7a45215b":function(){return t.e(350).then(t.bind(null,937))},"v-40cfe323":function(){return t.e(352).then(t.bind(null,938))},"v-69ffc923":function(){return t.e(351).then(t.bind(null,939))},"v-415b3a4f":function(){return t.e(353).then(t.bind(null,940))},"v-ba1e7222":function(){return t.e(354).then(t.bind(null,941))},"v-99d1487a":function(){return t.e(355).then(t.bind(null,942))},"v-ec31147a":function(){return t.e(356).then(t.bind(null,943))},"v-ceb69070":function(){return t.e(357).then(t.bind(null,944))},"v-caee76d6":function(){return t.e(358).then(t.bind(null,945))},"v-8966c87a":function(){return t.e(359).then(t.bind(null,946))},"v-0593a543":function(){return t.e(360).then(t.bind(null,947))},"v-251abf8f":function(){return t.e(361).then(t.bind(null,948))},"v-5fde3b03":function(){return t.e(362).then(t.bind(null,949))},"v-51d3ffda":function(){return t.e(363).then(t.bind(null,950))},"v-55ac30df":function(){return t.e(364).then(t.bind(null,951))},"v-c76544ba":function(){return t.e(366).then(t.bind(null,952))},"v-7662856f":function(){return t.e(365).then(t.bind(null,953))},"v-9e876dba":function(){return t.e(367).then(t.bind(null,954))},"v-8271f6fa":function(){return t.e(368).then(t.bind(null,955))},"v-7c7dff3a":function(){return t.e(369).then(t.bind(null,956))},"v-0ae15a7a":function(){return t.e(370).then(t.bind(null,957))},"v-91e0edfa":function(){return t.e(371).then(t.bind(null,958))},"v-fafa84b2":function(){return t.e(372).then(t.bind(null,959))},"v-6404442b":function(){return t.e(373).then(t.bind(null,960))},"v-0350a017":function(){return t.e(374).then(t.bind(null,961))},"v-75738383":function(){return t.e(375).then(t.bind(null,962))},"v-f6b12eb2":function(){return t.e(376).then(t.bind(null,963))},"v-914861fa":function(){return t.e(377).then(t.bind(null,964))},"v-1057d903":function(){return t.e(378).then(t.bind(null,965))},"v-3487036a":function(){return t.e(379).then(t.bind(null,966))},"v-138cdb7a":function(){return t.e(380).then(t.bind(null,967))},"v-24deb5bf":function(){return t.e(381).then(t.bind(null,968))},"v-635b8d0f":function(){return t.e(382).then(t.bind(null,969))},"v-362c4c43":function(){return t.e(383).then(t.bind(null,970))},"v-7315418f":function(){return t.e(384).then(t.bind(null,971))},"v-349a2355":function(){return t.e(385).then(t.bind(null,972))},"v-15212176":function(){return t.e(386).then(t.bind(null,973))},"v-08265ca7":function(){return t.e(387).then(t.bind(null,974))},"v-7e28e877":function(){return t.e(388).then(t.bind(null,975))},"v-b544102e":function(){return t.e(131).then(t.bind(null,976))},"v-52891643":function(){return t.e(256).then(t.bind(null,977))}};function en(e){var n=Object.create(null);return function(t){return n[t]||(n[t]=e(t))}}var nn=/-(\w)/g,tn=en((function(e){return e.replace(nn,(function(e,n){return n?n.toUpperCase():""}))})),rn=/\B([A-Z])/g,an=en((function(e){return e.replace(rn,"-$1").toLowerCase()})),on=en((function(e){return e.charAt(0).toUpperCase()+e.slice(1)}));function sn(e,n){if(n)return e(n)?e(n):n.includes("-")?e(on(tn(n))):e(on(n))||e(an(n))}var ln=Object.assign({},Xe,$e),un=function(e){return ln[e]},cn=function(e){return $e[e]},dn=function(e){return Xe[e]},pn=function(e){return r.a.component(e)};function gn(e){return sn(cn,e)}function yn(e){return sn(dn,e)}function mn(e){return sn(un,e)}function Mn(e){return sn(pn,e)}function hn(){for(var e=arguments.length,n=new Array(e),t=0;t<e;t++)n[t]=arguments[t];return Promise.all(n.filter((function(e){return e})).map(function(){var e=Object(i.a)(regeneratorRuntime.mark((function e(n){var t;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(Mn(n)||!mn(n)){e.next=5;break}return e.next=3,mn(n)();case 3:t=e.sent,r.a.component(n,t.default);case 5:case"end":return e.stop()}}),e)})));return function(n){return e.apply(this,arguments)}}()))}function Tn(e,n){"undefined"!=typeof window&&window.__VUEPRESS__&&(window.__VUEPRESS__[e]=n)}var In=t(125),fn=(t(259),t(216),t(127),t(206)),Nn=t.n(fn),jn=t(207),wn=t.n(jn),Ln={created:function(){if(this.siteMeta=this.$site.headTags.filter((function(e){return"meta"===Object(In.a)(e,1)[0]})).map((function(e){var n=Object(In.a)(e,2);n[0];return n[1]})),this.$ssrContext){var e=this.getMergedMetaTags();this.$ssrContext.title=this.$title,this.$ssrContext.lang=this.$lang,this.$ssrContext.pageMeta=(n=e)?n.map((function(e){var n="<meta";return Object.keys(e).forEach((function(t){n+=" ".concat(t,'="').concat(wn()(e[t]),'"')})),n+">"})).join("\n    "):"",this.$ssrContext.canonicalLink=zn(this.$canonicalUrl)}var n},mounted:function(){this.currentMetaTags=Object(_e.a)(document.querySelectorAll("meta")),this.updateMeta(),this.updateCanonicalLink()},methods:{updateMeta:function(){document.title=this.$title,document.documentElement.lang=this.$lang;var e=this.getMergedMetaTags();this.currentMetaTags=bn(e,this.currentMetaTags)},getMergedMetaTags:function(){var e=this.$page.frontmatter.meta||[];return Nn()([{name:"description",content:this.$description}],e,this.siteMeta,kn)},updateCanonicalLink:function(){Dn(),this.$canonicalUrl&&document.head.insertAdjacentHTML("beforeend",zn(this.$canonicalUrl))}},watch:{$page:function(){this.updateMeta(),this.updateCanonicalLink()}},beforeDestroy:function(){bn(null,this.currentMetaTags),Dn()}};function Dn(){var e=document.querySelector("link[rel='canonical']");e&&e.remove()}function zn(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return e?'<link href="'.concat(e,'" rel="canonical" />'):""}function bn(e,n){if(n&&Object(_e.a)(n).filter((function(e){return e.parentNode===document.head})).forEach((function(e){return document.head.removeChild(e)})),e)return e.map((function(e){var n=document.createElement("meta");return Object.keys(e).forEach((function(t){n.setAttribute(t,e[t])})),document.head.appendChild(n),n}))}function kn(e){for(var n=0,t=["name","property","itemprop"];n<t.length;n++){var i=t[n];if(e.hasOwnProperty(i))return e[i]+i}return JSON.stringify(e)}var xn=t(208),Cn=t.n(xn),An=(t(355),{mounted:function(){Cn.a.polyfill()}}),vn=(t(94),t(90)),Sn=t.n(vn),On={mounted:function(){var e=this;Sn.a.configure({showSpinner:!1}),this.$router.beforeEach((function(e,n,t){e.path===n.path||r.a.component(e.name)||Sn.a.start(),t()})),this.$router.afterEach((function(){Sn.a.done(),e.isSidebarOpen=!1}))}};function En(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}t(88);function Un(e,n){for(var t=0;t<n.length;t++){var i=n[t];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}function Yn(e,n,t){return n&&Un(e.prototype,n),t&&Un(e,t),Object.defineProperty(e,"prototype",{writable:!1}),e}t(91),t(97);var Qn=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i])}return e},Rn=function(e){return"IMG"===e.tagName},qn=function(e){return e&&1===e.nodeType},Zn=function(e){return".svg"===(e.currentSrc||e.src).substr(-4).toLowerCase()},Pn=function(e){try{return Array.isArray(e)?e.filter(Rn):function(e){return NodeList.prototype.isPrototypeOf(e)}(e)?[].slice.call(e).filter(Rn):qn(e)?[e].filter(Rn):"string"==typeof e?[].slice.call(document.querySelectorAll(e)).filter(Rn):[]}catch(e){throw new TypeError("The provided selector is invalid.\nExpects a CSS selector, a Node element, a NodeList or an array.\nSee: https://github.com/francoischalifour/medium-zoom")}},Wn=function(e){var n=document.createElement("div");return n.classList.add("medium-zoom-overlay"),n.style.background=e,n},Gn=function(e){var n=e.getBoundingClientRect(),t=n.top,i=n.left,r=n.width,a=n.height,o=e.cloneNode(),s=window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0,l=window.pageXOffset||document.documentElement.scrollLeft||document.body.scrollLeft||0;return o.removeAttribute("id"),o.style.position="absolute",o.style.top=t+s+"px",o.style.left=i+l+"px",o.style.width=r+"px",o.style.height=a+"px",o.style.transform="",o},Fn=function(e,n){var t=Qn({bubbles:!1,cancelable:!1,detail:void 0},n);if("function"==typeof window.CustomEvent)return new CustomEvent(e,t);var i=document.createEvent("CustomEvent");return i.initCustomEvent(e,t.bubbles,t.cancelable,t.detail),i};!function(e,n){void 0===n&&(n={});var t=n.insertAt;if(e&&"undefined"!=typeof document){var i=document.head||document.getElementsByTagName("head")[0],r=document.createElement("style");r.type="text/css","top"===t&&i.firstChild?i.insertBefore(r,i.firstChild):i.appendChild(r),r.styleSheet?r.styleSheet.cssText=e:r.appendChild(document.createTextNode(e))}}(".medium-zoom-overlay{position:fixed;top:0;right:0;bottom:0;left:0;opacity:0;transition:opacity .3s;will-change:opacity}.medium-zoom--opened .medium-zoom-overlay{cursor:pointer;cursor:zoom-out;opacity:1}.medium-zoom-image{cursor:pointer;cursor:zoom-in;transition:transform .3s cubic-bezier(.2,0,.2,1)!important}.medium-zoom-image--hidden{visibility:hidden}.medium-zoom-image--opened{position:relative;cursor:pointer;cursor:zoom-out;will-change:transform}");var Bn=function e(n){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},i=window.Promise||function(e){function n(){}e(n,n)},r=function(e){var n=e.target;n!==D?-1!==I.indexOf(n)&&m({target:n}):y()},a=function(){if(!N&&L.original){var e=window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0;Math.abs(j-e)>w.scrollOffset&&setTimeout(y,150)}},o=function(e){var n=e.key||e.keyCode;"Escape"!==n&&"Esc"!==n&&27!==n||y()},s=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=e;if(e.background&&(D.style.background=e.background),e.container&&e.container instanceof Object&&(n.container=Qn({},w.container,e.container)),e.template){var t=qn(e.template)?e.template:document.querySelector(e.template);n.template=t}return w=Qn({},w,n),I.forEach((function(e){e.dispatchEvent(Fn("medium-zoom:update",{detail:{zoom:z}}))})),z},l=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return e(Qn({},w,n))},u=function(){for(var e=arguments.length,n=Array(e),t=0;t<e;t++)n[t]=arguments[t];var i=n.reduce((function(e,n){return[].concat(e,Pn(n))}),[]);return i.filter((function(e){return-1===I.indexOf(e)})).forEach((function(e){I.push(e),e.classList.add("medium-zoom-image")})),f.forEach((function(e){var n=e.type,t=e.listener,r=e.options;i.forEach((function(e){e.addEventListener(n,t,r)}))})),z},c=function(){for(var e=arguments.length,n=Array(e),t=0;t<e;t++)n[t]=arguments[t];L.zoomed&&y();var i=n.length>0?n.reduce((function(e,n){return[].concat(e,Pn(n))}),[]):I;return i.forEach((function(e){e.classList.remove("medium-zoom-image"),e.dispatchEvent(Fn("medium-zoom:detach",{detail:{zoom:z}}))})),I=I.filter((function(e){return-1===i.indexOf(e)})),z},d=function(e,n){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return I.forEach((function(i){i.addEventListener("medium-zoom:"+e,n,t)})),f.push({type:"medium-zoom:"+e,listener:n,options:t}),z},p=function(e,n){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return I.forEach((function(i){i.removeEventListener("medium-zoom:"+e,n,t)})),f=f.filter((function(t){return!(t.type==="medium-zoom:"+e&&t.listener.toString()===n.toString())})),z},g=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=e.target,t=function(){var e={width:document.documentElement.clientWidth,height:document.documentElement.clientHeight,left:0,top:0,right:0,bottom:0},n=void 0,t=void 0;if(w.container)if(w.container instanceof Object)n=(e=Qn({},e,w.container)).width-e.left-e.right-2*w.margin,t=e.height-e.top-e.bottom-2*w.margin;else{var i=(qn(w.container)?w.container:document.querySelector(w.container)).getBoundingClientRect(),r=i.width,a=i.height,o=i.left,s=i.top;e=Qn({},e,{width:r,height:a,left:o,top:s})}n=n||e.width-2*w.margin,t=t||e.height-2*w.margin;var l=L.zoomedHd||L.original,u=Zn(l)?n:l.naturalWidth||n,c=Zn(l)?t:l.naturalHeight||t,d=l.getBoundingClientRect(),p=d.top,g=d.left,y=d.width,m=d.height,M=Math.min(u,n)/y,h=Math.min(c,t)/m,T=Math.min(M,h),I="scale("+T+") translate3d("+((n-y)/2-g+w.margin+e.left)/T+"px, "+((t-m)/2-p+w.margin+e.top)/T+"px, 0)";L.zoomed.style.transform=I,L.zoomedHd&&(L.zoomedHd.style.transform=I)};return new i((function(e){if(n&&-1===I.indexOf(n))e(z);else{if(L.zoomed)e(z);else{if(n)L.original=n;else{if(!(I.length>0))return void e(z);var i=I;L.original=i[0]}if(L.original.dispatchEvent(Fn("medium-zoom:open",{detail:{zoom:z}})),j=window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0,N=!0,L.zoomed=Gn(L.original),document.body.appendChild(D),w.template){var r=qn(w.template)?w.template:document.querySelector(w.template);L.template=document.createElement("div"),L.template.appendChild(r.content.cloneNode(!0)),document.body.appendChild(L.template)}if(document.body.appendChild(L.zoomed),window.requestAnimationFrame((function(){document.body.classList.add("medium-zoom--opened")})),L.original.classList.add("medium-zoom-image--hidden"),L.zoomed.classList.add("medium-zoom-image--opened"),L.zoomed.addEventListener("click",y),L.zoomed.addEventListener("transitionend",(function n(){N=!1,L.zoomed.removeEventListener("transitionend",n),L.original.dispatchEvent(Fn("medium-zoom:opened",{detail:{zoom:z}})),e(z)})),L.original.getAttribute("data-zoom-src")){L.zoomedHd=L.zoomed.cloneNode(),L.zoomedHd.removeAttribute("srcset"),L.zoomedHd.removeAttribute("sizes"),L.zoomedHd.src=L.zoomed.getAttribute("data-zoom-src"),L.zoomedHd.onerror=function(){clearInterval(a),console.warn("Unable to reach the zoom image target "+L.zoomedHd.src),L.zoomedHd=null,t()};var a=setInterval((function(){L.zoomedHd.complete&&(clearInterval(a),L.zoomedHd.classList.add("medium-zoom-image--opened"),L.zoomedHd.addEventListener("click",y),document.body.appendChild(L.zoomedHd),t())}),10)}else if(L.original.hasAttribute("srcset")){L.zoomedHd=L.zoomed.cloneNode(),L.zoomedHd.removeAttribute("sizes"),L.zoomedHd.removeAttribute("loading");var o=L.zoomedHd.addEventListener("load",(function(){L.zoomedHd.removeEventListener("load",o),L.zoomedHd.classList.add("medium-zoom-image--opened"),L.zoomedHd.addEventListener("click",y),document.body.appendChild(L.zoomedHd),t()}))}else t()}}}))},y=function(){return new i((function(e){if(!N&&L.original){N=!0,document.body.classList.remove("medium-zoom--opened"),L.zoomed.style.transform="",L.zoomedHd&&(L.zoomedHd.style.transform=""),L.template&&(L.template.style.transition="opacity 150ms",L.template.style.opacity=0),L.original.dispatchEvent(Fn("medium-zoom:close",{detail:{zoom:z}})),L.zoomed.addEventListener("transitionend",(function n(){L.original.classList.remove("medium-zoom-image--hidden"),document.body.removeChild(L.zoomed),L.zoomedHd&&document.body.removeChild(L.zoomedHd),document.body.removeChild(D),L.zoomed.classList.remove("medium-zoom-image--opened"),L.template&&document.body.removeChild(L.template),N=!1,L.zoomed.removeEventListener("transitionend",n),L.original.dispatchEvent(Fn("medium-zoom:closed",{detail:{zoom:z}})),L.original=null,L.zoomed=null,L.zoomedHd=null,L.template=null,e(z)}))}else e(z)}))},m=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=e.target;return L.original?y():g({target:n})},M=function(){return w},h=function(){return I},T=function(){return L.original},I=[],f=[],N=!1,j=0,w=t,L={original:null,zoomed:null,zoomedHd:null,template:null};"[object Object]"===Object.prototype.toString.call(n)?w=n:(n||"string"==typeof n)&&u(n),w=Qn({margin:0,background:"#fff",scrollOffset:40,container:null,template:null},w);var D=Wn(w.background);document.addEventListener("click",r),document.addEventListener("keyup",o),document.addEventListener("scroll",a),window.addEventListener("resize",y);var z={open:g,close:y,toggle:m,update:s,clone:l,attach:u,detach:c,on:d,off:p,getOptions:M,getImages:h,getZoomedImage:T};return z},Vn=".content__default img",Jn=JSON.parse("{}"),Hn=Number("500"),Kn=function(){function e(){En(this,e),this.instance=null}return Yn(e,[{key:"update",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:Vn;"undefined"!=typeof window&&(null===this.instance?this.instance=Bn(e,Jn):(this.instance.detach(),this.instance.attach(e)))}},{key:"updateDelay",value:function(){var e=this,n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:Vn,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Hn;setTimeout((function(){return e.update(n)}),t)}}]),e}(),_n=(t(357),{watch:{"$page.path":function(){void 0!==this.$vuepress.mediumZoom&&this.$vuepress.mediumZoom.updateDelay()}},mounted:function(){this.$vuepress.mediumZoom=new Kn,this.$vuepress.mediumZoom.updateDelay()}}),Xn=t(135),$n=(t(360),{props:{parent:Object,code:String,options:{align:String,color:String,backgroundTransition:Boolean,backgroundColor:String,successText:String,staticIcon:Boolean}},data:function(){return{success:!1,originalBackground:null,originalTransition:null}},computed:{alignStyle:function(){var e={};return e[this.options.align]="7.5px",e},iconClass:function(){return this.options.staticIcon?"":"hover"}},mounted:function(){this.originalTransition=this.parent.style.transition,this.originalBackground=this.parent.style.background},beforeDestroy:function(){this.parent.style.transition=this.originalTransition,this.parent.style.background=this.originalBackground},methods:{hexToRgb:function(e){var n=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(e);return n?{r:parseInt(n[1],16),g:parseInt(n[2],16),b:parseInt(n[3],16)}:null},copyToClipboard:function(e){var n=this;if(navigator.clipboard)navigator.clipboard.writeText(this.code).then((function(){n.setSuccessTransitions()}),(function(){}));else{var t=document.createElement("textarea");document.body.appendChild(t),t.value=this.code,t.select(),document.execCommand("Copy"),t.remove(),this.setSuccessTransitions()}},setSuccessTransitions:function(){var e=this;if(clearTimeout(this.successTimeout),this.options.backgroundTransition){this.parent.style.transition="background 350ms";var n=this.hexToRgb(this.options.backgroundColor);this.parent.style.background="rgba(".concat(n.r,", ").concat(n.g,", ").concat(n.b,", 0.1)")}this.success=!0,this.successTimeout=setTimeout((function(){e.options.backgroundTransition&&(e.parent.style.background=e.originalBackground,e.parent.style.transition=e.originalTransition),e.success=!1}),500)}}}),et=(t(362),t(19)),nt=Object(et.a)($n,(function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",{staticClass:"code-copy"},[t("svg",{class:e.iconClass,style:e.alignStyle,attrs:{xmlns:"http://www.w3.org/2000/svg",width:"24",height:"24",viewBox:"0 0 24 24"},on:{click:e.copyToClipboard}},[t("path",{attrs:{fill:"none",d:"M0 0h24v24H0z"}}),e._v(" "),t("path",{attrs:{fill:e.options.color,d:"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm-1 4l6 6v10c0 1.1-.9 2-2 2H7.99C6.89 23 6 22.1 6 21l.01-14c0-1.1.89-2 1.99-2h7zm-1 7h5.5L14 6.5V12z"}})]),e._v(" "),t("span",{class:e.success?"success":"",style:e.alignStyle},[e._v("\n        "+e._s(e.options.successText)+"\n    ")])])}),[],!1,null,"49140617",null).exports,tt=(t(363),[Ln,An,On,_n,{updated:function(){this.update()},methods:{update:function(){setTimeout((function(){document.querySelectorAll('div[class*="language-"] pre').forEach((function(e){if(!e.classList.contains("code-copy-added")){var n=new(r.a.extend(nt));n.options=Object(Xn.a)({},{align:"bottom",color:"#27b1ff",backgroundTransition:!0,backgroundColor:"#0075b8",successText:"Copied!",staticIcon:!1}),n.code=e.innerText,n.parent=e,n.$mount(),e.classList.add("code-copy-added"),e.appendChild(n.$el)}}))}),100)}}}]),it={name:"GlobalLayout",computed:{layout:function(){var e=this.getLayout();return Tn("layout",e),r.a.component(e)}},methods:{getLayout:function(){if(this.$page.path){var e=this.$page.frontmatter.layout;return e&&(this.$vuepress.getLayoutAsyncComponent(e)||this.$vuepress.getVueComponent(e))?e:"Layout"}return"NotFound"}}},rt=Object(et.a)(it,(function(){var e=this.$createElement;return(this._self._c||e)(this.layout,{tag:"component"})}),[],!1,null,null,null).exports;!function(e,n,t){var i;switch(n){case"components":e[n]||(e[n]={}),Object.assign(e[n],t);break;case"mixins":e[n]||(e[n]=[]),(i=e[n]).push.apply(i,Object(_e.a)(t));break;default:throw new Error("Unknown option name.")}}(rt,"mixins",tt);var at=[{name:"v-3140ed9c",path:"/",component:rt,beforeEnter:function(e,n,t){hn("Home","v-3140ed9c").then(t)}},{path:"/index.html",redirect:"/"},{name:"v-b037671e",path:"/blogs/2022-01-10-leroy-merlin-usage-kestra.html",component:rt,beforeEnter:function(e,n,t){hn("BlogsPost","v-b037671e").then(t)}},{name:"v-7f3b5936",path:"/blogs/2022-01-10-kestra-opensource.html",component:rt,beforeEnter:function(e,n,t){hn("BlogsPost","v-7f3b5936").then(t)}},{name:"v-1af8f4dc",path:"/blogs/",component:rt,beforeEnter:function(e,n,t){hn("BlogsList","v-1af8f4dc").then(t)}},{path:"/blogs/index.html",redirect:"/blogs/"},{name:"v-79ae536f",path:"/company/about-us.html",component:rt,beforeEnter:function(e,n,t){hn("CompanyAbout","v-79ae536f").then(t)}},{name:"v-0b50773a",path:"/company/contact.html",component:rt,beforeEnter:function(e,n,t){hn("CompanyContact","v-0b50773a").then(t)}},{name:"v-135cabfa",path:"/company/cookie-policy.html",component:rt,beforeEnter:function(e,n,t){hn("CompanyLegals","v-135cabfa").then(t)}},{name:"v-f3216c06",path:"/company/privacy-policy.html",component:rt,beforeEnter:function(e,n,t){hn("CompanyLegals","v-f3216c06").then(t)}},{name:"v-24306408",path:"/docs/",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-24306408").then(t)}},{path:"/docs/index.html",redirect:"/docs/"},{name:"v-04b425b0",path:"/docs/administrator-guide/",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-04b425b0").then(t)}},{path:"/docs/administrator-guide/index.html",redirect:"/docs/administrator-guide/"},{name:"v-c4be06f0",path:"/docs/administrator-guide/configuration/",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-c4be06f0").then(t)}},{path:"/docs/administrator-guide/configuration/index.html",redirect:"/docs/administrator-guide/configuration/"},{name:"v-6e805448",path:"/docs/administrator-guide/configuration/elasticsearch/",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-6e805448").then(t)}},{path:"/docs/administrator-guide/configuration/elasticsearch/index.html",redirect:"/docs/administrator-guide/configuration/elasticsearch/"},{name:"v-46e6e13e",path:"/docs/administrator-guide/configuration/entreprise-edition/",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-46e6e13e").then(t)}},{path:"/docs/administrator-guide/configuration/entreprise-edition/index.html",redirect:"/docs/administrator-guide/configuration/entreprise-edition/"},{name:"v-1a638528",path:"/docs/administrator-guide/configuration/entreprise-edition/authentifications/",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-1a638528").then(t)}},{path:"/docs/administrator-guide/configuration/entreprise-edition/authentifications/index.html",redirect:"/docs/administrator-guide/configuration/entreprise-edition/authentifications/"},{name:"v-7dcd35a1",path:"/docs/administrator-guide/configuration/entreprise-edition/authentifications/auths/oidc.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-7dcd35a1").then(t)}},{name:"v-5efc1fd6",path:"/docs/administrator-guide/configuration/entreprise-edition/secrets/",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-5efc1fd6").then(t)}},{path:"/docs/administrator-guide/configuration/entreprise-edition/secrets/index.html",redirect:"/docs/administrator-guide/configuration/entreprise-edition/secrets/"},{name:"v-e6985960",path:"/docs/administrator-guide/configuration/entreprise-edition/secrets/vault/",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-e6985960").then(t)}},{path:"/docs/administrator-guide/configuration/entreprise-edition/secrets/vault/index.html",redirect:"/docs/administrator-guide/configuration/entreprise-edition/secrets/vault/"},{name:"v-5e4b3d72",path:"/docs/administrator-guide/configuration/entreprise-edition/workers/",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-5e4b3d72").then(t)}},{path:"/docs/administrator-guide/configuration/entreprise-edition/workers/index.html",redirect:"/docs/administrator-guide/configuration/entreprise-edition/workers/"},{name:"v-67c3e868",path:"/docs/administrator-guide/configuration/kafka/",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-67c3e868").then(t)}},{path:"/docs/administrator-guide/configuration/kafka/index.html",redirect:"/docs/administrator-guide/configuration/kafka/"},{name:"v-636e3ee8",path:"/docs/administrator-guide/configuration/micronaut/",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-636e3ee8").then(t)}},{path:"/docs/administrator-guide/configuration/micronaut/index.html",redirect:"/docs/administrator-guide/configuration/micronaut/"},{name:"v-3ef378d0",path:"/docs/administrator-guide/configuration/others/",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-3ef378d0").then(t)}},{path:"/docs/administrator-guide/configuration/others/index.html",redirect:"/docs/administrator-guide/configuration/others/"},{name:"v-f99b39f0",path:"/docs/administrator-guide/configuration/storage/",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-f99b39f0").then(t)}},{path:"/docs/administrator-guide/configuration/storage/index.html",redirect:"/docs/administrator-guide/configuration/storage/"},{name:"v-55acd5fe",path:"/docs/administrator-guide/deployment/",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-55acd5fe").then(t)}},{path:"/docs/administrator-guide/deployment/index.html",redirect:"/docs/administrator-guide/deployment/"},{name:"v-6842f008",path:"/docs/administrator-guide/deployment/docker/",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-6842f008").then(t)}},{path:"/docs/administrator-guide/deployment/docker/index.html",redirect:"/docs/administrator-guide/deployment/docker/"},{name:"v-7854a970",path:"/docs/administrator-guide/deployment/kubernetes/",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-7854a970").then(t)}},{path:"/docs/administrator-guide/deployment/kubernetes/index.html",redirect:"/docs/administrator-guide/deployment/kubernetes/"},{name:"v-026cac48",path:"/docs/administrator-guide/deployment/manual/",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-026cac48").then(t)}},{path:"/docs/administrator-guide/deployment/manual/index.html",redirect:"/docs/administrator-guide/deployment/manual/"},{name:"v-db882e10",path:"/docs/administrator-guide/monitoring/",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-db882e10").then(t)}},{path:"/docs/administrator-guide/monitoring/index.html",redirect:"/docs/administrator-guide/monitoring/"},{name:"v-12b44ec8",path:"/docs/administrator-guide/servers/",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-12b44ec8").then(t)}},{path:"/docs/administrator-guide/servers/index.html",redirect:"/docs/administrator-guide/servers/"},{name:"v-be84a670",path:"/docs/architecture/",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-be84a670").then(t)}},{path:"/docs/architecture/index.html",redirect:"/docs/architecture/"},{name:"v-11cc6b58",path:"/docs/concepts/",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-11cc6b58").then(t)}},{path:"/docs/concepts/index.html",redirect:"/docs/concepts/"},{name:"v-a42a4c0e",path:"/docs/concepts/executions.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-a42a4c0e").then(t)}},{name:"v-631e077a",path:"/docs/concepts/flows.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-631e077a").then(t)}},{name:"v-477f7948",path:"/docs/developer-guide/",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-477f7948").then(t)}},{path:"/docs/developer-guide/index.html",redirect:"/docs/developer-guide/"},{name:"v-2bdad6a8",path:"/docs/developer-guide/best-practice/",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-2bdad6a8").then(t)}},{path:"/docs/developer-guide/best-practice/index.html",redirect:"/docs/developer-guide/best-practice/"},{name:"v-587c915c",path:"/docs/developer-guide/conditions/",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-587c915c").then(t)}},{path:"/docs/developer-guide/conditions/index.html",redirect:"/docs/developer-guide/conditions/"},{name:"v-5a7b3ee8",path:"/docs/developer-guide/documentation/",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-5a7b3ee8").then(t)}},{path:"/docs/developer-guide/documentation/index.html",redirect:"/docs/developer-guide/documentation/"},{name:"v-550d8c48",path:"/docs/developer-guide/errors-handling/",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-550d8c48").then(t)}},{path:"/docs/developer-guide/errors-handling/index.html",redirect:"/docs/developer-guide/errors-handling/"},{name:"v-8488a8b4",path:"/docs/developer-guide/flow/",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-8488a8b4").then(t)}},{path:"/docs/developer-guide/flow/index.html",redirect:"/docs/developer-guide/flow/"},{name:"v-2a1991f2",path:"/docs/developer-guide/flowable/",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-2a1991f2").then(t)}},{path:"/docs/developer-guide/flowable/index.html",redirect:"/docs/developer-guide/flowable/"},{name:"v-7db39c08",path:"/docs/developer-guide/helpers/",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-7db39c08").then(t)}},{path:"/docs/developer-guide/helpers/index.html",redirect:"/docs/developer-guide/helpers/"},{name:"v-019a6270",path:"/docs/developer-guide/inputs/",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-019a6270").then(t)}},{path:"/docs/developer-guide/inputs/index.html",redirect:"/docs/developer-guide/inputs/"},{name:"v-a824f470",path:"/docs/developer-guide/listeners/",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-a824f470").then(t)}},{path:"/docs/developer-guide/listeners/index.html",redirect:"/docs/developer-guide/listeners/"},{name:"v-92b626b0",path:"/docs/developer-guide/outputs/",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-92b626b0").then(t)}},{path:"/docs/developer-guide/outputs/index.html",redirect:"/docs/developer-guide/outputs/"},{name:"v-7e6b41b0",path:"/docs/developer-guide/retries/",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-7e6b41b0").then(t)}},{path:"/docs/developer-guide/retries/index.html",redirect:"/docs/developer-guide/retries/"},{name:"v-2b85cc88",path:"/docs/developer-guide/templates/",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-2b85cc88").then(t)}},{path:"/docs/developer-guide/templates/index.html",redirect:"/docs/developer-guide/templates/"},{name:"v-084d894c",path:"/docs/developer-guide/triggers/",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-084d894c").then(t)}},{path:"/docs/developer-guide/triggers/index.html",redirect:"/docs/developer-guide/triggers/"},{name:"v-801f5ac2",path:"/docs/developer-guide/triggers/flow.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-801f5ac2").then(t)}},{name:"v-4a03194d",path:"/docs/developer-guide/triggers/schedule.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-4a03194d").then(t)}},{name:"v-53d2e383",path:"/docs/developer-guide/triggers/webhook.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-53d2e383").then(t)}},{name:"v-472d66c8",path:"/docs/developer-guide/variables/",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-472d66c8").then(t)}},{path:"/docs/developer-guide/variables/index.html",redirect:"/docs/developer-guide/variables/"},{name:"v-64153d4f",path:"/docs/developer-guide/variables/basic-usage.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-64153d4f").then(t)}},{name:"v-854686b0",path:"/docs/developer-guide/variables/deprecated-handlebars/",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-854686b0").then(t)}},{path:"/docs/developer-guide/variables/deprecated-handlebars/index.html",redirect:"/docs/developer-guide/variables/deprecated-handlebars/"},{name:"v-23612046",path:"/docs/developer-guide/variables/deprecated-handlebars/boolean.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-23612046").then(t)}},{name:"v-379f3ffa",path:"/docs/developer-guide/variables/deprecated-handlebars/date.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-379f3ffa").then(t)}},{name:"v-500babc3",path:"/docs/developer-guide/variables/deprecated-handlebars/iterations.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-500babc3").then(t)}},{name:"v-a9bb447a",path:"/docs/developer-guide/variables/deprecated-handlebars/json.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-a9bb447a").then(t)}},{name:"v-375945a3",path:"/docs/developer-guide/variables/deprecated-handlebars/number.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-375945a3").then(t)}},{name:"v-5ce9c2ba",path:"/docs/developer-guide/variables/deprecated-handlebars/string.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-5ce9c2ba").then(t)}},{name:"v-2d82e9df",path:"/docs/developer-guide/variables/deprecated-handlebars/use.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-2d82e9df").then(t)}},{name:"v-6ad1b17a",path:"/docs/developer-guide/variables/deprecated-handlebars/vars.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-6ad1b17a").then(t)}},{name:"v-03cc083c",path:"/docs/developer-guide/variables/filter/",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-03cc083c").then(t)}},{path:"/docs/developer-guide/variables/filter/index.html",redirect:"/docs/developer-guide/variables/filter/"},{name:"v-7048180f",path:"/docs/developer-guide/variables/filter/abbreviate.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-7048180f").then(t)}},{name:"v-f7b823fa",path:"/docs/developer-guide/variables/filter/abs.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-f7b823fa").then(t)}},{name:"v-32f7ff6b",path:"/docs/developer-guide/variables/filter/base64decode.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-32f7ff6b").then(t)}},{name:"v-1d9a471b",path:"/docs/developer-guide/variables/filter/base64encode.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-1d9a471b").then(t)}},{name:"v-25d11766",path:"/docs/developer-guide/variables/filter/capitalize.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-25d11766").then(t)}},{name:"v-37ca54ba",path:"/docs/developer-guide/variables/filter/chunk.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-37ca54ba").then(t)}},{name:"v-ee9465ee",path:"/docs/developer-guide/variables/filter/date.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-ee9465ee").then(t)}},{name:"v-0c942c63",path:"/docs/developer-guide/variables/filter/dateAdd.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-0c942c63").then(t)}},{name:"v-6a7e2aba",path:"/docs/developer-guide/variables/filter/default.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-6a7e2aba").then(t)}},{name:"v-b5fc07fa",path:"/docs/developer-guide/variables/filter/first.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-b5fc07fa").then(t)}},{name:"v-6aaaa611",path:"/docs/developer-guide/variables/filter/join.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-6aaaa611").then(t)}},{name:"v-a23bbe52",path:"/docs/developer-guide/variables/filter/jq.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-a23bbe52").then(t)}},{name:"v-013a3ed6",path:"/docs/developer-guide/variables/filter/json.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-013a3ed6").then(t)}},{name:"v-7ca4bf39",path:"/docs/developer-guide/variables/filter/last.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-7ca4bf39").then(t)}},{name:"v-9b3e234e",path:"/docs/developer-guide/variables/filter/length.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-9b3e234e").then(t)}},{name:"v-2727b023",path:"/docs/developer-guide/variables/filter/lower.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-2727b023").then(t)}},{name:"v-1ff105fa",path:"/docs/developer-guide/variables/filter/merge.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-1ff105fa").then(t)}},{name:"v-8d2ddbb6",path:"/docs/developer-guide/variables/filter/numberFormat.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-8d2ddbb6").then(t)}},{name:"v-e365f37a",path:"/docs/developer-guide/variables/filter/replace.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-e365f37a").then(t)}},{name:"v-eb0176fa",path:"/docs/developer-guide/variables/filter/reverse.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-eb0176fa").then(t)}},{name:"v-a0e5effa",path:"/docs/developer-guide/variables/filter/rsort.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-a0e5effa").then(t)}},{name:"v-277041d2",path:"/docs/developer-guide/variables/filter/sha256.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-277041d2").then(t)}},{name:"v-4aab2c43",path:"/docs/developer-guide/variables/filter/slice.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-4aab2c43").then(t)}},{name:"v-6a8b44a3",path:"/docs/developer-guide/variables/filter/slugify.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-6a8b44a3").then(t)}},{name:"v-05829129",path:"/docs/developer-guide/variables/filter/sort.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-05829129").then(t)}},{name:"v-e36ba57a",path:"/docs/developer-guide/variables/filter/split.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-e36ba57a").then(t)}},{name:"v-74595f62",path:"/docs/developer-guide/variables/filter/substringAfter.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-74595f62").then(t)}},{name:"v-3b433f3a",path:"/docs/developer-guide/variables/filter/substringAfterLast.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-3b433f3a").then(t)}},{name:"v-c3d3ac7a",path:"/docs/developer-guide/variables/filter/substringBefore.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-c3d3ac7a").then(t)}},{name:"v-43215b83",path:"/docs/developer-guide/variables/filter/substringBeforeLast.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-43215b83").then(t)}},{name:"v-413ff743",path:"/docs/developer-guide/variables/filter/timestamp.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-413ff743").then(t)}},{name:"v-42c49689",path:"/docs/developer-guide/variables/filter/timestampMicro.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-42c49689").then(t)}},{name:"v-12a41843",path:"/docs/developer-guide/variables/filter/timestampNano.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-12a41843").then(t)}},{name:"v-af16fdfa",path:"/docs/developer-guide/variables/filter/title.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-af16fdfa").then(t)}},{name:"v-290ae021",path:"/docs/developer-guide/variables/filter/trim.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-290ae021").then(t)}},{name:"v-a615a37a",path:"/docs/developer-guide/variables/filter/upper.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-a615a37a").then(t)}},{name:"v-8e6978ba",path:"/docs/developer-guide/variables/filter/urlencode.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-8e6978ba").then(t)}},{name:"v-1fe614e2",path:"/docs/developer-guide/variables/function/",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-1fe614e2").then(t)}},{path:"/docs/developer-guide/variables/function/index.html",redirect:"/docs/developer-guide/variables/function/"},{name:"v-0194b523",path:"/docs/developer-guide/variables/function/block.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-0194b523").then(t)}},{name:"v-028c2615",path:"/docs/developer-guide/variables/function/json.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-028c2615").then(t)}},{name:"v-95584f7a",path:"/docs/developer-guide/variables/function/min.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-95584f7a").then(t)}},{name:"v-26ff90c3",path:"/docs/developer-guide/variables/function/now.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-26ff90c3").then(t)}},{name:"v-2afbd45e",path:"/docs/developer-guide/variables/function/parent.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-2afbd45e").then(t)}},{name:"v-5abd22fa",path:"/docs/developer-guide/variables/function/max.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-5abd22fa").then(t)}},{name:"v-2d2dbf23",path:"/docs/developer-guide/variables/function/range.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-2d2dbf23").then(t)}},{name:"v-33246d6c",path:"/docs/developer-guide/variables/operator/",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-33246d6c").then(t)}},{path:"/docs/developer-guide/variables/operator/index.html",redirect:"/docs/developer-guide/variables/operator/"},{name:"v-97f5f47a",path:"/docs/developer-guide/variables/operator/comparisons.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-97f5f47a").then(t)}},{name:"v-34f53695",path:"/docs/developer-guide/variables/operator/concat.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-34f53695").then(t)}},{name:"v-0d071783",path:"/docs/developer-guide/variables/operator/logic.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-0d071783").then(t)}},{name:"v-6fab4526",path:"/docs/developer-guide/variables/operator/math.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-6fab4526").then(t)}},{name:"v-a066783a",path:"/docs/developer-guide/variables/operator/not.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-a066783a").then(t)}},{name:"v-68153c43",path:"/docs/developer-guide/variables/operator/null-coalescing.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-68153c43").then(t)}},{name:"v-0aa012d1",path:"/docs/developer-guide/variables/operator/ternary-operator.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-0aa012d1").then(t)}},{name:"v-781b89e8",path:"/docs/developer-guide/variables/tag/",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-781b89e8").then(t)}},{path:"/docs/developer-guide/variables/tag/index.html",redirect:"/docs/developer-guide/variables/tag/"},{name:"v-2652c323",path:"/docs/developer-guide/variables/tag/block.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-2652c323").then(t)}},{name:"v-8587667a",path:"/docs/developer-guide/variables/tag/filter.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-8587667a").then(t)}},{name:"v-e12df7aa",path:"/docs/developer-guide/variables/tag/for.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-e12df7aa").then(t)}},{name:"v-2b9b85e5",path:"/docs/developer-guide/variables/tag/macro.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-2b9b85e5").then(t)}},{name:"v-33b417a3",path:"/docs/developer-guide/variables/tag/if.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-33b417a3").then(t)}},{name:"v-f3d3490e",path:"/docs/developer-guide/variables/tag/set.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-f3d3490e").then(t)}},{name:"v-6fae6643",path:"/docs/developer-guide/variables/tag/verbatim.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-6fae6643").then(t)}},{name:"v-2c735824",path:"/docs/developer-guide/variables/test/",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-2c735824").then(t)}},{path:"/docs/developer-guide/variables/test/index.html",redirect:"/docs/developer-guide/variables/test/"},{name:"v-4fe9ff3a",path:"/docs/developer-guide/variables/test/defined.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-4fe9ff3a").then(t)}},{name:"v-562d6fe3",path:"/docs/developer-guide/variables/test/empty.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-562d6fe3").then(t)}},{name:"v-416ac725",path:"/docs/developer-guide/variables/test/even.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-416ac725").then(t)}},{name:"v-f8095e16",path:"/docs/developer-guide/variables/test/iterable.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-f8095e16").then(t)}},{name:"v-47b2e3ee",path:"/docs/developer-guide/variables/test/json.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-47b2e3ee").then(t)}},{name:"v-0b5d6643",path:"/docs/developer-guide/variables/test/map.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-0b5d6643").then(t)}},{name:"v-3d85960b",path:"/docs/developer-guide/variables/test/null.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-3d85960b").then(t)}},{name:"v-720f7fba",path:"/docs/developer-guide/variables/test/odd.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-720f7fba").then(t)}},{name:"v-787eb528",path:"/docs/getting-started/",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-787eb528").then(t)}},{path:"/docs/getting-started/index.html",redirect:"/docs/getting-started/"},{name:"v-4e9ad7a0",path:"/docs/plugin-developer-guide/",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-4e9ad7a0").then(t)}},{path:"/docs/plugin-developer-guide/index.html",redirect:"/docs/plugin-developer-guide/"},{name:"v-af19e69c",path:"/docs/plugin-developer-guide/build/",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-af19e69c").then(t)}},{path:"/docs/plugin-developer-guide/build/index.html",redirect:"/docs/plugin-developer-guide/build/"},{name:"v-e5195c30",path:"/docs/plugin-developer-guide/conditions/",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-e5195c30").then(t)}},{path:"/docs/plugin-developer-guide/conditions/index.html",redirect:"/docs/plugin-developer-guide/conditions/"},{name:"v-74d8f83a",path:"/docs/plugin-developer-guide/flowable-task/",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-74d8f83a").then(t)}},{path:"/docs/plugin-developer-guide/flowable-task/index.html",redirect:"/docs/plugin-developer-guide/flowable-task/"},{name:"v-e228dff0",path:"/docs/plugin-developer-guide/gradle/",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-e228dff0").then(t)}},{path:"/docs/plugin-developer-guide/gradle/index.html",redirect:"/docs/plugin-developer-guide/gradle/"},{name:"v-51cba32a",path:"/docs/plugin-developer-guide/outputs/",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-51cba32a").then(t)}},{path:"/docs/plugin-developer-guide/outputs/index.html",redirect:"/docs/plugin-developer-guide/outputs/"},{name:"v-c38cdba0",path:"/docs/plugin-developer-guide/publish/",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-c38cdba0").then(t)}},{path:"/docs/plugin-developer-guide/publish/index.html",redirect:"/docs/plugin-developer-guide/publish/"},{name:"v-5cb2b138",path:"/docs/plugin-developer-guide/runnable-task/",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-5cb2b138").then(t)}},{path:"/docs/plugin-developer-guide/runnable-task/index.html",redirect:"/docs/plugin-developer-guide/runnable-task/"},{name:"v-2e06cf88",path:"/docs/plugin-developer-guide/triggers/",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-2e06cf88").then(t)}},{path:"/docs/plugin-developer-guide/triggers/index.html",redirect:"/docs/plugin-developer-guide/triggers/"},{name:"v-528bedd8",path:"/docs/plugin-developer-guide/unit-test/",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-528bedd8").then(t)}},{path:"/docs/plugin-developer-guide/unit-test/index.html",redirect:"/docs/plugin-developer-guide/unit-test/"},{name:"v-219eff68",path:"/docs/terraform/",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-219eff68").then(t)}},{path:"/docs/terraform/index.html",redirect:"/docs/terraform/"},{name:"v-7f4ed1e3",path:"/docs/terraform/data-sources/binding.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-7f4ed1e3").then(t)}},{name:"v-3711fea3",path:"/docs/terraform/data-sources/group.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-3711fea3").then(t)}},{name:"v-66dc4b5d",path:"/docs/terraform/data-sources/flow.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-66dc4b5d").then(t)}},{name:"v-6a782823",path:"/docs/terraform/data-sources/namespace.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-6a782823").then(t)}},{name:"v-27b76acd",path:"/docs/terraform/data-sources/role.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-27b76acd").then(t)}},{name:"v-2725e445",path:"/docs/terraform/data-sources/template.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-2725e445").then(t)}},{name:"v-1eda64e3",path:"/docs/terraform/data-sources/user.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-1eda64e3").then(t)}},{name:"v-19d6ff43",path:"/docs/terraform/guides/configurations.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-19d6ff43").then(t)}},{name:"v-3a854743",path:"/docs/terraform/guides/working-with-yaml.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-3a854743").then(t)}},{name:"v-dc92b792",path:"/docs/terraform/resources/binding.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-dc92b792").then(t)}},{name:"v-738f2343",path:"/docs/terraform/resources/flow.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-738f2343").then(t)}},{name:"v-7f0a4243",path:"/docs/terraform/resources/group.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-7f0a4243").then(t)}},{name:"v-43eb08ea",path:"/docs/terraform/resources/namespace.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-43eb08ea").then(t)}},{name:"v-3d69dc03",path:"/docs/terraform/resources/namespace_secret.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-3d69dc03").then(t)}},{name:"v-01ccd343",path:"/docs/terraform/resources/template.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-01ccd343").then(t)}},{name:"v-8f9c8b7a",path:"/docs/terraform/resources/role.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-8f9c8b7a").then(t)}},{name:"v-575b40ba",path:"/docs/terraform/resources/user.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-575b40ba").then(t)}},{name:"v-e2dba7ba",path:"/docs/terraform/resources/user_password.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-e2dba7ba").then(t)}},{name:"v-209f3a3c",path:"/docs/user-interface-guide/",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-209f3a3c").then(t)}},{path:"/docs/user-interface-guide/index.html",redirect:"/docs/user-interface-guide/"},{name:"v-ce2ac07a",path:"/features/features.html",component:rt,beforeEnter:function(e,n,t){hn("FeaturesFeatures","v-ce2ac07a").then(t)}},{name:"v-4d379c23",path:"/features/usages.html",component:rt,beforeEnter:function(e,n,t){hn("FeaturesUsage","v-4d379c23").then(t)}},{name:"v-8c82ad54",path:"/plugins/",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-8c82ad54").then(t)}},{path:"/plugins/index.html",redirect:"/plugins/"},{name:"v-cb94d530",path:"/plugins/core/",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-cb94d530").then(t)}},{path:"/plugins/core/index.html",redirect:"/plugins/core/"},{name:"v-afdbda3a",path:"/plugins/core/conditions/io.kestra.core.models.conditions.types.DateTimeBetweenCondition.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-afdbda3a").then(t)}},{name:"v-16365a03",path:"/plugins/core/conditions/io.kestra.core.models.conditions.types.DayWeekCondition.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-16365a03").then(t)}},{name:"v-077dee92",path:"/plugins/core/conditions/io.kestra.core.models.conditions.types.DayWeekInMonthCondition.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-077dee92").then(t)}},{name:"v-1813e7fa",path:"/plugins/core/conditions/io.kestra.core.models.conditions.types.ExecutionFlowCondition.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-1813e7fa").then(t)}},{name:"v-01b63a32",path:"/plugins/core/conditions/io.kestra.core.models.conditions.types.ExecutionNamespaceCondition.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-01b63a32").then(t)}},{name:"v-2ad254c3",path:"/plugins/core/conditions/io.kestra.core.models.conditions.types.ExecutionStatusCondition.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-2ad254c3").then(t)}},{name:"v-62e587fd",path:"/plugins/core/conditions/io.kestra.core.models.conditions.types.FlowCondition.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-62e587fd").then(t)}},{name:"v-26cecde3",path:"/plugins/core/conditions/io.kestra.core.models.conditions.types.FlowNamespaceCondition.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-26cecde3").then(t)}},{name:"v-44d81fa3",path:"/plugins/core/conditions/io.kestra.core.models.conditions.types.HasRetryAttemptCondition.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-44d81fa3").then(t)}},{name:"v-61ce6341",path:"/plugins/core/conditions/io.kestra.core.models.conditions.types.MultipleCondition.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-61ce6341").then(t)}},{name:"v-71a5b7ba",path:"/plugins/core/conditions/io.kestra.core.models.conditions.types.NotCondition.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-71a5b7ba").then(t)}},{name:"v-8448cf32",path:"/plugins/core/conditions/io.kestra.core.models.conditions.types.OrCondition.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-8448cf32").then(t)}},{name:"v-a441d7ce",path:"/plugins/core/conditions/io.kestra.core.models.conditions.types.VariableCondition.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-a441d7ce").then(t)}},{name:"v-775e78a3",path:"/plugins/core/conditions/io.kestra.core.models.conditions.types.WeekendCondition.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-775e78a3").then(t)}},{name:"v-40d34635",path:"/plugins/core/tasks/debugs/io.kestra.core.tasks.debugs.Echo.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-40d34635").then(t)}},{name:"v-a09528c2",path:"/plugins/core/tasks/debugs/io.kestra.core.tasks.debugs.Return.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-a09528c2").then(t)}},{name:"v-19408c3a",path:"/plugins/core/tasks/executions/io.kestra.core.tasks.executions.Counts.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-19408c3a").then(t)}},{name:"v-23bac36d",path:"/plugins/core/tasks/flows/io.kestra.core.tasks.flows.AllowFailure.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-23bac36d").then(t)}},{name:"v-1b25d55f",path:"/plugins/core/tasks/flows/io.kestra.core.tasks.flows.EachParallel.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-1b25d55f").then(t)}},{name:"v-1827886f",path:"/plugins/core/tasks/flows/io.kestra.core.tasks.flows.EachSequential.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-1827886f").then(t)}},{name:"v-3fc91bd3",path:"/plugins/core/tasks/flows/io.kestra.core.tasks.flows.Flow.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-3fc91bd3").then(t)}},{name:"v-4162bd61",path:"/plugins/core/tasks/flows/io.kestra.core.tasks.flows.Parallel.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-4162bd61").then(t)}},{name:"v-49f10763",path:"/plugins/core/tasks/flows/io.kestra.core.tasks.flows.Pause.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-49f10763").then(t)}},{name:"v-dd1e609e",path:"/plugins/core/tasks/flows/io.kestra.core.tasks.flows.Sequential.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-dd1e609e").then(t)}},{name:"v-797da7c7",path:"/plugins/core/tasks/flows/io.kestra.core.tasks.flows.Switch.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-797da7c7").then(t)}},{name:"v-52208f8a",path:"/plugins/core/tasks/flows/io.kestra.core.tasks.flows.Template.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-52208f8a").then(t)}},{name:"v-1efc3447",path:"/plugins/core/tasks/scripts/io.kestra.core.tasks.scripts.Bash.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-1efc3447").then(t)}},{name:"v-1c59ef6b",path:"/plugins/core/tasks/scripts/io.kestra.core.tasks.scripts.Node.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-1c59ef6b").then(t)}},{name:"v-6a588fb7",path:"/plugins/core/tasks/scripts/io.kestra.core.tasks.scripts.Python.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-6a588fb7").then(t)}},{name:"v-0943ab37",path:"/plugins/core/tasks/storages/io.kestra.core.tasks.storages.Concat.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-0943ab37").then(t)}},{name:"v-66fcc649",path:"/plugins/core/tasks/storages/io.kestra.core.tasks.storages.Delete.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-66fcc649").then(t)}},{name:"v-ae992146",path:"/plugins/core/tasks/storages/io.kestra.core.tasks.storages.Size.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-ae992146").then(t)}},{name:"v-541b8ec5",path:"/plugins/core/tasks/storages/io.kestra.core.tasks.storages.PurgeExecution.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-541b8ec5").then(t)}},{name:"v-719322e3",path:"/plugins/core/triggers/io.kestra.core.models.triggers.types.Flow.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-719322e3").then(t)}},{name:"v-19cb5103",path:"/plugins/core/triggers/io.kestra.core.models.triggers.types.Schedule.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-19cb5103").then(t)}},{name:"v-33989629",path:"/plugins/core/triggers/io.kestra.core.models.triggers.types.Webhook.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-33989629").then(t)}},{name:"v-63419da8",path:"/plugins/plugin-aws/",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-63419da8").then(t)}},{path:"/plugins/plugin-aws/index.html",redirect:"/plugins/plugin-aws/"},{name:"v-f8cd9ab6",path:"/plugins/plugin-aws/tasks/s3/io.kestra.plugin.aws.s3.CreateBucket.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-f8cd9ab6").then(t)}},{name:"v-1ac4429b",path:"/plugins/plugin-aws/tasks/s3/io.kestra.plugin.aws.s3.Delete.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-1ac4429b").then(t)}},{name:"v-222de1a1",path:"/plugins/plugin-aws/tasks/s3/io.kestra.plugin.aws.s3.Download.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-222de1a1").then(t)}},{name:"v-2164bfef",path:"/plugins/plugin-aws/tasks/s3/io.kestra.plugin.aws.s3.Upload.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-2164bfef").then(t)}},{name:"v-9e03bf08",path:"/plugins/plugin-compress/",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-9e03bf08").then(t)}},{path:"/plugins/plugin-compress/index.html",redirect:"/plugins/plugin-compress/"},{name:"v-518c7fba",path:"/plugins/plugin-compress/tasks/io.kestra.plugin.compress.ArchiveCompress.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-518c7fba").then(t)}},{name:"v-6717a943",path:"/plugins/core/tasks/flows/io.kestra.core.tasks.flows.Template$ExecutorTemplate.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-6717a943").then(t)}},{name:"v-1644ab03",path:"/plugins/plugin-compress/tasks/io.kestra.plugin.compress.ArchiveDecompress.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-1644ab03").then(t)}},{name:"v-773120b3",path:"/plugins/plugin-compress/tasks/io.kestra.plugin.compress.FileCompress.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-773120b3").then(t)}},{name:"v-2d261431",path:"/plugins/plugin-compress/tasks/io.kestra.plugin.compress.FileDecompress.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-2d261431").then(t)}},{name:"v-73d7027e",path:"/plugins/plugin-crypto/",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-73d7027e").then(t)}},{path:"/plugins/plugin-crypto/index.html",redirect:"/plugins/plugin-crypto/"},{name:"v-23b873ba",path:"/plugins/plugin-crypto/tasks/openpgp/io.kestra.plugin.crypto.openpgp.Decrypt.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-23b873ba").then(t)}},{name:"v-20fc1dba",path:"/plugins/plugin-crypto/tasks/openpgp/io.kestra.plugin.crypto.openpgp.Encrypt.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-20fc1dba").then(t)}},{name:"v-57685830",path:"/plugins/plugin-elasticsearch/",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-57685830").then(t)}},{path:"/plugins/plugin-elasticsearch/index.html",redirect:"/plugins/plugin-elasticsearch/"},{name:"v-95b3b072",path:"/plugins/plugin-elasticsearch/tasks/io.kestra.plugin.elasticsearch.Bulk.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-95b3b072").then(t)}},{name:"v-0d5cccba",path:"/plugins/plugin-elasticsearch/tasks/io.kestra.plugin.elasticsearch.Get.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-0d5cccba").then(t)}},{name:"v-7a84821f",path:"/plugins/plugin-elasticsearch/tasks/io.kestra.plugin.elasticsearch.Load.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-7a84821f").then(t)}},{name:"v-9bcb74fa",path:"/plugins/plugin-elasticsearch/tasks/io.kestra.plugin.elasticsearch.Put.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-9bcb74fa").then(t)}},{name:"v-8c4eabfa",path:"/plugins/plugin-elasticsearch/tasks/io.kestra.plugin.elasticsearch.Request.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-8c4eabfa").then(t)}},{name:"v-326d1311",path:"/plugins/plugin-elasticsearch/tasks/io.kestra.plugin.elasticsearch.Scroll.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-326d1311").then(t)}},{name:"v-2599af9b",path:"/plugins/plugin-elasticsearch/tasks/io.kestra.plugin.elasticsearch.Search.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-2599af9b").then(t)}},{name:"v-70b0dc34",path:"/plugins/plugin-fs/",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-70b0dc34").then(t)}},{path:"/plugins/plugin-fs/index.html",redirect:"/plugins/plugin-fs/"},{name:"v-aac0365a",path:"/plugins/plugin-fs/tasks/ftp/io.kestra.plugin.fs.ftp.Delete.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-aac0365a").then(t)}},{name:"v-a582424e",path:"/plugins/plugin-fs/tasks/ftp/io.kestra.plugin.fs.ftp.Download.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-a582424e").then(t)}},{name:"v-f82935ba",path:"/plugins/plugin-fs/tasks/ftp/io.kestra.plugin.fs.ftp.Downloads.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-f82935ba").then(t)}},{name:"v-8041dca6",path:"/plugins/plugin-fs/tasks/ftp/io.kestra.plugin.fs.ftp.List.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-8041dca6").then(t)}},{name:"v-3ee58187",path:"/plugins/plugin-fs/tasks/ftp/io.kestra.plugin.fs.ftp.Move.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-3ee58187").then(t)}},{name:"v-9d7f3bb2",path:"/plugins/plugin-fs/tasks/ftp/io.kestra.plugin.fs.ftp.Upload.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-9d7f3bb2").then(t)}},{name:"v-5106e98f",path:"/plugins/plugin-fs/tasks/ftps/io.kestra.plugin.fs.ftps.Delete.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-5106e98f").then(t)}},{name:"v-2794b055",path:"/plugins/plugin-fs/tasks/ftps/io.kestra.plugin.fs.ftps.Download.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-2794b055").then(t)}},{name:"v-2eb43963",path:"/plugins/plugin-fs/tasks/ftps/io.kestra.plugin.fs.ftps.Downloads.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-2eb43963").then(t)}},{name:"v-301a84ae",path:"/plugins/plugin-fs/tasks/ftps/io.kestra.plugin.fs.ftps.List.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-301a84ae").then(t)}},{name:"v-c8549002",path:"/docs/developer-guide/variables/operator/contains.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-c8549002").then(t)}},{name:"v-66971463",path:"/plugins/plugin-fs/tasks/ftps/io.kestra.plugin.fs.ftps.Upload.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-66971463").then(t)}},{name:"v-44eda015",path:"/plugins/plugin-fs/tasks/http/io.kestra.plugin.fs.http.Download.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-44eda015").then(t)}},{name:"v-179b58e3",path:"/plugins/plugin-fs/tasks/http/io.kestra.plugin.fs.http.Request.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-179b58e3").then(t)}},{name:"v-4d47e5e2",path:"/plugins/plugin-fs/tasks/sftp/io.kestra.plugin.fs.sftp.Delete.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-4d47e5e2").then(t)}},{name:"v-dba4f856",path:"/plugins/plugin-fs/tasks/sftp/io.kestra.plugin.fs.sftp.Download.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-dba4f856").then(t)}},{name:"v-25e39163",path:"/plugins/plugin-fs/tasks/sftp/io.kestra.plugin.fs.sftp.Downloads.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-25e39163").then(t)}},{name:"v-8ddf9dae",path:"/plugins/plugin-fs/tasks/sftp/io.kestra.plugin.fs.sftp.List.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-8ddf9dae").then(t)}},{name:"v-23a689c3",path:"/plugins/plugin-fs/tasks/sftp/io.kestra.plugin.fs.sftp.Move.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-23a689c3").then(t)}},{name:"v-2227903a",path:"/plugins/plugin-fs/tasks/sftp/io.kestra.plugin.fs.sftp.Upload.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-2227903a").then(t)}},{name:"v-dd0918da",path:"/plugins/plugin-fs/triggers/ftps/io.kestra.plugin.fs.ftps.Trigger.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-dd0918da").then(t)}},{name:"v-2942bfcf",path:"/plugins/plugin-fs/triggers/ftp/io.kestra.plugin.fs.ftp.Trigger.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-2942bfcf").then(t)}},{name:"v-e8e4bfda",path:"/plugins/plugin-fs/triggers/sftp/io.kestra.plugin.fs.sftp.Trigger.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-e8e4bfda").then(t)}},{name:"v-73d31e48",path:"/plugins/plugin-gcp/",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-73d31e48").then(t)}},{path:"/plugins/plugin-gcp/index.html",redirect:"/plugins/plugin-gcp/"},{name:"v-7ecaadb9",path:"/plugins/plugin-gcp/tasks/auth/io.kestra.plugin.gcp.auth.OauthAccessToken.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-7ecaadb9").then(t)}},{name:"v-fb396f7a",path:"/plugins/plugin-gcp/tasks/bigquery/io.kestra.plugin.gcp.bigquery.CreateDataset.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-fb396f7a").then(t)}},{name:"v-3c55e943",path:"/plugins/plugin-gcp/tasks/bigquery/io.kestra.plugin.gcp.bigquery.CreateTable.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-3c55e943").then(t)}},{name:"v-dbc6f7ba",path:"/plugins/plugin-gcp/tasks/bigquery/io.kestra.plugin.gcp.bigquery.DeleteDataset.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-dbc6f7ba").then(t)}},{name:"v-6cf47c7f",path:"/plugins/plugin-gcp/tasks/bigquery/io.kestra.plugin.gcp.bigquery.ExtractToGcs.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-6cf47c7f").then(t)}},{name:"v-54ad6563",path:"/plugins/plugin-gcp/tasks/bigquery/io.kestra.plugin.gcp.bigquery.DeleteTable.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-54ad6563").then(t)}},{name:"v-7be064a9",path:"/plugins/plugin-gcp/tasks/bigquery/io.kestra.plugin.gcp.bigquery.Load.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-7be064a9").then(t)}},{name:"v-4e5709e3",path:"/plugins/plugin-gcp/tasks/bigquery/io.kestra.plugin.gcp.bigquery.LoadFromGcs.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-4e5709e3").then(t)}},{name:"v-537b77c3",path:"/plugins/plugin-gcp/tasks/bigquery/io.kestra.plugin.gcp.bigquery.Query.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-537b77c3").then(t)}},{name:"v-70e9faad",path:"/plugins/plugin-gcp/tasks/bigquery/io.kestra.plugin.gcp.bigquery.StorageWrite.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-70e9faad").then(t)}},{name:"v-3ecdebba",path:"/plugins/plugin-gcp/tasks/bigquery/io.kestra.plugin.gcp.bigquery.TableMetadata.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-3ecdebba").then(t)}},{name:"v-3cc1b3e3",path:"/plugins/plugin-gcp/tasks/bigquery/io.kestra.plugin.gcp.bigquery.UpdateDataset.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-3cc1b3e3").then(t)}},{name:"v-5a70b4ba",path:"/plugins/plugin-gcp/tasks/bigquery/io.kestra.plugin.gcp.bigquery.UpdateTable.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-5a70b4ba").then(t)}},{name:"v-6ac937fa",path:"/plugins/plugin-gcp/tasks/gcs/io.kestra.plugin.gcp.gcs.Compose.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-6ac937fa").then(t)}},{name:"v-f84f1f7a",path:"/plugins/plugin-gcp/tasks/gcs/io.kestra.plugin.gcp.gcs.Copy.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-f84f1f7a").then(t)}},{name:"v-71f83321",path:"/plugins/plugin-gcp/tasks/gcs/io.kestra.plugin.gcp.gcs.CreateBucket.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-71f83321").then(t)}},{name:"v-0098a6ba",path:"/plugins/plugin-gcp/tasks/gcs/io.kestra.plugin.gcp.gcs.CreateBucketIamPolicy.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-0098a6ba").then(t)}},{name:"v-5d6ce852",path:"/plugins/plugin-gcp/tasks/gcs/io.kestra.plugin.gcp.gcs.Delete.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-5d6ce852").then(t)}},{name:"v-577c0243",path:"/plugins/plugin-gcp/tasks/gcs/io.kestra.plugin.gcp.gcs.DeleteBucket.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-577c0243").then(t)}},{name:"v-4b49bddb",path:"/plugins/plugin-gcp/tasks/gcs/io.kestra.plugin.gcp.gcs.DeleteList.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-4b49bddb").then(t)}},{name:"v-705330c6",path:"/plugins/plugin-gcp/tasks/gcs/io.kestra.plugin.gcp.gcs.Download.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-705330c6").then(t)}},{name:"v-767d6be3",path:"/plugins/plugin-gcp/tasks/gcs/io.kestra.plugin.gcp.gcs.Downloads.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-767d6be3").then(t)}},{name:"v-4e398af1",path:"/plugins/plugin-gcp/tasks/gcs/io.kestra.plugin.gcp.gcs.List.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-4e398af1").then(t)}},{name:"v-f98a25f2",path:"/plugins/plugin-gcp/tasks/gcs/io.kestra.plugin.gcp.gcs.UpdateBucket.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-f98a25f2").then(t)}},{name:"v-324c92aa",path:"/plugins/plugin-gcp/tasks/gcs/io.kestra.plugin.gcp.gcs.Upload.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-324c92aa").then(t)}},{name:"v-245a3723",path:"/plugins/plugin-gcp/tasks/gke/io.kestra.plugin.gcp.gke.ClusterMetadata.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-245a3723").then(t)}},{name:"v-c4879c7a",path:"/plugins/plugin-gcp/tasks/vertexai/io.kestra.plugin.gcp.vertexai.CustomJob.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-c4879c7a").then(t)}},{name:"v-4e1bbd2a",path:"/plugins/plugin-gcp/triggers/bigquery/io.kestra.plugin.gcp.bigquery.Trigger.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-4e1bbd2a").then(t)}},{name:"v-501aa0f3",path:"/plugins/plugin-gcp/triggers/gcs/io.kestra.plugin.gcp.gcs.Trigger.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-501aa0f3").then(t)}},{name:"v-21037370",path:"/plugins/plugin-googleworkspace/",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-21037370").then(t)}},{path:"/plugins/plugin-googleworkspace/index.html",redirect:"/plugins/plugin-googleworkspace/"},{name:"v-5a6906b5",path:"/plugins/plugin-googleworkspace/tasks/drive/io.kestra.plugin.googleworkspace.drive.Create.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-5a6906b5").then(t)}},{name:"v-c5d146d2",path:"/plugins/plugin-googleworkspace/tasks/drive/io.kestra.plugin.googleworkspace.drive.Delete.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-c5d146d2").then(t)}},{name:"v-ab3dc446",path:"/plugins/plugin-googleworkspace/tasks/drive/io.kestra.plugin.googleworkspace.drive.Download.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-ab3dc446").then(t)}},{name:"v-e50be976",path:"/plugins/plugin-googleworkspace/tasks/drive/io.kestra.plugin.googleworkspace.drive.Export.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-e50be976").then(t)}},{name:"v-4afee39e",path:"/plugins/plugin-googleworkspace/tasks/drive/io.kestra.plugin.googleworkspace.drive.List.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-4afee39e").then(t)}},{name:"v-5bc6a46b",path:"/plugins/plugin-googleworkspace/tasks/drive/io.kestra.plugin.googleworkspace.drive.Upload.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-5bc6a46b").then(t)}},{name:"v-54c3f0d9",path:"/plugins/plugin-googleworkspace/tasks/sheets/io.kestra.plugin.googleworkspace.sheets.Read.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-54c3f0d9").then(t)}},{name:"v-06f7403a",path:"/plugins/plugin-googleworkspace/tasks/sheets/io.kestra.plugin.googleworkspace.sheets.ReadRange.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-06f7403a").then(t)}},{name:"v-0d5f7288",path:"/plugins/plugin-jdbc-clickhouse/",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-0d5f7288").then(t)}},{path:"/plugins/plugin-jdbc-clickhouse/index.html",redirect:"/plugins/plugin-jdbc-clickhouse/"},{name:"v-14e1fb83",path:"/plugins/plugin-jdbc-clickhouse/tasks/io.kestra.plugin.jdbc.clickhouse.Query.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-14e1fb83").then(t)}},{name:"v-54b8ba20",path:"/plugins/plugin-jdbc-mysql/",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-54b8ba20").then(t)}},{path:"/plugins/plugin-jdbc-mysql/index.html",redirect:"/plugins/plugin-jdbc-mysql/"},{name:"v-67f4797a",path:"/plugins/plugin-jdbc-mysql/tasks/io.kestra.plugin.jdbc.mysql.Query.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-67f4797a").then(t)}},{name:"v-10ba6270",path:"/plugins/plugin-jdbc-oracle/",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-10ba6270").then(t)}},{path:"/plugins/plugin-jdbc-oracle/index.html",redirect:"/plugins/plugin-jdbc-oracle/"},{name:"v-604496fa",path:"/plugins/plugin-jdbc-oracle/tasks/io.kestra.plugin.jdbc.oracle.Query.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-604496fa").then(t)}},{name:"v-36f917a8",path:"/plugins/plugin-jdbc-postgres/",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-36f917a8").then(t)}},{path:"/plugins/plugin-jdbc-postgres/index.html",redirect:"/plugins/plugin-jdbc-postgres/"},{name:"v-acc87596",path:"/plugins/plugin-jdbc-postgres/tasks/l/io.kestra.plugin.jdbc.postgresql.CopyIn.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-acc87596").then(t)}},{name:"v-1fd8c93a",path:"/plugins/plugin-jdbc-postgres/tasks/l/io.kestra.plugin.jdbc.postgresql.CopyOut.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-1fd8c93a").then(t)}},{name:"v-e377b17a",path:"/plugins/plugin-jdbc-postgres/tasks/l/io.kestra.plugin.jdbc.postgresql.Query.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-e377b17a").then(t)}},{name:"v-3d3efab0",path:"/plugins/plugin-jdbc-redshift/",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-3d3efab0").then(t)}},{path:"/plugins/plugin-jdbc-redshift/index.html",redirect:"/plugins/plugin-jdbc-redshift/"},{name:"v-fbc18ffa",path:"/plugins/plugin-jdbc-redshift/tasks/io.kestra.plugin.jdbc.redshift.Query.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-fbc18ffa").then(t)}},{name:"v-9ad35d10",path:"/plugins/plugin-jdbc-vertica/",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-9ad35d10").then(t)}},{path:"/plugins/plugin-jdbc-vertica/index.html",redirect:"/plugins/plugin-jdbc-vertica/"},{name:"v-02960fc3",path:"/plugins/plugin-jdbc-vertica/tasks/io.kestra.plugin.jdbc.vertica.Query.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-02960fc3").then(t)}},{name:"v-29f37a98",path:"/plugins/plugin-kubernetes/",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-29f37a98").then(t)}},{path:"/plugins/plugin-kubernetes/index.html",redirect:"/plugins/plugin-kubernetes/"},{name:"v-c01409fa",path:"/plugins/plugin-kubernetes/tasks/io.kestra.plugin.kubernetes.JobCreate.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-c01409fa").then(t)}},{name:"v-018f4203",path:"/plugins/plugin-kubernetes/tasks/io.kestra.plugin.kubernetes.PodCreate.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-018f4203").then(t)}},{name:"v-52217188",path:"/plugins/plugin-mongodb/",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-52217188").then(t)}},{path:"/plugins/plugin-mongodb/index.html",redirect:"/plugins/plugin-mongodb/"},{name:"v-2e11c6f2",path:"/plugins/plugin-mongodb/tasks/io.kestra.plugin.mongodb.Bulk.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-2e11c6f2").then(t)}},{name:"v-0bdf51d6",path:"/plugins/plugin-mongodb/tasks/io.kestra.plugin.mongodb.Delete.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-0bdf51d6").then(t)}},{name:"v-3720c639",path:"/plugins/plugin-mongodb/tasks/io.kestra.plugin.mongodb.Find.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-3720c639").then(t)}},{name:"v-6d55a783",path:"/plugins/plugin-mongodb/tasks/io.kestra.plugin.mongodb.InsertOne.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-6d55a783").then(t)}},{name:"v-5114ce42",path:"/plugins/plugin-mongodb/tasks/io.kestra.plugin.mongodb.Load.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-5114ce42").then(t)}},{name:"v-6aa16659",path:"/plugins/plugin-mongodb/tasks/io.kestra.plugin.mongodb.Update.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-6aa16659").then(t)}},{name:"v-3a591248",path:"/plugins/plugin-notifications/",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-3a591248").then(t)}},{path:"/plugins/plugin-notifications/index.html",redirect:"/plugins/plugin-notifications/"},{name:"v-4f9eee3a",path:"/plugins/plugin-notifications/tasks/mail/io.kestra.plugin.notifications.mail.MailExecution.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-4f9eee3a").then(t)}},{name:"v-f32cad3a",path:"/plugins/plugin-notifications/tasks/mail/io.kestra.plugin.notifications.mail.MailSend.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-f32cad3a").then(t)}},{name:"v-45663aff",path:"/plugins/plugin-notifications/tasks/mail/io.kestra.plugin.notifications.mail.MailTemplate.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-45663aff").then(t)}},{name:"v-386bb2dd",path:"/plugins/plugin-notifications/tasks/slack/io.kestra.plugin.notifications.slack.SlackExecution.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-386bb2dd").then(t)}},{name:"v-4d8f95c3",path:"/plugins/plugin-notifications/tasks/slack/io.kestra.plugin.notifications.slack.SlackTemplate.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-4d8f95c3").then(t)}},{name:"v-66b72beb",path:"/plugins/plugin-notifications/tasks/slack/io.kestra.plugin.notifications.slack.SlackIncomingWebhook.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-66b72beb").then(t)}},{name:"v-bdff5170",path:"/plugins/plugin-script-groovy/",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-bdff5170").then(t)}},{path:"/plugins/plugin-script-groovy/index.html",redirect:"/plugins/plugin-script-groovy/"},{name:"v-02cf38e3",path:"/plugins/plugin-script-groovy/tasks/io.kestra.plugin.scripts.groovy.Eval.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-02cf38e3").then(t)}},{name:"v-59bdfabb",path:"/plugins/plugin-script-groovy/tasks/io.kestra.plugin.scripts.groovy.FileTransform.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-59bdfabb").then(t)}},{name:"v-043c5470",path:"/plugins/plugin-script-jython/",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-043c5470").then(t)}},{path:"/plugins/plugin-script-jython/index.html",redirect:"/plugins/plugin-script-jython/"},{name:"v-5f95afe3",path:"/plugins/plugin-script-jython/tasks/io.kestra.plugin.scripts.jython.Eval.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-5f95afe3").then(t)}},{name:"v-5211966b",path:"/plugins/plugin-script-jython/tasks/io.kestra.plugin.scripts.jython.FileTransform.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-5211966b").then(t)}},{name:"v-0b5737be",path:"/plugins/plugin-script-nashorn/",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-0b5737be").then(t)}},{path:"/plugins/plugin-script-nashorn/index.html",redirect:"/plugins/plugin-script-nashorn/"},{name:"v-0511d7ba",path:"/plugins/plugin-script-nashorn/tasks/io.kestra.plugin.scripts.nashorn.Eval.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-0511d7ba").then(t)}},{name:"v-5faa4ec7",path:"/plugins/plugin-script-nashorn/tasks/io.kestra.plugin.scripts.nashorn.FileTransform.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-5faa4ec7").then(t)}},{name:"v-3bbf4cdc",path:"/plugins/plugin-serdes/",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-3bbf4cdc").then(t)}},{path:"/plugins/plugin-serdes/index.html",redirect:"/plugins/plugin-serdes/"},{name:"v-18af94bb",path:"/plugins/plugin-serdes/tasks/avro/io.kestra.plugin.serdes.avro.AvroReader.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-18af94bb").then(t)}},{name:"v-7a45215b",path:"/plugins/plugin-serdes/tasks/avro/io.kestra.plugin.serdes.avro.AvroWriter.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-7a45215b").then(t)}},{name:"v-40cfe323",path:"/plugins/plugin-serdes/tasks/csv/io.kestra.plugin.serdes.csv.CsvWriter.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-40cfe323").then(t)}},{name:"v-69ffc923",path:"/plugins/plugin-serdes/tasks/csv/io.kestra.plugin.serdes.csv.CsvReader.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-69ffc923").then(t)}},{name:"v-415b3a4f",path:"/plugins/plugin-serdes/tasks/json/io.kestra.plugin.serdes.json.JsonReader.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-415b3a4f").then(t)}},{name:"v-ba1e7222",path:"/plugins/plugin-serdes/tasks/json/io.kestra.plugin.serdes.json.JsonWriter.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-ba1e7222").then(t)}},{name:"v-99d1487a",path:"/plugins/plugin-serdes/tasks/xml/io.kestra.plugin.serdes.xml.XmlReader.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-99d1487a").then(t)}},{name:"v-ec31147a",path:"/plugins/plugin-serdes/tasks/xml/io.kestra.plugin.serdes.xml.XmlWriter.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-ec31147a").then(t)}},{name:"v-ceb69070",path:"/plugins/plugin-singer/",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-ceb69070").then(t)}},{path:"/plugins/plugin-singer/index.html",redirect:"/plugins/plugin-singer/"},{name:"v-caee76d6",path:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.BigQuery.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-caee76d6").then(t)}},{name:"v-8966c87a",path:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.BingAds.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-8966c87a").then(t)}},{name:"v-0593a543",path:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.ChargeBee.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-0593a543").then(t)}},{name:"v-251abf8f",path:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.ExchangeRateHost.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-251abf8f").then(t)}},{name:"v-5fde3b03",path:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.FacebookAds.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-5fde3b03").then(t)}},{name:"v-51d3ffda",path:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.Fastly.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-51d3ffda").then(t)}},{name:"v-55ac30df",path:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.GitHub.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-55ac30df").then(t)}},{name:"v-c76544ba",path:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.GoogleAdwords.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-c76544ba").then(t)}},{name:"v-7662856f",path:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.Gitlab.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-7662856f").then(t)}},{name:"v-9e876dba",path:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.GoogleAnalytics.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-9e876dba").then(t)}},{name:"v-8271f6fa",path:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.GoogleSearchConsole.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-8271f6fa").then(t)}},{name:"v-7c7dff3a",path:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.Marketo.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-7c7dff3a").then(t)}},{name:"v-0ae15a7a",path:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.PipelinewiseMongoDb.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-0ae15a7a").then(t)}},{name:"v-91e0edfa",path:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.PipelinewiseMysql.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-91e0edfa").then(t)}},{name:"v-fafa84b2",path:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.PipelinewisePostgres.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-fafa84b2").then(t)}},{name:"v-6404442b",path:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.Quickbooks.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-6404442b").then(t)}},{name:"v-0350a017",path:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.Recharge.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-0350a017").then(t)}},{name:"v-75738383",path:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.SageIntacct.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-75738383").then(t)}},{name:"v-f6b12eb2",path:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.Salesforce.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-f6b12eb2").then(t)}},{name:"v-914861fa",path:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.Shopify.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-914861fa").then(t)}},{name:"v-1057d903",path:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.Slack.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-1057d903").then(t)}},{name:"v-3487036a",path:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.Stripe.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-3487036a").then(t)}},{name:"v-138cdb7a",path:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.Zendesk.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-138cdb7a").then(t)}},{name:"v-24deb5bf",path:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.Zoom.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-24deb5bf").then(t)}},{name:"v-635b8d0f",path:"/plugins/plugin-singer/tasks/targets/io.kestra.plugin.singer.targets.AdswerveBigQuery.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-635b8d0f").then(t)}},{name:"v-362c4c43",path:"/plugins/plugin-singer/tasks/targets/io.kestra.plugin.singer.targets.Csv.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-362c4c43").then(t)}},{name:"v-7315418f",path:"/plugins/plugin-singer/tasks/targets/io.kestra.plugin.singer.targets.DatamillCoPostgres.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-7315418f").then(t)}},{name:"v-349a2355",path:"/plugins/plugin-singer/tasks/targets/io.kestra.plugin.singer.targets.Json.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-349a2355").then(t)}},{name:"v-15212176",path:"/plugins/plugin-singer/tasks/targets/io.kestra.plugin.singer.targets.MeltanoSnowflake.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-15212176").then(t)}},{name:"v-08265ca7",path:"/plugins/plugin-singer/tasks/targets/io.kestra.plugin.singer.targets.PipelinewisePostgres.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-08265ca7").then(t)}},{name:"v-7e28e877",path:"/plugins/plugin-singer/tasks/targets/io.kestra.plugin.singer.targets.PipelinewiseRedshift.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-7e28e877").then(t)}},{name:"v-b544102e",path:"/docs/developer-guide/variables/operator/is.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-b544102e").then(t)}},{name:"v-52891643",path:"/plugins/plugin-fs/tasks/ftps/io.kestra.plugin.fs.ftps.Move.html",component:rt,beforeEnter:function(e,n,t){hn("Layout","v-52891643").then(t)}},{path:"*",component:rt}],ot={title:"Kestra",description:"",base:"/",headTags:[["link",{rel:"apple-touch-icon",sizes:"180x180",href:"/apple-touch-icon.png"}],["link",{rel:"icon",type:"image/png",sizes:"32x32",href:"/favicon-32x32.png"}],["link",{rel:"icon",type:"image/png",sizes:"16x16",href:"/favicon-16x16.png"}],["link",{rel:"manifest",href:"/site.webmanifest"}],["link",{rel:"mask-icon",href:"/safari-pinned-tab.svg",color:"#192a4e"}],["meta",{name:"msapplication-TileColor",content:"#192a4e"}],["meta",{name:"theme-color",content:"#192a4e"}]],pages:[{title:"Kestra, infinitely scalable open source orchestration & scheduling platform.",frontmatter:{title:"Kestra, infinitely scalable open source orchestration & scheduling platform.",description:"Kestra is an infinitely scalable orchestrator & scheduler platform, in order to create, run, schedule and monitor millions of complex pipelines.",layout:"Home",meta:[{property:"article:modified_time",content:"2022-01-13T21:18:21.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:description",content:"Kestra is an infinitely scalable orchestrator & scheduler platform, in order to create, run, schedule and monitor millions of complex pipelines. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:description",content:"Kestra is an infinitely scalable orchestrator & scheduler platform, in order to create, run, schedule and monitor millions of complex pipelines. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/",relativePath:"index.md",key:"v-3140ed9c",path:"/",lastUpdated:"1/13/2022, 9:18:21 PM",lastUpdatedTimestamp:1642108701e3,headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"How Leroy Merlin handle all this cloud data pipeline with Kestra",frontmatter:{title:"How Leroy Merlin handle all this cloud data pipeline with Kestra",description:"Discover how Leroy Merlin move all their data pipeline to the Google Cloud with Kestra",date:"2022-01-10T00:00:00.000Z",layout:"BlogsPost",author:{name:"Ludovic Dehon",image:"ldehon",twitter:"@tchiotludo"},meta:[{property:"article:published_time",content:"2022-01-10T00:00:00.000Z"},{property:"article:modified_time",content:"2022-01-13T21:18:21.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"How Leroy Merlin handle all this cloud data pipeline with Kestra"},{property:"og:description",content:"Discover how Leroy Merlin move all their data pipeline to the Google Cloud with Kestra | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"article"},{property:"og:url",content:"https://kestra.io/blogs/2022-01-10-leroy-merlin-usage-kestra.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"How Leroy Merlin handle all this cloud data pipeline with Kestra"},{name:"twitter:description",content:"Discover how Leroy Merlin move all their data pipeline to the Google Cloud with Kestra | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/blogs/2022-01-10-leroy-merlin-usage-kestra.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Ludovic Dehon"},{name:"twitter:creator",content:"@tchiotludo"}]},regularPath:"/blogs/2022-01-10-leroy-merlin-usage-kestra.html",relativePath:"blogs/2022-01-10-leroy-merlin-usage-kestra.md",key:"v-b037671e",path:"/blogs/2022-01-10-leroy-merlin-usage-kestra.html",headers:[{level:2,title:"Before the cloud, the on premise choice",slug:"before-the-cloud-the-on-premise-choice",normalizedTitle:"before the cloud, the on premise choice",charIndex:644},{level:2,title:"Going to the cloud",slug:"going-to-the-cloud",normalizedTitle:"going to the cloud",charIndex:1995},{level:2,title:"On the cloud, after few months",slug:"on-the-cloud-after-few-months",normalizedTitle:"on the cloud, after few months",charIndex:3420},{level:3,title:"Transfer of data",slug:"transfer-of-data",normalizedTitle:"transfer of data",charIndex:3710},{level:3,title:"Orchestration",slug:"orchestration",normalizedTitle:"orchestration",charIndex:4500},{level:2,title:"Kestra at the rescue",slug:"kestra-at-the-rescue",normalizedTitle:"kestra at the rescue",charIndex:7446},{level:3,title:"Custom plugin to simplify the adoption",slug:"custom-plugin-to-simplify-the-adoption",normalizedTitle:"custom plugin to simplify the adoption",charIndex:7772},{level:3,title:"Adoption by the team",slug:"adoption-by-the-team",normalizedTitle:"adoption by the team",charIndex:10044},{level:3,title:"Go production",slug:"go-production",normalizedTitle:"go production",charIndex:11208},{level:3,title:"Some testimonials",slug:"some-testimonials",normalizedTitle:"some testimonials",charIndex:12238},{level:2,title:"Conclusion",slug:"conclusion",normalizedTitle:"conclusion",charIndex:13640}],lastUpdated:"1/13/2022, 9:18:21 PM",lastUpdatedTimestamp:1642108701e3,headersStr:"Before the cloud, the on premise choice Going to the cloud On the cloud, after few months Transfer of data Orchestration Kestra at the rescue Custom plugin to simplify the adoption Adoption by the team Go production Some testimonials Conclusion",content:'Adeo is the leading French player in the international DIY market and No. 3 worldwide, Adeo is going from strength to strength.\nLeroy Merlin is the leading biggest brand of Adeo Group, that help inhabitants around the world with all their home improvement projects, from renovations and extensions to decoration and repairs. With more than 450 stores in the world and 140 in France, Leroy Merlin France have a strong data values and need to deliver KPI to their 80 000+ employees to drive their expansion.\n\nIn this article, we will browse the past, present and futur of their dataplatform with thousands of datasource, KPIS, dashboard, ...\n\n\n# Before the cloud, the on premise choice\n\nLeroy Merlin, historically use the following stack in order to handle all their data pipeline :\n\n * Teradata for the data warehouse\n * VectorWise as database for api\n * Stambia as ELT\n * Dollar U & Automic Workload Automation as orchestrator and scheduler.\n * Custom development for transfer of the data\n\nSince this one as done the job for many years, nowadays, the choice seems to be outdated. They have seen this gap during the last year that seems to be larger with the cloud adoption:\n\n * Vectorwise & Teradata is not serverless and need to be scaled manually\n * Stambia don\'t have a lot native connectors for the cloud, and it\'s design, only runtime execution that must be launch by an orchestrator, can be completed as we need another tools to trigger the job\n * Dollar U & AWA is lead by Adeo (the group), people need to go to internal ticket service in order to have an orchestration job, wait for other people to handle it, this can take few days or more to have the things done. Moreover, the monitoring of a pipeline is divided with different tools that don\'t talk to each other making the oversea really complicated.\n\nSome issues are due to organization separation between the Business Unit & the group (Adeo), but most of them are due to cloud: All of these tools are not ready for the cloud.\n\n\n# Going to the cloud\n\nIn 2019, Leroy Merlin and Adeo decided to move all on premise server to cloud as the data stack to the cloud. They need a solution in order to handle all the previous use case and find a new way to handle all with an ambitious objective, being full cloud in 2022!\n\nThey decided to create a new team, with a goal, took an empty page and built a full solution for this migration. They needed to define each component of the future data platform (from storage, pipeline, source code, ...), built this platform and taught how to use it for all data engineer (approximately 50 peoples).\n\nAdeo & Leroy Merlin have a strong partnership so the storage will be Google BigQuery. Really soon, Leroy Merlin have decided to go to the DataOps lifecycle, no go live must be a manual task and a pain. Second decision: every thing need to be hosted on GitHub and have a strong CI/CD in order to go to production. Terraform will be the evident choice here also due to large ecosystem and native integration with BigQuery and others GCP resource.\n\nNow, they need to find how to transfer the data, load it in BigQuery, transform & aggregate the data. For the transport layer & load, no evident choice are visible, so they decided to build a custom solution (based on GCP service) and for the orchestration, a lot of people is using Airflow, so why not try and even more there is a managed service on GCP: Cloud composer.\n\n\n# On the cloud, after few months\n\nLeroy Merlin decided to start every new project on the cloud directly before starting a migration on exiting project. The first projects are coming, the build is done, some projects are on production, now they can start make some conclusion on past work\n\n\n# Transfer of data\n\nThe custom home tools have proven some major assumption :\n\n * The transfer layer must be over https, every system can send a https request in order to send the data, even the legacy one with old systems.\n * The data must be validated, we can\'t let irrelevant data on the data warehouse. The format is an avro schema that will validate before loading in order to parse primitive data type, and some additional check can be done optionally.\n\nOne major fail: The custom tools was made in Python and need to installed on the system that will send the data. Since python have a complicated lifecycle, they reach system that just can\'t install python 3 leading one only choice: develop multiple version of the tools to target all systems, that would just be unmaintainable.\n\n\n# Orchestration\n\nThe choice of Airflow seems to be a good choice, the ability to handle a lot of complex workflow with simple python code. So the custom transfer tools will trigger Airflow dag after the load on BigQuery. Airflow will handle all the other case: transform / aggregate / reverse ETL and so on.\n\nBut it failed at Leroy Merlin. First, the implementation by Google : Google Cloud Composer seen a lot of limitation and was rejected quickly. So Leroy Merlin decide to install their own Airflow on Kubernetes Clusters. That seems to be better at first, more control, more stability. Moreover, we still have a lot of issues :\n\n * After a simple benchmark of thousand of task with only sleep 1, we seen failed tasks. Sleep 1 tasks should never have failed and let us a lack of confidence on the product, how to monitor our dags if we have failed tasks only due to orchestrator.\n * The workflow as python code was clearly not a good choice, one dag produce by team member introduce some code out code evaluated by airflow worker, this led to code executed every x sec by every airflow component and slow down the cluster: we see with that example that we can\'t let users build dag by themselves without strong code review since 1 dag can crash the whole cluster.\n * The CPU usage of an airflow cluster was really high, even if the task done are only called API (BigQuery API in our case). Only waiting task eat CPU, how to handle CPU intensive tasks will be handled?\n * The airflow API at this time was experimental, and we need to trigger flow externally. This API has no control on passed parameter.\n * Sensors are mechanism on Airflow in order to wait for something (wait for a file, wait for a dag, ...) Every sensor will eat 1 worker slot, and we plan to have a lots, so we need to add even more worker to handle the load.\n * Airflow don\'t allow us to pass large data between tasks, XCOM are here, but only for small amount of data. This is a major bad design, that led to have to multiply for one source the destinations (ex: BigQueryToGCSOperator, BigQueryToMySqlOperator, BigQueryToBigQueryOperator, ...). It will not scale to develop some many operators.\n * RBAC on Airflow is very limited and only allow to have user that own a dag and no notion of groups. In a team, we need to have multiple people on the same resources.\n * ...\n\nEven if we really try to use it, the performance was not here, Airflow failed quickly on the first project: The duration of the flow is 20 times longer than the same flow with Stambia and the analysis are showing that this duration will increase over the times and will not scale to due to number of dags and number of executions wanted.\n\nDecision\n\nAt this time the conclusion was acted: terraform & BigQuery was confirmed as they show their capability, Airflow & custom transfer & load tools was rejected.\nLeroy Merlin need to find another way to handle this, and have no solution at this moment.\n\n\n# Kestra at the rescue\n\nIn a meantime, Ludovic has started working on Kestra and decided to show his work to Leroy Merlin, which shown a lot of interest and decided to test the solution for few month. Since some features are missing at this time, they also decided to contribute on the open source project and some plugins.\n\n\n# Custom plugin to simplify the adoption\n\nThey also develop quickly a Kestra plugins in order to simplify the ingestion process called DataPlatformIngest, removing all the burden in loading data, the plugins do :\n\n * cold archive the incoming data to Google Cloud Storage Bucket\n * validate the data technically with an Avro schema: they don\'t want bad incoming data and be sure at least the data is typed (integer, date, ...)\n * versioning the data (if the schema is breaking change)\n * append technical column (loaded data, execution id) in order to have a full lineage on the data warehouse\n * load the data in a temporary table\n * apply some quality with rejection on records based on business rules (upper/lower bound, validate key with referential, deduplication, ...)\n * load the data in ODS (Operational Data Store) that is the image of the data from incoming system\n\nThe transfer of the data is in https directly to Kestra Api in order to free any dependencies, the operational system used most often a simple curl command in order to trigger ingestion or develop a simple http client reaching Kestra api.\n\nThis single task that handle all the complexity for loading data, this one will create 10 to 20 tasks :\n\nid: lock\nnamespace: fr.leroymerlin.services.product.orchestrator\n\ninputs:\n  - type: FILE\n    name: shedlock\ntasks:\n  - id: 01_ingest_ods_shedlock\n    type: com.leroymerlin.dataplatform.dcp.tasks.DataPlatformIngest\n    avroOptions:\n      dateFormat: yyyy-MM-dd\n      datetimeFormat: yyyy-MM-dd\' \'HH:mm:ss\n      nullValues:\n        - \\N\n        - "1900-01-00 00:00:00"\n      schema: |-\n        {\n            "type": "record",\n            "name": "shedlock",\n            "namespace": "org.kestra",\n            "fields": [\n                { "name": "name", "type": "string" },\n                { "name": "lock_until", "type": [ "null", { "type": "long", "logicalType": "timestamp-millis"} ] },\n                { "name": "locked_at", "type": [ "null", { "type": "long", "logicalType": "timestamp-millis"} ] },\n                { "name": "locked_by", "type": [ "null", "string" ] }\n            ]\n        }\n    csvOptions:\n      fieldSeparator: "|"\n    dataset: instala\n    fileType: CSV\n    from: "{{ inputs.shedlock }}"\n    table: shedlock\n    version: 1\n\n\n\n# Adoption by the team\n\nAt Leroy Merlin, there is 80+ data engineers, data scientist. They will need to learn how to use Kestra, but since it was based on simple declarative language (based on yaml), this was quick and people used it in few hours.\n\nAlso, since there is a rich ui, the deployment process was really easy at the beginning, just save on the ui, it\'s ready.\n\nAfter, since Leroy Merlin is using terraform in order to deploy every cloud resource, they also deploy Kestra resources using terraform providers. They reach a full dataops lifecycle, all deployment is atomic with a git push & a strong CI/CD applying resource from terraform.\n\nReach a fast time to market\n\nBefore this dataops lifecycle, all deployment involve many team: transfer team that moving the file between systems, orchestration team that will trigger the job after the transfer, data team that will develop the load of data, plus a manual operation in order to create resource on the data wharehouse. All these operations need to synchronize with internal ticket on service now.\n\nThanks to Kestra, they move a full autonomy and reduce the time to market from few days to few hours\n\n\n# Go production\n\nAfter few month, Kestra was confirmed and was deployed to production environnement on May 2020. They also decided to move to Enterprise Edition of Kestra in August 2020 since they need to have fined grained security, role based access control and single sign on.\n\nThe usage grow exponentially over the month and the kind of usage is more and more various : start flow based on file detection from buckets, sync data warehouse directly from operation postgres database, develop simple python program to fetch api from a partner, start long-running data science process over Kubernetes, fetch data from Google Drive and write result back to Google Sheets, ...\n\nHere is some numbers that show the current usage at January 2022 only for production environment:\n\n * 4 clusters for every environment\n * 200+ users / developers using it\n * 2000+ flows in production\n * 350,000 executions every month\n * 3,000,000 tasks every month\n * 1,500 days of executions every month (yeah, 50 days of executions every single day)\n\n\n# Some testimonials\n\nLeroy Merlin have supported the development of Kestra, so as every software, it\'s young age can be frustrated for users. They need to handle some missing features, report some bugs, suffer some time from instability. But what was astounding, the pain is less than the gain, and we have a lots of good report on Software internal notation tool, it\'s a solution that users really love and upfold. Here is some testimonials:\n\n> Tool responds perfectly to the need, very easy to use, it manages all the complexity behind to offer a saving of time and enormous cost.\n\n> Kestra is a very easy to use tool with constant improvement in functionality.\n> It covers almost all data pipeline setup needs.\n\n> Kestra is very easy to learn, with a large number of functionalities covering a large number of use cases (scheduled workflows, API calls, triggers, flow synchronization, data and file transfers, etc.).\n> The Web interface facilitates the monitoring of flows and the consultation of logs.\n> New features are added very regularly, often in response to needs. Kestra is evolving rapidly.\n\n> After suffering with Airflow to schedule different treatments, Kestra\'s arrival was more than saving.\n> The ecosystem of plugins is evolving rapidly and greatly facilitates integration with different bricks, especially on GCP (BQ, GCS, Cloud SQL, etc.)\n> A tool that deserves to be known more.\n\n\n# Conclusion\n\nLeroy Merlin help a lot Kestra to grow by supporting his early age, but we really think it was a win-win partnership. Kestra is a tool that allow Leroy Merlin to successes in his cloud migration and to embrace Data Ops development design.\n\nFrom Leroy Merlin manager, the true revolution is :\n\n> Kestra is the first tool that allow us to develop without installation, used your browser and start build a true business use case in few hours. Since the learning curve is easy, you can easily onboard new teammate due to its descriptive language. And moreover, it handles all the part of the data pipeline, the transport, load, transform, data modelization, data quality and monitoring of all our data pipeline. Since the tool offer strong role based access & security on the Entreprise Edition, we are safe to share ir in Software as Service to all applications allowing also to embrace the Data Mesh pattern.',normalizedContent:'adeo is the leading french player in the international diy market and no. 3 worldwide, adeo is going from strength to strength.\nleroy merlin is the leading biggest brand of adeo group, that help inhabitants around the world with all their home improvement projects, from renovations and extensions to decoration and repairs. with more than 450 stores in the world and 140 in france, leroy merlin france have a strong data values and need to deliver kpi to their 80 000+ employees to drive their expansion.\n\nin this article, we will browse the past, present and futur of their dataplatform with thousands of datasource, kpis, dashboard, ...\n\n\n# before the cloud, the on premise choice\n\nleroy merlin, historically use the following stack in order to handle all their data pipeline :\n\n * teradata for the data warehouse\n * vectorwise as database for api\n * stambia as elt\n * dollar u & automic workload automation as orchestrator and scheduler.\n * custom development for transfer of the data\n\nsince this one as done the job for many years, nowadays, the choice seems to be outdated. they have seen this gap during the last year that seems to be larger with the cloud adoption:\n\n * vectorwise & teradata is not serverless and need to be scaled manually\n * stambia don\'t have a lot native connectors for the cloud, and it\'s design, only runtime execution that must be launch by an orchestrator, can be completed as we need another tools to trigger the job\n * dollar u & awa is lead by adeo (the group), people need to go to internal ticket service in order to have an orchestration job, wait for other people to handle it, this can take few days or more to have the things done. moreover, the monitoring of a pipeline is divided with different tools that don\'t talk to each other making the oversea really complicated.\n\nsome issues are due to organization separation between the business unit & the group (adeo), but most of them are due to cloud: all of these tools are not ready for the cloud.\n\n\n# going to the cloud\n\nin 2019, leroy merlin and adeo decided to move all on premise server to cloud as the data stack to the cloud. they need a solution in order to handle all the previous use case and find a new way to handle all with an ambitious objective, being full cloud in 2022!\n\nthey decided to create a new team, with a goal, took an empty page and built a full solution for this migration. they needed to define each component of the future data platform (from storage, pipeline, source code, ...), built this platform and taught how to use it for all data engineer (approximately 50 peoples).\n\nadeo & leroy merlin have a strong partnership so the storage will be google bigquery. really soon, leroy merlin have decided to go to the dataops lifecycle, no go live must be a manual task and a pain. second decision: every thing need to be hosted on github and have a strong ci/cd in order to go to production. terraform will be the evident choice here also due to large ecosystem and native integration with bigquery and others gcp resource.\n\nnow, they need to find how to transfer the data, load it in bigquery, transform & aggregate the data. for the transport layer & load, no evident choice are visible, so they decided to build a custom solution (based on gcp service) and for the orchestration, a lot of people is using airflow, so why not try and even more there is a managed service on gcp: cloud composer.\n\n\n# on the cloud, after few months\n\nleroy merlin decided to start every new project on the cloud directly before starting a migration on exiting project. the first projects are coming, the build is done, some projects are on production, now they can start make some conclusion on past work\n\n\n# transfer of data\n\nthe custom home tools have proven some major assumption :\n\n * the transfer layer must be over https, every system can send a https request in order to send the data, even the legacy one with old systems.\n * the data must be validated, we can\'t let irrelevant data on the data warehouse. the format is an avro schema that will validate before loading in order to parse primitive data type, and some additional check can be done optionally.\n\none major fail: the custom tools was made in python and need to installed on the system that will send the data. since python have a complicated lifecycle, they reach system that just can\'t install python 3 leading one only choice: develop multiple version of the tools to target all systems, that would just be unmaintainable.\n\n\n# orchestration\n\nthe choice of airflow seems to be a good choice, the ability to handle a lot of complex workflow with simple python code. so the custom transfer tools will trigger airflow dag after the load on bigquery. airflow will handle all the other case: transform / aggregate / reverse etl and so on.\n\nbut it failed at leroy merlin. first, the implementation by google : google cloud composer seen a lot of limitation and was rejected quickly. so leroy merlin decide to install their own airflow on kubernetes clusters. that seems to be better at first, more control, more stability. moreover, we still have a lot of issues :\n\n * after a simple benchmark of thousand of task with only sleep 1, we seen failed tasks. sleep 1 tasks should never have failed and let us a lack of confidence on the product, how to monitor our dags if we have failed tasks only due to orchestrator.\n * the workflow as python code was clearly not a good choice, one dag produce by team member introduce some code out code evaluated by airflow worker, this led to code executed every x sec by every airflow component and slow down the cluster: we see with that example that we can\'t let users build dag by themselves without strong code review since 1 dag can crash the whole cluster.\n * the cpu usage of an airflow cluster was really high, even if the task done are only called api (bigquery api in our case). only waiting task eat cpu, how to handle cpu intensive tasks will be handled?\n * the airflow api at this time was experimental, and we need to trigger flow externally. this api has no control on passed parameter.\n * sensors are mechanism on airflow in order to wait for something (wait for a file, wait for a dag, ...) every sensor will eat 1 worker slot, and we plan to have a lots, so we need to add even more worker to handle the load.\n * airflow don\'t allow us to pass large data between tasks, xcom are here, but only for small amount of data. this is a major bad design, that led to have to multiply for one source the destinations (ex: bigquerytogcsoperator, bigquerytomysqloperator, bigquerytobigqueryoperator, ...). it will not scale to develop some many operators.\n * rbac on airflow is very limited and only allow to have user that own a dag and no notion of groups. in a team, we need to have multiple people on the same resources.\n * ...\n\neven if we really try to use it, the performance was not here, airflow failed quickly on the first project: the duration of the flow is 20 times longer than the same flow with stambia and the analysis are showing that this duration will increase over the times and will not scale to due to number of dags and number of executions wanted.\n\ndecision\n\nat this time the conclusion was acted: terraform & bigquery was confirmed as they show their capability, airflow & custom transfer & load tools was rejected.\nleroy merlin need to find another way to handle this, and have no solution at this moment.\n\n\n# kestra at the rescue\n\nin a meantime, ludovic has started working on kestra and decided to show his work to leroy merlin, which shown a lot of interest and decided to test the solution for few month. since some features are missing at this time, they also decided to contribute on the open source project and some plugins.\n\n\n# custom plugin to simplify the adoption\n\nthey also develop quickly a kestra plugins in order to simplify the ingestion process called dataplatformingest, removing all the burden in loading data, the plugins do :\n\n * cold archive the incoming data to google cloud storage bucket\n * validate the data technically with an avro schema: they don\'t want bad incoming data and be sure at least the data is typed (integer, date, ...)\n * versioning the data (if the schema is breaking change)\n * append technical column (loaded data, execution id) in order to have a full lineage on the data warehouse\n * load the data in a temporary table\n * apply some quality with rejection on records based on business rules (upper/lower bound, validate key with referential, deduplication, ...)\n * load the data in ods (operational data store) that is the image of the data from incoming system\n\nthe transfer of the data is in https directly to kestra api in order to free any dependencies, the operational system used most often a simple curl command in order to trigger ingestion or develop a simple http client reaching kestra api.\n\nthis single task that handle all the complexity for loading data, this one will create 10 to 20 tasks :\n\nid: lock\nnamespace: fr.leroymerlin.services.product.orchestrator\n\ninputs:\n  - type: file\n    name: shedlock\ntasks:\n  - id: 01_ingest_ods_shedlock\n    type: com.leroymerlin.dataplatform.dcp.tasks.dataplatformingest\n    avrooptions:\n      dateformat: yyyy-mm-dd\n      datetimeformat: yyyy-mm-dd\' \'hh:mm:ss\n      nullvalues:\n        - \\n\n        - "1900-01-00 00:00:00"\n      schema: |-\n        {\n            "type": "record",\n            "name": "shedlock",\n            "namespace": "org.kestra",\n            "fields": [\n                { "name": "name", "type": "string" },\n                { "name": "lock_until", "type": [ "null", { "type": "long", "logicaltype": "timestamp-millis"} ] },\n                { "name": "locked_at", "type": [ "null", { "type": "long", "logicaltype": "timestamp-millis"} ] },\n                { "name": "locked_by", "type": [ "null", "string" ] }\n            ]\n        }\n    csvoptions:\n      fieldseparator: "|"\n    dataset: instala\n    filetype: csv\n    from: "{{ inputs.shedlock }}"\n    table: shedlock\n    version: 1\n\n\n\n# adoption by the team\n\nat leroy merlin, there is 80+ data engineers, data scientist. they will need to learn how to use kestra, but since it was based on simple declarative language (based on yaml), this was quick and people used it in few hours.\n\nalso, since there is a rich ui, the deployment process was really easy at the beginning, just save on the ui, it\'s ready.\n\nafter, since leroy merlin is using terraform in order to deploy every cloud resource, they also deploy kestra resources using terraform providers. they reach a full dataops lifecycle, all deployment is atomic with a git push & a strong ci/cd applying resource from terraform.\n\nreach a fast time to market\n\nbefore this dataops lifecycle, all deployment involve many team: transfer team that moving the file between systems, orchestration team that will trigger the job after the transfer, data team that will develop the load of data, plus a manual operation in order to create resource on the data wharehouse. all these operations need to synchronize with internal ticket on service now.\n\nthanks to kestra, they move a full autonomy and reduce the time to market from few days to few hours\n\n\n# go production\n\nafter few month, kestra was confirmed and was deployed to production environnement on may 2020. they also decided to move to enterprise edition of kestra in august 2020 since they need to have fined grained security, role based access control and single sign on.\n\nthe usage grow exponentially over the month and the kind of usage is more and more various : start flow based on file detection from buckets, sync data warehouse directly from operation postgres database, develop simple python program to fetch api from a partner, start long-running data science process over kubernetes, fetch data from google drive and write result back to google sheets, ...\n\nhere is some numbers that show the current usage at january 2022 only for production environment:\n\n * 4 clusters for every environment\n * 200+ users / developers using it\n * 2000+ flows in production\n * 350,000 executions every month\n * 3,000,000 tasks every month\n * 1,500 days of executions every month (yeah, 50 days of executions every single day)\n\n\n# some testimonials\n\nleroy merlin have supported the development of kestra, so as every software, it\'s young age can be frustrated for users. they need to handle some missing features, report some bugs, suffer some time from instability. but what was astounding, the pain is less than the gain, and we have a lots of good report on software internal notation tool, it\'s a solution that users really love and upfold. here is some testimonials:\n\n> tool responds perfectly to the need, very easy to use, it manages all the complexity behind to offer a saving of time and enormous cost.\n\n> kestra is a very easy to use tool with constant improvement in functionality.\n> it covers almost all data pipeline setup needs.\n\n> kestra is very easy to learn, with a large number of functionalities covering a large number of use cases (scheduled workflows, api calls, triggers, flow synchronization, data and file transfers, etc.).\n> the web interface facilitates the monitoring of flows and the consultation of logs.\n> new features are added very regularly, often in response to needs. kestra is evolving rapidly.\n\n> after suffering with airflow to schedule different treatments, kestra\'s arrival was more than saving.\n> the ecosystem of plugins is evolving rapidly and greatly facilitates integration with different bricks, especially on gcp (bq, gcs, cloud sql, etc.)\n> a tool that deserves to be known more.\n\n\n# conclusion\n\nleroy merlin help a lot kestra to grow by supporting his early age, but we really think it was a win-win partnership. kestra is a tool that allow leroy merlin to successes in his cloud migration and to embrace data ops development design.\n\nfrom leroy merlin manager, the true revolution is :\n\n> kestra is the first tool that allow us to develop without installation, used your browser and start build a true business use case in few hours. since the learning curve is easy, you can easily onboard new teammate due to its descriptive language. and moreover, it handles all the part of the data pipeline, the transport, load, transform, data modelization, data quality and monitoring of all our data pipeline. since the tool offer strong role based access & security on the entreprise edition, we are safe to share ir in software as service to all applications allowing also to embrace the data mesh pattern.',charsets:{cjk:!0}},{title:"Introducing Kestra first public release 🎉",frontmatter:{title:"Introducing Kestra first public release :tada:",description:"Today, our team is proud to announce a first public release of Kestra, an open-source platform to orchestrate & schedule any kinds of workflow at scale.",date:"2022-01-10T00:00:00.000Z",layout:"BlogsPost",author:{name:"Ludovic Dehon",image:"ldehon",twitter:"@tchiotludo"},meta:[{property:"article:published_time",content:"2022-01-10T00:00:00.000Z"},{property:"article:modified_time",content:"2022-01-13T21:18:21.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Introducing Kestra first public release 🎉"},{property:"og:description",content:"Today, our team is proud to announce a first public release of Kestra, an open-source platform to orchestrate & schedule any kinds of workflow at scale. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"article"},{property:"og:url",content:"https://kestra.io/blogs/2022-01-10-kestra-opensource.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Introducing Kestra first public release 🎉"},{name:"twitter:description",content:"Today, our team is proud to announce a first public release of Kestra, an open-source platform to orchestrate & schedule any kinds of workflow at scale. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/blogs/2022-01-10-kestra-opensource.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Ludovic Dehon"},{name:"twitter:creator",content:"@tchiotludo"}]},regularPath:"/blogs/2022-01-10-kestra-opensource.html",relativePath:"blogs/2022-01-10-kestra-opensource.md",key:"v-7f3b5936",path:"/blogs/2022-01-10-kestra-opensource.html",headers:[{level:2,title:"What is Kestra?",slug:"what-is-kestra",normalizedTitle:"what is kestra?",charIndex:157},{level:2,title:"The history of Kestra!",slug:"the-history-of-kestra",normalizedTitle:"the history of kestra!",charIndex:775},{level:2,title:"Kestra is Open Source!",slug:"kestra-is-open-source",normalizedTitle:"kestra is open source!",charIndex:2691},{level:2,title:"Kestra plugins are also Open Source!",slug:"kestra-plugins-are-also-open-source",normalizedTitle:"kestra plugins are also open source!",charIndex:3981},{level:2,title:"First public release but Production Ready!",slug:"first-public-release-but-production-ready",normalizedTitle:"first public release but production ready!",charIndex:5503}],lastUpdated:"1/13/2022, 9:18:21 PM",lastUpdatedTimestamp:1642108701e3,headersStr:"What is Kestra? The history of Kestra! Kestra is Open Source! Kestra plugins are also Open Source! First public release but Production Ready!",content:"Today, our team is proud to announce a first public release of Kestra, an open-source platform to orchestrate & schedule any kinds of workflow at scale.\n\n\n# What is Kestra?\n\nKestra is :\n\n * an orchestrator: Build complex pipeline in couple of minutes.\n * a scheduler: Launch your flows whatever is your need!\n * a rich ui: create, run & monitors all your flows with a realtime user interface.\n * a data orchestrator: With his many plugins, build your data orchestration directly.\n * cloud native & scalable: Scale to millions of executions without the pain.\n * an all-in-one platform: No need to use many tools to deliver a complete pipeline.\n * a pluggable platform: with a lots of plugins or build your own.\n\nAs you understand, Kestra will handle all yours pipelines !\n\n\n# The history of Kestra!\n\nKestra started in 2019 with this initial commit. At this time, Kestra was a proof of concept only.\n\nIn order to have a little background, I worked for Leroy Merlin as consultant. We needed to find to build a new dataplatform from scratch and cloud based (destination: Google Cloud Platform mostly). We tried a lot of things and failed with some. The biggest failed was the orchestration software that we tried to deliver with Apache Airflow: a lot of instability (tasks that failed only due to airflow scheduler), performance issue (unable to handle a light workload), and a lot of lack of features (scaling, data processing, ...). After many tests (Google Composer, Open source Airflow on Kubernetes, ...), the decision was acted : Airflow was rejected by Leroy Merlin.\n\nI do some research on the orchestrator ecosystem, most are proprietary & license based (far from my mindset), some are open source (at this time, only Apache Airflow to be exact seems to be active and is rejected). Really surprised of this discovery and some challenge from a co-worker :\n\n> If you think Airflow is bad, do better!\n\nIt was decided, I'll do a proof of concept. It took a lot of time to build this kind of software, and the task seems to be never-ending, but I continue to work on it during months :\n\n * Choosing Kafka as database & queue\n * Implement a storage for task processing\n * Choosing ElasticSearch as repository for UI\n * Add some dynamic templating with HandleBar and changing it later to Peeble\n * Start some Google Cloud plugins\n * Introduce the UI build with Vue.js\n\nAnd so on !\n\nDuring the last 30 months, I built a lot of features, a lot of plugins, lots of bug fix, mostly the night (still working as full time consultant for Leroy Merlin). It took a lot of efforts, investments and a lot of time that I could have spent with my family.\n\nBut now, We are really proud of the work done!\n\n\n# Kestra is Open Source!\n\nI'm a true guys of open source. As an architect, I almost choose Open Source solution for my last 20 years in IT. I started as a consumer of open source (using without any contributions like most of the users). It's time now to give by myself with a permissive Apache License.\n\nI also started more than 3 years ago also another Open source project AKHQ with the same license. Dealing with this project that have a lot of success and adoption help me to learn how to build a community around a project. I've also learnt that open source don't pay yours bills. Even if AKHQ ask me a lot of invest, Kestra ask me lot's more and will need more in the future! Based on this conclusion, you need to find a proper way to be able to continue the work on this project, so we decided to create a company around Kestra in order to fund and support the open source software.\n\nThe Open Source license is not limited and allow you to install and run it as you want on your server on premise or your cloud. And we have also built on Enterprise Edition that will fill the gap for the company brings security and productivity around your Kestra clusters. We also plan to deliver Kestra as Software as Service in a near future. Want more information, don't hesitate to contact us\n\n\n# Kestra plugins are also Open Source!\n\nAs we know, the real challenge are also the connectors (what we call plugins) in order to have a deep integrations with all the tools/database you are using. Most orchestrators (even proprietary and licensed based) only talk bash or cmd. You have to deal all your need with simple command often leading to use another tools to have access to underlying resource (like talend, ...). With Kestra, we want to have a deep integration with your tools and let bash task only the edge case a plugin can't cover.\n\nAn example for a query to Google BigQuery:\n\n> with Bash\n\nDATE=$(date --iso-8601=seconds)\nbq --format=json query 'SELECT name FROM \\`project.dataset.table\\` WHERE shippedDate=${DATE} AND shippedCountry = \\'FR\\'' > /tmp/query.json\njq -r '.name' /tmp/query.json\n\n\n> with Kestra\n\n- id: query\n  type: io.kestra.plugin.gcp.bigquery.Query\n  fetchOne: true\n  sql: |\n    SELECT name\n    FROM `kestra-prd.demo.salesOrder` AS s\n    WHERE shippedDate = '{{ now() }}'\n    AND shippedCountry = 'FR'\n- id: \"return\"\n  type: \"io.kestra.core.tasks.debugs.Return\"\n  format: \"{{ outputs.query.row.name }}\"\n\n\nKestra avoid all the burden (installing the software on the system, handle dependencies and conflict, python version, ...) and just install a plugin (a simple jar) and speak directly with your database.\n\nWe already have lots of plugins and you can easily develop yours. We also hope that a community will help us to maintain new plugins / connectors. contact us if you need some help;.\n\n\n# First public release but Production Ready!\n\nFirst public release don't mean that Kestra is not production ready. In fact, it was used in production since August 2020 at Leroy Merlin, take a deeper look at the case study if you want, but if you prefer few numbers :\n\n * 4 clusters for every environment\n * 200+ users / developers using it\n * 2000+ flows in production\n * 350,000 executions every month\n * 3,000,000 tasks every month\n * 1,500 days of executions every month (yeah, 50 days of executions every single day)\n\nSo your next question is : why are you waiting so long for the first public release ?\n\nThe answer is simple, we want to deliver the first impression as best as possible and this lead to a lot of works: missing features, missing plugins, new ui design, polish of documentation and website ... And now we are proud enough to show the world our work.\n\nThe road is not finish, we have still a lot to do, stay tuned for the roadmap !",normalizedContent:"today, our team is proud to announce a first public release of kestra, an open-source platform to orchestrate & schedule any kinds of workflow at scale.\n\n\n# what is kestra?\n\nkestra is :\n\n * an orchestrator: build complex pipeline in couple of minutes.\n * a scheduler: launch your flows whatever is your need!\n * a rich ui: create, run & monitors all your flows with a realtime user interface.\n * a data orchestrator: with his many plugins, build your data orchestration directly.\n * cloud native & scalable: scale to millions of executions without the pain.\n * an all-in-one platform: no need to use many tools to deliver a complete pipeline.\n * a pluggable platform: with a lots of plugins or build your own.\n\nas you understand, kestra will handle all yours pipelines !\n\n\n# the history of kestra!\n\nkestra started in 2019 with this initial commit. at this time, kestra was a proof of concept only.\n\nin order to have a little background, i worked for leroy merlin as consultant. we needed to find to build a new dataplatform from scratch and cloud based (destination: google cloud platform mostly). we tried a lot of things and failed with some. the biggest failed was the orchestration software that we tried to deliver with apache airflow: a lot of instability (tasks that failed only due to airflow scheduler), performance issue (unable to handle a light workload), and a lot of lack of features (scaling, data processing, ...). after many tests (google composer, open source airflow on kubernetes, ...), the decision was acted : airflow was rejected by leroy merlin.\n\ni do some research on the orchestrator ecosystem, most are proprietary & license based (far from my mindset), some are open source (at this time, only apache airflow to be exact seems to be active and is rejected). really surprised of this discovery and some challenge from a co-worker :\n\n> if you think airflow is bad, do better!\n\nit was decided, i'll do a proof of concept. it took a lot of time to build this kind of software, and the task seems to be never-ending, but i continue to work on it during months :\n\n * choosing kafka as database & queue\n * implement a storage for task processing\n * choosing elasticsearch as repository for ui\n * add some dynamic templating with handlebar and changing it later to peeble\n * start some google cloud plugins\n * introduce the ui build with vue.js\n\nand so on !\n\nduring the last 30 months, i built a lot of features, a lot of plugins, lots of bug fix, mostly the night (still working as full time consultant for leroy merlin). it took a lot of efforts, investments and a lot of time that i could have spent with my family.\n\nbut now, we are really proud of the work done!\n\n\n# kestra is open source!\n\ni'm a true guys of open source. as an architect, i almost choose open source solution for my last 20 years in it. i started as a consumer of open source (using without any contributions like most of the users). it's time now to give by myself with a permissive apache license.\n\ni also started more than 3 years ago also another open source project akhq with the same license. dealing with this project that have a lot of success and adoption help me to learn how to build a community around a project. i've also learnt that open source don't pay yours bills. even if akhq ask me a lot of invest, kestra ask me lot's more and will need more in the future! based on this conclusion, you need to find a proper way to be able to continue the work on this project, so we decided to create a company around kestra in order to fund and support the open source software.\n\nthe open source license is not limited and allow you to install and run it as you want on your server on premise or your cloud. and we have also built on enterprise edition that will fill the gap for the company brings security and productivity around your kestra clusters. we also plan to deliver kestra as software as service in a near future. want more information, don't hesitate to contact us\n\n\n# kestra plugins are also open source!\n\nas we know, the real challenge are also the connectors (what we call plugins) in order to have a deep integrations with all the tools/database you are using. most orchestrators (even proprietary and licensed based) only talk bash or cmd. you have to deal all your need with simple command often leading to use another tools to have access to underlying resource (like talend, ...). with kestra, we want to have a deep integration with your tools and let bash task only the edge case a plugin can't cover.\n\nan example for a query to google bigquery:\n\n> with bash\n\ndate=$(date --iso-8601=seconds)\nbq --format=json query 'select name from \\`project.dataset.table\\` where shippeddate=${date} and shippedcountry = \\'fr\\'' > /tmp/query.json\njq -r '.name' /tmp/query.json\n\n\n> with kestra\n\n- id: query\n  type: io.kestra.plugin.gcp.bigquery.query\n  fetchone: true\n  sql: |\n    select name\n    from `kestra-prd.demo.salesorder` as s\n    where shippeddate = '{{ now() }}'\n    and shippedcountry = 'fr'\n- id: \"return\"\n  type: \"io.kestra.core.tasks.debugs.return\"\n  format: \"{{ outputs.query.row.name }}\"\n\n\nkestra avoid all the burden (installing the software on the system, handle dependencies and conflict, python version, ...) and just install a plugin (a simple jar) and speak directly with your database.\n\nwe already have lots of plugins and you can easily develop yours. we also hope that a community will help us to maintain new plugins / connectors. contact us if you need some help;.\n\n\n# first public release but production ready!\n\nfirst public release don't mean that kestra is not production ready. in fact, it was used in production since august 2020 at leroy merlin, take a deeper look at the case study if you want, but if you prefer few numbers :\n\n * 4 clusters for every environment\n * 200+ users / developers using it\n * 2000+ flows in production\n * 350,000 executions every month\n * 3,000,000 tasks every month\n * 1,500 days of executions every month (yeah, 50 days of executions every single day)\n\nso your next question is : why are you waiting so long for the first public release ?\n\nthe answer is simple, we want to deliver the first impression as best as possible and this lead to a lot of works: missing features, missing plugins, new ui design, polish of documentation and website ... and now we are proud enough to show the world our work.\n\nthe road is not finish, we have still a lot to do, stay tuned for the roadmap !",charsets:{cjk:!0}},{title:"Blogs",frontmatter:{title:"Blogs",layout:"BlogsList",meta:[{property:"article:modified_time",content:"2020-12-03T20:59:28.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Blogs"},{property:"og:description",content:"Blogs | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"article"},{property:"og:url",content:"https://kestra.io/blogs/"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Blogs"},{name:"twitter:description",content:"Blogs | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/blogs/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/blogs/",relativePath:"blogs/index.md",key:"v-1af8f4dc",path:"/blogs/",lastUpdated:"12/3/2020, 8:59:28 PM",lastUpdatedTimestamp:1607029168e3,headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"About us",frontmatter:{title:"About us",layout:"CompanyAbout",meta:[{property:"article:modified_time",content:"2021-11-23T08:57:12.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"About us"},{property:"og:description",content:"About us | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/company/about-us.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"About us"},{name:"twitter:description",content:"About us | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/company/about-us.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/company/about-us.html",relativePath:"company/about-us.md",key:"v-79ae536f",path:"/company/about-us.html",lastUpdated:"11/23/2021, 8:57:12 AM",lastUpdatedTimestamp:1637657832e3,headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"Contact us",frontmatter:{title:"Contact us",layout:"CompanyContact",meta:[{property:"article:modified_time",content:"2021-12-14T12:54:53.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Contact us"},{property:"og:description",content:"Contact us | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/company/contact.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Contact us"},{name:"twitter:description",content:"Contact us | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/company/contact.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/company/contact.html",relativePath:"company/contact.md",key:"v-0b50773a",path:"/company/contact.html",lastUpdated:"12/14/2021, 12:54:53 PM",lastUpdatedTimestamp:1639486493e3,headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"Cookie Policy",frontmatter:{title:"Cookie Policy",layout:"CompanyLegals",meta:[{property:"article:modified_time",content:"2022-01-09T20:58:17.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Cookie Policy"},{property:"og:description",content:"Cookie Policy | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/company/cookie-policy.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Cookie Policy"},{name:"twitter:description",content:"Cookie Policy | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/company/cookie-policy.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/company/cookie-policy.html",relativePath:"company/cookie-policy.md",key:"v-135cabfa",path:"/company/cookie-policy.html",headers:[{level:3,title:"Interpretation and Definitions",slug:"interpretation-and-definitions",normalizedTitle:"interpretation and definitions",charIndex:660},{level:3,title:"The use of the Cookies",slug:"the-use-of-the-cookies",normalizedTitle:"the use of the cookies",charIndex:1595},{level:3,title:"Your Choices Regarding Cookies",slug:"your-choices-regarding-cookies",normalizedTitle:"your choices regarding cookies",charIndex:3847},{level:3,title:"Contact Us",slug:"contact-us",normalizedTitle:"contact us",charIndex:5054}],lastUpdated:"1/9/2022, 8:58:17 PM",lastUpdatedTimestamp:1641761897e3,headersStr:"Interpretation and Definitions The use of the Cookies Your Choices Regarding Cookies Contact Us",content:'This Cookies Policy explains what Cookies are and how We use them. You should read this policy so You can understand what type of cookies We use, or the information We collect using Cookies and how that information is used.\n\nCookies do not typically contain any information that personally identifies a user, but personal information that we store about You may be linked to the information stored in and obtained from Cookies. For further information on how We use, store and keep your personal data secure, see our Privacy Policy.\n\nWe do not store sensitive personal information, such as mailing addresses, account passwords, etc. in the Cookies We use.\n\n\n# Interpretation and Definitions\n\n# Interpretation\n\nThe words of which the initial letter is capitalized have meanings defined under the following conditions. The following definitions shall have the same meaning regardless of whether they appear in singular or in plural.\n\n# Definitions\n\nFor the purposes of this Cookies Policy:\n\n * Company (referred to as either "the Company", "We", "Us" or "Our" in this Cookies Policy) refers to Kestra Technologies, 81 RUE DU PRE CATELAN, 59110 LA MADELEINE.\n * Cookies means small files that are placed on Your computer, mobile device or any other device by a website, containing details of your browsing history on that website among its many uses.\n * Website refers to Kestra, accessible from https://kestra.io/\n * You means the individual accessing or using the Website, or a company, or any legal entity on behalf of which such individual is accessing or using the Website, as applicable.\n\n\n# The use of the Cookies\n\n# Type of Cookies We Use\n\nCookies can be "Persistent" or "Session" Cookies. Persistent Cookies remain on your personal computer or mobile device when You go offline, while Session Cookies are deleted as soon as You close your web browser.\n\nWe use both session and persistent Cookies for the purposes set out below:\n\n# Necessary / Essential Cookies\n\n * Type: Session Cookies\n * Administered by: Us\n * Purpose: These Cookies are essential to provide You with services available through the Website and to enable You to use some of its features. They help to authenticate users and prevent fraudulent use of user accounts. Without these Cookies, the services that You have asked for cannot be provided, and We only use these Cookies to provide You with those services.\n\n# Functionality Cookies\n\n * Type: Persistent Cookies\n * Administered by: Us\n * Purpose: These Cookies allow us to remember choices You make when You use the Website, such as remembering your login details or language preference. The purpose of these Cookies is to provide You with a more personal experience and to avoid You having to re-enter your preferences every time You use the Website.\n\n# Third-party cookies on our site\n\nWe may employ third-party companies and individuals on our websites—for example, analytics providers and content partners. We grant these third parties access to selected information to perform specific tasks on our behalf. They may also set third-party cookies in order to deliver the services they are providing. Third-party cookies can be used to track you on other websites that use the same third-party service. As we have no control over third-party cookies, they are not covered by Kestra\'s cookie policy.\n\n# Google Analytics’ Cookies\n\nIn order to collect data on the usage of our website and visits to the website, we use Google Analytics. Google Analytics stores a permanent cookie on your terminal which is subsequently used to register your use of the website. This enables us to get more insight in the way in which the website is used and, based on this information, to make adjustments to the website or the provided services.\n\nWe use Google Analytics IP Anonymization, so we don\'t store any personal information.\n\n\n# Your Choices Regarding Cookies\n\nIf You prefer to avoid the use of Cookies on the Website, first You must disable the use of Cookies in your browser and then delete the Cookies saved in your browser associated with this website. You may use this option for preventing the use of Cookies at any time.\n\nIf You do not accept Our Cookies, You may experience some inconvenience in your use of the Website and some features may not function properly.\n\nIf You\'d like to delete Cookies or instruct your web browser to delete or refuse Cookies, please visit the help pages of your web browser.\n\n * For the Chrome web browser, please visit this page from Google: https://support.google.com/accounts/answer/32050\n * For the Internet Explorer web browser, please visit this page from Microsoft: http://support.microsoft.com/kb/278835\n * For the Firefox web browser, please visit this page from Mozilla: https://support.mozilla.org/en-US/kb/delete-cookies-remove-info-websites-stored\n * For the Safari web browser, please visit this page from Apple: https://support.apple.com/guide/safari/manage-cookies-and-website-data-sfri11471/mac\n * For any other web browser, please visit your web browser\'s official web pages.\n\n\n# Contact Us\n\nIf you have any questions about this Cookies Policy, You can contact us:\n\n * By email: hello@kestra.io',normalizedContent:'this cookies policy explains what cookies are and how we use them. you should read this policy so you can understand what type of cookies we use, or the information we collect using cookies and how that information is used.\n\ncookies do not typically contain any information that personally identifies a user, but personal information that we store about you may be linked to the information stored in and obtained from cookies. for further information on how we use, store and keep your personal data secure, see our privacy policy.\n\nwe do not store sensitive personal information, such as mailing addresses, account passwords, etc. in the cookies we use.\n\n\n# interpretation and definitions\n\n# interpretation\n\nthe words of which the initial letter is capitalized have meanings defined under the following conditions. the following definitions shall have the same meaning regardless of whether they appear in singular or in plural.\n\n# definitions\n\nfor the purposes of this cookies policy:\n\n * company (referred to as either "the company", "we", "us" or "our" in this cookies policy) refers to kestra technologies, 81 rue du pre catelan, 59110 la madeleine.\n * cookies means small files that are placed on your computer, mobile device or any other device by a website, containing details of your browsing history on that website among its many uses.\n * website refers to kestra, accessible from https://kestra.io/\n * you means the individual accessing or using the website, or a company, or any legal entity on behalf of which such individual is accessing or using the website, as applicable.\n\n\n# the use of the cookies\n\n# type of cookies we use\n\ncookies can be "persistent" or "session" cookies. persistent cookies remain on your personal computer or mobile device when you go offline, while session cookies are deleted as soon as you close your web browser.\n\nwe use both session and persistent cookies for the purposes set out below:\n\n# necessary / essential cookies\n\n * type: session cookies\n * administered by: us\n * purpose: these cookies are essential to provide you with services available through the website and to enable you to use some of its features. they help to authenticate users and prevent fraudulent use of user accounts. without these cookies, the services that you have asked for cannot be provided, and we only use these cookies to provide you with those services.\n\n# functionality cookies\n\n * type: persistent cookies\n * administered by: us\n * purpose: these cookies allow us to remember choices you make when you use the website, such as remembering your login details or language preference. the purpose of these cookies is to provide you with a more personal experience and to avoid you having to re-enter your preferences every time you use the website.\n\n# third-party cookies on our site\n\nwe may employ third-party companies and individuals on our websites—for example, analytics providers and content partners. we grant these third parties access to selected information to perform specific tasks on our behalf. they may also set third-party cookies in order to deliver the services they are providing. third-party cookies can be used to track you on other websites that use the same third-party service. as we have no control over third-party cookies, they are not covered by kestra\'s cookie policy.\n\n# google analytics’ cookies\n\nin order to collect data on the usage of our website and visits to the website, we use google analytics. google analytics stores a permanent cookie on your terminal which is subsequently used to register your use of the website. this enables us to get more insight in the way in which the website is used and, based on this information, to make adjustments to the website or the provided services.\n\nwe use google analytics ip anonymization, so we don\'t store any personal information.\n\n\n# your choices regarding cookies\n\nif you prefer to avoid the use of cookies on the website, first you must disable the use of cookies in your browser and then delete the cookies saved in your browser associated with this website. you may use this option for preventing the use of cookies at any time.\n\nif you do not accept our cookies, you may experience some inconvenience in your use of the website and some features may not function properly.\n\nif you\'d like to delete cookies or instruct your web browser to delete or refuse cookies, please visit the help pages of your web browser.\n\n * for the chrome web browser, please visit this page from google: https://support.google.com/accounts/answer/32050\n * for the internet explorer web browser, please visit this page from microsoft: http://support.microsoft.com/kb/278835\n * for the firefox web browser, please visit this page from mozilla: https://support.mozilla.org/en-us/kb/delete-cookies-remove-info-websites-stored\n * for the safari web browser, please visit this page from apple: https://support.apple.com/guide/safari/manage-cookies-and-website-data-sfri11471/mac\n * for any other web browser, please visit your web browser\'s official web pages.\n\n\n# contact us\n\nif you have any questions about this cookies policy, you can contact us:\n\n * by email: hello@kestra.io',charsets:{}},{title:"Privacy Policy",frontmatter:{title:"Privacy Policy",layout:"CompanyLegals",meta:[{property:"article:modified_time",content:"2022-01-09T20:58:17.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Privacy Policy"},{property:"og:description",content:"Privacy Policy | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/company/privacy-policy.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Privacy Policy"},{name:"twitter:description",content:"Privacy Policy | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/company/privacy-policy.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/company/privacy-policy.html",relativePath:"company/privacy-policy.md",key:"v-f3216c06",path:"/company/privacy-policy.html",headers:[{level:3,title:"Consent",slug:"consent",normalizedTitle:"consent",charIndex:713},{level:3,title:"Information we collect",slug:"information-we-collect",normalizedTitle:"information we collect",charIndex:813},{level:3,title:"How we use your information",slug:"how-we-use-your-information",normalizedTitle:"how we use your information",charIndex:1442},{level:3,title:"Log Files",slug:"log-files",normalizedTitle:"log files",charIndex:2016},{level:3,title:"Cookies and Web Beacons",slug:"cookies-and-web-beacons",normalizedTitle:"cookies and web beacons",charIndex:2650},{level:3,title:"Advertising Partners Privacy Policies",slug:"advertising-partners-privacy-policies",normalizedTitle:"advertising partners privacy policies",charIndex:3132},{level:3,title:"Third Party Privacy Policies",slug:"third-party-privacy-policies",normalizedTitle:"third party privacy policies",charIndex:3842},{level:3,title:"CCPA Privacy Rights (Do Not Sell My Personal Information)",slug:"ccpa-privacy-rights-do-not-sell-my-personal-information",normalizedTitle:"ccpa privacy rights (do not sell my personal information)",charIndex:4386},{level:3,title:"General Data Protection Regulation (GDPR)",slug:"general-data-protection-regulation-gdpr",normalizedTitle:"general data protection regulation (gdpr)",charIndex:5040},{level:3,title:"Children's Information",slug:"children-s-information",normalizedTitle:"children's information",charIndex:6448}],lastUpdated:"1/9/2022, 8:58:17 PM",lastUpdatedTimestamp:1641761897e3,headersStr:"Consent Information we collect How we use your information Log Files Cookies and Web Beacons Advertising Partners Privacy Policies Third Party Privacy Policies CCPA Privacy Rights (Do Not Sell My Personal Information) General Data Protection Regulation (GDPR) Children's Information",content:"At Kestra, accessible from https://kestra.io, one of our main priorities is the privacy of our visitors. This Privacy Policy document contains types of information that is collected and recorded by Kestra and how we use it.\n\nIf you have additional questions or require more information about our Privacy Policy, do not hesitate to contact us.\n\nThis Privacy Policy applies only to our online activities and is valid for visitors to our website with regards to the information that they shared and/or collect in Kestra. This policy is not applicable to any information collected offline or via channels other than this website. Our Privacy Policy was created with the help of the Free Privacy Policy Generator.\n\n\n# Consent\n\nBy using our website, you hereby consent to our Privacy Policy and agree to its terms.\n\n\n# Information we collect\n\nThe personal information that you are asked to provide, and the reasons why you are asked to provide it, will be made clear to you at the point we ask you to provide your personal information.\n\nIf you contact us directly, we may receive additional information about you such as your name, email address, phone number, the contents of the message and/or attachments you may send us, and any other information you may choose to provide.\n\nWhen you register for an Account, we may ask for your contact information, including items such as name, company name, address, email address, and telephone number.\n\n\n# How we use your information\n\nWe use the information we collect in various ways, including to:\n\n * Provide, operate, and maintain our website\n * Improve, personalize, and expand our website\n * Understand and analyze how you use our website\n * Develop new products, services, features, and functionality\n * Communicate with you, either directly or through one of our partners, including for customer service, to provide you with updates and other information relating to the website, and for marketing and promotional purposes\n * Send you emails\n * Find and prevent fraud\n\n\n# Log Files\n\nKestra follows a standard procedure of using log files. These files log visitors when they visit websites. All hosting companies do this and a part of hosting services' analytics. The information collected by log files include internet protocol (IP) addresses, browser type, Internet Service Provider (ISP), date and time stamp, referring/exit pages, and possibly the number of clicks. These are not linked to any information that is personally identifiable. The purpose of the information is for analyzing trends, administering the site, tracking users' movement on the website, and gathering demographic information.\n\n\n# Cookies and Web Beacons\n\nLike any other website, Kestra uses 'cookies'. These cookies are used to store information including visitors' preferences, and the pages on the website that the visitor accessed or visited. The information is used to optimize the users' experience by customizing our web page content based on visitors' browser type and/or other information.\n\nFor more general information on cookies, please read the Cookies article on Generate Privacy Policy website.\n\n\n# Advertising Partners Privacy Policies\n\nYou may consult this list to find the Privacy Policy for each of the advertising partners of Kestra.\n\nThird-party ad servers or ad networks uses technologies like cookies, JavaScript, or Web Beacons that are used in their respective advertisements and links that appear on Kestra, which are sent directly to users' browser. They automatically receive your IP address when this occurs. These technologies are used to measure the effectiveness of their advertising campaigns and/or to personalize the advertising content that you see on websites that you visit.\n\nNote that Kestra has no access to or control over these cookies that are used by third-party advertisers.\n\n\n# Third Party Privacy Policies\n\nKestra's Privacy Policy does not apply to other advertisers or websites. Thus, we are advising you to consult the respective Privacy Policies of these third-party ad servers for more detailed information. It may include their practices and instructions about how to opt-out of certain options.\n\nYou can choose to disable cookies through your individual browser options. To know more detailed information about cookie management with specific web browsers, it can be found at the browsers' respective websites.\n\n\n# CCPA Privacy Rights (Do Not Sell My Personal Information)\n\nUnder the CCPA, among other rights, California consumers have the right to:\n\n * Request that a business that collects a consumer's personal data disclose the categories and specific pieces of personal data that a business has collected about consumers.\n * Request that a business delete any personal data about the consumer that a business has collected.\n * Request that a business that sells a consumer's personal data, not sell the consumer's personal data.\n\nIf you make a request, we have one month to respond to you. If you would like to exercise any of these rights, please contact us.\n\n\n# General Data Protection Regulation (GDPR)\n\nWe are a Data Controller of your information.\n\nKestra Technologies legal basis for collecting and using the personal information described in this Privacy Policy depends on the Personal Information we collect and the specific context in which we collect the information:\n\n * Kestra Technologies needs to perform a contract with you\n * You have given Kestra Technologies permission to do so\n * Processing your personal information is in Kestra Technologies legitimate interests\n * Kestra Technologies needs to comply with the law\n * Kestra Technologies will retain your personal information only for as long as is necessary for the purposes set out in this Privacy Policy. We will retain and use your information to the extent necessary to comply with our legal obligations, resolve disputes, and enforce our policies.\n\nIf you are a resident of the European Economic Area (EEA), you have certain data protection rights. If you wish to be informed what Personal Information we hold about you and if you want it to be removed from our systems, please contact us.\n\nIn certain circumstances, you have the following data protection rights:\n\n * The right to access, update or to delete the information we have on you.\n * The right of rectification.\n * The right to object.\n * The right of restriction.\n * The right to data portability\n * The right to withdraw consent\n\n\n# Children's Information\n\nAnother part of our priority is adding protection for children while using the internet. We encourage parents and guardians to observe, participate in, and/or monitor and guide their online activity.\n\nKestra does not knowingly collect any Personal Identifiable Information from children under the age of 13. If you think that your child provided this kind of information on our website, we strongly encourage you to contact us immediately and we will do our best efforts to promptly remove such information from our records",normalizedContent:"at kestra, accessible from https://kestra.io, one of our main priorities is the privacy of our visitors. this privacy policy document contains types of information that is collected and recorded by kestra and how we use it.\n\nif you have additional questions or require more information about our privacy policy, do not hesitate to contact us.\n\nthis privacy policy applies only to our online activities and is valid for visitors to our website with regards to the information that they shared and/or collect in kestra. this policy is not applicable to any information collected offline or via channels other than this website. our privacy policy was created with the help of the free privacy policy generator.\n\n\n# consent\n\nby using our website, you hereby consent to our privacy policy and agree to its terms.\n\n\n# information we collect\n\nthe personal information that you are asked to provide, and the reasons why you are asked to provide it, will be made clear to you at the point we ask you to provide your personal information.\n\nif you contact us directly, we may receive additional information about you such as your name, email address, phone number, the contents of the message and/or attachments you may send us, and any other information you may choose to provide.\n\nwhen you register for an account, we may ask for your contact information, including items such as name, company name, address, email address, and telephone number.\n\n\n# how we use your information\n\nwe use the information we collect in various ways, including to:\n\n * provide, operate, and maintain our website\n * improve, personalize, and expand our website\n * understand and analyze how you use our website\n * develop new products, services, features, and functionality\n * communicate with you, either directly or through one of our partners, including for customer service, to provide you with updates and other information relating to the website, and for marketing and promotional purposes\n * send you emails\n * find and prevent fraud\n\n\n# log files\n\nkestra follows a standard procedure of using log files. these files log visitors when they visit websites. all hosting companies do this and a part of hosting services' analytics. the information collected by log files include internet protocol (ip) addresses, browser type, internet service provider (isp), date and time stamp, referring/exit pages, and possibly the number of clicks. these are not linked to any information that is personally identifiable. the purpose of the information is for analyzing trends, administering the site, tracking users' movement on the website, and gathering demographic information.\n\n\n# cookies and web beacons\n\nlike any other website, kestra uses 'cookies'. these cookies are used to store information including visitors' preferences, and the pages on the website that the visitor accessed or visited. the information is used to optimize the users' experience by customizing our web page content based on visitors' browser type and/or other information.\n\nfor more general information on cookies, please read the cookies article on generate privacy policy website.\n\n\n# advertising partners privacy policies\n\nyou may consult this list to find the privacy policy for each of the advertising partners of kestra.\n\nthird-party ad servers or ad networks uses technologies like cookies, javascript, or web beacons that are used in their respective advertisements and links that appear on kestra, which are sent directly to users' browser. they automatically receive your ip address when this occurs. these technologies are used to measure the effectiveness of their advertising campaigns and/or to personalize the advertising content that you see on websites that you visit.\n\nnote that kestra has no access to or control over these cookies that are used by third-party advertisers.\n\n\n# third party privacy policies\n\nkestra's privacy policy does not apply to other advertisers or websites. thus, we are advising you to consult the respective privacy policies of these third-party ad servers for more detailed information. it may include their practices and instructions about how to opt-out of certain options.\n\nyou can choose to disable cookies through your individual browser options. to know more detailed information about cookie management with specific web browsers, it can be found at the browsers' respective websites.\n\n\n# ccpa privacy rights (do not sell my personal information)\n\nunder the ccpa, among other rights, california consumers have the right to:\n\n * request that a business that collects a consumer's personal data disclose the categories and specific pieces of personal data that a business has collected about consumers.\n * request that a business delete any personal data about the consumer that a business has collected.\n * request that a business that sells a consumer's personal data, not sell the consumer's personal data.\n\nif you make a request, we have one month to respond to you. if you would like to exercise any of these rights, please contact us.\n\n\n# general data protection regulation (gdpr)\n\nwe are a data controller of your information.\n\nkestra technologies legal basis for collecting and using the personal information described in this privacy policy depends on the personal information we collect and the specific context in which we collect the information:\n\n * kestra technologies needs to perform a contract with you\n * you have given kestra technologies permission to do so\n * processing your personal information is in kestra technologies legitimate interests\n * kestra technologies needs to comply with the law\n * kestra technologies will retain your personal information only for as long as is necessary for the purposes set out in this privacy policy. we will retain and use your information to the extent necessary to comply with our legal obligations, resolve disputes, and enforce our policies.\n\nif you are a resident of the european economic area (eea), you have certain data protection rights. if you wish to be informed what personal information we hold about you and if you want it to be removed from our systems, please contact us.\n\nin certain circumstances, you have the following data protection rights:\n\n * the right to access, update or to delete the information we have on you.\n * the right of rectification.\n * the right to object.\n * the right of restriction.\n * the right to data portability\n * the right to withdraw consent\n\n\n# children's information\n\nanother part of our priority is adding protection for children while using the internet. we encourage parents and guardians to observe, participate in, and/or monitor and guide their online activity.\n\nkestra does not knowingly collect any personal identifiable information from children under the age of 13. if you think that your child provided this kind of information on our website, we strongly encourage you to contact us immediately and we will do our best efforts to promptly remove such information from our records",charsets:{}},{title:"What’s Kestra?",frontmatter:{order:0,meta:[{property:"article:modified_time",content:"2021-11-19T08:25:55.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"What’s Kestra?"},{property:"og:description",content:"What’s Kestra? | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"What’s Kestra?"},{name:"twitter:description",content:"What’s Kestra? | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/",relativePath:"docs/README.md",key:"v-24306408",path:"/docs/",headers:[{level:2,title:"Principles",slug:"principles",normalizedTitle:"principles",charIndex:456},{level:2,title:"Usages",slug:"usages",normalizedTitle:"usages",charIndex:1220}],lastUpdated:"11/19/2021, 8:25:55 AM",lastUpdatedTimestamp:1637310355e3,headersStr:"Principles Usages",content:"# What’s Kestra?\n\nKestra is an orchestration & scheduler platform that helps you to build, run, schedule, and monitor complex pipelines.\n\n\n\nYou just need to develop some flow in yaml and let Kestra do all the others complex things for you :\n\n * Deploying\n * Scaling\n * Monitoring\n * Handling errors\n * ...\n\n> Simply define the flow with a simple succession of tasks, decide when and how the flow should be launched, and monitor execution in real time.\n\n\n# Principles\n\n * Simple: Kestra workflow are defined as yaml, no code here, just a simple declarative syntax allowing even complex workflow.\n * Extensible: All the foundation of Kestra is built upon plugins, found one or build your own to fit your business needs.\n * Real time: Kestra is built by thinking in real time, just create a flow, run it & see all the logs in realtime\n * Scalable: Kestra has started to enjoy infinitely scale, build with top technologies like Kafka & Elasticsearch, scale to millions of executions without the pain.\n * Cloud Native: Build with cloud in mind, with top cloud native technology and deploy everywhere in cloud or on premise.\n * Open source: Kestra is built with Apache 2 license, contribute on core or plugins as you can.\n\n\n# Usages\n\nKestra can be used as:\n\n * Data orchestrator: handle complex workflow. Moving large dataset, transform it and load it (ETL or ELT).\n * Distributed crontab: schedule work on multiples workers and monitor all these process.\n * Events Driven workflow: react to external events like api call to get things done instantly.\n * ...\n\nNow Getting started and happy flows !",normalizedContent:"# what’s kestra?\n\nkestra is an orchestration & scheduler platform that helps you to build, run, schedule, and monitor complex pipelines.\n\n\n\nyou just need to develop some flow in yaml and let kestra do all the others complex things for you :\n\n * deploying\n * scaling\n * monitoring\n * handling errors\n * ...\n\n> simply define the flow with a simple succession of tasks, decide when and how the flow should be launched, and monitor execution in real time.\n\n\n# principles\n\n * simple: kestra workflow are defined as yaml, no code here, just a simple declarative syntax allowing even complex workflow.\n * extensible: all the foundation of kestra is built upon plugins, found one or build your own to fit your business needs.\n * real time: kestra is built by thinking in real time, just create a flow, run it & see all the logs in realtime\n * scalable: kestra has started to enjoy infinitely scale, build with top technologies like kafka & elasticsearch, scale to millions of executions without the pain.\n * cloud native: build with cloud in mind, with top cloud native technology and deploy everywhere in cloud or on premise.\n * open source: kestra is built with apache 2 license, contribute on core or plugins as you can.\n\n\n# usages\n\nkestra can be used as:\n\n * data orchestrator: handle complex workflow. moving large dataset, transform it and load it (etl or elt).\n * distributed crontab: schedule work on multiples workers and monitor all these process.\n * events driven workflow: react to external events like api call to get things done instantly.\n * ...\n\nnow getting started and happy flows !",charsets:{}},{title:"Administrator Guide",frontmatter:{order:5,meta:[{property:"article:modified_time",content:"2020-11-09T20:39:04.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Administrator Guide"},{property:"og:description",content:"Administrator Guide | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/administrator-guide/"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Administrator Guide"},{name:"twitter:description",content:"Administrator Guide | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/administrator-guide/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/administrator-guide/",relativePath:"docs/administrator-guide/README.md",key:"v-04b425b0",path:"/docs/administrator-guide/",lastUpdated:"11/9/2020, 8:39:04 PM",lastUpdatedTimestamp:1604954344e3,headersStr:null,content:"# Administrator Guide\n\nHere, you will find the necessary information in order to deploy & configure your Kestra cluster.\n\nMore information :",normalizedContent:"# administrator guide\n\nhere, you will find the necessary information in order to deploy & configure your kestra cluster.\n\nmore information :",charsets:{}},{title:"Configuration",frontmatter:{order:3,meta:[{property:"article:modified_time",content:"2020-11-08T20:01:13.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Configuration"},{property:"og:description",content:"Configuration | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/administrator-guide/configuration/"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Configuration"},{name:"twitter:description",content:"Configuration | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/administrator-guide/configuration/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/administrator-guide/configuration/",relativePath:"docs/administrator-guide/configuration/README.md",key:"v-c4be06f0",path:"/docs/administrator-guide/configuration/",headers:[{level:2,title:"Kestra configuration",slug:"kestra-configuration",normalizedTitle:"kestra configuration",charIndex:99},{level:3,title:"Kafka configuration",slug:"kafka-configuration",normalizedTitle:"kafka configuration",charIndex:206},{level:3,title:"ElasticSearch configuration",slug:"elasticsearch-configuration",normalizedTitle:"elasticsearch configuration",charIndex:378},{level:3,title:"Storage configuration",slug:"storage-configuration",normalizedTitle:"storage configuration",charIndex:592},{level:3,title:"Others Kestra configuration",slug:"others-kestra-configuration",normalizedTitle:"others kestra configuration",charIndex:922},{level:3,title:"Micronaut configuration",slug:"micronaut-configuration",normalizedTitle:"micronaut configuration",charIndex:1002}],lastUpdated:"11/8/2020, 8:01:13 PM",lastUpdatedTimestamp:1604865673e3,headersStr:"Kestra configuration Kafka configuration ElasticSearch configuration Storage configuration Others Kestra configuration Micronaut configuration",content:"# Configuration\n\nKestra have a lot of configuration in orders to customize the way you use it.\n\n\n# Kestra configuration\n\nFirst things, you will need to configure the queue type and the repository type.\n\n\n# Kafka configuration\n\nTo enable Kafka Queue, we need add this to your configuration files:\n\nkestra:\n  queue:\n    type: kafka\n\n\nDetails about Kafka configuration is here\n\n\n# ElasticSearch configuration\n\nTo enable ElasticSearch Repository, we need add this to your configuration files:\n\nkestra:\n  repository:\n    type: elasticsearch\n\n\nDetails about ElasticSearch configuration is here\n\n\n# Storage configuration\n\nKestra support multiple storage, the default one a local storage (only for local testing)\nTo choose the storage type, you will need to add this to your configuration files and be sure to download the corresponding plugins.\n\nkestra:\n  storage:\n    type: gcs\n\n\nDetails about Storage configuration is here\n\n\n# Others Kestra configuration\n\nOthers Kestra configurations can be found here\n\n\n# Micronaut configuration\n\nSince Kestra is a Java app based on micronaut, you can configure to fit your need, more details here",normalizedContent:"# configuration\n\nkestra have a lot of configuration in orders to customize the way you use it.\n\n\n# kestra configuration\n\nfirst things, you will need to configure the queue type and the repository type.\n\n\n# kafka configuration\n\nto enable kafka queue, we need add this to your configuration files:\n\nkestra:\n  queue:\n    type: kafka\n\n\ndetails about kafka configuration is here\n\n\n# elasticsearch configuration\n\nto enable elasticsearch repository, we need add this to your configuration files:\n\nkestra:\n  repository:\n    type: elasticsearch\n\n\ndetails about elasticsearch configuration is here\n\n\n# storage configuration\n\nkestra support multiple storage, the default one a local storage (only for local testing)\nto choose the storage type, you will need to add this to your configuration files and be sure to download the corresponding plugins.\n\nkestra:\n  storage:\n    type: gcs\n\n\ndetails about storage configuration is here\n\n\n# others kestra configuration\n\nothers kestra configurations can be found here\n\n\n# micronaut configuration\n\nsince kestra is a java app based on micronaut, you can configure to fit your need, more details here",charsets:{}},{title:"ElasticSearch configuration",frontmatter:{order:2,meta:[{property:"article:modified_time",content:"2021-12-02T09:55:45.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"ElasticSearch configuration"},{property:"og:description",content:"ElasticSearch configuration | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/administrator-guide/configuration/elasticsearch/"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"ElasticSearch configuration"},{name:"twitter:description",content:"ElasticSearch configuration | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/administrator-guide/configuration/elasticsearch/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/administrator-guide/configuration/elasticsearch/",relativePath:"docs/administrator-guide/configuration/elasticsearch/README.md",key:"v-6e805448",path:"/docs/administrator-guide/configuration/elasticsearch/",headers:[{level:2,title:"kestra.elasticsearch.client.trust-all-ssl",slug:"kestra-elasticsearch-client-trust-all-ssl",normalizedTitle:"kestra.elasticsearch.client.trust-all-ssl",charIndex:534},{level:2,title:"kestra.elasticsearch.defaults.indice-prefix",slug:"kestra-elasticsearch-defaults-indice-prefix",normalizedTitle:"kestra.elasticsearch.defaults.indice-prefix",charIndex:843}],lastUpdated:"12/2/2021, 9:55:45 AM",lastUpdatedTimestamp:1638438945e3,headersStr:"kestra.elasticsearch.client.trust-all-ssl kestra.elasticsearch.defaults.indice-prefix",content:'# ElasticSearch configuration\n\nMost important configuration is to configure the way Kestra connect to ElasticSearch cluster.\n\nHere is a minimal configuration example :\n\nkestra:\n  elasticsearch:\n    client:\n      http-hosts: http://localhost:9200\n  repository:\n    type: elasticsearch\n\n\nHere is another example with a secure ElasticSearch cluster with basic auth\n\nkestra:\n  elasticsearch:\n    client:\n      http-hosts: "https://localhost:9200"\n      basic-auth:\n        username: "<your-user>"\n        password: "<your-password>"\n\n\n\n# kestra.elasticsearch.client.trust-all-ssl\n\nDefault false, if you enable this options, we trust all certificate during connection. Useful mostly for development server with self signed certificate.\n\nkestra:\n  elasticsearch:\n    client:\n      http-hosts: "https://localhost:9200"\n      trust-all-ssl: true\n\n\n\n# kestra.elasticsearch.defaults.indice-prefix\n\nThis configuration allow you to change the indices prefix. By default, the prefix will be kestra_.\n\nFor example, if you want to share a common Kafka cluster for the multiple instance of Kestra, just add another prefix like this :\n\nkestra:\n  elasticsearch:\n    defaults:\n      topic-prefix: "uat_kestra"\n',normalizedContent:'# elasticsearch configuration\n\nmost important configuration is to configure the way kestra connect to elasticsearch cluster.\n\nhere is a minimal configuration example :\n\nkestra:\n  elasticsearch:\n    client:\n      http-hosts: http://localhost:9200\n  repository:\n    type: elasticsearch\n\n\nhere is another example with a secure elasticsearch cluster with basic auth\n\nkestra:\n  elasticsearch:\n    client:\n      http-hosts: "https://localhost:9200"\n      basic-auth:\n        username: "<your-user>"\n        password: "<your-password>"\n\n\n\n# kestra.elasticsearch.client.trust-all-ssl\n\ndefault false, if you enable this options, we trust all certificate during connection. useful mostly for development server with self signed certificate.\n\nkestra:\n  elasticsearch:\n    client:\n      http-hosts: "https://localhost:9200"\n      trust-all-ssl: true\n\n\n\n# kestra.elasticsearch.defaults.indice-prefix\n\nthis configuration allow you to change the indices prefix. by default, the prefix will be kestra_.\n\nfor example, if you want to share a common kafka cluster for the multiple instance of kestra, just add another prefix like this :\n\nkestra:\n  elasticsearch:\n    defaults:\n      topic-prefix: "uat_kestra"\n',charsets:{}},{title:"Kestra Entreprise Edition",frontmatter:{order:4,meta:[{property:"article:modified_time",content:"2022-01-12T07:23:43.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Kestra Entreprise Edition"},{property:"og:description",content:"Kestra Entreprise Edition | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/administrator-guide/configuration/entreprise-edition/"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Kestra Entreprise Edition"},{name:"twitter:description",content:"Kestra Entreprise Edition | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/administrator-guide/configuration/entreprise-edition/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/administrator-guide/configuration/entreprise-edition/",relativePath:"docs/administrator-guide/configuration/entreprise-edition/README.md",key:"v-46e6e13e",path:"/docs/administrator-guide/configuration/entreprise-edition/",lastUpdated:"1/12/2022, 7:23:43 AM",lastUpdatedTimestamp:1641972223e3,headersStr:null,content:"# Kestra Entreprise Edition\n\nKestra Entreprise enhance Open Source edition adding authentication, security & productivity.\nHere is how to configure them :",normalizedContent:"# kestra entreprise edition\n\nkestra entreprise enhance open source edition adding authentication, security & productivity.\nhere is how to configure them :",charsets:{}},{title:"Authentications",frontmatter:{order:2,meta:[{property:"article:modified_time",content:"2022-01-12T07:23:43.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Authentications"},{property:"og:description",content:"Authentications | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/administrator-guide/configuration/entreprise-edition/authentifications/"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Authentications"},{name:"twitter:description",content:"Authentications | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/administrator-guide/configuration/entreprise-edition/authentifications/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/administrator-guide/configuration/entreprise-edition/authentifications/",relativePath:"docs/administrator-guide/configuration/entreprise-edition/authentifications/README.md",key:"v-1a638528",path:"/docs/administrator-guide/configuration/entreprise-edition/authentifications/",lastUpdated:"1/12/2022, 7:23:43 AM",lastUpdatedTimestamp:1641972223e3,headersStr:null,content:'# Authentications\n\nKestra provide 2 authentification methods for now :\n\n * Basic Auth: enabled by default\n * OIDC\n\nFirst thing, you must configure is the JWT token security:\nPlease generate a secret that is at least 256 bits and change the config like this:\n\nmicronaut:\n  security:\n    token:\n      jwt:\n        signatures:\n          secret:\n            generator:\n              secret: "{{ Your secret here }}"\n\n\nThis secret must be the same on all your webservers instances and will be used to encode the JWT cookie of Kestra.',normalizedContent:'# authentications\n\nkestra provide 2 authentification methods for now :\n\n * basic auth: enabled by default\n * oidc\n\nfirst thing, you must configure is the jwt token security:\nplease generate a secret that is at least 256 bits and change the config like this:\n\nmicronaut:\n  security:\n    token:\n      jwt:\n        signatures:\n          secret:\n            generator:\n              secret: "{{ your secret here }}"\n\n\nthis secret must be the same on all your webservers instances and will be used to encode the jwt cookie of kestra.',charsets:{}},{title:"Open Id Connect (OIDC)",frontmatter:{meta:[{property:"article:modified_time",content:"2022-01-12T07:23:43.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Open Id Connect (OIDC)"},{property:"og:description",content:"Open Id Connect (OIDC) | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/administrator-guide/configuration/entreprise-edition/authentifications/auths/oidc.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Open Id Connect (OIDC)"},{name:"twitter:description",content:"Open Id Connect (OIDC) | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/administrator-guide/configuration/entreprise-edition/authentifications/auths/oidc.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/administrator-guide/configuration/entreprise-edition/authentifications/auths/oidc.html",relativePath:"docs/administrator-guide/configuration/entreprise-edition/authentifications/auths/oidc.md",key:"v-7dcd35a1",path:"/docs/administrator-guide/configuration/entreprise-edition/authentifications/auths/oidc.html",lastUpdated:"1/12/2022, 7:23:43 AM",lastUpdatedTimestamp:1641972223e3,headersStr:null,content:'# Open Id Connect (OIDC)\n\nTo enable OIDC in the application, you\'ll first have to enable OIDC in micronaut:\n\nmicronaut:\n  security:\n    oauth2:\n      enabled: true\n      clients:\n        google:\n          client-id: "{{ clientId }}"\n          client-secret: "{{ clientSecret }}"\n          openid:\n            issuer: "{{ issueUrl }}"\n\n\nMore information can be found on micronaut oidc configuration\n\n> Google Auth\n\nmicronaut:\n  security:\n    oauth2:\n      enabled: true\n      clients:\n        google:\n          client-id: "{{ clientId }}"\n          client-secret: "{{ clientSecret }}"\n          openid:\n            issuer: \'https://accounts.google.com\'\n\n\n> Microsoft Auth\n\nmicronaut:\n  security:\n    oauth2:\n      enabled: true\n      clients:\n        microsoft:\n          client-id: "{{ clientId }}"\n          client-secret: "{{ clientSecret }}"\n          openid:\n            issuer: \'https://login.microsoftonline.com/common/v2.0/\'\n',normalizedContent:'# open id connect (oidc)\n\nto enable oidc in the application, you\'ll first have to enable oidc in micronaut:\n\nmicronaut:\n  security:\n    oauth2:\n      enabled: true\n      clients:\n        google:\n          client-id: "{{ clientid }}"\n          client-secret: "{{ clientsecret }}"\n          openid:\n            issuer: "{{ issueurl }}"\n\n\nmore information can be found on micronaut oidc configuration\n\n> google auth\n\nmicronaut:\n  security:\n    oauth2:\n      enabled: true\n      clients:\n        google:\n          client-id: "{{ clientid }}"\n          client-secret: "{{ clientsecret }}"\n          openid:\n            issuer: \'https://accounts.google.com\'\n\n\n> microsoft auth\n\nmicronaut:\n  security:\n    oauth2:\n      enabled: true\n      clients:\n        microsoft:\n          client-id: "{{ clientid }}"\n          client-secret: "{{ clientsecret }}"\n          openid:\n            issuer: \'https://login.microsoftonline.com/common/v2.0/\'\n',charsets:{}},{title:"Secret Manager configuration",frontmatter:{order:1,meta:[{property:"article:modified_time",content:"2022-01-12T07:23:43.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Secret Manager configuration"},{property:"og:description",content:"Secret Manager configuration | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/administrator-guide/configuration/entreprise-edition/secrets/"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Secret Manager configuration"},{name:"twitter:description",content:"Secret Manager configuration | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/administrator-guide/configuration/entreprise-edition/secrets/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/administrator-guide/configuration/entreprise-edition/secrets/",relativePath:"docs/administrator-guide/configuration/entreprise-edition/secrets/README.md",key:"v-5efc1fd6",path:"/docs/administrator-guide/configuration/entreprise-edition/secrets/",lastUpdated:"1/12/2022, 7:23:43 AM",lastUpdatedTimestamp:1641972223e3,headersStr:null,content:"# Secret Manager configuration\n\nKestra add integration with secret manager. Secrets will be stored directly on secret backend and worker will read them at runtime only (in memory only).\n\nSecret can be set using the user interface or with terraform\n\nFor now, we provide integration only for Vault, but others will be added in the future.",normalizedContent:"# secret manager configuration\n\nkestra add integration with secret manager. secrets will be stored directly on secret backend and worker will read them at runtime only (in memory only).\n\nsecret can be set using the user interface or with terraform\n\nfor now, we provide integration only for vault, but others will be added in the future.",charsets:{}},{title:"Vault configuration",frontmatter:{meta:[{property:"article:modified_time",content:"2022-01-12T07:23:43.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Vault configuration"},{property:"og:description",content:"Vault configuration | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/administrator-guide/configuration/entreprise-edition/secrets/vault/"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Vault configuration"},{name:"twitter:description",content:"Vault configuration | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/administrator-guide/configuration/entreprise-edition/secrets/vault/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/administrator-guide/configuration/entreprise-edition/secrets/vault/",relativePath:"docs/administrator-guide/configuration/entreprise-edition/secrets/vault/README.md",key:"v-e6985960",path:"/docs/administrator-guide/configuration/entreprise-edition/secrets/vault/",headers:[{level:2,title:"Authentication",slug:"authentication",normalizedTitle:"authentication",charIndex:274},{level:3,title:"Password authentification",slug:"password-authentification",normalizedTitle:"password authentification",charIndex:293},{level:3,title:"Token authentification",slug:"token-authentification",normalizedTitle:"token authentification",charIndex:534},{level:3,title:"AppRole authentification",slug:"approle-authentification",normalizedTitle:"approle authentification",charIndex:758},{level:2,title:"Others configurations",slug:"others-configurations",normalizedTitle:"others configurations",charIndex:1042},{level:3,title:"kestra.secret.vault.address",slug:"kestra-secret-vault-address",normalizedTitle:"kestra.secret.vault.address",charIndex:1068},{level:3,title:"kestra.secret.vault.namespace",slug:"kestra-secret-vault-namespace",normalizedTitle:"kestra.secret.vault.namespace",charIndex:1172},{level:3,title:"kestra.secret.vault.engine-version",slug:"kestra-secret-vault-engine-version",normalizedTitle:"kestra.secret.vault.engine-version",charIndex:1319},{level:3,title:"kestra.secret.vault.root-engine",slug:"kestra-secret-vault-root-engine",normalizedTitle:"kestra.secret.vault.root-engine",charIndex:1447}],lastUpdated:"1/12/2022, 7:23:43 AM",lastUpdatedTimestamp:1641972223e3,headersStr:"Authentication Password authentification Token authentification AppRole authentification Others configurations kestra.secret.vault.address kestra.secret.vault.namespace kestra.secret.vault.engine-version kestra.secret.vault.root-engine",content:'# Vault configuration\n\nThe integration will store secret in vault KV Secrets Engine - Version 2. Kestra authentications must have a full read & write policies on this secrets store. You can optionally change root-engine or namespace (if you are using Vault Enterprise).\n\n\n# Authentication\n\n\n# Password authentification\n\nWe can use an Userpass Auth Method using following configuration:\n\nkestra:\n  secret:\n    type: vault\n    vault:\n      address: "http://localhostt:8200"\n      password:\n        user: john\n        password: foo\n\n\n\n# Token authentification\n\nWe can use an Token Auth Method using following configuration:\n\nkestra:\n  secret:\n    type: vault\n    vault:\n      address: "http://localhostt:8200"\n      token:\n        token: your-secret-token\n\n\n\n# AppRole authentification\n\nWe can use an AppRole Auth Method using following configuration:\n\nkestra:\n  secret:\n    type: vault\n    vault:\n      address: "http://localhostt:8200"\n      app-role:\n        path: approle\n        role-id: your-role-id\n        secret-id: your-secret-id\n\n\n\n# Others configurations\n\n\n# kestra.secret.vault.address\n\nThe fully qualified address with scheme & port to your vault instance.\n\n\n# kestra.secret.vault.namespace\n\nOptional. Sets a global namespace to the Vault server instance. Namespace support requires Vault Enterprise Pro\n\n\n# kestra.secret.vault.engine-version\n\nOptional. Sets the KV Secrets Engine version of the Vault server instance. Default is 2\n\n\n# kestra.secret.vault.root-engine\n\nOptional. Sets the KV Secrets Engine of the Vault server instance. Default is secret',normalizedContent:'# vault configuration\n\nthe integration will store secret in vault kv secrets engine - version 2. kestra authentications must have a full read & write policies on this secrets store. you can optionally change root-engine or namespace (if you are using vault enterprise).\n\n\n# authentication\n\n\n# password authentification\n\nwe can use an userpass auth method using following configuration:\n\nkestra:\n  secret:\n    type: vault\n    vault:\n      address: "http://localhostt:8200"\n      password:\n        user: john\n        password: foo\n\n\n\n# token authentification\n\nwe can use an token auth method using following configuration:\n\nkestra:\n  secret:\n    type: vault\n    vault:\n      address: "http://localhostt:8200"\n      token:\n        token: your-secret-token\n\n\n\n# approle authentification\n\nwe can use an approle auth method using following configuration:\n\nkestra:\n  secret:\n    type: vault\n    vault:\n      address: "http://localhostt:8200"\n      app-role:\n        path: approle\n        role-id: your-role-id\n        secret-id: your-secret-id\n\n\n\n# others configurations\n\n\n# kestra.secret.vault.address\n\nthe fully qualified address with scheme & port to your vault instance.\n\n\n# kestra.secret.vault.namespace\n\noptional. sets a global namespace to the vault server instance. namespace support requires vault enterprise pro\n\n\n# kestra.secret.vault.engine-version\n\noptional. sets the kv secrets engine version of the vault server instance. default is 2\n\n\n# kestra.secret.vault.root-engine\n\noptional. sets the kv secrets engine of the vault server instance. default is secret',charsets:{}},{title:"Worker Isolation configuration",frontmatter:{order:3,meta:[{property:"article:modified_time",content:"2022-01-12T07:23:43.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Worker Isolation configuration"},{property:"og:description",content:"Worker Isolation configuration | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/administrator-guide/configuration/entreprise-edition/workers/"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Worker Isolation configuration"},{name:"twitter:description",content:"Worker Isolation configuration | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/administrator-guide/configuration/entreprise-edition/workers/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/administrator-guide/configuration/entreprise-edition/workers/",relativePath:"docs/administrator-guide/configuration/entreprise-edition/workers/README.md",key:"v-5e4b3d72",path:"/docs/administrator-guide/configuration/entreprise-edition/workers/",headers:[{level:2,title:"Java security",slug:"java-security",normalizedTitle:"java security",charIndex:37},{level:3,title:"kestra.ee.java-security.forbidden-paths",slug:"kestra-ee-java-security-forbidden-paths",normalizedTitle:"kestra.ee.java-security.forbidden-paths",charIndex:662},{level:3,title:"kestra.ee.java-security.authorized-class-prefix",slug:"kestra-ee-java-security-authorized-class-prefix",normalizedTitle:"kestra.ee.java-security.authorized-class-prefix",charIndex:871},{level:2,title:"Scripting isolation",slug:"scripting-isolation",normalizedTitle:"scripting isolation",charIndex:1684}],lastUpdated:"1/12/2022, 7:23:43 AM",lastUpdatedTimestamp:1641972223e3,headersStr:"Java security kestra.ee.java-security.forbidden-paths kestra.ee.java-security.authorized-class-prefix Scripting isolation",content:"# Worker Isolation configuration\n\n\n# Java security\n\nBy default, Kestra use a shared worker in order to handle workload. This is fine most of the case, but when you are using a shared Kestra instance between multiple team, since the worker is sharing the same file systems, this can allow people to access temporary files created by Kestra with powerful task like Groovy, Jython...\n\nYou can opt in to real isolation of file system using advanced Kestra EE java security :\n\nkestra:\n  ee:\n    java-security:\n      enabled: true\n      forbidden-paths:\n        - /etc/\n      authorized-class-prefix:\n        - io.kestra.core.tasks\n        - io.kestra.plugin.gcp\n\n\n\n# kestra.ee.java-security.forbidden-paths\n\nIs filepath on the system that Kestra Worker will be forbidden to read or write all the time. This can be useful to protect Kestra configuration files for example.\n\n\n# kestra.ee.java-security.authorized-class-prefix\n\nThis security prevent access on file system or thread creation (that would prevent us to check file system access). Most of the plugins will never need to have file system access (except on temporary directory, that is created & isolated for a task, and is whitelist by default). Here you can set a list of prefix (namespace) class that will be allowed, all the other will be refused.\n\nFor example, GCP plugins will need to create thread in order to reach GCP api. Since this whole plugins is safe, you can white list it.\n\nWARNING\n\nAt this time, all the Kestra official plugins is safe to be whitelisted except all scripts plugins since it allow to be create custom code that can read & write on file system. This one must not be added authorized-class-prefix\n\n\n# Scripting isolation\n\nFor Bash task & other scripts task in the core, we advised you to forced DOCKER isolation and to configuration a global cluster taskDefaults :\n\nkestra:\n  tasks:\n    defaults:\n      - type: org.kestra.core.tasks.scripts.Bash\n        forced: true\n        values:\n          dockerOptions:\n            image: ubuntu\n          runner: DOCKER\n\n\nWARNING\n\nYou will need to add all scripts plugins task (like Python & Node) to be sure that no task could by pass the docker isolation.",normalizedContent:"# worker isolation configuration\n\n\n# java security\n\nby default, kestra use a shared worker in order to handle workload. this is fine most of the case, but when you are using a shared kestra instance between multiple team, since the worker is sharing the same file systems, this can allow people to access temporary files created by kestra with powerful task like groovy, jython...\n\nyou can opt in to real isolation of file system using advanced kestra ee java security :\n\nkestra:\n  ee:\n    java-security:\n      enabled: true\n      forbidden-paths:\n        - /etc/\n      authorized-class-prefix:\n        - io.kestra.core.tasks\n        - io.kestra.plugin.gcp\n\n\n\n# kestra.ee.java-security.forbidden-paths\n\nis filepath on the system that kestra worker will be forbidden to read or write all the time. this can be useful to protect kestra configuration files for example.\n\n\n# kestra.ee.java-security.authorized-class-prefix\n\nthis security prevent access on file system or thread creation (that would prevent us to check file system access). most of the plugins will never need to have file system access (except on temporary directory, that is created & isolated for a task, and is whitelist by default). here you can set a list of prefix (namespace) class that will be allowed, all the other will be refused.\n\nfor example, gcp plugins will need to create thread in order to reach gcp api. since this whole plugins is safe, you can white list it.\n\nwarning\n\nat this time, all the kestra official plugins is safe to be whitelisted except all scripts plugins since it allow to be create custom code that can read & write on file system. this one must not be added authorized-class-prefix\n\n\n# scripting isolation\n\nfor bash task & other scripts task in the core, we advised you to forced docker isolation and to configuration a global cluster taskdefaults :\n\nkestra:\n  tasks:\n    defaults:\n      - type: org.kestra.core.tasks.scripts.bash\n        forced: true\n        values:\n          dockeroptions:\n            image: ubuntu\n          runner: docker\n\n\nwarning\n\nyou will need to add all scripts plugins task (like python & node) to be sure that no task could by pass the docker isolation.",charsets:{}},{title:"Kafka configuration",frontmatter:{order:1,meta:[{property:"article:modified_time",content:"2021-12-02T20:33:22.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Kafka configuration"},{property:"og:description",content:"Kafka configuration | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/administrator-guide/configuration/kafka/"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Kafka configuration"},{name:"twitter:description",content:"Kafka configuration | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/administrator-guide/configuration/kafka/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/administrator-guide/configuration/kafka/",relativePath:"docs/administrator-guide/configuration/kafka/README.md",key:"v-67c3e868",path:"/docs/administrator-guide/configuration/kafka/",headers:[{level:2,title:"kestra.kafka.client.properties",slug:"kestra-kafka-client-properties",normalizedTitle:"kestra.kafka.client.properties",charIndex:26},{level:2,title:"kestra.kafka.defaults.topic",slug:"kestra-kafka-defaults-topic",normalizedTitle:"kestra.kafka.defaults.topic",charIndex:1014},{level:2,title:"kestra.kafka.defaults.[consumer|producer|stream].properties",slug:"kestra-kafka-defaults-consumer-producer-stream-properties",normalizedTitle:"kestra.kafka.defaults.[consumer|producer|stream].properties",charIndex:1294},{level:2,title:"kestra.kafka.defaults.topics",slug:"kestra-kafka-defaults-topics",normalizedTitle:"kestra.kafka.defaults.topics",charIndex:2104},{level:2,title:"kestra.kafka.defaults.consumer-prefix",slug:"kestra-kafka-defaults-consumer-prefix",normalizedTitle:"kestra.kafka.defaults.consumer-prefix",charIndex:2497},{level:2,title:"kestra.kafka.defaults.topic-prefix",slug:"kestra-kafka-defaults-topic-prefix",normalizedTitle:"kestra.kafka.defaults.topic-prefix",charIndex:2845},{level:2,title:"kestra.kafka.defaults.consumer-prefix",slug:"kestra-kafka-defaults-consumer-prefix-2",normalizedTitle:"kestra.kafka.defaults.consumer-prefix",charIndex:2497}],lastUpdated:"12/2/2021, 8:33:22 PM",lastUpdatedTimestamp:1638477202e3,headersStr:"kestra.kafka.client.properties kestra.kafka.defaults.topic kestra.kafka.defaults.[consumer|producer|stream].properties kestra.kafka.defaults.topics kestra.kafka.defaults.consumer-prefix kestra.kafka.defaults.topic-prefix kestra.kafka.defaults.consumer-prefix",content:'# Kafka configuration\n\n\n# kestra.kafka.client.properties\n\nMost important configuration is to configure the way Kestra connect to Kafka cluster.\n\nHere is a minimal configuration example :\n\nkestra:\n  kafka:\n    client:\n      properties:\n        bootstrap.servers: "localhost:9092"\n  queue:\n    type: kafka\n\n\nHere is another example with a secure kafka cluster hosted by aiven:\n\nkestra:\n  kafka:\n    client:\n      properties:\n        bootstrap.servers: "your-host.aivencloud.com:12835"\n        security.protocol: "SSL"\n        ssl.endpoint.identification.algorithm: ""\n        ssl.key.password: "<your-password>"\n        ssl.keystore.location: "/etc/ssl/private/keystore.p12"\n        ssl.keystore.password: "<your-password>"\n        ssl.keystore.type: "PKCS12"\n        ssl.truststore.location: "/etc/ssl/private/truststore.jks"\n        ssl.truststore.password: "<your-password>"\n\n  queue:\n    type: kafka\n\n\nproperties is the standard java kafka client properties, more details can be found on Kafka Documentation\n\n\n# kestra.kafka.defaults.topic\n\nBy default, Kestra automatically create all the topics needed, you can change partition & replication factor of these topics :\n\n * kestra.kafka.defaults.topic.partitions: (default 16)\n * kestra.kafka.defaults.topic.replication-factor: (default 1)\n\n\n# kestra.kafka.defaults.[consumer|producer|stream].properties\n\nYou can change the default properties of Kafka client from Kestra. These allow you to change compression, max request, etc...\n\nHere is the default configuration :\n\nkestra:\n  kafka:\n    defaults:\n      consumer:\n        properties:\n          isolation.level: "read_committed"\n          auto.offset.reset: "earliest"\n          enable.auto.commit: "false"\n\n      producer:\n        properties:\n          acks: "all"\n          compression.type: "lz4"\n          max.request.size: "10485760"\n\n      stream:\n        properties:\n          processing.guarantee: "exactly_once"\n          replication.factor: "${kestra.kafka.defaults.topic.replication-factor}"\n          acks: "all"\n          compression.type: "lz4"\n          max.request.size: "10485760"\n\n\n\n# kestra.kafka.defaults.topics\n\nAll the topic used by Kestra are declared with default name & properties. You can change the default values:\n\n * kestra.kafka.defaults.topics.{{topic}}.name: Change the name of this topic.\n * kestra.kafka.defaults.topics.{{topic}}.properties: Change the default properties used during topic automatic creation.\n\nYou can see default configuration on this file\n\n\n# kestra.kafka.defaults.consumer-prefix\n\nThis configuration allow you to change the consumer-group prefix. By default, the prefix will be kestra.\n\nFor example, if you want to share a common Kafka cluster for the multiple instance of Kestra, just add another prefix like this :\n\nkestra:\n  kafka:\n    defaults:\n      consumer-prefix: "uat_kestra"\n\n\n\n# kestra.kafka.defaults.topic-prefix\n\nThis configuration allow you to change the topic prefix. By default, the prefix will be kestra_.\n\nFor example, if you want to share a common Kafka cluster for the multiple instance of Kestra, just add another prefix like this :\n\nkestra:\n  kafka:\n    defaults:\n      topic-prefix: "uat_kestra"\n\n\n\n# kestra.kafka.defaults.consumer-prefix\n\nThis configuration allow you to enable log for all messages from or to Kafka. Use this one to debug all the messages consume, produce or both from Kafka.\n\nWARNING\n\nThis configuration have a huge performance impact, using regexp & serialization for most of the message\n\nkestra:\n  kafka:\n    client:\n      loggers:\n        - level: INFO # mandatory: ERROR, WARN, INFO, DEBUG, TRACE, the logger must be configured at least at this level for class io.kestra.runner.kafka.AbstractInterceptor\n          type: PRODUCER # optional: CONSUMER or PRODUCER\n          topic-regexp: "kestra_(executions|workertaskresult)" # optional: a regexp validating the topic\n          key-regexp: .*parallel.* # optional: a regexp validating the key\n          value-regexp: .*parallel.* # optional: a regexp validating the json full body\n',normalizedContent:'# kafka configuration\n\n\n# kestra.kafka.client.properties\n\nmost important configuration is to configure the way kestra connect to kafka cluster.\n\nhere is a minimal configuration example :\n\nkestra:\n  kafka:\n    client:\n      properties:\n        bootstrap.servers: "localhost:9092"\n  queue:\n    type: kafka\n\n\nhere is another example with a secure kafka cluster hosted by aiven:\n\nkestra:\n  kafka:\n    client:\n      properties:\n        bootstrap.servers: "your-host.aivencloud.com:12835"\n        security.protocol: "ssl"\n        ssl.endpoint.identification.algorithm: ""\n        ssl.key.password: "<your-password>"\n        ssl.keystore.location: "/etc/ssl/private/keystore.p12"\n        ssl.keystore.password: "<your-password>"\n        ssl.keystore.type: "pkcs12"\n        ssl.truststore.location: "/etc/ssl/private/truststore.jks"\n        ssl.truststore.password: "<your-password>"\n\n  queue:\n    type: kafka\n\n\nproperties is the standard java kafka client properties, more details can be found on kafka documentation\n\n\n# kestra.kafka.defaults.topic\n\nby default, kestra automatically create all the topics needed, you can change partition & replication factor of these topics :\n\n * kestra.kafka.defaults.topic.partitions: (default 16)\n * kestra.kafka.defaults.topic.replication-factor: (default 1)\n\n\n# kestra.kafka.defaults.[consumer|producer|stream].properties\n\nyou can change the default properties of kafka client from kestra. these allow you to change compression, max request, etc...\n\nhere is the default configuration :\n\nkestra:\n  kafka:\n    defaults:\n      consumer:\n        properties:\n          isolation.level: "read_committed"\n          auto.offset.reset: "earliest"\n          enable.auto.commit: "false"\n\n      producer:\n        properties:\n          acks: "all"\n          compression.type: "lz4"\n          max.request.size: "10485760"\n\n      stream:\n        properties:\n          processing.guarantee: "exactly_once"\n          replication.factor: "${kestra.kafka.defaults.topic.replication-factor}"\n          acks: "all"\n          compression.type: "lz4"\n          max.request.size: "10485760"\n\n\n\n# kestra.kafka.defaults.topics\n\nall the topic used by kestra are declared with default name & properties. you can change the default values:\n\n * kestra.kafka.defaults.topics.{{topic}}.name: change the name of this topic.\n * kestra.kafka.defaults.topics.{{topic}}.properties: change the default properties used during topic automatic creation.\n\nyou can see default configuration on this file\n\n\n# kestra.kafka.defaults.consumer-prefix\n\nthis configuration allow you to change the consumer-group prefix. by default, the prefix will be kestra.\n\nfor example, if you want to share a common kafka cluster for the multiple instance of kestra, just add another prefix like this :\n\nkestra:\n  kafka:\n    defaults:\n      consumer-prefix: "uat_kestra"\n\n\n\n# kestra.kafka.defaults.topic-prefix\n\nthis configuration allow you to change the topic prefix. by default, the prefix will be kestra_.\n\nfor example, if you want to share a common kafka cluster for the multiple instance of kestra, just add another prefix like this :\n\nkestra:\n  kafka:\n    defaults:\n      topic-prefix: "uat_kestra"\n\n\n\n# kestra.kafka.defaults.consumer-prefix\n\nthis configuration allow you to enable log for all messages from or to kafka. use this one to debug all the messages consume, produce or both from kafka.\n\nwarning\n\nthis configuration have a huge performance impact, using regexp & serialization for most of the message\n\nkestra:\n  kafka:\n    client:\n      loggers:\n        - level: info # mandatory: error, warn, info, debug, trace, the logger must be configured at least at this level for class io.kestra.runner.kafka.abstractinterceptor\n          type: producer # optional: consumer or producer\n          topic-regexp: "kestra_(executions|workertaskresult)" # optional: a regexp validating the topic\n          key-regexp: .*parallel.* # optional: a regexp validating the key\n          value-regexp: .*parallel.* # optional: a regexp validating the json full body\n',charsets:{cjk:!0}},{title:"Micronaut configuration",frontmatter:{order:4,meta:[{property:"article:modified_time",content:"2021-03-26T21:33:01.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Micronaut configuration"},{property:"og:description",content:"Micronaut configuration | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/administrator-guide/configuration/micronaut/"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Micronaut configuration"},{name:"twitter:description",content:"Micronaut configuration | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/administrator-guide/configuration/micronaut/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/administrator-guide/configuration/micronaut/",relativePath:"docs/administrator-guide/configuration/micronaut/README.md",key:"v-636e3ee8",path:"/docs/administrator-guide/configuration/micronaut/",headers:[{level:2,title:"Configure log Level",slug:"configure-log-level",normalizedTitle:"configure log level",charIndex:298},{level:2,title:"Configure port and scheme",slug:"configure-port-and-scheme",normalizedTitle:"configure port and scheme",charIndex:514},{level:2,title:"Configure the timeout or max uploaded file size",slug:"configure-the-timeout-or-max-uploaded-file-size",normalizedTitle:"configure the timeout or max uploaded file size",charIndex:700},{level:2,title:"Changing base path",slug:"changing-base-path",normalizedTitle:"changing base path",charIndex:1048}],lastUpdated:"3/26/2021, 9:33:01 PM",lastUpdatedTimestamp:1616794381e3,headersStr:"Configure log Level Configure port and scheme Configure the timeout or max uploaded file size Changing base path",content:'# Micronaut configuration\n\nSince Kestra is a Java app base on micronaut, you can configure to fit your need.\nWe will not explain all the configuration values possible, there are available here\nbut we will provide some tips, and most useful to help you to configure micronaut to fit your need :\n\n\n# Configure log Level\n\nlogger:\n  levels:\n    io.kestra.runner: TRACE\n    org.elasticsearch.client: TRACE\n    org.elasticsearch.client.sniffer: TRACE\n    org.apache.kafka: DEBUG\n    io.netty.handler.logging: TRACE\n\n\n\n# Configure port and scheme\n\nmicronaut:\n  server:\n    port: 8086\n  ssl:\n    enabled: true\n    keyStore:\n      path: classpath:server.p12\n      password: mypassword\n      type: PKCS12\n\n\n\n# Configure the timeout or max uploaded file size\n\nA lot of configuration affect these, here is the default configuration:\n\nmicronaut:\n  server:\n    max-request-size: 10GB\n    multipart:\n      max-file-size: 10GB\n      disk: true\n    read-idle-timeout: 60m\n    write-idle-timeout: 60m\n    idle-timeout: 60m\n    netty:\n      max-chunk-size: 10MB\n\n\n\n# Changing base path\n\nIf behind a reverse proxy, change base path:\n\nmicronaut:\n  server:\n    context-path: "kestra-prd"\n',normalizedContent:'# micronaut configuration\n\nsince kestra is a java app base on micronaut, you can configure to fit your need.\nwe will not explain all the configuration values possible, there are available here\nbut we will provide some tips, and most useful to help you to configure micronaut to fit your need :\n\n\n# configure log level\n\nlogger:\n  levels:\n    io.kestra.runner: trace\n    org.elasticsearch.client: trace\n    org.elasticsearch.client.sniffer: trace\n    org.apache.kafka: debug\n    io.netty.handler.logging: trace\n\n\n\n# configure port and scheme\n\nmicronaut:\n  server:\n    port: 8086\n  ssl:\n    enabled: true\n    keystore:\n      path: classpath:server.p12\n      password: mypassword\n      type: pkcs12\n\n\n\n# configure the timeout or max uploaded file size\n\na lot of configuration affect these, here is the default configuration:\n\nmicronaut:\n  server:\n    max-request-size: 10gb\n    multipart:\n      max-file-size: 10gb\n      disk: true\n    read-idle-timeout: 60m\n    write-idle-timeout: 60m\n    idle-timeout: 60m\n    netty:\n      max-chunk-size: 10mb\n\n\n\n# changing base path\n\nif behind a reverse proxy, change base path:\n\nmicronaut:\n  server:\n    context-path: "kestra-prd"\n',charsets:{}},{title:"Others Kestra configuration",frontmatter:{order:5,meta:[{property:"article:modified_time",content:"2022-01-12T07:23:43.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Others Kestra configuration"},{property:"og:description",content:"Others Kestra configuration | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/administrator-guide/configuration/others/"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Others Kestra configuration"},{name:"twitter:description",content:"Others Kestra configuration | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/administrator-guide/configuration/others/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/administrator-guide/configuration/others/",relativePath:"docs/administrator-guide/configuration/others/README.md",key:"v-3ef378d0",path:"/docs/administrator-guide/configuration/others/",headers:[{level:2,title:"Url configuration",slug:"url-configuration",normalizedTitle:"url configuration",charIndex:34},{level:2,title:"Plugins configuration",slug:"plugins-configuration",normalizedTitle:"plugins configuration",charIndex:282},{level:2,title:"Variables configuration",slug:"variables-configuration",normalizedTitle:"variables configuration",charIndex:754},{level:3,title:"kestra.variables.env-vars-prefix",slug:"kestra-variables-env-vars-prefix",normalizedTitle:"kestra.variables.env-vars-prefix",charIndex:782},{level:3,title:"kestra.variables.globals",slug:"kestra-variables-globals",normalizedTitle:"kestra.variables.globals",charIndex:1106},{level:3,title:"kestra.variables.disable-handlebars",slug:"kestra-variables-disable-handlebars",normalizedTitle:"kestra.variables.disable-handlebars",charIndex:1463},{level:3,title:"kestra.tasks.defaults",slug:"kestra-tasks-defaults",normalizedTitle:"kestra.tasks.defaults",charIndex:1586},{level:2,title:"Metrics configuration",slug:"metrics-configuration",normalizedTitle:"metrics configuration",charIndex:2183},{level:2,title:"Servers configuration",slug:"servers-configuration",normalizedTitle:"servers configuration",charIndex:2298},{level:3,title:"kestra.server.access-log: Access Log configuration",slug:"kestra-server-access-log-access-log-configuration",normalizedTitle:"kestra.server.access-log: access log configuration",charIndex:2324},{level:3,title:"kestra.configurations.delete-files-on-start: Delete configurations files",slug:"kestra-configurations-delete-files-on-start-delete-configurations-files",normalizedTitle:"kestra.configurations.delete-files-on-start: delete configurations files",charIndex:3114},{level:2,title:"Endpoint configuration",slug:"endpoint-configuration",normalizedTitle:"endpoint configuration",charIndex:3497},{level:2,title:"Temporary storage configuration",slug:"temporary-storage-configuration",normalizedTitle:"temporary storage configuration",charIndex:3803},{level:2,title:"JVM configuration",slug:"jvm-configuration",normalizedTitle:"jvm configuration",charIndex:4058},{level:3,title:"user.timezone: Timezone",slug:"user-timezone-timezone",normalizedTitle:"user.timezone: timezone",charIndex:4285},{level:2,title:"Anonymous usage report",slug:"anonymous-usage-report",normalizedTitle:"anonymous usage report",charIndex:4649},{level:3,title:"Collected Data",slug:"collected-data",normalizedTitle:"collected data",charIndex:5202}],lastUpdated:"1/12/2022, 7:23:43 AM",lastUpdatedTimestamp:1641972223e3,headersStr:"Url configuration Plugins configuration Variables configuration kestra.variables.env-vars-prefix kestra.variables.globals kestra.variables.disable-handlebars kestra.tasks.defaults Metrics configuration Servers configuration kestra.server.access-log: Access Log configuration kestra.configurations.delete-files-on-start: Delete configurations files Endpoint configuration Temporary storage configuration JVM configuration user.timezone: Timezone Anonymous usage report Collected Data",content:'# Others Kestra configuration\n\n\n# Url configuration\n\nSome notification service need to have an url configuration defined in order to add some link directly to the web ui. Use full uri here with a trailing / (without ui or api).\n\nkestra:\n  url: https://www.my-host.com/kestra/\n\n\n\n\n# Plugins configuration\n\nConfiguration of maven repositories used for commande plugins install.\nDefault are necessary for kestra and plugins, but you can add your custom maven registries in order to download your own plugins with this command.\n\nkestra:\n  plugins:\n    repositories:\n      central:\n        url: https://repo.maven.apache.org/maven2/\n      jcenter:\n        url: https://jcenter.bintray.com/\n      kestra:\n        url: https://dl.bintray.com/kestra/maven\n\n\n\n\n# Variables configuration\n\n\n# kestra.variables.env-vars-prefix\n\nKestra provide a way to use environment variables in your flow.\nBy default, we only get environment variables that start with KESTRA_.\n\nThese variables will be accessible on flow with {{ env.your_env }}\n\nFor example env vars with name KESTRA_MY_ENV will be usable with {{ env.my_env }}\n\n\n# kestra.variables.globals\n\nYou can also provide from configuration files globals variables that will be accessible in all your flow.\nMostly it will be use for example to declare environnement on your instance, some global dataset, ...\n\nkestra:\n  variables:\n    globals:\n      env: dev\n\n\n\nThese variables will be accessible on flow with {{ globals.env }}\n\n\n# kestra.variables.disable-handlebars\n\nBy default, deprecated handlebars is disabled, you can enable it with true value.\n\n\n# kestra.tasks.defaults\n\nYou can also provide from configuration files tasks defaults that will be applied on each tasks on your cluster if not defined on flow or tasks.\nMostly it will allow you to be sure a value was defined at a default value for these tasks type.\n\nkestra:\n  tasks:\n    defaults:\n    - type: io.kestra.core.tasks.debugs.Echo\n      level: ERROR\n\n\nThese variables will be accessible on flow with {{ globals.env }}\n\nkestra:\n  tasks:\n    defaults:\n    - type: io.kestra.core.tasks.debugs.Echo\n      level: ERROR\n\n\nThese variables will be accessible on flow with {{ globals.env }}\n\n\n# Metrics configuration\n\n * kestra.metrics.prefix: Change the prefix for all metrics for Kestra(default: kestra)\n\n\n# Servers configuration\n\n\n# kestra.server.access-log: Access Log configuration\n\n * kestra.server.access-log.enabled: Enabled access log from webserver (default true)\n * kestra.server.access-log.name: Logger name (default io.kestra.webserver.access)\n * kestra.server.access-log.format: Access log format (default [Date: {}] [Duration: {} ms] [Method: {}] [Url: {}] [Status: {}] [Length: {}] [Ip: {}] [Port: {}])\n * kestra.server.access-log.filters: list of regexp that will log, use .* to enable all (default - ".*\\\\[Url: /api/.*")\n\nHere is the default values:\n\nkestra:\n  server:\n    access-log:\n      enabled: true\n      name: io.kestra.webserver.access\n      format: "[Date: {}] [Duration: {} ms] [Method: {}] [Url: {}] [Status: {}] [Length: {}] [Ip: {}] [Port: {}]"\n      filters:\n        - ".*\\\\[Url: /api/.*"\n\n\n\n# kestra.configurations.delete-files-on-start: Delete configurations files\n\nThis setting allow you to delete all configurations just after the server startup. It prevents to be able to read configurations files (that may contain your secrets) from a Bash task for example. The server will keep this value on memory and won\'t be accessible from tasks. true or false (default false)\n\n\n# Endpoint configuration\n\nEndpoint configuration can be done with micronaut configuration from micronaut.\nYou can also secure all endpoint with an basic auth authentification with this additional configuration :\n\nendpoints:\n  all:\n    basic-auth:\n      username: your-user\n      password: your-password\n\n\n\n# Temporary storage configuration\n\nKestra write some temporary files during task processing, but default file will be created on /tmp but you can change the location with this configuration :\n\nkestra:\n  tasks:\n    tmp-dir:\n      path: /home/kestra/tmp\n\n\n\n# JVM configuration\n\nAll JVM options can be passed as environment vars name JAVA_OPTS. You can use it to change all JVM options available like memory, encoding, ...\n\nexample:\n\nexport JAVA_OPTS="-Duser.timezone=Europe/Paris"\n\n\n\n# user.timezone: Timezone\n\nBy default, Kestra will handle all date with your system timezone. You can change the timezone with JVM options.\nChanging the timezone will affect mostly :\n\n * scheduler: by default, all schedule date is UTC, changing the java timezone will allow you to schedule flow in your timezone.\n * log: that will be displayed on your timezone.\n\n\n# Anonymous usage report\n\nUnderstanding how you use Kestra is very important to us: it helps us improve the solution in many different ways.\nFor this very reason, the kestra.anonymous-usage-report.enabled option is mandatory: we want you to take time to consider whether or not you wish to share anonymous data with us so we can benefit from your experience and use cases.\n\n * kestra.anonymous-usage-report.enabled: (default true)\n * kestra.anonymous-usage-report.initial-delay: (default 5m)\n * kestra.anonymous-usage-report.fixed-delay: (default 1h)\n\n\n# Collected Data\n\nThe collected data can be found here, We collect only anonymous data that allow to understand how you used Kestra. Mostly the data collected are :\n\n * host data: cpu, ram, os, jvm and a fingerprint of the machine\n * plugins data: the list of plugins installed and the current version\n * flow data: the namespace count, flow count, the task type and the trigger type used.\n * execution data: the execution & taskruns count for last 2 days with count and duration grouped by status\n * common data: the server type, version, timezone, env, start time and url',normalizedContent:'# others kestra configuration\n\n\n# url configuration\n\nsome notification service need to have an url configuration defined in order to add some link directly to the web ui. use full uri here with a trailing / (without ui or api).\n\nkestra:\n  url: https://www.my-host.com/kestra/\n\n\n\n\n# plugins configuration\n\nconfiguration of maven repositories used for commande plugins install.\ndefault are necessary for kestra and plugins, but you can add your custom maven registries in order to download your own plugins with this command.\n\nkestra:\n  plugins:\n    repositories:\n      central:\n        url: https://repo.maven.apache.org/maven2/\n      jcenter:\n        url: https://jcenter.bintray.com/\n      kestra:\n        url: https://dl.bintray.com/kestra/maven\n\n\n\n\n# variables configuration\n\n\n# kestra.variables.env-vars-prefix\n\nkestra provide a way to use environment variables in your flow.\nby default, we only get environment variables that start with kestra_.\n\nthese variables will be accessible on flow with {{ env.your_env }}\n\nfor example env vars with name kestra_my_env will be usable with {{ env.my_env }}\n\n\n# kestra.variables.globals\n\nyou can also provide from configuration files globals variables that will be accessible in all your flow.\nmostly it will be use for example to declare environnement on your instance, some global dataset, ...\n\nkestra:\n  variables:\n    globals:\n      env: dev\n\n\n\nthese variables will be accessible on flow with {{ globals.env }}\n\n\n# kestra.variables.disable-handlebars\n\nby default, deprecated handlebars is disabled, you can enable it with true value.\n\n\n# kestra.tasks.defaults\n\nyou can also provide from configuration files tasks defaults that will be applied on each tasks on your cluster if not defined on flow or tasks.\nmostly it will allow you to be sure a value was defined at a default value for these tasks type.\n\nkestra:\n  tasks:\n    defaults:\n    - type: io.kestra.core.tasks.debugs.echo\n      level: error\n\n\nthese variables will be accessible on flow with {{ globals.env }}\n\nkestra:\n  tasks:\n    defaults:\n    - type: io.kestra.core.tasks.debugs.echo\n      level: error\n\n\nthese variables will be accessible on flow with {{ globals.env }}\n\n\n# metrics configuration\n\n * kestra.metrics.prefix: change the prefix for all metrics for kestra(default: kestra)\n\n\n# servers configuration\n\n\n# kestra.server.access-log: access log configuration\n\n * kestra.server.access-log.enabled: enabled access log from webserver (default true)\n * kestra.server.access-log.name: logger name (default io.kestra.webserver.access)\n * kestra.server.access-log.format: access log format (default [date: {}] [duration: {} ms] [method: {}] [url: {}] [status: {}] [length: {}] [ip: {}] [port: {}])\n * kestra.server.access-log.filters: list of regexp that will log, use .* to enable all (default - ".*\\\\[url: /api/.*")\n\nhere is the default values:\n\nkestra:\n  server:\n    access-log:\n      enabled: true\n      name: io.kestra.webserver.access\n      format: "[date: {}] [duration: {} ms] [method: {}] [url: {}] [status: {}] [length: {}] [ip: {}] [port: {}]"\n      filters:\n        - ".*\\\\[url: /api/.*"\n\n\n\n# kestra.configurations.delete-files-on-start: delete configurations files\n\nthis setting allow you to delete all configurations just after the server startup. it prevents to be able to read configurations files (that may contain your secrets) from a bash task for example. the server will keep this value on memory and won\'t be accessible from tasks. true or false (default false)\n\n\n# endpoint configuration\n\nendpoint configuration can be done with micronaut configuration from micronaut.\nyou can also secure all endpoint with an basic auth authentification with this additional configuration :\n\nendpoints:\n  all:\n    basic-auth:\n      username: your-user\n      password: your-password\n\n\n\n# temporary storage configuration\n\nkestra write some temporary files during task processing, but default file will be created on /tmp but you can change the location with this configuration :\n\nkestra:\n  tasks:\n    tmp-dir:\n      path: /home/kestra/tmp\n\n\n\n# jvm configuration\n\nall jvm options can be passed as environment vars name java_opts. you can use it to change all jvm options available like memory, encoding, ...\n\nexample:\n\nexport java_opts="-duser.timezone=europe/paris"\n\n\n\n# user.timezone: timezone\n\nby default, kestra will handle all date with your system timezone. you can change the timezone with jvm options.\nchanging the timezone will affect mostly :\n\n * scheduler: by default, all schedule date is utc, changing the java timezone will allow you to schedule flow in your timezone.\n * log: that will be displayed on your timezone.\n\n\n# anonymous usage report\n\nunderstanding how you use kestra is very important to us: it helps us improve the solution in many different ways.\nfor this very reason, the kestra.anonymous-usage-report.enabled option is mandatory: we want you to take time to consider whether or not you wish to share anonymous data with us so we can benefit from your experience and use cases.\n\n * kestra.anonymous-usage-report.enabled: (default true)\n * kestra.anonymous-usage-report.initial-delay: (default 5m)\n * kestra.anonymous-usage-report.fixed-delay: (default 1h)\n\n\n# collected data\n\nthe collected data can be found here, we collect only anonymous data that allow to understand how you used kestra. mostly the data collected are :\n\n * host data: cpu, ram, os, jvm and a fingerprint of the machine\n * plugins data: the list of plugins installed and the current version\n * flow data: the namespace count, flow count, the task type and the trigger type used.\n * execution data: the execution & taskruns count for last 2 days with count and duration grouped by status\n * common data: the server type, version, timezone, env, start time and url',charsets:{}},{title:"Storage configuration",frontmatter:{order:3,meta:[{property:"article:modified_time",content:"2021-03-26T21:33:01.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Storage configuration"},{property:"og:description",content:"Storage configuration | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/administrator-guide/configuration/storage/"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Storage configuration"},{name:"twitter:description",content:"Storage configuration | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/administrator-guide/configuration/storage/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/administrator-guide/configuration/storage/",relativePath:"docs/administrator-guide/configuration/storage/README.md",key:"v-f99b39f0",path:"/docs/administrator-guide/configuration/storage/",headers:[{level:2,title:"GCS",slug:"gcs",normalizedTitle:"gcs",charIndex:217},{level:2,title:"Minio",slug:"minio",normalizedTitle:"minio",charIndex:257}],lastUpdated:"3/26/2021, 9:33:01 PM",lastUpdatedTimestamp:1616794381e3,headersStr:"GCS Minio",content:'# Storage configuration\n\nKestra need a internal storage in order to store file proceed (uploaded files & between tasks).\n\nThe default storage is Local storage not production ready\n\nAvailable storage are :\n\n * Storage GCS for Google Cloud Storage\n * Storage Minio compatible with AWS S3 and all others S3 like storage\n\n\n# GCS\n\nFor you need to be sure to have the GCS storage plugins installed, you can install it with Kestra command :\n./kestra plugins install io.kestra.storage.gcs:storage-gcs:LATEST, it will download the plugins jar on kestra plugins directory.\n\nAfter you need to enable the storage with this configuration:\n\n\nkestra:\n  storage:\n    type: gcs\n    gcs:\n      bucket: "<your-bucket-name>"\n\n\nKestra will use the default service account GCP service account, meaning that :\n\n * will use on GKE, the service account defined on the cluster\n * will use on GCE, the service account defined on the VM.\n * you can provide an environment variable GOOGLE_APPLICATION_CREDENTIALS with a path to a json GCP service account key.\n\nMore detail can be found here\n\n\n# Minio\n\nFor you need to be sure to have the Minio storage plugins installed, you can install it with Kestra command :\n./kestra plugins install io.kestra.storage.minio:storage-minio:LATEST, it will download the plugins jar on kestra plugins directory.\n\nAfter you need to enable the storage with this configuration:\n\n\nkestra:\n  storage:\n    type: minio\n    minio:\n      endpoint: "<your-endpoint>"\n      port: "<your-port>"\n      accessKey: "<your-accessKey>"\n      secretKey: "<your-secretKey>"\n      region: "<your-region>"\n      secure: "<your-secure>"\n      bucket: "<your-bucket>"\n',normalizedContent:'# storage configuration\n\nkestra need a internal storage in order to store file proceed (uploaded files & between tasks).\n\nthe default storage is local storage not production ready\n\navailable storage are :\n\n * storage gcs for google cloud storage\n * storage minio compatible with aws s3 and all others s3 like storage\n\n\n# gcs\n\nfor you need to be sure to have the gcs storage plugins installed, you can install it with kestra command :\n./kestra plugins install io.kestra.storage.gcs:storage-gcs:latest, it will download the plugins jar on kestra plugins directory.\n\nafter you need to enable the storage with this configuration:\n\n\nkestra:\n  storage:\n    type: gcs\n    gcs:\n      bucket: "<your-bucket-name>"\n\n\nkestra will use the default service account gcp service account, meaning that :\n\n * will use on gke, the service account defined on the cluster\n * will use on gce, the service account defined on the vm.\n * you can provide an environment variable google_application_credentials with a path to a json gcp service account key.\n\nmore detail can be found here\n\n\n# minio\n\nfor you need to be sure to have the minio storage plugins installed, you can install it with kestra command :\n./kestra plugins install io.kestra.storage.minio:storage-minio:latest, it will download the plugins jar on kestra plugins directory.\n\nafter you need to enable the storage with this configuration:\n\n\nkestra:\n  storage:\n    type: minio\n    minio:\n      endpoint: "<your-endpoint>"\n      port: "<your-port>"\n      accesskey: "<your-accesskey>"\n      secretkey: "<your-secretkey>"\n      region: "<your-region>"\n      secure: "<your-secure>"\n      bucket: "<your-bucket>"\n',charsets:{}},{title:"Installation guide",frontmatter:{order:1,meta:[{property:"article:modified_time",content:"2020-11-09T20:39:04.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Installation guide"},{property:"og:description",content:"Installation guide | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/administrator-guide/deployment/"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Installation guide"},{name:"twitter:description",content:"Installation guide | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/administrator-guide/deployment/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/administrator-guide/deployment/",relativePath:"docs/administrator-guide/deployment/README.md",key:"v-55acd5fe",path:"/docs/administrator-guide/deployment/",lastUpdated:"11/9/2020, 8:39:04 PM",lastUpdatedTimestamp:1604954344e3,headersStr:null,content:"# Installation guide\n\nWe provide different way to deploy kestra, the recommended way are :\n\n * Docker for a local installation\n * Kubernetes for a production installation\n\nMore information :",normalizedContent:"# installation guide\n\nwe provide different way to deploy kestra, the recommended way are :\n\n * docker for a local installation\n * kubernetes for a production installation\n\nmore information :",charsets:{}},{title:"Deployment with Docker",frontmatter:{order:1,meta:[{property:"article:modified_time",content:"2021-03-26T21:33:01.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Deployment with Docker"},{property:"og:description",content:"Deployment with Docker | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/administrator-guide/deployment/docker/"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Deployment with Docker"},{name:"twitter:description",content:"Deployment with Docker | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/administrator-guide/deployment/docker/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/administrator-guide/deployment/docker/",relativePath:"docs/administrator-guide/deployment/docker/README.md",key:"v-6842f008",path:"/docs/administrator-guide/deployment/docker/",headers:[{level:2,title:"Before you begin",slug:"before-you-begin",normalizedTitle:"before you begin",charIndex:154},{level:2,title:"Launch Kestra",slug:"launch-kestra",normalizedTitle:"launch kestra",charIndex:244},{level:2,title:"Docker Image",slug:"docker-image",normalizedTitle:"docker image",charIndex:628},{level:3,title:"Use official image",slug:"use-official-image",normalizedTitle:"use official image",charIndex:645},{level:3,title:"Create a new image with more binaries",slug:"create-a-new-image-with-more-binaries",normalizedTitle:"create a new image with more binaries",charIndex:1300},{level:3,title:"Create a new image with plugins",slug:"create-a-new-image-with-plugins",normalizedTitle:"create a new image with plugins",charIndex:1671},{level:3,title:"Docker image tag",slug:"docker-image-tag",normalizedTitle:"docker image tag",charIndex:2073}],lastUpdated:"3/26/2021, 9:33:01 PM",lastUpdatedTimestamp:1616794381e3,headersStr:"Before you begin Launch Kestra Docker Image Use official image Create a new image with more binaries Create a new image with plugins Docker image tag",content:"# Deployment with Docker\n\nThe quickest way to install Kestra is to use Docker Compose. It will start a non production Kestra with all the dependency.\n\n\n# Before you begin\n\nMake sure you have already installed :\n\n * Docker\n * Docker Compose\n\n\n# Launch Kestra\n\n * Download the compose file here\n * Run docker-compose up\n * Open http://localhost:8080 on your browser\n\nIt will start all the dependencies with a preconfigured Kestra that is connected to all!\n\nKestra will start with Standalone server (all the different servers in one JVM).\nThis is clearly not for production workload but sufficient to test on a local computer.\n\n\n# Docker Image\n\n\n# Use official image\n\nThe Kestra docker image is available in Docker hub.\n\nWe provide 2 images :\n\n * kestra/kestra:latest\n * kestra/kestra:latest-full\n\nThe docker image is based on openjdk:11-jre-slim docker image.\n\n# kestra/kestra:latest\n\nThis image :\n\n * does't contain any kestra plugins.\n * does't contain a lot of binaries to work with your Bash task.\n * does't contain some binaries for Python task or Node task.\n\n# kestra/kestra:latest-full\n\nThis image contains all the kestra plugins and all the binaries for Python task or Node task.\nTake care that this image will always contain the last version of plugins that can have some breaking change.\n\n\n# Create a new image with more binaries\n\nIf the base or full image don't contain binaries\nYou can easily create a new one with the DockerFile :\n\nARG IMAGE_TAG=latest\nFROM kestra/kestra:$IMAGE_TAG\n\nRUN mkdir -p /app/plugins && \\\n  apt-get update -y && \\\n  apt-get install -y --no-install-recommends golang && \\\n  apt-get clean && rm -rf /var/lib/apt/lists/* /var/tmp/*\n\n\n\n# Create a new image with plugins\n\nBy default, the kestra base docker image don't contain any plugins, but you can create a new image with all the plugins you want :\n\nARG IMAGE_TAG=latest\nFROM kestra/kestra:$IMAGE_TAG\n\nRUN /app/kestra plugins install \\\n  io.kestra.plugin.notifications:task-notifications:LATEST \\\n  io.kestra.storage.gcs:storage-gcs:LATEST \\\n  io.kestra.plugin.gcp:task-gcp:LATEST \n\n\n\n# Docker image tag\n\nWe provide a 3 tags for docker image :\n\n * latest: that will contain the default latest image with its full variant latest-full.\n * release: an image with preview of the next release with its full variant release-full.\n * develop: an image based on develop branch that will change every day and contain all unstable feature we are working and with its full variant develop-full.",normalizedContent:"# deployment with docker\n\nthe quickest way to install kestra is to use docker compose. it will start a non production kestra with all the dependency.\n\n\n# before you begin\n\nmake sure you have already installed :\n\n * docker\n * docker compose\n\n\n# launch kestra\n\n * download the compose file here\n * run docker-compose up\n * open http://localhost:8080 on your browser\n\nit will start all the dependencies with a preconfigured kestra that is connected to all!\n\nkestra will start with standalone server (all the different servers in one jvm).\nthis is clearly not for production workload but sufficient to test on a local computer.\n\n\n# docker image\n\n\n# use official image\n\nthe kestra docker image is available in docker hub.\n\nwe provide 2 images :\n\n * kestra/kestra:latest\n * kestra/kestra:latest-full\n\nthe docker image is based on openjdk:11-jre-slim docker image.\n\n# kestra/kestra:latest\n\nthis image :\n\n * does't contain any kestra plugins.\n * does't contain a lot of binaries to work with your bash task.\n * does't contain some binaries for python task or node task.\n\n# kestra/kestra:latest-full\n\nthis image contains all the kestra plugins and all the binaries for python task or node task.\ntake care that this image will always contain the last version of plugins that can have some breaking change.\n\n\n# create a new image with more binaries\n\nif the base or full image don't contain binaries\nyou can easily create a new one with the dockerfile :\n\narg image_tag=latest\nfrom kestra/kestra:$image_tag\n\nrun mkdir -p /app/plugins && \\\n  apt-get update -y && \\\n  apt-get install -y --no-install-recommends golang && \\\n  apt-get clean && rm -rf /var/lib/apt/lists/* /var/tmp/*\n\n\n\n# create a new image with plugins\n\nby default, the kestra base docker image don't contain any plugins, but you can create a new image with all the plugins you want :\n\narg image_tag=latest\nfrom kestra/kestra:$image_tag\n\nrun /app/kestra plugins install \\\n  io.kestra.plugin.notifications:task-notifications:latest \\\n  io.kestra.storage.gcs:storage-gcs:latest \\\n  io.kestra.plugin.gcp:task-gcp:latest \n\n\n\n# docker image tag\n\nwe provide a 3 tags for docker image :\n\n * latest: that will contain the default latest image with its full variant latest-full.\n * release: an image with preview of the next release with its full variant release-full.\n * develop: an image based on develop branch that will change every day and contain all unstable feature we are working and with its full variant develop-full.",charsets:{}},{title:"Deployment on Kubernetes",frontmatter:{order:2,meta:[{property:"article:modified_time",content:"2020-11-07T08:20:23.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Deployment on Kubernetes"},{property:"og:description",content:"Deployment on Kubernetes | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/administrator-guide/deployment/kubernetes/"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Deployment on Kubernetes"},{name:"twitter:description",content:"Deployment on Kubernetes | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/administrator-guide/deployment/kubernetes/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/administrator-guide/deployment/kubernetes/",relativePath:"docs/administrator-guide/deployment/kubernetes/README.md",key:"v-7854a970",path:"/docs/administrator-guide/deployment/kubernetes/",lastUpdated:"11/7/2020, 8:20:23 AM",lastUpdatedTimestamp:1604737223e3,headersStr:null,content:"# Deployment on Kubernetes\n\nThe recommended deployment environment for production workload is Kubernetes.\nWe provide an Helm Charts in order to deploy your cluster.\n\n * The chart repository is available here.\n * The source code of the charts is here.\n\nBy default, the helm can deploy :\n\n * Zookeeper using kafka.enabled: true\n * Kafka cluster using kafka.enabled: true\n * Elasticsearch cluster using elasticsearch.enabled: true\n * All Kestra servers in separate pods.\n\nYou can change the default behaviour and configuring your cluster changing the defaults values.\n\nMost important configuration that will provide Kestra configuration files are:\n\n * configuration: in order to set the whole configuration files from kestra\n * secrets: that will be merged with configuration but kept as secret on your k8s cluster.",normalizedContent:"# deployment on kubernetes\n\nthe recommended deployment environment for production workload is kubernetes.\nwe provide an helm charts in order to deploy your cluster.\n\n * the chart repository is available here.\n * the source code of the charts is here.\n\nby default, the helm can deploy :\n\n * zookeeper using kafka.enabled: true\n * kafka cluster using kafka.enabled: true\n * elasticsearch cluster using elasticsearch.enabled: true\n * all kestra servers in separate pods.\n\nyou can change the default behaviour and configuring your cluster changing the defaults values.\n\nmost important configuration that will provide kestra configuration files are:\n\n * configuration: in order to set the whole configuration files from kestra\n * secrets: that will be merged with configuration but kept as secret on your k8s cluster.",charsets:{}},{title:"Manual deployment",frontmatter:{order:3,meta:[{property:"article:modified_time",content:"2021-09-01T20:42:46.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Manual deployment"},{property:"og:description",content:"Manual deployment | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/administrator-guide/deployment/manual/"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Manual deployment"},{name:"twitter:description",content:"Manual deployment | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/administrator-guide/deployment/manual/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/administrator-guide/deployment/manual/",relativePath:"docs/administrator-guide/deployment/manual/README.md",key:"v-026cac48",path:"/docs/administrator-guide/deployment/manual/",lastUpdated:"9/1/2021, 8:42:46 PM",lastUpdatedTimestamp:1630528966e3,headersStr:null,content:"# Manual deployment\n\nIf you want to deploy by yourself, we provide a Standalone jar that allow to deploy on any environnement you want.\n\nThe latest jar can be download here.\n\nThis is an executable jar:\n\n * For Linux & MacOs, we run it ./kestra-VERSION\n * For Windows, rename the file ./kestra-VERSION to ./kestra-VERSION.bat and call it from CMD.",normalizedContent:"# manual deployment\n\nif you want to deploy by yourself, we provide a standalone jar that allow to deploy on any environnement you want.\n\nthe latest jar can be download here.\n\nthis is an executable jar:\n\n * for linux & macos, we run it ./kestra-version\n * for windows, rename the file ./kestra-version to ./kestra-version.bat and call it from cmd.",charsets:{}},{title:"Monitoring & Alerting",frontmatter:{order:4,meta:[{property:"article:modified_time",content:"2020-12-22T20:48:10.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Monitoring & Alerting"},{property:"og:description",content:"Monitoring & Alerting | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/administrator-guide/monitoring/"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Monitoring & Alerting"},{name:"twitter:description",content:"Monitoring & Alerting | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/administrator-guide/monitoring/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/administrator-guide/monitoring/",relativePath:"docs/administrator-guide/monitoring/README.md",key:"v-db882e10",path:"/docs/administrator-guide/monitoring/",headers:[{level:2,title:"Prometheus",slug:"prometheus",normalizedTitle:"prometheus",charIndex:253},{level:3,title:"Kestra metrics",slug:"kestra-metrics",normalizedTitle:"kestra metrics",charIndex:356},{level:3,title:"Others metrics",slug:"others-metrics",normalizedTitle:"others metrics",charIndex:2161},{level:2,title:"Grafana or Kibana",slug:"grafana-or-kibana",normalizedTitle:"grafana or kibana",charIndex:2362},{level:2,title:"Kestra endpoint",slug:"kestra-endpoint",normalizedTitle:"kestra endpoint",charIndex:2618},{level:2,title:"Others micronaut default endpoint",slug:"others-micronaut-default-endpoint",normalizedTitle:"others micronaut default endpoint",charIndex:2888}],lastUpdated:"12/22/2020, 8:48:10 PM",lastUpdatedTimestamp:160867009e4,headersStr:"Prometheus Kestra metrics Others metrics Grafana or Kibana Kestra endpoint Others micronaut default endpoint",content:"# Monitoring & Alerting\n\nKestra will start a monitoring endpoint on port 8081 by default. (You can change this port with\nconfiguration options endpoints:.all.port)\n\nThis monitoring endpoint will expose some helpful route in order to monitor Kestra:\n\n\n# Prometheus\n\nIf you have any Prometheus monitoring systems, Kestra expose this endpoint /prometheus\n\n\n# Kestra metrics\n\nKestra expose some internal metrics allowing to add some alert. Each one declare many timeseries with tags allowing\nto track at least namespace & flow. But also some others tags depending on available tasks.\n\nAlso each task type can expose custom metrics that will be exposed on prometheus.\n\n# Worker\n\nMETRICS                 TYPE      DESCRIPTION\nworker.running.count    GAUGE     Task actually running\nworker.started.count    COUNTER   Count of tasks started\nworker.retryed.count    COUNTER   Count of tasks retried\nworker.ended.count      COUNTER   Count of tasks ended\nworker.ended.duration   TIMER     Duration of tasks ended\n\n# Executor\n\nMETRICS                            TYPE      DESCRIPTION\nexecutor.taskrun.next.count        COUNTER   Count of tasks found\nexecutor.taskrun.ended.count       COUNTER   Count of tasks ended\nexecutor.taskrun.ended.duration    TOMER     Duration of tasks ended\nexecutor.workertaskresult.count    COUNTER   Count of task result send by worker\nexecutor.execution.started.count   COUNTER   Count of executions started\nexecutor.execution.end.count       COUNTER   Count of executions ended\nexecutor.execution.duration        TIMER     Duration of executions ended\n\n# Indexer\n\nMETRICS            TYPE       DESCRIPTION\nindexer.count      COUNTER    Count of indexation sent to repository\nindexer.duration   DURATION   Duration of indexation sent to repository\n\n# Scheduler\n\nMETRICS                            TYPE      DESCRIPTION\nscheduler.trigger.count            COUNTER   Count of trigger found\nscheduler.evaluate.running.count   COUNTER   Evaluation of trigger actually running (aka: number of\n                                             thread used by scheduler)\nscheduler.evaluate.duration        TIMER     Duration of evaluation of trigger\n\n\n# Others metrics\n\nIt will also expose all internal metrics from :\n\n * Micronaut\n * Kafka\n * Thread pool on the application\n * ...\n\nSome additional information can be found on Micronaut documentation\n\n\n# Grafana or Kibana\n\nSince Elasticsearch is used to store all executions & metrics, you can easily make a dashboard with\nGrafana or Kibana in order to follow your Kestra instance.\n\nIn a near future, we will provide a template dashboard as a quick start.\n\n\n# Kestra endpoint\n\nKestra expose some internal endpoint on management port (8081 by default) depending on servers:\n\n * /worker: will expose all current running task on this worker\n * /scheduler: will expose all current scheduled flows on this scheduler with next date\n\n\n# Others micronaut default endpoint\n\nSince Kestra is based on Micronaut, the default micronaut endpoint\nis enabled by default on port 8081 :\n\n * /info Info Endpoint with git status informations.\n * /health Health Endpoint usable for add an external heathcheck on application.\n * /loggers Loggers Endpoint allowing changing logger level during runtime.\n * /metrics Metrics Endpoint metrics in json format.\n * /env Env Endpoint to debug configuration files.\n\nYou can disabled some endpoint following micronaut configuration above.",normalizedContent:"# monitoring & alerting\n\nkestra will start a monitoring endpoint on port 8081 by default. (you can change this port with\nconfiguration options endpoints:.all.port)\n\nthis monitoring endpoint will expose some helpful route in order to monitor kestra:\n\n\n# prometheus\n\nif you have any prometheus monitoring systems, kestra expose this endpoint /prometheus\n\n\n# kestra metrics\n\nkestra expose some internal metrics allowing to add some alert. each one declare many timeseries with tags allowing\nto track at least namespace & flow. but also some others tags depending on available tasks.\n\nalso each task type can expose custom metrics that will be exposed on prometheus.\n\n# worker\n\nmetrics                 type      description\nworker.running.count    gauge     task actually running\nworker.started.count    counter   count of tasks started\nworker.retryed.count    counter   count of tasks retried\nworker.ended.count      counter   count of tasks ended\nworker.ended.duration   timer     duration of tasks ended\n\n# executor\n\nmetrics                            type      description\nexecutor.taskrun.next.count        counter   count of tasks found\nexecutor.taskrun.ended.count       counter   count of tasks ended\nexecutor.taskrun.ended.duration    tomer     duration of tasks ended\nexecutor.workertaskresult.count    counter   count of task result send by worker\nexecutor.execution.started.count   counter   count of executions started\nexecutor.execution.end.count       counter   count of executions ended\nexecutor.execution.duration        timer     duration of executions ended\n\n# indexer\n\nmetrics            type       description\nindexer.count      counter    count of indexation sent to repository\nindexer.duration   duration   duration of indexation sent to repository\n\n# scheduler\n\nmetrics                            type      description\nscheduler.trigger.count            counter   count of trigger found\nscheduler.evaluate.running.count   counter   evaluation of trigger actually running (aka: number of\n                                             thread used by scheduler)\nscheduler.evaluate.duration        timer     duration of evaluation of trigger\n\n\n# others metrics\n\nit will also expose all internal metrics from :\n\n * micronaut\n * kafka\n * thread pool on the application\n * ...\n\nsome additional information can be found on micronaut documentation\n\n\n# grafana or kibana\n\nsince elasticsearch is used to store all executions & metrics, you can easily make a dashboard with\ngrafana or kibana in order to follow your kestra instance.\n\nin a near future, we will provide a template dashboard as a quick start.\n\n\n# kestra endpoint\n\nkestra expose some internal endpoint on management port (8081 by default) depending on servers:\n\n * /worker: will expose all current running task on this worker\n * /scheduler: will expose all current scheduled flows on this scheduler with next date\n\n\n# others micronaut default endpoint\n\nsince kestra is based on micronaut, the default micronaut endpoint\nis enabled by default on port 8081 :\n\n * /info info endpoint with git status informations.\n * /health health endpoint usable for add an external heathcheck on application.\n * /loggers loggers endpoint allowing changing logger level during runtime.\n * /metrics metrics endpoint metrics in json format.\n * /env env endpoint to debug configuration files.\n\nyou can disabled some endpoint following micronaut configuration above.",charsets:{}},{title:"Kestra servers",frontmatter:{order:2,meta:[{property:"article:modified_time",content:"2020-11-08T20:24:08.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Kestra servers"},{property:"og:description",content:"Kestra servers | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/administrator-guide/servers/"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Kestra servers"},{name:"twitter:description",content:"Kestra servers | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/administrator-guide/servers/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/administrator-guide/servers/",relativePath:"docs/administrator-guide/servers/README.md",key:"v-12b44ec8",path:"/docs/administrator-guide/servers/",headers:[{level:2,title:"Production environment servers",slug:"production-environment-servers",normalizedTitle:"production environment servers",charIndex:94},{level:3,title:"Kestra Executor",slug:"kestra-executor",normalizedTitle:"kestra executor",charIndex:129},{level:3,title:"Kestra Indexer",slug:"kestra-indexer",normalizedTitle:"kestra indexer",charIndex:222},{level:3,title:"Kestra Scheduler",slug:"kestra-scheduler",normalizedTitle:"kestra scheduler",charIndex:313},{level:3,title:"Kestra Worker",slug:"kestra-worker",normalizedTitle:"kestra worker",charIndex:408},{level:3,title:"Kestra Webserver",slug:"kestra-webserver",normalizedTitle:"kestra webserver",charIndex:532},{level:2,title:"Kestra standalone, Development environment servers",slug:"kestra-standalone-development-environment-servers",normalizedTitle:"kestra standalone, development environment servers",charIndex:627},{level:2,title:"Options for all server command",slug:"options-for-all-server-command",normalizedTitle:"options for all server command",charIndex:1098},{level:3,title:"Log Level",slug:"log-level",normalizedTitle:"log level",charIndex:1133},{level:3,title:"Internal Log",slug:"internal-log",normalizedTitle:"internal log",charIndex:1372},{level:3,title:"Configuration Files",slug:"configuration-files",normalizedTitle:"configuration files",charIndex:1491},{level:3,title:"Plugins directory",slug:"plugins-directory",normalizedTitle:"plugins directory",charIndex:1615}],lastUpdated:"11/8/2020, 8:24:08 PM",lastUpdatedTimestamp:1604867048e3,headersStr:"Production environment servers Kestra Executor Kestra Indexer Kestra Scheduler Kestra Worker Kestra Webserver Kestra standalone, Development environment servers Options for all server command Log Level Internal Log Configuration Files Plugins directory",content:"# Kestra servers\n\nKestra have 5 different servers in order to have a fully working Kestra\n\n\n# Production environment servers\n\n\n# Kestra Executor\n\n./kestra server executor\n\nOptions:\n\nNo special options for this server.\n\n\n# Kestra Indexer\n\n./kestra server indexer\n\nOptions:\n\nNo special options for this server.\n\n\n# Kestra Scheduler\n\n./kestra server scheduler\n\nOptions:\n\nNo special options for this server.\n\n\n# Kestra Worker\n\n./kestra server worker\n\nOptions:\n\n * -thread: the number of thread that can handle task at the same time\n\n\n# Kestra Webserver\n\n./kestra server Webserver\n\nOptions:\n\nNo special options for this servers\n\n\n# Kestra standalone, Development environment servers\n\n./kestra server standalone\n\nThis server is a special server only intended for Development environment, since it will contains all the server in one jvm.\nBut this work well on development environment.\nBy default, the worker embedded will start 1 thread per cpu core available.\n\nOptions:\n\n * -f or --flow-path: the path to a directory will flow file as yaml, these files will loaded on the repository at the startup.\n\n\n# Options for all server command\n\n\n# Log Level\n\nLog level can be changed with 2 options :\n\n * --log-level: possible value: [TRACE, DEBUG, INFO, WARN, ERROR], default: INFO\n * --verbose or -v for DEBUG, -vv for TRACE\n\nThis option affects global log level for all flow only\n\n\n# Internal Log\n\n--internal-log: Kestra hide internal log by default, use this option to enable it (High verbosity !)\n\n\n# Configuration Files\n\n-c or --config: change the location of kestra configuration files, default is ~/.kestra/config.yml\n\n\n# Plugins directory\n\n-p or --plugins: Path to plugins directory, default is plugins directory near your kestra executable",normalizedContent:"# kestra servers\n\nkestra have 5 different servers in order to have a fully working kestra\n\n\n# production environment servers\n\n\n# kestra executor\n\n./kestra server executor\n\noptions:\n\nno special options for this server.\n\n\n# kestra indexer\n\n./kestra server indexer\n\noptions:\n\nno special options for this server.\n\n\n# kestra scheduler\n\n./kestra server scheduler\n\noptions:\n\nno special options for this server.\n\n\n# kestra worker\n\n./kestra server worker\n\noptions:\n\n * -thread: the number of thread that can handle task at the same time\n\n\n# kestra webserver\n\n./kestra server webserver\n\noptions:\n\nno special options for this servers\n\n\n# kestra standalone, development environment servers\n\n./kestra server standalone\n\nthis server is a special server only intended for development environment, since it will contains all the server in one jvm.\nbut this work well on development environment.\nby default, the worker embedded will start 1 thread per cpu core available.\n\noptions:\n\n * -f or --flow-path: the path to a directory will flow file as yaml, these files will loaded on the repository at the startup.\n\n\n# options for all server command\n\n\n# log level\n\nlog level can be changed with 2 options :\n\n * --log-level: possible value: [trace, debug, info, warn, error], default: info\n * --verbose or -v for debug, -vv for trace\n\nthis option affects global log level for all flow only\n\n\n# internal log\n\n--internal-log: kestra hide internal log by default, use this option to enable it (high verbosity !)\n\n\n# configuration files\n\n-c or --config: change the location of kestra configuration files, default is ~/.kestra/config.yml\n\n\n# plugins directory\n\n-p or --plugins: path to plugins directory, default is plugins directory near your kestra executable",charsets:{}},{title:"Architecture",frontmatter:{order:3,meta:[{property:"article:modified_time",content:"2021-11-19T08:25:55.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Architecture"},{property:"og:description",content:"Architecture | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/architecture/"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Architecture"},{name:"twitter:description",content:"Architecture | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/architecture/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/architecture/",relativePath:"docs/architecture/README.md",key:"v-be84a670",path:"/docs/architecture/",headers:[{level:2,title:"Dependencies",slug:"dependencies",normalizedTitle:"dependencies",charIndex:21},{level:3,title:"Kafka",slug:"kafka",normalizedTitle:"kafka",charIndex:201},{level:3,title:"ElasticSearch",slug:"elasticsearch",normalizedTitle:"elasticsearch",charIndex:386},{level:3,title:"Storage",slug:"storage",normalizedTitle:"storage",charIndex:534},{level:2,title:"Servers",slug:"servers",normalizedTitle:"servers",charIndex:1175},{level:3,title:"Executor",slug:"executor",normalizedTitle:"executor",charIndex:981},{level:3,title:"Worker",slug:"worker",normalizedTitle:"worker",charIndex:1836},{level:3,title:"Scheduler",slug:"scheduler",normalizedTitle:"scheduler",charIndex:2850},{level:3,title:"Indexer",slug:"indexer",normalizedTitle:"indexer",charIndex:996},{level:3,title:"Webserver",slug:"webserver",normalizedTitle:"webserver",charIndex:3614},{level:2,title:"Plugins",slug:"plugins",normalizedTitle:"plugins",charIndex:4257},{level:2,title:"Repositories",slug:"repositories",normalizedTitle:"repositories",charIndex:3511}],lastUpdated:"11/19/2021, 8:25:55 AM",lastUpdatedTimestamp:1637310355e3,headersStr:"Dependencies Kafka ElasticSearch Storage Servers Executor Worker Scheduler Indexer Webserver Plugins Repositories",content:"# Architecture\n\n\n\n\n# Dependencies\n\nAt the heart, Kestra have a pluggable system allowing to switch some dependencies, but for now there is only one production environments architecture available :\n\n\n# Kafka\n\nKafka is the real main dependencies of Kestra, all the most important servers need to have a Kafka up & running. Kafka allowing Kestra to be an infinitely scalable solution.\n\n\n# ElasticSearch\n\nElasticSearch is the database of Kestra, allowing displaying, search, aggregate all the data from Kestra (Flow, executions, ...)\n\n\n# Storage\n\nKestra need to store some files (incoming or outgoing files) and this notion is included in the heart of Kestra. Nowadays, storage availability are backup by many file systems, we rely on these in order to guarantee scalability of Kestra.\n\nThe storage is a simple plugin that you need to include and configure, by default only a Local (not scalable) storage is available.\n\nThe storage is used can be used by any Kestra servers except the Executor & the Indexer that don't need it.\n\nAvailable storage are :\n\n * Storage Minio for Minio compatible with AWS S3 and all others S3 Like storage\n * Storage GCS for Google Cloud Storage\n\n\n# Servers\n\nKestra consist of multiple servers that can be scaled independently:\n\n\n# Executor\n\nExecutors handle all executions and flowable tasks. The only goal is to receive created execution and find what will be next tasks.\nThere isn't (and can't) heavy computing on this part. Only looking at current execution and find next tasks.\n\nThe executor also handle special execution case :\n\n * Listeners\n * Flow Trigger\n * Template\n\nInternally, the executor is a heavy Kafka Stream. The executor processes all events coming from Kafka in the right order, keep an internal state of the execution and merge taskrun result coming from the worker.\nIt also detects a dead Worker and resubmit the task running by a dead worker.\n\nSince the application is a Kafka Stream, the application can be scale infinitely (with the limit of partition count on Kafka) but since no heavy computation are done on the executor, this server doesn't use a lot of resources (except if you have a very high rate of execution).\n\n\n# Worker\n\nWorkers is where the task are done. Worker will receive task from Executor and will process then.\nSince tasks could be everything (heavy computation, simple api call), worker is ThreadPool where you can configure the amount of thread you need.\n\nInternally, Worker are a simple Kafka Consumer that will process any taskrun submitted. Worker will receive all task and dispatch internally in his Thread Pool.\nYou can also scale as you want workers and have many instance on multiple servers(with the limit of partition count on Kafka), each own with Thread Pool.\nIf a worker is dead, the Executor will detect him and resubmit their current taskrun to another worker.\n\n\n# Scheduler\n\nScheduler will handle most of the triggers (except the Flow Trigger handle by executor). It will watch continuously all the triggers and detect if all the conditions is meet to trigger an Execution (submitted to Executor).\n\nInternally, Scheduler are 2 ThreadPool :\n\n * ScheduledExecutorService : that will tick every second and try to find an available job\n * CachedThreadPool : that will compute in a separate Thread for all the trigger\n\nWARNING\n\nBy default, Kestra will handle all date with your system timezone. You can change the timezone with JVM options.\n\n\n# Indexer\n\nIndexer will watch for many Kafka topic and will simply copy the content to Repositories. This will save to ElasticSearch all the execution & flow allowing to have a rich ui.\n\n\n# Webserver\n\nWebserver will offer 2 main module in the same server :\n\n * Api: All the api allowing triggering execution for any systems, and to interact with Kestra.\n * Ui: The ui is also served by the same webserver\n\nThe webserver mostly interact with Elasticsearch in order to have a rich api / ui. It also interacts with Kafka in order to trigger new execution, follow execution in real-time, ...\n\nTIP\n\nAs you understand, all the application is able to work only with Kafka and Storage (mostly except Scheduler).\nElasticsearch is only available for the Web ui and if ElasticSearch is down, you are able to continue any workload on Kestra\n\n\n# Plugins\n\nKestra core doesn't allow to handle many tasks type. We have included a Plugins systems that allow you to develop as many tasks as you need.\nA wide range of plugins will deliver by Kestra team !\n\n\n# Repositories\n\nRepositories are the internal way to fetch data. On production servers, it will fetch data from ElasticSearch. There is a memory repository than is used during internal Kestra unit test and have an incomplete api. Never use this one on production.",normalizedContent:"# architecture\n\n\n\n\n# dependencies\n\nat the heart, kestra have a pluggable system allowing to switch some dependencies, but for now there is only one production environments architecture available :\n\n\n# kafka\n\nkafka is the real main dependencies of kestra, all the most important servers need to have a kafka up & running. kafka allowing kestra to be an infinitely scalable solution.\n\n\n# elasticsearch\n\nelasticsearch is the database of kestra, allowing displaying, search, aggregate all the data from kestra (flow, executions, ...)\n\n\n# storage\n\nkestra need to store some files (incoming or outgoing files) and this notion is included in the heart of kestra. nowadays, storage availability are backup by many file systems, we rely on these in order to guarantee scalability of kestra.\n\nthe storage is a simple plugin that you need to include and configure, by default only a local (not scalable) storage is available.\n\nthe storage is used can be used by any kestra servers except the executor & the indexer that don't need it.\n\navailable storage are :\n\n * storage minio for minio compatible with aws s3 and all others s3 like storage\n * storage gcs for google cloud storage\n\n\n# servers\n\nkestra consist of multiple servers that can be scaled independently:\n\n\n# executor\n\nexecutors handle all executions and flowable tasks. the only goal is to receive created execution and find what will be next tasks.\nthere isn't (and can't) heavy computing on this part. only looking at current execution and find next tasks.\n\nthe executor also handle special execution case :\n\n * listeners\n * flow trigger\n * template\n\ninternally, the executor is a heavy kafka stream. the executor processes all events coming from kafka in the right order, keep an internal state of the execution and merge taskrun result coming from the worker.\nit also detects a dead worker and resubmit the task running by a dead worker.\n\nsince the application is a kafka stream, the application can be scale infinitely (with the limit of partition count on kafka) but since no heavy computation are done on the executor, this server doesn't use a lot of resources (except if you have a very high rate of execution).\n\n\n# worker\n\nworkers is where the task are done. worker will receive task from executor and will process then.\nsince tasks could be everything (heavy computation, simple api call), worker is threadpool where you can configure the amount of thread you need.\n\ninternally, worker are a simple kafka consumer that will process any taskrun submitted. worker will receive all task and dispatch internally in his thread pool.\nyou can also scale as you want workers and have many instance on multiple servers(with the limit of partition count on kafka), each own with thread pool.\nif a worker is dead, the executor will detect him and resubmit their current taskrun to another worker.\n\n\n# scheduler\n\nscheduler will handle most of the triggers (except the flow trigger handle by executor). it will watch continuously all the triggers and detect if all the conditions is meet to trigger an execution (submitted to executor).\n\ninternally, scheduler are 2 threadpool :\n\n * scheduledexecutorservice : that will tick every second and try to find an available job\n * cachedthreadpool : that will compute in a separate thread for all the trigger\n\nwarning\n\nby default, kestra will handle all date with your system timezone. you can change the timezone with jvm options.\n\n\n# indexer\n\nindexer will watch for many kafka topic and will simply copy the content to repositories. this will save to elasticsearch all the execution & flow allowing to have a rich ui.\n\n\n# webserver\n\nwebserver will offer 2 main module in the same server :\n\n * api: all the api allowing triggering execution for any systems, and to interact with kestra.\n * ui: the ui is also served by the same webserver\n\nthe webserver mostly interact with elasticsearch in order to have a rich api / ui. it also interacts with kafka in order to trigger new execution, follow execution in real-time, ...\n\ntip\n\nas you understand, all the application is able to work only with kafka and storage (mostly except scheduler).\nelasticsearch is only available for the web ui and if elasticsearch is down, you are able to continue any workload on kestra\n\n\n# plugins\n\nkestra core doesn't allow to handle many tasks type. we have included a plugins systems that allow you to develop as many tasks as you need.\na wide range of plugins will deliver by kestra team !\n\n\n# repositories\n\nrepositories are the internal way to fetch data. on production servers, it will fetch data from elasticsearch. there is a memory repository than is used during internal kestra unit test and have an incomplete api. never use this one on production.",charsets:{}},{title:"Concepts",frontmatter:{order:2,meta:[{property:"article:modified_time",content:"2020-11-09T20:39:04.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Concepts"},{property:"og:description",content:"Concepts | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/concepts/"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Concepts"},{name:"twitter:description",content:"Concepts | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/concepts/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/concepts/",relativePath:"docs/concepts/README.md",key:"v-11cc6b58",path:"/docs/concepts/",lastUpdated:"11/9/2020, 8:39:04 PM",lastUpdatedTimestamp:1604954344e3,headersStr:null,content:"# Concepts\n\nThis section describes some specific terms usage for Kestra system. It aims to make it simpler to understand the system for newcomers.",normalizedContent:"# concepts\n\nthis section describes some specific terms usage for kestra system. it aims to make it simpler to understand the system for newcomers.",charsets:{}},{title:"Execution",frontmatter:{order:2,meta:[{property:"article:modified_time",content:"2020-12-01T14:17:58.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Execution"},{property:"og:description",content:"Execution | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/concepts/executions.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Execution"},{name:"twitter:description",content:"Execution | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/concepts/executions.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/concepts/executions.html",relativePath:"docs/concepts/executions.md",key:"v-a42a4c0e",path:"/docs/concepts/executions.html",headers:[{level:2,title:"Task Run",slug:"task-run",normalizedTitle:"task run",charIndex:202},{level:2,title:"Attempts",slug:"attempts",normalizedTitle:"attempts",charIndex:347},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:544},{level:2,title:"Metrics",slug:"metrics",normalizedTitle:"metrics",charIndex:657},{level:2,title:"State",slug:"state",normalizedTitle:"state",charIndex:877}],lastUpdated:"12/1/2020, 2:17:58 PM",lastUpdatedTimestamp:1606832278e3,headersStr:"Task Run Attempts Outputs Metrics State",content:"# Execution\n\nAn execution is a flow that is currently processing or have already finished doing things. It is a task set processing together to achieve the flow goal that is to be ran successfully.\n\n\n# Task Run\n\nA task run is a task that was executed and associated to its operationnal data like execution_id, state, start_date, end_date, ...\n\n\n# Attempts\n\nEach task run will be produce 1 or more attempt. Most common task run will have only 1 attempt, but you can add some Retries that will generate new attempts for every failed taskrun.\n\n\n# Outputs\n\nEach task can generate some output data that can be reused in other tasks of the current execution.\n\n\n# Metrics\n\nEach task can generate some metrics data that be useful to understand what the current task are doing.\nThis can be for example file.size, row.count, ...\n\nThere is 2 kind of metrics :\n\n * Duration\n * Counter\n\n\n# State\n\nDefine all the state that a Task Run or an Execution can have.\n\nThe Execution or Task Run can have these state :\n\n * CREATED: not handle internally, waiting to be treated. Mostly the execution is in a queue.\n * RUNNING: the tasks are running right now.\n * SUCCESS: all the task are done without any failure.\n * WARNING: execution have any unintended behaviour, but we continue the execution and flagged execution has WARNING also.\n * FAILED: execution have any unintended behaviour that cause the execution to failed.\n * KILLING: execution was asked to be killed and waiting tasks were killed.\n * KILLED: execution was killed, and no more task will be done.\n * RESTARTED: this status is a transitive status that mean CREATED, only for keep track of the restart",normalizedContent:"# execution\n\nan execution is a flow that is currently processing or have already finished doing things. it is a task set processing together to achieve the flow goal that is to be ran successfully.\n\n\n# task run\n\na task run is a task that was executed and associated to its operationnal data like execution_id, state, start_date, end_date, ...\n\n\n# attempts\n\neach task run will be produce 1 or more attempt. most common task run will have only 1 attempt, but you can add some retries that will generate new attempts for every failed taskrun.\n\n\n# outputs\n\neach task can generate some output data that can be reused in other tasks of the current execution.\n\n\n# metrics\n\neach task can generate some metrics data that be useful to understand what the current task are doing.\nthis can be for example file.size, row.count, ...\n\nthere is 2 kind of metrics :\n\n * duration\n * counter\n\n\n# state\n\ndefine all the state that a task run or an execution can have.\n\nthe execution or task run can have these state :\n\n * created: not handle internally, waiting to be treated. mostly the execution is in a queue.\n * running: the tasks are running right now.\n * success: all the task are done without any failure.\n * warning: execution have any unintended behaviour, but we continue the execution and flagged execution has warning also.\n * failed: execution have any unintended behaviour that cause the execution to failed.\n * killing: execution was asked to be killed and waiting tasks were killed.\n * killed: execution was killed, and no more task will be done.\n * restarted: this status is a transitive status that mean created, only for keep track of the restart",charsets:{}},{title:"Flow",frontmatter:{order:1,meta:[{property:"article:modified_time",content:"2020-09-25T19:43:22.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Flow"},{property:"og:description",content:"Flow | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/concepts/flows.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Flow"},{name:"twitter:description",content:"Flow | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/concepts/flows.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/concepts/flows.html",relativePath:"docs/concepts/flows.md",key:"v-631e077a",path:"/docs/concepts/flows.html",headers:[{level:2,title:"Task",slug:"task",normalizedTitle:"task",charIndex:133},{level:3,title:"Flowable Task",slug:"flowable-task",normalizedTitle:"flowable task",charIndex:338},{level:3,title:"Runnable Task",slug:"runnable-task",normalizedTitle:"runnable task",charIndex:828},{level:2,title:"Namespace",slug:"namespace",normalizedTitle:"namespace",charIndex:1163},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:1423},{level:2,title:"Revision",slug:"revision",normalizedTitle:"revision",charIndex:1727},{level:2,title:"Listeners",slug:"listeners",normalizedTitle:"listeners",charIndex:1945},{level:2,title:"Triggers",slug:"triggers",normalizedTitle:"triggers",charIndex:2261},{level:2,title:"Templates",slug:"templates",normalizedTitle:"templates",charIndex:2419}],lastUpdated:"9/25/2020, 7:43:22 PM",lastUpdatedTimestamp:1601063002e3,headersStr:"Task Flowable Task Runnable Task Namespace Inputs Revision Listeners Triggers Templates",content:"# Flow\n\nA flow is a list of task for Kestra. It defines all the behavior you want for the current flow. So, a flow is simple list of Task, group by namespace.\n\n\n# Task\n\nA Task is single action in a flow.\nA task is can optionally takes inputs, performs an action, and produces an optional outputs.\n\nThere is 2 kind of Task in Kestra :\n\n\n# Flowable Task\n\nFlowable Task are tasks only handle workflow state and trigger new tasks. It will handle the logic of the flow allowing doing complex workflow like branching, parallel tasks, ...\nA simple example is a Switch task that can take any inputs and decide witch are the next tasks to run (and allow branching).\n\nA Flowable Task is handled by Executors and can be called very often, so it can't run intensive computation.\n\nThe Most common Flowable Task will be keep in the core.\n\n\n# Runnable Task\n\nRunnable Task are here to handle any computation work. This can be anything like file systems operation, api call, database query, ... Theses tasks can be compute intensive since it will be\nhandle by Workers. By default, Kestra don't have a lot of RunnableTask and mostly all the tasks will be available as Plugins.\n\n\n# Namespace\n\nA namespace is a like a folder for file system. It aims to group flows in a limitless hierarchy.\nNamespace is compose by word and letters separated by .. The hierarchy depth is not limited and is free for Kestra users to fit their organization.\n\n\n# Inputs\n\nInputs are mandatory or optional parameters sent to a flow in order to be successfully run. It can be anythings (string, int, file, ...) to will be send when the execution is created. Flow must defined possible inputs and mandatory one will be validated before the creation of the execution.\n\n\n# Revision\n\nEach flow modification will produce a new revision, revision is a simple increments number that will update after each change of the flow. Internally Kestra will track and keep all revisions of the flow.\n\n\n# Listeners\n\nListeners are special task that can listen to the current flow and launch task outside of the flow.\nThe result of the tasks will not change the execution status. Mostly Listeners are here to send notification or handle special end task behaviour that you don't want to be considered as main workflow.\n\n\n# Triggers\n\nTriggers are way to start a flow with external events. For example, on a schedule date or waiting for some external events (like file creation)\n\n\n# Templates\n\nTemplates are list of tasks that can be shared between flows. You can define a template and call it from other flows allowing to share a list of tasks and keep these task updated without changing your flow.",normalizedContent:"# flow\n\na flow is a list of task for kestra. it defines all the behavior you want for the current flow. so, a flow is simple list of task, group by namespace.\n\n\n# task\n\na task is single action in a flow.\na task is can optionally takes inputs, performs an action, and produces an optional outputs.\n\nthere is 2 kind of task in kestra :\n\n\n# flowable task\n\nflowable task are tasks only handle workflow state and trigger new tasks. it will handle the logic of the flow allowing doing complex workflow like branching, parallel tasks, ...\na simple example is a switch task that can take any inputs and decide witch are the next tasks to run (and allow branching).\n\na flowable task is handled by executors and can be called very often, so it can't run intensive computation.\n\nthe most common flowable task will be keep in the core.\n\n\n# runnable task\n\nrunnable task are here to handle any computation work. this can be anything like file systems operation, api call, database query, ... theses tasks can be compute intensive since it will be\nhandle by workers. by default, kestra don't have a lot of runnabletask and mostly all the tasks will be available as plugins.\n\n\n# namespace\n\na namespace is a like a folder for file system. it aims to group flows in a limitless hierarchy.\nnamespace is compose by word and letters separated by .. the hierarchy depth is not limited and is free for kestra users to fit their organization.\n\n\n# inputs\n\ninputs are mandatory or optional parameters sent to a flow in order to be successfully run. it can be anythings (string, int, file, ...) to will be send when the execution is created. flow must defined possible inputs and mandatory one will be validated before the creation of the execution.\n\n\n# revision\n\neach flow modification will produce a new revision, revision is a simple increments number that will update after each change of the flow. internally kestra will track and keep all revisions of the flow.\n\n\n# listeners\n\nlisteners are special task that can listen to the current flow and launch task outside of the flow.\nthe result of the tasks will not change the execution status. mostly listeners are here to send notification or handle special end task behaviour that you don't want to be considered as main workflow.\n\n\n# triggers\n\ntriggers are way to start a flow with external events. for example, on a schedule date or waiting for some external events (like file creation)\n\n\n# templates\n\ntemplates are list of tasks that can be shared between flows. you can define a template and call it from other flows allowing to share a list of tasks and keep these task updated without changing your flow.",charsets:{}},{title:"Developer Guide",frontmatter:{order:4,meta:[{property:"article:modified_time",content:"2020-11-09T20:39:04.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Developer Guide"},{property:"og:description",content:"Developer Guide | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Developer Guide"},{name:"twitter:description",content:"Developer Guide | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/",relativePath:"docs/developer-guide/README.md",key:"v-477f7948",path:"/docs/developer-guide/",lastUpdated:"11/9/2020, 8:39:04 PM",lastUpdatedTimestamp:1604954344e3,headersStr:null,content:"# Developer Guide\n\nHere, you will find the necessary information in order to develop flows for Kestra.\n\nMore information :",normalizedContent:"# developer guide\n\nhere, you will find the necessary information in order to develop flows for kestra.\n\nmore information :",charsets:{}},{title:"Flow best practice",frontmatter:{order:12,meta:[{property:"article:modified_time",content:"2021-08-19T15:03:28.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Flow best practice"},{property:"og:description",content:"Flow best practice | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/best-practice/"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Flow best practice"},{name:"twitter:description",content:"Flow best practice | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/best-practice/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/best-practice/",relativePath:"docs/developer-guide/best-practice/README.md",key:"v-2bdad6a8",path:"/docs/developer-guide/best-practice/",headers:[{level:2,title:"Understand what is an execution internally for Kestra",slug:"understand-what-is-an-execution-internally-for-kestra",normalizedTitle:"understand what is an execution internally for kestra",charIndex:268},{level:2,title:"Task on the same execution",slug:"task-on-the-same-execution",normalizedTitle:"task on the same execution",charIndex:3193},{level:2,title:"Volume of data from your outputs",slug:"volume-of-data-from-your-outputs",normalizedTitle:"volume of data from your outputs",charIndex:4195},{level:2,title:"Parallel Task",slug:"parallel-task",normalizedTitle:"parallel task",charIndex:5049},{level:2,title:"Duration of Tasks",slug:"duration-of-tasks",normalizedTitle:"duration of tasks",charIndex:5441}],lastUpdated:"8/19/2021, 3:03:28 PM",lastUpdatedTimestamp:1629385408e3,headersStr:"Understand what is an execution internally for Kestra Task on the same execution Volume of data from your outputs Parallel Task Duration of Tasks",content:'# Flow best practice\n\nWhile Kestra allow you to create almost every kind of flow, there is some case that will be not working well or worst can break Kestra application.\nIn this section, we will describe the best way to create efficient flow and pattern to avoid.\n\n\n# Understand what is an execution internally for Kestra\n\nThe execution of a flow is an object that will contain :\n\n * all the TaskRun for this flow, with each having :\n   * theirs attempts, with each having :\n     * theirs metrics\n     * theirs state histories\n   * theirs outputs\n   * theirs state histories\n\nHere is an example of a taskRun :\n\n{\n  "id": "5cBZ1JF8kim8fbFg13bumX",\n  "executionId": "6s1egIkxu3gpzzILDnyxTn",\n  "namespace": "org.kestra.tests",\n  "flowId": "each-sequential-nested",\n  "taskId": "1-1_return",\n  "parentTaskRunId": "5ABxhOwhpd2X8DtwUPKERJ",\n  "value": "s1",\n  "attempts": [\n    {\n      "metrics": [\n        {\n          "name": "length",\n          "tags": {\n            "format": "{{task.id}} > {{taskrun.value}} ⬅ {{taskrun.startDate}}"\n          },\n          "value": 45.0,\n          "type": "counter"\n        },\n        {\n          "name": "duration",\n          "tags": {\n            "format": "{{task.id}} > {{taskrun.value}} ⬅ {{taskrun.startDate}}"\n          },\n          "type": "timer",\n          "value": "PT0.007213673S"\n        }\n      ],\n      "state": {\n        "current": "SUCCESS",\n        "histories": [\n          {\n            "state": "CREATED",\n            "date": "2021-05-04T12:02:54.121836Z"\n          },\n          {\n            "state": "RUNNING",\n            "date": "2021-05-04T12:02:54.121841Z"\n          },\n          {\n            "state": "SUCCESS",\n            "date": "2021-05-04T12:02:54.131892Z"\n          }\n        ],\n        "duration": "PT0.010056S",\n        "endDate": "2021-05-04T12:02:54.131892Z",\n        "startDate": "2021-05-04T12:02:54.121836Z"\n      }\n    }\n  ],\n  "outputs": {\n    "value": "1-1_return > s1 ⬅ 2021-05-04T12:02:53.938333Z"\n  },\n  "state": {\n    "current": "SUCCESS",\n    "histories": [\n      {\n        "state": "CREATED",\n        "date": "2021-05-04T12:02:53.938333Z"\n      },\n      {\n        "state": "RUNNING",\n        "date": "2021-05-04T12:02:54.116336Z"\n      },\n      {\n        "state": "SUCCESS",\n        "date": "2021-05-04T12:02:54.144135Z"\n      }\n    ],\n    "duration": "PT0.205802S",\n    "endDate": "2021-05-04T12:02:54.144135Z",\n    "startDate": "2021-05-04T12:02:53.938333Z"\n  }\n}\n\n\nInternally:\n\n * Each taskRun on a flow will be added on the same object that contains all task executed on this flow.\n * Each TaskRun status changed is read by Kestra Executor (at most 3 for a task = CREATED, RUNNING, SUCCESS)\n * For each state on Executor, we need\n   * to fetch over the network the serialized object\n   * deserialize the object, find the next tasks and serialized the execution object\n   * to send over network the serialized object\n * The bigger is the execution object, the longer it will take to handle this serialization phase.\n * Since we rely on Kafka for storing the object, Kafka have a size limit on message he could accept (default: 1MB). Larger message won\'t be accepted and will lead to FAILED the execution\n\n\n# Task on the same execution\n\nBased on previous observation, here is some recommandation to avoid these case :\n\nWhile it\'s possible to code a flow with many tasks, it\'s not recommended having a lot of tasks on the same flow.\n\nIt can be manually generated tasks or dynamic one. While EachSequential & EachParallel are really powerful task in order to loop over result of a previous task, there is some drawback. If the task you are looping over is too big, you can easily create hundreds of tasks. Or if you using a pattern with Each inside Each (nested looping), you just need to create a 20 taskRuns X 20 taskRuns to reach 400 taskRuns.\n\nWARNING\n\nBased on our observation, we see that more than 100 tasks on a flow, we see a decreased of performance and longer execution.\n\nTo avoid reaching this limits, you can easily create a sub flow with Flow passing argument from parent ot child. In this case, since Flow create a new execution, the sub flow tasks will be isolated and won\'t hurt performance.\n\n\n# Volume of data from your outputs\n\nSome tasks allow you to fetch some result on outputs in order to be reuse on next tasks.\nWhile this is powerful, this is not intended to be used to transport a lot of data!\nExample with Query from BigQuery, there is a parameter fetch that allow to fetch a resultset as output.\n\nImagine a big table with many mo / go of datas, if you use fetch, the outputs will be on the execution object and will be need to be serialized on each task state change. This is not the idea behind fetch, this one serve mostly to query fews rows in order use it on a Switch or a EachParallel to loop over.\n\nTIP\n\nIn most of the case, there is a conter properties called mostly store that can handle a large volume of data since this one will be storage as file in Kestra storage and only the url of this file will be available as output.\n\n\n# Parallel Task\n\nUsing EachParallel & Parallel is a convenient way to optimize flow duration, but keep in mind by default, all the tasks are launched at the same time (unless you specify the concurrent properties). The only limit will be the number of worker thread you have configured.\nKeep this in mind, because you can\'t reach limit of external systems like connection limits or quotas.\n\n\n# Duration of Tasks\n\nBy default, Kestra never limit the duration (unless specify explicity on the tasks documentation) of the tasks. If you have a long running process or an infinite loop, the tasks will never end. We can control the timeout on RunnableTask with properties timeout: PT15M',normalizedContent:'# flow best practice\n\nwhile kestra allow you to create almost every kind of flow, there is some case that will be not working well or worst can break kestra application.\nin this section, we will describe the best way to create efficient flow and pattern to avoid.\n\n\n# understand what is an execution internally for kestra\n\nthe execution of a flow is an object that will contain :\n\n * all the taskrun for this flow, with each having :\n   * theirs attempts, with each having :\n     * theirs metrics\n     * theirs state histories\n   * theirs outputs\n   * theirs state histories\n\nhere is an example of a taskrun :\n\n{\n  "id": "5cbz1jf8kim8fbfg13bumx",\n  "executionid": "6s1egikxu3gpzzildnyxtn",\n  "namespace": "org.kestra.tests",\n  "flowid": "each-sequential-nested",\n  "taskid": "1-1_return",\n  "parenttaskrunid": "5abxhowhpd2x8dtwupkerj",\n  "value": "s1",\n  "attempts": [\n    {\n      "metrics": [\n        {\n          "name": "length",\n          "tags": {\n            "format": "{{task.id}} > {{taskrun.value}} ⬅ {{taskrun.startdate}}"\n          },\n          "value": 45.0,\n          "type": "counter"\n        },\n        {\n          "name": "duration",\n          "tags": {\n            "format": "{{task.id}} > {{taskrun.value}} ⬅ {{taskrun.startdate}}"\n          },\n          "type": "timer",\n          "value": "pt0.007213673s"\n        }\n      ],\n      "state": {\n        "current": "success",\n        "histories": [\n          {\n            "state": "created",\n            "date": "2021-05-04t12:02:54.121836z"\n          },\n          {\n            "state": "running",\n            "date": "2021-05-04t12:02:54.121841z"\n          },\n          {\n            "state": "success",\n            "date": "2021-05-04t12:02:54.131892z"\n          }\n        ],\n        "duration": "pt0.010056s",\n        "enddate": "2021-05-04t12:02:54.131892z",\n        "startdate": "2021-05-04t12:02:54.121836z"\n      }\n    }\n  ],\n  "outputs": {\n    "value": "1-1_return > s1 ⬅ 2021-05-04t12:02:53.938333z"\n  },\n  "state": {\n    "current": "success",\n    "histories": [\n      {\n        "state": "created",\n        "date": "2021-05-04t12:02:53.938333z"\n      },\n      {\n        "state": "running",\n        "date": "2021-05-04t12:02:54.116336z"\n      },\n      {\n        "state": "success",\n        "date": "2021-05-04t12:02:54.144135z"\n      }\n    ],\n    "duration": "pt0.205802s",\n    "enddate": "2021-05-04t12:02:54.144135z",\n    "startdate": "2021-05-04t12:02:53.938333z"\n  }\n}\n\n\ninternally:\n\n * each taskrun on a flow will be added on the same object that contains all task executed on this flow.\n * each taskrun status changed is read by kestra executor (at most 3 for a task = created, running, success)\n * for each state on executor, we need\n   * to fetch over the network the serialized object\n   * deserialize the object, find the next tasks and serialized the execution object\n   * to send over network the serialized object\n * the bigger is the execution object, the longer it will take to handle this serialization phase.\n * since we rely on kafka for storing the object, kafka have a size limit on message he could accept (default: 1mb). larger message won\'t be accepted and will lead to failed the execution\n\n\n# task on the same execution\n\nbased on previous observation, here is some recommandation to avoid these case :\n\nwhile it\'s possible to code a flow with many tasks, it\'s not recommended having a lot of tasks on the same flow.\n\nit can be manually generated tasks or dynamic one. while eachsequential & eachparallel are really powerful task in order to loop over result of a previous task, there is some drawback. if the task you are looping over is too big, you can easily create hundreds of tasks. or if you using a pattern with each inside each (nested looping), you just need to create a 20 taskruns x 20 taskruns to reach 400 taskruns.\n\nwarning\n\nbased on our observation, we see that more than 100 tasks on a flow, we see a decreased of performance and longer execution.\n\nto avoid reaching this limits, you can easily create a sub flow with flow passing argument from parent ot child. in this case, since flow create a new execution, the sub flow tasks will be isolated and won\'t hurt performance.\n\n\n# volume of data from your outputs\n\nsome tasks allow you to fetch some result on outputs in order to be reuse on next tasks.\nwhile this is powerful, this is not intended to be used to transport a lot of data!\nexample with query from bigquery, there is a parameter fetch that allow to fetch a resultset as output.\n\nimagine a big table with many mo / go of datas, if you use fetch, the outputs will be on the execution object and will be need to be serialized on each task state change. this is not the idea behind fetch, this one serve mostly to query fews rows in order use it on a switch or a eachparallel to loop over.\n\ntip\n\nin most of the case, there is a conter properties called mostly store that can handle a large volume of data since this one will be storage as file in kestra storage and only the url of this file will be available as output.\n\n\n# parallel task\n\nusing eachparallel & parallel is a convenient way to optimize flow duration, but keep in mind by default, all the tasks are launched at the same time (unless you specify the concurrent properties). the only limit will be the number of worker thread you have configured.\nkeep this in mind, because you can\'t reach limit of external systems like connection limits or quotas.\n\n\n# duration of tasks\n\nby default, kestra never limit the duration (unless specify explicity on the tasks documentation) of the tasks. if you have a long running process or an infinite loop, the tasks will never end. we can control the timeout on runnabletask with properties timeout: pt15m',charsets:{}},{title:"Conditions",frontmatter:{order:7,meta:[{property:"article:modified_time",content:"2021-03-26T21:33:01.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Conditions"},{property:"og:description",content:"Conditions | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/conditions/"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Conditions"},{name:"twitter:description",content:"Conditions | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/conditions/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/conditions/",relativePath:"docs/developer-guide/conditions/README.md",key:"v-587c915c",path:"/docs/developer-guide/conditions/",lastUpdated:"3/26/2021, 9:33:01 PM",lastUpdatedTimestamp:1616794381e3,headersStr:null,content:"# Conditions\n\nConditions are use in Triggers & Listeners in order to limit the case this one could happen.\nFor example:\n\n * you can limit the listeners to only specified status\n * you can limit triggers to specified namespace prefix\n * ....\n\nYou can pass a list of conditions and all the conditions must match to enable the current action.\n\nAvailable condition are :\n\n * ExecutionFlowCondition\n * ExecutionNamespaceCondition\n * ExecutionStatusCondition\n * FlowCondition\n * FlowNamespaceCondition\n * VariableCondition",normalizedContent:"# conditions\n\nconditions are use in triggers & listeners in order to limit the case this one could happen.\nfor example:\n\n * you can limit the listeners to only specified status\n * you can limit triggers to specified namespace prefix\n * ....\n\nyou can pass a list of conditions and all the conditions must match to enable the current action.\n\navailable condition are :\n\n * executionflowcondition\n * executionnamespacecondition\n * executionstatuscondition\n * flowcondition\n * flownamespacecondition\n * variablecondition",charsets:{}},{title:"Document your flow",frontmatter:{order:11,meta:[{property:"article:modified_time",content:"2020-11-03T13:38:34.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Document your flow"},{property:"og:description",content:"Document your flow | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/documentation/"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Document your flow"},{name:"twitter:description",content:"Document your flow | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/documentation/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/documentation/",relativePath:"docs/developer-guide/documentation/README.md",key:"v-5a7b3ee8",path:"/docs/developer-guide/documentation/",lastUpdated:"11/3/2020, 1:38:34 PM",lastUpdatedTimestamp:1604410714e3,headersStr:null,content:"# Document your flow\n\nYou can document from flow, task, ... in order to explain what is the goal of the current element.\n\nFor this, Kestra allow to add a description attribute where you can write some documentation of the current element.\nDescription must be written on Markdown.\n\nYou can add description attribute on :\n\n * Flow\n * Task\n * Listeners\n * Triggers\n\nAll description will be visible on the ui :\n\n\n\n\n\n",normalizedContent:"# document your flow\n\nyou can document from flow, task, ... in order to explain what is the goal of the current element.\n\nfor this, kestra allow to add a description attribute where you can write some documentation of the current element.\ndescription must be written on markdown.\n\nyou can add description attribute on :\n\n * flow\n * task\n * listeners\n * triggers\n\nall description will be visible on the ui :\n\n\n\n\n\n",charsets:{}},{title:"Errors handling",frontmatter:{order:5,meta:[{property:"article:modified_time",content:"2021-03-26T21:33:01.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Errors handling"},{property:"og:description",content:"Errors handling | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/errors-handling/"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Errors handling"},{name:"twitter:description",content:"Errors handling | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/errors-handling/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/errors-handling/",relativePath:"docs/developer-guide/errors-handling/README.md",key:"v-550d8c48",path:"/docs/developer-guide/errors-handling/",headers:[{level:2,title:"Global Error",slug:"global-error",normalizedTitle:"global error",charIndex:326},{level:2,title:"Local Error",slug:"local-error",normalizedTitle:"local error",charIndex:718}],lastUpdated:"3/26/2021, 9:33:01 PM",lastUpdatedTimestamp:1616794381e3,headersStr:"Global Error Local Error",content:'# Errors handling\n\nErrors are special branch of your flow, where you can define how to handle it if any task failed.\n\n2 kinds of errors can be defined :\n\n * Global: for the flow and must be at root of the flow.\n * Local: that is available for all Flowable Task, that allow to be only for this tasks and all theirs childs.\n\n\n# Global Error\n\nThis example processes a task which fails immediately. Then a tasks sequence is processed in the error branch of the flow.\n\nid: errors\nnamespace: io.kestra.tests\n\ntasks:\n  - id: failed\n    type: io.kestra.core.tasks.scripts.Bash\n    commands:\n      - exit 1\nerrors:\n  - id: 2nd\n    type: io.kestra.core.tasks.debugs.Echo\n    format: I\'m failing {{task.id}}\n    level: INFO\n\n\n\n# Local Error\n\nIn this case, the error branch will be used only if all childs of task t2 have an errors.\nIn this specific example, if the task t1 failed, no errors will be used. This is really usefull to do some cleanup of resource for this tasks only.\n\nid: errors\nnamespace: io.kestra.tests\n\ntasks:\n  - id: parent-seq\n    type: io.kestra.core.tasks.flows.Sequential\n    tasks:\n      - id: t1\n        type: io.kestra.core.tasks.debugs.Return\n        format: "{{task.id}} > {{taskrun.startDate}}"\n      - id: t2\n        type: io.kestra.core.tasks.flows.Sequential\n        tasks:\n          - id: t2-t1\n            type: io.kestra.core.tasks.scripts.Bash\n            commands:\n              - \'exit 1\'\n        errors:\n          - id: error-t1\n            type: io.kestra.core.tasks.debugs.Return\n            format: "Error Trigger ! {{task.id}}"\n',normalizedContent:'# errors handling\n\nerrors are special branch of your flow, where you can define how to handle it if any task failed.\n\n2 kinds of errors can be defined :\n\n * global: for the flow and must be at root of the flow.\n * local: that is available for all flowable task, that allow to be only for this tasks and all theirs childs.\n\n\n# global error\n\nthis example processes a task which fails immediately. then a tasks sequence is processed in the error branch of the flow.\n\nid: errors\nnamespace: io.kestra.tests\n\ntasks:\n  - id: failed\n    type: io.kestra.core.tasks.scripts.bash\n    commands:\n      - exit 1\nerrors:\n  - id: 2nd\n    type: io.kestra.core.tasks.debugs.echo\n    format: i\'m failing {{task.id}}\n    level: info\n\n\n\n# local error\n\nin this case, the error branch will be used only if all childs of task t2 have an errors.\nin this specific example, if the task t1 failed, no errors will be used. this is really usefull to do some cleanup of resource for this tasks only.\n\nid: errors\nnamespace: io.kestra.tests\n\ntasks:\n  - id: parent-seq\n    type: io.kestra.core.tasks.flows.sequential\n    tasks:\n      - id: t1\n        type: io.kestra.core.tasks.debugs.return\n        format: "{{task.id}} > {{taskrun.startdate}}"\n      - id: t2\n        type: io.kestra.core.tasks.flows.sequential\n        tasks:\n          - id: t2-t1\n            type: io.kestra.core.tasks.scripts.bash\n            commands:\n              - \'exit 1\'\n        errors:\n          - id: error-t1\n            type: io.kestra.core.tasks.debugs.return\n            format: "error trigger ! {{task.id}}"\n',charsets:{}},{title:"Flow",frontmatter:{order:1,meta:[{property:"article:modified_time",content:"2021-09-27T11:54:27.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Flow"},{property:"og:description",content:"Flow | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/flow/"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Flow"},{name:"twitter:description",content:"Flow | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/flow/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/flow/",relativePath:"docs/developer-guide/flow/README.md",key:"v-8488a8b4",path:"/docs/developer-guide/flow/",headers:[{level:2,title:"Flow sample",slug:"flow-sample",normalizedTitle:"flow sample",charIndex:108},{level:2,title:"Flow Properties",slug:"flow-properties",normalizedTitle:"flow properties",charIndex:362}],lastUpdated:"9/27/2021, 11:54:27 AM",lastUpdatedTimestamp:1632743667e3,headersStr:"Flow sample Flow Properties",content:'# Flow\n\n> Flow is the base of your workload, it defined all the tasks you want to do and theirs orders.\n\n\n# Flow sample\n\nThe flow model is a yaml document describing how Kestra will schedule and compute your workload.\n\nHere is a full sample flow demonstrating the flow definition.\nThe following code is a sample existing task in Kestra for testing purposes.\n\n\n# Flow Properties\n\nid: samples\nnamespace: io.kestra.tests\nrevision: 8\n\ndescription: "Some flow **documentation** in *Markdown*"\n\ninputs:\n  - name: my-value\n    type: STRING\n    required: false\n    defaults: "default value"\n    description: This is a not required my-value\n\nvariables:\n  first: "1"\n  second: "{{vars.first}} > 2"\n  third: "{{vars.second}} > 3"\n\ntasks:\n  - id: date\n    type: io.kestra.core.tasks.debugs.Return\n    description: "Some tasks **documentation** in *Markdown*"\n    disabled: false\n    format: "A log line content with a contextual date variable {{taskrun.startDate}}"\n\nerrors:\n  - id: failed-echo\n    type: io.kestra.core.tasks.debugs.Echo\n    format: I\'m failing {{task.id}}\n\nlisteners:\n  - description: "some listener **documentation** in *Markdown*"\n    conditions:\n      - type: io.kestra.core.models.conditions.types.ExecutionStatusCondition\n        in:\n          - SUCCESS\n    tasks:\n      - id: execution-failed-listener\n        type: io.kestra.core.tasks.scripts.Bash\n        commands:\n          - echo "I\'m a listeners"\n\ntriggers:\n  - id: monthly\n    type: io.kestra.core.models.triggers.types.Schedule\n    description: "some trigger **documentation** in *Markdown*"\n    cron: 0 0 1 * *\n    backfill:\n      start: 2020-01-01T00:00:00+02:00\n\ntaskDefaults:\n  - type: io.kestra.core.tasks.debugs.Echo\n    level: ERROR\n\n\nFIELD                        DESCRIPTION\nid                           Flow identifier, must be unique across namespaces.\nnamespace                    Each task live in one arbitrary namespace, this is useful\n                             for task organisation. Namespace is required.\nrevision                     Flow version, handle internally by kestra, and will be\n                             incremented for each modifications save, not required since\n                             autogenerated.\ndescription                  Description for documentation, more details here\ninputs                       List of inputs for current flow, more details here\ninputs.[].name               The name for this inputs, allowing to use it as vars on the\n                             current flow\ninputs.[].type               The type for this inputs, for example (STRING, FILE, ...)\ninputs.[].required           If the input is required (and prevent flow to be executed\n                             without this input\ninputs.[].defaults           The default value of the input if no value is provided\ninputs.[].description        Description for documentation, more details here\nvariables                    A list of variables (as key, value) for the current flow\n                             that can be reach with {{ vars.name }}\ntasks                        A list of related tasks the current flow, all tasks will be\n                             run sequentially.\ntasks.[].id                  The task id that must be unique for current flow.\ntasks.[].type                The task type that is a full java class name.\ntasks.[].description         Description for documentation, more details here\ntasks.[].disabled            Disabled this task, will be keep on flow source, but never\n                             executed.\ntasks.[].timeout             Max duration of the current task, in a Duration format like\n                             PT15M.\ntasks.[].xxx                 Each task type come with specific specific field that is\n                             documented on plugins page\nerrors                       A list of errors tasks the current flow, all tasks will be\n                             run sequentially and will be run only if there is any error\n                             on the current execution.\nerrors.[].xxx                The same property as tasks, error can be any normal tasks,\n                             more details here\nlisteners                    List of listeners for current flow, more details here\nlisteners.[].description     Description for documentation, more details here\nlisteners.[].condition       The condition that will be valided in order to launch or\n                             skip this listeners\nlisteners.[].tasks.[].xxx    The same property as tasks, the task to run for this\n                             listeners\ntriggers                     Triggers are external events (like date for example) to\n                             launch this jobs,more details here\ntriggers.[].id               The trigger id that must be unique and can\'t be updated.\ntriggers.[].type             The trigger type that is a full java class name.\ntriggers.[].description      Description for documentation, more details here\ntriggers.[].xxx              Like task, each trigger have theirs properties\ntaskDefaults                 Default value for current tasks, in order to avoid repeat\n                             the same properties on each tasks\ntaskDefaults.[].type         The task type that is a full java class name.\ntaskDefaults.[].forced       Is the default value are forced or not, meaning the\n                             taskDefault will always overwrite the user properties on\n                             task (default false).\ntaskDefaults.[].values.xxx   The properties (same than task) that you want to be default',normalizedContent:'# flow\n\n> flow is the base of your workload, it defined all the tasks you want to do and theirs orders.\n\n\n# flow sample\n\nthe flow model is a yaml document describing how kestra will schedule and compute your workload.\n\nhere is a full sample flow demonstrating the flow definition.\nthe following code is a sample existing task in kestra for testing purposes.\n\n\n# flow properties\n\nid: samples\nnamespace: io.kestra.tests\nrevision: 8\n\ndescription: "some flow **documentation** in *markdown*"\n\ninputs:\n  - name: my-value\n    type: string\n    required: false\n    defaults: "default value"\n    description: this is a not required my-value\n\nvariables:\n  first: "1"\n  second: "{{vars.first}} > 2"\n  third: "{{vars.second}} > 3"\n\ntasks:\n  - id: date\n    type: io.kestra.core.tasks.debugs.return\n    description: "some tasks **documentation** in *markdown*"\n    disabled: false\n    format: "a log line content with a contextual date variable {{taskrun.startdate}}"\n\nerrors:\n  - id: failed-echo\n    type: io.kestra.core.tasks.debugs.echo\n    format: i\'m failing {{task.id}}\n\nlisteners:\n  - description: "some listener **documentation** in *markdown*"\n    conditions:\n      - type: io.kestra.core.models.conditions.types.executionstatuscondition\n        in:\n          - success\n    tasks:\n      - id: execution-failed-listener\n        type: io.kestra.core.tasks.scripts.bash\n        commands:\n          - echo "i\'m a listeners"\n\ntriggers:\n  - id: monthly\n    type: io.kestra.core.models.triggers.types.schedule\n    description: "some trigger **documentation** in *markdown*"\n    cron: 0 0 1 * *\n    backfill:\n      start: 2020-01-01t00:00:00+02:00\n\ntaskdefaults:\n  - type: io.kestra.core.tasks.debugs.echo\n    level: error\n\n\nfield                        description\nid                           flow identifier, must be unique across namespaces.\nnamespace                    each task live in one arbitrary namespace, this is useful\n                             for task organisation. namespace is required.\nrevision                     flow version, handle internally by kestra, and will be\n                             incremented for each modifications save, not required since\n                             autogenerated.\ndescription                  description for documentation, more details here\ninputs                       list of inputs for current flow, more details here\ninputs.[].name               the name for this inputs, allowing to use it as vars on the\n                             current flow\ninputs.[].type               the type for this inputs, for example (string, file, ...)\ninputs.[].required           if the input is required (and prevent flow to be executed\n                             without this input\ninputs.[].defaults           the default value of the input if no value is provided\ninputs.[].description        description for documentation, more details here\nvariables                    a list of variables (as key, value) for the current flow\n                             that can be reach with {{ vars.name }}\ntasks                        a list of related tasks the current flow, all tasks will be\n                             run sequentially.\ntasks.[].id                  the task id that must be unique for current flow.\ntasks.[].type                the task type that is a full java class name.\ntasks.[].description         description for documentation, more details here\ntasks.[].disabled            disabled this task, will be keep on flow source, but never\n                             executed.\ntasks.[].timeout             max duration of the current task, in a duration format like\n                             pt15m.\ntasks.[].xxx                 each task type come with specific specific field that is\n                             documented on plugins page\nerrors                       a list of errors tasks the current flow, all tasks will be\n                             run sequentially and will be run only if there is any error\n                             on the current execution.\nerrors.[].xxx                the same property as tasks, error can be any normal tasks,\n                             more details here\nlisteners                    list of listeners for current flow, more details here\nlisteners.[].description     description for documentation, more details here\nlisteners.[].condition       the condition that will be valided in order to launch or\n                             skip this listeners\nlisteners.[].tasks.[].xxx    the same property as tasks, the task to run for this\n                             listeners\ntriggers                     triggers are external events (like date for example) to\n                             launch this jobs,more details here\ntriggers.[].id               the trigger id that must be unique and can\'t be updated.\ntriggers.[].type             the trigger type that is a full java class name.\ntriggers.[].description      description for documentation, more details here\ntriggers.[].xxx              like task, each trigger have theirs properties\ntaskdefaults                 default value for current tasks, in order to avoid repeat\n                             the same properties on each tasks\ntaskdefaults.[].type         the task type that is a full java class name.\ntaskdefaults.[].forced       is the default value are forced or not, meaning the\n                             taskdefault will always overwrite the user properties on\n                             task (default false).\ntaskdefaults.[].values.xxx   the properties (same than task) that you want to be default',charsets:{}},{title:"Flowable Task",frontmatter:{order:2,meta:[{property:"article:modified_time",content:"2021-11-23T08:57:12.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Flowable Task"},{property:"og:description",content:"Flowable Task | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/flowable/"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Flowable Task"},{name:"twitter:description",content:"Flowable Task | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/flowable/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/flowable/",relativePath:"docs/developer-guide/flowable/README.md",key:"v-2a1991f2",path:"/docs/developer-guide/flowable/",headers:[{level:2,title:"Sequential",slug:"sequential",normalizedTitle:"sequential",charIndex:421},{level:2,title:"Parallel",slug:"parallel",normalizedTitle:"parallel",charIndex:1031},{level:2,title:"Switch",slug:"switch",normalizedTitle:"switch",charIndex:339},{level:2,title:"EachSequential",slug:"eachsequential",normalizedTitle:"eachsequential",charIndex:2581},{level:2,title:"EachParallel",slug:"eachparallel",normalizedTitle:"eachparallel",charIndex:3438},{level:2,title:"AllowFailure",slug:"allowfailure",normalizedTitle:"allowfailure",charIndex:4173},{level:2,title:"Flow",slug:"flow",normalizedTitle:"flow",charIndex:2},{level:2,title:"Templates",slug:"templates",normalizedTitle:"templates",charIndex:5644}],lastUpdated:"11/23/2021, 8:57:12 AM",lastUpdatedTimestamp:1637657832e3,headersStr:"Sequential Parallel Switch EachSequential EachParallel AllowFailure Flow Templates",content:'# Flowable Task\n\nIn kestra, we orchestrate your workflow with Flowable Tasks. These tasks don\'t compute any things but allow you to build more complex workflow.\nLike branching, doing tasks in parallel, ...\n\nFlowable mostly use context with variables in order to define next tasks.\nFor example, you can use the outputs of a variables to do Switch to defined the next tasks.\n\nHere is the current list of Flowable Tasks\n\n\n# Sequential\n\nThis flow processes tasks ones after others sequentially.\nMostly use in order to group tasks.\n\nid: sequential\nnamespace: io.kestra.tests\n\ntasks:\n  - id: sequential\n    type: io.kestra.core.tasks.flows.Sequential\n    tasks:\n      - id: 1st\n        type: io.kestra.core.tasks.debugs.Return\n        format: "{{task.id}} > {{taskrun.startDate}}"\n      - id: 2nd\n        type: io.kestra.core.tasks.debugs.Return\n        format: "{{task.id}} > {{taskrun.id}}"\n  - id: last\n    type: io.kestra.core.tasks.debugs.Return\n    format: "{{task.id}} > {{taskrun.startDate}}"\n\n\nSequential Task documentation\n\n\n# Parallel\n\nThis flow processes tasks in parallel. It makes it convinient to process many tasks at once.\n\nid: parallel\nnamespace: io.kestra.tests\n\ntasks:\n  - id: parallel\n    type: io.kestra.core.tasks.flows.Parallel\n    tasks:\n      - id: 1st\n        type: io.kestra.core.tasks.debugs.Return\n        format: "{{task.id}} > {{taskrun.startDate}}"\n      - id: 2nd\n        type: io.kestra.core.tasks.debugs.Return\n        format: "{{task.id}} > {{taskrun.id}}"\n  - id: last\n    type: io.kestra.core.tasks.debugs.Return\n    format: "{{task.id}} > {{taskrun.startDate}}"\n\n\nParallel Task documentation\n\n\n# Switch\n\nThis flow processes some tasks conditionnaly depending on a contextual value.\nIn this case, an input value will trigger only some parts of the flow.\n\nid: switch\nnamespace: io.kestra.tests\n\ninputs:\n  - name: string\n    type: STRING\n    required: true\n\ntasks:\n  - id: switch\n    type: io.kestra.core.tasks.flows.Switch\n    value: "{{inputs.string}}"\n    cases:\n      FIRST:\n        - id: 1st\n          type: io.kestra.core.tasks.debugs.Return\n          format: "{{task.id}} > {{taskrun.startDate}}"\n      SECOND:\n        - id: 2nd\n          type: io.kestra.core.tasks.debugs.Return\n          format: "{{task.id}} > {{taskrun.startDate}}"\n      THIRD:\n        - id: 3th\n          type: io.kestra.core.tasks.debugs.Return\n          format: "{{task.id}} > {{taskrun.startDate}}"\n    defaults:\n      - id: default\n        type: io.kestra.core.tasks.debugs.Return\n        format: "{{task.id}} > {{taskrun.startDate}}"\n\n\nSwitch Task documentation\n\n\n# EachSequential\n\nThis flow will generate many tasks at runtime depending on a value field.\nHere this field is static, but it can be generated from a previous task output and\ntrigger an arbitrary number of subtasks. Each subtask will run after others sequentially.\n\nid: each\nnamespace: io.kestra.tests\n\ntasks:\n  - id: each\n    type: io.kestra.core.tasks.flows.EachSequential\n    value: \'["value 1", "value 2", "value 3"]\'\n    tasks:\n      - id: 1st\n        type: io.kestra.core.tasks.debugs.Return\n        format: "{{task.id}} > {{taskrun.value}} > {{taskrun.startDate}}"\n      - id: 2nd\n        type: io.kestra.core.tasks.debugs.Return\n        format: "{{task.id}} > {{taskrun.value}} > {{taskrun.startDate}}"\n  - id: last\n    type: io.kestra.core.tasks.debugs.Return\n    format: "{{task.id}} > {{taskrun.startDate}}"\n\n\nEachSequential Task documentation\n\n\n# EachParallel\n\nThis flow is the same as EachSequential but each subtask will run after in parallel.\n\nid: each-parallel\nnamespace: io.kestra.tests\n\ntasks:\n  - id: 1_each\n    type: io.kestra.core.tasks.flows.EachParallel\n    value: \'["value 1", "value 2", "value 3"]\'\n    tasks:\n      - id: 1-1\n        type: io.kestra.core.tasks.scripts.Bash\n        commands:\n          - \'echo "{{task.id}} > $(date +"%T.%N")"\'\n          - \'sleep 1\'\n      - id: 1-2\n        type: io.kestra.core.tasks.scripts.Bash\n        commands:\n          - \'echo "{{task.id}} > $(date +"%T.%N")"\'\n          - \'sleep 1\'\n  - id: 2_end\n    type: io.kestra.core.tasks.debugs.Return\n    format: "{{task.id}} > {{taskrun.startDate}}"\n\n\nEachParallel Task documentation\n\n\n# AllowFailure\n\nThis task will allow a failed child task. If any child task failed:\n\n * AllowFailure will be marked as WARNING\n * All children task inside the AllowFailure will be stopped immediately\n * The execution will continue for all others tasks.\n * at the end, the execution will be also marked as status WARNING\n\nIn this example:\n\n * allow-failure will WARNING\n * ko will be FAILED\n * next will not be run\n * end will be run and SUCCESS\n\nid: each\nnamespace: io.kestra.tests\n\ntasks:\n  - id: allow-failure\n    type: io.kestra.core.tasks.flows.AllowFailure\n    tasks:\n      - id: ko\n        type: io.kestra.core.tasks.scripts.Bash\n        commands:\n          - \'exit 1\'\n      - id: next\n        type: io.kestra.core.tasks.debugs.Return\n        format: "{{task.id}} > {{taskrun.startDate}}"\n  - id: end\n    type: io.kestra.core.tasks.debugs.Return\n    format: "{{task.id}} > {{taskrun.startDate}}"\n\n\nAllowFailure Task documentation\n\n\n# Flow\n\nThis flow will trigger another one.\nThis allows to decouple the first one from the second one and to monitor each flows individually.\n\nYou can pass outputs to the trigger flow as inputs (that you need to declare in the subflow).\n\nid: subflow\nnamespace: io.kestra.tests\n\ninputs:\n  - name: myFile\n    type: FILE\n\ntasks:\n  - id: "subflow"\n    type: io.kestra.core.tasks.flows.Flow\n    namespace: io.kestra.tests\n    flowId: my-sub-flows\n    inputs:\n      file: "{{ inputs.myFile\' }}"\n      store: 12\n\n\nFlow Task documentation\n\n\n# Templates\n\nTemplates are a special task that will include task from a template at runtime.\nYou defined the template and can use on every flow you want, allowing to share the common tasks between your flows.\n\nid: template\nnamespace: io.kestra.tests\n\ntasks:\n  - id: template\n    type: io.kestra.core.tasks.flows.Template\n    namespace: io.kestra.tests\n    templateId: template\n\n\nTemplate Task documentation',normalizedContent:'# flowable task\n\nin kestra, we orchestrate your workflow with flowable tasks. these tasks don\'t compute any things but allow you to build more complex workflow.\nlike branching, doing tasks in parallel, ...\n\nflowable mostly use context with variables in order to define next tasks.\nfor example, you can use the outputs of a variables to do switch to defined the next tasks.\n\nhere is the current list of flowable tasks\n\n\n# sequential\n\nthis flow processes tasks ones after others sequentially.\nmostly use in order to group tasks.\n\nid: sequential\nnamespace: io.kestra.tests\n\ntasks:\n  - id: sequential\n    type: io.kestra.core.tasks.flows.sequential\n    tasks:\n      - id: 1st\n        type: io.kestra.core.tasks.debugs.return\n        format: "{{task.id}} > {{taskrun.startdate}}"\n      - id: 2nd\n        type: io.kestra.core.tasks.debugs.return\n        format: "{{task.id}} > {{taskrun.id}}"\n  - id: last\n    type: io.kestra.core.tasks.debugs.return\n    format: "{{task.id}} > {{taskrun.startdate}}"\n\n\nsequential task documentation\n\n\n# parallel\n\nthis flow processes tasks in parallel. it makes it convinient to process many tasks at once.\n\nid: parallel\nnamespace: io.kestra.tests\n\ntasks:\n  - id: parallel\n    type: io.kestra.core.tasks.flows.parallel\n    tasks:\n      - id: 1st\n        type: io.kestra.core.tasks.debugs.return\n        format: "{{task.id}} > {{taskrun.startdate}}"\n      - id: 2nd\n        type: io.kestra.core.tasks.debugs.return\n        format: "{{task.id}} > {{taskrun.id}}"\n  - id: last\n    type: io.kestra.core.tasks.debugs.return\n    format: "{{task.id}} > {{taskrun.startdate}}"\n\n\nparallel task documentation\n\n\n# switch\n\nthis flow processes some tasks conditionnaly depending on a contextual value.\nin this case, an input value will trigger only some parts of the flow.\n\nid: switch\nnamespace: io.kestra.tests\n\ninputs:\n  - name: string\n    type: string\n    required: true\n\ntasks:\n  - id: switch\n    type: io.kestra.core.tasks.flows.switch\n    value: "{{inputs.string}}"\n    cases:\n      first:\n        - id: 1st\n          type: io.kestra.core.tasks.debugs.return\n          format: "{{task.id}} > {{taskrun.startdate}}"\n      second:\n        - id: 2nd\n          type: io.kestra.core.tasks.debugs.return\n          format: "{{task.id}} > {{taskrun.startdate}}"\n      third:\n        - id: 3th\n          type: io.kestra.core.tasks.debugs.return\n          format: "{{task.id}} > {{taskrun.startdate}}"\n    defaults:\n      - id: default\n        type: io.kestra.core.tasks.debugs.return\n        format: "{{task.id}} > {{taskrun.startdate}}"\n\n\nswitch task documentation\n\n\n# eachsequential\n\nthis flow will generate many tasks at runtime depending on a value field.\nhere this field is static, but it can be generated from a previous task output and\ntrigger an arbitrary number of subtasks. each subtask will run after others sequentially.\n\nid: each\nnamespace: io.kestra.tests\n\ntasks:\n  - id: each\n    type: io.kestra.core.tasks.flows.eachsequential\n    value: \'["value 1", "value 2", "value 3"]\'\n    tasks:\n      - id: 1st\n        type: io.kestra.core.tasks.debugs.return\n        format: "{{task.id}} > {{taskrun.value}} > {{taskrun.startdate}}"\n      - id: 2nd\n        type: io.kestra.core.tasks.debugs.return\n        format: "{{task.id}} > {{taskrun.value}} > {{taskrun.startdate}}"\n  - id: last\n    type: io.kestra.core.tasks.debugs.return\n    format: "{{task.id}} > {{taskrun.startdate}}"\n\n\neachsequential task documentation\n\n\n# eachparallel\n\nthis flow is the same as eachsequential but each subtask will run after in parallel.\n\nid: each-parallel\nnamespace: io.kestra.tests\n\ntasks:\n  - id: 1_each\n    type: io.kestra.core.tasks.flows.eachparallel\n    value: \'["value 1", "value 2", "value 3"]\'\n    tasks:\n      - id: 1-1\n        type: io.kestra.core.tasks.scripts.bash\n        commands:\n          - \'echo "{{task.id}} > $(date +"%t.%n")"\'\n          - \'sleep 1\'\n      - id: 1-2\n        type: io.kestra.core.tasks.scripts.bash\n        commands:\n          - \'echo "{{task.id}} > $(date +"%t.%n")"\'\n          - \'sleep 1\'\n  - id: 2_end\n    type: io.kestra.core.tasks.debugs.return\n    format: "{{task.id}} > {{taskrun.startdate}}"\n\n\neachparallel task documentation\n\n\n# allowfailure\n\nthis task will allow a failed child task. if any child task failed:\n\n * allowfailure will be marked as warning\n * all children task inside the allowfailure will be stopped immediately\n * the execution will continue for all others tasks.\n * at the end, the execution will be also marked as status warning\n\nin this example:\n\n * allow-failure will warning\n * ko will be failed\n * next will not be run\n * end will be run and success\n\nid: each\nnamespace: io.kestra.tests\n\ntasks:\n  - id: allow-failure\n    type: io.kestra.core.tasks.flows.allowfailure\n    tasks:\n      - id: ko\n        type: io.kestra.core.tasks.scripts.bash\n        commands:\n          - \'exit 1\'\n      - id: next\n        type: io.kestra.core.tasks.debugs.return\n        format: "{{task.id}} > {{taskrun.startdate}}"\n  - id: end\n    type: io.kestra.core.tasks.debugs.return\n    format: "{{task.id}} > {{taskrun.startdate}}"\n\n\nallowfailure task documentation\n\n\n# flow\n\nthis flow will trigger another one.\nthis allows to decouple the first one from the second one and to monitor each flows individually.\n\nyou can pass outputs to the trigger flow as inputs (that you need to declare in the subflow).\n\nid: subflow\nnamespace: io.kestra.tests\n\ninputs:\n  - name: myfile\n    type: file\n\ntasks:\n  - id: "subflow"\n    type: io.kestra.core.tasks.flows.flow\n    namespace: io.kestra.tests\n    flowid: my-sub-flows\n    inputs:\n      file: "{{ inputs.myfile\' }}"\n      store: 12\n\n\nflow task documentation\n\n\n# templates\n\ntemplates are a special task that will include task from a template at runtime.\nyou defined the template and can use on every flow you want, allowing to share the common tasks between your flows.\n\nid: template\nnamespace: io.kestra.tests\n\ntasks:\n  - id: template\n    type: io.kestra.core.tasks.flows.template\n    namespace: io.kestra.tests\n    templateid: template\n\n\ntemplate task documentation',charsets:{}},{title:"Helpers",frontmatter:{order:10,meta:[{property:"article:modified_time",content:"2021-03-26T21:33:01.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Helpers"},{property:"og:description",content:"Helpers | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/helpers/"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Helpers"},{name:"twitter:description",content:"Helpers | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/helpers/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/helpers/",relativePath:"docs/developer-guide/helpers/README.md",key:"v-7db39c08",path:"/docs/developer-guide/helpers/",headers:[{level:2,title:"Expand the flow to be uploaded to the server",slug:"expand-the-flow-to-be-uploaded-to-the-server",normalizedTitle:"expand the flow to be uploaded to the server",charIndex:270},{level:2,title:"[[> file.txt]]: Include another file",slug:"file-txt-include-another-file",normalizedTitle:"[[&gt; file.txt]]: include another file",charIndex:null}],lastUpdated:"3/26/2021, 9:33:01 PM",lastUpdatedTimestamp:1616794381e3,headersStr:"Expand the flow to be uploaded to the server [[> file.txt]]: Include another file",content:"# Helpers\n\nKestra have some helpers function that can help during flow development.\n\nWARNING\n\nThese helpers are only available during flow development in order to test on your local installation.\nYou must expand the flow definition before sending it to your server.\n\n\n# Expand the flow to be uploaded to the server\n\nThere is a convient task on Kestra executable that allow validation of the current flow and\nwill output the expanded version of your flow without any helper :\n\n./kestra flow validate path-to-your-flow.yaml \n\n\n\n# [[> file.txt]]: Include another file\n\nWhen doing a large flow, the flow can be messy when a lot of tasks are defined and\nspecially when you have some big text inside the flow (example, sql statement, ...).\n\nLet's take an example :\n\nid: include\nnamespace: io.kestra.tests\n\ntasks:\n- id: t1\n  type: io.kestra.core.tasks.debugs.Return\n  format: |\n    Lorem Ipsum is simply dummy text of the printing \n    .....\n    500 lines later\n\n\nYou can replace the flow with this one :\n\nid: include\nnamespace: io.kestra.tests\n\ntasks:\n- id: t1\n  type: io.kestra.core.tasks.debugs.Return\n  format: \"[[> lorem.txt]]\"\n\n\nand have a local file lorem.txt with the large content.\n\nThe path can be :\n\n * [[> lorem.txt]]: a relative path from the flow (flow.yaml & lorem.txt are on the same directory)\n * [[> /path/to/lorem.txt]]: an absolute path\n * [[> path/to/lorem.txt]]: a relative path from the flow (flow.yaml with a subdirectory path/to/)\n\nWARNING\n\nIncludes are resolved recursively, so you can include a file from another include.\nSince this allow more complex things, you need to take care that included files don't contain [[ .. ]] . If you need to have the character in included files escape it with \\[[ ...]] !",normalizedContent:"# helpers\n\nkestra have some helpers function that can help during flow development.\n\nwarning\n\nthese helpers are only available during flow development in order to test on your local installation.\nyou must expand the flow definition before sending it to your server.\n\n\n# expand the flow to be uploaded to the server\n\nthere is a convient task on kestra executable that allow validation of the current flow and\nwill output the expanded version of your flow without any helper :\n\n./kestra flow validate path-to-your-flow.yaml \n\n\n\n# [[> file.txt]]: include another file\n\nwhen doing a large flow, the flow can be messy when a lot of tasks are defined and\nspecially when you have some big text inside the flow (example, sql statement, ...).\n\nlet's take an example :\n\nid: include\nnamespace: io.kestra.tests\n\ntasks:\n- id: t1\n  type: io.kestra.core.tasks.debugs.return\n  format: |\n    lorem ipsum is simply dummy text of the printing \n    .....\n    500 lines later\n\n\nyou can replace the flow with this one :\n\nid: include\nnamespace: io.kestra.tests\n\ntasks:\n- id: t1\n  type: io.kestra.core.tasks.debugs.return\n  format: \"[[> lorem.txt]]\"\n\n\nand have a local file lorem.txt with the large content.\n\nthe path can be :\n\n * [[> lorem.txt]]: a relative path from the flow (flow.yaml & lorem.txt are on the same directory)\n * [[> /path/to/lorem.txt]]: an absolute path\n * [[> path/to/lorem.txt]]: a relative path from the flow (flow.yaml with a subdirectory path/to/)\n\nwarning\n\nincludes are resolved recursively, so you can include a file from another include.\nsince this allow more complex things, you need to take care that included files don't contain [[ .. ]] . if you need to have the character in included files escape it with \\[[ ...]] !",charsets:{cjk:!0}},{title:"Inputs",frontmatter:{order:3,meta:[{property:"article:modified_time",content:"2021-09-14T10:18:22.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Inputs"},{property:"og:description",content:"Inputs | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/inputs/"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Inputs"},{name:"twitter:description",content:"Inputs | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/inputs/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/inputs/",relativePath:"docs/developer-guide/inputs/README.md",key:"v-019a6270",path:"/docs/developer-guide/inputs/",headers:[{level:2,title:"Declaring inputs",slug:"declaring-inputs",normalizedTitle:"declaring inputs",charIndex:320},{level:2,title:"Input types",slug:"input-types",normalizedTitle:"input types",charIndex:1225},{level:3,title:"STRING",slug:"string",normalizedTitle:"string",charIndex:874},{level:3,title:"INT",slug:"int",normalizedTitle:"int",charIndex:980},{level:3,title:"FLOAT",slug:"float",normalizedTitle:"float",charIndex:1029},{level:3,title:"DATETIME",slug:"datetime",normalizedTitle:"datetime",charIndex:1082},{level:3,title:"FILE",slug:"file",normalizedTitle:"file",charIndex:1138},{level:2,title:"Input properties",slug:"input-properties",normalizedTitle:"input properties",charIndex:1907},{level:3,title:"name",slug:"name",normalizedTitle:"name",charIndex:812},{level:3,title:"required",slug:"required",normalizedTitle:"required",charIndex:396},{level:3,title:"defaults",slug:"defaults",normalizedTitle:"defaults",charIndex:2116},{level:3,title:"description",slug:"description",normalizedTitle:"description",charIndex:2267},{level:2,title:"Using input value in flow",slug:"using-input-value-in-flow",normalizedTitle:"using input value in flow",charIndex:2340},{level:2,title:"Send inputs programmatically",slug:"send-inputs-programmatically",normalizedTitle:"send inputs programmatically",charIndex:2663},{level:2,title:"Send inputs via WebUI",slug:"send-inputs-via-webui",normalizedTitle:"send inputs via webui",charIndex:3850}],lastUpdated:"9/14/2021, 10:18:22 AM",lastUpdatedTimestamp:1631614702e3,headersStr:"Declaring inputs Input types STRING INT FLOAT DATETIME FILE Input properties name required defaults description Using input value in flow Send inputs programmatically Send inputs via WebUI",content:'# Inputs\n\nKestra\'s flow can be parametrized using inputs. Inputs will be available in variable context and can be used during the whole flow, in order to customize it depending on inputs.\n\nA good example is you need to have an identifier (ex: storeId, paymentId) in order to change save path for the uploaded files.\n\n\n# Declaring inputs\n\nYou can declare as many inputs for any flow. Input can be required or not.\nIf the input are required, the flow couldn\'t start if the input are not provide during the creation of the execution.\nAlso, every input will be parsed during the creation of the execution and any invalid inputs will refuse to create the execution.\n\nWARNING\n\nIf the execution is not created due to invalid or missing inputs, no execution will be found on the executions list.\n\nExamples:\n\nid: my-flow\nnamespace: io.kestra.docs\n\ninputs:\n  - name: string\n    type: STRING\n    required: true\n  - name: optional\n    type: STRING\n    required: false\n  - name: int\n    type: INT\n    required: true\n  - name: float\n    type: FLOAT\n    required: true\n  - name: instant\n    type: DATETIME\n    required: true\n  - name: my-file\n    type: FILE\n    required: true\n  - name: optionalFile\n    type: FILE\n    required: false\n\n\n\n# Input types\n\nHere are the following input fields available :\n\n\n# STRING\n\nNo control is done on this input type (no parsing), can be any string.\n\n\n# INT\n\nMust be a valid integer (without any decimals).\n\n\n# FLOAT\n\nMust be a valid float (with any decimals).\n\n\n# DATETIME\n\nMust be a valid full ISO 8601 datetime with timezone in UTC from a text string such as\n2007-12-03T10:15:30.00Z.\n\n\n# FILE\n\nMust be a files send with multipart/form-data. All the file are automatically uploaded to Storage and is available for further task. The return will be a full qualified url with the form kestra:///.../.../, Kestra are able to handle this url and this inputs can be passed as is to task.\n\n\n# Input properties\n\nHere are the properties available for all input types :\n\n\n# name\n\nIf the input name in order to be used with vars {{ inputs.my-name }}\n\n\n# required\n\nIf the input is required. If required, no defaults value and no input provide, the execution will not be created.\n\n\n# defaults\n\nThe default value if no input is provided. Must be a string.\n\n\n# description\n\nA markdown description in order to document the inputs.\n\n\n# Using input value in flow\n\nEvery input is available with dynamic variable like : {{ inputs.NAME }}.\n\nFor example, considering that you declare your input :\n\ninputs:\n  - name: my-file\n    type: FILE\n  - name: my-value\n    type: STRING\n    required: true\n\n\nYou can use the value of the inputs with {{ inputs.my-value }}.\n\n\n# Send inputs programmatically\n\nThe flow my-flow above can be triggered programmaticaly, here is an example with curl:\n\ncurl -v "http://kestra:8080/api/v1/executions/trigger/io.kestra.docs/my-flow" \\\n    -H "Transfer-Encoding:chunked" \\\n    -H "Content-Type:multipart/form-data" \\\n    -F string="a string"  \\\n    -F optional="an optionnal string"  \\\n    -F int=1  \\\n    -F float=1.255  \\\n    -F instant=2020-01-14T23:00:00.000Z \\\n    -F "files=@/tmp/128M.txt;filename=my-file"\n\n\nAll files must be sent in a form data files with a header filename=my-file that will be the name of the input.\n\nHere is an example with python:\n\nimport io\nimport requests\nfrom requests_toolbelt.multipart.encoder import MultipartEncoder\n\nwith open("/tmp/128M.txt", \'rb\') as fh:\n  url = f"http://kestra:8080/api/v1/executions/trigger/io.kestra.docs/my-flow"\n  mp_encoder = MultipartEncoder(fields={\n    "string": "a string",\n    "optional": "an optionnal string",\n    "int": 1,\n    "float": 1.255,\n    "instant": "2020-01-14T23:00:00.000Z",\n    "files": ("file", fh, "text/plain")\n  })\n  result = requests.post(\n      url,\n      data=mp_encoder,\n      headers={"Content-Type": mp_encoder.content_type},\n  )\n\n\n\n# Send inputs via WebUI\n\nWith such flow, the web ui let you input some inputs by generating a form accordingly on the flow > trigger view. The input form for the task above looks like below :\n\n\n\nOnce inputs filled, you can trigger a flow execution that will run with contextual inputs as task variables.',normalizedContent:'# inputs\n\nkestra\'s flow can be parametrized using inputs. inputs will be available in variable context and can be used during the whole flow, in order to customize it depending on inputs.\n\na good example is you need to have an identifier (ex: storeid, paymentid) in order to change save path for the uploaded files.\n\n\n# declaring inputs\n\nyou can declare as many inputs for any flow. input can be required or not.\nif the input are required, the flow couldn\'t start if the input are not provide during the creation of the execution.\nalso, every input will be parsed during the creation of the execution and any invalid inputs will refuse to create the execution.\n\nwarning\n\nif the execution is not created due to invalid or missing inputs, no execution will be found on the executions list.\n\nexamples:\n\nid: my-flow\nnamespace: io.kestra.docs\n\ninputs:\n  - name: string\n    type: string\n    required: true\n  - name: optional\n    type: string\n    required: false\n  - name: int\n    type: int\n    required: true\n  - name: float\n    type: float\n    required: true\n  - name: instant\n    type: datetime\n    required: true\n  - name: my-file\n    type: file\n    required: true\n  - name: optionalfile\n    type: file\n    required: false\n\n\n\n# input types\n\nhere are the following input fields available :\n\n\n# string\n\nno control is done on this input type (no parsing), can be any string.\n\n\n# int\n\nmust be a valid integer (without any decimals).\n\n\n# float\n\nmust be a valid float (with any decimals).\n\n\n# datetime\n\nmust be a valid full iso 8601 datetime with timezone in utc from a text string such as\n2007-12-03t10:15:30.00z.\n\n\n# file\n\nmust be a files send with multipart/form-data. all the file are automatically uploaded to storage and is available for further task. the return will be a full qualified url with the form kestra:///.../.../, kestra are able to handle this url and this inputs can be passed as is to task.\n\n\n# input properties\n\nhere are the properties available for all input types :\n\n\n# name\n\nif the input name in order to be used with vars {{ inputs.my-name }}\n\n\n# required\n\nif the input is required. if required, no defaults value and no input provide, the execution will not be created.\n\n\n# defaults\n\nthe default value if no input is provided. must be a string.\n\n\n# description\n\na markdown description in order to document the inputs.\n\n\n# using input value in flow\n\nevery input is available with dynamic variable like : {{ inputs.name }}.\n\nfor example, considering that you declare your input :\n\ninputs:\n  - name: my-file\n    type: file\n  - name: my-value\n    type: string\n    required: true\n\n\nyou can use the value of the inputs with {{ inputs.my-value }}.\n\n\n# send inputs programmatically\n\nthe flow my-flow above can be triggered programmaticaly, here is an example with curl:\n\ncurl -v "http://kestra:8080/api/v1/executions/trigger/io.kestra.docs/my-flow" \\\n    -h "transfer-encoding:chunked" \\\n    -h "content-type:multipart/form-data" \\\n    -f string="a string"  \\\n    -f optional="an optionnal string"  \\\n    -f int=1  \\\n    -f float=1.255  \\\n    -f instant=2020-01-14t23:00:00.000z \\\n    -f "files=@/tmp/128m.txt;filename=my-file"\n\n\nall files must be sent in a form data files with a header filename=my-file that will be the name of the input.\n\nhere is an example with python:\n\nimport io\nimport requests\nfrom requests_toolbelt.multipart.encoder import multipartencoder\n\nwith open("/tmp/128m.txt", \'rb\') as fh:\n  url = f"http://kestra:8080/api/v1/executions/trigger/io.kestra.docs/my-flow"\n  mp_encoder = multipartencoder(fields={\n    "string": "a string",\n    "optional": "an optionnal string",\n    "int": 1,\n    "float": 1.255,\n    "instant": "2020-01-14t23:00:00.000z",\n    "files": ("file", fh, "text/plain")\n  })\n  result = requests.post(\n      url,\n      data=mp_encoder,\n      headers={"content-type": mp_encoder.content_type},\n  )\n\n\n\n# send inputs via webui\n\nwith such flow, the web ui let you input some inputs by generating a form accordingly on the flow > trigger view. the input form for the task above looks like below :\n\n\n\nonce inputs filled, you can trigger a flow execution that will run with contextual inputs as task variables.',charsets:{}},{title:"Listeners",frontmatter:{order:8,meta:[{property:"article:modified_time",content:"2021-08-23T11:52:30.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Listeners"},{property:"og:description",content:"Listeners | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/listeners/"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Listeners"},{name:"twitter:description",content:"Listeners | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/listeners/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/listeners/",relativePath:"docs/developer-guide/listeners/README.md",key:"v-a824f470",path:"/docs/developer-guide/listeners/",headers:[{level:2,title:"Example",slug:"example",normalizedTitle:"example",charIndex:316},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:724},{level:3,title:"conditions",slug:"conditions",normalizedTitle:"conditions",charIndex:598},{level:3,title:"tasks",slug:"tasks",normalizedTitle:"tasks",charIndex:128},{level:3,title:"description",slug:"description",normalizedTitle:"description",charIndex:1342}],lastUpdated:"8/23/2021, 11:52:30 AM",lastUpdatedTimestamp:162971955e4,headersStr:"Example Properties conditions tasks description",content:"# Listeners\n\nListeners are special task that can listen to the current flow and launch task outside the flow.\nThe result of the tasks will not change the execution status. Mostly Listeners are here to send notifications or handle special end task behaviour that you don't want to be considered as main workflow.\n\n\n# Example\n\n> A listeners that will send a Slack notification on failed tasks (you need to install the slack plugins)\n\nlisteners:\n  - tasks:\n      - id: mail\n        type: org.kestra.task.notifications.slack.SlackExecution\n        url: https://hooks.slack.com/services/XXX/YYY/ZZZ\n    conditions:\n      - type: org.kestra.core.models.listeners.types.ExecutionStatusCondition\n        in:\n          - FAILED\n\n\n\n# Properties\n\n\n# conditions\n\n * Type: array\n * SubType: Condition\n * Required: ❌\n\n> A list of Conditions that must be validated in order to execute tasks. If you don't provide any conditions, the listeners will always be executed\n\n\n# tasks\n\n * Type: array\n * SubType: Task\n * Required: ❌\n\n> A list of tasks that will be executed and the end of the flows. The status of this tasks will not impact the main execution and will not changed the execution status even if they failed.\n> \n> You can use every tasks you need here, even Flowable\n> All task id must be unique for the whole flow even for main tasks and errors.\n\n\n# description\n\n * Type: string\n * Required: ❌\n\n> Description for documentation, more details here",normalizedContent:"# listeners\n\nlisteners are special task that can listen to the current flow and launch task outside the flow.\nthe result of the tasks will not change the execution status. mostly listeners are here to send notifications or handle special end task behaviour that you don't want to be considered as main workflow.\n\n\n# example\n\n> a listeners that will send a slack notification on failed tasks (you need to install the slack plugins)\n\nlisteners:\n  - tasks:\n      - id: mail\n        type: org.kestra.task.notifications.slack.slackexecution\n        url: https://hooks.slack.com/services/xxx/yyy/zzz\n    conditions:\n      - type: org.kestra.core.models.listeners.types.executionstatuscondition\n        in:\n          - failed\n\n\n\n# properties\n\n\n# conditions\n\n * type: array\n * subtype: condition\n * required: ❌\n\n> a list of conditions that must be validated in order to execute tasks. if you don't provide any conditions, the listeners will always be executed\n\n\n# tasks\n\n * type: array\n * subtype: task\n * required: ❌\n\n> a list of tasks that will be executed and the end of the flows. the status of this tasks will not impact the main execution and will not changed the execution status even if they failed.\n> \n> you can use every tasks you need here, even flowable\n> all task id must be unique for the whole flow even for main tasks and errors.\n\n\n# description\n\n * type: string\n * required: ❌\n\n> description for documentation, more details here",charsets:{}},{title:"Outputs",frontmatter:{order:4,meta:[{property:"article:modified_time",content:"2021-10-06T18:30:46.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Outputs"},{property:"og:description",content:"Outputs | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/outputs/"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Outputs"},{name:"twitter:description",content:"Outputs | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/outputs/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/outputs/",relativePath:"docs/developer-guide/outputs/README.md",key:"v-92b626b0",path:"/docs/developer-guide/outputs/",headers:[{level:2,title:"Using outputs",slug:"using-outputs",normalizedTitle:"using outputs",charIndex:358},{level:2,title:"Dynamic variables",slug:"dynamic-variables",normalizedTitle:"dynamic variables",charIndex:1627},{level:3,title:"Specific outputs for dynamic tasks",slug:"specific-outputs-for-dynamic-tasks",normalizedTitle:"specific outputs for dynamic tasks",charIndex:2009}],lastUpdated:"10/6/2021, 6:30:46 PM",lastUpdatedTimestamp:1633545046e3,headersStr:"Using outputs Dynamic variables Specific outputs for dynamic tasks",content:'# Outputs\n\nKestra\'s flow can produce outputs when processing tasks. Output data are stored in flow execution context and can be handled and used by tasks next to the output producer one.\n\nYou can use outputs every where variables are allowed, so it can be used as next task values for iteration or conditional processing or even as extra output content.\n\n\n# Using outputs\n\nYou can declare as many outputs for any flow. Outputs context variables are stored following each task declaration.\n\nHere how to use output between tasks into a flow:\n\ntasks:\n- id: produceOutput\n  type: io.kestra.core.tasks.debugs.Return\n  format: my output {{ execution.id }}\n- id: use-output\n  type: io.kestra.core.tasks.debugs.Echo\n  format: This task display previous task output {{ outputs.produceOutput.value }}\n\n\nIn the example above the first task produces an output with the format yaml property. the ouput content is then used in the second task output formating. Indeed, the use-output task uses the templating system {{ outputs.produce-output.value }} to reference the previous task output.\n\nUsing this template context variable interpolates the bracket reference with the entire output generated by the first task.\n\nnote\n\nThe .value in the template bracket that reach another task\'s output content is a value that depends on what data is produced per value. In our case, for the Return task, the value content is filled with the output. It could be bq_table for another task implemented for big query management. Have a look at each task documentation for specific information about what context variable are filled with ouput contents.\n\n\n# Dynamic variables\n\n# Current value\n\nYou can access the current value with {{ taskrun.value }} like that:\n\ntasks:\n  - id: each\n    type: io.kestra.core.tasks.flows.EachSequential\n    value: \'["value 1", "value 2", "value 3"]\'\n    tasks:\n      - id: inner\n        type: io.kestra.core.tasks.debugs.Return\n        format: "{{task.id}} > {{taskrun.value}} > {{taskrun.startDate}}"\n\n\n\n# Specific outputs for dynamic tasks\n\nAnother more specific case for output management is the runtime generated tasks output variables. It is the case for the EachSequential or EachParallel task that produces dynamically other tasks depending on it\'s value property. In this case it is possible to reach each iteration output individually using the following syntax :\n\nid: output-sample\nnamespace: io.kestra.tests\n\ntasks:\n  - id: each\n    type: io.kestra.core.tasks.flows.EachSequential\n    value: \'["s1", "s2", "s3"]\'\n    tasks:\n        - id: 1_1-produce_output\n        type: io.kestra.core.tasks.debugs.Return\n        format: "{{ task.id }} > {{ taskrun.value }} > {{ taskrun.startDate }}"\n  - id: use\n    type: io.kestra.core.tasks.debugs.Return\n    format: "Previous task produced output : {{ outputs.each.s1.a.value }}"\n\n\nHere the outputs.1_1-produce_output.s1.a.value reach the first 1-output task element.\n\n# Previous task lookup\n\nIt\'s also possible to locate a special task by his value:\n\ntasks:\n  - id: each\n    type: io.kestra.core.tasks.flows.EachSequential\n    value: \'["value 1", "value 2", "value 3"]\'\n    tasks:\n      - id: inner\n        type: io.kestra.core.tasks.debugs.Return\n        format: "{{ task.id }}"\n  - id: end\n    type: io.kestra.core.tasks.debugs.Return\n    format: "{{ task.id }} > {{ outputs.inner[value 1].value }}"\n\n\nwith the format outputs.TASKID.[VALUE].PROPERTY. The special bracket [] in .[VALUE]. enable special chars like space (and can be remove without any special characters)\n\n# Lookup in current childs tasks tree\n\nSometime, it can be useful to access to previous outputs on current task tree, for example on\nEachSequential,\nyou iterate for a list of value, doing a first tasks (Download a file for example) and\nloading previous files to a database.\n\nFor this, you can pass the taskrun.value to outputs object :\n\ntasks:\n  - id: each\n    type: io.kestra.core.tasks.flows.EachSequential\n    value: \'["value 1", "value 2", "value 3"]\'\n    tasks:\n      - id: first\n        type: io.kestra.core.tasks.debugs.Return\n        format: "{{task.id}}"\n      - id: second\n        type: io.kestra.core.tasks.debugs.Return\n        format: "{{ outputs.first[taskrun.value].value }}"\n  - id: end\n    type: io.kestra.core.tasks.debugs.Return\n    format: "{{task.id}} > {{outputs.inner[value 1].value}}"\n',normalizedContent:'# outputs\n\nkestra\'s flow can produce outputs when processing tasks. output data are stored in flow execution context and can be handled and used by tasks next to the output producer one.\n\nyou can use outputs every where variables are allowed, so it can be used as next task values for iteration or conditional processing or even as extra output content.\n\n\n# using outputs\n\nyou can declare as many outputs for any flow. outputs context variables are stored following each task declaration.\n\nhere how to use output between tasks into a flow:\n\ntasks:\n- id: produceoutput\n  type: io.kestra.core.tasks.debugs.return\n  format: my output {{ execution.id }}\n- id: use-output\n  type: io.kestra.core.tasks.debugs.echo\n  format: this task display previous task output {{ outputs.produceoutput.value }}\n\n\nin the example above the first task produces an output with the format yaml property. the ouput content is then used in the second task output formating. indeed, the use-output task uses the templating system {{ outputs.produce-output.value }} to reference the previous task output.\n\nusing this template context variable interpolates the bracket reference with the entire output generated by the first task.\n\nnote\n\nthe .value in the template bracket that reach another task\'s output content is a value that depends on what data is produced per value. in our case, for the return task, the value content is filled with the output. it could be bq_table for another task implemented for big query management. have a look at each task documentation for specific information about what context variable are filled with ouput contents.\n\n\n# dynamic variables\n\n# current value\n\nyou can access the current value with {{ taskrun.value }} like that:\n\ntasks:\n  - id: each\n    type: io.kestra.core.tasks.flows.eachsequential\n    value: \'["value 1", "value 2", "value 3"]\'\n    tasks:\n      - id: inner\n        type: io.kestra.core.tasks.debugs.return\n        format: "{{task.id}} > {{taskrun.value}} > {{taskrun.startdate}}"\n\n\n\n# specific outputs for dynamic tasks\n\nanother more specific case for output management is the runtime generated tasks output variables. it is the case for the eachsequential or eachparallel task that produces dynamically other tasks depending on it\'s value property. in this case it is possible to reach each iteration output individually using the following syntax :\n\nid: output-sample\nnamespace: io.kestra.tests\n\ntasks:\n  - id: each\n    type: io.kestra.core.tasks.flows.eachsequential\n    value: \'["s1", "s2", "s3"]\'\n    tasks:\n        - id: 1_1-produce_output\n        type: io.kestra.core.tasks.debugs.return\n        format: "{{ task.id }} > {{ taskrun.value }} > {{ taskrun.startdate }}"\n  - id: use\n    type: io.kestra.core.tasks.debugs.return\n    format: "previous task produced output : {{ outputs.each.s1.a.value }}"\n\n\nhere the outputs.1_1-produce_output.s1.a.value reach the first 1-output task element.\n\n# previous task lookup\n\nit\'s also possible to locate a special task by his value:\n\ntasks:\n  - id: each\n    type: io.kestra.core.tasks.flows.eachsequential\n    value: \'["value 1", "value 2", "value 3"]\'\n    tasks:\n      - id: inner\n        type: io.kestra.core.tasks.debugs.return\n        format: "{{ task.id }}"\n  - id: end\n    type: io.kestra.core.tasks.debugs.return\n    format: "{{ task.id }} > {{ outputs.inner[value 1].value }}"\n\n\nwith the format outputs.taskid.[value].property. the special bracket [] in .[value]. enable special chars like space (and can be remove without any special characters)\n\n# lookup in current childs tasks tree\n\nsometime, it can be useful to access to previous outputs on current task tree, for example on\neachsequential,\nyou iterate for a list of value, doing a first tasks (download a file for example) and\nloading previous files to a database.\n\nfor this, you can pass the taskrun.value to outputs object :\n\ntasks:\n  - id: each\n    type: io.kestra.core.tasks.flows.eachsequential\n    value: \'["value 1", "value 2", "value 3"]\'\n    tasks:\n      - id: first\n        type: io.kestra.core.tasks.debugs.return\n        format: "{{task.id}}"\n      - id: second\n        type: io.kestra.core.tasks.debugs.return\n        format: "{{ outputs.first[taskrun.value].value }}"\n  - id: end\n    type: io.kestra.core.tasks.debugs.return\n    format: "{{task.id}} > {{outputs.inner[value 1].value}}"\n',charsets:{}},{title:"Retries",frontmatter:{order:6,meta:[{property:"article:modified_time",content:"2021-12-14T20:37:06.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Retries"},{property:"og:description",content:"Retries | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/retries/"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Retries"},{name:"twitter:description",content:"Retries | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/retries/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/retries/",relativePath:"docs/developer-guide/retries/README.md",key:"v-7e6b41b0",path:"/docs/developer-guide/retries/",headers:[{level:2,title:"Example",slug:"example",normalizedTitle:"example",charIndex:186},{level:2,title:"Retry options for all type",slug:"retry-options-for-all-type",normalizedTitle:"retry options for all type",charIndex:477},{level:3,title:"Duration",slug:"duration",normalizedTitle:"duration",charIndex:761},{level:3,title:"Retry types",slug:"retry-types",normalizedTitle:"retry types",charIndex:1320}],lastUpdated:"12/14/2021, 8:37:06 PM",lastUpdatedTimestamp:1639514226e3,headersStr:"Example Retry options for all type Duration Retry types",content:"# Retries\n\nKestra provide some tasks retry feature. This sub system makes it convenient to add failed executions retry behavior depending on retry configuration in flow description.\n\n\n# Example\n\nBelow a flow sample that retry executes a task on failure maximum 5 times each 15 minutes :\n\n- id: retry-sample\n  type: io.kestra.core.tasks.debugs.Echo\n  format: my output for task {{task.id}}\n  timeout: PT10M\n  retry:\n    maxAttempt: 5\n    type: constant\n    interval: PT15M\n\n\n\n# Retry options for all type\n\nNAME             TYPE       DESCRIPTION\ntype             string     Retry behavior to apply. Can be one of constant,\n                            exponential, random.\nmaxAttempt       integer    Number of retries performed before the system stops retry.\nmaxDuration      Duration   Maximum delay the execution is retried. Once passed, the\n                            task is no more processed\nwarningOnRetry   Boolean    Flag the execution has warning if any retry was done on this\n                            tasks.\n\n\n# Duration\n\nSome option above have to be filled with duration notation.\nDurations are expressed in ISO 8601 Durations\nand here is some examples :\n\nNAME       DESCRIPTION\nPT0.250S   250 milliseconds delay\nPT2S       2 seconds delay\nPT1M       1 minute delay\nPT3.5H     3 hours and a half delay\n\n\n# Retry types\n\n# constant\n\nConstant retry times, when time is set to 10 minutes it retries each 10 minutes\n\nNAME       TYPE       DESCRIPTION\ninterval   Duration   Duration between each retry.\n\n# exponential\n\nRetry behavior that waits longer between each retry e.g. 1s, 5s, 15s ...\n\nNAME          TYPE       DESCRIPTION\ninterval      Duration   Duration between each retry.\nmaxInterval   Duration   Max Duration between each retry.\ndelayFactor   Double     Multiplier for interval on each retry, default is 2. For\n                         example, with and interval=30s and delayFactor=2, retry will\n                         append at 30s, 1m30, 3m30, ...\n\n# random\n\nRetry with random delay with min and max limits\n\nNAME          TYPE       DESCRIPTION\nminInterval   Duration   Minimal duration between each retry.\nmaxInterval   Duration   Maximum duration between each retry.",normalizedContent:"# retries\n\nkestra provide some tasks retry feature. this sub system makes it convenient to add failed executions retry behavior depending on retry configuration in flow description.\n\n\n# example\n\nbelow a flow sample that retry executes a task on failure maximum 5 times each 15 minutes :\n\n- id: retry-sample\n  type: io.kestra.core.tasks.debugs.echo\n  format: my output for task {{task.id}}\n  timeout: pt10m\n  retry:\n    maxattempt: 5\n    type: constant\n    interval: pt15m\n\n\n\n# retry options for all type\n\nname             type       description\ntype             string     retry behavior to apply. can be one of constant,\n                            exponential, random.\nmaxattempt       integer    number of retries performed before the system stops retry.\nmaxduration      duration   maximum delay the execution is retried. once passed, the\n                            task is no more processed\nwarningonretry   boolean    flag the execution has warning if any retry was done on this\n                            tasks.\n\n\n# duration\n\nsome option above have to be filled with duration notation.\ndurations are expressed in iso 8601 durations\nand here is some examples :\n\nname       description\npt0.250s   250 milliseconds delay\npt2s       2 seconds delay\npt1m       1 minute delay\npt3.5h     3 hours and a half delay\n\n\n# retry types\n\n# constant\n\nconstant retry times, when time is set to 10 minutes it retries each 10 minutes\n\nname       type       description\ninterval   duration   duration between each retry.\n\n# exponential\n\nretry behavior that waits longer between each retry e.g. 1s, 5s, 15s ...\n\nname          type       description\ninterval      duration   duration between each retry.\nmaxinterval   duration   max duration between each retry.\ndelayfactor   double     multiplier for interval on each retry, default is 2. for\n                         example, with and interval=30s and delayfactor=2, retry will\n                         append at 30s, 1m30, 3m30, ...\n\n# random\n\nretry with random delay with min and max limits\n\nname          type       description\nmininterval   duration   minimal duration between each retry.\nmaxinterval   duration   maximum duration between each retry.",charsets:{}},{title:"Templates",frontmatter:{order:9,meta:[{property:"article:modified_time",content:"2021-10-06T18:30:46.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Templates"},{property:"og:description",content:"Templates | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/templates/"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Templates"},{name:"twitter:description",content:"Templates | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/templates/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/templates/",relativePath:"docs/developer-guide/templates/README.md",key:"v-2b85cc88",path:"/docs/developer-guide/templates/",headers:[{level:2,title:"Example",slug:"example",normalizedTitle:"example",charIndex:400}],lastUpdated:"10/6/2021, 6:30:46 PM",lastUpdatedTimestamp:1633545046e3,headersStr:"Example",content:'# Templates\n\nTemplates are list of tasks that can be shared between flows. You can define a template and call it from other flows allowing to share a list of tasks and keep these task updated without changing your flow.\n\nAll tasks in a template will be executed sequentially, you can provide the same tasks than in standard flow and you can also have an errros path.\n\nTemplate Task documentation\n\n\n# Example\n\nBelow a flow sample that will include a template :\n\nid: with-template\nnamespace: io.kestra.tests\n\ninputs:\n  - name: store\n    type: STRING\n    required: true\n\ntasks:\n  - id: template\n    type: io.kestra.core.tasks.flows.Template\n    namespace: io.kestra.tests\n    templateId: template\n    args:\n      renamedStore: "{{ inputs.store }}\n\n\nIf the template is defined like that :\n\nid: template\nnamespace: io.kestra.tests\n\ntasks:\n  - id: 1-return\n    type: io.kestra.core.tasks.debugs.Return\n    format: "{{ parent.outputs.args.renamedStore }}"\n\n\nIt will produce a flow same that this one :\n\nid: with-template\nnamespace: io.kestra.tests\n\ntasks:\n  - id: template\n    type: io.kestra.core.tasks.flows.Sequential\n    tasks:\n      - id: 1-return\n        type: io.kestra.core.tasks.debugs.Return\n        format: "{{ inputs.store }}"\n\n\nAll the tasks within the template will be copied at the runtime.\n\nWARNING\n\nFrom the template, you can access all the variables defined on the context executions. But it\'s highly discouraged, the better will be to use args to rename variables from global context to a local one.\n\nBy this way, your template will be usable on many flows. Just think args as argument for a function in code !',normalizedContent:'# templates\n\ntemplates are list of tasks that can be shared between flows. you can define a template and call it from other flows allowing to share a list of tasks and keep these task updated without changing your flow.\n\nall tasks in a template will be executed sequentially, you can provide the same tasks than in standard flow and you can also have an errros path.\n\ntemplate task documentation\n\n\n# example\n\nbelow a flow sample that will include a template :\n\nid: with-template\nnamespace: io.kestra.tests\n\ninputs:\n  - name: store\n    type: string\n    required: true\n\ntasks:\n  - id: template\n    type: io.kestra.core.tasks.flows.template\n    namespace: io.kestra.tests\n    templateid: template\n    args:\n      renamedstore: "{{ inputs.store }}\n\n\nif the template is defined like that :\n\nid: template\nnamespace: io.kestra.tests\n\ntasks:\n  - id: 1-return\n    type: io.kestra.core.tasks.debugs.return\n    format: "{{ parent.outputs.args.renamedstore }}"\n\n\nit will produce a flow same that this one :\n\nid: with-template\nnamespace: io.kestra.tests\n\ntasks:\n  - id: template\n    type: io.kestra.core.tasks.flows.sequential\n    tasks:\n      - id: 1-return\n        type: io.kestra.core.tasks.debugs.return\n        format: "{{ inputs.store }}"\n\n\nall the tasks within the template will be copied at the runtime.\n\nwarning\n\nfrom the template, you can access all the variables defined on the context executions. but it\'s highly discouraged, the better will be to use args to rename variables from global context to a local one.\n\nby this way, your template will be usable on many flows. just think args as argument for a function in code !',charsets:{}},{title:"Triggers & schedule",frontmatter:{order:5,meta:[{property:"article:modified_time",content:"2020-09-21T19:33:35.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Triggers & schedule"},{property:"og:description",content:"Triggers & schedule | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/triggers/"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Triggers & schedule"},{name:"twitter:description",content:"Triggers & schedule | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/triggers/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/triggers/",relativePath:"docs/developer-guide/triggers/README.md",key:"v-084d894c",path:"/docs/developer-guide/triggers/",lastUpdated:"9/21/2020, 7:33:35 PM",lastUpdatedTimestamp:1600716815e3,headersStr:null,content:"# Triggers & schedule\n\nTriggers are way to start a flow with external events. For example, on a schedule date or waiting for some external events (like file creation or another flow end)\n\nHere is the current available triggers :\n\n * Flow trigger\n * Schedule",normalizedContent:"# triggers & schedule\n\ntriggers are way to start a flow with external events. for example, on a schedule date or waiting for some external events (like file creation or another flow end)\n\nhere is the current available triggers :\n\n * flow trigger\n * schedule",charsets:{}},{title:"Flow trigger",frontmatter:{meta:[{property:"article:modified_time",content:"2021-10-06T18:30:46.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Flow trigger"},{property:"og:description",content:"Flow trigger | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/triggers/flow.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Flow trigger"},{name:"twitter:description",content:"Flow trigger | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/triggers/flow.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/triggers/flow.html",relativePath:"docs/developer-guide/triggers/flow.md",key:"v-801f5ac2",path:"/docs/developer-guide/triggers/flow.html",headers:[{level:2,title:"Example",slug:"example",normalizedTitle:"example",charIndex:274},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:2131},{level:3,title:"id",slug:"id",normalizedTitle:"id",charIndex:432},{level:3,title:"inputs",slug:"inputs-2",normalizedTitle:"inputs",charIndex:498},{level:3,title:"conditions",slug:"conditions",normalizedTitle:"conditions",charIndex:802},{level:2,title:"Variables",slug:"variables",normalizedTitle:"variables",charIndex:2812}],lastUpdated:"10/6/2021, 6:30:46 PM",lastUpdatedTimestamp:1633545046e3,headersStr:"Example Inputs id inputs conditions Variables",content:'# Flow trigger\n\ntype: "io.kestra.core.models.triggers.types.Flow"\n\n\n> Kestra is able to trigger flow after another one. This allows chaining flow without need to update the base flows.\n> With that, you can break responsibility between different flow to different teams.\n\n\n# Example\n\n> This flow will be triggered after each successfully execution of flow io.kestra.tests.trigger-flow and forward the uri of my-task taskId outputs.\n\nid: trigger-flow-listener\nnamespace: io.kestra.tests\nrevision: 1\n\ninputs:\n  - name: fromParent\n    type: STRING\n\ntasks:\n  - id: onlyNoInput\n    type: io.kestra.core.tasks.debugs.Return\n    format: "v1: {{trigger.executionId}}"\n\ntriggers:\n  - id: listenFlow\n    type: io.kestra.core.models.triggers.types.Flow\n    inputs:\n      fromParent: \'{{ outputs.myTask.uri }}\'\n    conditions:\n      - type: io.kestra.core.models.conditions.types.ExecutionFlowCondition\n        namespace: io.kestra.tests\n        flowId: trigger-flow\n      - type: io.kestra.core.models.conditions.types.ExecutionStatusCondition\n        in:\n          - SUCCESS\n\n\n> This flow will be triggered after the successful execution of both flows flow-a & flow-b during the current day. When the conditions are met, the counter is reset and can be re-triggered during the same day. See MultipleCondition for more details\n\nid: trigger-multiplecondition-listener\nnamespace: io.kestra.tests\n\ntasks:\n  - id: onlyListener\n    type: io.kestra.core.tasks.debugs.Return\n    format: "let\'s go "\n\ntriggers:\n  - id: multipleListenFlow\n    type: io.kestra.core.models.triggers.types.Flow\n    conditions:\n      - id: multiple\n        type: io.kestra.core.models.conditions.types.MultipleCondition\n        window: P1D\n        windowAdvance: P0D\n        conditions:\n          flow-a:\n            type: io.kestra.core.models.conditions.types.ExecutionFlowCondition\n            namespace: io.kestra.tests\n            flowId: trigger-multiplecondition-flow-a\n          flow-b:\n            type: io.kestra.core.models.conditions.types.ExecutionFlowCondition\n            namespace: io.kestra.tests\n            flowId: trigger-multiplecondition-flow-b\n\n\n\n\n# Inputs\n\n\n# id\n\n * Type:\n * Required: ✔\n\n> unique for a flow\n\n\n# inputs\n\n * Type:\n * Required: ❌\n * Dynamic: ✔\n\n> fill input of this flow based on output of current flow, allowing to pass data or file on the triggered flow\n\nWARNING\n\nIf you provide invalid input, the flow will be created and already state as FAILED! Since there is no task started, you can\'t log any reason visible on the ui.\nSo you will need to go to server log to understand the error\n\n\n# conditions\n\n * Type:\n * Required: ❌\n\n> List of Conditions in order to limit the flow trigger.\n\nWARNING\n\nIf you don\'t provide any conditions, the flow will be triggered for EVERY execution of EVERY flow on your instance.\n\n\n# Variables\n\nWhen the flow is trigger by another one, some context variables will be injected to allow some customization of the flow.\n\nPARAMETER                    DESCRIPTION\n{{ trigger.executionId }}    the execution id that trigger the current flow\n{{ trigger.namespace }}      the namespace of the flow that trigger the current flow\n{{ trigger.flowId }}         the flow id that trigger the current flow\n{{ trigger.flowRevision }}   the flow revision that trigger the current flow',normalizedContent:'# flow trigger\n\ntype: "io.kestra.core.models.triggers.types.flow"\n\n\n> kestra is able to trigger flow after another one. this allows chaining flow without need to update the base flows.\n> with that, you can break responsibility between different flow to different teams.\n\n\n# example\n\n> this flow will be triggered after each successfully execution of flow io.kestra.tests.trigger-flow and forward the uri of my-task taskid outputs.\n\nid: trigger-flow-listener\nnamespace: io.kestra.tests\nrevision: 1\n\ninputs:\n  - name: fromparent\n    type: string\n\ntasks:\n  - id: onlynoinput\n    type: io.kestra.core.tasks.debugs.return\n    format: "v1: {{trigger.executionid}}"\n\ntriggers:\n  - id: listenflow\n    type: io.kestra.core.models.triggers.types.flow\n    inputs:\n      fromparent: \'{{ outputs.mytask.uri }}\'\n    conditions:\n      - type: io.kestra.core.models.conditions.types.executionflowcondition\n        namespace: io.kestra.tests\n        flowid: trigger-flow\n      - type: io.kestra.core.models.conditions.types.executionstatuscondition\n        in:\n          - success\n\n\n> this flow will be triggered after the successful execution of both flows flow-a & flow-b during the current day. when the conditions are met, the counter is reset and can be re-triggered during the same day. see multiplecondition for more details\n\nid: trigger-multiplecondition-listener\nnamespace: io.kestra.tests\n\ntasks:\n  - id: onlylistener\n    type: io.kestra.core.tasks.debugs.return\n    format: "let\'s go "\n\ntriggers:\n  - id: multiplelistenflow\n    type: io.kestra.core.models.triggers.types.flow\n    conditions:\n      - id: multiple\n        type: io.kestra.core.models.conditions.types.multiplecondition\n        window: p1d\n        windowadvance: p0d\n        conditions:\n          flow-a:\n            type: io.kestra.core.models.conditions.types.executionflowcondition\n            namespace: io.kestra.tests\n            flowid: trigger-multiplecondition-flow-a\n          flow-b:\n            type: io.kestra.core.models.conditions.types.executionflowcondition\n            namespace: io.kestra.tests\n            flowid: trigger-multiplecondition-flow-b\n\n\n\n\n# inputs\n\n\n# id\n\n * type:\n * required: ✔\n\n> unique for a flow\n\n\n# inputs\n\n * type:\n * required: ❌\n * dynamic: ✔\n\n> fill input of this flow based on output of current flow, allowing to pass data or file on the triggered flow\n\nwarning\n\nif you provide invalid input, the flow will be created and already state as failed! since there is no task started, you can\'t log any reason visible on the ui.\nso you will need to go to server log to understand the error\n\n\n# conditions\n\n * type:\n * required: ❌\n\n> list of conditions in order to limit the flow trigger.\n\nwarning\n\nif you don\'t provide any conditions, the flow will be triggered for every execution of every flow on your instance.\n\n\n# variables\n\nwhen the flow is trigger by another one, some context variables will be injected to allow some customization of the flow.\n\nparameter                    description\n{{ trigger.executionid }}    the execution id that trigger the current flow\n{{ trigger.namespace }}      the namespace of the flow that trigger the current flow\n{{ trigger.flowid }}         the flow id that trigger the current flow\n{{ trigger.flowrevision }}   the flow revision that trigger the current flow',charsets:{}},{title:"Schedule",frontmatter:{meta:[{property:"article:modified_time",content:"2021-10-06T18:30:46.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Schedule"},{property:"og:description",content:"Schedule | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/triggers/schedule.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Schedule"},{name:"twitter:description",content:"Schedule | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/triggers/schedule.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/triggers/schedule.html",relativePath:"docs/developer-guide/triggers/schedule.md",key:"v-4a03194d",path:"/docs/developer-guide/triggers/schedule.html",headers:[{level:2,title:"Example",slug:"example",normalizedTitle:"example",charIndex:275},{level:2,title:"Backfill",slug:"backfill",normalizedTitle:"backfill",charIndex:1614},{level:2,title:"Variables",slug:"variables",normalizedTitle:"variables",charIndex:1872},{level:2,title:"Schedule Conditions",slug:"schedule-conditions",normalizedTitle:"schedule conditions",charIndex:2225},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:2898},{level:3,title:"id",slug:"id",normalizedTitle:"id",charIndex:328},{level:3,title:"cron",slug:"cron",normalizedTitle:"cron",charIndex:401},{level:3,title:"backfill",slug:"backfill-2",normalizedTitle:"backfill",charIndex:304},{level:3,title:"scheduleConditions",slug:"scheduleconditions",normalizedTitle:"scheduleconditions",charIndex:651},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:3821},{level:3,title:"date",slug:"date",normalizedTitle:"date",charIndex:771},{level:3,title:"next",slug:"next",normalizedTitle:"next",charIndex:991},{level:3,title:"previous",slug:"previous",normalizedTitle:"previous",charIndex:951},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:4009},{level:3,title:"ScheduleBackfill",slug:"schedulebackfill",normalizedTitle:"schedulebackfill",charIndex:3299}],lastUpdated:"10/6/2021, 6:30:46 PM",lastUpdatedTimestamp:1633545046e3,headersStr:"Example Backfill Variables Schedule Conditions Properties id cron backfill scheduleConditions Outputs date next previous Definitions ScheduleBackfill",content:'# Schedule\n\ntype: "io.kestra.core.models.triggers.types.Schedule"\n\n\n> Kestra is able to trigger flow based on Schedule (aka the time). If you need to wait another system to be ready and can\'t use any event mechanism, you can schedule 1 or more time for the current flow.\n\n\n# Example\n\n> A schedule with a backfill\n\ntriggers:\n  - id: schedule\n    type: io.kestra.core.models.triggers.types.Schedule\n    cron: "*/15 * * * *"\n    backfill:\n      start: 2020-06-25T14:00:00Z\n\n\n> A schedule that run only the first monday on every month at 11 AM\n\ntriggers:\n  - id: schedule\n    type: io.kestra.core.models.triggers.types.Schedule\n    cron: "0 11 * * 1"\n    scheduleConditions:\n      - id: monday\n        type: io.kestra.core.models.conditions.types.DayInMonthCondition\n        date: "{{ trigger.date }}"\n        dayOfWeek: "MONDAY"\n        dayInMonth: "FIRST"\n\n\nWARNING\n\nSchedule cannot overlap, this mean that we can\'t have any concurrent schedule. If the previous schedule is not ended when the next one must start, the scheduler will wait the end of the previous one. Same is applied during backfill.\n\nTIP\n\nMost of the time, schedule execution will depend on trigger.date (looking at files for today, sql query with where schedule date). This works well, but it prevents you to execute your flow manually (since these variables are only available during schedule).\nYou can use this expression in order to make your manual execution working: {{ schedule.date ?? execution.startDate | date("yyyy-MM-dd") }}, it will use the current date instead of the schedule one on manual execution, and your flow will not fail.\n\n\n# Backfill\n\nKestra will handle optionally a backfill. The concept of backfill is the replay the missing schedule because we create the flow later.\n\nBackfill will do all schedules between define date & current date and will start after the normal schedule.\n\n\n# Variables\n\nWhen the flow is schedule, some context variables are injected to allow some customization of the flow\n(like filename, where in sql query).\n\nPARAMETER                DESCRIPTION\n{{ trigger.date }}       the date of current schedule\n{{ trigger.next }}       the date of next schedule\n{{ trigger.previous }}   the date of previous schedule\n\n\n# Schedule Conditions\n\nWhen the cron is not suffisant to determine the date you want to schedule your flow, you can use scheduleConditions in order to add some extra conditions, (for example, only the first day of the month, only the weekend, ...).\nYou must use the {{ trigger.date }} expression on properties date the current schedule.\nThis condition will be evaluated and {{ trigger.previous }} and {{ trigger.next }} will reflect the date with the conditions apply.\n\nThe list of core conditions that can be used are :\n\n * DateTimeBetweenCondition\n * DayWeekCondition\n * DayWeekInMonthCondition\n * NotCondition\n * OrCondition\n * WeekendCondition\n * DayInMonthCondition\n\n\n# Properties\n\n\n# id\n\n * Type:\n * Required: ✔\n\n> unique for a flow. The scheduler will keep the last execution date for this schedule. This allow you to change the cron expression without restart all the past execution (if backfill exists)\n\n\n# cron\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> the cron expression you need tyo\n> a standard unix cron expression without second.\n\n\n# backfill\n\n * Type: ScheduleBackfill\n * Dynamic: ❓\n * Required: ❌\n\n> Backfill options in order to fill missing previous past date\n> Kestra will handle optionally a backfill. The concept of backfill is the replay the missing schedule because we create the flow later.\n\nBackfill will do all schedules between define date & current date and will start after the normal schedule.\n\n\n# scheduleConditions\n\n * Type: array\n * SubType: ScheduleCondition\n * Dynamic: ❓\n * Required: ❌\n\n> List of schedule Conditions in order to limit schedule date.\n\n\n# Outputs\n\n\n# date\n\n * Type: string\n\n> The date of current schedule\n\n\n# next\n\n * Type: string\n\n> The date of next schedule\n\n\n# previous\n\n * Type: string\n\n> The date of previous schedule\n\n\n# Definitions\n\n\n# ScheduleBackfill\n\n# start\n\n * Type: string\n\n> The first start date',normalizedContent:'# schedule\n\ntype: "io.kestra.core.models.triggers.types.schedule"\n\n\n> kestra is able to trigger flow based on schedule (aka the time). if you need to wait another system to be ready and can\'t use any event mechanism, you can schedule 1 or more time for the current flow.\n\n\n# example\n\n> a schedule with a backfill\n\ntriggers:\n  - id: schedule\n    type: io.kestra.core.models.triggers.types.schedule\n    cron: "*/15 * * * *"\n    backfill:\n      start: 2020-06-25t14:00:00z\n\n\n> a schedule that run only the first monday on every month at 11 am\n\ntriggers:\n  - id: schedule\n    type: io.kestra.core.models.triggers.types.schedule\n    cron: "0 11 * * 1"\n    scheduleconditions:\n      - id: monday\n        type: io.kestra.core.models.conditions.types.dayinmonthcondition\n        date: "{{ trigger.date }}"\n        dayofweek: "monday"\n        dayinmonth: "first"\n\n\nwarning\n\nschedule cannot overlap, this mean that we can\'t have any concurrent schedule. if the previous schedule is not ended when the next one must start, the scheduler will wait the end of the previous one. same is applied during backfill.\n\ntip\n\nmost of the time, schedule execution will depend on trigger.date (looking at files for today, sql query with where schedule date). this works well, but it prevents you to execute your flow manually (since these variables are only available during schedule).\nyou can use this expression in order to make your manual execution working: {{ schedule.date ?? execution.startdate | date("yyyy-mm-dd") }}, it will use the current date instead of the schedule one on manual execution, and your flow will not fail.\n\n\n# backfill\n\nkestra will handle optionally a backfill. the concept of backfill is the replay the missing schedule because we create the flow later.\n\nbackfill will do all schedules between define date & current date and will start after the normal schedule.\n\n\n# variables\n\nwhen the flow is schedule, some context variables are injected to allow some customization of the flow\n(like filename, where in sql query).\n\nparameter                description\n{{ trigger.date }}       the date of current schedule\n{{ trigger.next }}       the date of next schedule\n{{ trigger.previous }}   the date of previous schedule\n\n\n# schedule conditions\n\nwhen the cron is not suffisant to determine the date you want to schedule your flow, you can use scheduleconditions in order to add some extra conditions, (for example, only the first day of the month, only the weekend, ...).\nyou must use the {{ trigger.date }} expression on properties date the current schedule.\nthis condition will be evaluated and {{ trigger.previous }} and {{ trigger.next }} will reflect the date with the conditions apply.\n\nthe list of core conditions that can be used are :\n\n * datetimebetweencondition\n * dayweekcondition\n * dayweekinmonthcondition\n * notcondition\n * orcondition\n * weekendcondition\n * dayinmonthcondition\n\n\n# properties\n\n\n# id\n\n * type:\n * required: ✔\n\n> unique for a flow. the scheduler will keep the last execution date for this schedule. this allow you to change the cron expression without restart all the past execution (if backfill exists)\n\n\n# cron\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the cron expression you need tyo\n> a standard unix cron expression without second.\n\n\n# backfill\n\n * type: schedulebackfill\n * dynamic: ❓\n * required: ❌\n\n> backfill options in order to fill missing previous past date\n> kestra will handle optionally a backfill. the concept of backfill is the replay the missing schedule because we create the flow later.\n\nbackfill will do all schedules between define date & current date and will start after the normal schedule.\n\n\n# scheduleconditions\n\n * type: array\n * subtype: schedulecondition\n * dynamic: ❓\n * required: ❌\n\n> list of schedule conditions in order to limit schedule date.\n\n\n# outputs\n\n\n# date\n\n * type: string\n\n> the date of current schedule\n\n\n# next\n\n * type: string\n\n> the date of next schedule\n\n\n# previous\n\n * type: string\n\n> the date of previous schedule\n\n\n# definitions\n\n\n# schedulebackfill\n\n# start\n\n * type: string\n\n> the first start date',charsets:{cjk:!0}},{title:"Webhook",frontmatter:{meta:[{property:"article:modified_time",content:"2021-03-26T21:33:01.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Webhook"},{property:"og:description",content:"Webhook | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/triggers/webhook.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Webhook"},{name:"twitter:description",content:"Webhook | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/triggers/webhook.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/triggers/webhook.html",relativePath:"docs/developer-guide/triggers/webhook.md",key:"v-53d2e383",path:"/docs/developer-guide/triggers/webhook.html",headers:[{level:2,title:"Example",slug:"example",normalizedTitle:"example",charIndex:363},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:813},{level:3,title:"id",slug:"id",normalizedTitle:"id",charIndex:423},{level:3,title:"key",slug:"key",normalizedTitle:"key",charIndex:162},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1200},{level:3,title:"body",slug:"body",normalizedTitle:"body",charIndex:313},{level:3,title:"headers",slug:"headers",normalizedTitle:"headers",charIndex:320}],lastUpdated:"3/26/2021, 9:33:01 PM",lastUpdatedTimestamp:1616794381e3,headersStr:"Example Inputs id key Outputs body headers",content:'# Webhook\n\ntype: "io.kestra.core.models.triggers.types.Webhook"\n\n\n> Webbook trigger allow you to trigger a flow from a webhook url.\n> The trigger will generate a key that must be used on url : /api/v1/executions/webhook/{namespace}/[flowId]/{key}.\n> Kestra accept GET, POST & PUT request on this url.\n> The whole body & headers will be available as variable.\n\n\n# Example\n\n> Add a trigger to the current flow\n\ntriggers:\n  - id: webhook\n    type: io.kestra.core.models.triggers.types.Webhook\n\n\n> After the trigger is created, a key will be created that will be use in the webhook url, now, you can launch the flow on the url /api/v1/executions/webhook/{namespace}/[flowId]/4wjtkzwVGBM9yKnjm3yv8r\n\ntriggers:\n  - id: webhook\n    type: io.kestra.core.models.triggers.types.Webhook\n    key: 4wjtkzwVGBM9yKnjm3yv8r\n\n\n\n# Inputs\n\n\n# id\n\n * Type:\n * Required: ✔\n\n> unique for a flow.\n\n\n# key\n\n * Type:\n * Required: ❌\n\n> The unique key that will be part of the url\n\nIf you don’t provide, a random one will be generated. Is used as key for generating the url of the webhook.\n\nWARNING\n\nTake care when using manual key, the key is the only security to protect your webhook and must be considered as a secret !\n\n\n# Outputs\n\n\n# body\n\n * Type:\n\n> The full body for the webhook request\n\nWe try to deserialize the incoming request as json (array or object).\nIf we can’t the full body as string will be available\n\n\n# headers\n\n * Type:\n\n> The headers for the webhook request',normalizedContent:'# webhook\n\ntype: "io.kestra.core.models.triggers.types.webhook"\n\n\n> webbook trigger allow you to trigger a flow from a webhook url.\n> the trigger will generate a key that must be used on url : /api/v1/executions/webhook/{namespace}/[flowid]/{key}.\n> kestra accept get, post & put request on this url.\n> the whole body & headers will be available as variable.\n\n\n# example\n\n> add a trigger to the current flow\n\ntriggers:\n  - id: webhook\n    type: io.kestra.core.models.triggers.types.webhook\n\n\n> after the trigger is created, a key will be created that will be use in the webhook url, now, you can launch the flow on the url /api/v1/executions/webhook/{namespace}/[flowid]/4wjtkzwvgbm9yknjm3yv8r\n\ntriggers:\n  - id: webhook\n    type: io.kestra.core.models.triggers.types.webhook\n    key: 4wjtkzwvgbm9yknjm3yv8r\n\n\n\n# inputs\n\n\n# id\n\n * type:\n * required: ✔\n\n> unique for a flow.\n\n\n# key\n\n * type:\n * required: ❌\n\n> the unique key that will be part of the url\n\nif you don’t provide, a random one will be generated. is used as key for generating the url of the webhook.\n\nwarning\n\ntake care when using manual key, the key is the only security to protect your webhook and must be considered as a secret !\n\n\n# outputs\n\n\n# body\n\n * type:\n\n> the full body for the webhook request\n\nwe try to deserialize the incoming request as json (array or object).\nif we can’t the full body as string will be available\n\n\n# headers\n\n * type:\n\n> the headers for the webhook request',charsets:{}},{title:"Variables",frontmatter:{order:2,meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Variables"},{property:"og:description",content:"Variables | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Variables"},{name:"twitter:description",content:"Variables | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/",relativePath:"docs/developer-guide/variables/README.md",key:"v-472d66c8",path:"/docs/developer-guide/variables/",headers:[{level:2,title:"Default variable",slug:"default-variable",normalizedTitle:"default variable",charIndex:330},{level:3,title:"Flow & Execution",slug:"flow-execution",normalizedTitle:"flow &amp; execution",charIndex:null},{level:3,title:"Inputs variables",slug:"inputs-variables",normalizedTitle:"inputs variables",charIndex:3331},{level:3,title:"Outputs variables",slug:"outputs-variables",normalizedTitle:"outputs variables",charIndex:3594},{level:2,title:"More",slug:"more",normalizedTitle:"more",charIndex:4142}],lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:"Default variable Flow & Execution Inputs variables Outputs variables More",content:'# Variables\n\nVariables are specific fields for task. They use the power of Pebble with Kestra\'s special context system, allowing powerfull task composition.\n\nVariables can use variable information registered / existing in the execution context. This context are some data injected in Variables and are from different sources:\n\n\n# Default variable\n\n\n# Flow & Execution\n\nFlow & Execution variables allow using current context for this execution in order to customize the tasks (example: name file with current date or current execution id, ...)\n\nThe following table lists all the default variables available on each execution.\n\nPARAMETER                        DESCRIPTION\n{{ flow.id }}                    The name the current flow Id\n{{ flow.namespace }}             The name current namespace\n{{ execution.id }}               Return the execution Id, a unique id for each\n{{ execution.startDate }}        The start date of the current execution, you can format it\n                                 with {{ dateFormat execution.startDate "yyyy-MM-dd\n                                 HH:mm:ss.SSSSSS"}}\n{{ task.id }}                    The current task Id\n{{ task.type }}                  The current task Type (full class name)\n{{ taskrun.id }}                 The current task Id\n{{ taskrun.value }}              The value for current taskrun, only available with (Flowable\n                                 Task)\n{{ taskrun.attemptsCount }}      The number of attempts for current task (when retry or\n                                 restart is done)\n{{ parents.[].taskrun.value }}   The value of parents taskrun, the index if based on closest\n                                 Flowable Task, only available with tasks previsouly in a\n                                 (Flowable Task)\n{{ parents.[].outputs }}         The outputs of parents taskrun, the index if based on\n                                 closest Flowable Task, only available with tasks previsouly\n                                 in a (Flowable Task)\n{{ parent.taskrun.value }}       The value of closest (first) parent taskrun Flowable Task,\n                                 only available with tasks previsouly in a (Flowable Task)\n{{ parent.outputs }}             The outputs of (first) parent taskrun Flowable Task, only\n                                 available with tasks previsouly in a (Flowable Task)\n\nIf the flow is triggered by a schedule, this vars are also available :\n\nPARAMETER                 DESCRIPTION\n{{ schedule.date }}       the date of current schedule\n{{ schedule.next }}       the date of next schedule\n{{ schedule.previous }}   the date of previous schedule\n\nIf the flow is triggered by a flow, this vars are also available :\n\nPARAMETER                    DESCRIPTION\n{{ trigger.executionId }}    the execution id that trigger the current flow\n{{ trigger.namespace }}      the namespace of the flow that trigger the current flow\n{{ trigger.flowId }}         the flow id that trigger the current flow\n{{ trigger.flowRevision }}   the flow revision that trigger the current flow\n\nHere some example usage :\n\nid: context-example\nnamespace: io.kestra.tests\n\ntasks:\n  - id: echo\n    type: io.kestra.core.tasks.debugs.Return\n    format: |\n      taskid: {{task.id}}\n      date: {{  execution.startDate | date("yyyy-MM-dd HH:mm:ss.SSSSSS") }}\n\n\n\n# Inputs variables\n\nYou can use any inputs using his name, example:\n\nid: context-inputs\nnamespace: io.kestra.tests\n\ninputs:\n  - name: myinput\n    type: STRING\n\ntasks:\n  - id: mytask\n    type: io.kestra.core.tasks.debugs.Return\n    format: "{{inputs.myinput}}"\n\n\n\n# Outputs variables\n\nOutputs variables can also be referencing their names with the form\noutputs.NAME.PROPERTY :\n\n * NAME is the taskId you want to locate\n * PROPERTY is the property you want to use, each task type can emit different properties, so look at the\n   documentation of one.\n\nid: context-outpouts\nnamespace: io.kestra.tests\n\ntasks:\n    - id: task-id\n      type: io.kestra.task.templates.Example\n      format: "{{task.id}}"\n    - id: flow-id\n      type: io.kestra.task.templates.Example\n      format: "{{outputs.task-id.child.value}}"\n\n\n\n# More\n\nIn order to customize the :',normalizedContent:'# variables\n\nvariables are specific fields for task. they use the power of pebble with kestra\'s special context system, allowing powerfull task composition.\n\nvariables can use variable information registered / existing in the execution context. this context are some data injected in variables and are from different sources:\n\n\n# default variable\n\n\n# flow & execution\n\nflow & execution variables allow using current context for this execution in order to customize the tasks (example: name file with current date or current execution id, ...)\n\nthe following table lists all the default variables available on each execution.\n\nparameter                        description\n{{ flow.id }}                    the name the current flow id\n{{ flow.namespace }}             the name current namespace\n{{ execution.id }}               return the execution id, a unique id for each\n{{ execution.startdate }}        the start date of the current execution, you can format it\n                                 with {{ dateformat execution.startdate "yyyy-mm-dd\n                                 hh:mm:ss.ssssss"}}\n{{ task.id }}                    the current task id\n{{ task.type }}                  the current task type (full class name)\n{{ taskrun.id }}                 the current task id\n{{ taskrun.value }}              the value for current taskrun, only available with (flowable\n                                 task)\n{{ taskrun.attemptscount }}      the number of attempts for current task (when retry or\n                                 restart is done)\n{{ parents.[].taskrun.value }}   the value of parents taskrun, the index if based on closest\n                                 flowable task, only available with tasks previsouly in a\n                                 (flowable task)\n{{ parents.[].outputs }}         the outputs of parents taskrun, the index if based on\n                                 closest flowable task, only available with tasks previsouly\n                                 in a (flowable task)\n{{ parent.taskrun.value }}       the value of closest (first) parent taskrun flowable task,\n                                 only available with tasks previsouly in a (flowable task)\n{{ parent.outputs }}             the outputs of (first) parent taskrun flowable task, only\n                                 available with tasks previsouly in a (flowable task)\n\nif the flow is triggered by a schedule, this vars are also available :\n\nparameter                 description\n{{ schedule.date }}       the date of current schedule\n{{ schedule.next }}       the date of next schedule\n{{ schedule.previous }}   the date of previous schedule\n\nif the flow is triggered by a flow, this vars are also available :\n\nparameter                    description\n{{ trigger.executionid }}    the execution id that trigger the current flow\n{{ trigger.namespace }}      the namespace of the flow that trigger the current flow\n{{ trigger.flowid }}         the flow id that trigger the current flow\n{{ trigger.flowrevision }}   the flow revision that trigger the current flow\n\nhere some example usage :\n\nid: context-example\nnamespace: io.kestra.tests\n\ntasks:\n  - id: echo\n    type: io.kestra.core.tasks.debugs.return\n    format: |\n      taskid: {{task.id}}\n      date: {{  execution.startdate | date("yyyy-mm-dd hh:mm:ss.ssssss") }}\n\n\n\n# inputs variables\n\nyou can use any inputs using his name, example:\n\nid: context-inputs\nnamespace: io.kestra.tests\n\ninputs:\n  - name: myinput\n    type: string\n\ntasks:\n  - id: mytask\n    type: io.kestra.core.tasks.debugs.return\n    format: "{{inputs.myinput}}"\n\n\n\n# outputs variables\n\noutputs variables can also be referencing their names with the form\noutputs.name.property :\n\n * name is the taskid you want to locate\n * property is the property you want to use, each task type can emit different properties, so look at the\n   documentation of one.\n\nid: context-outpouts\nnamespace: io.kestra.tests\n\ntasks:\n    - id: task-id\n      type: io.kestra.task.templates.example\n      format: "{{task.id}}"\n    - id: flow-id\n      type: io.kestra.task.templates.example\n      format: "{{outputs.task-id.child.value}}"\n\n\n\n# more\n\nin order to customize the :',charsets:{cjk:!0}},{title:"Basic Usage",frontmatter:{order:1,meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Basic Usage"},{property:"og:description",content:"Basic Usage | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/basic-usage.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Basic Usage"},{name:"twitter:description",content:"Basic Usage | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/basic-usage.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/basic-usage.html",relativePath:"docs/developer-guide/variables/basic-usage.md",key:"v-64153d4f",path:"/docs/developer-guide/variables/basic-usage.html",headers:[{level:2,title:"Syntax Reference",slug:"syntax-reference",normalizedTitle:"syntax reference",charIndex:18},{level:2,title:"Variables",slug:"variables",normalizedTitle:"variables",charIndex:437},{level:2,title:"Filters",slug:"filters",normalizedTitle:"filters",charIndex:1019},{level:2,title:"Functions",slug:"functions",normalizedTitle:"functions",charIndex:1420},{level:2,title:"Control Structure",slug:"control-structure",normalizedTitle:"control structure",charIndex:1692},{level:2,title:"Macros",slug:"macros",normalizedTitle:"macros",charIndex:2160},{level:2,title:"Named Arguments",slug:"named-arguments",normalizedTitle:"named arguments",charIndex:2566},{level:2,title:"Comments",slug:"comments",normalizedTitle:"comments",charIndex:3449},{level:2,title:"Expressions",slug:"expressions",normalizedTitle:"expressions",charIndex:194},{level:3,title:"Literals",slug:"literals",normalizedTitle:"literals",charIndex:3823},{level:3,title:"Collections",slug:"collections",normalizedTitle:"collections",charIndex:4585},{level:3,title:"Math",slug:"math",normalizedTitle:"math",charIndex:4832},{level:3,title:"Logic",slug:"logic",normalizedTitle:"logic",charIndex:5044},{level:3,title:"Comparisons",slug:"comparisons",normalizedTitle:"comparisons",charIndex:5284},{level:3,title:"Tests",slug:"tests",normalizedTitle:"tests",charIndex:5438},{level:3,title:"Conditional (Ternary) Operator",slug:"conditional-ternary-operator",normalizedTitle:"conditional (ternary) operator",charIndex:5721},{level:3,title:"Null-Coalescing Operator",slug:"null-coalescing-operator",normalizedTitle:"null-coalescing operator",charIndex:5845},{level:3,title:"Operator Precedence",slug:"operator-precedence",normalizedTitle:"operator precedence",charIndex:6160}],lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:"Syntax Reference Variables Filters Functions Control Structure Macros Named Arguments Comments Expressions Literals Collections Math Logic Comparisons Tests Conditional (Ternary) Operator Null-Coalescing Operator Operator Precedence",content:'# Basic Usage\n\n\n# Syntax Reference\n\nThere are two primary delimiters used within a Pebble template: {{ ... }} and {% ... %}. The first set of delimiters will output the result of an expression. Expressions can be very simple (ex. a variable name) or much more complex.\nThe second set of delimiters is used to change the control flow of the template; it can contain an if-statement, define a parent template, define a new block, etc.\n\n\n# Variables\n\nYou can print variables directly to the output; for example, if the context contains a variable called foo which is a\nString with the value "bar" you can do the following which will output "bar".\n\n{{ foo }}\n\n\nYou can use the dot (.) notation to access attributes of variables. If the attribute contains any atypical characters, you can use the subscript notation ([]) instead.\n\n{{ foo.bar }}\n{{ foo["bar"] }}\n\n\nAdditionally, if foo is a List, then foo[0] can be used.\n\nIf the value of variable (or attribute) is undefined, it will throw an error and failed the task.\n\n\n# Filters\n\nOutput can be further modified with the use of filters. Filters are separated from the variable using a pipe symbol (|) and may have optional arguments in parentheses. Multiple filters can be chained and the output of one filter is applied to the next.\n\n{{ "If life gives you lemons, eat lemons." | upper | abbreviate(13) }}\n\n\nThe above example will output the following:\n\nIF LIFE GI...\n\n\n\n# Functions\n\nWhereas filters are intended to modify existing content/variables, functions are intended to generate new content. Similar to other programming languages, functions are invoked via their name followed by parentheses (()).\n\n{{ max(user.score, highscore) }}\n\n\n\n# Control Structure\n\nPebble provides several tags to control the flow of your template, two of the main ones being the for loop, and for statements.\n\n\n{% for article in articles %}\n    <h3>{{ article.title }}</h3>\n    <p>{{ article.content }}</p>\n{% else %}\n    <p> There are no articles. </p>\n{% endfor %}\n\n\n\n\n{% if category == "news" %}\n    {{ news }}\n{% elseif category == "sports" %}\n    {{ sports }}\n{% else %}\n    <p>Please select a category</p>\n{% endif %}\n\n\n\n\n# Macros\n\nMacros are lightweight and reusable template fragments. A macro is defined via the macro tag:\n\n\n{% macro input(type, name) %}\n\t<input type="{{ type }}" name="{{ name }}" />\n{% endmacro %}\n\n\n\nAnd the macro will be invoked just like a function:\n\n{{ input("text", "name", "Mitchell") }}\n\n\nA macro does not have access to the main context; the only variables it can access are its local arguments.\n\n\n# Named Arguments\n\nUsing named arguments allows you to be more explicit with the values you are passing to a filter, function, test or macro. They also allow you to avoid specifying arguments for which you don\'t want to change the default value.\n\n{{ stringDate | date(existingFormat="yyyy-MMMM-d", format="yyyy/MMMM/d") }}\n\n\nPositional arguments can be used in conjunction with named arguments but all positional arguments must come before any named arguments:\n\n{{ stringDate | date("yyyy/MMMM/d", existingFormat="yyyy-MMMM-d") }}\n\n\nMacros are a great use case for named arguments because they also allow you to define default values for unused arguments:\n\n\n{% macro input(type="text", name, value) %}\n\t<input type="{{ type }}" name="{{ name }}" value="{{ value }}" />\n{% endmacro %}\n\n{{ input(name="country") }}\n\n{# will output: <input type="text" name="country" value="" /> #}\n\n\n\n\n# Comments\n\nYou can comment out any part of the template using the {# ... #} delimiters. These comments will not appear in the rendered output.\n\n\n{# THIS IS A COMMENT #}\n{% for article in articles %}\n\t<h3>{{ article.title }}</h3>\n\t<p>{{ article.content }}</p>\n{% endfor %}\n\n\n\n\n# Expressions\n\nExpressions in a Pebble template are very similar to expressions found in Java.\n\n\n# Literals\n\nThe simplest form of expressions are literals. Literals are representations for Java types such as strings and numbers.\n\n * "Hello World": Everything between two double or single quotes is a string. You can use a backslash to escape\n   quotation marks within the string.\n * "Hello #{who}": String interpolation is also possible using #{} inside quotes. In this example,\n   if the value of the variable who is "world", then the expression will be evaluated to "Hello world".\n * 100 + 10l * 2.5: Integers, longs and floating point numbers are similar to their Java counterparts.\n * true / false: Boolean values equivalent to their Java counterparts.\n * null: Represents no specific value, similar to it\'s Java counterpart. none is an alias for null.\n\n\n# Collections\n\nBoth lists and maps can be created directly within the template.\n\n * ["apple", "banana", "pear"]: A list of strings\n * {"apple":"red", "banana":"yellow", "pear":"green"}: A map of strings\n\nThe collections can contain expressions.\n\n\n# Math\n\nPebble allows you to calculate values using some basic mathematical operators. The following operators are supported:\n\n * +: Addition\n * -: Subtraction\n * /: Division\n * %: Modulus\n * *: Multiplication\n\n\n# Logic\n\nYou can combine multiple expressions with the following operators:\n\n * and: Returns true if both operands are true\n * or: Returns true if either operand is true\n * not: Negates an expression\n * (...): Groups expressions together\n\n\n# Comparisons\n\nThe following comparison operators are supported in any expression: ==, !=, <, >, >=, and <=.\n\n{% if user.age >= 18 %}\n\t...\n{% endif %}\n\n\n\n# Tests\n\nThe is operator performs tests. Tests can be used to test an expression for certain qualities. The right operand is the name of the test:\n\n{% if 3 is odd %}\n\t...\n{% endif %}\n\n\nTests can be negated by using the is not operator:\n\n{% if name is not null %}\n\t...\n{% endif %}\n\n\n\n# Conditional (Ternary) Operator\n\nThe conditional operator is similar to its Java counterpart:\n\n{{ foo ? "yes" : "no" }}\n\n\n\n# Null-Coalescing Operator\n\nThe null-coalescing operator allow to quickly test if a variables is defined (exists) and to use alternative value. :\n\n{% set baz = "baz" %}\n{{ foo ?? bar ?? baz }}\n\n{# results in: \'baz\' #}\n\n{{ foo ?? bar ?? raise }}\n{# results: an exception because none of the 3 vars is defined  #}\n\n\n\n# Operator Precedence\n\nIn order from highest to lowest precedence:\n\n * .\n * |\n * %, /, *\n * -, +\n * ==, !=, >, <, >=, <=\n * is, is not\n * and\n * or',normalizedContent:'# basic usage\n\n\n# syntax reference\n\nthere are two primary delimiters used within a pebble template: {{ ... }} and {% ... %}. the first set of delimiters will output the result of an expression. expressions can be very simple (ex. a variable name) or much more complex.\nthe second set of delimiters is used to change the control flow of the template; it can contain an if-statement, define a parent template, define a new block, etc.\n\n\n# variables\n\nyou can print variables directly to the output; for example, if the context contains a variable called foo which is a\nstring with the value "bar" you can do the following which will output "bar".\n\n{{ foo }}\n\n\nyou can use the dot (.) notation to access attributes of variables. if the attribute contains any atypical characters, you can use the subscript notation ([]) instead.\n\n{{ foo.bar }}\n{{ foo["bar"] }}\n\n\nadditionally, if foo is a list, then foo[0] can be used.\n\nif the value of variable (or attribute) is undefined, it will throw an error and failed the task.\n\n\n# filters\n\noutput can be further modified with the use of filters. filters are separated from the variable using a pipe symbol (|) and may have optional arguments in parentheses. multiple filters can be chained and the output of one filter is applied to the next.\n\n{{ "if life gives you lemons, eat lemons." | upper | abbreviate(13) }}\n\n\nthe above example will output the following:\n\nif life gi...\n\n\n\n# functions\n\nwhereas filters are intended to modify existing content/variables, functions are intended to generate new content. similar to other programming languages, functions are invoked via their name followed by parentheses (()).\n\n{{ max(user.score, highscore) }}\n\n\n\n# control structure\n\npebble provides several tags to control the flow of your template, two of the main ones being the for loop, and for statements.\n\n\n{% for article in articles %}\n    <h3>{{ article.title }}</h3>\n    <p>{{ article.content }}</p>\n{% else %}\n    <p> there are no articles. </p>\n{% endfor %}\n\n\n\n\n{% if category == "news" %}\n    {{ news }}\n{% elseif category == "sports" %}\n    {{ sports }}\n{% else %}\n    <p>please select a category</p>\n{% endif %}\n\n\n\n\n# macros\n\nmacros are lightweight and reusable template fragments. a macro is defined via the macro tag:\n\n\n{% macro input(type, name) %}\n\t<input type="{{ type }}" name="{{ name }}" />\n{% endmacro %}\n\n\n\nand the macro will be invoked just like a function:\n\n{{ input("text", "name", "mitchell") }}\n\n\na macro does not have access to the main context; the only variables it can access are its local arguments.\n\n\n# named arguments\n\nusing named arguments allows you to be more explicit with the values you are passing to a filter, function, test or macro. they also allow you to avoid specifying arguments for which you don\'t want to change the default value.\n\n{{ stringdate | date(existingformat="yyyy-mmmm-d", format="yyyy/mmmm/d") }}\n\n\npositional arguments can be used in conjunction with named arguments but all positional arguments must come before any named arguments:\n\n{{ stringdate | date("yyyy/mmmm/d", existingformat="yyyy-mmmm-d") }}\n\n\nmacros are a great use case for named arguments because they also allow you to define default values for unused arguments:\n\n\n{% macro input(type="text", name, value) %}\n\t<input type="{{ type }}" name="{{ name }}" value="{{ value }}" />\n{% endmacro %}\n\n{{ input(name="country") }}\n\n{# will output: <input type="text" name="country" value="" /> #}\n\n\n\n\n# comments\n\nyou can comment out any part of the template using the {# ... #} delimiters. these comments will not appear in the rendered output.\n\n\n{# this is a comment #}\n{% for article in articles %}\n\t<h3>{{ article.title }}</h3>\n\t<p>{{ article.content }}</p>\n{% endfor %}\n\n\n\n\n# expressions\n\nexpressions in a pebble template are very similar to expressions found in java.\n\n\n# literals\n\nthe simplest form of expressions are literals. literals are representations for java types such as strings and numbers.\n\n * "hello world": everything between two double or single quotes is a string. you can use a backslash to escape\n   quotation marks within the string.\n * "hello #{who}": string interpolation is also possible using #{} inside quotes. in this example,\n   if the value of the variable who is "world", then the expression will be evaluated to "hello world".\n * 100 + 10l * 2.5: integers, longs and floating point numbers are similar to their java counterparts.\n * true / false: boolean values equivalent to their java counterparts.\n * null: represents no specific value, similar to it\'s java counterpart. none is an alias for null.\n\n\n# collections\n\nboth lists and maps can be created directly within the template.\n\n * ["apple", "banana", "pear"]: a list of strings\n * {"apple":"red", "banana":"yellow", "pear":"green"}: a map of strings\n\nthe collections can contain expressions.\n\n\n# math\n\npebble allows you to calculate values using some basic mathematical operators. the following operators are supported:\n\n * +: addition\n * -: subtraction\n * /: division\n * %: modulus\n * *: multiplication\n\n\n# logic\n\nyou can combine multiple expressions with the following operators:\n\n * and: returns true if both operands are true\n * or: returns true if either operand is true\n * not: negates an expression\n * (...): groups expressions together\n\n\n# comparisons\n\nthe following comparison operators are supported in any expression: ==, !=, <, >, >=, and <=.\n\n{% if user.age >= 18 %}\n\t...\n{% endif %}\n\n\n\n# tests\n\nthe is operator performs tests. tests can be used to test an expression for certain qualities. the right operand is the name of the test:\n\n{% if 3 is odd %}\n\t...\n{% endif %}\n\n\ntests can be negated by using the is not operator:\n\n{% if name is not null %}\n\t...\n{% endif %}\n\n\n\n# conditional (ternary) operator\n\nthe conditional operator is similar to its java counterpart:\n\n{{ foo ? "yes" : "no" }}\n\n\n\n# null-coalescing operator\n\nthe null-coalescing operator allow to quickly test if a variables is defined (exists) and to use alternative value. :\n\n{% set baz = "baz" %}\n{{ foo ?? bar ?? baz }}\n\n{# results in: \'baz\' #}\n\n{{ foo ?? bar ?? raise }}\n{# results: an exception because none of the 3 vars is defined  #}\n\n\n\n# operator precedence\n\nin order from highest to lowest precedence:\n\n * .\n * |\n * %, /, *\n * -, +\n * ==, !=, >, <, >=, <=\n * is, is not\n * and\n * or',charsets:{cjk:!0}},{title:"Deprecated Handlebars",frontmatter:{order:10,meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Deprecated Handlebars"},{property:"og:description",content:"Deprecated Handlebars | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/deprecated-handlebars/"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Deprecated Handlebars"},{name:"twitter:description",content:"Deprecated Handlebars | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/deprecated-handlebars/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/deprecated-handlebars/",relativePath:"docs/developer-guide/variables/deprecated-handlebars/README.md",key:"v-854686b0",path:"/docs/developer-guide/variables/deprecated-handlebars/",headers:[{level:2,title:"Functions",slug:"functions",normalizedTitle:"functions",charIndex:480}],lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:"Functions",content:"# Deprecated Handlebars\n\nWARNING\n\nHandlebars variable is deprecated and superseded by Pebble. These function will be removed soon and is disabled by default\n\nVariables are specific fields for task. They use the power of handlebars with Kestra's special context system, allowing powerfull task composition.\n\nVariables can use variable information registrered / existing in the execution context. This context are some data injected in Variables and are from different sources:\n\n\n# Functions\n\nSome time, you need to change the format of variables. For this, you can use some functions:\n\n * String functions\n * Boolean functions\n * Number functions\n * Date functions\n * Json functions\n * Iterations functions\n * Vars functions",normalizedContent:"# deprecated handlebars\n\nwarning\n\nhandlebars variable is deprecated and superseded by pebble. these function will be removed soon and is disabled by default\n\nvariables are specific fields for task. they use the power of handlebars with kestra's special context system, allowing powerfull task composition.\n\nvariables can use variable information registrered / existing in the execution context. this context are some data injected in variables and are from different sources:\n\n\n# functions\n\nsome time, you need to change the format of variables. for this, you can use some functions:\n\n * string functions\n * boolean functions\n * number functions\n * date functions\n * json functions\n * iterations functions\n * vars functions",charsets:{}},{title:"Boolean functions",frontmatter:{order:5,meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Boolean functions"},{property:"og:description",content:"Boolean functions | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/deprecated-handlebars/boolean.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Boolean functions"},{name:"twitter:description",content:"Boolean functions | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/deprecated-handlebars/boolean.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/deprecated-handlebars/boolean.html",relativePath:"docs/developer-guide/variables/deprecated-handlebars/boolean.md",key:"v-23612046",path:"/docs/developer-guide/variables/deprecated-handlebars/boolean.html",headers:[{level:3,title:"eq: Equality",slug:"eq-equality",normalizedTitle:"eq: equality",charIndex:26},{level:3,title:"neq: Not equality",slug:"neq-not-equality",normalizedTitle:"neq: not equality",charIndex:42},{level:3,title:"gt: Greater operator",slug:"gt-greater-operator",normalizedTitle:"gt: greater operator",charIndex:63},{level:3,title:"gte: Greater or equal operator",slug:"gte-greater-or-equal-operator",normalizedTitle:"gte: greater or equal operator",charIndex:87},{level:3,title:"lt: Less operator",slug:"lt-less-operator",normalizedTitle:"lt: less operator",charIndex:121},{level:3,title:"lte: Less or equal operator",slug:"lte-less-or-equal-operator",normalizedTitle:"lte: less or equal operator",charIndex:142},{level:3,title:"and: And operator",slug:"and-and-operator",normalizedTitle:"and: and operator",charIndex:173},{level:3,title:"or: Or operator",slug:"or-or-operator",normalizedTitle:"or: or operator",charIndex:194},{level:3,title:"not: Not operator",slug:"not-not-operator",normalizedTitle:"not: not operator",charIndex:213},{level:3,title:"cmp: Compare operator",slug:"cmp-compare-operator",normalizedTitle:"cmp: compare operator",charIndex:234},{level:3,title:"isNull: Compare operator",slug:"isnull-compare-operator",normalizedTitle:"isnull: compare operator",charIndex:259},{level:3,title:"isNotNull: Compare operator",slug:"isnotnull-compare-operator",normalizedTitle:"isnotnull: compare operator",charIndex:287}],lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:"eq: Equality neq: Not equality gt: Greater operator gte: Greater or equal operator lt: Less operator lte: Less or equal operator and: And operator or: Or operator not: Not operator cmp: Compare operator isNull: Compare operator isNotNull: Compare operator",content:"# Boolean functions\n\n\n\n * eq: Equality\n * neq: Not equality\n * gt: Greater operator\n * gte: Greater or equal operator\n * lt: Less operator\n * lte: Less or equal operator\n * and: And operator\n * or: Or operator\n * not: Not operator\n * cmp: Compare operator\n * isNull: Compare operator\n * isNotNull: Compare operator\n\n\n\n\n# eq: Equality\n\nTest if two elements are equals.\n\n> Render yes or no:\n\n  {{#eq a b}}\n    yes\n  {{else}}\n    no\n  {{/eq}}\n\n\n> Render true or false:\n\n  {{eq a b}}\n\n\n> Render yes or no:\n\n  {{eq a b yes='yes' no='no'}}\n\n\n\n# neq: Not equality\n\nTest if two elements are NOT equals.\n\n> Render yes or no:\n\n  {{#neq a b}}\n    yes\n  {{else}}\n    no\n  {{/neq}}\n\n\n> Render true or false:\n\n  {{neq a b}}\n\n\n> Render yes or no:\n\n  {{neq a b yes='yes' no='no'}}\n\n\n\n# gt: Greater operator\n\nGreater operator (arguments must be Comparable elements).\n\n> Render yes or no:\n\n  {{#gt a b}}\n    yes\n  {{else}}\n    no\n  {{/gt}}\n\n\n> Render true or false:\n\n  {{gt a b}}\n\n\n> Render yes or no:\n\n  {{gte a b yes='yes' no='no'}}\n\n\n\n# gte: Greater or equal operator\n\nGreater or equal operator (arguments must be Comparable elements).\n\n> Render yes or no:\n\n  {{#gte a b}}\n    yes\n  {{else}}\n    no\n  {{/gte}}\n\n\n> Render true or false:\n\n  {{gte a b}}\n\n\n> Render yes or no:\n\n  {{gte a b yes='yes' no='no'}}\n\n\n\n# lt: Less operator\n\nLess than operator (arguments must be Comparable elements).\n\n> Render yes or no:\n\n  {{#lt a b}}\n    yes\n  {{else}}\n    no\n  {{/lt}}\n\n\n> Render true or false:\n\n  {{lt a b}}\n\n\n> Render yes or no:\n\n  {{lt a b yes='yes' no='no'}}\n\n\n\n# lte: Less or equal operator\n\nLess than operator (arguments must be Comparable elements.\n\n> Render yes or no:\n\n  {{#lte a b}}\n    yes\n  {{else}}\n    no\n  {{/lte}}\n\n\n> Render true or false:\n\n  {{lte a b}}\n\n\n> Render yes or no:\n\n  {{lte a b yes='yes' no='no'}}\n\n\n\n# and: And operator\n\nAnd operator. This is a boolean operation.\n\nTruthiness of arguments is determined by isEmpty, so this\nhelper can be used with non-boolean values.\n\nMultiple arguments are supported too:\n\n  {{#and a b c d}}\n    yes\n  {{else}}\n    no\n  {{/and}}\n\n\n> Render yes or no:\n\n  {{#and a b}}\n    yes\n  {{else}}\n    no\n  {{/and}}\n\n\n> Render true or false:\n\n  {{and a b}}\n\n\n> Render yes or no:\n\n  {{and a b yes='yes' no='no'}}\n\n\n\n# or: Or operator\n\nOr operator. This is a boolean operation\n\nTruthiness of arguments is determined by isEmpty, so this\nhelper can be used with non-boolean values.\n\nMultiple arguments are supported too:\n\n  {{#or a b c d}}\n    yes\n  {{else}}\n    no\n  {{/or}}\n\n\n> Render yes or no:\n\n  {{#or a b}}\n    yes\n  {{else}}\n    no\n  {{/or}}\n\n\n> Render true or false:\n\n  {{or a b}}\n\n\n> Render yes or no:\n\n  {{or a b yes='yes' no='no'}}\n\n\n\n# not: Not operator\n\nTruthiness of arguments is determined by isEmpty, so this\nhelper can be used with non-boolean values.\n\n> Render yes or no:\n\n  {{#not a}}\n    yes\n  {{else}}\n    no\n  {{/not}}\n\n\n> Render true or false:\n\n  {{not a}}\n\n\n> Render y or n:\n\n  {{not a yes='yes' no='no'}}\n\n\n\n# cmp: Compare operator\n\nCompare to object as Comparables.\n\n> Renders 1 if a > b, 0 if a == b -1 if a < b\n\n  {{cmp a b}}\n\n\n\n# isNull: Compare operator\n\nTest if one element is null.\n\n  {{isNull a}}\n\n\n\n# isNotNull: Compare operator\n\nTest if one element is not null.\n\n  {{isNotNull a}}\n",normalizedContent:"# boolean functions\n\n\n\n * eq: equality\n * neq: not equality\n * gt: greater operator\n * gte: greater or equal operator\n * lt: less operator\n * lte: less or equal operator\n * and: and operator\n * or: or operator\n * not: not operator\n * cmp: compare operator\n * isnull: compare operator\n * isnotnull: compare operator\n\n\n\n\n# eq: equality\n\ntest if two elements are equals.\n\n> render yes or no:\n\n  {{#eq a b}}\n    yes\n  {{else}}\n    no\n  {{/eq}}\n\n\n> render true or false:\n\n  {{eq a b}}\n\n\n> render yes or no:\n\n  {{eq a b yes='yes' no='no'}}\n\n\n\n# neq: not equality\n\ntest if two elements are not equals.\n\n> render yes or no:\n\n  {{#neq a b}}\n    yes\n  {{else}}\n    no\n  {{/neq}}\n\n\n> render true or false:\n\n  {{neq a b}}\n\n\n> render yes or no:\n\n  {{neq a b yes='yes' no='no'}}\n\n\n\n# gt: greater operator\n\ngreater operator (arguments must be comparable elements).\n\n> render yes or no:\n\n  {{#gt a b}}\n    yes\n  {{else}}\n    no\n  {{/gt}}\n\n\n> render true or false:\n\n  {{gt a b}}\n\n\n> render yes or no:\n\n  {{gte a b yes='yes' no='no'}}\n\n\n\n# gte: greater or equal operator\n\ngreater or equal operator (arguments must be comparable elements).\n\n> render yes or no:\n\n  {{#gte a b}}\n    yes\n  {{else}}\n    no\n  {{/gte}}\n\n\n> render true or false:\n\n  {{gte a b}}\n\n\n> render yes or no:\n\n  {{gte a b yes='yes' no='no'}}\n\n\n\n# lt: less operator\n\nless than operator (arguments must be comparable elements).\n\n> render yes or no:\n\n  {{#lt a b}}\n    yes\n  {{else}}\n    no\n  {{/lt}}\n\n\n> render true or false:\n\n  {{lt a b}}\n\n\n> render yes or no:\n\n  {{lt a b yes='yes' no='no'}}\n\n\n\n# lte: less or equal operator\n\nless than operator (arguments must be comparable elements.\n\n> render yes or no:\n\n  {{#lte a b}}\n    yes\n  {{else}}\n    no\n  {{/lte}}\n\n\n> render true or false:\n\n  {{lte a b}}\n\n\n> render yes or no:\n\n  {{lte a b yes='yes' no='no'}}\n\n\n\n# and: and operator\n\nand operator. this is a boolean operation.\n\ntruthiness of arguments is determined by isempty, so this\nhelper can be used with non-boolean values.\n\nmultiple arguments are supported too:\n\n  {{#and a b c d}}\n    yes\n  {{else}}\n    no\n  {{/and}}\n\n\n> render yes or no:\n\n  {{#and a b}}\n    yes\n  {{else}}\n    no\n  {{/and}}\n\n\n> render true or false:\n\n  {{and a b}}\n\n\n> render yes or no:\n\n  {{and a b yes='yes' no='no'}}\n\n\n\n# or: or operator\n\nor operator. this is a boolean operation\n\ntruthiness of arguments is determined by isempty, so this\nhelper can be used with non-boolean values.\n\nmultiple arguments are supported too:\n\n  {{#or a b c d}}\n    yes\n  {{else}}\n    no\n  {{/or}}\n\n\n> render yes or no:\n\n  {{#or a b}}\n    yes\n  {{else}}\n    no\n  {{/or}}\n\n\n> render true or false:\n\n  {{or a b}}\n\n\n> render yes or no:\n\n  {{or a b yes='yes' no='no'}}\n\n\n\n# not: not operator\n\ntruthiness of arguments is determined by isempty, so this\nhelper can be used with non-boolean values.\n\n> render yes or no:\n\n  {{#not a}}\n    yes\n  {{else}}\n    no\n  {{/not}}\n\n\n> render true or false:\n\n  {{not a}}\n\n\n> render y or n:\n\n  {{not a yes='yes' no='no'}}\n\n\n\n# cmp: compare operator\n\ncompare to object as comparables.\n\n> renders 1 if a > b, 0 if a == b -1 if a < b\n\n  {{cmp a b}}\n\n\n\n# isnull: compare operator\n\ntest if one element is null.\n\n  {{isnull a}}\n\n\n\n# isnotnull: compare operator\n\ntest if one element is not null.\n\n  {{isnotnull a}}\n",charsets:{}},{title:"Date functions",frontmatter:{order:4,meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Date functions"},{property:"og:description",content:"Date functions | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/deprecated-handlebars/date.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Date functions"},{name:"twitter:description",content:"Date functions | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/deprecated-handlebars/date.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/deprecated-handlebars/date.html",relativePath:"docs/developer-guide/variables/deprecated-handlebars/date.md",key:"v-379f3ffa",path:"/docs/developer-guide/variables/deprecated-handlebars/date.html",headers:[{level:2,title:"dateFormat: Date format",slug:"dateformat-date-format",normalizedTitle:"dateformat: date format",charIndex:23},{level:2,title:"now: Current date",slug:"now-current-date",normalizedTitle:"now: current date",charIndex:50},{level:2,title:"timestamp: Current second timestamp",slug:"timestamp-current-second-timestamp",normalizedTitle:"timestamp: current second timestamp",charIndex:71},{level:2,title:"nanotimestamp: Current nano timestamp",slug:"nanotimestamp-current-nano-timestamp",normalizedTitle:"nanotimestamp: current nano timestamp",charIndex:110},{level:2,title:"microtimestamp: Current micro timestamp",slug:"microtimestamp-current-micro-timestamp",normalizedTitle:"microtimestamp: current micro timestamp",charIndex:151},{level:2,title:"dateAdd: Add some units to date",slug:"dateadd-add-some-units-to-date",normalizedTitle:"dateadd: add some units to date",charIndex:194}],lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:"dateFormat: Date format now: Current date timestamp: Current second timestamp nanotimestamp: Current nano timestamp microtimestamp: Current micro timestamp dateAdd: Add some units to date",content:"# Date functions\n\n\n\n * dateFormat: Date format\n * now: Current date\n * timestamp: Current second timestamp\n * nanotimestamp: Current nano timestamp\n * microtimestamp: Current micro timestamp\n * dateAdd: Add some units to date\n\n\n\n\n# dateFormat: Date format\n\n{{dateFormat date ['format'] [format='format'][tz=timeZone|timeZoneId]}}\n\n\n# Arguments:\n\n * format: Format parameters is one of :\n   * full: Sunday, September 8, 2013 at 4:19:12 PM Central European Summer Time\n   * long: September 8, 2013 at 4:19:12 PM CEST\n   * medium: Sep 8, 2013, 4:19:12 PM\n   * short: 9/8/13, 4:19 PM\n   * iso: 2013-09-08T16:19:12.000000+02:00\n   * iso_sec: 2013-09-08T16:19:12+02:00\n   * sql: 2013-09-08 16:19:12.000000\n   * sql_seq: 2013-09-08 16:19:12\n   * iso_date_time: 2013-09-08T16:19:12+02:00[Europe/Paris]\n   * iso_date: 2013-09-08+02:00\n   * iso_time: 16:19:12+02:00\n   * iso_local_date: 2013-09-08\n   * iso_instant: 2013-09-08T14:19:12Z\n   * iso_local_date_time: 2013-09-08T16:19:12\n   * iso_local_time: 16:19:12\n   * iso_offset_time: 16:19:12+02:00\n   * iso_ordinal_date: 2013-251+02:00\n   * iso_week_date: 2013-W36-7+02:00\n   * iso_zoned_date_time: 2013-09-08T16:19:12+02:00[Europe/Paris]\n   * rfc_1123_date_time: Sun, 8 Sep 2013 16:19:12 +0200\n   * pattern: a date pattern.\n   * Otherwise, the default formatter iso will be used. The format option can be specified as a parameter or hash (a.k.a named parameter).\n   * You can pass the any format from SimpleDateFormat\n * timezeome: with the format Europe/Paris\n\n\n# now: Current date\n\n   {{now ['format'] [tz=timeZone|timeZoneId]}}\n\n\n# Arguments:\n\n * format: Same format as dateFormat\n * timezone: with the format Europe/Paris\n\n\n# timestamp: Current second timestamp\n\n   {{timestamp}}\n\n\n\n# nanotimestamp: Current nano timestamp\n\n   {{nanotimestamp}}\n\n\n\n# microtimestamp: Current micro timestamp\n\n   {{microtimestamp}}\n\n\n\n# dateAdd: Add some units to date\n\n   {{ dateAdd yourDate quantity \"unit\" [format=\"format\"] [tz=timeZone|timeZoneId] }}\n   {{ dateAdd yourDate -1 \"DAYS\" }}\n\n\n * quantity: an integer value positive or negative\n * format: Format parameters is one of :\n   * NANOS\n   * MICROS\n   * MILLIS\n   * SECONDS\n   * MINUTES\n   * HOURS\n   * HALF_DAYS\n   * DAYS\n   * WEEKS\n   * MONTHS\n   * YEARS\n   * DECADES\n   * CENTURIES\n   * MILLENNIA\n   * ERAS",normalizedContent:"# date functions\n\n\n\n * dateformat: date format\n * now: current date\n * timestamp: current second timestamp\n * nanotimestamp: current nano timestamp\n * microtimestamp: current micro timestamp\n * dateadd: add some units to date\n\n\n\n\n# dateformat: date format\n\n{{dateformat date ['format'] [format='format'][tz=timezone|timezoneid]}}\n\n\n# arguments:\n\n * format: format parameters is one of :\n   * full: sunday, september 8, 2013 at 4:19:12 pm central european summer time\n   * long: september 8, 2013 at 4:19:12 pm cest\n   * medium: sep 8, 2013, 4:19:12 pm\n   * short: 9/8/13, 4:19 pm\n   * iso: 2013-09-08t16:19:12.000000+02:00\n   * iso_sec: 2013-09-08t16:19:12+02:00\n   * sql: 2013-09-08 16:19:12.000000\n   * sql_seq: 2013-09-08 16:19:12\n   * iso_date_time: 2013-09-08t16:19:12+02:00[europe/paris]\n   * iso_date: 2013-09-08+02:00\n   * iso_time: 16:19:12+02:00\n   * iso_local_date: 2013-09-08\n   * iso_instant: 2013-09-08t14:19:12z\n   * iso_local_date_time: 2013-09-08t16:19:12\n   * iso_local_time: 16:19:12\n   * iso_offset_time: 16:19:12+02:00\n   * iso_ordinal_date: 2013-251+02:00\n   * iso_week_date: 2013-w36-7+02:00\n   * iso_zoned_date_time: 2013-09-08t16:19:12+02:00[europe/paris]\n   * rfc_1123_date_time: sun, 8 sep 2013 16:19:12 +0200\n   * pattern: a date pattern.\n   * otherwise, the default formatter iso will be used. the format option can be specified as a parameter or hash (a.k.a named parameter).\n   * you can pass the any format from simpledateformat\n * timezeome: with the format europe/paris\n\n\n# now: current date\n\n   {{now ['format'] [tz=timezone|timezoneid]}}\n\n\n# arguments:\n\n * format: same format as dateformat\n * timezone: with the format europe/paris\n\n\n# timestamp: current second timestamp\n\n   {{timestamp}}\n\n\n\n# nanotimestamp: current nano timestamp\n\n   {{nanotimestamp}}\n\n\n\n# microtimestamp: current micro timestamp\n\n   {{microtimestamp}}\n\n\n\n# dateadd: add some units to date\n\n   {{ dateadd yourdate quantity \"unit\" [format=\"format\"] [tz=timezone|timezoneid] }}\n   {{ dateadd yourdate -1 \"days\" }}\n\n\n * quantity: an integer value positive or negative\n * format: format parameters is one of :\n   * nanos\n   * micros\n   * millis\n   * seconds\n   * minutes\n   * hours\n   * half_days\n   * days\n   * weeks\n   * months\n   * years\n   * decades\n   * centuries\n   * millennia\n   * eras",charsets:{cjk:!0}},{title:"Iterations functions",frontmatter:{order:6,meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Iterations functions"},{property:"og:description",content:"Iterations functions | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/deprecated-handlebars/iterations.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Iterations functions"},{name:"twitter:description",content:"Iterations functions | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/deprecated-handlebars/iterations.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/deprecated-handlebars/iterations.html",relativePath:"docs/developer-guide/variables/deprecated-handlebars/iterations.md",key:"v-500babc3",path:"/docs/developer-guide/variables/deprecated-handlebars/iterations.html",headers:[{level:2,title:"For each",slug:"for-each",normalizedTitle:"for each",charIndex:29}],lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:"For each",content:'# Iterations functions\n\n\n\n * For each\n\n\n\n\n# For each\n\nYou can iterate over a list using the built-in each helper. Inside the block, you can use this to reference the element being iterated over. contextualListVariable is an iterable item on which the mydata property is displayed for all entries.\n\nThe @index is a special variable available in the each loop context which value is the current index of the element beeing iterated. There are agic* variables like @index in a each context. The following ones are also available: @key @index @first @last @odd @even\n\nSee handlebars documentation for more about this topic.\n\n{{#each contextualListVariable}}\n    {{this.mydata}} {{@index}}\n{{/each}}\n\n\nwill produce\n\none 0\ntwo 1\nthree 2\ndjango! 3\n\n\nfor the following data sample when\n\ncontextualListVariable = [\n  {"mydata": "one"},\n  {"mydata": "two"},\n  {"mydata": "three"},\n  {"mydata": "django!"},\n]\n\n\nIf the contextual this is not convinient to use data as you wish it is possible to alias it like below:\n\n{{#each iterableVariable as | myItem | }}\n    {{myItem.mydata}}\n{{/each}}\n',normalizedContent:'# iterations functions\n\n\n\n * for each\n\n\n\n\n# for each\n\nyou can iterate over a list using the built-in each helper. inside the block, you can use this to reference the element being iterated over. contextuallistvariable is an iterable item on which the mydata property is displayed for all entries.\n\nthe @index is a special variable available in the each loop context which value is the current index of the element beeing iterated. there are agic* variables like @index in a each context. the following ones are also available: @key @index @first @last @odd @even\n\nsee handlebars documentation for more about this topic.\n\n{{#each contextuallistvariable}}\n    {{this.mydata}} {{@index}}\n{{/each}}\n\n\nwill produce\n\none 0\ntwo 1\nthree 2\ndjango! 3\n\n\nfor the following data sample when\n\ncontextuallistvariable = [\n  {"mydata": "one"},\n  {"mydata": "two"},\n  {"mydata": "three"},\n  {"mydata": "django!"},\n]\n\n\nif the contextual this is not convinient to use data as you wish it is possible to alias it like below:\n\n{{#each iterablevariable as | myitem | }}\n    {{myitem.mydata}}\n{{/each}}\n',charsets:{cjk:!0}},{title:"JSON functions",frontmatter:{order:7,meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"JSON functions"},{property:"og:description",content:"JSON functions | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/deprecated-handlebars/json.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"JSON functions"},{name:"twitter:description",content:"JSON functions | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/deprecated-handlebars/json.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/deprecated-handlebars/json.html",relativePath:"docs/developer-guide/variables/deprecated-handlebars/json.md",key:"v-a9bb447a",path:"/docs/developer-guide/variables/deprecated-handlebars/json.html",headers:[{level:2,title:"json Convert an object to json",slug:"json-convert-an-object-to-json",normalizedTitle:"json convert an object to json",charIndex:23},{level:2,title:"jq Transform vars with JQ",slug:"jq-transform-vars-with-jq",normalizedTitle:"jq transform vars with jq",charIndex:57}],lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:"json Convert an object to json jq Transform vars with JQ",content:'# JSON functions\n\n\n\n * json Convert an object to json\n * jq Transform vars with JQ\n\n\n\n\n# json Convert an object to json\n\nConvert an object to is JSON representation\n\n{{json output.task-id}}\n\n\nExample, if the current context is :\n\n{\n  "outputs": {\n    "task1": {\n      "value": 1,\n      "text": "awesome1"\n    },\n    "task2": {\n      "value": 2,\n      "text": "awesome2"\n    }\n  }\n}\n\n\nthe output of {{ json outputs.task2}} will be {"value":2,"text":"awesome2"}.\n\n\n# jq Transform vars with JQ\n\nApply the JQ expression to a variables.\n\n{{jq vars jqExpr [first=false]}}\n\n\nfirst mean to always fetch the first element, by default jq return an array of results\n\nWARNING\n\nInternally, Jackson JQ is used and support only a large subset of official JQ.\n\nExample, if the current context is :\n\n{\n  "outputs": {\n    "task1": {\n      "value": 1,\n      "text": "awesome1"\n    },\n    "task2": {\n      "value": 2,\n      "text": "awesome2"\n    }\n  }\n}\n\n\n{{jq outputs .task1.value true}}\n\n\nthe output will be 1.',normalizedContent:'# json functions\n\n\n\n * json convert an object to json\n * jq transform vars with jq\n\n\n\n\n# json convert an object to json\n\nconvert an object to is json representation\n\n{{json output.task-id}}\n\n\nexample, if the current context is :\n\n{\n  "outputs": {\n    "task1": {\n      "value": 1,\n      "text": "awesome1"\n    },\n    "task2": {\n      "value": 2,\n      "text": "awesome2"\n    }\n  }\n}\n\n\nthe output of {{ json outputs.task2}} will be {"value":2,"text":"awesome2"}.\n\n\n# jq transform vars with jq\n\napply the jq expression to a variables.\n\n{{jq vars jqexpr [first=false]}}\n\n\nfirst mean to always fetch the first element, by default jq return an array of results\n\nwarning\n\ninternally, jackson jq is used and support only a large subset of official jq.\n\nexample, if the current context is :\n\n{\n  "outputs": {\n    "task1": {\n      "value": 1,\n      "text": "awesome1"\n    },\n    "task2": {\n      "value": 2,\n      "text": "awesome2"\n    }\n  }\n}\n\n\n{{jq outputs .task1.value true}}\n\n\nthe output will be 1.',charsets:{}},{title:"Number functions",frontmatter:{order:3,meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Number functions"},{property:"og:description",content:"Number functions | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/deprecated-handlebars/number.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Number functions"},{name:"twitter:description",content:"Number functions | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/deprecated-handlebars/number.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/deprecated-handlebars/number.html",relativePath:"docs/developer-guide/variables/deprecated-handlebars/number.md",key:"v-375945a3",path:"/docs/developer-guide/variables/deprecated-handlebars/number.html",headers:[{level:2,title:"numberFormat: Format a number",slug:"numberformat-format-a-number",normalizedTitle:"numberformat: format a number",charIndex:25}],lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:"numberFormat: Format a number",content:'# Number functions\n\n\n\n * numberFormat: Format a number\n\n\n\n\n# numberFormat: Format a number\n\n   {{numberFormat number ["format"] [locale=default]}}\n\n\nArguments:\n\n * format: Format parameters is one of:\n   * "integer": the integer number format\n   * "percent": the percent number format\n   * "currency": the decimal number format\n   * "pattern": a decimal pattern.\n   * Otherwise, the default formatter will be used.\n\nMore options:\n\n * groupingUsed: Set whether or not grouping will be used in this format.\n * maximumFractionDigits: Sets the maximum number of digits allowed in the fraction portion of\n   a number.\n * maximumIntegerDigits: Sets the maximum number of digits allowed in the integer portion of a\n   number\n * minimumFractionDigits: Sets the minimum number of digits allowed in the fraction portion of\n   a number\n * minimumIntegerDigits: Sets the minimum number of digits allowed in the integer portion of a\n   number.\n * parseIntegerOnly: Sets whether or not numbers should be parsed as integers only.\n * roundingMode: Sets the {@link java.math.RoundingMode} used in this NumberFormat.',normalizedContent:'# number functions\n\n\n\n * numberformat: format a number\n\n\n\n\n# numberformat: format a number\n\n   {{numberformat number ["format"] [locale=default]}}\n\n\narguments:\n\n * format: format parameters is one of:\n   * "integer": the integer number format\n   * "percent": the percent number format\n   * "currency": the decimal number format\n   * "pattern": a decimal pattern.\n   * otherwise, the default formatter will be used.\n\nmore options:\n\n * groupingused: set whether or not grouping will be used in this format.\n * maximumfractiondigits: sets the maximum number of digits allowed in the fraction portion of\n   a number.\n * maximumintegerdigits: sets the maximum number of digits allowed in the integer portion of a\n   number\n * minimumfractiondigits: sets the minimum number of digits allowed in the fraction portion of\n   a number\n * minimumintegerdigits: sets the minimum number of digits allowed in the integer portion of a\n   number.\n * parseintegeronly: sets whether or not numbers should be parsed as integers only.\n * roundingmode: sets the {@link java.math.roundingmode} used in this numberformat.',charsets:{}},{title:"String functions",frontmatter:{order:2,meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"String functions"},{property:"og:description",content:"String functions | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/deprecated-handlebars/string.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"String functions"},{name:"twitter:description",content:"String functions | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/deprecated-handlebars/string.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/deprecated-handlebars/string.html",relativePath:"docs/developer-guide/variables/deprecated-handlebars/string.md",key:"v-5ce9c2ba",path:"/docs/developer-guide/variables/deprecated-handlebars/string.html",headers:[{level:2,title:"capitalizeFirst: Capitalizes the first character of the value.",slug:"capitalizefirst-capitalizes-the-first-character-of-the-value",normalizedTitle:"capitalizefirst: capitalizes the first character of the value.",charIndex:25},{level:2,title:"center: Centers the value in a field of a given width.",slug:"center-centers-the-value-in-a-field-of-a-given-width",normalizedTitle:"center: centers the value in a field of a given width.",charIndex:91},{level:2,title:"cut: Removes all values of arg from the given string.",slug:"cut-removes-all-values-of-arg-from-the-given-string",normalizedTitle:"cut: removes all values of arg from the given string.",charIndex:149},{level:2,title:"defaultIfEmpty: Default if empty",slug:"defaultifempty-default-if-empty",normalizedTitle:"defaultifempty: default if empty",charIndex:206},{level:2,title:"join: Join string",slug:"join-join-string",normalizedTitle:"join: join string",charIndex:242},{level:2,title:"ljust: Left-aligns the value in a field of a given width.",slug:"ljust-left-aligns-the-value-in-a-field-of-a-given-width",normalizedTitle:"ljust: left-aligns the value in a field of a given width.",charIndex:263},{level:2,title:"rjust: Right-aligns the value in a field of a given width.",slug:"rjust-right-aligns-the-value-in-a-field-of-a-given-width",normalizedTitle:"rjust: right-aligns the value in a field of a given width.",charIndex:324},{level:2,title:"substring Substring",slug:"substring-substring",normalizedTitle:"substring substring",charIndex:386},{level:2,title:"lower: Converts a string into all lowercase.",slug:"lower-converts-a-string-into-all-lowercase",normalizedTitle:"lower: converts a string into all lowercase.",charIndex:409},{level:2,title:"upper Converts a string into all uppercase.",slug:"upper-converts-a-string-into-all-uppercase",normalizedTitle:"upper converts a string into all uppercase.",charIndex:457},{level:2,title:"stringFormat: Formats the variable",slug:"stringformat-formats-the-variable",normalizedTitle:"stringformat: formats the variable",charIndex:504},{level:2,title:"stripTags: Strips all [X]HTML tags.",slug:"striptags-strips-all-x-html-tags",normalizedTitle:"striptags: strips all [x]html tags.",charIndex:542},{level:2,title:"capitalize: Capitalizes all the whitespace separated words in a String.",slug:"capitalize-capitalizes-all-the-whitespace-separated-words-in-a-string",normalizedTitle:"capitalize: capitalizes all the whitespace separated words in a string.",charIndex:581},{level:2,title:"abbreviate: Truncates a string",slug:"abbreviate-truncates-a-string",normalizedTitle:"abbreviate: truncates a string",charIndex:656},{level:2,title:"wordWrap: Wraps words",slug:"wordwrap-wraps-words",normalizedTitle:"wordwrap: wraps words",charIndex:690},{level:2,title:"replace Replaces",slug:"replace-replaces",normalizedTitle:"replace replaces",charIndex:715},{level:2,title:"yesno: Boolean to yes / no",slug:"yesno-boolean-to-yes-no",normalizedTitle:"yesno: boolean to yes / no",charIndex:735}],lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:"capitalizeFirst: Capitalizes the first character of the value. center: Centers the value in a field of a given width. cut: Removes all values of arg from the given string. defaultIfEmpty: Default if empty join: Join string ljust: Left-aligns the value in a field of a given width. rjust: Right-aligns the value in a field of a given width. substring Substring lower: Converts a string into all lowercase. upper Converts a string into all uppercase. stringFormat: Formats the variable stripTags: Strips all [X]HTML tags. capitalize: Capitalizes all the whitespace separated words in a String. abbreviate: Truncates a string wordWrap: Wraps words replace Replaces yesno: Boolean to yes / no",content:'# String functions\n\n\n\n * capitalizeFirst: Capitalizes the first character of the value.\n * center: Centers the value in a field of a given width.\n * cut: Removes all values of arg from the given string.\n * defaultIfEmpty: Default if empty\n * join: Join string\n * ljust: Left-aligns the value in a field of a given width.\n * rjust: Right-aligns the value in a field of a given width.\n * substring Substring\n * lower: Converts a string into all lowercase.\n * upper Converts a string into all uppercase.\n * stringFormat: Formats the variable\n * stripTags: Strips all [X]HTML tags.\n * capitalize: Capitalizes all the whitespace separated words in a String.\n * abbreviate: Truncates a string\n * wordWrap: Wraps words\n * replace Replaces\n * yesno: Boolean to yes / no\n\n\n\n\n# capitalizeFirst: Capitalizes the first character of the value.\n\nIf value is "kestra is cool !", the output will be "Kestra is cool !".\n\n{{capitalizeFirst value}}\n\n\n\n# center: Centers the value in a field of a given width.\n\nIf value is "Handlebars.java", the output will be " Handlebars.java ".\n\n{{ center value size=19 [pad="char"] }}\n\n\n# Arguments:\n\n * size\n * pad\n\n\n# cut: Removes all values of arg from the given string.\n\nIf value is "String with spaces", the output will be "Stringwithspaces".\n\n{{cut value [" "]}}\n\n\n\n# defaultIfEmpty: Default if empty\n\nIf value evaluates to False, uses the given default. Otherwise, uses the\nvalue. If value is "" (the empty string), the output will be nothing.\n\n{{defaultIfEmpty value ["nothing"] }}\n\n\n\n# join: Join string\n\nJoins an array, iterator or an iterable with a string.\n\n{{join value join [prefix=""] [suffix=""]}}\n\n\n# Arguments:\n\n * join\n * prefix\n * suffix\n\n> If value is the list [\'a\', \'b\', \'c\'], the output will be the string "a // b // c".\n\n{{join value " // " [prefix=""] [suffix=""]}}\n\n\n> Join the "a", "b", "c", the output will be the string "a // b // c".\n\n{{join "a" "b" "c" " // " [prefix=""] [suffix=""]}}\n\n\n\n# ljust: Left-aligns the value in a field of a given width.\n\nIf value is Handlebars.java, the output will be "Handlebars.java ".\n\n{{ljust value 20 [pad=" "] }}\n\n\n# Arguments:\n\n * field size\n\n\n# rjust: Right-aligns the value in a field of a given width.\n\nIf value is Handlebars.java, the output will be " Handlebars.java".\n\n{{rjust value 20 [pad=" "] }}\n\n\n# Arguments:\n\n * field size\n * pad\n\n\n# substring Substring\n\nReturns a new CharSequence that is a subsequence of this sequence.\nThe subsequence starts with the char value at the specified index and\nends with the char value at nd - 1*\n\n{{substring value start end }}\n\n\n# Arguments:\n\n * start offset\n * end offset\n\nFor example:\n\n> If value is Handlebars.java, the output will be "java".\n\n{{substring value 11 }}\n\n\n> If value is Handlebars.java, the output will be "Handlebars".\n\n{{substring value 0 10 }}\n\n\n\n# lower: Converts a string into all lowercase.\n\nIf value is \'Still MAD At Yoko\', the output will be \'still mad at yoko\'.\n\n{{lower value}}\n\n\n\n# upper Converts a string into all uppercase.\n\nIf value is \'Hello\', the output will be \'HELLO\'.\n\n{{upper value}}\n\n\n\n# slugify Converts to lowercase\n\nremoves non-word characters (alphanumerics and underscores) and converts spaces to hyphens. Also strips leading and trailing whitespace.\nIf value is "Joel is a slug", the output will be "joel-is-a-slug".\n\n{{slugify value}}\n\n\n\n# stringFormat: Formats the variable\n\nAccording to the argument, a string formatting specifier.\nIf value is "Hello %s" "handlebars.java", the output will be "Hello handlebars.java".\n\n{{stringFormat string param0 param1 ... paramN}}\n\n\n# Arguments:\n\n * format\n * paramN\n\n\n# stripTags: Strips all [X]HTML tags.\n\n{{stripTags value}}\n\n\n\n# capitalize: Capitalizes all the whitespace separated words in a String.\n\nIf value is "my first post", the output will be "My First Post".\n\n{{ capitalize value [fully=false]}}\n\n\nArguments:\n\n * fully\n\n\n# abbreviate: Truncates a string\n\nIf it is longer than the specified number of characters.\nTruncated strings will end with a translatable ellipsis sequence ("...").\nIf value is "Handlebars rocks", the output will be "Handlebars...".\n\n{{abbreviate value 13 }}\n\n\n# Arguments:\n\n * Number of characters to truncate to\n\n\n# wordWrap: Wraps words\n\nWrap sentence at specified line length. If value is Joel is a slug, the output would be: Joel\\nis a\\nslug\n\n{{ wordWrap value 5 }}\n\n\n# Arguments:\n\n * number of characters at which to wrap the text\n\n\n# replace Replaces\n\nEach substring of this string that matches the literal target sequence with the specified literal replacement sequence.\nIf value is "Handlebars ...", the output will be "Handlebars rocks".\n\n{{ replace value "..." "rocks" }}\n\n\n\n# yesno: Boolean to yes / no\n\nFor true, false and (optionally) null, to the strings "yes", "no", "maybe".\n\n# Arguments:\n\n * yes\n * no\n * maybe\n\n{{yesno value [yes="yes"] [no="no"] maybe=["maybe"] }}\n',normalizedContent:'# string functions\n\n\n\n * capitalizefirst: capitalizes the first character of the value.\n * center: centers the value in a field of a given width.\n * cut: removes all values of arg from the given string.\n * defaultifempty: default if empty\n * join: join string\n * ljust: left-aligns the value in a field of a given width.\n * rjust: right-aligns the value in a field of a given width.\n * substring substring\n * lower: converts a string into all lowercase.\n * upper converts a string into all uppercase.\n * stringformat: formats the variable\n * striptags: strips all [x]html tags.\n * capitalize: capitalizes all the whitespace separated words in a string.\n * abbreviate: truncates a string\n * wordwrap: wraps words\n * replace replaces\n * yesno: boolean to yes / no\n\n\n\n\n# capitalizefirst: capitalizes the first character of the value.\n\nif value is "kestra is cool !", the output will be "kestra is cool !".\n\n{{capitalizefirst value}}\n\n\n\n# center: centers the value in a field of a given width.\n\nif value is "handlebars.java", the output will be " handlebars.java ".\n\n{{ center value size=19 [pad="char"] }}\n\n\n# arguments:\n\n * size\n * pad\n\n\n# cut: removes all values of arg from the given string.\n\nif value is "string with spaces", the output will be "stringwithspaces".\n\n{{cut value [" "]}}\n\n\n\n# defaultifempty: default if empty\n\nif value evaluates to false, uses the given default. otherwise, uses the\nvalue. if value is "" (the empty string), the output will be nothing.\n\n{{defaultifempty value ["nothing"] }}\n\n\n\n# join: join string\n\njoins an array, iterator or an iterable with a string.\n\n{{join value join [prefix=""] [suffix=""]}}\n\n\n# arguments:\n\n * join\n * prefix\n * suffix\n\n> if value is the list [\'a\', \'b\', \'c\'], the output will be the string "a // b // c".\n\n{{join value " // " [prefix=""] [suffix=""]}}\n\n\n> join the "a", "b", "c", the output will be the string "a // b // c".\n\n{{join "a" "b" "c" " // " [prefix=""] [suffix=""]}}\n\n\n\n# ljust: left-aligns the value in a field of a given width.\n\nif value is handlebars.java, the output will be "handlebars.java ".\n\n{{ljust value 20 [pad=" "] }}\n\n\n# arguments:\n\n * field size\n\n\n# rjust: right-aligns the value in a field of a given width.\n\nif value is handlebars.java, the output will be " handlebars.java".\n\n{{rjust value 20 [pad=" "] }}\n\n\n# arguments:\n\n * field size\n * pad\n\n\n# substring substring\n\nreturns a new charsequence that is a subsequence of this sequence.\nthe subsequence starts with the char value at the specified index and\nends with the char value at nd - 1*\n\n{{substring value start end }}\n\n\n# arguments:\n\n * start offset\n * end offset\n\nfor example:\n\n> if value is handlebars.java, the output will be "java".\n\n{{substring value 11 }}\n\n\n> if value is handlebars.java, the output will be "handlebars".\n\n{{substring value 0 10 }}\n\n\n\n# lower: converts a string into all lowercase.\n\nif value is \'still mad at yoko\', the output will be \'still mad at yoko\'.\n\n{{lower value}}\n\n\n\n# upper converts a string into all uppercase.\n\nif value is \'hello\', the output will be \'hello\'.\n\n{{upper value}}\n\n\n\n# slugify converts to lowercase\n\nremoves non-word characters (alphanumerics and underscores) and converts spaces to hyphens. also strips leading and trailing whitespace.\nif value is "joel is a slug", the output will be "joel-is-a-slug".\n\n{{slugify value}}\n\n\n\n# stringformat: formats the variable\n\naccording to the argument, a string formatting specifier.\nif value is "hello %s" "handlebars.java", the output will be "hello handlebars.java".\n\n{{stringformat string param0 param1 ... paramn}}\n\n\n# arguments:\n\n * format\n * paramn\n\n\n# striptags: strips all [x]html tags.\n\n{{striptags value}}\n\n\n\n# capitalize: capitalizes all the whitespace separated words in a string.\n\nif value is "my first post", the output will be "my first post".\n\n{{ capitalize value [fully=false]}}\n\n\narguments:\n\n * fully\n\n\n# abbreviate: truncates a string\n\nif it is longer than the specified number of characters.\ntruncated strings will end with a translatable ellipsis sequence ("...").\nif value is "handlebars rocks", the output will be "handlebars...".\n\n{{abbreviate value 13 }}\n\n\n# arguments:\n\n * number of characters to truncate to\n\n\n# wordwrap: wraps words\n\nwrap sentence at specified line length. if value is joel is a slug, the output would be: joel\\nis a\\nslug\n\n{{ wordwrap value 5 }}\n\n\n# arguments:\n\n * number of characters at which to wrap the text\n\n\n# replace replaces\n\neach substring of this string that matches the literal target sequence with the specified literal replacement sequence.\nif value is "handlebars ...", the output will be "handlebars rocks".\n\n{{ replace value "..." "rocks" }}\n\n\n\n# yesno: boolean to yes / no\n\nfor true, false and (optionally) null, to the strings "yes", "no", "maybe".\n\n# arguments:\n\n * yes\n * no\n * maybe\n\n{{yesno value [yes="yes"] [no="no"] maybe=["maybe"] }}\n',charsets:{}},{title:"Use variables",frontmatter:{order:1,meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Use variables"},{property:"og:description",content:"Use variables | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/deprecated-handlebars/use.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Use variables"},{name:"twitter:description",content:"Use variables | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/deprecated-handlebars/use.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/deprecated-handlebars/use.html",relativePath:"docs/developer-guide/variables/deprecated-handlebars/use.md",key:"v-2d82e9df",path:"/docs/developer-guide/variables/deprecated-handlebars/use.html",headers:[{level:2,title:"Common variables",slug:"common-variables",normalizedTitle:"common variables",charIndex:1204},{level:2,title:"Inputs variables",slug:"inputs-variables",normalizedTitle:"inputs variables",charIndex:1439},{level:2,title:"Outputs variables",slug:"outputs-variables",normalizedTitle:"outputs variables",charIndex:1911},{level:3,title:"Without dynamic tasks (Each)",slug:"without-dynamic-tasks-each",normalizedTitle:"without dynamic tasks (each)",charIndex:2026},{level:3,title:"With dynamic tasks (Each)",slug:"with-dynamic-tasks-each",normalizedTitle:"with dynamic tasks (each)",charIndex:2455},{level:3,title:"With Flowable Task nested.",slug:"with-flowable-task-nested",normalizedTitle:"with flowable task nested.",charIndex:3685}],lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:"Common variables Inputs variables Outputs variables Without dynamic tasks (Each) With dynamic tasks (Each) With Flowable Task nested.",content:'# Use variables\n\nYou will find here some examples in order to understand how variables exists and how get the value you need.\n\nHere is a typical payload for variables.\n\nglobals:\n  my-global-string: string\n  my-global-int: 1\n  my-global-bool: true\n\ntask:\n  id: float\n  type: io.kestra.core.tasks.debugs.Return\n\ntaskrun:\n  id: 5vPQJxRGCgJJ4mubuIJOUf\n  startDate: 2020-12-18T12:46:36.018869Z\n  attemptsCount: 0\n  value: value2\n\nparent:\n  taskrun:\n    value: valueA\n  outputs:\n    int: 1\n\nparents:\n  - taskrun:\n      value: valueA\n    outputs:\n      int: 1\n  - taskrun:\n      value: valueB\n    outputs:\n      int: 2\n\nflow:\n  id: inputs\n  namespace: io.kestra.tests\n\nexecution:\n  id: 42mXSJ1MRCdEhpbGNPqeES\n  startDate: 2020-12-18T12:45:28.489187Z\n\noutputs:\n  my-task-id-1: # standard task outputs\n    value: output-string\n  my-task-id-2: # standard task outputs\n    value: 42\n  my-each-task-id: # dynamic task (each)\n    value1: # outputs for value1\n      value: here is value1\n    value2: # outputs for value2\n      value: here is value2\n\ninputs:\n  file: kestra:///org/kestra/tests/inputs/executions/42mXSJ1MRCdEhpbGNPqeES/inputs/file/application.yml\n  string: myString\n  instant: 2019-10-06T18:27:49Z\n\n\n\n# Common variables\n\nAs you can see this a lot of common variable that can be used in your flow, some most common examples are : {{ execution.id }}, {{ execution.startDate }} that allow you to change file name, sql query for example.\n\n\n# Inputs variables\n\nInputs variables are simply accessible with {{ execution.NAME }}, with NAME is the name of the declared in your flow. The data will be depending of type of the inputs.\nSpecial case are FILE type where the file will be prepend by kestra:// that mean file inside the internal Kestra storage. Most of task will take as property this kind of uri and will output also this one. These allow and full file generated by one task to be used in another tasks.\n\n\n# Outputs variables\n\nMost important in Kestra is the ability to use all outputs from previous tasks in next one.\n\n\n# Without dynamic tasks (Each)\n\nThis is the most common way and the simplest one. In order to get a variables, just use {{ outputs.ID.NAME }} where :\n\n * ID is the task id\n * NAME is the name of the outputs, each task type can have any outputs that is documentated on the part outputs of their docs. For example, Bash task can have {{ outputs.ID.exitCode }}, {{ outputs.ID.outputFiles }}, {{ outputs.ID.stdErrLineCount }}, ...\n\n\n# With dynamic tasks (Each)\n\nThis case are more complicated since Kestra will change the way the outputs are generated, since you multiple task with the same id, you will need to use {{ outputs.ID.VALUE.NAME }}.\n\nBut most of the time, using Dynamic Task, you will need to fetch the current value of the iteration, this is done easily with {{ taskrun.value }}.\n\nBut what about if I have a more complex flow, for example, an each containning 1 task (t1) to download a file (based on each value), and a second one (t2) that need the output of t1. The flow look like :\n\nid: each-sequential-nested\nnamespace: io.kestra.tests\n\ntasks:\n  - id: each\n    type: io.kestra.core.tasks.flows.EachSequential\n    value: \'["s1", "s2", "s3"]\'\n    tasks:\n      - id: t1\n        type: io.kestra.core.tasks.debugs.Return\n        format: "{{task.id}} > {{taskrun.value}}"\n      - id: t2\n        type: io.kestra.core.tasks.debugs.Return\n        format: "{{task.id}} > {{ (get outputs.t1 taskrun.value).value }} > {{taskrun.startDate}}"\n  - id: end\n    type: io.kestra.core.tasks.debugs.Return\n    format: "{{task.id}}"\n\n\nIn this case, you need to use {{ (get outputs.t1 taskrun.value).value }}, meaning give me from outputs.t1 the index taskrun.value\n\n\n# With Flowable Task nested.\n\nIf you have many Flowable Task, it can be complex to use the get function, and more, the taskrun.value is only available during the direct task from each, if you have any Flowable after, the taskrun.value of the first iteration will be lost (or overwrite). In order to deal this, we have include the parent & parents vars.\n\nLook at this flow :\n\nid: each-switch\nnamespace: io.kestra.tests\n\ntasks:\n  - id: t1\n    type: io.kestra.core.tasks.debugs.Return\n    format: "{{task.id}} > {{taskrun.startDate}}"\n  - id: 2_each\n    type: io.kestra.core.tasks.flows.EachSequential\n    value: \'["a", "b"]\'\n    tasks:\n      # Switch\n      - id: 2-1_switch\n        type: io.kestra.core.tasks.flows.Switch\n        value: "{{taskrun.value}}"\n        cases:\n          a:\n            - id: 2-1_switch-letter-a\n              type: io.kestra.core.tasks.debugs.Return\n              format: "{{task.id}}"\n          b:\n            - id: 2-1_switch-letter-b\n              type: io.kestra.core.tasks.debugs.Return\n              format: "{{task.id}}"\n\n            - id: 2-1_each\n              type: io.kestra.core.tasks.flows.EachSequential\n              value: \'["1", "2"]\'\n              tasks:\n              - id: 2-1-1_switch\n                type: io.kestra.core.tasks.flows.Switch\n                value: "{{taskrun.value}}"\n                cases:\n                  1:\n                    - id: 2-1-1_switch-number-1\n                      type: io.kestra.core.tasks.debugs.Return\n                      format: "{{parents.[0].taskrun.value}}"\n                  2:\n                    - id: 2-1-1_switch-number-2\n                      type: io.kestra.core.tasks.debugs.Return\n                      format: "{{parents.[0].taskrun.value}} {{parents.[1].taskrun.value}}"\n  - id: 2_end\n    type: io.kestra.core.tasks.debugs.Return\n    format: "{{task.id}} > {{taskrun.startDate}}"\n\n\n\nAs you can see, the parent will give the direct accès to the first parent output and value of the current one and parents.INDEX let go you deeper on the tree.\n\nIn the task 2-1-1_switch-number-2:\n\n * {{taskrun.value}}: mean the value of the task 2-1-1_switch\n * {{parents.[0].taskrun.value}} or {{parent.taskrun.value}}: mean the value of the task 2-1_each\n * {{parents.[1].taskrun.value}}: mean the value of the task 2-1_switch\n * {{parents.[2].taskrun.value}}: mean the value of the task 2_each',normalizedContent:'# use variables\n\nyou will find here some examples in order to understand how variables exists and how get the value you need.\n\nhere is a typical payload for variables.\n\nglobals:\n  my-global-string: string\n  my-global-int: 1\n  my-global-bool: true\n\ntask:\n  id: float\n  type: io.kestra.core.tasks.debugs.return\n\ntaskrun:\n  id: 5vpqjxrgcgjj4mubuijouf\n  startdate: 2020-12-18t12:46:36.018869z\n  attemptscount: 0\n  value: value2\n\nparent:\n  taskrun:\n    value: valuea\n  outputs:\n    int: 1\n\nparents:\n  - taskrun:\n      value: valuea\n    outputs:\n      int: 1\n  - taskrun:\n      value: valueb\n    outputs:\n      int: 2\n\nflow:\n  id: inputs\n  namespace: io.kestra.tests\n\nexecution:\n  id: 42mxsj1mrcdehpbgnpqees\n  startdate: 2020-12-18t12:45:28.489187z\n\noutputs:\n  my-task-id-1: # standard task outputs\n    value: output-string\n  my-task-id-2: # standard task outputs\n    value: 42\n  my-each-task-id: # dynamic task (each)\n    value1: # outputs for value1\n      value: here is value1\n    value2: # outputs for value2\n      value: here is value2\n\ninputs:\n  file: kestra:///org/kestra/tests/inputs/executions/42mxsj1mrcdehpbgnpqees/inputs/file/application.yml\n  string: mystring\n  instant: 2019-10-06t18:27:49z\n\n\n\n# common variables\n\nas you can see this a lot of common variable that can be used in your flow, some most common examples are : {{ execution.id }}, {{ execution.startdate }} that allow you to change file name, sql query for example.\n\n\n# inputs variables\n\ninputs variables are simply accessible with {{ execution.name }}, with name is the name of the declared in your flow. the data will be depending of type of the inputs.\nspecial case are file type where the file will be prepend by kestra:// that mean file inside the internal kestra storage. most of task will take as property this kind of uri and will output also this one. these allow and full file generated by one task to be used in another tasks.\n\n\n# outputs variables\n\nmost important in kestra is the ability to use all outputs from previous tasks in next one.\n\n\n# without dynamic tasks (each)\n\nthis is the most common way and the simplest one. in order to get a variables, just use {{ outputs.id.name }} where :\n\n * id is the task id\n * name is the name of the outputs, each task type can have any outputs that is documentated on the part outputs of their docs. for example, bash task can have {{ outputs.id.exitcode }}, {{ outputs.id.outputfiles }}, {{ outputs.id.stderrlinecount }}, ...\n\n\n# with dynamic tasks (each)\n\nthis case are more complicated since kestra will change the way the outputs are generated, since you multiple task with the same id, you will need to use {{ outputs.id.value.name }}.\n\nbut most of the time, using dynamic task, you will need to fetch the current value of the iteration, this is done easily with {{ taskrun.value }}.\n\nbut what about if i have a more complex flow, for example, an each containning 1 task (t1) to download a file (based on each value), and a second one (t2) that need the output of t1. the flow look like :\n\nid: each-sequential-nested\nnamespace: io.kestra.tests\n\ntasks:\n  - id: each\n    type: io.kestra.core.tasks.flows.eachsequential\n    value: \'["s1", "s2", "s3"]\'\n    tasks:\n      - id: t1\n        type: io.kestra.core.tasks.debugs.return\n        format: "{{task.id}} > {{taskrun.value}}"\n      - id: t2\n        type: io.kestra.core.tasks.debugs.return\n        format: "{{task.id}} > {{ (get outputs.t1 taskrun.value).value }} > {{taskrun.startdate}}"\n  - id: end\n    type: io.kestra.core.tasks.debugs.return\n    format: "{{task.id}}"\n\n\nin this case, you need to use {{ (get outputs.t1 taskrun.value).value }}, meaning give me from outputs.t1 the index taskrun.value\n\n\n# with flowable task nested.\n\nif you have many flowable task, it can be complex to use the get function, and more, the taskrun.value is only available during the direct task from each, if you have any flowable after, the taskrun.value of the first iteration will be lost (or overwrite). in order to deal this, we have include the parent & parents vars.\n\nlook at this flow :\n\nid: each-switch\nnamespace: io.kestra.tests\n\ntasks:\n  - id: t1\n    type: io.kestra.core.tasks.debugs.return\n    format: "{{task.id}} > {{taskrun.startdate}}"\n  - id: 2_each\n    type: io.kestra.core.tasks.flows.eachsequential\n    value: \'["a", "b"]\'\n    tasks:\n      # switch\n      - id: 2-1_switch\n        type: io.kestra.core.tasks.flows.switch\n        value: "{{taskrun.value}}"\n        cases:\n          a:\n            - id: 2-1_switch-letter-a\n              type: io.kestra.core.tasks.debugs.return\n              format: "{{task.id}}"\n          b:\n            - id: 2-1_switch-letter-b\n              type: io.kestra.core.tasks.debugs.return\n              format: "{{task.id}}"\n\n            - id: 2-1_each\n              type: io.kestra.core.tasks.flows.eachsequential\n              value: \'["1", "2"]\'\n              tasks:\n              - id: 2-1-1_switch\n                type: io.kestra.core.tasks.flows.switch\n                value: "{{taskrun.value}}"\n                cases:\n                  1:\n                    - id: 2-1-1_switch-number-1\n                      type: io.kestra.core.tasks.debugs.return\n                      format: "{{parents.[0].taskrun.value}}"\n                  2:\n                    - id: 2-1-1_switch-number-2\n                      type: io.kestra.core.tasks.debugs.return\n                      format: "{{parents.[0].taskrun.value}} {{parents.[1].taskrun.value}}"\n  - id: 2_end\n    type: io.kestra.core.tasks.debugs.return\n    format: "{{task.id}} > {{taskrun.startdate}}"\n\n\n\nas you can see, the parent will give the direct acces to the first parent output and value of the current one and parents.index let go you deeper on the tree.\n\nin the task 2-1-1_switch-number-2:\n\n * {{taskrun.value}}: mean the value of the task 2-1-1_switch\n * {{parents.[0].taskrun.value}} or {{parent.taskrun.value}}: mean the value of the task 2-1_each\n * {{parents.[1].taskrun.value}}: mean the value of the task 2-1_switch\n * {{parents.[2].taskrun.value}}: mean the value of the task 2_each',charsets:{}},{title:"Vars functions",frontmatter:{order:8,meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Vars functions"},{property:"og:description",content:"Vars functions | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/deprecated-handlebars/vars.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Vars functions"},{name:"twitter:description",content:"Vars functions | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/deprecated-handlebars/vars.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/deprecated-handlebars/vars.html",relativePath:"docs/developer-guide/variables/deprecated-handlebars/vars.md",key:"v-6ad1b17a",path:"/docs/developer-guide/variables/deprecated-handlebars/vars.html",headers:[{level:2,title:"firstDefined First defined variables",slug:"firstdefined-first-defined-variables",normalizedTitle:"firstdefined first defined variables",charIndex:23},{level:2,title:"eval Evaluate a handlebars expression",slug:"eval-evaluate-a-handlebars-expression",normalizedTitle:"eval evaluate a handlebars expression",charIndex:63},{level:2,title:"firstDefinedEval First defined evaluation",slug:"firstdefinedeval-first-defined-evaluation",normalizedTitle:"firstdefinedeval first defined evaluation",charIndex:104},{level:2,title:"get get an element for an array or map by key",slug:"get-get-an-element-for-an-array-or-map-by-key",normalizedTitle:"get get an element for an array or map by key",charIndex:149}],lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:"firstDefined First defined variables eval Evaluate a handlebars expression firstDefinedEval First defined evaluation get get an element for an array or map by key",content:"# Vars functions\n\n\n\n * firstDefined First defined variables\n * eval Evaluate a handlebars expression\n * firstDefinedEval First defined evaluation\n * get get an element for an array or map by key\n\n\n\n\n# firstDefined First defined variables\n\nReturn the first defined variables or throw exception if no variables are defined.\n\n{{ firstDefined outputs.task1.uri outputs.task2.uri }}\n\n\n\n# eval Evaluate a handlebars expression\n\nEvaluate at runtime a handlebars expression based on the whole context.\n\nMostly useful for Lookup in current childs tasks tree and dynamic tasks.\n\n{{ eval 'outputs.first.[{{taskrun.value}}].value' }}\n\n\n\n# firstDefinedEval First defined evaluation\n\nFirst defined evaluate at runtime a handlebars expression based on the whole context or throw exception if no variables are defined.\n\nMostly useful for Lookup in current childs tasks tree and dynamic tasks.\n\n{{ firstDefined 'outputs.first.value' 'outputs.first.[{{taskrun.value}}].value' }}\n\n\n\n# get get an element for an array or map by key\n\n   {{get object [\"key\"]}}\n\n\n * get on object type map, the key at key\n * get on object type array, the index at key\n\nMostly useful for Lookup in current childs tasks tree and dynamic tasks.\n\n{{ get outputs 'first' }}\n",normalizedContent:"# vars functions\n\n\n\n * firstdefined first defined variables\n * eval evaluate a handlebars expression\n * firstdefinedeval first defined evaluation\n * get get an element for an array or map by key\n\n\n\n\n# firstdefined first defined variables\n\nreturn the first defined variables or throw exception if no variables are defined.\n\n{{ firstdefined outputs.task1.uri outputs.task2.uri }}\n\n\n\n# eval evaluate a handlebars expression\n\nevaluate at runtime a handlebars expression based on the whole context.\n\nmostly useful for lookup in current childs tasks tree and dynamic tasks.\n\n{{ eval 'outputs.first.[{{taskrun.value}}].value' }}\n\n\n\n# firstdefinedeval first defined evaluation\n\nfirst defined evaluate at runtime a handlebars expression based on the whole context or throw exception if no variables are defined.\n\nmostly useful for lookup in current childs tasks tree and dynamic tasks.\n\n{{ firstdefined 'outputs.first.value' 'outputs.first.[{{taskrun.value}}].value' }}\n\n\n\n# get get an element for an array or map by key\n\n   {{get object [\"key\"]}}\n\n\n * get on object type map, the key at key\n * get on object type array, the index at key\n\nmostly useful for lookup in current childs tasks tree and dynamic tasks.\n\n{{ get outputs 'first' }}\n",charsets:{}},{title:"Filter",frontmatter:{order:2,meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Filter"},{property:"og:description",content:"Filter | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/filter/"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Filter"},{name:"twitter:description",content:"Filter | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/filter/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/filter/",relativePath:"docs/developer-guide/variables/filter/README.md",key:"v-03cc083c",path:"/docs/developer-guide/variables/filter/",headers:[{level:2,title:"List of built-in filters:",slug:"list-of-built-in-filters",normalizedTitle:"list of built-in filters:",charIndex:571}],lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:"List of built-in filters:",content:"# Filter\n\nVariables can be modified by filters. Filters are separated from the variable by a pipe symbol |. Multiple filters can be chained. The output of one filter is applied to the next.\n\nThe following example removes all HTML tags from the name and title-cases it:\n\n{{ name  |title }}\n\n\nFilters that accept arguments have parentheses around the arguments. This example joins the elements of a list by commas:\n\n{{ list | join(', ') }}\n\n\nTo apply a filter on a section of code, wrap it with the filter tag:\n\n{% filter lower | title %}\n\thello<br>\n{% endfilter %}}\n\n\n\n\n# List of built-in filters:",normalizedContent:"# filter\n\nvariables can be modified by filters. filters are separated from the variable by a pipe symbol |. multiple filters can be chained. the output of one filter is applied to the next.\n\nthe following example removes all html tags from the name and title-cases it:\n\n{{ name  |title }}\n\n\nfilters that accept arguments have parentheses around the arguments. this example joins the elements of a list by commas:\n\n{{ list | join(', ') }}\n\n\nto apply a filter on a section of code, wrap it with the filter tag:\n\n{% filter lower | title %}\n\thello<br>\n{% endfilter %}}\n\n\n\n\n# list of built-in filters:",charsets:{cjk:!0}},{title:"abbreviate",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"abbreviate"},{property:"og:description",content:"abbreviate | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/filter/abbreviate.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"abbreviate"},{name:"twitter:description",content:"abbreviate | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/filter/abbreviate.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/filter/abbreviate.html",relativePath:"docs/developer-guide/variables/filter/abbreviate.md",key:"v-7048180f",path:"/docs/developer-guide/variables/filter/abbreviate.html",headers:[{level:2,title:"Arguments",slug:"arguments",normalizedTitle:"arguments",charIndex:296}],lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:"Arguments",content:'# abbreviate\n\nThe abbreviate filter will abbreviate a string using an ellipsis. It takes one argument which is the max\nwidth of the desired output including the length of the ellipsis.\n\n{{ "this is a long sentence." | abbreviate(7) }}\n\n\nThe above example will output the following:\n\nthis...\n\n\n\n# Arguments\n\n * length',normalizedContent:'# abbreviate\n\nthe abbreviate filter will abbreviate a string using an ellipsis. it takes one argument which is the max\nwidth of the desired output including the length of the ellipsis.\n\n{{ "this is a long sentence." | abbreviate(7) }}\n\n\nthe above example will output the following:\n\nthis...\n\n\n\n# arguments\n\n * length',charsets:{cjk:!0}},{title:"abs",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"abs"},{property:"og:description",content:"abs | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/filter/abs.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"abs"},{name:"twitter:description",content:"abs | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/filter/abs.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/filter/abs.html",relativePath:"docs/developer-guide/variables/filter/abs.md",key:"v-f7b823fa",path:"/docs/developer-guide/variables/filter/abs.html",lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:null,content:"# abs\n\nThe abs filter is used to obtain the absolute value.\n\n{{ -7 | abs }}\n\n{# output: 7 #}\n",normalizedContent:"# abs\n\nthe abs filter is used to obtain the absolute value.\n\n{{ -7 | abs }}\n\n{# output: 7 #}\n",charsets:{cjk:!0}},{title:"base64decode",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"base64decode"},{property:"og:description",content:"base64decode | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/filter/base64decode.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"base64decode"},{name:"twitter:description",content:"base64decode | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/filter/base64decode.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/filter/base64decode.html",relativePath:"docs/developer-guide/variables/filter/base64decode.md",key:"v-32f7ff6b",path:"/docs/developer-guide/variables/filter/base64decode.html",lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:null,content:'# base64decode\n\nThe base64decode filter takes the given input, Base64-decodes it, if possible, and returns the byte array converted to UTF-8 String.\nApplying the filter on an incorrect base64-encoded string will throw an exception.\n\n{{ "dGVzdA==" | base64decode }}\n\n\nThe above example will output the following:\n\ntest\n',normalizedContent:'# base64decode\n\nthe base64decode filter takes the given input, base64-decodes it, if possible, and returns the byte array converted to utf-8 string.\napplying the filter on an incorrect base64-encoded string will throw an exception.\n\n{{ "dgvzda==" | base64decode }}\n\n\nthe above example will output the following:\n\ntest\n',charsets:{cjk:!0}},{title:"base64encode",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"base64encode"},{property:"og:description",content:"base64encode | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/filter/base64encode.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"base64encode"},{name:"twitter:description",content:"base64encode | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/filter/base64encode.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/filter/base64encode.html",relativePath:"docs/developer-guide/variables/filter/base64encode.md",key:"v-1d9a471b",path:"/docs/developer-guide/variables/filter/base64encode.html",lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:null,content:'# base64encode\n\nThe base64encode filter takes the given input, converts it to an UTF-8 String (.toString()) and Base64-encodes it.\n\n{{ "test" | base64encode }}\n\n\nThe above example will output the following:\n\ndGVzdA==\n',normalizedContent:'# base64encode\n\nthe base64encode filter takes the given input, converts it to an utf-8 string (.tostring()) and base64-encodes it.\n\n{{ "test" | base64encode }}\n\n\nthe above example will output the following:\n\ndgvzda==\n',charsets:{cjk:!0}},{title:"capitalize",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"capitalize"},{property:"og:description",content:"capitalize | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/filter/capitalize.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"capitalize"},{name:"twitter:description",content:"capitalize | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/filter/capitalize.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/filter/capitalize.html",relativePath:"docs/developer-guide/variables/filter/capitalize.md",key:"v-25d11766",path:"/docs/developer-guide/variables/filter/capitalize.html",lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:null,content:'# capitalize\n\nThe capitalize filter will capitalize the first letter of the string.\n\n{{ "article title" | capitalize }}\n\n\nThe above example will output the following:\n\nArticle title\n\n\nSee also:\n\n * title',normalizedContent:'# capitalize\n\nthe capitalize filter will capitalize the first letter of the string.\n\n{{ "article title" | capitalize }}\n\n\nthe above example will output the following:\n\narticle title\n\n\nsee also:\n\n * title',charsets:{cjk:!0}},{title:"chunk",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"chunk"},{property:"og:description",content:"chunk | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/filter/chunk.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"chunk"},{name:"twitter:description",content:"chunk | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/filter/chunk.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/filter/chunk.html",relativePath:"docs/developer-guide/variables/filter/chunk.md",key:"v-37ca54ba",path:"/docs/developer-guide/variables/filter/chunk.html",headers:[{level:2,title:"Arguments",slug:"arguments",normalizedTitle:"arguments",charIndex:161}],lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:"Arguments",content:"# chunk\n\nThe chunk filter returns partitions of size from a list.\n\n{{ [[1,2,3,4,5,6,7,8,9]] | chunk(2) }}\n{# results in: '[[1,2],[3,4],[5,6],[7,8],[9]]' #}\n\n\n\n# Arguments\n\n * size: the size of the chunk",normalizedContent:"# chunk\n\nthe chunk filter returns partitions of size from a list.\n\n{{ [[1,2,3,4,5,6,7,8,9]] | chunk(2) }}\n{# results in: '[[1,2],[3,4],[5,6],[7,8],[9]]' #}\n\n\n\n# arguments\n\n * size: the size of the chunk",charsets:{cjk:!0}},{title:"date",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"date"},{property:"og:description",content:"date | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/filter/date.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"date"},{name:"twitter:description",content:"date | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/filter/date.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/filter/date.html",relativePath:"docs/developer-guide/variables/filter/date.md",key:"v-ee9465ee",path:"/docs/developer-guide/variables/filter/date.html",headers:[{level:2,title:"Time zones",slug:"time-zones",normalizedTitle:"time zones",charIndex:933},{level:2,title:"Arguments",slug:"arguments",normalizedTitle:"arguments",charIndex:1519}],lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:"Time zones Arguments",content:'# date\n\nThe date filter formats a date in a variety of formats. It can handle old-school java.util.Date,\nJava 8 java.time constructs like OffsetDateTime and timestamps in milliseconds from the epoch.\nThe filter will construct a java.text.SimpleDateFormat or java.time.format.DateTimeFormatter using the provided\npattern and then use this newly created format to format the provided date object. If you don\'t provide a pattern,\neither DateTimeFormatter.ISO_DATE_TIME or yyyy-MM-dd\'T\'HH:mm:ssZ will be used.\n\n{{ user.birthday | date("yyyy-MM-dd") }}\n\n\nAn alternative way to use this filter is to use it on a string but then provide two arguments:\nthe first is the desired pattern for the output, and the second is the existing format used to parse the\ninput string into a java.util.Date object.\n\n{{ "July 24, 2001" | date("yyyy-MM-dd", existingFormat="MMMM dd, yyyy") }}\n\n\nThe above example will output the following:\n\n2001-07-24\n\n\n\n# Time zones\n\nIf the provided date has time zone info (e.g. OffsetDateTime) then it will be used. If the provided date has no\ntime zone info, by default the system time zone will be used. If you need to use a specific\ntime zone then you can pass in a timeZone parameter any string that\'s understood by ZoneId / ZoneInfo:\n\n{# the timeZone parameter will be ignored #}\n{{ someOffsetDateTime | date("yyyy-MM-dd\'T\'HH:mm:ssX", timeZone="UTC") }}\n{# the provided time zone will override the system default #}\n{{ someInstant | date("yyyy-MM-dd\'T\'HH:mm:ssX", timeZone="Pacific/Funafuti") }}\n\n\n\n# Arguments\n\n * format\n * existingFormat\n * timeZone\n * locale',normalizedContent:'# date\n\nthe date filter formats a date in a variety of formats. it can handle old-school java.util.date,\njava 8 java.time constructs like offsetdatetime and timestamps in milliseconds from the epoch.\nthe filter will construct a java.text.simpledateformat or java.time.format.datetimeformatter using the provided\npattern and then use this newly created format to format the provided date object. if you don\'t provide a pattern,\neither datetimeformatter.iso_date_time or yyyy-mm-dd\'t\'hh:mm:ssz will be used.\n\n{{ user.birthday | date("yyyy-mm-dd") }}\n\n\nan alternative way to use this filter is to use it on a string but then provide two arguments:\nthe first is the desired pattern for the output, and the second is the existing format used to parse the\ninput string into a java.util.date object.\n\n{{ "july 24, 2001" | date("yyyy-mm-dd", existingformat="mmmm dd, yyyy") }}\n\n\nthe above example will output the following:\n\n2001-07-24\n\n\n\n# time zones\n\nif the provided date has time zone info (e.g. offsetdatetime) then it will be used. if the provided date has no\ntime zone info, by default the system time zone will be used. if you need to use a specific\ntime zone then you can pass in a timezone parameter any string that\'s understood by zoneid / zoneinfo:\n\n{# the timezone parameter will be ignored #}\n{{ someoffsetdatetime | date("yyyy-mm-dd\'t\'hh:mm:ssx", timezone="utc") }}\n{# the provided time zone will override the system default #}\n{{ someinstant | date("yyyy-mm-dd\'t\'hh:mm:ssx", timezone="pacific/funafuti") }}\n\n\n\n# arguments\n\n * format\n * existingformat\n * timezone\n * locale',charsets:{cjk:!0}},{title:"dateAdd",frontmatter:{meta:[{property:"article:modified_time",content:"2021-11-17T09:17:28.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"dateAdd"},{property:"og:description",content:"dateAdd | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/filter/dateAdd.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"dateAdd"},{name:"twitter:description",content:"dateAdd | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/filter/dateAdd.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/filter/dateAdd.html",relativePath:"docs/developer-guide/variables/filter/dateAdd.md",key:"v-0c942c63",path:"/docs/developer-guide/variables/filter/dateAdd.html",headers:[{level:2,title:"Arguments",slug:"arguments",normalizedTitle:"arguments",charIndex:151}],lastUpdated:"11/17/2021, 9:17:28 AM",lastUpdatedTimestamp:1637140648e3,headersStr:"Arguments",content:"# dateAdd\n\nThe dateAdd filter add some unit and formats a date with the same behaviour than date filters.\n\n{{ user.birthday | date(-1, 'DAYS') }}\n\n\n\n# Arguments\n\n * amount: an integer value positive or negative\n * unit:\n   * NANOS\n   * MICROS\n   * MILLIS\n   * SECONDS\n   * MINUTES\n   * HOURS\n   * HALF_DAYS\n   * DAYS\n   * WEEKS\n   * MONTHS\n   * YEARS\n   * DECADES\n   * CENTURIES\n   * MILLENNIA\n   * ERAS\n * format: see date\n * existingFormat date\n * timeZone date\n * locale date",normalizedContent:"# dateadd\n\nthe dateadd filter add some unit and formats a date with the same behaviour than date filters.\n\n{{ user.birthday | date(-1, 'days') }}\n\n\n\n# arguments\n\n * amount: an integer value positive or negative\n * unit:\n   * nanos\n   * micros\n   * millis\n   * seconds\n   * minutes\n   * hours\n   * half_days\n   * days\n   * weeks\n   * months\n   * years\n   * decades\n   * centuries\n   * millennia\n   * eras\n * format: see date\n * existingformat date\n * timezone date\n * locale date",charsets:{cjk:!0}},{title:"default",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"default"},{property:"og:description",content:"default | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/filter/default.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"default"},{name:"twitter:description",content:"default | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/filter/default.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/filter/default.html",relativePath:"docs/developer-guide/variables/filter/default.md",key:"v-6a7e2aba",path:"/docs/developer-guide/variables/filter/default.html",headers:[{level:2,title:"Arguments",slug:"arguments",normalizedTitle:"arguments",charIndex:559}],lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:"Arguments",content:'# default\n\nThe default filter will render a default value if and only if the object being filtered is empty.\nA variable is empty if it is null, an empty string, an empty collection, or an empty map.\n\n{{ user.phoneNumber | default("No phone number") }}\n\n\nIn the following example, if foo, bar, or baz are null the output will become an empty string which is a perfect use case for the default filter:\n\n{{ foo.bar.baz | default("No baz") }}\n\n\nNote that the default filter will suppress any AttributeNotFoundException exceptions that will usually be thrown.\n\n\n# Arguments\n\n * default',normalizedContent:'# default\n\nthe default filter will render a default value if and only if the object being filtered is empty.\na variable is empty if it is null, an empty string, an empty collection, or an empty map.\n\n{{ user.phonenumber | default("no phone number") }}\n\n\nin the following example, if foo, bar, or baz are null the output will become an empty string which is a perfect use case for the default filter:\n\n{{ foo.bar.baz | default("no baz") }}\n\n\nnote that the default filter will suppress any attributenotfoundexception exceptions that will usually be thrown.\n\n\n# arguments\n\n * default',charsets:{cjk:!0}},{title:"first",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"first"},{property:"og:description",content:"first | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/filter/first.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"first"},{name:"twitter:description",content:"first | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/filter/first.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/filter/first.html",relativePath:"docs/developer-guide/variables/filter/first.md",key:"v-b5fc07fa",path:"/docs/developer-guide/variables/filter/first.html",lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:null,content:"# first\n\nThe first filter will return the first item of a collection, or the first letter of a string.\n\n{{ users | first }}\n{# will output the first item in the collection named 'users' #}\n\n{{ 'Mitch' | first }}\n{# will output 'M' #}\n",normalizedContent:"# first\n\nthe first filter will return the first item of a collection, or the first letter of a string.\n\n{{ users | first }}\n{# will output the first item in the collection named 'users' #}\n\n{{ 'mitch' | first }}\n{# will output 'm' #}\n",charsets:{cjk:!0}},{title:"join",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"join"},{property:"og:description",content:"join | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/filter/join.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"join"},{name:"twitter:description",content:"join | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/filter/join.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/filter/join.html",relativePath:"docs/developer-guide/variables/filter/join.md",key:"v-6aaaa611",path:"/docs/developer-guide/variables/filter/join.html",headers:[{level:2,title:"Arguments",slug:"arguments",normalizedTitle:"arguments",charIndex:338}],lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:"Arguments",content:'# join\n\nThe join filter will concatenate all items of a collection into a string. An optional argument can be given\nto be used as the separator between items.\n\n{#\n    List<String> names = new ArrayList<>();\n    names.add("Alex");\n    names.add("Joe");\n    names.add("Bob");\n#}\n{{ names | join(\',\') }}\n{# will output: Alex,Joe,Bob #}\n\n\n\n# Arguments\n\n * separator',normalizedContent:'# join\n\nthe join filter will concatenate all items of a collection into a string. an optional argument can be given\nto be used as the separator between items.\n\n{#\n    list<string> names = new arraylist<>();\n    names.add("alex");\n    names.add("joe");\n    names.add("bob");\n#}\n{{ names | join(\',\') }}\n{# will output: alex,joe,bob #}\n\n\n\n# arguments\n\n * separator',charsets:{cjk:!0}},{title:"jq",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"jq"},{property:"og:description",content:"jq | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/filter/jq.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"jq"},{name:"twitter:description",content:"jq | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/filter/jq.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/filter/jq.html",relativePath:"docs/developer-guide/variables/filter/jq.md",key:"v-a23bbe52",path:"/docs/developer-guide/variables/filter/jq.html",headers:[{level:2,title:"Arguments",slug:"arguments",normalizedTitle:"arguments",charIndex:628}],lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:"Arguments",content:'# jq\n\nThe jq filter apply a JQ expression to a variables. The filter always return an array of result and will be formatted as json. You can use the filter first in order to return the first (and maybe the only) result of the jq filter.\n\n{{ [1, 2, 3] | jq(\'.\')  }}\n{# results in: \'[1, 2, 3]\' #}\n\n{{ [1, 2, 3] | jq(\'.[0]\') | first }}\n{# results in: \'1\' #}\n\n\nAnother example, if the current context is :\n\n{\n  "outputs": {\n    "task1": {\n      "value": 1,\n      "text": "awesome1"\n    },\n    "task2": {\n      "value": 2,\n      "text": "awesome2"\n    }\n  }\n}\n\n\n{{ outputs | jq(\'.task1.value\') | first }}\n\n\nthe output will be 1.\n\n\n# Arguments\n\n * expression: the jq expression to apply',normalizedContent:'# jq\n\nthe jq filter apply a jq expression to a variables. the filter always return an array of result and will be formatted as json. you can use the filter first in order to return the first (and maybe the only) result of the jq filter.\n\n{{ [1, 2, 3] | jq(\'.\')  }}\n{# results in: \'[1, 2, 3]\' #}\n\n{{ [1, 2, 3] | jq(\'.[0]\') | first }}\n{# results in: \'1\' #}\n\n\nanother example, if the current context is :\n\n{\n  "outputs": {\n    "task1": {\n      "value": 1,\n      "text": "awesome1"\n    },\n    "task2": {\n      "value": 2,\n      "text": "awesome2"\n    }\n  }\n}\n\n\n{{ outputs | jq(\'.task1.value\') | first }}\n\n\nthe output will be 1.\n\n\n# arguments\n\n * expression: the jq expression to apply',charsets:{cjk:!0}},{title:"json",frontmatter:{meta:[{property:"article:modified_time",content:"2021-10-06T16:51:36.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"json"},{property:"og:description",content:"json | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/filter/json.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"json"},{name:"twitter:description",content:"json | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/filter/json.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/filter/json.html",relativePath:"docs/developer-guide/variables/filter/json.md",key:"v-013a3ed6",path:"/docs/developer-guide/variables/filter/json.html",lastUpdated:"10/6/2021, 4:51:36 PM",lastUpdatedTimestamp:1633539096e3,headersStr:null,content:"# json\n\nThe json filter will convert any variable to json string.\n\n{{ [1, 2, 3] | json  }}\n{# results in: '[1, 2, 3]' #}\n\n{{ true | json }}\n{# results in: 'true' #}\n\n{{ \"foo\" | json }}\n{# results in: '\"foo\"' #}\n",normalizedContent:"# json\n\nthe json filter will convert any variable to json string.\n\n{{ [1, 2, 3] | json  }}\n{# results in: '[1, 2, 3]' #}\n\n{{ true | json }}\n{# results in: 'true' #}\n\n{{ \"foo\" | json }}\n{# results in: '\"foo\"' #}\n",charsets:{cjk:!0}},{title:"last",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"last"},{property:"og:description",content:"last | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/filter/last.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"last"},{name:"twitter:description",content:"last | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/filter/last.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/filter/last.html",relativePath:"docs/developer-guide/variables/filter/last.md",key:"v-7ca4bf39",path:"/docs/developer-guide/variables/filter/last.html",lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:null,content:"# last\n\nThe last filter will return the last item of a collection, or the last letter of a string.\n\n{{ users | last }}\n{# will output the last item in the collection named 'users' #}\n\n{{ 'Mitch' | last }}\n{# will output 'h' #}\n",normalizedContent:"# last\n\nthe last filter will return the last item of a collection, or the last letter of a string.\n\n{{ users | last }}\n{# will output the last item in the collection named 'users' #}\n\n{{ 'mitch' | last }}\n{# will output 'h' #}\n",charsets:{cjk:!0}},{title:"length",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"length"},{property:"og:description",content:"length | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/filter/length.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"length"},{name:"twitter:description",content:"length | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/filter/length.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/filter/length.html",relativePath:"docs/developer-guide/variables/filter/length.md",key:"v-9b3e234e",path:"/docs/developer-guide/variables/filter/length.html",lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:null,content:"# length\n\nThe length filter returns the number of items of collection, map or the length of a string:\n\n{% if users|length > 10 %}\n    ...\n{% endif %}\n",normalizedContent:"# length\n\nthe length filter returns the number of items of collection, map or the length of a string:\n\n{% if users|length > 10 %}\n    ...\n{% endif %}\n",charsets:{cjk:!0}},{title:"lower",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"lower"},{property:"og:description",content:"lower | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/filter/lower.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"lower"},{name:"twitter:description",content:"lower | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/filter/lower.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/filter/lower.html",relativePath:"docs/developer-guide/variables/filter/lower.md",key:"v-2727b023",path:"/docs/developer-guide/variables/filter/lower.html",lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:null,content:'# lower\n\nThe lower filter makes an entire string lower case.\n\n{{ "THIS IS A LOUD SENTENCE" | lower }}\n\n\nThe above example will output the following:\n\nthis is a loud sentence\n',normalizedContent:'# lower\n\nthe lower filter makes an entire string lower case.\n\n{{ "this is a loud sentence" | lower }}\n\n\nthe above example will output the following:\n\nthis is a loud sentence\n',charsets:{cjk:!0}},{title:"merge",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"merge"},{property:"og:description",content:"merge | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/filter/merge.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"merge"},{name:"twitter:description",content:"merge | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/filter/merge.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/filter/merge.html",relativePath:"docs/developer-guide/variables/filter/merge.md",key:"v-1ff105fa",path:"/docs/developer-guide/variables/filter/merge.html",lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:null,content:"# merge\n\nThe 'merge' filter merge items of type Map, List or Array:\n\n{{ [1, 2] | merge([3, 4]) }}\n",normalizedContent:"# merge\n\nthe 'merge' filter merge items of type map, list or array:\n\n{{ [1, 2] | merge([3, 4]) }}\n",charsets:{cjk:!0}},{title:"numberFormat",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"numberFormat"},{property:"og:description",content:"numberFormat | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/filter/numberFormat.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"numberFormat"},{name:"twitter:description",content:"numberFormat | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/filter/numberFormat.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/filter/numberFormat.html",relativePath:"docs/developer-guide/variables/filter/numberFormat.md",key:"v-8d2ddbb6",path:"/docs/developer-guide/variables/filter/numberFormat.html",headers:[{level:2,title:"Arguments",slug:"arguments",normalizedTitle:"arguments",charIndex:227}],lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:"Arguments",content:'# numberFormat\n\nThe numberformat filter is used to format a decimal number. Behind the scenes it uses java.text.DecimalFormat.\n\n{{ 3.141592653 | numberFormat("#.##") }}\n\n\nThe above example will output the following:\n\n3.14\n\n\n\n# Arguments\n\n * format',normalizedContent:'# numberformat\n\nthe numberformat filter is used to format a decimal number. behind the scenes it uses java.text.decimalformat.\n\n{{ 3.141592653 | numberformat("#.##") }}\n\n\nthe above example will output the following:\n\n3.14\n\n\n\n# arguments\n\n * format',charsets:{cjk:!0}},{title:"replace",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"replace"},{property:"og:description",content:"replace | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/filter/replace.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"replace"},{name:"twitter:description",content:"replace | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/filter/replace.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/filter/replace.html",relativePath:"docs/developer-guide/variables/filter/replace.md",key:"v-e365f37a",path:"/docs/developer-guide/variables/filter/replace.html",headers:[{level:2,title:"Arguments",slug:"arguments",normalizedTitle:"arguments",charIndex:199}],lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:"Arguments",content:"# replace\n\nThe 'replace' filter formats a given string by replacing the placeholders (placeholders are free-form):\n\n{{ \"I like %this% and %that%.\" | replace({'%this%': foo, '%that%': \"bar\"}) }}\n\n\n\n# Arguments\n\n * placeholders to replace",normalizedContent:"# replace\n\nthe 'replace' filter formats a given string by replacing the placeholders (placeholders are free-form):\n\n{{ \"i like %this% and %that%.\" | replace({'%this%': foo, '%that%': \"bar\"}) }}\n\n\n\n# arguments\n\n * placeholders to replace",charsets:{cjk:!0}},{title:"reverse",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"reverse"},{property:"og:description",content:"reverse | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/filter/reverse.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"reverse"},{name:"twitter:description",content:"reverse | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/filter/reverse.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/filter/reverse.html",relativePath:"docs/developer-guide/variables/filter/reverse.md",key:"v-eb0176fa",path:"/docs/developer-guide/variables/filter/reverse.html",lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:null,content:"# reverse\n\nThe 'reverse' filter reverses a List:\n\n{% for user in users | reverse %} {{ user }} {% endfor %}\n",normalizedContent:"# reverse\n\nthe 'reverse' filter reverses a list:\n\n{% for user in users | reverse %} {{ user }} {% endfor %}\n",charsets:{cjk:!0}},{title:"rsort",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"rsort"},{property:"og:description",content:"rsort | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/filter/rsort.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"rsort"},{name:"twitter:description",content:"rsort | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/filter/rsort.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/filter/rsort.html",relativePath:"docs/developer-guide/variables/filter/rsort.md",key:"v-a0e5effa",path:"/docs/developer-guide/variables/filter/rsort.html",lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:null,content:"# rsort\n\nThe rsort filter will sort a list in reversed order. The items of the list must implement Comparable.\n\n{% for user in users | rsort %}\n\t{{ user.name }}\n{% endfor %}\n",normalizedContent:"# rsort\n\nthe rsort filter will sort a list in reversed order. the items of the list must implement comparable.\n\n{% for user in users | rsort %}\n\t{{ user.name }}\n{% endfor %}\n",charsets:{cjk:!0}},{title:"sha256",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"sha256"},{property:"og:description",content:"sha256 | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/filter/sha256.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"sha256"},{name:"twitter:description",content:"sha256 | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/filter/sha256.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/filter/sha256.html",relativePath:"docs/developer-guide/variables/filter/sha256.md",key:"v-277041d2",path:"/docs/developer-guide/variables/filter/sha256.html",lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:null,content:'# sha256\n\nThe sha256 filter returns the SHA-256 hash of the given UTF-8 String.\n\n{{ "test" | sha256 }}\n\n\nThe above example will output the following:\n\n9f86d081884c7d659a2feaa0c55ad015a3bf4f1b2b0b822cd15d6c15b0f00a08\n',normalizedContent:'# sha256\n\nthe sha256 filter returns the sha-256 hash of the given utf-8 string.\n\n{{ "test" | sha256 }}\n\n\nthe above example will output the following:\n\n9f86d081884c7d659a2feaa0c55ad015a3bf4f1b2b0b822cd15d6c15b0f00a08\n',charsets:{cjk:!0}},{title:"slice",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"slice"},{property:"og:description",content:"slice | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/filter/slice.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"slice"},{name:"twitter:description",content:"slice | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/filter/slice.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/filter/slice.html",relativePath:"docs/developer-guide/variables/filter/slice.md",key:"v-4aab2c43",path:"/docs/developer-guide/variables/filter/slice.html",headers:[{level:2,title:"Arguments",slug:"arguments",normalizedTitle:"arguments",charIndex:222}],lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:"Arguments",content:"# slice\n\nThe slice filter returns a portion of a list, array, or string.\n\n{{ ['apple', 'peach', 'pear', 'banana'] | slice(1,3) }}\n{# results in: [peach, pear] #}\n\n\n{{ 'Mitchell' | slice(1,3) }}\n{# results in: 'it' #}\n\n\n\n# Arguments\n\n * fromIndex: 0-based and inclusive\n * toIndex: 0-based and exclusive",normalizedContent:"# slice\n\nthe slice filter returns a portion of a list, array, or string.\n\n{{ ['apple', 'peach', 'pear', 'banana'] | slice(1,3) }}\n{# results in: [peach, pear] #}\n\n\n{{ 'mitchell' | slice(1,3) }}\n{# results in: 'it' #}\n\n\n\n# arguments\n\n * fromindex: 0-based and inclusive\n * toindex: 0-based and exclusive",charsets:{cjk:!0}},{title:"slugify",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"slugify"},{property:"og:description",content:"slugify | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/filter/slugify.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"slugify"},{name:"twitter:description",content:"slugify | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/filter/slugify.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/filter/slugify.html",relativePath:"docs/developer-guide/variables/filter/slugify.md",key:"v-6a8b44a3",path:"/docs/developer-guide/variables/filter/slugify.html",lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:null,content:"# slugify\n\nThe slugify filter removes non-word characters (alphanumerics and underscores) and converts spaces to hyphen. Also strips leading and trailing whitespace.\n\n{{ \"Joel is a slug\" | slugify }}\n{# will output 'joel-is-a-slug' #}\n",normalizedContent:"# slugify\n\nthe slugify filter removes non-word characters (alphanumerics and underscores) and converts spaces to hyphen. also strips leading and trailing whitespace.\n\n{{ \"joel is a slug\" | slugify }}\n{# will output 'joel-is-a-slug' #}\n",charsets:{cjk:!0}},{title:"sort",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"sort"},{property:"og:description",content:"sort | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/filter/sort.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"sort"},{name:"twitter:description",content:"sort | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/filter/sort.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/filter/sort.html",relativePath:"docs/developer-guide/variables/filter/sort.md",key:"v-05829129",path:"/docs/developer-guide/variables/filter/sort.html",lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:null,content:"# sort\n\nThe sort filter will sort a list. The items of the list must implement Comparable.\n\n{% for user in users | sort %}\n\t{{ user.name }}\n{% endfor %}\n",normalizedContent:"# sort\n\nthe sort filter will sort a list. the items of the list must implement comparable.\n\n{% for user in users | sort %}\n\t{{ user.name }}\n{% endfor %}\n",charsets:{cjk:!0}},{title:"split",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"split"},{property:"og:description",content:"split | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/filter/split.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"split"},{name:"twitter:description",content:"split | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/filter/split.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/filter/split.html",relativePath:"docs/developer-guide/variables/filter/split.md",key:"v-e36ba57a",path:"/docs/developer-guide/variables/filter/split.html",headers:[{level:2,title:"Arguments",slug:"arguments",normalizedTitle:"arguments",charIndex:828}],lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:"Arguments",content:"# split\n\nThe split filter splits a string by the given delimiter and returns a list of strings.\n\n{% set foo = \"one,two,three\" | split(',') %}\n{# foo contains ['one', 'two', 'three'] #}\n\n\nYou can also pass a limit argument:\n\n * If limit is positive, then the pattern will be applied at most n - 1 times, the array's length will be no greater than n, and the array's last entry will contain all input beyond the last matched delimiter;\n * If limit is negative, then the pattern will be applied as many times as possible and the array can have any length;\n * If limit is zero, then the pattern will be applied as many times as possible, the array can have any length, and trailing empty strings will be discarded;\n\n{% set foo = \"one,two,three,four,five\" | split(',', 3) %}\n{# foo contains ['one', 'two', 'three,four,five'] #}\n\n\n\n# Arguments\n\n * delimiter: The delimiter\n * limit: The limit argument",normalizedContent:"# split\n\nthe split filter splits a string by the given delimiter and returns a list of strings.\n\n{% set foo = \"one,two,three\" | split(',') %}\n{# foo contains ['one', 'two', 'three'] #}\n\n\nyou can also pass a limit argument:\n\n * if limit is positive, then the pattern will be applied at most n - 1 times, the array's length will be no greater than n, and the array's last entry will contain all input beyond the last matched delimiter;\n * if limit is negative, then the pattern will be applied as many times as possible and the array can have any length;\n * if limit is zero, then the pattern will be applied as many times as possible, the array can have any length, and trailing empty strings will be discarded;\n\n{% set foo = \"one,two,three,four,five\" | split(',', 3) %}\n{# foo contains ['one', 'two', 'three,four,five'] #}\n\n\n\n# arguments\n\n * delimiter: the delimiter\n * limit: the limit argument",charsets:{cjk:!0}},{title:"substringAfter",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"substringAfter"},{property:"og:description",content:"substringAfter | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/filter/substringAfter.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"substringAfter"},{name:"twitter:description",content:"substringAfter | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/filter/substringAfter.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/filter/substringAfter.html",relativePath:"docs/developer-guide/variables/filter/substringAfter.md",key:"v-74595f62",path:"/docs/developer-guide/variables/filter/substringAfter.html",headers:[{level:2,title:"Arguments",slug:"arguments",normalizedTitle:"arguments",charIndex:207}],lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:"Arguments",content:"# substringAfter\n\nThe substringAfter filter returns the substring before the first occurrence of a separator. The separator is not returned.\n\n{{ 'a.b.c' | substringAfter('.') }}\n{# results in: 'b.c' #}\n\n\n\n# Arguments\n\n * separator: the String to search for",normalizedContent:"# substringafter\n\nthe substringafter filter returns the substring before the first occurrence of a separator. the separator is not returned.\n\n{{ 'a.b.c' | substringafter('.') }}\n{# results in: 'b.c' #}\n\n\n\n# arguments\n\n * separator: the string to search for",charsets:{cjk:!0}},{title:"substringAfterLast",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"substringAfterLast"},{property:"og:description",content:"substringAfterLast | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/filter/substringAfterLast.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"substringAfterLast"},{name:"twitter:description",content:"substringAfterLast | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/filter/substringAfterLast.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/filter/substringAfterLast.html",relativePath:"docs/developer-guide/variables/filter/substringAfterLast.md",key:"v-3b433f3a",path:"/docs/developer-guide/variables/filter/substringAfterLast.html",headers:[{level:2,title:"Arguments",slug:"arguments",normalizedTitle:"arguments",charIndex:215}],lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:"Arguments",content:"# substringAfterLast\n\nThe substringAfterLast filter returns the substring after the last occurrence of a separator. The separator is not returned.\n\n{{ 'a.b.c' | substringAfterLast('.') }}\n{# results in: 'c' #}\n\n\n\n# Arguments\n\n * separator: the String to search for",normalizedContent:"# substringafterlast\n\nthe substringafterlast filter returns the substring after the last occurrence of a separator. the separator is not returned.\n\n{{ 'a.b.c' | substringafterlast('.') }}\n{# results in: 'c' #}\n\n\n\n# arguments\n\n * separator: the string to search for",charsets:{cjk:!0}},{title:"substringBefore",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"substringBefore"},{property:"og:description",content:"substringBefore | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/filter/substringBefore.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"substringBefore"},{name:"twitter:description",content:"substringBefore | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/filter/substringBefore.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/filter/substringBefore.html",relativePath:"docs/developer-guide/variables/filter/substringBefore.md",key:"v-c3d3ac7a",path:"/docs/developer-guide/variables/filter/substringBefore.html",headers:[{level:2,title:"Arguments",slug:"arguments",normalizedTitle:"arguments",charIndex:208}],lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:"Arguments",content:"# substringBefore\n\nThe substringBefore filter returns the substring before the first occurrence of a separator. The separator is not returned.\n\n{{ 'a.b.c' | substringBefore('.') }}\n{# results in: 'a' #}\n\n\n\n# Arguments\n\n * separator: the String to search for",normalizedContent:"# substringbefore\n\nthe substringbefore filter returns the substring before the first occurrence of a separator. the separator is not returned.\n\n{{ 'a.b.c' | substringbefore('.') }}\n{# results in: 'a' #}\n\n\n\n# arguments\n\n * separator: the string to search for",charsets:{cjk:!0}},{title:"substringBeforeLast",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"substringBeforeLast"},{property:"og:description",content:"substringBeforeLast | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/filter/substringBeforeLast.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"substringBeforeLast"},{name:"twitter:description",content:"substringBeforeLast | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/filter/substringBeforeLast.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/filter/substringBeforeLast.html",relativePath:"docs/developer-guide/variables/filter/substringBeforeLast.md",key:"v-43215b83",path:"/docs/developer-guide/variables/filter/substringBeforeLast.html",headers:[{level:2,title:"Arguments",slug:"arguments",normalizedTitle:"arguments",charIndex:221}],lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:"Arguments",content:"# substringBeforeLast\n\nThe substringBeforeLast filter returns the substring before the last occurrence of a separator. The separator is not returned.\n\n{{ 'a.b.c' | substringBeforeLast('.') }}\n{# results in: 'a.b' #}\n\n\n\n# Arguments\n\n * separator: the String to search for",normalizedContent:"# substringbeforelast\n\nthe substringbeforelast filter returns the substring before the last occurrence of a separator. the separator is not returned.\n\n{{ 'a.b.c' | substringbeforelast('.') }}\n{# results in: 'a.b' #}\n\n\n\n# arguments\n\n * separator: the string to search for",charsets:{cjk:!0}},{title:"timestamp",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"timestamp"},{property:"og:description",content:"timestamp | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/filter/timestamp.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"timestamp"},{name:"twitter:description",content:"timestamp | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/filter/timestamp.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/filter/timestamp.html",relativePath:"docs/developer-guide/variables/filter/timestamp.md",key:"v-413ff743",path:"/docs/developer-guide/variables/filter/timestamp.html",headers:[{level:2,title:"Arguments",slug:"arguments",normalizedTitle:"arguments",charIndex:242}],lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:"Arguments",content:'# timestamp\n\nThe timestamp filter will convert a date to an unix timestamps in second. You can convert a string with existingFormat and change timeZone with same arguments from date filter.\n\n{{ date | timstamp(timeZone="Europe/Paris" }}\n\n\n\n# Arguments\n\n * existingFormat\n * timeZone',normalizedContent:'# timestamp\n\nthe timestamp filter will convert a date to an unix timestamps in second. you can convert a string with existingformat and change timezone with same arguments from date filter.\n\n{{ date | timstamp(timezone="europe/paris" }}\n\n\n\n# arguments\n\n * existingformat\n * timezone',charsets:{cjk:!0}},{title:"timestampmicro",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"timestampmicro"},{property:"og:description",content:"timestampmicro | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/filter/timestampMicro.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"timestampmicro"},{name:"twitter:description",content:"timestampmicro | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/filter/timestampMicro.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/filter/timestampMicro.html",relativePath:"docs/developer-guide/variables/filter/timestampMicro.md",key:"v-42c49689",path:"/docs/developer-guide/variables/filter/timestampMicro.html",headers:[{level:2,title:"Arguments",slug:"arguments",normalizedTitle:"arguments",charIndex:253}],lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:"Arguments",content:'# timestampmicro\n\nThe timestamp filter will convert a date to an unix timestamps in micro second. You can convert a string with existingFormat and change timeZone with same arguments from date filter.\n\n{{ date | timstamp(timeZone="Europe/Paris" }}\n\n\n\n# Arguments\n\n * existingFormat\n * timeZone',normalizedContent:'# timestampmicro\n\nthe timestamp filter will convert a date to an unix timestamps in micro second. you can convert a string with existingformat and change timezone with same arguments from date filter.\n\n{{ date | timstamp(timezone="europe/paris" }}\n\n\n\n# arguments\n\n * existingformat\n * timezone',charsets:{cjk:!0}},{title:"timestampnano",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"timestampnano"},{property:"og:description",content:"timestampnano | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/filter/timestampNano.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"timestampnano"},{name:"twitter:description",content:"timestampnano | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/filter/timestampNano.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/filter/timestampNano.html",relativePath:"docs/developer-guide/variables/filter/timestampNano.md",key:"v-12a41843",path:"/docs/developer-guide/variables/filter/timestampNano.html",headers:[{level:2,title:"Arguments",slug:"arguments",normalizedTitle:"arguments",charIndex:251}],lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:"Arguments",content:'# timestampnano\n\nThe timestamp filter will convert a date to an unix timestamps in nano second. You can convert a string with existingFormat and change timeZone with same arguments from date filter.\n\n{{ date | timstamp(timeZone="Europe/Paris" }}\n\n\n\n# Arguments\n\n * existingFormat\n * timeZone',normalizedContent:'# timestampnano\n\nthe timestamp filter will convert a date to an unix timestamps in nano second. you can convert a string with existingformat and change timezone with same arguments from date filter.\n\n{{ date | timstamp(timezone="europe/paris" }}\n\n\n\n# arguments\n\n * existingformat\n * timezone',charsets:{cjk:!0}},{title:"title",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"title"},{property:"og:description",content:"title | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/filter/title.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"title"},{name:"twitter:description",content:"title | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/filter/title.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/filter/title.html",relativePath:"docs/developer-guide/variables/filter/title.md",key:"v-af16fdfa",path:"/docs/developer-guide/variables/filter/title.html",lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:null,content:'# title\n\nThe title filter will capitalize the first letter of each word.\n\n{{ "article title" | title }}\n\n\nThe above example will output the following:\n\nArticle Title\n\n\nSee also:\n\n * capitalize',normalizedContent:'# title\n\nthe title filter will capitalize the first letter of each word.\n\n{{ "article title" | title }}\n\n\nthe above example will output the following:\n\narticle title\n\n\nsee also:\n\n * capitalize',charsets:{cjk:!0}},{title:"trim",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"trim"},{property:"og:description",content:"trim | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/filter/trim.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"trim"},{name:"twitter:description",content:"trim | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/filter/trim.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/filter/trim.html",relativePath:"docs/developer-guide/variables/filter/trim.md",key:"v-290ae021",path:"/docs/developer-guide/variables/filter/trim.html",lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:null,content:'# trim\n\nThe trim filter is used to trim whitespace off the beginning and end of a string.\n\n{{ "    This text has too much whitespace.    " | trim }}\n\n\nThe above example will output the following:\n\nThis text has too much whitespace.\n',normalizedContent:'# trim\n\nthe trim filter is used to trim whitespace off the beginning and end of a string.\n\n{{ "    this text has too much whitespace.    " | trim }}\n\n\nthe above example will output the following:\n\nthis text has too much whitespace.\n',charsets:{cjk:!0}},{title:"upper",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"upper"},{property:"og:description",content:"upper | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/filter/upper.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"upper"},{name:"twitter:description",content:"upper | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/filter/upper.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/filter/upper.html",relativePath:"docs/developer-guide/variables/filter/upper.md",key:"v-a615a37a",path:"/docs/developer-guide/variables/filter/upper.html",lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:null,content:'# upper\n\nThe upper filter makes an entire string upper case.\n\n{{ "this is a quiet sentence." | upper }}\n\n\nThe above example will output the following:\n\nTHIS IS A QUIET SENTENCE.\n',normalizedContent:'# upper\n\nthe upper filter makes an entire string upper case.\n\n{{ "this is a quiet sentence." | upper }}\n\n\nthe above example will output the following:\n\nthis is a quiet sentence.\n',charsets:{cjk:!0}},{title:"urlencode",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"urlencode"},{property:"og:description",content:"urlencode | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/filter/urlencode.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"urlencode"},{name:"twitter:description",content:"urlencode | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/filter/urlencode.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/filter/urlencode.html",relativePath:"docs/developer-guide/variables/filter/urlencode.md",key:"v-8e6978ba",path:"/docs/developer-guide/variables/filter/urlencode.html",lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:null,content:'# urlencode\n\nThe urlencod translates a string into application/x-www-form-urlencoded format using the "UTF-8" encoding scheme.\n\n{{ "The string ü@foo-bar" | urlencode }}\n\n\nThe above example will output the following:\n\nThe+string+%C3%BC%40foo-bar\n',normalizedContent:'# urlencode\n\nthe urlencod translates a string into application/x-www-form-urlencoded format using the "utf-8" encoding scheme.\n\n{{ "the string u@foo-bar" | urlencode }}\n\n\nthe above example will output the following:\n\nthe+string+%c3%bc%40foo-bar\n',charsets:{cjk:!0}},{title:"Function",frontmatter:{order:3,meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Function"},{property:"og:description",content:"Function | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/function/"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Function"},{name:"twitter:description",content:"Function | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/function/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/function/",relativePath:"docs/developer-guide/variables/function/README.md",key:"v-1fe614e2",path:"/docs/developer-guide/variables/function/",headers:[{level:2,title:"List of built-in functions:",slug:"list-of-built-in-functions",normalizedTitle:"list of built-in functions:",charIndex:297}],lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:"List of built-in functions:",content:"# Function\n\nFunctions can be called to generate content. Functions are called by their name followed by parentheses () and may have arguments.\n\nFor instance, the range function returns a list containing an arithmetic progression of integers:\n\n{% for i in range(0, 3) %}\n{{ i }},\n{% endfor %}\n\n\n\n# List of built-in functions:",normalizedContent:"# function\n\nfunctions can be called to generate content. functions are called by their name followed by parentheses () and may have arguments.\n\nfor instance, the range function returns a list containing an arithmetic progression of integers:\n\n{% for i in range(0, 3) %}\n{{ i }},\n{% endfor %}\n\n\n\n# list of built-in functions:",charsets:{}},{title:"block",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"block"},{property:"og:description",content:"block | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/function/block.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"block"},{name:"twitter:description",content:"block | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/function/block.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/function/block.html",relativePath:"docs/developer-guide/variables/function/block.md",key:"v-0194b523",path:"/docs/developer-guide/variables/function/block.html",lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:null,content:'# block\n\nThe block function is used to render the contents of a block more than once. It is not to be confused\nwith the block tag which is used to declare blocks.\n\nThe following example will render the contents of the "post" block twice; once where it was declared\nand again using the block function:\n\n{% block "post" %} content {% endblock %}\n\n{{ block("post") }}\n\n\nThe above example will output the following:\n\ncontent\n\ncontent\n',normalizedContent:'# block\n\nthe block function is used to render the contents of a block more than once. it is not to be confused\nwith the block tag which is used to declare blocks.\n\nthe following example will render the contents of the "post" block twice; once where it was declared\nand again using the block function:\n\n{% block "post" %} content {% endblock %}\n\n{{ block("post") }}\n\n\nthe above example will output the following:\n\ncontent\n\ncontent\n',charsets:{}},{title:"json",frontmatter:{meta:[{property:"article:modified_time",content:"2021-10-06T16:51:36.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"json"},{property:"og:description",content:"json | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/function/json.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"json"},{name:"twitter:description",content:"json | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/function/json.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/function/json.html",relativePath:"docs/developer-guide/variables/function/json.md",key:"v-028c2615",path:"/docs/developer-guide/variables/function/json.html",lastUpdated:"10/6/2021, 4:51:36 PM",lastUpdatedTimestamp:1633539096e3,headersStr:null,content:"# json\n\nThe json function will convert any string to object allowing to access to theirs properties\n\n{{ json('[1, 2, 3]')[0]  }}\n{# results in: '1' #}\n\n{{ json('{\"foo\": [666, 1, 2]}').foo[0}}\n{# results in: '666' #}\n",normalizedContent:"# json\n\nthe json function will convert any string to object allowing to access to theirs properties\n\n{{ json('[1, 2, 3]')[0]  }}\n{# results in: '1' #}\n\n{{ json('{\"foo\": [666, 1, 2]}').foo[0}}\n{# results in: '666' #}\n",charsets:{}},{title:"min",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"min"},{property:"og:description",content:"min | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/function/min.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"min"},{name:"twitter:description",content:"min | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/function/min.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/function/min.html",relativePath:"docs/developer-guide/variables/function/min.md",key:"v-95584f7a",path:"/docs/developer-guide/variables/function/min.html",lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:null,content:"# min\n\nThe min function will return the smallest of it's numerical arguments.\n\n{{ min(user.age, 80) }}\n",normalizedContent:"# min\n\nthe min function will return the smallest of it's numerical arguments.\n\n{{ min(user.age, 80) }}\n",charsets:{}},{title:"now",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"now"},{property:"og:description",content:"now | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/function/now.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"now"},{name:"twitter:description",content:"now | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/function/now.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/function/now.html",relativePath:"docs/developer-guide/variables/function/now.md",key:"v-26ff90c3",path:"/docs/developer-guide/variables/function/now.html",headers:[{level:2,title:"Arguments",slug:"arguments",normalizedTitle:"arguments",charIndex:157}],lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:"Arguments",content:'# now\n\nThe now function will return the actual datetime. The arguments are the same than the date except the format.\n\n{{ now(timeZone="Europe/Paris" }}\n\n\n\n# Arguments\n\n * existingFormat\n * timeZone\n * locale',normalizedContent:'# now\n\nthe now function will return the actual datetime. the arguments are the same than the date except the format.\n\n{{ now(timezone="europe/paris" }}\n\n\n\n# arguments\n\n * existingformat\n * timezone\n * locale',charsets:{}},{title:"parent",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"parent"},{property:"og:description",content:"parent | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/function/parent.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"parent"},{name:"twitter:description",content:"parent | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/function/parent.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/function/parent.html",relativePath:"docs/developer-guide/variables/function/parent.md",key:"v-2afbd45e",path:"/docs/developer-guide/variables/function/parent.html",lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:null,content:'# parent\n\nThe parent function is used inside of a block to render the content that the parent template would\nhave rendered inside of the block had the current template not overriden it. It is similar to Java\'s super keyword.\n\nLet\'s assume you have a template, "parent.peb" that looks something like this:\n\n{% block "content" %}\n\tparent contents\n{% endblock %}\n\n\nAnd then you have another template, "child.peb" that extends "parent.peb":\n\n{% extends "parent.peb" %}\n\n{% block "content" %}\n\tchild contents\n\t{{ parent() }}\n{% endblock %}\n\n\nThe output will look something like the following:\n\nparent contents\nchild contents\n',normalizedContent:'# parent\n\nthe parent function is used inside of a block to render the content that the parent template would\nhave rendered inside of the block had the current template not overriden it. it is similar to java\'s super keyword.\n\nlet\'s assume you have a template, "parent.peb" that looks something like this:\n\n{% block "content" %}\n\tparent contents\n{% endblock %}\n\n\nand then you have another template, "child.peb" that extends "parent.peb":\n\n{% extends "parent.peb" %}\n\n{% block "content" %}\n\tchild contents\n\t{{ parent() }}\n{% endblock %}\n\n\nthe output will look something like the following:\n\nparent contents\nchild contents\n',charsets:{}},{title:"max",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"max"},{property:"og:description",content:"max | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/function/max.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"max"},{name:"twitter:description",content:"max | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/function/max.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/function/max.html",relativePath:"docs/developer-guide/variables/function/max.md",key:"v-5abd22fa",path:"/docs/developer-guide/variables/function/max.html",lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:null,content:"# max\n\nThe max function will return the largest of it's numerical arguments.\n\n{{ max(user.age, 80) }}\n",normalizedContent:"# max\n\nthe max function will return the largest of it's numerical arguments.\n\n{{ max(user.age, 80) }}\n",charsets:{}},{title:"range",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"range"},{property:"og:description",content:"range | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/function/range.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"range"},{name:"twitter:description",content:"range | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/function/range.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/function/range.html",relativePath:"docs/developer-guide/variables/function/range.md",key:"v-2d2dbf23",path:"/docs/developer-guide/variables/function/range.html",lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:null,content:"# range\n\nThe range function will return a list containing an arithmetic progression of numbers:\n\n{% for i in range(0, 3) %}\n    {{ i }},\n{% endfor %}\n\n{# outputs 0, 1, 2, 3, #}\n\n\nWhen step is given (as the third parameter), it specifies the increment (or decrement):\n\n{% for i in range(0, 6, 2) %}\n    {{ i }},\n{% endfor %}\n\n{# outputs 0, 2, 4, 6, #}\n\n\nPebble built-in .. operator is just a shortcut for the range function with a step of 1+\n\n{% for i in 0..3 %}\n    {{ i }},\n{% endfor %}\n\n{# outputs 0, 1, 2, 3, #}\n",normalizedContent:"# range\n\nthe range function will return a list containing an arithmetic progression of numbers:\n\n{% for i in range(0, 3) %}\n    {{ i }},\n{% endfor %}\n\n{# outputs 0, 1, 2, 3, #}\n\n\nwhen step is given (as the third parameter), it specifies the increment (or decrement):\n\n{% for i in range(0, 6, 2) %}\n    {{ i }},\n{% endfor %}\n\n{# outputs 0, 2, 4, 6, #}\n\n\npebble built-in .. operator is just a shortcut for the range function with a step of 1+\n\n{% for i in 0..3 %}\n    {{ i }},\n{% endfor %}\n\n{# outputs 0, 1, 2, 3, #}\n",charsets:{}},{title:"Operators",frontmatter:{order:3,meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Operators"},{property:"og:description",content:"Operators | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/operator/"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Operators"},{name:"twitter:description",content:"Operators | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/operator/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/operator/",relativePath:"docs/developer-guide/variables/operator/README.md",key:"v-33246d6c",path:"/docs/developer-guide/variables/operator/",headers:[{level:2,title:"List of built-in operators:",slug:"list-of-built-in-operators",normalizedTitle:"list of built-in operators:",charIndex:16}],lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:"List of built-in operators:",content:"# Operators\n\n\n# List of built-in operators:",normalizedContent:"# operators\n\n\n# list of built-in operators:",charsets:{}},{title:"Comparisons",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Comparisons"},{property:"og:description",content:"Comparisons | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/operator/comparisons.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Comparisons"},{name:"twitter:description",content:"Comparisons | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/operator/comparisons.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/operator/comparisons.html",relativePath:"docs/developer-guide/variables/operator/comparisons.md",key:"v-97f5f47a",path:"/docs/developer-guide/variables/operator/comparisons.html",lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:null,content:'# Comparisons\n\nPebble provides the following comparison operators: ==, !=, <, >, <=, >=. All of them except for ==\nare equivalent to their Java counterparts. The == operator uses Java.util.Objects.equals(a, b) behind the\nscenes to perform null safe value comparisons.\n\n> equals is an alias for ==\n\n{% if user.name equals "Mitchell" %}\n\t...\n{% endif %}\n',normalizedContent:'# comparisons\n\npebble provides the following comparison operators: ==, !=, <, >, <=, >=. all of them except for ==\nare equivalent to their java counterparts. the == operator uses java.util.objects.equals(a, b) behind the\nscenes to perform null safe value comparisons.\n\n> equals is an alias for ==\n\n{% if user.name equals "mitchell" %}\n\t...\n{% endif %}\n',charsets:{}},{title:"concat",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"concat"},{property:"og:description",content:"concat | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/operator/concat.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"concat"},{name:"twitter:description",content:"concat | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/operator/concat.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/operator/concat.html",relativePath:"docs/developer-guide/variables/operator/concat.md",key:"v-34f53695",path:"/docs/developer-guide/variables/operator/concat.html",lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:null,content:'# concat\n\nThe concat operator can be used to concat 2 strings\n\n{{ "apple" ~ "pear" ~ "banana" }}\n{# results in: \'applepearbanana\' #}\n',normalizedContent:'# concat\n\nthe concat operator can be used to concat 2 strings\n\n{{ "apple" ~ "pear" ~ "banana" }}\n{# results in: \'applepearbanana\' #}\n',charsets:{}},{title:"Logic",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Logic"},{property:"og:description",content:"Logic | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/operator/logic.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Logic"},{name:"twitter:description",content:"Logic | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/operator/logic.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/operator/logic.html",relativePath:"docs/developer-guide/variables/operator/logic.md",key:"v-0d071783",path:"/docs/developer-guide/variables/operator/logic.html",lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:null,content:"# Logic\n\nThe and operator and the or operator are available to join boolean expressions.\n\n{% if 2 is even and 3 is odd %}\n\t...\n{% endif %}\n\n\nThe not operator is available to negate a boolean expression.\n\n{% if 3 is not even %}\n\t...\n{% endif %}\n\n\nParenthesis can be used to group expressions to ensure a desired precedence.\n\n{% if (3 is not even) and (2 is odd or 3 is even) %}\n\t...\n{% endif %}\n",normalizedContent:"# logic\n\nthe and operator and the or operator are available to join boolean expressions.\n\n{% if 2 is even and 3 is odd %}\n\t...\n{% endif %}\n\n\nthe not operator is available to negate a boolean expression.\n\n{% if 3 is not even %}\n\t...\n{% endif %}\n\n\nparenthesis can be used to group expressions to ensure a desired precedence.\n\n{% if (3 is not even) and (2 is odd or 3 is even) %}\n\t...\n{% endif %}\n",charsets:{}},{title:"Math",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Math"},{property:"og:description",content:"Math | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/operator/math.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Math"},{name:"twitter:description",content:"Math | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/operator/math.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/operator/math.html",relativePath:"docs/developer-guide/variables/operator/math.md",key:"v-6fab4526",path:"/docs/developer-guide/variables/operator/math.html",lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:null,content:"# Math\n\nAll the regular math operators are available for use. Order of operations applies.\n\n{{ 2 + 2 / ( 10 % 3 ) * (8 - 1) }}\n\n\nThe following operators are supported:\n\n * +: Adds two numbers together (the operands are casted to numbers). {{\n   1 + 1 }} is 2.\n * -: Subtracts the second number from the first one. {{ 3 - 2 }} is 1.\n * /: Divides two numbers. The returned value will be a floating point number. {{ 1 / 2 }} is {{ 0.5 }}.\n * %: Calculates the remainder of an integer division. {{ 11 % 7 }} is 4.\n * *: Multiplies the left operand with the right one. {{ 2 * 2 }} would return 4.\n\nThe result can be negated using the not operator.",normalizedContent:"# math\n\nall the regular math operators are available for use. order of operations applies.\n\n{{ 2 + 2 / ( 10 % 3 ) * (8 - 1) }}\n\n\nthe following operators are supported:\n\n * +: adds two numbers together (the operands are casted to numbers). {{\n   1 + 1 }} is 2.\n * -: subtracts the second number from the first one. {{ 3 - 2 }} is 1.\n * /: divides two numbers. the returned value will be a floating point number. {{ 1 / 2 }} is {{ 0.5 }}.\n * %: calculates the remainder of an integer division. {{ 11 % 7 }} is 4.\n * *: multiplies the left operand with the right one. {{ 2 * 2 }} would return 4.\n\nthe result can be negated using the not operator.",charsets:{}},{title:"not",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"not"},{property:"og:description",content:"not | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/operator/not.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"not"},{name:"twitter:description",content:"not | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/operator/not.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/operator/not.html",relativePath:"docs/developer-guide/variables/operator/not.md",key:"v-a066783a",path:"/docs/developer-guide/variables/operator/not.html",lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:null,content:"# not\n\nThe not operator is used in conjonction with is will negate the test.\n\n{% if 3 is not even %}\n\t...\n{% endif %}\n",normalizedContent:"# not\n\nthe not operator is used in conjonction with is will negate the test.\n\n{% if 3 is not even %}\n\t...\n{% endif %}\n",charsets:{}},{title:"Null-Coalescing operator",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Null-Coalescing operator"},{property:"og:description",content:"Null-Coalescing operator | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/operator/null-coalescing.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Null-Coalescing operator"},{name:"twitter:description",content:"Null-Coalescing operator | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/operator/null-coalescing.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/operator/null-coalescing.html",relativePath:"docs/developer-guide/variables/operator/null-coalescing.md",key:"v-68153c43",path:"/docs/developer-guide/variables/operator/null-coalescing.html",lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:null,content:"# Null-Coalescing operator\n\nPebble supports the use of the null-coalescing operator that allow to test if variables is defined.\n\n{% set baz = \"baz\" %}\n{{ foo ?? bar ?? baz }}\n\n{# results in: 'baz' #}\n\n{{ foo ?? bar ?? raise }}\n{# results: an exception because none of the 3 vars is defined  #}\n",normalizedContent:"# null-coalescing operator\n\npebble supports the use of the null-coalescing operator that allow to test if variables is defined.\n\n{% set baz = \"baz\" %}\n{{ foo ?? bar ?? baz }}\n\n{# results in: 'baz' #}\n\n{{ foo ?? bar ?? raise }}\n{# results: an exception because none of the 3 vars is defined  #}\n",charsets:{}},{title:"Ternary operator",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Ternary operator"},{property:"og:description",content:"Ternary operator | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/operator/ternary-operator.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Ternary operator"},{name:"twitter:description",content:"Ternary operator | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/operator/ternary-operator.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/operator/ternary-operator.html",relativePath:"docs/developer-guide/variables/operator/ternary-operator.md",key:"v-0aa012d1",path:"/docs/developer-guide/variables/operator/ternary-operator.html",lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:null,content:"# Ternary operator\n\nPebble supports the use of the conditional operator (often named the ternary operator).\n\n{{ foo == null ? bar : baz }}\n",normalizedContent:"# ternary operator\n\npebble supports the use of the conditional operator (often named the ternary operator).\n\n{{ foo == null ? bar : baz }}\n",charsets:{}},{title:"Tags",frontmatter:{order:4,meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Tags"},{property:"og:description",content:"Tags | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/tag/"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Tags"},{name:"twitter:description",content:"Tags | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/tag/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/tag/",relativePath:"docs/developer-guide/variables/tag/README.md",key:"v-781b89e8",path:"/docs/developer-guide/variables/tag/",headers:[{level:2,title:"List of built-in operators:",slug:"list-of-built-in-operators",normalizedTitle:"list of built-in operators:",charIndex:11}],lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:"List of built-in operators:",content:"# Tags\n\n\n# List of built-in operators:",normalizedContent:"# tags\n\n\n# list of built-in operators:",charsets:{}},{title:"block",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"block"},{property:"og:description",content:"block | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/tag/block.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"block"},{name:"twitter:description",content:"block | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/tag/block.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/tag/block.html",relativePath:"docs/developer-guide/variables/tag/block.md",key:"v-2652c323",path:"/docs/developer-guide/variables/tag/block.html",lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:null,content:"# block\n\nThe block tag is used to render the contents of a block more than once.\nIn the following example we create a block with the name 'header':\n\n{% block header %}\n\t<h1> Introduction </h1>\n{% endblock header %}\n\n\nThen the block tag can be used with the block function\n\n{{ block(\"post\") }}\n",normalizedContent:"# block\n\nthe block tag is used to render the contents of a block more than once.\nin the following example we create a block with the name 'header':\n\n{% block header %}\n\t<h1> introduction </h1>\n{% endblock header %}\n\n\nthen the block tag can be used with the block function\n\n{{ block(\"post\") }}\n",charsets:{}},{title:"filter",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"filter"},{property:"og:description",content:"filter | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/tag/filter.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"filter"},{name:"twitter:description",content:"filter | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/tag/filter.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/tag/filter.html",relativePath:"docs/developer-guide/variables/tag/filter.md",key:"v-8587667a",path:"/docs/developer-guide/variables/tag/filter.html",lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:null,content:"# filter\n\nThe filter tag allows you to apply a filter to a large chunk of template.\n\n{% filter upper %}\n\thello\n{% endfilter %}}\n\n{# output: 'HELLO' #}\n\n\nMultiple filters can be chained together.\n\n{% filter upper | lower | title %}\n\thello<br>\n{% endfilter %}}\n\n{# output: 'HELLO&lt;br&gt;' #}\n",normalizedContent:"# filter\n\nthe filter tag allows you to apply a filter to a large chunk of template.\n\n{% filter upper %}\n\thello\n{% endfilter %}}\n\n{# output: 'hello' #}\n\n\nmultiple filters can be chained together.\n\n{% filter upper | lower | title %}\n\thello<br>\n{% endfilter %}}\n\n{# output: 'hello&lt;br&gt;' #}\n",charsets:{cjk:!0}},{title:"for",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"for"},{property:"og:description",content:"for | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/tag/for.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"for"},{name:"twitter:description",content:"for | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/tag/for.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/tag/for.html",relativePath:"docs/developer-guide/variables/tag/for.md",key:"v-e12df7aa",path:"/docs/developer-guide/variables/tag/for.html",lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:null,content:"# for\n\nThe for tag is used to iterate through primitive arrays or anything that implements the java.lang.Iterable\ninterface, as well as maps.\n\n{% for user in users %}\n\t{{ user.name }} lives in {{ user.city }}.\n{% endfor %}\n\n\nWhile inside of the loop, Pebble provides a couple of special variables to help you out:\n\n * loop.index - a zero-based index that increments with every iteration.\n * loop.length - the size of the object we are iterating over.\n * loop.first - True if first iteration\n * loop.last - True if last iteration\n * loop.revindex - The number of iterations from the end of the loop\n\n{% for user in users %}\n\t{{ loop.index }} - {{ user.id }}\n{% endfor %}\n\n\nThe for tag also provides a convenient way to check if the iterable object is empty with the included else tag.\n\n{% for user in users %}\n\t{{ loop.index }} - {{ user.id }}\n{% else %}\n\tThere are no users to display.\n{% endfor %}\n\n\nIterating over maps can be done like so:\n\n{% for entry in map %}\n    {{ entry.key }} - {{ entry.value }}\n{% endfor %}\n",normalizedContent:"# for\n\nthe for tag is used to iterate through primitive arrays or anything that implements the java.lang.iterable\ninterface, as well as maps.\n\n{% for user in users %}\n\t{{ user.name }} lives in {{ user.city }}.\n{% endfor %}\n\n\nwhile inside of the loop, pebble provides a couple of special variables to help you out:\n\n * loop.index - a zero-based index that increments with every iteration.\n * loop.length - the size of the object we are iterating over.\n * loop.first - true if first iteration\n * loop.last - true if last iteration\n * loop.revindex - the number of iterations from the end of the loop\n\n{% for user in users %}\n\t{{ loop.index }} - {{ user.id }}\n{% endfor %}\n\n\nthe for tag also provides a convenient way to check if the iterable object is empty with the included else tag.\n\n{% for user in users %}\n\t{{ loop.index }} - {{ user.id }}\n{% else %}\n\tthere are no users to display.\n{% endfor %}\n\n\niterating over maps can be done like so:\n\n{% for entry in map %}\n    {{ entry.key }} - {{ entry.value }}\n{% endfor %}\n",charsets:{}},{title:"macro",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"macro"},{property:"og:description",content:"macro | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/tag/macro.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"macro"},{name:"twitter:description",content:"macro | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/tag/macro.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/tag/macro.html",relativePath:"docs/developer-guide/variables/tag/macro.md",key:"v-2b9b85e5",path:"/docs/developer-guide/variables/tag/macro.html",headers:[{level:3,title:"Access to the global context",slug:"access-to-the-global-context",normalizedTitle:"access to the global context",charIndex:780}],lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:"Access to the global context",content:'# macro\n\nThe macro tag allows you to create a chunk of reusable and dynamic content. The macro can be called\nmultiple times in the current template.\n\nIt doesn\'t matter where in the current template you define a macro, i.e. whether it\'s before or after you call it.\nHere is an example of how to define a macro:\n\n{% macro input(type="text", name, value) %}\n\t<input type="{{ type }}" name="{{ name }}" value="{{ value }}" />\n{% endmacro %}\n\n\nAnd now the macro can be called numerous times throughout the template, like so:\n\n{{ input(name="country") }}\n{# will output: <input type="text" name="country" value="" /> #}\n\n\nA macro does not have access to the same variables that the rest of the template has access to.\nA macro can only work with the variables provided as arguments.\n\n\n# Access to the global context\n\nYou can pass the whole context as an argument by using the special _context variable if you need to access\nvariables outside of the macro scope:\n\n{% set foo = \'bar\' %}\n\n{{ test(_context) }}\n{% macro test(_context) %}\n\t{{ _context.foo }}\n{% endmacro %}\n\n{# will output: bar #}\n',normalizedContent:'# macro\n\nthe macro tag allows you to create a chunk of reusable and dynamic content. the macro can be called\nmultiple times in the current template.\n\nit doesn\'t matter where in the current template you define a macro, i.e. whether it\'s before or after you call it.\nhere is an example of how to define a macro:\n\n{% macro input(type="text", name, value) %}\n\t<input type="{{ type }}" name="{{ name }}" value="{{ value }}" />\n{% endmacro %}\n\n\nand now the macro can be called numerous times throughout the template, like so:\n\n{{ input(name="country") }}\n{# will output: <input type="text" name="country" value="" /> #}\n\n\na macro does not have access to the same variables that the rest of the template has access to.\na macro can only work with the variables provided as arguments.\n\n\n# access to the global context\n\nyou can pass the whole context as an argument by using the special _context variable if you need to access\nvariables outside of the macro scope:\n\n{% set foo = \'bar\' %}\n\n{{ test(_context) }}\n{% macro test(_context) %}\n\t{{ _context.foo }}\n{% endmacro %}\n\n{# will output: bar #}\n',charsets:{}},{title:"if",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"if"},{property:"og:description",content:"if | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/tag/if.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"if"},{name:"twitter:description",content:"if | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/tag/if.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/tag/if.html",relativePath:"docs/developer-guide/variables/tag/if.md",key:"v-33b417a3",path:"/docs/developer-guide/variables/tag/if.html",headers:[{level:3,title:"Supported conditions",slug:"supported-conditions",normalizedTitle:"supported conditions",charIndex:346}],lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:"Supported conditions",content:"# if\n\nThe if tag allows you to designate a chunk of content as conditional depending on the result of an expression\n\n{% if users is empty %}\n\tThere are no users.\n{% elseif users.length == 1 %}\n\tThere is only one user.\n{% else %}\n\tThere are many users.\n{% endif %}\n\n\nThe expression used in the if statement often makes use of the is operator.\n\n\n# Supported conditions\n\nIf tag currently supports the following expression\n\nVALUE                         BOOLEAN EXPRESSION\nboolean                       boolean value\nEmpty string                  false\nNon empty string              true\nnumeric zero                  false\nnumeric different than zero   true",normalizedContent:"# if\n\nthe if tag allows you to designate a chunk of content as conditional depending on the result of an expression\n\n{% if users is empty %}\n\tthere are no users.\n{% elseif users.length == 1 %}\n\tthere is only one user.\n{% else %}\n\tthere are many users.\n{% endif %}\n\n\nthe expression used in the if statement often makes use of the is operator.\n\n\n# supported conditions\n\nif tag currently supports the following expression\n\nvalue                         boolean expression\nboolean                       boolean value\nempty string                  false\nnon empty string              true\nnumeric zero                  false\nnumeric different than zero   true",charsets:{}},{title:"set",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"set"},{property:"og:description",content:"set | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/tag/set.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"set"},{name:"twitter:description",content:"set | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/tag/set.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/tag/set.html",relativePath:"docs/developer-guide/variables/tag/set.md",key:"v-f3d3490e",path:"/docs/developer-guide/variables/tag/set.html",lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:null,content:'# set\n\nThe set tag allows you to define a variable in the current context, whether it currently exists or not.\n\n{% set header = "Test Page" %}\n\n{{ header }}\n',normalizedContent:'# set\n\nthe set tag allows you to define a variable in the current context, whether it currently exists or not.\n\n{% set header = "test page" %}\n\n{{ header }}\n',charsets:{}},{title:"verbatim",frontmatter:{meta:[{property:"article:modified_time",content:"2021-11-30T21:09:42.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"verbatim"},{property:"og:description",content:"verbatim | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/tag/verbatim.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"verbatim"},{name:"twitter:description",content:"verbatim | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/tag/verbatim.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/tag/verbatim.html",relativePath:"docs/developer-guide/variables/tag/verbatim.md",key:"v-6fae6643",path:"/docs/developer-guide/variables/tag/verbatim.html",headers:[{level:2,title:"Inline Verbatim Text",slug:"inline-verbatim-text",normalizedTitle:"inline verbatim text",charIndex:192}],lastUpdated:"11/30/2021, 9:09:42 PM",lastUpdatedTimestamp:1638306582e3,headersStr:"Inline Verbatim Text",content:'# verbatim\n\nThe verbatim tag allows you to write a block of Pebble syntax that won\'t be parsed.\n\n{% verbatim %}\n\t{% for user in users %}\n\t\t{{ user.name }}\n\t{% endfor %}\n{% endverbatim %}\n\n\n\n# Inline Verbatim Text\n\nFor inline verbatim text, a string literal can be used. For example, if you need to include {{ in the output of a template, you can use {{ "{{" }} in string literal in the Pebble template\n\nThis would be useful if you are using Pebble to generate Angular HTML component template files:\n\n<td>{{ "{{" }}school.name{{ "}}" }}</td>\n\n\nwould produce the following template output:\n\n<td>{{school.name}}</td>\n',normalizedContent:'# verbatim\n\nthe verbatim tag allows you to write a block of pebble syntax that won\'t be parsed.\n\n{% verbatim %}\n\t{% for user in users %}\n\t\t{{ user.name }}\n\t{% endfor %}\n{% endverbatim %}\n\n\n\n# inline verbatim text\n\nfor inline verbatim text, a string literal can be used. for example, if you need to include {{ in the output of a template, you can use {{ "{{" }} in string literal in the pebble template\n\nthis would be useful if you are using pebble to generate angular html component template files:\n\n<td>{{ "{{" }}school.name{{ "}}" }}</td>\n\n\nwould produce the following template output:\n\n<td>{{school.name}}</td>\n',charsets:{}},{title:"Tests",frontmatter:{order:5,meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Tests"},{property:"og:description",content:"Tests | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/test/"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Tests"},{name:"twitter:description",content:"Tests | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/test/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/test/",relativePath:"docs/developer-guide/variables/test/README.md",key:"v-2c735824",path:"/docs/developer-guide/variables/test/",headers:[{level:2,title:"List of built-in operators:",slug:"list-of-built-in-operators",normalizedTitle:"list of built-in operators:",charIndex:12}],lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:"List of built-in operators:",content:"# Tests\n\n\n# List of built-in operators:",normalizedContent:"# tests\n\n\n# list of built-in operators:",charsets:{}},{title:"defined",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"defined"},{property:"og:description",content:"defined | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/test/defined.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"defined"},{name:"twitter:description",content:"defined | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/test/defined.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/test/defined.html",relativePath:"docs/developer-guide/variables/test/defined.md",key:"v-4fe9ff3a",path:"/docs/developer-guide/variables/test/defined.html",lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:null,content:"# defined\n\nThe defined test checks if a variable is defined.\n\n{% if missing is not defined %}\n\t...\n{% endif %}\n",normalizedContent:"# defined\n\nthe defined test checks if a variable is defined.\n\n{% if missing is not defined %}\n\t...\n{% endif %}\n",charsets:{}},{title:"empty",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"empty"},{property:"og:description",content:"empty | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/test/empty.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"empty"},{name:"twitter:description",content:"empty | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/test/empty.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/test/empty.html",relativePath:"docs/developer-guide/variables/test/empty.md",key:"v-562d6fe3",path:"/docs/developer-guide/variables/test/empty.html",lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:null,content:"# empty\n\nThe empty test checks if a variable is empty. A variable is empty if it is null, an empty string, an\nempty collection, or an empty map.\n\n{% if user.email is empty %}\n\t...\n{% endif %}\n",normalizedContent:"# empty\n\nthe empty test checks if a variable is empty. a variable is empty if it is null, an empty string, an\nempty collection, or an empty map.\n\n{% if user.email is empty %}\n\t...\n{% endif %}\n",charsets:{}},{title:"even",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"even"},{property:"og:description",content:"even | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/test/even.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"even"},{name:"twitter:description",content:"even | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/test/even.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/test/even.html",relativePath:"docs/developer-guide/variables/test/even.md",key:"v-416ac725",path:"/docs/developer-guide/variables/test/even.html",lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:null,content:"# even\n\nThe even test checks if an integer is even.\n\n{% if 2 is even %}\n\t...\n{% endif %}\n",normalizedContent:"# even\n\nthe even test checks if an integer is even.\n\n{% if 2 is even %}\n\t...\n{% endif %}\n",charsets:{}},{title:"iterable",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"iterable"},{property:"og:description",content:"iterable | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/test/iterable.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"iterable"},{name:"twitter:description",content:"iterable | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/test/iterable.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/test/iterable.html",relativePath:"docs/developer-guide/variables/test/iterable.md",key:"v-f8095e16",path:"/docs/developer-guide/variables/test/iterable.html",lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:null,content:"# iterable\n\nThe iterable test checks if a variable implements java.lang.Iterable.\n\n{% if users is iterable %}\n\t{% for user in users %}\n\t\t...\n\t{% endfor %}\n{% endif %}\n",normalizedContent:"# iterable\n\nthe iterable test checks if a variable implements java.lang.iterable.\n\n{% if users is iterable %}\n\t{% for user in users %}\n\t\t...\n\t{% endfor %}\n{% endif %}\n",charsets:{}},{title:"json",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"json"},{property:"og:description",content:"json | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/test/json.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"json"},{name:"twitter:description",content:"json | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/test/json.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/test/json.html",relativePath:"docs/developer-guide/variables/test/json.md",key:"v-47b2e3ee",path:"/docs/developer-guide/variables/test/json.html",lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:null,content:"# json\n\nThe json test checks if a variable is valid json string?\n\n{% if '{\"test\": 1}' is json %}\n\t...\n{% endif %}\n",normalizedContent:"# json\n\nthe json test checks if a variable is valid json string?\n\n{% if '{\"test\": 1}' is json %}\n\t...\n{% endif %}\n",charsets:{}},{title:"map",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"map"},{property:"og:description",content:"map | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/test/map.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"map"},{name:"twitter:description",content:"map | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/test/map.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/test/map.html",relativePath:"docs/developer-guide/variables/test/map.md",key:"v-0b5d6643",path:"/docs/developer-guide/variables/test/map.html",lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:null,content:'# map\n\nThe map test checks if a variable is an instance of a map.\n\n{% if {"apple":"red", "banana":"yellow"} is map %}\n\t...\n{% endif %}\n',normalizedContent:'# map\n\nthe map test checks if a variable is an instance of a map.\n\n{% if {"apple":"red", "banana":"yellow"} is map %}\n\t...\n{% endif %}\n',charsets:{}},{title:"null",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"null"},{property:"og:description",content:"null | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/test/null.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"null"},{name:"twitter:description",content:"null | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/test/null.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/test/null.html",relativePath:"docs/developer-guide/variables/test/null.md",key:"v-3d85960b",path:"/docs/developer-guide/variables/test/null.html",lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:null,content:"# null\n\nThe null test checks if a variable is null.\n\n{% if user.email is null %}\n\t...\n{% endif %}\n",normalizedContent:"# null\n\nthe null test checks if a variable is null.\n\n{% if user.email is null %}\n\t...\n{% endif %}\n",charsets:{}},{title:"odd",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"odd"},{property:"og:description",content:"odd | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/test/odd.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"odd"},{name:"twitter:description",content:"odd | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/test/odd.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/test/odd.html",relativePath:"docs/developer-guide/variables/test/odd.md",key:"v-720f7fba",path:"/docs/developer-guide/variables/test/odd.html",lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:null,content:"# odd\n\nThe odd test checks if an integer is odd.\n\n{% if 3 is odd %}\n\t...\n{% endif %}\n",normalizedContent:"# odd\n\nthe odd test checks if an integer is odd.\n\n{% if 3 is odd %}\n\t...\n{% endif %}\n",charsets:{}},{title:"Getting Started",frontmatter:{order:1,meta:[{property:"article:modified_time",content:"2021-03-26T21:33:01.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Getting Started"},{property:"og:description",content:"Getting Started | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/getting-started/"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Getting Started"},{name:"twitter:description",content:"Getting Started | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/getting-started/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/getting-started/",relativePath:"docs/getting-started/README.md",key:"v-787eb528",path:"/docs/getting-started/",headers:[{level:2,title:"Before you begin",slug:"before-you-begin",normalizedTitle:"before you begin",charIndex:22},{level:2,title:"Launch Kestra",slug:"launch-kestra",normalizedTitle:"launch kestra",charIndex:111},{level:2,title:"Create your first flow",slug:"create-your-first-flow",normalizedTitle:"create your first flow",charIndex:238},{level:2,title:"Execute your first flow",slug:"execute-your-first-flow",normalizedTitle:"execute your first flow",charIndex:847},{level:2,title:"Next Steps",slug:"next-steps",normalizedTitle:"next steps",charIndex:1145}],lastUpdated:"3/26/2021, 9:33:01 PM",lastUpdatedTimestamp:1616794381e3,headersStr:"Before you begin Launch Kestra Create your first flow Execute your first flow Next Steps",content:"# Getting Started\n\n\n# Before you begin\n\nMake sure you have already installed:\n\n * Docker\n * Docker Compose\n\n\n# Launch Kestra\n\n * Download the compose file here\n * Run docker-compose up -d\n * Open http://localhost:8080 on your browser\n\n\n# Create your first flow\n\nThe default installation is empty and don't contain any flows.\n\n\n\nWe will create the first one :\n\n\n\n * Click on the Create button at the button\n * Paste the flow below\n * Click on save\n\nid: logs\nnamespace: io.kestra.tests\n\ntasks:\n- id: t1\n  type: io.kestra.core.tasks.debugs.Echo\n  format: first {{task.id}}\n  level: TRACE\n- id: t2\n  type: io.kestra.core.tasks.debugs.Echo\n  format: second {{task.type}}\n  level: WARN\n- id: t3\n  type: io.kestra.core.tasks.debugs.Echo\n  format: third {{flow.id}}\n  level: ERROR\n\n\nYou will see the Topology of your flow as graph on Overview tabs.\n\n\n\n\n# Execute your first flow\n\nNow let's run our first flow and see it running :\n\n * Now hit the button Execute on top Tabs.\n * You will see in Real time the execution of the current flow\n   \n * Look at the log of the current tasks on Logs\n   \n * And watch the topology of the current execution.\n   \n\n\n# Next Steps\n\nNow, you are ready to use Kestra !\n\nNow I suggest you to read some documentations in order:\n\n * to understand Kestra concepts.\n * read the Developer Guide to understand how to code your own flow.\n * Look at Plugins to have some real task .\n * Deploy your kestra instance to real environments.",normalizedContent:"# getting started\n\n\n# before you begin\n\nmake sure you have already installed:\n\n * docker\n * docker compose\n\n\n# launch kestra\n\n * download the compose file here\n * run docker-compose up -d\n * open http://localhost:8080 on your browser\n\n\n# create your first flow\n\nthe default installation is empty and don't contain any flows.\n\n\n\nwe will create the first one :\n\n\n\n * click on the create button at the button\n * paste the flow below\n * click on save\n\nid: logs\nnamespace: io.kestra.tests\n\ntasks:\n- id: t1\n  type: io.kestra.core.tasks.debugs.echo\n  format: first {{task.id}}\n  level: trace\n- id: t2\n  type: io.kestra.core.tasks.debugs.echo\n  format: second {{task.type}}\n  level: warn\n- id: t3\n  type: io.kestra.core.tasks.debugs.echo\n  format: third {{flow.id}}\n  level: error\n\n\nyou will see the topology of your flow as graph on overview tabs.\n\n\n\n\n# execute your first flow\n\nnow let's run our first flow and see it running :\n\n * now hit the button execute on top tabs.\n * you will see in real time the execution of the current flow\n   \n * look at the log of the current tasks on logs\n   \n * and watch the topology of the current execution.\n   \n\n\n# next steps\n\nnow, you are ready to use kestra !\n\nnow i suggest you to read some documentations in order:\n\n * to understand kestra concepts.\n * read the developer guide to understand how to code your own flow.\n * look at plugins to have some real task .\n * deploy your kestra instance to real environments.",charsets:{}},{title:"Plugin Developer Guide",frontmatter:{order:6,meta:[{property:"article:modified_time",content:"2021-11-19T08:25:55.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Plugin Developer Guide"},{property:"og:description",content:"Plugin Developer Guide | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/plugin-developer-guide/"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Plugin Developer Guide"},{name:"twitter:description",content:"Plugin Developer Guide | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/plugin-developer-guide/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/plugin-developer-guide/",relativePath:"docs/plugin-developer-guide/README.md",key:"v-4e9ad7a0",path:"/docs/plugin-developer-guide/",headers:[{level:2,title:"Requirements",slug:"requirements",normalizedTitle:"requirements",charIndex:119},{level:2,title:"Create a new plugins",slug:"create-a-new-plugins",normalizedTitle:"create a new plugins",charIndex:336},{level:2,title:"Develop a new plugins",slug:"develop-a-new-plugins",normalizedTitle:"develop a new plugins",charIndex:908}],lastUpdated:"11/19/2021, 8:25:55 AM",lastUpdatedTimestamp:1637310355e3,headersStr:"Requirements Create a new plugins Develop a new plugins",content:"# Plugin Developer Guide\n\nWe provide a plugin template in order to start quickly the development of a new plugins.\n\n\n# Requirements\n\nKestra plugins development requirements are :\n\n * Java 11 or later\n * IntelliJ IDEA (or any other Java IDE, we provide only help for IntelliJ IDEA)\n * Gradle (included most of the time with the IDE)\n\n\n# Create a new plugins\n\nHere is the step:\n\n 1. Go on the plugin-template repository.\n 2. Click on Use this template.\n 3. Choose the github account your want to link & repository name for the new plugins.\n 4. Clone the new repository: git clone git@github.com:{{user}}/{{name}}.git.\n 5. Open the cloned directory in IntelliJ IDEA.\n 6. Enable annotations processors.\n 7. If you are using an IntelliJ IDEA < 2020.03, install the lombok plugins (if not it's included by default).\n\nDone ! You are ready to create a new plugin, here is the directory structure you will have:\n\n\n\n# Develop a new plugins\n\nIn order to customize your plugin to your need you can follow this guide based on your need:",normalizedContent:"# plugin developer guide\n\nwe provide a plugin template in order to start quickly the development of a new plugins.\n\n\n# requirements\n\nkestra plugins development requirements are :\n\n * java 11 or later\n * intellij idea (or any other java ide, we provide only help for intellij idea)\n * gradle (included most of the time with the ide)\n\n\n# create a new plugins\n\nhere is the step:\n\n 1. go on the plugin-template repository.\n 2. click on use this template.\n 3. choose the github account your want to link & repository name for the new plugins.\n 4. clone the new repository: git clone git@github.com:{{user}}/{{name}}.git.\n 5. open the cloned directory in intellij idea.\n 6. enable annotations processors.\n 7. if you are using an intellij idea < 2020.03, install the lombok plugins (if not it's included by default).\n\ndone ! you are ready to create a new plugin, here is the directory structure you will have:\n\n\n\n# develop a new plugins\n\nin order to customize your plugin to your need you can follow this guide based on your need:",charsets:{}},{title:"Build a plugin",frontmatter:{order:8,meta:[{property:"article:modified_time",content:"2020-12-01T14:47:07.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Build a plugin"},{property:"og:description",content:"Build a plugin | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/plugin-developer-guide/build/"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Build a plugin"},{name:"twitter:description",content:"Build a plugin | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/plugin-developer-guide/build/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/plugin-developer-guide/build/",relativePath:"docs/plugin-developer-guide/build/README.md",key:"v-af19e69c",path:"/docs/plugin-developer-guide/build/",lastUpdated:"12/1/2020, 2:47:07 PM",lastUpdatedTimestamp:1606834027e3,headersStr:null,content:"# Build a plugin\n\nKestra template include a gradle task in order to build your plugin.\n\nSimple use ./gradlew shadowJar to build your plugin.\n\nThe jar will be generated on the build/libs/*.jar directory.\n\nJust drop this jar on the Kestra plugins path and it will be usable by your Kestra instance.",normalizedContent:"# build a plugin\n\nkestra template include a gradle task in order to build your plugin.\n\nsimple use ./gradlew shadowjar to build your plugin.\n\nthe jar will be generated on the build/libs/*.jar directory.\n\njust drop this jar on the kestra plugins path and it will be usable by your kestra instance.",charsets:{}},{title:"Develop your Condition",frontmatter:{order:5,meta:[{property:"article:modified_time",content:"2021-03-26T21:33:01.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Develop your Condition"},{property:"og:description",content:"Develop your Condition | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/plugin-developer-guide/conditions/"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Develop your Condition"},{name:"twitter:description",content:"Develop your Condition | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/plugin-developer-guide/conditions/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/plugin-developer-guide/conditions/",relativePath:"docs/plugin-developer-guide/conditions/README.md",key:"v-e5195c30",path:"/docs/plugin-developer-guide/conditions/",lastUpdated:"3/26/2021, 9:33:01 PM",lastUpdatedTimestamp:1616794381e3,headersStr:null,content:'# Develop your Condition\n\nHere is the instruction to develop a Condition.\n\nHere is a simple condition example that validate the current flow:\n\n@SuperBuilder\n@ToString\n@EqualsAndHashCode\n@Getter\n@NoArgsConstructor\n@Schema(\n    title = "Condition for a specific flow"\n)\n@Plugin(\n    examples = {\n        @Example(\n            full = true,\n            code = {\n                "- conditions:",\n                "    - type: io.kestra.core.models.conditions.types.FlowCondition",\n                "      namespace: io.kestra.tests",\n                "      flowId: my-current-flow"\n            }\n        )\n    }\n)\npublic class FlowCondition extends Condition {\n    @NotNull\n    @Schema(title = "The namespace of the flow")\n    public String namespace;\n\n    @NotNull\n    @Schema(title = "The flow id")\n    public String flowId;\n\n    @Override\n    public boolean test(ConditionContext conditionContext) {\n        return conditionContext.getFlow().getNamespace().equals(this.namespace) && conditionContext.getFlow().getId().equals(this.flowId);\n    }\n}\n\n\nYou just need to extend Condition and implement the boolean test(ConditionContext conditionContext) method.\n\nYou can have any properties you want like for any task (validatation, documentation, ...) is working the same way.\n\nThe test will receive a ConditionContext that will expose :\n\n * conditionContext.getFlow(): the current flow\n * conditionContext.getExecution(): the current execution that can be null for Triggers\n * conditionContext.getRunContext(): a RunContext in order to render your properties.\n\nThis method must simply return a boolean in order to validate or not the Conditions.',normalizedContent:'# develop your condition\n\nhere is the instruction to develop a condition.\n\nhere is a simple condition example that validate the current flow:\n\n@superbuilder\n@tostring\n@equalsandhashcode\n@getter\n@noargsconstructor\n@schema(\n    title = "condition for a specific flow"\n)\n@plugin(\n    examples = {\n        @example(\n            full = true,\n            code = {\n                "- conditions:",\n                "    - type: io.kestra.core.models.conditions.types.flowcondition",\n                "      namespace: io.kestra.tests",\n                "      flowid: my-current-flow"\n            }\n        )\n    }\n)\npublic class flowcondition extends condition {\n    @notnull\n    @schema(title = "the namespace of the flow")\n    public string namespace;\n\n    @notnull\n    @schema(title = "the flow id")\n    public string flowid;\n\n    @override\n    public boolean test(conditioncontext conditioncontext) {\n        return conditioncontext.getflow().getnamespace().equals(this.namespace) && conditioncontext.getflow().getid().equals(this.flowid);\n    }\n}\n\n\nyou just need to extend condition and implement the boolean test(conditioncontext conditioncontext) method.\n\nyou can have any properties you want like for any task (validatation, documentation, ...) is working the same way.\n\nthe test will receive a conditioncontext that will expose :\n\n * conditioncontext.getflow(): the current flow\n * conditioncontext.getexecution(): the current execution that can be null for triggers\n * conditioncontext.getruncontext(): a runcontext in order to render your properties.\n\nthis method must simply return a boolean in order to validate or not the conditions.',charsets:{}},{title:"Develop your FlowableTask",frontmatter:{order:3,meta:[{property:"article:modified_time",content:"2020-11-16T21:13:31.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Develop your FlowableTask"},{property:"og:description",content:"Develop your FlowableTask | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/plugin-developer-guide/flowable-task/"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Develop your FlowableTask"},{name:"twitter:description",content:"Develop your FlowableTask | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/plugin-developer-guide/flowable-task/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/plugin-developer-guide/flowable-task/",relativePath:"docs/plugin-developer-guide/flowable-task/README.md",key:"v-74d8f83a",path:"/docs/plugin-developer-guide/flowable-task/",lastUpdated:"11/16/2020, 9:13:31 PM",lastUpdatedTimestamp:1605561211e3,headersStr:null,content:"# Develop your FlowableTask\n\nFlowable are most complexe tasks to develop, and will be as possible available from the core team.\n\nWARNING\n\nJust keep in mind, a FlowableTask will be evaluated very frequently and must be cpu less operations, no IO can be done on this kind of tasks.\n\nIn a future, a full documentation will be available here. In a meantime, you can find all the actual Flowable tasks here to have some inspiration for Sequential or Parallel tasks development.",normalizedContent:"# develop your flowabletask\n\nflowable are most complexe tasks to develop, and will be as possible available from the core team.\n\nwarning\n\njust keep in mind, a flowabletask will be evaluated very frequently and must be cpu less operations, no io can be done on this kind of tasks.\n\nin a future, a full documentation will be available here. in a meantime, you can find all the actual flowable tasks here to have some inspiration for sequential or parallel tasks development.",charsets:{}},{title:"Gradle configuration",frontmatter:{order:1,meta:[{property:"article:modified_time",content:"2021-03-26T21:33:01.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Gradle configuration"},{property:"og:description",content:"Gradle configuration | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/plugin-developer-guide/gradle/"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Gradle configuration"},{name:"twitter:description",content:"Gradle configuration | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/plugin-developer-guide/gradle/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/plugin-developer-guide/gradle/",relativePath:"docs/plugin-developer-guide/gradle/README.md",key:"v-e228dff0",path:"/docs/plugin-developer-guide/gradle/",headers:[{level:2,title:"Mandatory configuration",slug:"mandatory-configuration",normalizedTitle:"mandatory configuration",charIndex:67},{level:2,title:"Others configurations",slug:"others-configurations",normalizedTitle:"others configurations",charIndex:620},{level:3,title:"Include some dependencies on plugins",slug:"include-some-dependencies-on-plugins",normalizedTitle:"include some dependencies on plugins",charIndex:646}],lastUpdated:"3/26/2021, 9:33:01 PM",lastUpdatedTimestamp:1616794381e3,headersStr:"Mandatory configuration Others configurations Include some dependencies on plugins",content:"# Gradle configuration\n\nWe use gradle as built tool in Kestra.\n\n\n# Mandatory configuration\n\nThe first thing you need to configure is the plugin name & the class package.\n\n 1. change in settings.gradle the rootProject.name = 'plugin-template' with your plugin name.\n 2. change the class package: by default, the template provide a package io.kestra.plugin.templates, just rename the folder in src/main/java & src/test/java\n 3. change the package name on build.gradle: replace group \"io.kestra.plugin.templates\" to the package name.\n\nNow you can start develop your task or look at other optional gradle configuration.\n\n\n# Others configurations\n\n\n# Include some dependencies on plugins\n\nYou can add as many dependencies with your plugins, that will be isolated in Kestra runtimes. By this way, we ensure the 2 different libs will not clash and have some runtime errors about missing methods.\n\nThe build.gradle handle most of Kestra use case by default using compileOnly group: \"io.kestra\", name: \"core\", version: kestraVersion for Kestra libs.\n\nBut if your plugin need some dependencies, you can add as many as you want that will be isolated, you just add to provide an api dependencies :\n\napi group: 'com.google.code.gson', name: 'gson', version: '2.8.6'\n",normalizedContent:"# gradle configuration\n\nwe use gradle as built tool in kestra.\n\n\n# mandatory configuration\n\nthe first thing you need to configure is the plugin name & the class package.\n\n 1. change in settings.gradle the rootproject.name = 'plugin-template' with your plugin name.\n 2. change the class package: by default, the template provide a package io.kestra.plugin.templates, just rename the folder in src/main/java & src/test/java\n 3. change the package name on build.gradle: replace group \"io.kestra.plugin.templates\" to the package name.\n\nnow you can start develop your task or look at other optional gradle configuration.\n\n\n# others configurations\n\n\n# include some dependencies on plugins\n\nyou can add as many dependencies with your plugins, that will be isolated in kestra runtimes. by this way, we ensure the 2 different libs will not clash and have some runtime errors about missing methods.\n\nthe build.gradle handle most of kestra use case by default using compileonly group: \"io.kestra\", name: \"core\", version: kestraversion for kestra libs.\n\nbut if your plugin need some dependencies, you can add as many as you want that will be isolated, you just add to provide an api dependencies :\n\napi group: 'com.google.code.gson', name: 'gson', version: '2.8.6'\n",charsets:{}},{title:"Outputs & Metrics from a script engine",frontmatter:{order:7,meta:[{property:"article:modified_time",content:"2021-03-26T21:33:01.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Outputs & Metrics from a script engine"},{property:"og:description",content:"Outputs & Metrics from a script engine | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/plugin-developer-guide/outputs/"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Outputs & Metrics from a script engine"},{name:"twitter:description",content:"Outputs & Metrics from a script engine | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/plugin-developer-guide/outputs/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/plugin-developer-guide/outputs/",relativePath:"docs/plugin-developer-guide/outputs/README.md",key:"v-51cba32a",path:"/docs/plugin-developer-guide/outputs/",headers:[{level:2,title:"Script command",slug:"script-command",normalizedTitle:"script command",charIndex:320},{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:1008}],lastUpdated:"3/26/2021, 9:33:01 PM",lastUpdatedTimestamp:1616794381e3,headersStr:"Script command Examples",content:'# Outputs & Metrics from a script engine\n\nKestra can catch outputs & metrics from any scripting language. In the core, Python & Node inject an package to help you!\n\nIf you are using another language like Bash or another one, we don\'t provide any package to help, but you can easily do it with simple echo on stdout.\n\n\n# Script command\n\nKestra look at every outputs on standard out (or standard err) for a special ::{}:: with {} a compacted json string (not multiple line).\n\nHere is the full representation of the object :\n\n{\n    "outputs": { // map of key value with all the outputs you want to send\n        "my-key": "my-value",\n        "my-list": [1, 2, 3] // you can use \n    },\n    "metrics": [ // you can send multiple metrics at once\n       {\n            "name": "my-counter", // mandatory, the name of the metrics\n            "type": "counter", // mandatory, "counter" or "timer"\n            "value": 1.2, // mandatory (double), counter to add, or duration in seconds for timer \n       }\n    ]\n}\n\n\n\n# Examples\n\n# send some outputs with right type \necho \'::{"outputs":{"test":"value","int":2,"bool":true,"float":3.65}}::\'\n\n# send a counter with tags\necho \'::{"metrics":[{"name":"count","type":"counter","value":1,"tags":{"tag1":"i","tag2":"win"}}]}::\'\n\n# send a timer with tags\necho \'::{"metrics":[{"name":"timer2","type":"timer","value":2.12,"tags":{"tag1":"i","tag2":"destroy"}}]}::\'\n',normalizedContent:'# outputs & metrics from a script engine\n\nkestra can catch outputs & metrics from any scripting language. in the core, python & node inject an package to help you!\n\nif you are using another language like bash or another one, we don\'t provide any package to help, but you can easily do it with simple echo on stdout.\n\n\n# script command\n\nkestra look at every outputs on standard out (or standard err) for a special ::{}:: with {} a compacted json string (not multiple line).\n\nhere is the full representation of the object :\n\n{\n    "outputs": { // map of key value with all the outputs you want to send\n        "my-key": "my-value",\n        "my-list": [1, 2, 3] // you can use \n    },\n    "metrics": [ // you can send multiple metrics at once\n       {\n            "name": "my-counter", // mandatory, the name of the metrics\n            "type": "counter", // mandatory, "counter" or "timer"\n            "value": 1.2, // mandatory (double), counter to add, or duration in seconds for timer \n       }\n    ]\n}\n\n\n\n# examples\n\n# send some outputs with right type \necho \'::{"outputs":{"test":"value","int":2,"bool":true,"float":3.65}}::\'\n\n# send a counter with tags\necho \'::{"metrics":[{"name":"count","type":"counter","value":1,"tags":{"tag1":"i","tag2":"win"}}]}::\'\n\n# send a timer with tags\necho \'::{"metrics":[{"name":"timer2","type":"timer","value":2.12,"tags":{"tag1":"i","tag2":"destroy"}}]}::\'\n',charsets:{}},{title:"Publish a plugin",frontmatter:{order:9,meta:[{property:"article:modified_time",content:"2021-03-26T21:33:01.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Publish a plugin"},{property:"og:description",content:"Publish a plugin | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/plugin-developer-guide/publish/"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Publish a plugin"},{name:"twitter:description",content:"Publish a plugin | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/plugin-developer-guide/publish/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/plugin-developer-guide/publish/",relativePath:"docs/plugin-developer-guide/publish/README.md",key:"v-c38cdba0",path:"/docs/plugin-developer-guide/publish/",headers:[{level:2,title:"With GitHub Actions",slug:"with-github-actions",normalizedTitle:"with github actions",charIndex:23},{level:2,title:"Publish on Maven Central",slug:"publish-on-maven-central",normalizedTitle:"publish on maven central",charIndex:203}],lastUpdated:"3/26/2021, 9:33:01 PM",lastUpdatedTimestamp:1616794381e3,headersStr:"With GitHub Actions Publish on Maven Central",content:'# Publish a plugin\n\n\n# With GitHub Actions\n\nThe template include a GitHub Actions workflow in order to test.\nFeel free to add any step to start containers for integration, deploy to artifactory, ...\n\n\n# Publish on Maven Central\n\nThe template also include a gradle task that will publish to Maven Central. We will need to register to be able to publish to maven central.\n\nYou only need configure the gradle.properties to have all required properties :\n\nsonatypeUsername=\nsonatypePassword=\nsigning.keyId=\nsigning.password=\nsigning.secretKeyRingFile=\n\n\n\nThere is a preconfigured GitHub Actions in .github/workflows/main.yml files that you customized to your need:\n\n      # Publish\n      - name: Publish package to Sonatype\n        if: github.ref == \'refs/heads/master\'\n        env:\n          ORG_GRADLE_PROJECT_sonatypeUsername: ${{ secrets.SONATYPE_USER }}\n          ORG_GRADLE_PROJECT_sonatypePassword: ${{ secrets.SONATYPE_PASSWORD }}\n          SONATYPE_GPG_KEYID: ${{ secrets.SONATYPE_GPG_KEYID }}\n          SONATYPE_GPG_PASSWORD: ${{ secrets.SONATYPE_GPG_PASSWORD }}\n          SONATYPE_GPG_FILE: ${{ secrets.SONATYPE_GPG_FILE }}\n        run: |\n          echo "signing.keyId=${SONATYPE_GPG_KEYID}" > ~/.gradle/gradle.properties\n          echo "signing.password=${SONATYPE_GPG_PASSWORD}" >> ~/.gradle/gradle.properties\n          echo "signing.secretKeyRingFile=${HOME}/.gradle/secring.gpg" >> ~/.gradle/gradle.properties\n          echo ${SONATYPE_GPG_FILE} | base64 -d > ~/.gradle/secring.gpg\n          ./gradlew publishToSonatype\n\n      # Release\n      - name: Release package to Maven Central\n        if: startsWith(github.ref, \'refs/tags/v\')\n        env:\n          ORG_GRADLE_PROJECT_sonatypeUsername: ${{ secrets.SONATYPE_USER }}\n          ORG_GRADLE_PROJECT_sonatypePassword: ${{ secrets.SONATYPE_PASSWORD }}\n          SONATYPE_GPG_KEYID: ${{ secrets.SONATYPE_GPG_KEYID }}\n          SONATYPE_GPG_PASSWORD: ${{ secrets.SONATYPE_GPG_PASSWORD }}\n          SONATYPE_GPG_FILE: ${{ secrets.SONATYPE_GPG_FILE }}\n        run: |\n          echo "signing.keyId=${SONATYPE_GPG_KEYID}" > ~/.gradle/gradle.properties\n          echo "signing.password=${SONATYPE_GPG_PASSWORD}" >> ~/.gradle/gradle.properties\n          echo "signing.secretKeyRingFile=${HOME}/.gradle/secring.gpg" >> ~/.gradle/gradle.properties\n          echo ${SONATYPE_GPG_FILE} | base64 -d > ~/.gradle/secring.gpg\n          ./gradlew publishToSonatype closeAndReleaseSonatypeStagingRepository\n',normalizedContent:'# publish a plugin\n\n\n# with github actions\n\nthe template include a github actions workflow in order to test.\nfeel free to add any step to start containers for integration, deploy to artifactory, ...\n\n\n# publish on maven central\n\nthe template also include a gradle task that will publish to maven central. we will need to register to be able to publish to maven central.\n\nyou only need configure the gradle.properties to have all required properties :\n\nsonatypeusername=\nsonatypepassword=\nsigning.keyid=\nsigning.password=\nsigning.secretkeyringfile=\n\n\n\nthere is a preconfigured github actions in .github/workflows/main.yml files that you customized to your need:\n\n      # publish\n      - name: publish package to sonatype\n        if: github.ref == \'refs/heads/master\'\n        env:\n          org_gradle_project_sonatypeusername: ${{ secrets.sonatype_user }}\n          org_gradle_project_sonatypepassword: ${{ secrets.sonatype_password }}\n          sonatype_gpg_keyid: ${{ secrets.sonatype_gpg_keyid }}\n          sonatype_gpg_password: ${{ secrets.sonatype_gpg_password }}\n          sonatype_gpg_file: ${{ secrets.sonatype_gpg_file }}\n        run: |\n          echo "signing.keyid=${sonatype_gpg_keyid}" > ~/.gradle/gradle.properties\n          echo "signing.password=${sonatype_gpg_password}" >> ~/.gradle/gradle.properties\n          echo "signing.secretkeyringfile=${home}/.gradle/secring.gpg" >> ~/.gradle/gradle.properties\n          echo ${sonatype_gpg_file} | base64 -d > ~/.gradle/secring.gpg\n          ./gradlew publishtosonatype\n\n      # release\n      - name: release package to maven central\n        if: startswith(github.ref, \'refs/tags/v\')\n        env:\n          org_gradle_project_sonatypeusername: ${{ secrets.sonatype_user }}\n          org_gradle_project_sonatypepassword: ${{ secrets.sonatype_password }}\n          sonatype_gpg_keyid: ${{ secrets.sonatype_gpg_keyid }}\n          sonatype_gpg_password: ${{ secrets.sonatype_gpg_password }}\n          sonatype_gpg_file: ${{ secrets.sonatype_gpg_file }}\n        run: |\n          echo "signing.keyid=${sonatype_gpg_keyid}" > ~/.gradle/gradle.properties\n          echo "signing.password=${sonatype_gpg_password}" >> ~/.gradle/gradle.properties\n          echo "signing.secretkeyringfile=${home}/.gradle/secring.gpg" >> ~/.gradle/gradle.properties\n          echo ${sonatype_gpg_file} | base64 -d > ~/.gradle/secring.gpg\n          ./gradlew publishtosonatype closeandreleasesonatypestagingrepository\n',charsets:{cjk:!0}},{title:"Develop your RunnableTask",frontmatter:{order:2,meta:[{property:"article:modified_time",content:"2021-10-06T18:30:46.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Develop your RunnableTask"},{property:"og:description",content:"Develop your RunnableTask | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/plugin-developer-guide/runnable-task/"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Develop your RunnableTask"},{name:"twitter:description",content:"Develop your RunnableTask | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/plugin-developer-guide/runnable-task/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/plugin-developer-guide/runnable-task/",relativePath:"docs/plugin-developer-guide/runnable-task/README.md",key:"v-5cb2b138",path:"/docs/plugin-developer-guide/runnable-task/",headers:[{level:2,title:"Class annotations",slug:"class-annotations",normalizedTitle:"class annotations",charIndex:1122},{level:2,title:"Class declaration",slug:"class-declaration",normalizedTitle:"class declaration",charIndex:1375},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:1831},{level:3,title:"Properties validation",slug:"properties-validation",normalizedTitle:"properties validation",charIndex:2363},{level:2,title:"Run",slug:"run",normalizedTitle:"run",charIndex:15},{level:3,title:"Log",slug:"log",normalizedTitle:"log",charIndex:636},{level:3,title:"Render variables",slug:"render-variables",normalizedTitle:"render variables",charIndex:4578},{level:3,title:"Kestra storage",slug:"kestra-storage",normalizedTitle:"kestra storage",charIndex:5093},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:5694},{level:2,title:"Exception",slug:"exception",normalizedTitle:"exception",charIndex:616},{level:2,title:"Metrics",slug:"metrics",normalizedTitle:"metrics",charIndex:7114},{level:3,title:"Name",slug:"name",normalizedTitle:"name",charIndex:1620},{level:3,title:"Tags",slug:"tags",normalizedTitle:"tags",charIndex:7852},{level:2,title:"Documentation",slug:"documentation",normalizedTitle:"documentation",charIndex:7998},{level:3,title:"With @Schema",slug:"with-schema",normalizedTitle:"with @schema",charIndex:8282},{level:3,title:"With @Plugin annotation on class",slug:"with-plugin-annotation-on-class",normalizedTitle:"with @plugin annotation on class",charIndex:8569},{level:3,title:"With @PluginProperty on class",slug:"with-pluginproperty-on-class",normalizedTitle:"with @pluginproperty on class",charIndex:9120}],lastUpdated:"10/6/2021, 6:30:46 PM",lastUpdatedTimestamp:1633545046e3,headersStr:"Class annotations Class declaration Properties Properties validation Run Log Render variables Kestra storage Outputs Exception Metrics Name Tags Documentation With @Schema With @Plugin annotation on class With @PluginProperty on class",content:'# Develop your RunnableTask\n\nHere is the instruction to develop the most common Runnable Task.\n\nHere is a simple task example that reverse a string:\n\n@SuperBuilder\n@ToString\n@EqualsAndHashCode\n@Getter\n@NoArgsConstructor\n@Schema(\n    title = "Reverse a string",\n    description = "Reverse all letters from a string"\n)\npublic class ReverseString extends Task implements RunnableTask<ReverseString.Output> {\n    @Schema(\n        title = "The base string you want to reverse"\n    )\n    @PluginProperty(dynamic = true)\n    private String format;\n\n    @Override\n    public Example.Output run(RunContext runContext) throws Exception {\n        Logger logger = runContext.logger();\n\n        String render = runContext.render(format);\n        logger.debug(render);\n\n        return Output.builder()\n            .reverse(StringUtils.reverse(render))\n            .build();\n    }\n\n    @Builder\n    @Getter\n    public static class Output implements io.kestra.core.models.tasks.Output {\n        @Schema(\n            title = "The reverse string "\n        )\n        private final String reverse;\n    }\n}\n\n\nLet look at these one deeply:\n\n\n# Class annotations\n\n@SuperBuilder\n@ToString\n@EqualsAndHashCode\n@Getter\n@NoArgsConstructor\n\n\nThese are required in order to make your plugin works with Kestra, these are Lombok annotation that allow kestra and internal serialization to work properly.\n\n\n# Class declaration\n\npublic class ReverseString extends Task implements RunnableTask<Example.Output>\n\n\n * ReverseString is the name of your task and can be use on Kestra with type: io.kestra.plugin.templates.ReverseString (aka: {{package}}.{{className}})\n * Class must extends Task to be usable\n * implements RunnableTask<ReverseString.Output>: must implements RunnableTask to be discovered and must declared the output of the tasks ReverseString.Output\n\n\n# Properties\n\n    @PluginProperty(dynamic = true)\n    private String format;\n\n\nDeclare all the properties that you can pass to current task on flow. For example, this will be a valid yaml for this task:\n\ntype: io.kestra.plugin.templates.ReverseString\nformat: "{{outputs.previousTask.name}}"\n\n\nYou can declare as many properties you want, all of these will be filled by Kestra executors.\nYou can use any serializable by Jackson for your properties (ex: Double, boolean, ...). You can create any class since the class Serializable.\n\n\n# Properties validation\n\nProperties can be validated using javax.validation.constraints.* annotations. When the user creates a flow, your task properties will be validated before insertion and prevent wrong definition to be inserted.\n\nThe default available annotations are:\n\n * @Positive\n * @AssertFalse\n * @AssertTrue\n * @Max\n * @Min\n * @Negative\n * @NegativeOrZero\n * @Positive\n * @PositiveOrZero\n * @NotBlank\n * @NotNull\n * @Null\n * @NotEmpty\n * @Past\n * @PastOrPresent\n * @Future\n * @FutureOrPresent\n\nYou can also create your custom validation, you must defined the annotation\n\n@Retention(RetentionPolicy.RUNTIME)\n@Constraint(validatedBy = { })\npublic @interface CronExpression {\n    String message() default "invalid cron expression ({validatedValue})";\n}\n\n\nand a factory to inject the validation method :\n\n@Factory\npublic class ValidationFactory {\nprivate static final CronParser CRON_PARSER = new CronParser(CronDefinitionBuilder.instanceDefinitionFor(CronType.UNIX));\n\n    @Singleton\n    ConstraintValidator<CronExpression, CharSequence> cronExpressionValidator() {\n        return (value, annotationMetadata, context) -> {\n            if (value == null) {\n                return true;\n            }\n\n            try {\n                Cron parse = CRON_PARSER.parse(value.toString());\n                parse.validate();\n            } catch (IllegalArgumentException e) {\n                return false;\n            }\n\n            return true;\n        };\n    }\n}\n\n\n\n\n\n# Run\n\n    @Override\n    public Example.Output run(RunContext runContext) throws Exception {\n        Logger logger = runContext.logger();\n\n        String render = runContext.render(format);\n        logger.debug(render);\n\n        return Output.builder()\n            .reverse(StringUtils.reverse(render))\n            .build();\n    }\n\n\nIs where the main logic of your task will do all the work needed. You can used any Java code here with any libs you need until you have declared it Gradle configuration.\n\n\n# Log\n\nLogger logger = runContext.logger();\n\n\nTo have a logger, you need to use this instruction, this will provide a logger for the current execution and will be log properly, don\'t have your own logger in order to track log on the UI.\n\n\n# Render variables\n\nString render = runContext.render(format);\n\n\nIn order to use variables, you need to render the variables, aka: transform the properties with handlebars.\nJust don\'t forgot to render this variables if you need to pass some output from previous variables.\n\nYou also need to this annotations @PluginProperty(dynamic = true) in order to explain in the documentation that you can pass some variables.\nProvide a @PluginProperty(dynamic = false) to explain clearly that you don\'t transform the value.\n\n\n# Kestra storage\n\nYou can read any file from Kestra storage using method runContext.uriToInputStream()\n\nfinal URI from = new URI(runContext.render(this.from));\nfinal InputStream inputStream = runContext.uriToInputStream(from);\n\n\nYou will get an InputStream in order to read the file from Kestra storage (coming from inputs or task outputs)\n\nYou can also write files to Kestra storage using runContext.putTempFile(File file). The local file will be deleted, so you must use a temporary file.\n\nFile tempFile = File.createTempFile("concat_", "");\nrunContext.putTempFile(tempFile)\n\n\nDon\'t forgot to provide Outputs with the link generated by putTempFile in order to be usable by others tasks.\n\n\n# Outputs\n\npublic class ReverseString extends Task implements RunnableTask<ReverseString.Output> {\n    @Override\n    public Example.Output run(RunContext runContext) throws Exception {\n        return Output.builder()\n            .reverse(StringUtils.reverse(render))\n            .build();\n    }\n\n    @Builder\n    @Getter\n    public static class Output implements io.kestra.core.models.tasks.Output {\n        @Schema(\n            title = "The reverse string "\n        )\n        private final String reverse;\n    }\n}\n\n\n\nEach task must return a class instance with outputs values that can be used for next tasks.\nYou must return a class that implements io.kestra.core.models.tasks.Output.\nYou can add as many properties as you want, but keep in mind that all theses must be serializable.\nAll output will be available for next task through variables.\n\nIf your task don\'t provide any outputs (mostly never), you can create a task like that:\n\npublic class NoOutput extends Task implements FlowableTask<VoidOutput> {\n    @Override\n    public VoidOutput run(RunContext runContext) throws Exception {\n        return null;\n    }\n}\n\n\n\n# Exception\n\nIn the run methods, you can throw any Exception that will be catch by Kestra and will failed the execution.\nWe advise you to throw any Exception that can break your task as soon as possible.\n\n\n# Metrics\n\nYou can send metrics to add some observability on your task. Metrics will be recorded with yout execution and will be show on the UI.\n\nThere is 2 kind of metrics :\n\n * Counter: Counter.of("your.counter", count, tags); with args\n   * String name: The name of the metrics\n   * Double|Long|Integer|Float count: the counter associated\n   * String... tags: a list of tags associated with your metrics\n * Timer: Timer.of("your.duration", duration, tags);\n   * String name: The name of the metrics\n   * Duration duration: the duration recorded\n   * String... tags: a list of tags associated with your metrics\n\nTo save metrics with execution, you need to use runContext.metric(metrics)\n\n\n# Name\n\nMust be lowercase separated by dots.\n\n\n# Tags\n\nMust be a key and value of tags. Example of a valid tags are :\n\nCounter.of("your.counter", count, "zone", "EU", "location", "france");\n\n\n\n# Documentation\n\nDocumentation (on the ui and on this website) is based on annotations.\nWe tried to guess as many documentation from javax annotation, default value from properties, ...\nBut some need to be declared manually in order to provide a full documentation for final users.\n\n\n# With @Schema\n\nMost are based on swagger annotation of package io.swagger.v3.oas.annotations.media.\n\nYou can add a @Schema on :\n\n * class\n * properties\n * output\n\nMost of @Schema properties can be used, most important are :\n\n * title\n * description\n * but feel free to used other one\n\n\n# With @Plugin annotation on class\n\nWe have introduced @Plugin annotation for the documentation that is out of scope of json schema.\n\nFor now only examples are available :\n\n@Plugin(\n    examples = @Example(\n        full = true,\n        title = "A schedule trigger",\n        code = {\n            "triggers:",\n            "  - id: schedule",\n            "    type: io.kestra.core.models.triggers.types.Schedule",\n            "    cron: \\"*/15 * * * *\\"",\n            "    backfill:",\n            "      start: 2020-06-25T14:00:00Z"\n        }\n    )\n)\n\n\n\n# With @PluginProperty on class\n\nLike @Plugin, @PluginProperty for the documentation that is out of scope of json schema.\n\n@PluginProperty(dynamic = true, additionalProperties = Task.class)\n\n\nFor now,\n\n * dynamic: to documentation Render variables\n * additionalProperties: to document for a Map<String, T> the T type.',normalizedContent:'# develop your runnabletask\n\nhere is the instruction to develop the most common runnable task.\n\nhere is a simple task example that reverse a string:\n\n@superbuilder\n@tostring\n@equalsandhashcode\n@getter\n@noargsconstructor\n@schema(\n    title = "reverse a string",\n    description = "reverse all letters from a string"\n)\npublic class reversestring extends task implements runnabletask<reversestring.output> {\n    @schema(\n        title = "the base string you want to reverse"\n    )\n    @pluginproperty(dynamic = true)\n    private string format;\n\n    @override\n    public example.output run(runcontext runcontext) throws exception {\n        logger logger = runcontext.logger();\n\n        string render = runcontext.render(format);\n        logger.debug(render);\n\n        return output.builder()\n            .reverse(stringutils.reverse(render))\n            .build();\n    }\n\n    @builder\n    @getter\n    public static class output implements io.kestra.core.models.tasks.output {\n        @schema(\n            title = "the reverse string "\n        )\n        private final string reverse;\n    }\n}\n\n\nlet look at these one deeply:\n\n\n# class annotations\n\n@superbuilder\n@tostring\n@equalsandhashcode\n@getter\n@noargsconstructor\n\n\nthese are required in order to make your plugin works with kestra, these are lombok annotation that allow kestra and internal serialization to work properly.\n\n\n# class declaration\n\npublic class reversestring extends task implements runnabletask<example.output>\n\n\n * reversestring is the name of your task and can be use on kestra with type: io.kestra.plugin.templates.reversestring (aka: {{package}}.{{classname}})\n * class must extends task to be usable\n * implements runnabletask<reversestring.output>: must implements runnabletask to be discovered and must declared the output of the tasks reversestring.output\n\n\n# properties\n\n    @pluginproperty(dynamic = true)\n    private string format;\n\n\ndeclare all the properties that you can pass to current task on flow. for example, this will be a valid yaml for this task:\n\ntype: io.kestra.plugin.templates.reversestring\nformat: "{{outputs.previoustask.name}}"\n\n\nyou can declare as many properties you want, all of these will be filled by kestra executors.\nyou can use any serializable by jackson for your properties (ex: double, boolean, ...). you can create any class since the class serializable.\n\n\n# properties validation\n\nproperties can be validated using javax.validation.constraints.* annotations. when the user creates a flow, your task properties will be validated before insertion and prevent wrong definition to be inserted.\n\nthe default available annotations are:\n\n * @positive\n * @assertfalse\n * @asserttrue\n * @max\n * @min\n * @negative\n * @negativeorzero\n * @positive\n * @positiveorzero\n * @notblank\n * @notnull\n * @null\n * @notempty\n * @past\n * @pastorpresent\n * @future\n * @futureorpresent\n\nyou can also create your custom validation, you must defined the annotation\n\n@retention(retentionpolicy.runtime)\n@constraint(validatedby = { })\npublic @interface cronexpression {\n    string message() default "invalid cron expression ({validatedvalue})";\n}\n\n\nand a factory to inject the validation method :\n\n@factory\npublic class validationfactory {\nprivate static final cronparser cron_parser = new cronparser(crondefinitionbuilder.instancedefinitionfor(crontype.unix));\n\n    @singleton\n    constraintvalidator<cronexpression, charsequence> cronexpressionvalidator() {\n        return (value, annotationmetadata, context) -> {\n            if (value == null) {\n                return true;\n            }\n\n            try {\n                cron parse = cron_parser.parse(value.tostring());\n                parse.validate();\n            } catch (illegalargumentexception e) {\n                return false;\n            }\n\n            return true;\n        };\n    }\n}\n\n\n\n\n\n# run\n\n    @override\n    public example.output run(runcontext runcontext) throws exception {\n        logger logger = runcontext.logger();\n\n        string render = runcontext.render(format);\n        logger.debug(render);\n\n        return output.builder()\n            .reverse(stringutils.reverse(render))\n            .build();\n    }\n\n\nis where the main logic of your task will do all the work needed. you can used any java code here with any libs you need until you have declared it gradle configuration.\n\n\n# log\n\nlogger logger = runcontext.logger();\n\n\nto have a logger, you need to use this instruction, this will provide a logger for the current execution and will be log properly, don\'t have your own logger in order to track log on the ui.\n\n\n# render variables\n\nstring render = runcontext.render(format);\n\n\nin order to use variables, you need to render the variables, aka: transform the properties with handlebars.\njust don\'t forgot to render this variables if you need to pass some output from previous variables.\n\nyou also need to this annotations @pluginproperty(dynamic = true) in order to explain in the documentation that you can pass some variables.\nprovide a @pluginproperty(dynamic = false) to explain clearly that you don\'t transform the value.\n\n\n# kestra storage\n\nyou can read any file from kestra storage using method runcontext.uritoinputstream()\n\nfinal uri from = new uri(runcontext.render(this.from));\nfinal inputstream inputstream = runcontext.uritoinputstream(from);\n\n\nyou will get an inputstream in order to read the file from kestra storage (coming from inputs or task outputs)\n\nyou can also write files to kestra storage using runcontext.puttempfile(file file). the local file will be deleted, so you must use a temporary file.\n\nfile tempfile = file.createtempfile("concat_", "");\nruncontext.puttempfile(tempfile)\n\n\ndon\'t forgot to provide outputs with the link generated by puttempfile in order to be usable by others tasks.\n\n\n# outputs\n\npublic class reversestring extends task implements runnabletask<reversestring.output> {\n    @override\n    public example.output run(runcontext runcontext) throws exception {\n        return output.builder()\n            .reverse(stringutils.reverse(render))\n            .build();\n    }\n\n    @builder\n    @getter\n    public static class output implements io.kestra.core.models.tasks.output {\n        @schema(\n            title = "the reverse string "\n        )\n        private final string reverse;\n    }\n}\n\n\n\neach task must return a class instance with outputs values that can be used for next tasks.\nyou must return a class that implements io.kestra.core.models.tasks.output.\nyou can add as many properties as you want, but keep in mind that all theses must be serializable.\nall output will be available for next task through variables.\n\nif your task don\'t provide any outputs (mostly never), you can create a task like that:\n\npublic class nooutput extends task implements flowabletask<voidoutput> {\n    @override\n    public voidoutput run(runcontext runcontext) throws exception {\n        return null;\n    }\n}\n\n\n\n# exception\n\nin the run methods, you can throw any exception that will be catch by kestra and will failed the execution.\nwe advise you to throw any exception that can break your task as soon as possible.\n\n\n# metrics\n\nyou can send metrics to add some observability on your task. metrics will be recorded with yout execution and will be show on the ui.\n\nthere is 2 kind of metrics :\n\n * counter: counter.of("your.counter", count, tags); with args\n   * string name: the name of the metrics\n   * double|long|integer|float count: the counter associated\n   * string... tags: a list of tags associated with your metrics\n * timer: timer.of("your.duration", duration, tags);\n   * string name: the name of the metrics\n   * duration duration: the duration recorded\n   * string... tags: a list of tags associated with your metrics\n\nto save metrics with execution, you need to use runcontext.metric(metrics)\n\n\n# name\n\nmust be lowercase separated by dots.\n\n\n# tags\n\nmust be a key and value of tags. example of a valid tags are :\n\ncounter.of("your.counter", count, "zone", "eu", "location", "france");\n\n\n\n# documentation\n\ndocumentation (on the ui and on this website) is based on annotations.\nwe tried to guess as many documentation from javax annotation, default value from properties, ...\nbut some need to be declared manually in order to provide a full documentation for final users.\n\n\n# with @schema\n\nmost are based on swagger annotation of package io.swagger.v3.oas.annotations.media.\n\nyou can add a @schema on :\n\n * class\n * properties\n * output\n\nmost of @schema properties can be used, most important are :\n\n * title\n * description\n * but feel free to used other one\n\n\n# with @plugin annotation on class\n\nwe have introduced @plugin annotation for the documentation that is out of scope of json schema.\n\nfor now only examples are available :\n\n@plugin(\n    examples = @example(\n        full = true,\n        title = "a schedule trigger",\n        code = {\n            "triggers:",\n            "  - id: schedule",\n            "    type: io.kestra.core.models.triggers.types.schedule",\n            "    cron: \\"*/15 * * * *\\"",\n            "    backfill:",\n            "      start: 2020-06-25t14:00:00z"\n        }\n    )\n)\n\n\n\n# with @pluginproperty on class\n\nlike @plugin, @pluginproperty for the documentation that is out of scope of json schema.\n\n@pluginproperty(dynamic = true, additionalproperties = task.class)\n\n\nfor now,\n\n * dynamic: to documentation render variables\n * additionalproperties: to document for a map<string, t> the t type.',charsets:{cjk:!0}},{title:"Develop your Trigger",frontmatter:{order:4,meta:[{property:"article:modified_time",content:"2021-03-26T21:33:01.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Develop your Trigger"},{property:"og:description",content:"Develop your Trigger | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/plugin-developer-guide/triggers/"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Develop your Trigger"},{name:"twitter:description",content:"Develop your Trigger | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/plugin-developer-guide/triggers/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/plugin-developer-guide/triggers/",relativePath:"docs/plugin-developer-guide/triggers/README.md",key:"v-2e06cf88",path:"/docs/plugin-developer-guide/triggers/",lastUpdated:"3/26/2021, 9:33:01 PM",lastUpdatedTimestamp:1616794381e3,headersStr:null,content:"# Develop your Trigger\n\nHere is the instruction to develop a Trigger.\n\nHere is a simple Trigger example that will trigger an execution randomly:\n\n@SuperBuilder\n@ToString\n@EqualsAndHashCode\n@Getter\n@NoArgsConstructor\npublic class Trigger extends AbstractTrigger implements PollingTriggerInterface, TriggerOutput<Trigger.Random> {\n    @Builder.Default\n    private final Duration interval = Duration.ofSeconds(60);\n\n    protected Double min = 0.5;\n\n    @Override\n    public Optional<Execution> evaluate(RunContext runContext, TriggerContext context) throws Exception {\n        Logger logger = runContext.logger();\n        double random = Math.random();\n\n        if (random < this.min) {\n            return Optional.empty();\n        }\n\n        Execution execution = Execution.builder()\n            .id(IdUtils.create())\n            .namespace(context.getNamespace())\n            .flowId(context.getFlowId())\n            .flowRevision(context.getFlowRevision())\n            .state(new State())\n            .trigger(ExecutionTrigger.of(\n                this,\n                Trigger.Random.builder().random(random).build()\n            ))\n            .build();\n\n        return Optional.of(execution);\n    }\n\n    @Builder\n    @Getter\n    public class Random implements io.kestra.core.models.tasks.Output {\n        private Double random;\n    }\n}\n\n\nYou just need to extend PollingTriggerInterface and implement the Optional<Execution> evaluate(RunContext runContext, TriggerContext context) method.\n\nYou can have any properties you want like for any task (validation, documentation, ...) is working the same way.\n\nThe test will receive these arguments :\n\n * RunContext runContext: a RunContext in order to render your properties.\n * TriggerContext context: to have the context of this call (flow, execution, trigger, date, ...)\n\nIn this method, you add any logic you want, connect to a database, connect to remote file systems.\nYou don't have to take care of resource, Kestra will run this method in this own thread.\n\nThis method must simply return an Optional<Execution> with :\n\n * Optional.empty(): if the condition is not validated\n * Optional.of(execution): with the execution created if the condition is validated.\n\nYou have to provide a TriggerOutput<T> for any output needed (result of query, result of file system listing, ...) that will be available for the flow tasks withing the {{ trigger.* }} variables.\n\nWARNING\n\nTake care that the trigger must free the resource for the next evaluation, for each interval, this method will be called, and if the condition are meet, an execution will be created.\n\nTo avoid this, move the file, remove the record from the database, but take an action to avoid an infinite triggering.",normalizedContent:"# develop your trigger\n\nhere is the instruction to develop a trigger.\n\nhere is a simple trigger example that will trigger an execution randomly:\n\n@superbuilder\n@tostring\n@equalsandhashcode\n@getter\n@noargsconstructor\npublic class trigger extends abstracttrigger implements pollingtriggerinterface, triggeroutput<trigger.random> {\n    @builder.default\n    private final duration interval = duration.ofseconds(60);\n\n    protected double min = 0.5;\n\n    @override\n    public optional<execution> evaluate(runcontext runcontext, triggercontext context) throws exception {\n        logger logger = runcontext.logger();\n        double random = math.random();\n\n        if (random < this.min) {\n            return optional.empty();\n        }\n\n        execution execution = execution.builder()\n            .id(idutils.create())\n            .namespace(context.getnamespace())\n            .flowid(context.getflowid())\n            .flowrevision(context.getflowrevision())\n            .state(new state())\n            .trigger(executiontrigger.of(\n                this,\n                trigger.random.builder().random(random).build()\n            ))\n            .build();\n\n        return optional.of(execution);\n    }\n\n    @builder\n    @getter\n    public class random implements io.kestra.core.models.tasks.output {\n        private double random;\n    }\n}\n\n\nyou just need to extend pollingtriggerinterface and implement the optional<execution> evaluate(runcontext runcontext, triggercontext context) method.\n\nyou can have any properties you want like for any task (validation, documentation, ...) is working the same way.\n\nthe test will receive these arguments :\n\n * runcontext runcontext: a runcontext in order to render your properties.\n * triggercontext context: to have the context of this call (flow, execution, trigger, date, ...)\n\nin this method, you add any logic you want, connect to a database, connect to remote file systems.\nyou don't have to take care of resource, kestra will run this method in this own thread.\n\nthis method must simply return an optional<execution> with :\n\n * optional.empty(): if the condition is not validated\n * optional.of(execution): with the execution created if the condition is validated.\n\nyou have to provide a triggeroutput<t> for any output needed (result of query, result of file system listing, ...) that will be available for the flow tasks withing the {{ trigger.* }} variables.\n\nwarning\n\ntake care that the trigger must free the resource for the next evaluation, for each interval, this method will be called, and if the condition are meet, an execution will be created.\n\nto avoid this, move the file, remove the record from the database, but take an action to avoid an infinite triggering.",charsets:{}},{title:"Add unit tests",frontmatter:{order:6,meta:[{property:"article:modified_time",content:"2021-03-26T21:33:01.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Add unit tests"},{property:"og:description",content:"Add unit tests | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/plugin-developer-guide/unit-test/"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Add unit tests"},{name:"twitter:description",content:"Add unit tests | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/plugin-developer-guide/unit-test/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/plugin-developer-guide/unit-test/",relativePath:"docs/plugin-developer-guide/unit-test/README.md",key:"v-528bedd8",path:"/docs/plugin-developer-guide/unit-test/",headers:[{level:2,title:"Unit test a RunnableTask",slug:"unit-test-a-runnabletask",normalizedTitle:"unit test a runnabletask",charIndex:186},{level:2,title:"Unit test with a full flow",slug:"unit-test-with-a-full-flow",normalizedTitle:"unit test with a full flow",charIndex:1014}],lastUpdated:"3/26/2021, 9:33:01 PM",lastUpdatedTimestamp:1616794381e3,headersStr:"Unit test a RunnableTask Unit test with a full flow",content:'# Add unit tests\n\nKestra is build from the inception with unit test in mind. A task must be unit testable to avoid regression and bug. So we provide 2 ways to unit test your tasks :\n\n\n# Unit test a RunnableTask\n\nThis is the most common way to test a RunnableTask. You simply create your RunnableTask, and test output or Exception. This will cover most of the case.\nHere is an example :\n\n\n@MicronautTest\nclass ExampleTest {\n    @Inject\n    private RunContextFactory runContextFactory;\n\n    @Test\n    void run() throws Exception {\n        RunContext runContext = runContextFactory.of(ImmutableMap.of("variable", "John Doe"));\n\n        Example task = Example.builder()\n            .format("Hello {{ variable }}")\n            .build();\n\n        Example.Output runOutput = task.run(runContext);\n\n        assertThat(runOutput.getChild().getValue(), is(StringUtils.reverse("Hello John Doe")));\n    }\n}\n\n\nAs simple as any java unit test, fell free to used any dependencies, test method, started docker containers, ...\n\n\n# Unit test with a full flow\n\nMaybe you want to add some unit test with a full flow, in some rare case, it can be necessary (mostly for FlowableTask).\n\nHere is an example:\n\n@MicronautTest\nclass ExampleRunnerTest {\n    @Inject\n    protected MemoryRunner runner;\n\n    @Inject\n    protected RunnerUtils runnerUtils;\n\n    @Inject\n    protected LocalFlowRepositoryLoader repositoryLoader;\n\n    @BeforeEach\n    private void init() throws IOException, URISyntaxException {\n        repositoryLoader.load(Objects.requireNonNull(ExampleRunnerTest.class.getClassLoader().getResource("flows")));\n        this.runner.run();\n    }\n\n    @SuppressWarnings("unchecked")\n    @Test\n    void flow() throws TimeoutException {\n        Execution execution = runnerUtils.runOne("io.kestra.templates", "example");\n\n        assertThat(execution.getTaskRunList(), hasSize(3));\n        assertThat(((Map<String, Object>)execution.getTaskRunList().get(2).getOutputs().get("child")).get("value"), is("task-id"));\n    }\n}\n\n\nwith this, you will :\n\n * Inject all dependencies with @MicronautTest\n * on init(), load all the flow on the src/resources/flow directory.\n * run an full execution with Execution execution = runnerUtils.runOne("io.kestra.templates", "example");\n\nWith this execution, you can look at all the properties you want to control (status, taskRunList number, outputs, ...)\n\nTo make it work, you need to have an application.yml files with this minimum configuration :\n\nkestra:\n  repository:\n    type: memory\n  queue:\n    type: memory\n  storage:\n    type: local\n    local:\n      base-path: /tmp/unittest\n\n\nAnd these dependencies on your build.gradle :\n\n    testImplementation group: "io.kestra", name: "core", version: kestraVersion\n    testImplementation group: "io.kestra", name: "repository-memory", version: kestraVersion\n    testImplementation group: "io.kestra", name: "runner-memory", version: kestraVersion\n    testImplementation group: "io.kestra", name: "storage-local", version: kestraVersion\n\n\nthis will enabled the in memory runner to work and to run your flow without any others dependencies (kafka, ...)',normalizedContent:'# add unit tests\n\nkestra is build from the inception with unit test in mind. a task must be unit testable to avoid regression and bug. so we provide 2 ways to unit test your tasks :\n\n\n# unit test a runnabletask\n\nthis is the most common way to test a runnabletask. you simply create your runnabletask, and test output or exception. this will cover most of the case.\nhere is an example :\n\n\n@micronauttest\nclass exampletest {\n    @inject\n    private runcontextfactory runcontextfactory;\n\n    @test\n    void run() throws exception {\n        runcontext runcontext = runcontextfactory.of(immutablemap.of("variable", "john doe"));\n\n        example task = example.builder()\n            .format("hello {{ variable }}")\n            .build();\n\n        example.output runoutput = task.run(runcontext);\n\n        assertthat(runoutput.getchild().getvalue(), is(stringutils.reverse("hello john doe")));\n    }\n}\n\n\nas simple as any java unit test, fell free to used any dependencies, test method, started docker containers, ...\n\n\n# unit test with a full flow\n\nmaybe you want to add some unit test with a full flow, in some rare case, it can be necessary (mostly for flowabletask).\n\nhere is an example:\n\n@micronauttest\nclass examplerunnertest {\n    @inject\n    protected memoryrunner runner;\n\n    @inject\n    protected runnerutils runnerutils;\n\n    @inject\n    protected localflowrepositoryloader repositoryloader;\n\n    @beforeeach\n    private void init() throws ioexception, urisyntaxexception {\n        repositoryloader.load(objects.requirenonnull(examplerunnertest.class.getclassloader().getresource("flows")));\n        this.runner.run();\n    }\n\n    @suppresswarnings("unchecked")\n    @test\n    void flow() throws timeoutexception {\n        execution execution = runnerutils.runone("io.kestra.templates", "example");\n\n        assertthat(execution.gettaskrunlist(), hassize(3));\n        assertthat(((map<string, object>)execution.gettaskrunlist().get(2).getoutputs().get("child")).get("value"), is("task-id"));\n    }\n}\n\n\nwith this, you will :\n\n * inject all dependencies with @micronauttest\n * on init(), load all the flow on the src/resources/flow directory.\n * run an full execution with execution execution = runnerutils.runone("io.kestra.templates", "example");\n\nwith this execution, you can look at all the properties you want to control (status, taskrunlist number, outputs, ...)\n\nto make it work, you need to have an application.yml files with this minimum configuration :\n\nkestra:\n  repository:\n    type: memory\n  queue:\n    type: memory\n  storage:\n    type: local\n    local:\n      base-path: /tmp/unittest\n\n\nand these dependencies on your build.gradle :\n\n    testimplementation group: "io.kestra", name: "core", version: kestraversion\n    testimplementation group: "io.kestra", name: "repository-memory", version: kestraversion\n    testimplementation group: "io.kestra", name: "runner-memory", version: kestraversion\n    testimplementation group: "io.kestra", name: "storage-local", version: kestraversion\n\n\nthis will enabled the in memory runner to work and to run your flow without any others dependencies (kafka, ...)',charsets:{}},{title:"Terraform Integration",frontmatter:{order:7,meta:[{property:"article:modified_time",content:"2021-04-16T06:33:11.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Terraform Integration"},{property:"og:description",content:"Terraform Integration | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/terraform/"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Terraform Integration"},{name:"twitter:description",content:"Terraform Integration | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/terraform/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/terraform/",relativePath:"docs/terraform/README.md",key:"v-219eff68",path:"/docs/terraform/",lastUpdated:"4/16/2021, 6:33:11 AM",lastUpdatedTimestamp:1618554791e3,headersStr:null,content:"# Terraform Integration\n\nWe provide a terraform provider available on Terraform registry in order to facilitate all CI/CD management for your Kestra ressource.\n\nFind below all the terraform resources:\n\n * Resources:\n   \n * Data Sources:\n   ",normalizedContent:"# terraform integration\n\nwe provide a terraform provider available on terraform registry in order to facilitate all ci/cd management for your kestra ressource.\n\nfind below all the terraform resources:\n\n * resources:\n   \n * data sources:\n   ",charsets:{}},{title:"kestra_binding",frontmatter:{title:"kestra_binding",editLink:!1,description:"Use this data source to access information about an existing Kestra binding",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"kestra_binding"},{property:"og:description",content:"Use this data source to access information about an existing Kestra binding | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/terraform/data-sources/binding.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"kestra_binding"},{name:"twitter:description",content:"Use this data source to access information about an existing Kestra binding | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/terraform/data-sources/binding.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/terraform/data-sources/binding.html",relativePath:"docs/terraform/data-sources/binding.md",key:"v-7f4ed1e3",path:"/docs/terraform/data-sources/binding.html",headers:[{level:2,title:"Example Usage",slug:"example-usage",normalizedTitle:"example usage",charIndex:112},{level:2,title:"Schema",slug:"schema",normalizedTitle:"schema",charIndex:208},{level:3,title:"Required",slug:"required",normalizedTitle:"required",charIndex:219},{level:3,title:"Optional",slug:"optional",normalizedTitle:"optional",charIndex:272},{level:3,title:"Read-Only",slug:"read-only",normalizedTitle:"read-only",charIndex:326}],headersStr:"Example Usage Schema Required Optional Read-Only",content:'# kestra_binding (Data Source)\n\nUse this data source to access information about an existing Kestra binding\n\n\n# Example Usage\n\ndata "kestra_binding" "example" {\n  binding_id = "65DsawPfiJPkTkZJIPX6jQ"\n}\n\n\n\n# Schema\n\n\n# Required\n\n * binding_id (String) The binding id.\n\n\n# Optional\n\n * id (String) The ID of this resource.\n\n\n# Read-Only\n\n * external_id (String) The binding external id.\n * namespace (String) The linked namespace.\n * role_id (String) The role id.\n * type (String) The binding type.',normalizedContent:'# kestra_binding (data source)\n\nuse this data source to access information about an existing kestra binding\n\n\n# example usage\n\ndata "kestra_binding" "example" {\n  binding_id = "65dsawpfijpktkzjipx6jq"\n}\n\n\n\n# schema\n\n\n# required\n\n * binding_id (string) the binding id.\n\n\n# optional\n\n * id (string) the id of this resource.\n\n\n# read-only\n\n * external_id (string) the binding external id.\n * namespace (string) the linked namespace.\n * role_id (string) the role id.\n * type (string) the binding type.',charsets:{}},{title:"kestra_group",frontmatter:{title:"kestra_group",editLink:!1,description:"Use this data source to access information about an existing Kestra Group.",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"kestra_group"},{property:"og:description",content:"Use this data source to access information about an existing Kestra Group. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/terraform/data-sources/group.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"kestra_group"},{name:"twitter:description",content:"Use this data source to access information about an existing Kestra Group. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/terraform/data-sources/group.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/terraform/data-sources/group.html",relativePath:"docs/terraform/data-sources/group.md",key:"v-3711fea3",path:"/docs/terraform/data-sources/group.html",headers:[{level:2,title:"Example Usage",slug:"example-usage",normalizedTitle:"example usage",charIndex:109},{level:2,title:"Schema",slug:"schema",normalizedTitle:"schema",charIndex:201},{level:3,title:"Required",slug:"required",normalizedTitle:"required",charIndex:212},{level:3,title:"Optional",slug:"optional",normalizedTitle:"optional",charIndex:258},{level:3,title:"Read-Only",slug:"read-only",normalizedTitle:"read-only",charIndex:356}],headersStr:"Example Usage Schema Required Optional Read-Only",content:'# kestra_group (Data Source)\n\nUse this data source to access information about an existing Kestra Group.\n\n\n# Example Usage\n\ndata "kestra_group" "example" {\n  group_id = "68xAawPfiJPkTkZJIPX6jQ"\n}\n\n\n\n# Schema\n\n\n# Required\n\n * group_id (String) The group.\n\n\n# Optional\n\n * id (String) The ID of this resource.\n * namespace (String) The linked namespace.\n\n\n# Read-Only\n\n * description (String) The group description.\n * name (String) The group name.',normalizedContent:'# kestra_group (data source)\n\nuse this data source to access information about an existing kestra group.\n\n\n# example usage\n\ndata "kestra_group" "example" {\n  group_id = "68xaawpfijpktkzjipx6jq"\n}\n\n\n\n# schema\n\n\n# required\n\n * group_id (string) the group.\n\n\n# optional\n\n * id (string) the id of this resource.\n * namespace (string) the linked namespace.\n\n\n# read-only\n\n * description (string) the group description.\n * name (string) the group name.',charsets:{}},{title:"kestra_flow",frontmatter:{title:"kestra_flow",editLink:!1,description:"Use this data source to access information about an existing Kestra Flow",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"kestra_flow"},{property:"og:description",content:"Use this data source to access information about an existing Kestra Flow | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/terraform/data-sources/flow.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"kestra_flow"},{name:"twitter:description",content:"Use this data source to access information about an existing Kestra Flow | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/terraform/data-sources/flow.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/terraform/data-sources/flow.html",relativePath:"docs/terraform/data-sources/flow.md",key:"v-66dc4b5d",path:"/docs/terraform/data-sources/flow.html",headers:[{level:2,title:"Example Usage",slug:"example-usage",normalizedTitle:"example usage",charIndex:106},{level:2,title:"Schema",slug:"schema",normalizedTitle:"schema",charIndex:221},{level:3,title:"Required",slug:"required",normalizedTitle:"required",charIndex:232},{level:3,title:"Optional",slug:"optional",normalizedTitle:"optional",charIndex:316},{level:3,title:"Read-Only",slug:"read-only",normalizedTitle:"read-only",charIndex:370}],headersStr:"Example Usage Schema Required Optional Read-Only",content:'# kestra_flow (Data Source)\n\nUse this data source to access information about an existing Kestra Flow\n\n\n# Example Usage\n\ndata "kestra_flow" "example" {\n  namespace = "io.kestra.mynamespace"\n  id        = "my-flow"\n}\n\n\n\n# Schema\n\n\n# Required\n\n * flow_id (String) The flow id.\n * namespace (String) The namespace.\n\n\n# Optional\n\n * id (String) The ID of this resource.\n\n\n# Read-Only\n\n * content (String) The flow content as yaml.\n * revision (Number) The flow revision.',normalizedContent:'# kestra_flow (data source)\n\nuse this data source to access information about an existing kestra flow\n\n\n# example usage\n\ndata "kestra_flow" "example" {\n  namespace = "io.kestra.mynamespace"\n  id        = "my-flow"\n}\n\n\n\n# schema\n\n\n# required\n\n * flow_id (string) the flow id.\n * namespace (string) the namespace.\n\n\n# optional\n\n * id (string) the id of this resource.\n\n\n# read-only\n\n * content (string) the flow content as yaml.\n * revision (number) the flow revision.',charsets:{}},{title:"kestra_namespace",frontmatter:{title:"kestra_namespace",editLink:!1,description:"Use this data source to access information about an existing Kestra Namespace.",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"kestra_namespace"},{property:"og:description",content:"Use this data source to access information about an existing Kestra Namespace. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/terraform/data-sources/namespace.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"kestra_namespace"},{name:"twitter:description",content:"Use this data source to access information about an existing Kestra Namespace. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/terraform/data-sources/namespace.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/terraform/data-sources/namespace.html",relativePath:"docs/terraform/data-sources/namespace.md",key:"v-6a782823",path:"/docs/terraform/data-sources/namespace.html",headers:[{level:2,title:"Example Usage",slug:"example-usage",normalizedTitle:"example usage",charIndex:117},{level:2,title:"Schema",slug:"schema",normalizedTitle:"schema",charIndex:216},{level:3,title:"Required",slug:"required",normalizedTitle:"required",charIndex:227},{level:3,title:"Optional",slug:"optional",normalizedTitle:"optional",charIndex:281},{level:3,title:"Read-Only",slug:"read-only",normalizedTitle:"read-only",charIndex:335}],headersStr:"Example Usage Schema Required Optional Read-Only",content:'# kestra_namespace (Data Source)\n\nUse this data source to access information about an existing Kestra Namespace.\n\n\n# Example Usage\n\ndata "kestra_namespace" "example" {\n  namespace_id = "io.kestra.mynamespace"\n}\n\n\n\n# Schema\n\n\n# Required\n\n * namespace_id (String) The namespace.\n\n\n# Optional\n\n * id (String) The ID of this resource.\n\n\n# Read-Only\n\n * description (String) The namespace friendly description.\n * task_defaults (String) The namespace task defaults.\n * variables (String) The namespace variables.',normalizedContent:'# kestra_namespace (data source)\n\nuse this data source to access information about an existing kestra namespace.\n\n\n# example usage\n\ndata "kestra_namespace" "example" {\n  namespace_id = "io.kestra.mynamespace"\n}\n\n\n\n# schema\n\n\n# required\n\n * namespace_id (string) the namespace.\n\n\n# optional\n\n * id (string) the id of this resource.\n\n\n# read-only\n\n * description (string) the namespace friendly description.\n * task_defaults (string) the namespace task defaults.\n * variables (string) the namespace variables.',charsets:{}},{title:"kestra_role",frontmatter:{title:"kestra_role",editLink:!1,description:"Use this data source to access information about an existing Kestra Role.",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"kestra_role"},{property:"og:description",content:"Use this data source to access information about an existing Kestra Role. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/terraform/data-sources/role.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"kestra_role"},{name:"twitter:description",content:"Use this data source to access information about an existing Kestra Role. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/terraform/data-sources/role.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/terraform/data-sources/role.html",relativePath:"docs/terraform/data-sources/role.md",key:"v-27b76acd",path:"/docs/terraform/data-sources/role.html",headers:[{level:2,title:"Example Usage",slug:"example-usage",normalizedTitle:"example usage",charIndex:107},{level:2,title:"Schema",slug:"schema",normalizedTitle:"schema",charIndex:197},{level:3,title:"Required",slug:"required",normalizedTitle:"required",charIndex:208},{level:3,title:"Optional",slug:"optional",normalizedTitle:"optional",charIndex:252},{level:3,title:"Read-Only",slug:"read-only",normalizedTitle:"read-only",charIndex:350},{level:3,title:"Nested Schema for permissions",slug:"nested-schema-for-permissions",normalizedTitle:"nested schema for permissions",charIndex:528}],headersStr:"Example Usage Schema Required Optional Read-Only Nested Schema for permissions",content:'# kestra_role (Data Source)\n\nUse this data source to access information about an existing Kestra Role.\n\n\n# Example Usage\n\ndata "kestra_role" "example" {\n  role_id = "3kcvnr27ZcdHXD2AUvIe7z"\n}\n\n\n\n# Schema\n\n\n# Required\n\n * role_id (String) The role.\n\n\n# Optional\n\n * id (String) The ID of this resource.\n * namespace (String) The linked namespace.\n\n\n# Read-Only\n\n * description (String) The role description.\n * name (String) The role name.\n * permissions (Set of Object) The role permissions. (see below for nested schema)\n\n\n\n\n# Nested Schema for permissions\n\nRead-Only:\n\n * permissions (List of String)\n * type (String)',normalizedContent:'# kestra_role (data source)\n\nuse this data source to access information about an existing kestra role.\n\n\n# example usage\n\ndata "kestra_role" "example" {\n  role_id = "3kcvnr27zcdhxd2auvie7z"\n}\n\n\n\n# schema\n\n\n# required\n\n * role_id (string) the role.\n\n\n# optional\n\n * id (string) the id of this resource.\n * namespace (string) the linked namespace.\n\n\n# read-only\n\n * description (string) the role description.\n * name (string) the role name.\n * permissions (set of object) the role permissions. (see below for nested schema)\n\n\n\n\n# nested schema for permissions\n\nread-only:\n\n * permissions (list of string)\n * type (string)',charsets:{}},{title:"kestra_template",frontmatter:{title:"kestra_template",editLink:!1,description:"Use this data source to access information about an existing Kestra Template",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"kestra_template"},{property:"og:description",content:"Use this data source to access information about an existing Kestra Template | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/terraform/data-sources/template.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"kestra_template"},{name:"twitter:description",content:"Use this data source to access information about an existing Kestra Template | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/terraform/data-sources/template.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/terraform/data-sources/template.html",relativePath:"docs/terraform/data-sources/template.md",key:"v-2725e445",path:"/docs/terraform/data-sources/template.html",headers:[{level:2,title:"Example Usage",slug:"example-usage",normalizedTitle:"example usage",charIndex:114},{level:2,title:"Schema",slug:"schema",normalizedTitle:"schema",charIndex:239},{level:3,title:"Required",slug:"required",normalizedTitle:"required",charIndex:250},{level:3,title:"Optional",slug:"optional",normalizedTitle:"optional",charIndex:342},{level:3,title:"Read-Only",slug:"read-only",normalizedTitle:"read-only",charIndex:396}],headersStr:"Example Usage Schema Required Optional Read-Only",content:'# kestra_template (Data Source)\n\nUse this data source to access information about an existing Kestra Template\n\n\n# Example Usage\n\ndata "kestra_template" "example" {\n  namespace_ = "io.kestra.mynamespace"\n  id         = "my-template"\n}\n\n\n\n# Schema\n\n\n# Required\n\n * namespace (String) The namespace.\n * template_id (String) The template id.\n\n\n# Optional\n\n * id (String) The ID of this resource.\n\n\n# Read-Only\n\n * content (String) The template content as yaml.',normalizedContent:'# kestra_template (data source)\n\nuse this data source to access information about an existing kestra template\n\n\n# example usage\n\ndata "kestra_template" "example" {\n  namespace_ = "io.kestra.mynamespace"\n  id         = "my-template"\n}\n\n\n\n# schema\n\n\n# required\n\n * namespace (string) the namespace.\n * template_id (string) the template id.\n\n\n# optional\n\n * id (string) the id of this resource.\n\n\n# read-only\n\n * content (string) the template content as yaml.',charsets:{}},{title:"kestra_user",frontmatter:{title:"kestra_user",editLink:!1,description:"Use this data source to access information about an existing Kestra User.",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"kestra_user"},{property:"og:description",content:"Use this data source to access information about an existing Kestra User. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/terraform/data-sources/user.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"kestra_user"},{name:"twitter:description",content:"Use this data source to access information about an existing Kestra User. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/terraform/data-sources/user.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/terraform/data-sources/user.html",relativePath:"docs/terraform/data-sources/user.md",key:"v-1eda64e3",path:"/docs/terraform/data-sources/user.html",headers:[{level:2,title:"Example Usage",slug:"example-usage",normalizedTitle:"example usage",charIndex:107},{level:2,title:"Schema",slug:"schema",normalizedTitle:"schema",charIndex:197},{level:3,title:"Required",slug:"required",normalizedTitle:"required",charIndex:208},{level:3,title:"Optional",slug:"optional",normalizedTitle:"optional",charIndex:252},{level:3,title:"Read-Only",slug:"read-only",normalizedTitle:"read-only",charIndex:350}],headersStr:"Example Usage Schema Required Optional Read-Only",content:'# kestra_user (Data Source)\n\nUse this data source to access information about an existing Kestra User.\n\n\n# Example Usage\n\ndata "kestra_user" "example" {\n  user_id = "68xAawPfiJPkTkZJIPX6jQ"\n}\n\n\n\n# Schema\n\n\n# Required\n\n * user_id (String) The user.\n\n\n# Optional\n\n * id (String) The ID of this resource.\n * namespace (String) The linked namespace.\n\n\n# Read-Only\n\n * description (String) The user description.\n * email (String) The user email.\n * first_name (String) The user first name.\n * groups (List of String) The user global roles in yaml string.\n * last_name (String) The user last name.\n * username (String) The user name.',normalizedContent:'# kestra_user (data source)\n\nuse this data source to access information about an existing kestra user.\n\n\n# example usage\n\ndata "kestra_user" "example" {\n  user_id = "68xaawpfijpktkzjipx6jq"\n}\n\n\n\n# schema\n\n\n# required\n\n * user_id (string) the user.\n\n\n# optional\n\n * id (string) the id of this resource.\n * namespace (string) the linked namespace.\n\n\n# read-only\n\n * description (string) the user description.\n * email (string) the user email.\n * first_name (string) the user first name.\n * groups (list of string) the user global roles in yaml string.\n * last_name (string) the user last name.\n * username (string) the user name.',charsets:{}},{title:"Provider configurations",frontmatter:{title:"Provider configurations",editLink:!1,description:"",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Provider configurations"},{property:"og:description",content:" | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/terraform/guides/configurations.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Provider configurations"},{name:"twitter:description",content:" | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/terraform/guides/configurations.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/terraform/guides/configurations.html",relativePath:"docs/terraform/guides/configurations.md",key:"v-19d6ff43",path:"/docs/terraform/guides/configurations.html",headers:[{level:2,title:"Example Usage",slug:"example-usage",normalizedTitle:"example usage",charIndex:30},{level:2,title:"Schema",slug:"schema",normalizedTitle:"schema",charIndex:443},{level:3,title:"Optional",slug:"optional",normalizedTitle:"optional",charIndex:454}],headersStr:"Example Usage Schema Optional",content:'# Provider configurations\n\n\n# Example Usage\n\nprovider "kestra" {\n  # mandatory, the url to kestra\n  url = "http://localhost:8080"\n\n  # optional basic auth username\n  username = "john"\n\n  # optional basic auth password\n  password = "my-password"\n\n  # optional jwt token\n  jwt = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6Iktlc3RyYS5pbyIsImlhdCI6MTUxNjIzOTAyMn0.hm2VKztDJP7CUsI69Th6Y5NLEQrXx7OErLXay55GD5U"\n}\n\n\n\n# Schema\n\n\n# Optional\n\n * jwt (String, Sensitive) Kestra JWT token\n * password (String, Sensitive) Kestra BasicAuth password\n * url (String) Kestra full endpoint url without trailing slash\n * username (String) Kestra BasicAuth username',normalizedContent:'# provider configurations\n\n\n# example usage\n\nprovider "kestra" {\n  # mandatory, the url to kestra\n  url = "http://localhost:8080"\n\n  # optional basic auth username\n  username = "john"\n\n  # optional basic auth password\n  password = "my-password"\n\n  # optional jwt token\n  jwt = "eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9.eyjzdwiioiixmjm0nty3odkwiiwibmftzsi6iktlc3ryys5pbyisimlhdci6mtuxnjizotaymn0.hm2vkztdjp7cusi69th6y5nleqrxx7oerlxay55gd5u"\n}\n\n\n\n# schema\n\n\n# optional\n\n * jwt (string, sensitive) kestra jwt token\n * password (string, sensitive) kestra basicauth password\n * url (string) kestra full endpoint url without trailing slash\n * username (string) kestra basicauth username',charsets:{}},{title:"Working with Yaml",frontmatter:{title:"Working with Yaml",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Working with Yaml"},{property:"og:description",content:"Working with Yaml | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/terraform/guides/working-with-yaml.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Working with Yaml"},{name:"twitter:description",content:"Working with Yaml | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/terraform/guides/working-with-yaml.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/terraform/guides/working-with-yaml.html",relativePath:"docs/terraform/guides/working-with-yaml.md",key:"v-3a854743",path:"/docs/terraform/guides/working-with-yaml.html",headers:[{level:2,title:"Simple multiline string example",slug:"simple-multiline-string-example",normalizedTitle:"simple multiline string example",charIndex:784},{level:2,title:"External files",slug:"external-files",normalizedTitle:"external files",charIndex:1182},{level:2,title:"External files with template",slug:"external-files-with-template",normalizedTitle:"external files with template",charIndex:1643},{level:3,title:"Dealing with included yaml string",slug:"dealing-with-included-yaml-string",normalizedTitle:"dealing with included yaml string",charIndex:2106},{level:3,title:"Include full yaml part",slug:"include-full-yaml-part",normalizedTitle:"include full yaml part",charIndex:3195}],headersStr:"Simple multiline string example External files External files with template Dealing with included yaml string Include full yaml part",content:'# Working with Yaml\n\nMost of kestra ressource need to be described as Yaml like kestra_flow & kestra_template.\n\nWe have chosen to use a full yaml in terraform definition since the structure is recursive and dynamic, so it can\'t be described using terraform internal schema.\n\nDANGER\n\nTake care that this terraform provider is not aware of task & plugins. It can\'t know default values of properties, and most of convertion logic done by Kestra Server. If you see diff that is always present (even just after apply), your flow on terraform must have a minor difference return from the server. In this case, copy the source from Kestra UI in your terraform files to avoid these difference.\n\nThere is in terraform a lot of function that allow to work properly with this yaml content :\n\n\n# Simple multiline string example\n\nYou can use simple terraform multiline string with Heredoc String :\n\nresource "kestra_flow" "example" {\n  namespace = "io.kestra.mynamespace"\n  flow_id = "my-flow"\n  content = <<EOT\ninputs:\n  - name: my-value\n    type: STRING\n    required: true\n\ntasks:\n  - id: t2\n    type: io.kestra.core.tasks.debugs.Echo\n    format: first {{task.id}}\n    level: TRACE\nEOT\n}\n\n\n\n# External files\n\nBetter will be to use a file function. Just create a file .yml near your terraform .tf and include the whole file in your resource:\n\ninputs:\n  - name: my-value\n    type: STRING\n    required: true\n\ntasks:\n  - id: t2\n    type: io.kestra.core.tasks.debugs.Echo\n    format: first {{task.id}}\n    level: TRACE\nEOT\n\n\nresource "kestra_flow" "example" {\n  namespace = "io.kestra.mynamespace"\n  flow_id = "my-flow"\n  content = file("my-flow.yml")\n}\n\n\n\n# External files with template\n\nEven better will be to use a templatefile function that will allow more complex flows to be more readable. You can include some external external and this one can also include other file.\n\nDANGER\n\nTake care about the indent functon that need to fit your actual flow ident. Terraform don\'t know anything about your yaml (it\'s a simple string), so you need to handle properly the indent count by yourself using the indent function\n\n\n# Dealing with included yaml string\n\nImagine a flow that will query an external database. Embedding the full query can lead to very long flow definition. In the case you can use templatefile to allow inclusion of an external files from the yaml.\n\nCreate a sql file:\n\nSELECT * \nFROM ....\n\n\nCreate the yaml file for the flow:\n\ntasks:\n  - id: "query"\n    type: "io.kestra.plugin.jdbc.mysql.Query"\n    url: jdbc:postgresql://127.0.0.1:56982/\n    username: postgres\n    password: pg_passwd\n    sql: |\n      ${indent(6, file("my-query.sql"))}\n    fetchOne: true\n\n\nAnd finaly create the resource invoking the templatefile:\n\nresource "kestra_flow" "example" {\n  namespace = "io.kestra.mynamespace"\n  flow_id = "my-flow"\n  content = templatefile("my-flow.yaml", {})\n}\n\n\nThe tf files will required the yaml files that will require the sql files and the final flow will be:\n\ntasks:\n  - id: "query"\n    type: "io.kestra.plugin.jdbc.mysql.Query"\n    url: jdbc:postgresql://127.0.0.1:56982/\n    username: postgres\n    password: pg_passwd\n    sql: |\n      SELECT * \n      FROM ....\n    fetchOne: true\n\n\n\n# Include full yaml part\n\nBy the same way, you can also include a full yaml specs inside anothers one.\n\nCreate 2 yaml files:\n\nid: t1\ntype: io.kestra.core.tasks.debugs.Echo\nformat: first {{task.id}}\nlevel: TRACE\n\n\nid: t2\ntype: io.kestra.core.tasks.debugs.Echo\nformat: second {{task.id}}\nlevel: TRACE\n\n\nCreate the yaml file for the flow:\n\ntasks:\n  - ${indent(4, file("t1.yml"))}\n  - ${indent(4, file("t2.yml"))}\n',normalizedContent:'# working with yaml\n\nmost of kestra ressource need to be described as yaml like kestra_flow & kestra_template.\n\nwe have chosen to use a full yaml in terraform definition since the structure is recursive and dynamic, so it can\'t be described using terraform internal schema.\n\ndanger\n\ntake care that this terraform provider is not aware of task & plugins. it can\'t know default values of properties, and most of convertion logic done by kestra server. if you see diff that is always present (even just after apply), your flow on terraform must have a minor difference return from the server. in this case, copy the source from kestra ui in your terraform files to avoid these difference.\n\nthere is in terraform a lot of function that allow to work properly with this yaml content :\n\n\n# simple multiline string example\n\nyou can use simple terraform multiline string with heredoc string :\n\nresource "kestra_flow" "example" {\n  namespace = "io.kestra.mynamespace"\n  flow_id = "my-flow"\n  content = <<eot\ninputs:\n  - name: my-value\n    type: string\n    required: true\n\ntasks:\n  - id: t2\n    type: io.kestra.core.tasks.debugs.echo\n    format: first {{task.id}}\n    level: trace\neot\n}\n\n\n\n# external files\n\nbetter will be to use a file function. just create a file .yml near your terraform .tf and include the whole file in your resource:\n\ninputs:\n  - name: my-value\n    type: string\n    required: true\n\ntasks:\n  - id: t2\n    type: io.kestra.core.tasks.debugs.echo\n    format: first {{task.id}}\n    level: trace\neot\n\n\nresource "kestra_flow" "example" {\n  namespace = "io.kestra.mynamespace"\n  flow_id = "my-flow"\n  content = file("my-flow.yml")\n}\n\n\n\n# external files with template\n\neven better will be to use a templatefile function that will allow more complex flows to be more readable. you can include some external external and this one can also include other file.\n\ndanger\n\ntake care about the indent functon that need to fit your actual flow ident. terraform don\'t know anything about your yaml (it\'s a simple string), so you need to handle properly the indent count by yourself using the indent function\n\n\n# dealing with included yaml string\n\nimagine a flow that will query an external database. embedding the full query can lead to very long flow definition. in the case you can use templatefile to allow inclusion of an external files from the yaml.\n\ncreate a sql file:\n\nselect * \nfrom ....\n\n\ncreate the yaml file for the flow:\n\ntasks:\n  - id: "query"\n    type: "io.kestra.plugin.jdbc.mysql.query"\n    url: jdbc:postgresql://127.0.0.1:56982/\n    username: postgres\n    password: pg_passwd\n    sql: |\n      ${indent(6, file("my-query.sql"))}\n    fetchone: true\n\n\nand finaly create the resource invoking the templatefile:\n\nresource "kestra_flow" "example" {\n  namespace = "io.kestra.mynamespace"\n  flow_id = "my-flow"\n  content = templatefile("my-flow.yaml", {})\n}\n\n\nthe tf files will required the yaml files that will require the sql files and the final flow will be:\n\ntasks:\n  - id: "query"\n    type: "io.kestra.plugin.jdbc.mysql.query"\n    url: jdbc:postgresql://127.0.0.1:56982/\n    username: postgres\n    password: pg_passwd\n    sql: |\n      select * \n      from ....\n    fetchone: true\n\n\n\n# include full yaml part\n\nby the same way, you can also include a full yaml specs inside anothers one.\n\ncreate 2 yaml files:\n\nid: t1\ntype: io.kestra.core.tasks.debugs.echo\nformat: first {{task.id}}\nlevel: trace\n\n\nid: t2\ntype: io.kestra.core.tasks.debugs.echo\nformat: second {{task.id}}\nlevel: trace\n\n\ncreate the yaml file for the flow:\n\ntasks:\n  - ${indent(4, file("t1.yml"))}\n  - ${indent(4, file("t2.yml"))}\n',charsets:{cjk:!0}},{title:"kestra_binding",frontmatter:{title:"kestra_binding",editLink:!1,description:"Manages a Kestra Binding.",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"kestra_binding"},{property:"og:description",content:"Manages a Kestra Binding. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/terraform/resources/binding.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"kestra_binding"},{name:"twitter:description",content:"Manages a Kestra Binding. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/terraform/resources/binding.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/terraform/resources/binding.html",relativePath:"docs/terraform/resources/binding.md",key:"v-dc92b792",path:"/docs/terraform/resources/binding.html",headers:[{level:2,title:"Example Usage",slug:"example-usage",normalizedTitle:"example usage",charIndex:59},{level:2,title:"Schema",slug:"schema",normalizedTitle:"schema",charIndex:265},{level:3,title:"Required",slug:"required",normalizedTitle:"required",charIndex:276},{level:3,title:"Optional",slug:"optional",normalizedTitle:"optional",charIndex:407},{level:2,title:"Import",slug:"import",normalizedTitle:"import",charIndex:505}],headersStr:"Example Usage Schema Required Optional Import",content:'# kestra_binding (Resource)\n\nManages a Kestra Binding.\n\n\n# Example Usage\n\nresource "kestra_binding" "example" {\n  type        = "GROUP"\n  external_id = "68xAawPfiJPkTkZJIPX6jQ"\n  role_id     = "3kcvnr27ZcdHXD2AUvIe7z"\n  namespace   = "io.kestra.mynamespace"\n}\n\n\n\n# Schema\n\n\n# Required\n\n * external_id (String) The binding external id.\n * role_id (String) The role id.\n * type (String) The binding type.\n\n\n# Optional\n\n * id (String) The ID of this resource.\n * namespace (String) The linked namespace.\n\n\n# Import\n\nImport is supported using the following syntax:\n\nterraform import kestra_binding.example {{binding_id}}\n',normalizedContent:'# kestra_binding (resource)\n\nmanages a kestra binding.\n\n\n# example usage\n\nresource "kestra_binding" "example" {\n  type        = "group"\n  external_id = "68xaawpfijpktkzjipx6jq"\n  role_id     = "3kcvnr27zcdhxd2auvie7z"\n  namespace   = "io.kestra.mynamespace"\n}\n\n\n\n# schema\n\n\n# required\n\n * external_id (string) the binding external id.\n * role_id (string) the role id.\n * type (string) the binding type.\n\n\n# optional\n\n * id (string) the id of this resource.\n * namespace (string) the linked namespace.\n\n\n# import\n\nimport is supported using the following syntax:\n\nterraform import kestra_binding.example {{binding_id}}\n',charsets:{}},{title:"kestra_flow",frontmatter:{title:"kestra_flow",editLink:!1,description:"Manages a Kestra Flow.",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"kestra_flow"},{property:"og:description",content:"Manages a Kestra Flow. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/terraform/resources/flow.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"kestra_flow"},{name:"twitter:description",content:"Manages a Kestra Flow. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/terraform/resources/flow.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/terraform/resources/flow.html",relativePath:"docs/terraform/resources/flow.md",key:"v-738f2343",path:"/docs/terraform/resources/flow.html",headers:[{level:2,title:"Example Usage",slug:"example-usage",normalizedTitle:"example usage",charIndex:53},{level:2,title:"Schema",slug:"schema",normalizedTitle:"schema",charIndex:476},{level:3,title:"Required",slug:"required",normalizedTitle:"required",charIndex:487},{level:3,title:"Optional",slug:"optional",normalizedTitle:"optional",charIndex:634},{level:3,title:"Read-Only",slug:"read-only",normalizedTitle:"read-only",charIndex:688},{level:2,title:"Import",slug:"import",normalizedTitle:"import",charIndex:743}],headersStr:"Example Usage Schema Required Optional Read-Only Import",content:'# kestra_flow (Resource)\n\nManages a Kestra Flow.\n\n\n# Example Usage\n\nresource "kestra_flow" "example" {\n  namespace = "io.kestra.mynamespace"\n  flow_id   = "my-flow"\n  content   = <<EOT\ninputs:\n  - name: my-value\n    type: STRING\n\nvariables:\n  first: "1"\n\ntasks:\n  - id: t2\n    type: io.kestra.core.tasks.debugs.Echo\n    format: first {{task.id}}\n    level: TRACE\n\ntaskDefaults:\n  - type: io.kestra.core.tasks.debugs.Echo\n    values:\n      format: third {{flow.id}}\nEOT\n}\n\n\n\n# Schema\n\n\n# Required\n\n * content (String) The flow full content in yaml string.\n * flow_id (String) The flow id.\n * namespace (String) The flow namespace.\n\n\n# Optional\n\n * id (String) The ID of this resource.\n\n\n# Read-Only\n\n * revision (Number) The flow revision.\n\n\n# Import\n\nImport is supported using the following syntax:\n\nterraform import kestra_flow.example {{namespace}}/{{flow_id}}\n',normalizedContent:'# kestra_flow (resource)\n\nmanages a kestra flow.\n\n\n# example usage\n\nresource "kestra_flow" "example" {\n  namespace = "io.kestra.mynamespace"\n  flow_id   = "my-flow"\n  content   = <<eot\ninputs:\n  - name: my-value\n    type: string\n\nvariables:\n  first: "1"\n\ntasks:\n  - id: t2\n    type: io.kestra.core.tasks.debugs.echo\n    format: first {{task.id}}\n    level: trace\n\ntaskdefaults:\n  - type: io.kestra.core.tasks.debugs.echo\n    values:\n      format: third {{flow.id}}\neot\n}\n\n\n\n# schema\n\n\n# required\n\n * content (string) the flow full content in yaml string.\n * flow_id (string) the flow id.\n * namespace (string) the flow namespace.\n\n\n# optional\n\n * id (string) the id of this resource.\n\n\n# read-only\n\n * revision (number) the flow revision.\n\n\n# import\n\nimport is supported using the following syntax:\n\nterraform import kestra_flow.example {{namespace}}/{{flow_id}}\n',charsets:{}},{title:"kestra_group",frontmatter:{title:"kestra_group",editLink:!1,description:"Manages a Kestra Group.",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"kestra_group"},{property:"og:description",content:"Manages a Kestra Group. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/terraform/resources/group.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"kestra_group"},{name:"twitter:description",content:"Manages a Kestra Group. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/terraform/resources/group.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/terraform/resources/group.html",relativePath:"docs/terraform/resources/group.md",key:"v-7f0a4243",path:"/docs/terraform/resources/group.html",headers:[{level:2,title:"Example Usage",slug:"example-usage",normalizedTitle:"example usage",charIndex:55},{level:2,title:"Schema",slug:"schema",normalizedTitle:"schema",charIndex:224},{level:3,title:"Required",slug:"required",normalizedTitle:"required",charIndex:235},{level:3,title:"Optional",slug:"optional",normalizedTitle:"optional",charIndex:282},{level:2,title:"Import",slug:"import",normalizedTitle:"import",charIndex:427}],headersStr:"Example Usage Schema Required Optional Import",content:'# kestra_group (Resource)\n\nManages a Kestra Group.\n\n\n# Example Usage\n\nresource "kestra_group" "example" {\n  namespace   = "io.kestra.mynamespace"\n  name        = "Friendly name"\n  description = "Friendly description"\n}\n\n\n\n# Schema\n\n\n# Required\n\n * name (String) The group name.\n\n\n# Optional\n\n * description (String) The group description.\n * id (String) The ID of this resource.\n * namespace (String) The linked namespace.\n\n\n# Import\n\nImport is supported using the following syntax:\n\nterraform import kestra_group.example {{group_id}}\n',normalizedContent:'# kestra_group (resource)\n\nmanages a kestra group.\n\n\n# example usage\n\nresource "kestra_group" "example" {\n  namespace   = "io.kestra.mynamespace"\n  name        = "friendly name"\n  description = "friendly description"\n}\n\n\n\n# schema\n\n\n# required\n\n * name (string) the group name.\n\n\n# optional\n\n * description (string) the group description.\n * id (string) the id of this resource.\n * namespace (string) the linked namespace.\n\n\n# import\n\nimport is supported using the following syntax:\n\nterraform import kestra_group.example {{group_id}}\n',charsets:{}},{title:"kestra_namespace",frontmatter:{title:"kestra_namespace",editLink:!1,description:"Manages a Kestra Namespace.",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"kestra_namespace"},{property:"og:description",content:"Manages a Kestra Namespace. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/terraform/resources/namespace.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"kestra_namespace"},{name:"twitter:description",content:"Manages a Kestra Namespace. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/terraform/resources/namespace.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/terraform/resources/namespace.html",relativePath:"docs/terraform/resources/namespace.md",key:"v-43eb08ea",path:"/docs/terraform/resources/namespace.html",headers:[{level:2,title:"Example Usage",slug:"example-usage",normalizedTitle:"example usage",charIndex:63},{level:2,title:"Schema",slug:"schema",normalizedTitle:"schema",charIndex:448},{level:3,title:"Required",slug:"required",normalizedTitle:"required",charIndex:459},{level:3,title:"Optional",slug:"optional",normalizedTitle:"optional",charIndex:513},{level:2,title:"Import",slug:"import",normalizedTitle:"import",charIndex:759}],headersStr:"Example Usage Schema Required Optional Import",content:'# kestra_namespace (Resource)\n\nManages a Kestra Namespace.\n\n\n# Example Usage\n\nresource "kestra_namespace" "example" {\n  namespace_id  = "io.kestra.mynamespace"\n  description   = "Friendly description"\n  variables     = <<EOT\nk1: 1\nk2:\n    v1: 1\nEOT\n  task_defaults = <<EOT\n- type: io.kestra.core.tasks.debugs.Echo\n  values:\n    format: first {{flow.id}}\n- type: io.kestra.core.tasks.debugs.Return\n  values:\n    format: first {{flow.id}}\nEOT\n}\n\n\n\n# Schema\n\n\n# Required\n\n * namespace_id (String) The namespace.\n\n\n# Optional\n\n * description (String) The namespace friendly description.\n * id (String) The ID of this resource.\n * task_defaults (String) The namespace task defaults in yaml string.\n * variables (String) The namespace variables in yaml string.\n\n\n# Import\n\nImport is supported using the following syntax:\n\nterraform import kestra_namespace.example {{namespace}}\n',normalizedContent:'# kestra_namespace (resource)\n\nmanages a kestra namespace.\n\n\n# example usage\n\nresource "kestra_namespace" "example" {\n  namespace_id  = "io.kestra.mynamespace"\n  description   = "friendly description"\n  variables     = <<eot\nk1: 1\nk2:\n    v1: 1\neot\n  task_defaults = <<eot\n- type: io.kestra.core.tasks.debugs.echo\n  values:\n    format: first {{flow.id}}\n- type: io.kestra.core.tasks.debugs.return\n  values:\n    format: first {{flow.id}}\neot\n}\n\n\n\n# schema\n\n\n# required\n\n * namespace_id (string) the namespace.\n\n\n# optional\n\n * description (string) the namespace friendly description.\n * id (string) the id of this resource.\n * task_defaults (string) the namespace task defaults in yaml string.\n * variables (string) the namespace variables in yaml string.\n\n\n# import\n\nimport is supported using the following syntax:\n\nterraform import kestra_namespace.example {{namespace}}\n',charsets:{}},{title:"kestranamespacesecret",frontmatter:{title:"kestra_namespace_secret",editLink:!1,description:"Manages a Kestra Namespace Secret.",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"kestranamespacesecret"},{property:"og:description",content:"Manages a Kestra Namespace Secret. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/terraform/resources/namespace_secret.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"kestranamespacesecret"},{name:"twitter:description",content:"Manages a Kestra Namespace Secret. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/terraform/resources/namespace_secret.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/terraform/resources/namespace_secret.html",relativePath:"docs/terraform/resources/namespace_secret.md",key:"v-3d69dc03",path:"/docs/terraform/resources/namespace_secret.html",headers:[{level:2,title:"Example Usage",slug:"example-usage",normalizedTitle:"example usage",charIndex:77},{level:2,title:"Schema",slug:"schema",normalizedTitle:"schema",charIndex:247},{level:3,title:"Required",slug:"required",normalizedTitle:"required",charIndex:258},{level:3,title:"Optional",slug:"optional",normalizedTitle:"optional",charIndex:422}],headersStr:"Example Usage Schema Required Optional",content:'# kestra_namespace_secret (Resource)\n\nManages a Kestra Namespace Secret.\n\n\n# Example Usage\n\nresource "kestra_namespace_secret" "example" {\n  namespace    = "io.kestra.mynamespace"\n  secret_key   = "MY_KEY"\n  secret_value = "my-r34l-53cr37"\n}\n\n\n\n# Schema\n\n\n# Required\n\n * namespace (String) The namespace.\n * secret_key (String) The namespace secrey key.\n * secret_value (String, Sensitive) The namespace secrey value.\n\n\n# Optional\n\n * id (String) The ID of this resource.',normalizedContent:'# kestra_namespace_secret (resource)\n\nmanages a kestra namespace secret.\n\n\n# example usage\n\nresource "kestra_namespace_secret" "example" {\n  namespace    = "io.kestra.mynamespace"\n  secret_key   = "my_key"\n  secret_value = "my-r34l-53cr37"\n}\n\n\n\n# schema\n\n\n# required\n\n * namespace (string) the namespace.\n * secret_key (string) the namespace secrey key.\n * secret_value (string, sensitive) the namespace secrey value.\n\n\n# optional\n\n * id (string) the id of this resource.',charsets:{}},{title:"kestra_template",frontmatter:{title:"kestra_template",editLink:!1,description:"Manages a Kestra Template.",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"kestra_template"},{property:"og:description",content:"Manages a Kestra Template. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/terraform/resources/template.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"kestra_template"},{name:"twitter:description",content:"Manages a Kestra Template. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/terraform/resources/template.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/terraform/resources/template.html",relativePath:"docs/terraform/resources/template.md",key:"v-01ccd343",path:"/docs/terraform/resources/template.html",headers:[{level:2,title:"Example Usage",slug:"example-usage",normalizedTitle:"example usage",charIndex:61},{level:2,title:"Schema",slug:"schema",normalizedTitle:"schema",charIndex:326},{level:3,title:"Required",slug:"required",normalizedTitle:"required",charIndex:337},{level:3,title:"Optional",slug:"optional",normalizedTitle:"optional",charIndex:500},{level:2,title:"Import",slug:"import",normalizedTitle:"import",charIndex:554}],headersStr:"Example Usage Schema Required Optional Import",content:'# kestra_template (Resource)\n\nManages a Kestra Template.\n\n\n# Example Usage\n\nresource "kestra_template" "example" {\n  namespace   = "io.kestra.mynamespace"\n  template_id = "my-template"\n  content     = <<EOT\ntasks:\n  - id: t2\n    type: io.kestra.core.tasks.debugs.Echo\n    format: first {{task.id}}\n    level: TRACE\nEOT\n}\n\n\n\n# Schema\n\n\n# Required\n\n * content (String) The template full content in yaml string.\n * namespace (String) The template namespace.\n * template_id (String) The template id.\n\n\n# Optional\n\n * id (String) The ID of this resource.\n\n\n# Import\n\nImport is supported using the following syntax:\n\nterraform import kestra_template.example {{namespace}}/{{template_id}}\n',normalizedContent:'# kestra_template (resource)\n\nmanages a kestra template.\n\n\n# example usage\n\nresource "kestra_template" "example" {\n  namespace   = "io.kestra.mynamespace"\n  template_id = "my-template"\n  content     = <<eot\ntasks:\n  - id: t2\n    type: io.kestra.core.tasks.debugs.echo\n    format: first {{task.id}}\n    level: trace\neot\n}\n\n\n\n# schema\n\n\n# required\n\n * content (string) the template full content in yaml string.\n * namespace (string) the template namespace.\n * template_id (string) the template id.\n\n\n# optional\n\n * id (string) the id of this resource.\n\n\n# import\n\nimport is supported using the following syntax:\n\nterraform import kestra_template.example {{namespace}}/{{template_id}}\n',charsets:{}},{title:"kestra_role",frontmatter:{title:"kestra_role",editLink:!1,description:"Manages a Kestra Role.",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"kestra_role"},{property:"og:description",content:"Manages a Kestra Role. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/terraform/resources/role.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"kestra_role"},{name:"twitter:description",content:"Manages a Kestra Role. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/terraform/resources/role.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/terraform/resources/role.html",relativePath:"docs/terraform/resources/role.md",key:"v-8f9c8b7a",path:"/docs/terraform/resources/role.html",headers:[{level:2,title:"Example Usage",slug:"example-usage",normalizedTitle:"example usage",charIndex:53},{level:2,title:"Schema",slug:"schema",normalizedTitle:"schema",charIndex:391},{level:3,title:"Required",slug:"required",normalizedTitle:"required",charIndex:402},{level:3,title:"Optional",slug:"optional",normalizedTitle:"optional",charIndex:448},{level:3,title:"Nested Schema for permissions",slug:"nested-schema-for-permissions",normalizedTitle:"nested schema for permissions",charIndex:673},{level:2,title:"Import",slug:"import",normalizedTitle:"import",charIndex:823}],headersStr:"Example Usage Schema Required Optional Nested Schema for permissions Import",content:'# kestra_role (Resource)\n\nManages a Kestra Role.\n\n\n# Example Usage\n\nresource "kestra_role" "example" {\n  namespace   = "io.kestra.mynamespace"\n  name        = "Friendly name"\n  description = "Friendly description"\n\n  permissions {\n    type        = "FLOW"\n    permissions = ["READ", "UPDATE"]\n  }\n\n  permissions {\n    type        = "TEMPLATE"\n    permissions = ["READ", "UPDATE"]\n  }\n}\n\n\n\n# Schema\n\n\n# Required\n\n * name (String) The role name.\n\n\n# Optional\n\n * description (String) The role description.\n * id (String) The ID of this resource.\n * namespace (String) The linked namespace.\n * permissions (Block Set) The role permissions. (see below for nested schema)\n\n\n\n\n# Nested Schema for permissions\n\nRequired:\n\n * permissions (List of String) The permissions for this type.\n * type (String) The type of permission.\n\n\n# Import\n\nImport is supported using the following syntax:\n\nterraform import kestra_role.example {{role_id}}\n',normalizedContent:'# kestra_role (resource)\n\nmanages a kestra role.\n\n\n# example usage\n\nresource "kestra_role" "example" {\n  namespace   = "io.kestra.mynamespace"\n  name        = "friendly name"\n  description = "friendly description"\n\n  permissions {\n    type        = "flow"\n    permissions = ["read", "update"]\n  }\n\n  permissions {\n    type        = "template"\n    permissions = ["read", "update"]\n  }\n}\n\n\n\n# schema\n\n\n# required\n\n * name (string) the role name.\n\n\n# optional\n\n * description (string) the role description.\n * id (string) the id of this resource.\n * namespace (string) the linked namespace.\n * permissions (block set) the role permissions. (see below for nested schema)\n\n\n\n\n# nested schema for permissions\n\nrequired:\n\n * permissions (list of string) the permissions for this type.\n * type (string) the type of permission.\n\n\n# import\n\nimport is supported using the following syntax:\n\nterraform import kestra_role.example {{role_id}}\n',charsets:{}},{title:"kestra_user",frontmatter:{title:"kestra_user",editLink:!1,description:"Manages a Kestra User.",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"kestra_user"},{property:"og:description",content:"Manages a Kestra User. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/terraform/resources/user.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"kestra_user"},{name:"twitter:description",content:"Manages a Kestra User. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/terraform/resources/user.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/terraform/resources/user.html",relativePath:"docs/terraform/resources/user.md",key:"v-575b40ba",path:"/docs/terraform/resources/user.html",headers:[{level:2,title:"Example Usage",slug:"example-usage",normalizedTitle:"example usage",charIndex:53},{level:2,title:"Schema",slug:"schema",normalizedTitle:"schema",charIndex:338},{level:3,title:"Required",slug:"required",normalizedTitle:"required",charIndex:349},{level:3,title:"Optional",slug:"optional",normalizedTitle:"optional",charIndex:399},{level:2,title:"Import",slug:"import",normalizedTitle:"import",charIndex:710}],headersStr:"Example Usage Schema Required Optional Import",content:'# kestra_user (Resource)\n\nManages a Kestra User.\n\n\n# Example Usage\n\nresource "kestra_user" "example" {\n  username    = "my-username"\n  namespace   = "io.kestra.mynamespace"\n  description = "Friendly description"\n  first_name  = "John"\n  last_name   = "Doe"\n  email       = "john@doe.com"\n  groups      = ["4by6NvSLcPXFhCj8nwbZOM"]\n}\n\n\n\n# Schema\n\n\n# Required\n\n * username (String) The user name.\n\n\n# Optional\n\n * description (String) The user description.\n * email (String) The user email.\n * first_name (String) The user first name.\n * groups (List of String) The user groups id.\n * id (String) The ID of this resource.\n * last_name (String) The user last name.\n * namespace (String) The linked namespace.\n\n\n# Import\n\nImport is supported using the following syntax:\n\nterraform import kestra_user.example {{user_id}}\n',normalizedContent:'# kestra_user (resource)\n\nmanages a kestra user.\n\n\n# example usage\n\nresource "kestra_user" "example" {\n  username    = "my-username"\n  namespace   = "io.kestra.mynamespace"\n  description = "friendly description"\n  first_name  = "john"\n  last_name   = "doe"\n  email       = "john@doe.com"\n  groups      = ["4by6nvslcpxfhcj8nwbzom"]\n}\n\n\n\n# schema\n\n\n# required\n\n * username (string) the user name.\n\n\n# optional\n\n * description (string) the user description.\n * email (string) the user email.\n * first_name (string) the user first name.\n * groups (list of string) the user groups id.\n * id (string) the id of this resource.\n * last_name (string) the user last name.\n * namespace (string) the linked namespace.\n\n\n# import\n\nimport is supported using the following syntax:\n\nterraform import kestra_user.example {{user_id}}\n',charsets:{}},{title:"kestrauserpassword",frontmatter:{title:"kestra_user_password",editLink:!1,description:"Manages a Kestra User Basic Auth Password.",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"kestrauserpassword"},{property:"og:description",content:"Manages a Kestra User Basic Auth Password. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/terraform/resources/user_password.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"kestrauserpassword"},{name:"twitter:description",content:"Manages a Kestra User Basic Auth Password. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/terraform/resources/user_password.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/terraform/resources/user_password.html",relativePath:"docs/terraform/resources/user_password.md",key:"v-e2dba7ba",path:"/docs/terraform/resources/user_password.html",headers:[{level:2,title:"Example Usage",slug:"example-usage",normalizedTitle:"example usage",charIndex:82},{level:2,title:"Schema",slug:"schema",normalizedTitle:"schema",charIndex:220},{level:3,title:"Required",slug:"required",normalizedTitle:"required",charIndex:231},{level:3,title:"Optional",slug:"optional",normalizedTitle:"optional",charIndex:329}],headersStr:"Example Usage Schema Required Optional",content:'# kestra_user_password (Resource)\n\nManages a Kestra User Basic Auth Password.\n\n\n# Example Usage\n\nresource "kestra_user_password" "example" {\n  user_id  = "4by6NvSLcPXFhCj8nwbZOM"\n  password = "my-random-password"\n}\n\n\n\n# Schema\n\n\n# Required\n\n * password (String, Sensitive) The user password.\n * user_id (String) The user id.\n\n\n# Optional\n\n * id (String) The ID of this resource.',normalizedContent:'# kestra_user_password (resource)\n\nmanages a kestra user basic auth password.\n\n\n# example usage\n\nresource "kestra_user_password" "example" {\n  user_id  = "4by6nvslcpxfhcj8nwbzom"\n  password = "my-random-password"\n}\n\n\n\n# schema\n\n\n# required\n\n * password (string, sensitive) the user password.\n * user_id (string) the user id.\n\n\n# optional\n\n * id (string) the id of this resource.',charsets:{}},{title:"User Interface Guide",frontmatter:{order:8,meta:[{property:"article:modified_time",content:"2021-11-19T08:25:55.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"User Interface Guide"},{property:"og:description",content:"User Interface Guide | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/user-interface-guide/"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"User Interface Guide"},{name:"twitter:description",content:"User Interface Guide | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/user-interface-guide/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/user-interface-guide/",relativePath:"docs/user-interface-guide/README.md",key:"v-209f3a3c",path:"/docs/user-interface-guide/",lastUpdated:"11/19/2021, 8:25:55 AM",lastUpdatedTimestamp:1637310355e3,headersStr:null,content:"# User Interface Guide\n\nKestra comes with a web user interface. For now, here are some screenshots, Later a full user guide will here.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",normalizedContent:"# user interface guide\n\nkestra comes with a web user interface. for now, here are some screenshots, later a full user guide will here.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",charsets:{}},{title:"Features",frontmatter:{title:"Features",layout:"FeaturesFeatures",meta:[{property:"article:modified_time",content:"2021-12-13T17:52:53.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Features"},{property:"og:description",content:"Features | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/features/features.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Features"},{name:"twitter:description",content:"Features | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/features/features.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/features/features.html",relativePath:"features/features.md",key:"v-ce2ac07a",path:"/features/features.html",lastUpdated:"12/13/2021, 5:52:53 PM",lastUpdatedTimestamp:1639417973e3,headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"Usages",frontmatter:{title:"Usages",layout:"FeaturesUsage",meta:[{property:"article:modified_time",content:"2022-01-09T20:58:17.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Usages"},{property:"og:description",content:"Usages | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/features/usages.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Usages"},{name:"twitter:description",content:"Usages | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/features/usages.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/features/usages.html",relativePath:"features/usages.md",key:"v-4d379c23",path:"/features/usages.html",lastUpdated:"1/9/2022, 8:58:17 PM",lastUpdatedTimestamp:1641761897e3,headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"Plugins",frontmatter:{meta:[{property:"article:modified_time",content:"2020-11-09T20:39:04.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Plugins"},{property:"og:description",content:"Plugins | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Plugins"},{name:"twitter:description",content:"Plugins | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/",relativePath:"plugins/README.md",key:"v-8c82ad54",path:"/plugins/",lastUpdated:"11/9/2020, 8:39:04 PM",lastUpdatedTimestamp:1604954344e3,headersStr:null,content:"# Plugins\n\nThis section all the official plugins for Kestra that is maintained by core Kestra developpers.\n\nPlugins available are :",normalizedContent:"# plugins\n\nthis section all the official plugins for kestra that is maintained by core kestra developpers.\n\nplugins available are :",charsets:{}},{title:"Core",frontmatter:{title:"Core",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Core"},{property:"og:description",content:"Core | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/core/"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Core"},{name:"twitter:description",content:"Core | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/core/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/core/",relativePath:"plugins/core/README.md",key:"v-cb94d530",path:"/plugins/core/",headers:[{level:2,title:"Storages",slug:"storages",normalizedTitle:"storages",charIndex:11},{level:3,title:"Tasks",slug:"tasks",normalizedTitle:"tasks",charIndex:24},{level:2,title:"Common",slug:"common",normalizedTitle:"common",charIndex:81},{level:3,title:"Triggers",slug:"triggers",normalizedTitle:"triggers",charIndex:92},{level:3,title:"Conditions",slug:"conditions",normalizedTitle:"conditions",charIndex:137},{level:2,title:"Debugs",slug:"debugs",normalizedTitle:"debugs",charIndex:477},{level:3,title:"Tasks",slug:"tasks-2",normalizedTitle:"tasks",charIndex:24},{level:2,title:"Executions",slug:"executions",normalizedTitle:"executions",charIndex:517},{level:3,title:"Tasks",slug:"tasks-3",normalizedTitle:"tasks",charIndex:24},{level:2,title:"Flows",slug:"flows",normalizedTitle:"flows",charIndex:553},{level:3,title:"Tasks",slug:"tasks-4",normalizedTitle:"tasks",charIndex:24},{level:2,title:"Scripts",slug:"scripts",normalizedTitle:"scripts",charIndex:709},{level:3,title:"Tasks",slug:"tasks-5",normalizedTitle:"tasks",charIndex:24}],headersStr:"Storages Tasks Common Triggers Conditions Debugs Tasks Executions Tasks Flows Tasks Scripts Tasks",content:"# Core\n\n\n# Storages\n\n\n# Tasks\n\n * Concat\n * Delete\n * PurgeExecution\n * Size\n\n\n# Common\n\n\n# Triggers\n\n * Flow\n * Schedule\n * Webhook\n\n\n# Conditions\n\n * DateTimeBetweenCondition\n * DayWeekCondition\n * DayWeekInMonthCondition\n * ExecutionFlowCondition\n * ExecutionNamespaceCondition\n * ExecutionStatusCondition\n * FlowCondition\n * FlowNamespaceCondition\n * HasRetryAttemptCondition\n * MultipleCondition\n * NotCondition\n * OrCondition\n * VariableCondition\n * WeekendCondition\n\n\n# Debugs\n\n\n# Tasks\n\n * Echo\n * Return\n\n\n# Executions\n\n\n# Tasks\n\n * Counts\n\n\n# Flows\n\n\n# Tasks\n\n * AllowFailure\n * EachParallel\n * EachSequential\n * Flow\n * Parallel\n * Pause\n * Sequential\n * Switch\n * Template\n * ExecutorTemplate\n\n\n# Scripts\n\n\n# Tasks\n\n * Bash\n * Node\n * Python",normalizedContent:"# core\n\n\n# storages\n\n\n# tasks\n\n * concat\n * delete\n * purgeexecution\n * size\n\n\n# common\n\n\n# triggers\n\n * flow\n * schedule\n * webhook\n\n\n# conditions\n\n * datetimebetweencondition\n * dayweekcondition\n * dayweekinmonthcondition\n * executionflowcondition\n * executionnamespacecondition\n * executionstatuscondition\n * flowcondition\n * flownamespacecondition\n * hasretryattemptcondition\n * multiplecondition\n * notcondition\n * orcondition\n * variablecondition\n * weekendcondition\n\n\n# debugs\n\n\n# tasks\n\n * echo\n * return\n\n\n# executions\n\n\n# tasks\n\n * counts\n\n\n# flows\n\n\n# tasks\n\n * allowfailure\n * eachparallel\n * eachsequential\n * flow\n * parallel\n * pause\n * sequential\n * switch\n * template\n * executortemplate\n\n\n# scripts\n\n\n# tasks\n\n * bash\n * node\n * python",charsets:{}},{title:"DateTimeBetweenCondition",frontmatter:{title:"DateTimeBetweenCondition",editLink:!1,description:"Condition for allows events between two specific datetimes",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"DateTimeBetweenCondition"},{property:"og:description",content:"Condition for allows events between two specific datetimes | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/core/conditions/io.kestra.core.models.conditions.types.DateTimeBetweenCondition.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"DateTimeBetweenCondition"},{name:"twitter:description",content:"Condition for allows events between two specific datetimes | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/core/conditions/io.kestra.core.models.conditions.types.DateTimeBetweenCondition.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/core/conditions/io.kestra.core.models.conditions.types.DateTimeBetweenCondition.html",relativePath:"plugins/core/conditions/io.kestra.core.models.conditions.types.DateTimeBetweenCondition.md",key:"v-afdbda3a",path:"/plugins/core/conditions/io.kestra.core.models.conditions.types.DateTimeBetweenCondition.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:165},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:305},{level:3,title:"after",slug:"after",normalizedTitle:"after",charIndex:271},{level:3,title:"before",slug:"before",normalizedTitle:"before",charIndex:408},{level:3,title:"date",slug:"date",normalizedTitle:"date",charIndex:151},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:681},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:693}],headersStr:"Examples Properties after before date Outputs Definitions",content:'DateTimeBetweenCondition\n\ntype: "io.kestra.core.models.conditions.types.DateTimeBetweenCondition"\n\n\n> Condition for allows events between two specific datetimes\n\n\n# Examples\n\n- conditions:\n    - type: io.kestra.core.models.conditions.types.DateTimeBetweenCondition\n      after: "2013-09-08T16:19:12"\n\n\n\n# Properties\n\n\n# after\n\n * Type: string\n * Dynamic: ❌\n * Required: ❌\n\n> The date must after this one\n\n\n# before\n\n * Type: string\n * Dynamic: ❌\n * Required: ❌\n\n> The date must before this one\n\n\n# date\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Default: {{ now() }}\n\n> The date to test\n\nCan be any variable or any valid ISO 8601 datetime, default will use {{ now() }}\n\n\n# Outputs\n\n\n# Definitions',normalizedContent:'datetimebetweencondition\n\ntype: "io.kestra.core.models.conditions.types.datetimebetweencondition"\n\n\n> condition for allows events between two specific datetimes\n\n\n# examples\n\n- conditions:\n    - type: io.kestra.core.models.conditions.types.datetimebetweencondition\n      after: "2013-09-08t16:19:12"\n\n\n\n# properties\n\n\n# after\n\n * type: string\n * dynamic: ❌\n * required: ❌\n\n> the date must after this one\n\n\n# before\n\n * type: string\n * dynamic: ❌\n * required: ❌\n\n> the date must before this one\n\n\n# date\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * default: {{ now() }}\n\n> the date to test\n\ncan be any variable or any valid iso 8601 datetime, default will use {{ now() }}\n\n\n# outputs\n\n\n# definitions',charsets:{}},{title:"DayWeekCondition",frontmatter:{title:"DayWeekCondition",editLink:!1,description:"Condition for allows events on weekdays",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"DayWeekCondition"},{property:"og:description",content:"Condition for allows events on weekdays | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/core/conditions/io.kestra.core.models.conditions.types.DayWeekCondition.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"DayWeekCondition"},{name:"twitter:description",content:"Condition for allows events on weekdays | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/core/conditions/io.kestra.core.models.conditions.types.DayWeekCondition.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/core/conditions/io.kestra.core.models.conditions.types.DayWeekCondition.html",relativePath:"plugins/core/conditions/io.kestra.core.models.conditions.types.DayWeekCondition.md",key:"v-16365a03",path:"/plugins/core/conditions/io.kestra.core.models.conditions.types.DayWeekCondition.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:130},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:253},{level:3,title:"date",slug:"date",normalizedTitle:"date",charIndex:268},{level:3,title:"dayOfWeek",slug:"dayofweek",normalizedTitle:"dayofweek",charIndex:228},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:696},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:708}],headersStr:"Examples Properties date dayOfWeek Outputs Definitions",content:'DayWeekCondition\n\ntype: "io.kestra.core.models.conditions.types.DayWeekCondition"\n\n\n> Condition for allows events on weekdays\n\n\n# Examples\n\n- conditions:\n    - type: io.kestra.core.models.conditions.types.DayWeekCondition\n      dayOfWeek: "MONDAY"\n\n\n\n# Properties\n\n\n# date\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Default: {{ now(format="iso_local_date") }}\n\n> The date to test\n\nCan be any variable or any valid ISO 8601 datetime, default will use {{ now(format="iso_local_date") }}\n\n\n# dayOfWeek\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ✔️\n\n * Possible Values:\n   \n   * MONDAY\n   * TUESDAY\n   * WEDNESDAY\n   * THURSDAY\n   * FRIDAY\n   * SATURDAY\n   * SUNDAY\n\n> The day of week\n\n\n# Outputs\n\n\n# Definitions',normalizedContent:'dayweekcondition\n\ntype: "io.kestra.core.models.conditions.types.dayweekcondition"\n\n\n> condition for allows events on weekdays\n\n\n# examples\n\n- conditions:\n    - type: io.kestra.core.models.conditions.types.dayweekcondition\n      dayofweek: "monday"\n\n\n\n# properties\n\n\n# date\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * default: {{ now(format="iso_local_date") }}\n\n> the date to test\n\ncan be any variable or any valid iso 8601 datetime, default will use {{ now(format="iso_local_date") }}\n\n\n# dayofweek\n\n * type: string\n\n * dynamic: ❌\n\n * required: ✔️\n\n * possible values:\n   \n   * monday\n   * tuesday\n   * wednesday\n   * thursday\n   * friday\n   * saturday\n   * sunday\n\n> the day of week\n\n\n# outputs\n\n\n# definitions',charsets:{}},{title:"DayWeekInMonthCondition",frontmatter:{title:"DayWeekInMonthCondition",editLink:!1,description:"Condition for allows events on weekdays relative to current month (first, last, ...)",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"DayWeekInMonthCondition"},{property:"og:description",content:"Condition for allows events on weekdays relative to current month (first, last, ...) | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/core/conditions/io.kestra.core.models.conditions.types.DayWeekInMonthCondition.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"DayWeekInMonthCondition"},{name:"twitter:description",content:"Condition for allows events on weekdays relative to current month (first, last, ...) | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/core/conditions/io.kestra.core.models.conditions.types.DayWeekInMonthCondition.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/core/conditions/io.kestra.core.models.conditions.types.DayWeekInMonthCondition.html",relativePath:"plugins/core/conditions/io.kestra.core.models.conditions.types.DayWeekInMonthCondition.md",key:"v-077dee92",path:"/plugins/core/conditions/io.kestra.core.models.conditions.types.DayWeekInMonthCondition.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:189},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:397},{level:3,title:"date",slug:"date",normalizedTitle:"date",charIndex:412},{level:3,title:"dayInMonth",slug:"dayinmonth",normalizedTitle:"dayinmonth",charIndex:374},{level:3,title:"dayOfWeek",slug:"dayofweek",normalizedTitle:"dayofweek",charIndex:294},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1034},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:1046}],headersStr:"Examples Properties date dayInMonth dayOfWeek Outputs Definitions",content:'DayWeekInMonthCondition\n\ntype: "io.kestra.core.models.conditions.types.DayWeekInMonthCondition"\n\n\n> Condition for allows events on weekdays relative to current month (first, last, ...)\n\n\n# Examples\n\n- conditions:\n    - type: io.kestra.core.models.conditions.types.DayWeekInMonthCondition\n      dayOfWeek: io.kestra.core.models.conditions.types.DayWeekInMonthCondition\n      dayInMonth: FIRST\n\n\n\n# Properties\n\n\n# date\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Default: {{ now(format="iso_local_date") }}\n\n> The date to test\n\nCan be any variable or any valid ISO 8601 datetime, default will use {{ now(format="iso_local_date") }}\n\n\n# dayInMonth\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ✔️\n\n * Possible Values:\n   \n   * FIRST\n   * LAST\n   * SECOND\n   * THIRD\n   * FOURTH\n\n> Are you looking at first or last day in month\n\n\n# dayOfWeek\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ✔️\n\n * Possible Values:\n   \n   * MONDAY\n   * TUESDAY\n   * WEDNESDAY\n   * THURSDAY\n   * FRIDAY\n   * SATURDAY\n   * SUNDAY\n\n> The day of week\n\n\n# Outputs\n\n\n# Definitions',normalizedContent:'dayweekinmonthcondition\n\ntype: "io.kestra.core.models.conditions.types.dayweekinmonthcondition"\n\n\n> condition for allows events on weekdays relative to current month (first, last, ...)\n\n\n# examples\n\n- conditions:\n    - type: io.kestra.core.models.conditions.types.dayweekinmonthcondition\n      dayofweek: io.kestra.core.models.conditions.types.dayweekinmonthcondition\n      dayinmonth: first\n\n\n\n# properties\n\n\n# date\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * default: {{ now(format="iso_local_date") }}\n\n> the date to test\n\ncan be any variable or any valid iso 8601 datetime, default will use {{ now(format="iso_local_date") }}\n\n\n# dayinmonth\n\n * type: string\n\n * dynamic: ❌\n\n * required: ✔️\n\n * possible values:\n   \n   * first\n   * last\n   * second\n   * third\n   * fourth\n\n> are you looking at first or last day in month\n\n\n# dayofweek\n\n * type: string\n\n * dynamic: ❌\n\n * required: ✔️\n\n * possible values:\n   \n   * monday\n   * tuesday\n   * wednesday\n   * thursday\n   * friday\n   * saturday\n   * sunday\n\n> the day of week\n\n\n# outputs\n\n\n# definitions',charsets:{}},{title:"ExecutionFlowCondition",frontmatter:{title:"ExecutionFlowCondition",editLink:!1,description:"Condition for a specific flow of an execution",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"ExecutionFlowCondition"},{property:"og:description",content:"Condition for a specific flow of an execution | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/core/conditions/io.kestra.core.models.conditions.types.ExecutionFlowCondition.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"ExecutionFlowCondition"},{name:"twitter:description",content:"Condition for a specific flow of an execution | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/core/conditions/io.kestra.core.models.conditions.types.ExecutionFlowCondition.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/core/conditions/io.kestra.core.models.conditions.types.ExecutionFlowCondition.html",relativePath:"plugins/core/conditions/io.kestra.core.models.conditions.types.ExecutionFlowCondition.md",key:"v-1813e7fa",path:"/plugins/core/conditions/io.kestra.core.models.conditions.types.ExecutionFlowCondition.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:148},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:314},{level:3,title:"flowId",slug:"flowid",normalizedTitle:"flowid",charIndex:285},{level:3,title:"namespace",slug:"namespace",normalizedTitle:"namespace",charIndex:252},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:492},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:504}],headersStr:"Examples Properties flowId namespace Outputs Definitions",content:'ExecutionFlowCondition\n\ntype: "io.kestra.core.models.conditions.types.ExecutionFlowCondition"\n\n\n> Condition for a specific flow of an execution\n\n\n# Examples\n\n- conditions:\n    - type: io.kestra.core.models.conditions.types.ExecutionFlowCondition\n      namespace: io.kestra.tests\n      flowId: my-current-flow\n\n\n\n# Properties\n\n\n# flowId\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n\n> The flow id\n\n\n# namespace\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n\n> The namespace of the flow\n\n\n# Outputs\n\n\n# Definitions',normalizedContent:'executionflowcondition\n\ntype: "io.kestra.core.models.conditions.types.executionflowcondition"\n\n\n> condition for a specific flow of an execution\n\n\n# examples\n\n- conditions:\n    - type: io.kestra.core.models.conditions.types.executionflowcondition\n      namespace: io.kestra.tests\n      flowid: my-current-flow\n\n\n\n# properties\n\n\n# flowid\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n\n> the flow id\n\n\n# namespace\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n\n> the namespace of the flow\n\n\n# outputs\n\n\n# definitions',charsets:{}},{title:"ExecutionNamespaceCondition",frontmatter:{title:"ExecutionNamespaceCondition",editLink:!1,description:"Condition for an execution namespace",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"ExecutionNamespaceCondition"},{property:"og:description",content:"Condition for an execution namespace | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/core/conditions/io.kestra.core.models.conditions.types.ExecutionNamespaceCondition.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"ExecutionNamespaceCondition"},{name:"twitter:description",content:"Condition for an execution namespace | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/core/conditions/io.kestra.core.models.conditions.types.ExecutionNamespaceCondition.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/core/conditions/io.kestra.core.models.conditions.types.ExecutionNamespaceCondition.html",relativePath:"plugins/core/conditions/io.kestra.core.models.conditions.types.ExecutionNamespaceCondition.md",key:"v-01b63a32",path:"/plugins/core/conditions/io.kestra.core.models.conditions.types.ExecutionNamespaceCondition.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:149},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:309},{level:3,title:"namespace",slug:"namespace",normalizedTitle:"namespace",charIndex:135},{level:3,title:"prefix",slug:"prefix",normalizedTitle:"prefix",charIndex:291},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:603},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:615}],headersStr:"Examples Properties namespace prefix Outputs Definitions",content:'ExecutionNamespaceCondition\n\ntype: "io.kestra.core.models.conditions.types.ExecutionNamespaceCondition"\n\n\n> Condition for an execution namespace\n\n\n# Examples\n\n- conditions:\n    - type: io.kestra.core.models.conditions.types.ExecutionNamespaceCondition\n      namespace: io.kestra.tests\n      prefix: true\n\n\n\n# Properties\n\n\n# namespace\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n\nThe namespace of the flow or the prefix if prefix is true\n\n\n# prefix\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: false\n\nIf we must look at the flow namespace by prefix (simple startWith case sensitive)\n\n\n# Outputs\n\n\n# Definitions',normalizedContent:'executionnamespacecondition\n\ntype: "io.kestra.core.models.conditions.types.executionnamespacecondition"\n\n\n> condition for an execution namespace\n\n\n# examples\n\n- conditions:\n    - type: io.kestra.core.models.conditions.types.executionnamespacecondition\n      namespace: io.kestra.tests\n      prefix: true\n\n\n\n# properties\n\n\n# namespace\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n\nthe namespace of the flow or the prefix if prefix is true\n\n\n# prefix\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: false\n\nif we must look at the flow namespace by prefix (simple startwith case sensitive)\n\n\n# outputs\n\n\n# definitions',charsets:{}},{title:"ExecutionStatusCondition",frontmatter:{title:"ExecutionStatusCondition",editLink:!1,description:"Condition based on execution status",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"ExecutionStatusCondition"},{property:"og:description",content:"Condition based on execution status | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/core/conditions/io.kestra.core.models.conditions.types.ExecutionStatusCondition.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"ExecutionStatusCondition"},{name:"twitter:description",content:"Condition based on execution status | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/core/conditions/io.kestra.core.models.conditions.types.ExecutionStatusCondition.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/core/conditions/io.kestra.core.models.conditions.types.ExecutionStatusCondition.html",relativePath:"plugins/core/conditions/io.kestra.core.models.conditions.types.ExecutionStatusCondition.md",key:"v-2ad254c3",path:"/plugins/core/conditions/io.kestra.core.models.conditions.types.ExecutionStatusCondition.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:142},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:306},{level:3,title:"in",slug:"in",normalizedTitle:"in",charIndex:248},{level:3,title:"notIn",slug:"notin",normalizedTitle:"notin",charIndex:276},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:543},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:555}],headersStr:"Examples Properties in notIn Outputs Definitions",content:'ExecutionStatusCondition\n\ntype: "io.kestra.core.models.conditions.types.ExecutionStatusCondition"\n\n\n> Condition based on execution status\n\n\n# Examples\n\n- conditions:\n    - type: io.kestra.core.models.conditions.types.ExecutionStatusCondition\n      in:\n        - SUCCESS\n      notIn: \n        - FAILED\n\n\n\n# Properties\n\n\n# in\n\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n\n> List of state that are authorized\n\n\n# notIn\n\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n\n> List of state that aren\'t authorized\n\n\n# Outputs\n\n\n# Definitions',normalizedContent:'executionstatuscondition\n\ntype: "io.kestra.core.models.conditions.types.executionstatuscondition"\n\n\n> condition based on execution status\n\n\n# examples\n\n- conditions:\n    - type: io.kestra.core.models.conditions.types.executionstatuscondition\n      in:\n        - success\n      notin: \n        - failed\n\n\n\n# properties\n\n\n# in\n\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n\n> list of state that are authorized\n\n\n# notin\n\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n\n> list of state that aren\'t authorized\n\n\n# outputs\n\n\n# definitions',charsets:{}},{title:"FlowCondition",frontmatter:{title:"FlowCondition",editLink:!1,description:"Condition for a specific flow",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"FlowCondition"},{property:"og:description",content:"Condition for a specific flow | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/core/conditions/io.kestra.core.models.conditions.types.FlowCondition.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"FlowCondition"},{name:"twitter:description",content:"Condition for a specific flow | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/core/conditions/io.kestra.core.models.conditions.types.FlowCondition.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/core/conditions/io.kestra.core.models.conditions.types.FlowCondition.html",relativePath:"plugins/core/conditions/io.kestra.core.models.conditions.types.FlowCondition.md",key:"v-62e587fd",path:"/plugins/core/conditions/io.kestra.core.models.conditions.types.FlowCondition.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:114},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:271},{level:3,title:"flowId",slug:"flowid",normalizedTitle:"flowid",charIndex:242},{level:3,title:"namespace",slug:"namespace",normalizedTitle:"namespace",charIndex:209},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:449},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:461}],headersStr:"Examples Properties flowId namespace Outputs Definitions",content:'FlowCondition\n\ntype: "io.kestra.core.models.conditions.types.FlowCondition"\n\n\n> Condition for a specific flow\n\n\n# Examples\n\n- conditions:\n    - type: io.kestra.core.models.conditions.types.FlowCondition\n      namespace: io.kestra.tests\n      flowId: my-current-flow\n\n\n\n# Properties\n\n\n# flowId\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n\n> The flow id\n\n\n# namespace\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n\n> The namespace of the flow\n\n\n# Outputs\n\n\n# Definitions',normalizedContent:'flowcondition\n\ntype: "io.kestra.core.models.conditions.types.flowcondition"\n\n\n> condition for a specific flow\n\n\n# examples\n\n- conditions:\n    - type: io.kestra.core.models.conditions.types.flowcondition\n      namespace: io.kestra.tests\n      flowid: my-current-flow\n\n\n\n# properties\n\n\n# flowid\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n\n> the flow id\n\n\n# namespace\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n\n> the namespace of the flow\n\n\n# outputs\n\n\n# definitions',charsets:{}},{title:"FlowNamespaceCondition",frontmatter:{title:"FlowNamespaceCondition",editLink:!1,description:"Condition for a flow namespace",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"FlowNamespaceCondition"},{property:"og:description",content:"Condition for a flow namespace | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/core/conditions/io.kestra.core.models.conditions.types.FlowNamespaceCondition.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"FlowNamespaceCondition"},{name:"twitter:description",content:"Condition for a flow namespace | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/core/conditions/io.kestra.core.models.conditions.types.FlowNamespaceCondition.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/core/conditions/io.kestra.core.models.conditions.types.FlowNamespaceCondition.html",relativePath:"plugins/core/conditions/io.kestra.core.models.conditions.types.FlowNamespaceCondition.md",key:"v-26cecde3",path:"/plugins/core/conditions/io.kestra.core.models.conditions.types.FlowNamespaceCondition.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:133},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:288},{level:3,title:"namespace",slug:"namespace",normalizedTitle:"namespace",charIndex:119},{level:3,title:"prefix",slug:"prefix",normalizedTitle:"prefix",charIndex:270},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:586},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:598}],headersStr:"Examples Properties namespace prefix Outputs Definitions",content:'FlowNamespaceCondition\n\ntype: "io.kestra.core.models.conditions.types.FlowNamespaceCondition"\n\n\n> Condition for a flow namespace\n\n\n# Examples\n\n- conditions:\n    - type: io.kestra.core.models.conditions.types.FlowNamespaceCondition\n      namespace: io.kestra.tests\n      prefix: true\n\n\n\n# Properties\n\n\n# namespace\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n\n> The namespace of the flow or the prefix if prefix is true\n\n\n# prefix\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: false\n\n> If we must look at the flow namespace by prefix (simple startWith case sensitive)\n\n\n# Outputs\n\n\n# Definitions',normalizedContent:'flownamespacecondition\n\ntype: "io.kestra.core.models.conditions.types.flownamespacecondition"\n\n\n> condition for a flow namespace\n\n\n# examples\n\n- conditions:\n    - type: io.kestra.core.models.conditions.types.flownamespacecondition\n      namespace: io.kestra.tests\n      prefix: true\n\n\n\n# properties\n\n\n# namespace\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n\n> the namespace of the flow or the prefix if prefix is true\n\n\n# prefix\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: false\n\n> if we must look at the flow namespace by prefix (simple startwith case sensitive)\n\n\n# outputs\n\n\n# definitions',charsets:{}},{title:"HasRetryAttemptCondition",frontmatter:{title:"HasRetryAttemptCondition",editLink:!1,description:"Condition that match if any taskRun have any multiple attempts retries",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"HasRetryAttemptCondition"},{property:"og:description",content:"Condition that match if any taskRun have any multiple attempts retries | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/core/conditions/io.kestra.core.models.conditions.types.HasRetryAttemptCondition.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"HasRetryAttemptCondition"},{name:"twitter:description",content:"Condition that match if any taskRun have any multiple attempts retries | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/core/conditions/io.kestra.core.models.conditions.types.HasRetryAttemptCondition.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/core/conditions/io.kestra.core.models.conditions.types.HasRetryAttemptCondition.html",relativePath:"plugins/core/conditions/io.kestra.core.models.conditions.types.HasRetryAttemptCondition.md",key:"v-44d81fa3",path:"/plugins/core/conditions/io.kestra.core.models.conditions.types.HasRetryAttemptCondition.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:177},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:309},{level:3,title:"in",slug:"in",normalizedTitle:"in",charIndex:283},{level:3,title:"notIn",slug:"notin",normalizedTitle:"notin",charIndex:432},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:546},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:558}],headersStr:"Examples Properties in notIn Outputs Definitions",content:'HasRetryAttemptCondition\n\ntype: "io.kestra.core.models.conditions.types.HasRetryAttemptCondition"\n\n\n> Condition that match if any taskRun have any multiple attempts retries\n\n\n# Examples\n\n- conditions:\n    - type: io.kestra.core.models.conditions.types.HasRetryAttemptCondition\n      in:\n        - KILLED\n\n\n\n# Properties\n\n\n# in\n\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n\n> List of state that are authorized\n\n\n# notIn\n\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n\n> List of state that aren\'t authorized\n\n\n# Outputs\n\n\n# Definitions',normalizedContent:'hasretryattemptcondition\n\ntype: "io.kestra.core.models.conditions.types.hasretryattemptcondition"\n\n\n> condition that match if any taskrun have any multiple attempts retries\n\n\n# examples\n\n- conditions:\n    - type: io.kestra.core.models.conditions.types.hasretryattemptcondition\n      in:\n        - killed\n\n\n\n# properties\n\n\n# in\n\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n\n> list of state that are authorized\n\n\n# notin\n\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n\n> list of state that aren\'t authorized\n\n\n# outputs\n\n\n# definitions',charsets:{}},{title:"MultipleCondition",frontmatter:{title:"MultipleCondition",editLink:!1,description:"Condition for a list of flow",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"MultipleCondition"},{property:"og:description",content:"Condition for a list of flow | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/core/conditions/io.kestra.core.models.conditions.types.MultipleCondition.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"MultipleCondition"},{name:"twitter:description",content:"Condition for a list of flow | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/core/conditions/io.kestra.core.models.conditions.types.MultipleCondition.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/core/conditions/io.kestra.core.models.conditions.types.MultipleCondition.html",relativePath:"plugins/core/conditions/io.kestra.core.models.conditions.types.MultipleCondition.md",key:"v-61ce6341",path:"/plugins/core/conditions/io.kestra.core.models.conditions.types.MultipleCondition.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:211},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:1080},{level:3,title:"conditions",slug:"conditions",normalizedTitle:"conditions",charIndex:48},{level:3,title:"id",slug:"id",normalizedTitle:"id",charIndex:302},{level:3,title:"window",slug:"window",normalizedTitle:"window",charIndex:191},{level:3,title:"windowAdvance",slug:"windowadvance",normalizedTitle:"windowadvance",charIndex:515},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:2359},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:2371},{level:3,title:"Condition-1",slug:"condition-1",normalizedTitle:"condition-1",charIndex:2387},{level:3,title:"Condition-2",slug:"condition-2",normalizedTitle:"condition-2",charIndex:2403}],headersStr:"Examples Properties conditions id window windowAdvance Outputs Definitions Condition-1 Condition-2",content:'MultipleCondition\n\ntype: "io.kestra.core.models.conditions.types.MultipleCondition"\n\n\n> Condition for a list of flow\n\nTrigger the first time all the flow are successfully executed during the window duration\n\n\n# Examples\n\n> A flow that is waiting for 2 flows that is successful in 1 days\n\ntriggers:\n  - id: multiple-listen-flow\n    type: io.kestra.core.models.triggers.types.Flow\n    conditions:\n      - id: multiple\n        type: io.kestra.core.models.conditions.types.MultipleCondition\n        window: P1D\n        windowAdvance: P0D\n        conditions:\n          success:\n            type: io.kestra.core.models.conditions.types.ExecutionStatusCondition\n            in:\n              - SUCCESS\n          flow-a:\n            type: io.kestra.core.models.conditions.types.ExecutionFlowCondition\n            namespace: io.kestra.tests\n            flowId: trigger-multiplecondition-flow-a\n          flow-b:\n            type: io.kestra.core.models.conditions.types.ExecutionFlowCondition\n            namespace: io.kestra.tests\n            flowId: trigger-multiplecondition-flow-b\n\n\n\n# Properties\n\n\n# conditions\n\n * Type: object\n * SubType: ====\n * Dynamic: ❌\n * Required: ✔️\n\n> The list of conditions to wait for\n\nThe key must be unique for a trigger since it will be use to store previous result.\n\n\n# id\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n * Validation regExp: [a-zA-Z0-9_-]+\n * Min length: 1\n\n> A unique id for the whole flow\n\n\n# window\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n * Format: duration\n\n> The duration of the window\n\nSee ISO_8601 Durations for more information of available duration value.\nThe start of the window is always based on midnight except if you set windowAdvance parameter. Eg if you have a 10 minutes (PT10M) window, the first window will be 00:00 to 00:10 and a new window will be started each 10 minutes\n\n\n# windowAdvance\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n * Format: duration\n\n> The window advance duration\n\nAllow to specify the start hour of the window\nEg: you want a window of 6 hours (window=PT6H). By default the check will be done between:\n00:00 and 06:00 - 06:00 and 12:00 - 12:00 and 18:00 - 18:00 and 00:00 If you want to check the window between:\n03:00 and 09:00 - 09:00 and 15:00 - 15:00 and 21:00 - 21:00 and 3:00You will have to shift the window of 3 hours by settings windowAdvance: PT3H\n\n\n# Outputs\n\n\n# Definitions\n\n\n# Condition-1\n\n\n# Condition-2',normalizedContent:'multiplecondition\n\ntype: "io.kestra.core.models.conditions.types.multiplecondition"\n\n\n> condition for a list of flow\n\ntrigger the first time all the flow are successfully executed during the window duration\n\n\n# examples\n\n> a flow that is waiting for 2 flows that is successful in 1 days\n\ntriggers:\n  - id: multiple-listen-flow\n    type: io.kestra.core.models.triggers.types.flow\n    conditions:\n      - id: multiple\n        type: io.kestra.core.models.conditions.types.multiplecondition\n        window: p1d\n        windowadvance: p0d\n        conditions:\n          success:\n            type: io.kestra.core.models.conditions.types.executionstatuscondition\n            in:\n              - success\n          flow-a:\n            type: io.kestra.core.models.conditions.types.executionflowcondition\n            namespace: io.kestra.tests\n            flowid: trigger-multiplecondition-flow-a\n          flow-b:\n            type: io.kestra.core.models.conditions.types.executionflowcondition\n            namespace: io.kestra.tests\n            flowid: trigger-multiplecondition-flow-b\n\n\n\n# properties\n\n\n# conditions\n\n * type: object\n * subtype: ====\n * dynamic: ❌\n * required: ✔️\n\n> the list of conditions to wait for\n\nthe key must be unique for a trigger since it will be use to store previous result.\n\n\n# id\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n * validation regexp: [a-za-z0-9_-]+\n * min length: 1\n\n> a unique id for the whole flow\n\n\n# window\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n * format: duration\n\n> the duration of the window\n\nsee iso_8601 durations for more information of available duration value.\nthe start of the window is always based on midnight except if you set windowadvance parameter. eg if you have a 10 minutes (pt10m) window, the first window will be 00:00 to 00:10 and a new window will be started each 10 minutes\n\n\n# windowadvance\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n * format: duration\n\n> the window advance duration\n\nallow to specify the start hour of the window\neg: you want a window of 6 hours (window=pt6h). by default the check will be done between:\n00:00 and 06:00 - 06:00 and 12:00 - 12:00 and 18:00 - 18:00 and 00:00 if you want to check the window between:\n03:00 and 09:00 - 09:00 and 15:00 - 15:00 and 21:00 - 21:00 and 3:00you will have to shift the window of 3 hours by settings windowadvance: pt3h\n\n\n# outputs\n\n\n# definitions\n\n\n# condition-1\n\n\n# condition-2',charsets:{}},{title:"NotCondition",frontmatter:{title:"NotCondition",editLink:!1,description:"Condition to exclude others conditions",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"NotCondition"},{property:"og:description",content:"Condition to exclude others conditions | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/core/conditions/io.kestra.core.models.conditions.types.NotCondition.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"NotCondition"},{name:"twitter:description",content:"Condition to exclude others conditions | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/core/conditions/io.kestra.core.models.conditions.types.NotCondition.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/core/conditions/io.kestra.core.models.conditions.types.NotCondition.html",relativePath:"plugins/core/conditions/io.kestra.core.models.conditions.types.NotCondition.md",key:"v-71a5b7ba",path:"/plugins/core/conditions/io.kestra.core.models.conditions.types.NotCondition.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:121},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:345},{level:3,title:"conditions",slug:"conditions",normalizedTitle:"conditions",charIndex:43},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:560},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:572},{level:3,title:"Condition-1",slug:"condition-1",normalizedTitle:"condition-1",charIndex:588},{level:3,title:"Condition-2",slug:"condition-2",normalizedTitle:"condition-2",charIndex:399}],headersStr:"Examples Properties conditions Outputs Definitions Condition-1 Condition-2",content:'NotCondition\n\ntype: "io.kestra.core.models.conditions.types.NotCondition"\n\n\n> Condition to exclude others conditions\n\n\n# Examples\n\n- conditions:\n    - type: io.kestra.core.models.conditions.types.NotCondition\n      conditions:\n      -  type: io.kestra.core.models.conditions.types.DateBetweenCondition\n         after: "2013-09-08T16:19:12"\n\n\n\n# Properties\n\n\n# conditions\n\n * Type: array\n * SubType: Condition-2\n * Dynamic: ❌\n * Required: ✔️\n * Min items: 1\n\n> The list of conditions to exclude\n\nIf any conditions is true, it will prevent events execution.\n\n\n# Outputs\n\n\n# Definitions\n\n\n# Condition-1\n\n\n# Condition-2',normalizedContent:'notcondition\n\ntype: "io.kestra.core.models.conditions.types.notcondition"\n\n\n> condition to exclude others conditions\n\n\n# examples\n\n- conditions:\n    - type: io.kestra.core.models.conditions.types.notcondition\n      conditions:\n      -  type: io.kestra.core.models.conditions.types.datebetweencondition\n         after: "2013-09-08t16:19:12"\n\n\n\n# properties\n\n\n# conditions\n\n * type: array\n * subtype: condition-2\n * dynamic: ❌\n * required: ✔️\n * min items: 1\n\n> the list of conditions to exclude\n\nif any conditions is true, it will prevent events execution.\n\n\n# outputs\n\n\n# definitions\n\n\n# condition-1\n\n\n# condition-2',charsets:{}},{title:"OrCondition",frontmatter:{title:"OrCondition",editLink:!1,description:"Condition to have at least once conditions validated",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"OrCondition"},{property:"og:description",content:"Condition to have at least once conditions validated | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/core/conditions/io.kestra.core.models.conditions.types.OrCondition.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"OrCondition"},{name:"twitter:description",content:"Condition to have at least once conditions validated | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/core/conditions/io.kestra.core.models.conditions.types.OrCondition.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/core/conditions/io.kestra.core.models.conditions.types.OrCondition.html",relativePath:"plugins/core/conditions/io.kestra.core.models.conditions.types.OrCondition.md",key:"v-8448cf32",path:"/plugins/core/conditions/io.kestra.core.models.conditions.types.OrCondition.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:133},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:443},{level:3,title:"conditions",slug:"conditions",normalizedTitle:"conditions",charIndex:42},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:646},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:658},{level:3,title:"Condition-1",slug:"condition-1",normalizedTitle:"condition-1",charIndex:674},{level:3,title:"Condition-2",slug:"condition-2",normalizedTitle:"condition-2",charIndex:497}],headersStr:"Examples Properties conditions Outputs Definitions Condition-1 Condition-2",content:'OrCondition\n\ntype: "io.kestra.core.models.conditions.types.OrCondition"\n\n\n> Condition to have at least once conditions validated\n\n\n# Examples\n\n- conditions:\n    - type: io.kestra.core.models.conditions.types.OrCondition\n      conditions:\n      -  type: io.kestra.core.models.conditions.types.DayWeekCondition\n         dayOfWeek: "MONDAY"\n      -  type: io.kestra.core.models.conditions.types.DayWeekCondition\n         dayOfWeek: "SUNDAY"\n\n\n\n# Properties\n\n\n# conditions\n\n * Type: array\n * SubType: Condition-2\n * Dynamic: ❌\n * Required: ✔️\n * Min items: 1\n\n> The list of conditions to exclude\n\nIf any conditions is true, it will allow events.\n\n\n# Outputs\n\n\n# Definitions\n\n\n# Condition-1\n\n\n# Condition-2',normalizedContent:'orcondition\n\ntype: "io.kestra.core.models.conditions.types.orcondition"\n\n\n> condition to have at least once conditions validated\n\n\n# examples\n\n- conditions:\n    - type: io.kestra.core.models.conditions.types.orcondition\n      conditions:\n      -  type: io.kestra.core.models.conditions.types.dayweekcondition\n         dayofweek: "monday"\n      -  type: io.kestra.core.models.conditions.types.dayweekcondition\n         dayofweek: "sunday"\n\n\n\n# properties\n\n\n# conditions\n\n * type: array\n * subtype: condition-2\n * dynamic: ❌\n * required: ✔️\n * min items: 1\n\n> the list of conditions to exclude\n\nif any conditions is true, it will allow events.\n\n\n# outputs\n\n\n# definitions\n\n\n# condition-1\n\n\n# condition-2',charsets:{}},{title:"VariableCondition",frontmatter:{title:"VariableCondition",editLink:!1,description:"Condition based on variables expression",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"VariableCondition"},{property:"og:description",content:"Condition based on variables expression | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/core/conditions/io.kestra.core.models.conditions.types.VariableCondition.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"VariableCondition"},{name:"twitter:description",content:"Condition based on variables expression | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/core/conditions/io.kestra.core.models.conditions.types.VariableCondition.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/core/conditions/io.kestra.core.models.conditions.types.VariableCondition.html",relativePath:"plugins/core/conditions/io.kestra.core.models.conditions.types.VariableCondition.md",key:"v-a441d7ce",path:"/plugins/core/conditions/io.kestra.core.models.conditions.types.VariableCondition.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:236},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:438},{level:3,title:"expression",slug:"expression",normalizedTitle:"expression",charIndex:117},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:532},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:544}],headersStr:"Examples Properties expression Outputs Definitions",content:'VariableCondition\n\ntype: "io.kestra.core.models.conditions.types.VariableCondition"\n\n\n> Condition based on variables expression\n\nIf the result is an empty string, a string containing only space or false, the condition will be false\n\n\n# Examples\n\n> A condition that will return false for a missing variable\n\n- conditions:\n    - type: io.kestra.core.models.conditions.types.VariableCondition\n      expression: {{ unknown is defined }}\n\n\n\n# Properties\n\n\n# expression\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n * Min length: 1\n\n\n# Outputs\n\n\n# Definitions',normalizedContent:'variablecondition\n\ntype: "io.kestra.core.models.conditions.types.variablecondition"\n\n\n> condition based on variables expression\n\nif the result is an empty string, a string containing only space or false, the condition will be false\n\n\n# examples\n\n> a condition that will return false for a missing variable\n\n- conditions:\n    - type: io.kestra.core.models.conditions.types.variablecondition\n      expression: {{ unknown is defined }}\n\n\n\n# properties\n\n\n# expression\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n * min length: 1\n\n\n# outputs\n\n\n# definitions',charsets:{}},{title:"WeekendCondition",frontmatter:{title:"WeekendCondition",editLink:!1,description:"Condition for allows events on weekend",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"WeekendCondition"},{property:"og:description",content:"Condition for allows events on weekend | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/core/conditions/io.kestra.core.models.conditions.types.WeekendCondition.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"WeekendCondition"},{name:"twitter:description",content:"Condition for allows events on weekend | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/core/conditions/io.kestra.core.models.conditions.types.WeekendCondition.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/core/conditions/io.kestra.core.models.conditions.types.WeekendCondition.html",relativePath:"plugins/core/conditions/io.kestra.core.models.conditions.types.WeekendCondition.md",key:"v-775e78a3",path:"/plugins/core/conditions/io.kestra.core.models.conditions.types.WeekendCondition.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:129},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:226},{level:3,title:"date",slug:"date",normalizedTitle:"date",charIndex:241},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:470},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:482}],headersStr:"Examples Properties date Outputs Definitions",content:'WeekendCondition\n\ntype: "io.kestra.core.models.conditions.types.WeekendCondition"\n\n\n> Condition for allows events on weekend\n\n\n# Examples\n\n- conditions:\n    - type: io.kestra.core.models.conditions.types.WeekendCondition\n\n\n\n# Properties\n\n\n# date\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Default: {{ now(format("iso_local_date") }}\n\n> The date to test\n\nCan be any variable or any valid ISO 8601 datetime, default will use {{ now(format="iso_local_date") }}\n\n\n# Outputs\n\n\n# Definitions',normalizedContent:'weekendcondition\n\ntype: "io.kestra.core.models.conditions.types.weekendcondition"\n\n\n> condition for allows events on weekend\n\n\n# examples\n\n- conditions:\n    - type: io.kestra.core.models.conditions.types.weekendcondition\n\n\n\n# properties\n\n\n# date\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * default: {{ now(format("iso_local_date") }}\n\n> the date to test\n\ncan be any variable or any valid iso 8601 datetime, default will use {{ now(format="iso_local_date") }}\n\n\n# outputs\n\n\n# definitions',charsets:{}},{title:"Echo",frontmatter:{title:"Echo",editLink:!1,description:"Simple debugging task that log a renderer value.",icon:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB3aWR0aD0iMjQiIGhlaWdodD0iMjQiCiAgICAgcHJlc2VydmVBc3BlY3RSYXRpbz0ieE1pZFlNaWQgbWVldCIgdmlld0JveD0iMCAwIDI0IDI0IgogICAgIHN0eWxlPSItbXMtdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTsgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpOyB0cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpOyI+CiAgICA8cGF0aAogICAgICAgIGQ9Ik0xOCA3Yy0xLjEgMC0yIC45LTIgMnY2YzAgMS4xLjkgMiAyIDJoMmMxLjEgMCAyLS45IDItMnYtNGgtMnY0aC0yVjloNFY3aC00TTIgN3YxMGg2di0ySDRWN0gybTkgMGMtMS4xIDAtMiAuOS0yIDJ2NmMwIDEuMS45IDIgMiAyaDJjMS4xIDAgMi0uOSAyLTJWOWMwLTEuMS0uOS0yLTItMmgtMm0wIDJoMnY2aC0yVjl6IgogICAgICAgIGZpbGw9IiMwRDE1MjMiLz4KPC9zdmc+",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Echo"},{property:"og:description",content:"Simple debugging task that log a renderer value. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/core/tasks/debugs/io.kestra.core.tasks.debugs.Echo.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Echo"},{name:"twitter:description",content:"Simple debugging task that log a renderer value. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/core/tasks/debugs/io.kestra.core.tasks.debugs.Echo.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/core/tasks/debugs/io.kestra.core.tasks.debugs.Echo.html",relativePath:"plugins/core/tasks/debugs/io.kestra.core.tasks.debugs.Echo.md",key:"v-40d34635",path:"/plugins/core/tasks/debugs/io.kestra.core.tasks.debugs.Echo.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:262},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:387},{level:3,title:"format",slug:"format",normalizedTitle:"format",charIndex:336},{level:3,title:"level",slug:"level",normalizedTitle:"level",charIndex:324},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:631},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:643}],headersStr:"Examples Properties format level Outputs Definitions",content:'Echo\n\ntype: "io.kestra.core.tasks.debugs.Echo"\n\n\n> Simple debugging task that log a renderer value.\n\nThis task is mostly useful for debugging purpose.\n\nThis one allow you to logs inputs or outputs variables for example, or to debug some templated functions.\n\n\n# Examples\n\nid: "echo"\ntype: "io.kestra.core.tasks.debugs.Echo"\nlevel: WARN\nformat: "{{task.id}} > {{taskrun.startDate}}"\n\n\n\n# Properties\n\n\n# format\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n * Min length: 1\n\n\n# level\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Default: INFO\n\n * Possible Values:\n   \n   * ERROR\n   * WARN\n   * INFO\n   * DEBUG\n   * TRACE\n\n\n# Outputs\n\n\n# Definitions',normalizedContent:'echo\n\ntype: "io.kestra.core.tasks.debugs.echo"\n\n\n> simple debugging task that log a renderer value.\n\nthis task is mostly useful for debugging purpose.\n\nthis one allow you to logs inputs or outputs variables for example, or to debug some templated functions.\n\n\n# examples\n\nid: "echo"\ntype: "io.kestra.core.tasks.debugs.echo"\nlevel: warn\nformat: "{{task.id}} > {{taskrun.startdate}}"\n\n\n\n# properties\n\n\n# format\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n * min length: 1\n\n\n# level\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * default: info\n\n * possible values:\n   \n   * error\n   * warn\n   * info\n   * debug\n   * trace\n\n\n# outputs\n\n\n# definitions',charsets:{}},{title:"Return",frontmatter:{title:"Return",editLink:!1,description:"Simple debugging task that return a renderer value.",icon:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB3aWR0aD0iMjQiIGhlaWdodD0iMjQiCiAgICAgcHJlc2VydmVBc3BlY3RSYXRpbz0ieE1pZFlNaWQgbWVldCIgdmlld0JveD0iMCAwIDI0IDI0IgogICAgIHN0eWxlPSItbXMtdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTsgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpOyB0cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpOyI+CiAgICA8ZyB0cmFuc2Zvcm09InRyYW5zbGF0ZSgyNCAwKSBzY2FsZSgtMSAxKSI+CiAgICAgICAgPHBhdGgKICAgICAgICAgICAgZD0iTTE5IDNoLTQuMThDMTQuNCAxLjg0IDEzLjMgMSAxMiAxcy0yLjQuODQtMi44MiAySDVjLTEuMSAwLTIgLjktMiAydjE0YzAgMS4xLjkgMiAyIDJoMTRjMS4xIDAgMi0uOSAyLTJWNWMwLTEuMS0uOS0yLTItMnptLTcgMGMuNTUgMCAxIC40NSAxIDFzLS40NSAxLTEgMXMtMS0uNDUtMS0xcy40NS0xIDEtMXptNCAxMmgtNHYzbC00LjY1LTQuNjVjLS4yLS4yLS4yLS41MSAwLS43MUwxMiA4djNoNHY0eiIKICAgICAgICAgICAgZmlsbD0iIzBEMTUyMyIvPgogICAgPC9nPgo8L3N2Zz4=",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Return"},{property:"og:description",content:"Simple debugging task that return a renderer value. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/core/tasks/debugs/io.kestra.core.tasks.debugs.Return.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Return"},{name:"twitter:description",content:"Simple debugging task that return a renderer value. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/core/tasks/debugs/io.kestra.core.tasks.debugs.Return.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/core/tasks/debugs/io.kestra.core.tasks.debugs.Return.html",relativePath:"plugins/core/tasks/debugs/io.kestra.core.tasks.debugs.Return.md",key:"v-a09528c2",path:"/plugins/core/tasks/debugs/io.kestra.core.tasks.debugs.Return.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:268},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:385},{level:3,title:"format",slug:"format",normalizedTitle:"format",charIndex:334},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:494},{level:3,title:"value",slug:"value",normalizedTitle:"value",charIndex:100},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:557}],headersStr:"Examples Properties format Outputs value Definitions",content:'Return\n\ntype: "io.kestra.core.tasks.debugs.Return"\n\n\n> Simple debugging task that return a renderer value.\n\nThis task is mostly useful for debugging purpose.\n\nThis one allow you to see inputs or outputs variables for example, or to debug some templated functions.\n\n\n# Examples\n\nid: "return"\ntype: "io.kestra.core.tasks.debugs.Return"\nformat: "{{task.id}} > {{taskrun.startDate}}"\n\n\n\n# Properties\n\n\n# format\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The templatized string to render\n\n\n# Outputs\n\n\n# value\n\n * Type: string\n\n> The generated string\n\n\n# Definitions',normalizedContent:'return\n\ntype: "io.kestra.core.tasks.debugs.return"\n\n\n> simple debugging task that return a renderer value.\n\nthis task is mostly useful for debugging purpose.\n\nthis one allow you to see inputs or outputs variables for example, or to debug some templated functions.\n\n\n# examples\n\nid: "return"\ntype: "io.kestra.core.tasks.debugs.return"\nformat: "{{task.id}} > {{taskrun.startdate}}"\n\n\n\n# properties\n\n\n# format\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the templatized string to render\n\n\n# outputs\n\n\n# value\n\n * type: string\n\n> the generated string\n\n\n# definitions',charsets:{}},{title:"Counts",frontmatter:{title:"Counts",editLink:!1,description:"List execution counts for a list of flow",icon:"PHN2ZyBoZWlnaHQ9JzMwMHB4JyB3aWR0aD0nMzAwcHgnICBmaWxsPSIjMEQxNTIzIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB2ZXJzaW9uPSIxLjEiIHg9IjBweCIgeT0iMHB4IiB2aWV3Qm94PSIwIDAgNjQgNjQiIHN0eWxlPSJlbmFibGUtYmFja2dyb3VuZDpuZXcgMCAwIDY0IDY0OyIgeG1sOnNwYWNlPSJwcmVzZXJ2ZSI+PGc+PHJlY3QgeD0iMTMuMzUiIHk9IjMyLjI0IiB3aWR0aD0iNS44NSIgaGVpZ2h0PSI1Ljg1Ij48L3JlY3Q+PHJlY3QgeD0iMTMuMzUiIHk9IjQ4LjMyIiB3aWR0aD0iNS44NSIgaGVpZ2h0PSI1Ljg1Ij48L3JlY3Q+PHBhdGggZD0iTTUuMzYsMHY2NGg1My4yOWwwLTY0SDUuMzZ6IE0yMS42NSw1NS4zOWMwLDAuNjctMC41NSwxLjIyLTEuMjIsMS4yMmgtOC4zYy0wLjY4LDAtMS4yMi0wLjU1LTEuMjItMS4yMnYtOC4zICAgYzAtMC42NywwLjU1LTEuMjIsMS4yMi0xLjIyaDguM2MwLjY3LDAsMS4yMiwwLjU1LDEuMjIsMS4yMlY1NS4zOXogTTIxLjY1LDM5LjMyYzAsMC42Ny0wLjU1LDEuMjItMS4yMiwxLjIyaC04LjMgICBjLTAuNjgsMC0xLjIyLTAuNTUtMS4yMi0xLjIydi04LjNjMC0wLjY3LDAuNTUtMS4yMiwxLjIyLTEuMjJoOC4zYzAuNjcsMCwxLjIyLDAuNTUsMS4yMiwxLjIyVjM5LjMyeiBNMzcuODMsNTUuMTIgICBjMCwwLjY3LTAuNTUsMS4yMi0xLjIyLDEuMjJoLTguMjljLTAuNjgsMC0xLjIyLTAuNTUtMS4yMi0xLjIydi04LjNjMC0wLjY3LDAuNTUtMS4yMiwxLjIyLTEuMjJoOC4yOWMwLjY3LDAsMS4yMiwwLjU1LDEuMjIsMS4yMiAgIFY1NS4xMnogTTM3LjgzLDM5LjA1YzAsMC42Ny0wLjU1LDEuMjItMS4yMiwxLjIyaC04LjI5Yy0wLjY4LDAtMS4yMi0wLjU1LTEuMjItMS4yMnYtOC4zYzAtMC42NywwLjU1LTEuMjIsMS4yMi0xLjIyaDguMjkgICBjMC42NywwLDEuMjIsMC41NSwxLjIyLDEuMjJWMzkuMDV6IE01My40Niw1NS4zOWMwLDAuNjctMC41NSwxLjIyLTEuMjIsMS4yMmgtOC4zYy0wLjY4LDAtMS4yMi0wLjU1LTEuMjItMS4yMnYtOC4zICAgYzAtMC42NywwLjU1LTEuMjIsMS4yMi0xLjIyaDguMjljMC42OCwwLDEuMjIsMC41NSwxLjIyLDEuMjJWNTUuMzl6IE01My40NiwzOS4zMmMwLDAuNjctMC41NSwxLjIyLTEuMjIsMS4yMmgtOC4zICAgYy0wLjY4LDAtMS4yMi0wLjU1LTEuMjItMS4yMnYtOC4zYzAtMC42NywwLjU1LTEuMjIsMS4yMi0xLjIyaDguMjljMC42OCwwLDEuMjIsMC41NSwxLjIyLDEuMjJWMzkuMzJ6IE01My44OSwyMi42MyAgIGMwLDAuNjctMC41NSwxLjIyLTEuMjIsMS4yMkgxMS43Yy0wLjY4LDAtMS4yMi0wLjU1LTEuMjItMS4yMlY1Ljk3YzAtMC42OCwwLjU1LTEuMjIsMS4yMi0xLjIyaDQwLjk2YzAuNjgsMCwxLjIyLDAuNTUsMS4yMiwxLjIyICAgVjIyLjYzeiI+PC9wYXRoPjxyZWN0IHg9IjI5LjUzIiB5PSIzMS45NyIgd2lkdGg9IjUuODUiIGhlaWdodD0iNS44NSI+PC9yZWN0PjxyZWN0IHg9IjI5LjUzIiB5PSI0OC4wNCIgd2lkdGg9IjUuODUiIGhlaWdodD0iNS44NSI+PC9yZWN0PjxyZWN0IHg9IjQ1LjE2IiB5PSI0OC4zMiIgd2lkdGg9IjUuODUiIGhlaWdodD0iNS44NSI+PC9yZWN0PjxyZWN0IHg9IjEyLjkyIiB5PSI3LjIiIHdpZHRoPSIzOC41MiIgaGVpZ2h0PSIxNC4yMiI+PC9yZWN0PjxyZWN0IHg9IjQ1LjE2IiB5PSIzMi4yNCIgd2lkdGg9IjUuODUiIGhlaWdodD0iNS44NSI+PC9yZWN0PjwvZz48L3N2Zz4=",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Counts"},{property:"og:description",content:"List execution counts for a list of flow | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/core/tasks/executions/io.kestra.core.tasks.executions.Counts.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Counts"},{name:"twitter:description",content:"List execution counts for a list of flow | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/core/tasks/executions/io.kestra.core.tasks.executions.Counts.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/core/tasks/executions/io.kestra.core.tasks.executions.Counts.html",relativePath:"plugins/core/tasks/executions/io.kestra.core.tasks.executions.Counts.md",key:"v-19408c3a",path:"/plugins/core/tasks/executions/io.kestra.core.tasks.executions.Counts.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:182},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:1291},{level:3,title:"endDate",slug:"enddate",normalizedTitle:"enddate",charIndex:1306},{level:3,title:"expression",slug:"expression",normalizedTitle:"expression",charIndex:384},{level:3,title:"flows",slug:"flows",normalizedTitle:"flows",charIndex:419},{level:3,title:"startDate",slug:"startdate",normalizedTitle:"startdate",charIndex:486},{level:3,title:"states",slug:"states",normalizedTitle:"states",charIndex:1891},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:2e3},{level:3,title:"results",slug:"results",normalizedTitle:"results",charIndex:1120},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:2059},{level:3,title:"Result",slug:"result",normalizedTitle:"result",charIndex:2048},{level:3,title:"Flow",slug:"flow",normalizedTitle:"flow",charIndex:824}],headersStr:"Examples Properties endDate expression flows startDate states Outputs results Definitions Result Flow",content:'Counts\n\ntype: "io.kestra.core.tasks.executions.Counts"\n\n\n> List execution counts for a list of flow\n\nMostly use for send an alert if a conditions is meet about execution counts.\n\n\n# Examples\n\n> Send a slack notification if no execution for a flow on last 24h\n\nid: executions-count\nnamespace: io.kestra.tests\n\ntasks:\n  - id: counts\n    type: io.kestra.core.tasks.executions.Counts\n    expression: "{{ count == 0 }}"\n    flows:\n      - namespace: io.kestra.tests\n        flowId: logs\n    startDate: "{{ now() | dateAdd(-1, \'DAYS\') }}"\n  - id: each_parallel\n    type: io.kestra.core.tasks.flows.EachParallel\n    tasks:\n      - id: slack_incoming_webhook\n        type: io.kestra.plugin.notifications.slack.SlackIncomingWebhook\n        payload: |\n          {\n            "channel": "#run-channel",\n            "text": ":warning: Flow <code v-pre>{{  jq taskrun.value \'.namespace\' true  }}</code>.<code v-pre>{{  jq taskrun.value \'.flowId\' true  }}</code> has no execution on last 24h !"\n          }\n        url: "https://hooks.slack.com/services/T00000000/B00000000/XXXXXXXXXXXXXXXXXXXXXXXX"\n    value: "{{ jq outputs.counts.results \'. | select(. != null) | .[]\' }}"\n\ntriggers:\n  - id: schedule\n    type: io.kestra.core.models.triggers.types.Schedule\n    backfill: {}\n    cron: "0 4 * * * "\n\n\n\n# Properties\n\n\n# endDate\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The end date\n\n\n# expression\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The expression against each flows to look at\n\nThe expression is as handlebars expression must return true in order to keep the current line\nsome examples:\n\n * {{ eq count 0 }}: no execution found\n * {{ gte count 5 }}: more than 5 executions\n\n\n# flows\n\n * Type: array\n * SubType: Flow\n * Dynamic: ❌\n * Required: ✔️\n * Min items: 1\n\n> A list of flows to be filtered\n\n\n# startDate\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The start date\n\n\n# states\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> A list of state to be filtered\n\n\n# Outputs\n\n\n# results\n\n * Type: array\n * SubType: Result\n\n\n# Definitions\n\n\n# Result\n\n# count\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n# flowId\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# namespace\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n\n# Flow\n\n# flowId\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n\n# namespace\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️',normalizedContent:'counts\n\ntype: "io.kestra.core.tasks.executions.counts"\n\n\n> list execution counts for a list of flow\n\nmostly use for send an alert if a conditions is meet about execution counts.\n\n\n# examples\n\n> send a slack notification if no execution for a flow on last 24h\n\nid: executions-count\nnamespace: io.kestra.tests\n\ntasks:\n  - id: counts\n    type: io.kestra.core.tasks.executions.counts\n    expression: "{{ count == 0 }}"\n    flows:\n      - namespace: io.kestra.tests\n        flowid: logs\n    startdate: "{{ now() | dateadd(-1, \'days\') }}"\n  - id: each_parallel\n    type: io.kestra.core.tasks.flows.eachparallel\n    tasks:\n      - id: slack_incoming_webhook\n        type: io.kestra.plugin.notifications.slack.slackincomingwebhook\n        payload: |\n          {\n            "channel": "#run-channel",\n            "text": ":warning: flow <code v-pre>{{  jq taskrun.value \'.namespace\' true  }}</code>.<code v-pre>{{  jq taskrun.value \'.flowid\' true  }}</code> has no execution on last 24h !"\n          }\n        url: "https://hooks.slack.com/services/t00000000/b00000000/xxxxxxxxxxxxxxxxxxxxxxxx"\n    value: "{{ jq outputs.counts.results \'. | select(. != null) | .[]\' }}"\n\ntriggers:\n  - id: schedule\n    type: io.kestra.core.models.triggers.types.schedule\n    backfill: {}\n    cron: "0 4 * * * "\n\n\n\n# properties\n\n\n# enddate\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the end date\n\n\n# expression\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the expression against each flows to look at\n\nthe expression is as handlebars expression must return true in order to keep the current line\nsome examples:\n\n * {{ eq count 0 }}: no execution found\n * {{ gte count 5 }}: more than 5 executions\n\n\n# flows\n\n * type: array\n * subtype: flow\n * dynamic: ❌\n * required: ✔️\n * min items: 1\n\n> a list of flows to be filtered\n\n\n# startdate\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the start date\n\n\n# states\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> a list of state to be filtered\n\n\n# outputs\n\n\n# results\n\n * type: array\n * subtype: result\n\n\n# definitions\n\n\n# result\n\n# count\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n# flowid\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# namespace\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n\n# flow\n\n# flowid\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n\n# namespace\n\n * type: string\n * dynamic: ❓\n * required: ✔️',charsets:{cjk:!0}},{title:"AllowFailure",frontmatter:{title:"AllowFailure",editLink:!1,description:"Allow a task to failed",icon:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB3aWR0aD0iMjQiIGhlaWdodD0iMjQiCiAgICAgcHJlc2VydmVBc3BlY3RSYXRpbz0ieE1pZFlNaWQgbWVldCIgdmlld0JveD0iMCAwIDI0IDI0IgogICAgIHN0eWxlPSItbXMtdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTsgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpOyB0cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpOyI+CiAgICA8cGF0aAogICAgICAgIGQ9Ik0yMCAySDRjLTEuMSAwLTIgLjktMiAydjE4bDQtNGgxNGMxLjEgMCAyLS45IDItMlY0YzAtMS4xLS45LTItMi0yem0wIDE0SDUuMTdMNCAxNy4xN1Y0aDE2djEyem0tOS00aDJ2MmgtMnptMC02aDJ2NGgtMnoiCiAgICAgICAgZmlsbD0iIzBEMTUyMyIvPgo8L3N2Zz4=",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"AllowFailure"},{property:"og:description",content:"Allow a task to failed | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/core/tasks/flows/io.kestra.core.tasks.flows.AllowFailure.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"AllowFailure"},{name:"twitter:description",content:"Allow a task to failed | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/core/tasks/flows/io.kestra.core.tasks.flows.AllowFailure.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/core/tasks/flows/io.kestra.core.tasks.flows.AllowFailure.html",relativePath:"plugins/core/tasks/flows/io.kestra.core.tasks.flows.AllowFailure.md",key:"v-23bac36d",path:"/plugins/core/tasks/flows/io.kestra.core.tasks.flows.AllowFailure.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:186},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:539},{level:3,title:"errors",slug:"errors",normalizedTitle:"errors",charIndex:554},{level:3,title:"tasks",slug:"tasks",normalizedTitle:"tasks",charIndex:36},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:785},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:797},{level:3,title:"Task-2",slug:"task-2",normalizedTitle:"task-2",charIndex:589},{level:3,title:"Task-1",slug:"task-1",normalizedTitle:"task-1",charIndex:824}],headersStr:"Examples Properties errors tasks Outputs Definitions Task-2 Task-1",content:'AllowFailure\n\ntype: "io.kestra.core.tasks.flows.AllowFailure"\n\n\n> Allow a task to failed\n\nIf any child tasks failed, the flow will stop child tasks, but will continue the main flow.\n\n\n# Examples\n\nid: allow-failure\nnamespace: io.kestra.tests\n\ntasks:\n  - id: sequential\n    type: io.kestra.core.tasks.flows.AllowFailure\n    tasks:\n     - id: ko\n       type: io.kestra.core.tasks.scripts.Bash\n       commands:\n        - \'exit 1\'\n  - id: last\n    type: io.kestra.core.tasks.debugs.Return\n    format: "{{task.id}} > {{taskrun.startDate}}"\n\n\n\n# Properties\n\n\n# errors\n\n * Type: array\n * SubType: Task-2\n * Dynamic: ❓\n * Required: ❌\n\n> List of tasks to run if any tasks failed on this FlowableTask\n\n\n# tasks\n\n * Type: array\n * SubType: Task-2\n * Dynamic: ❓\n * Required: ✔️\n * Min items: 1\n\n\n# Outputs\n\n\n# Definitions\n\n\n# Task-2\n\n\n# Task-1',normalizedContent:'allowfailure\n\ntype: "io.kestra.core.tasks.flows.allowfailure"\n\n\n> allow a task to failed\n\nif any child tasks failed, the flow will stop child tasks, but will continue the main flow.\n\n\n# examples\n\nid: allow-failure\nnamespace: io.kestra.tests\n\ntasks:\n  - id: sequential\n    type: io.kestra.core.tasks.flows.allowfailure\n    tasks:\n     - id: ko\n       type: io.kestra.core.tasks.scripts.bash\n       commands:\n        - \'exit 1\'\n  - id: last\n    type: io.kestra.core.tasks.debugs.return\n    format: "{{task.id}} > {{taskrun.startdate}}"\n\n\n\n# properties\n\n\n# errors\n\n * type: array\n * subtype: task-2\n * dynamic: ❓\n * required: ❌\n\n> list of tasks to run if any tasks failed on this flowabletask\n\n\n# tasks\n\n * type: array\n * subtype: task-2\n * dynamic: ❓\n * required: ✔️\n * min items: 1\n\n\n# outputs\n\n\n# definitions\n\n\n# task-2\n\n\n# task-1',charsets:{}},{title:"EachParallel",frontmatter:{title:"EachParallel",editLink:!1,description:"Execute a tasks for a list of value in parallel.",icon:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB3aWR0aD0iMjAiIGhlaWdodD0iMjAiCiAgICAgcHJlc2VydmVBc3BlY3RSYXRpbz0ieE1pZFlNaWQgbWVldCIgdmlld0JveD0iMCAwIDIwIDIwIgogICAgIHN0eWxlPSItbXMtdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTsgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpOyB0cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpOyI+CiAgICA8cGF0aAogICAgICAgIGQ9Ik0xOCAxNC44MjRWMTIuNUEzLjUgMy41IDAgMCAwIDE0LjUgOWgtMkExLjUgMS41IDAgMCAxIDExIDcuNVY1LjE3NkEyLjM5NSAyLjM5NSAwIDAgMCAxMi40IDNhMi40IDIuNCAwIDEgMC00LjggMGMwIC45NjcuNTc2IDEuNzk2IDEuNCAyLjE3NlY3LjVBMS41IDEuNSAwIDAgMSA3LjUgOWgtMkEzLjUgMy41IDAgMCAwIDIgMTIuNXYyLjMyNEEyLjM5NiAyLjM5NiAwIDAgMCAzIDE5LjRhMi4zOTcgMi4zOTcgMCAwIDAgMS00LjU3NlYxMi41QTEuNSAxLjUgMCAwIDEgNS41IDExaDJjLjUzOSAwIDEuMDQ0LS4xMzIgMS41LS4zNXY0LjE3NGEyLjM5NiAyLjM5NiAwIDAgMCAxIDQuNTc2YTIuMzk3IDIuMzk3IDAgMCAwIDEtNC41NzZWMTAuNjVjLjQ1Ni4yMTguOTYxLjM1IDEuNS4zNWgyYTEuNSAxLjUgMCAwIDEgMS41IDEuNXYyLjMyNEEyLjM5NSAyLjM5NSAwIDAgMCAxNC42IDE3YTIuNCAyLjQgMCAxIDAgNC44IDBjMC0uOTY3LS41NzUtMS43OTYtMS40LTIuMTc2ek0xMCAxLjYxNWExLjM4NCAxLjM4NCAwIDEgMSAwIDIuNzY4YTEuMzg0IDEuMzg0IDAgMCAxIDAtMi43Njh6bS03IDE2Ljc3YTEuMzg1IDEuMzg1IDAgMSAxIDAtMi43N2ExLjM4NSAxLjM4NSAwIDAgMSAwIDIuNzd6bTcgMGExLjM4NSAxLjM4NSAwIDEgMSAwLTIuNzdhMS4zODUgMS4zODUgMCAwIDEgMCAyLjc3em03IDBhMS4zODUgMS4zODUgMCAxIDEgMC0yLjc3YTEuMzg1IDEuMzg1IDAgMCAxIDAgMi43N3oiCiAgICAgICAgZmlsbD0iIzBEMTUyMyIvPgo8L3N2Zz4=",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"EachParallel"},{property:"og:description",content:"Execute a tasks for a list of value in parallel. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/core/tasks/flows/io.kestra.core.tasks.flows.EachParallel.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"EachParallel"},{name:"twitter:description",content:"Execute a tasks for a list of value in parallel. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/core/tasks/flows/io.kestra.core.tasks.flows.EachParallel.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/core/tasks/flows/io.kestra.core.tasks.flows.EachParallel.html",relativePath:"plugins/core/tasks/flows/io.kestra.core.tasks.flows.EachParallel.md",key:"v-1b25d55f",path:"/plugins/core/tasks/flows/io.kestra.core.tasks.flows.EachParallel.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:661},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:1522},{level:3,title:"concurrent",slug:"concurrent",normalizedTitle:"concurrent",charIndex:574},{level:3,title:"errors",slug:"errors",normalizedTitle:"errors",charIndex:1736},{level:3,title:"tasks",slug:"tasks",normalizedTitle:"tasks",charIndex:36},{level:3,title:"value",slug:"value",normalizedTitle:"value",charIndex:96},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:2024},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:2036},{level:3,title:"Task-2",slug:"task-2",normalizedTitle:"task-2",charIndex:1771},{level:3,title:"Task-1",slug:"task-1",normalizedTitle:"task-1",charIndex:2063}],headersStr:"Examples Properties concurrent errors tasks value Outputs Definitions Task-2 Task-1",content:'EachParallel\n\ntype: "io.kestra.core.tasks.flows.EachParallel"\n\n\n> Execute a tasks for a list of value in parallel.\n\nFor each value, tasks will be executed\nThe value must be valid json string representing an arrays, like ["value1", "value2"] or [{"key":"value1"}, {"key":"value2"}]\nThe current value is available on vars {{ taskrun.value }}.\nThe task list will be executed in parallel, for example if you have a 3 value with each one 2 tasks, all the 6 tasks will be computed in parallel with out any garantee on the order.\nIf you want to have each value in parallel, but no concurrent task for each value, you need to wrap the tasks with a Sequential tasks\n\n\n# Examples\n\nid: "each_parallel"\ntype: "io.kestra.core.tasks.flows.EachParallel"\nvalue: \'["value 1", "value 2", "value 3"]\'\ntasks:\n  - id: each-value\n    type: io.kestra.core.tasks.debugs.Return\n    format: "{{ task.id }} with current value \'{{ taskrun.value }}\'"\n\n\n> Handling each value in parralel but only 1 child task for each value at the same time.\n\nid: "each_parallel"\ntype: "io.kestra.core.tasks.flows.EachParallel"\nvalue: \'["value 1", "value 2", "value 3"]\'\ntasks:\n  - id: seq\n    type: io.kestra.core.tasks.flows.Sequential\n    tasks:\n    - id: t1\n      type: io.kestra.core.tasks.scripts.Bash\n      commands:\n        - \'echo "{{task.id}} > {{ parents[0].taskrun.value }}\n        - \'sleep 1\'\n    - id: t2\n      type: io.kestra.core.tasks.scripts.Bash\n      commands:\n        - \'echo "{{task.id}} > {{ parents[0].taskrun.value }}\n        - \'sleep 1\'\n\n\n\n# Properties\n\n\n# concurrent\n\n * Type: integer\n * Dynamic: ❓\n * Required: ✔️\n * Default: 0\n\n> Number of concurrent parrallels tasks\n\nIf the value is 0, no limit exist and all the tasks will start at the same time\n\n\n# errors\n\n * Type: array\n * SubType: Task-2\n * Dynamic: ❓\n * Required: ❌\n\n> List of tasks to run if any tasks failed on this FlowableTask\n\n\n# tasks\n\n * Type: array\n * SubType: Task-2\n * Dynamic: ❓\n * Required: ❌\n\n\n# value\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n * Min length: 1\n\n\n# Outputs\n\n\n# Definitions\n\n\n# Task-2\n\n\n# Task-1',normalizedContent:'eachparallel\n\ntype: "io.kestra.core.tasks.flows.eachparallel"\n\n\n> execute a tasks for a list of value in parallel.\n\nfor each value, tasks will be executed\nthe value must be valid json string representing an arrays, like ["value1", "value2"] or [{"key":"value1"}, {"key":"value2"}]\nthe current value is available on vars {{ taskrun.value }}.\nthe task list will be executed in parallel, for example if you have a 3 value with each one 2 tasks, all the 6 tasks will be computed in parallel with out any garantee on the order.\nif you want to have each value in parallel, but no concurrent task for each value, you need to wrap the tasks with a sequential tasks\n\n\n# examples\n\nid: "each_parallel"\ntype: "io.kestra.core.tasks.flows.eachparallel"\nvalue: \'["value 1", "value 2", "value 3"]\'\ntasks:\n  - id: each-value\n    type: io.kestra.core.tasks.debugs.return\n    format: "{{ task.id }} with current value \'{{ taskrun.value }}\'"\n\n\n> handling each value in parralel but only 1 child task for each value at the same time.\n\nid: "each_parallel"\ntype: "io.kestra.core.tasks.flows.eachparallel"\nvalue: \'["value 1", "value 2", "value 3"]\'\ntasks:\n  - id: seq\n    type: io.kestra.core.tasks.flows.sequential\n    tasks:\n    - id: t1\n      type: io.kestra.core.tasks.scripts.bash\n      commands:\n        - \'echo "{{task.id}} > {{ parents[0].taskrun.value }}\n        - \'sleep 1\'\n    - id: t2\n      type: io.kestra.core.tasks.scripts.bash\n      commands:\n        - \'echo "{{task.id}} > {{ parents[0].taskrun.value }}\n        - \'sleep 1\'\n\n\n\n# properties\n\n\n# concurrent\n\n * type: integer\n * dynamic: ❓\n * required: ✔️\n * default: 0\n\n> number of concurrent parrallels tasks\n\nif the value is 0, no limit exist and all the tasks will start at the same time\n\n\n# errors\n\n * type: array\n * subtype: task-2\n * dynamic: ❓\n * required: ❌\n\n> list of tasks to run if any tasks failed on this flowabletask\n\n\n# tasks\n\n * type: array\n * subtype: task-2\n * dynamic: ❓\n * required: ❌\n\n\n# value\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n * min length: 1\n\n\n# outputs\n\n\n# definitions\n\n\n# task-2\n\n\n# task-1',charsets:{}},{title:"EachSequential",frontmatter:{title:"EachSequential",editLink:!1,description:"Execute a tasks for a list of value sequentially",icon:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB3aWR0aD0iMjQiIGhlaWdodD0iMjQiCiAgICAgcHJlc2VydmVBc3BlY3RSYXRpbz0ieE1pZFlNaWQgbWVldCIgdmlld0JveD0iMCAwIDI0IDI0IgogICAgIHN0eWxlPSItbXMtdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTsgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpOyB0cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpOyI+CiAgICA8cGF0aAogICAgICAgIGQ9Ik0xNyAxNmEyLjk5IDIuOTkgMCAwIDAtMi44MTYgMkgxMWMtMS42NTQgMC0zLTEuMzQ2LTMtM3YtMy4wMjVBNC45NTQgNC45NTQgMCAwIDAgMTEgMTNoMy4xODRBMi45OSAyLjk5IDAgMCAwIDE3IDE1YTMgMyAwIDEgMCAwLTZhMi45OSAyLjk5IDAgMCAwLTIuODE2IDJIMTFjLTEuNjU0IDAtMy0xLjM0Ni0zLTN2LS4xODRBMi45OSAyLjk5IDAgMCAwIDEwIDVhMyAzIDAgMSAwLTYgMGEyLjk5IDIuOTkgMCAwIDAgMiAyLjgxNlYxNWMwIDIuNzU3IDIuMjQzIDUgNSA1aDMuMTg0QTIuOTkgMi45OSAwIDAgMCAxNyAyMmEzIDMgMCAxIDAgMC02em0wLTVhMS4wMDEgMS4wMDEgMCAxIDEtMSAxYzAtLjU1MS40NDgtMSAxLTF6TTcgNGExLjAwMSAxLjAwMSAwIDEgMS0xIDFjMC0uNTUxLjQ0OC0xIDEtMXptMTAgMTZhMS4wMDEgMS4wMDEgMCAwIDEgMC0yYTEuMDAxIDEuMDAxIDAgMCAxIDAgMnoiCiAgICAgICAgZmlsbD0iIzBEMTUyMyIvPgo8L3N2Zz4=",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"EachSequential"},{property:"og:description",content:"Execute a tasks for a list of value sequentially | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/core/tasks/flows/io.kestra.core.tasks.flows.EachSequential.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"EachSequential"},{name:"twitter:description",content:"Execute a tasks for a list of value sequentially | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/core/tasks/flows/io.kestra.core.tasks.flows.EachSequential.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/core/tasks/flows/io.kestra.core.tasks.flows.EachSequential.html",relativePath:"plugins/core/tasks/flows/io.kestra.core.tasks.flows.EachSequential.md",key:"v-1827886f",path:"/plugins/core/tasks/flows/io.kestra.core.tasks.flows.EachSequential.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:349},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:619},{level:3,title:"errors",slug:"errors",normalizedTitle:"errors",charIndex:634},{level:3,title:"tasks",slug:"tasks",normalizedTitle:"tasks",charIndex:38},{level:3,title:"value",slug:"value",normalizedTitle:"value",charIndex:100},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:939},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:951},{level:3,title:"Task-2",slug:"task-2",normalizedTitle:"task-2",charIndex:669},{level:3,title:"Task-1",slug:"task-1",normalizedTitle:"task-1",charIndex:978}],headersStr:"Examples Properties errors tasks value Outputs Definitions Task-2 Task-1",content:'EachSequential\n\ntype: "io.kestra.core.tasks.flows.EachSequential"\n\n\n> Execute a tasks for a list of value sequentially\n\nFor each value, tasks will be executed\nThe value must be valid json string representing an arrays, like ["value1", "value2"] or [{"key":"value1"}, {"key":"value2"}]\nThe current value is available on vars {{ taskrun.value }}.\n\n\n# Examples\n\nid: "each_sequential"\ntype: "io.kestra.core.tasks.flows.EachSequential"\nvalue: \'["value 1", "value 2", "value 3"]\'\ntasks:\n  - id: each-value\n    type: io.kestra.core.tasks.debugs.Return\n    format: "{{ task.id }} with current value \'{{ taskrun.value }}\'"\n\n\n\n# Properties\n\n\n# errors\n\n * Type: array\n * SubType: Task-2\n * Dynamic: ❓\n * Required: ❌\n\n> List of tasks to run if any tasks failed on this FlowableTask\n\n\n# tasks\n\n * Type: array\n * SubType: Task-2\n * Dynamic: ❓\n * Required: ✔️\n * Min items: 1\n\n\n# value\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n * Min length: 1\n\n\n# Outputs\n\n\n# Definitions\n\n\n# Task-2\n\n\n# Task-1',normalizedContent:'eachsequential\n\ntype: "io.kestra.core.tasks.flows.eachsequential"\n\n\n> execute a tasks for a list of value sequentially\n\nfor each value, tasks will be executed\nthe value must be valid json string representing an arrays, like ["value1", "value2"] or [{"key":"value1"}, {"key":"value2"}]\nthe current value is available on vars {{ taskrun.value }}.\n\n\n# examples\n\nid: "each_sequential"\ntype: "io.kestra.core.tasks.flows.eachsequential"\nvalue: \'["value 1", "value 2", "value 3"]\'\ntasks:\n  - id: each-value\n    type: io.kestra.core.tasks.debugs.return\n    format: "{{ task.id }} with current value \'{{ taskrun.value }}\'"\n\n\n\n# properties\n\n\n# errors\n\n * type: array\n * subtype: task-2\n * dynamic: ❓\n * required: ❌\n\n> list of tasks to run if any tasks failed on this flowabletask\n\n\n# tasks\n\n * type: array\n * subtype: task-2\n * dynamic: ❓\n * required: ✔️\n * min items: 1\n\n\n# value\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n * min length: 1\n\n\n# outputs\n\n\n# definitions\n\n\n# task-2\n\n\n# task-1',charsets:{}},{title:"Flow",frontmatter:{title:"Flow",editLink:!1,description:"Trigger another flow",icon:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB3aWR0aD0iMzIiIGhlaWdodD0iMzIiCiAgICAgcHJlc2VydmVBc3BlY3RSYXRpbz0ieE1pZFlNaWQgbWVldCIgdmlld0JveD0iMCAwIDMyIDMyIgogICAgIHN0eWxlPSItbXMtdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTsgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpOyB0cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpOyI+CiAgICA8ZGVmcy8+CiAgICA8cGF0aCBkPSJNMjAgMjRoLTR2Mmg0djNoOHYtOGgtOHptMi0xaDR2NGgtNHoiIGZpbGw9IiMwRDE1MjMiLz4KICAgIDxwYXRoIGQ9Ik00IDIwdjJoNC41ODZMMiAyOC41ODZMMy40MTQgMzBMMTAgMjMuNDE0VjI4aDJ2LThINHoiIGZpbGw9IiMwRDE1MjMiLz4KICAgIDxwYXRoCiAgICAgICAgZD0iTTI0IDVhMy45OTYgMy45OTYgMCAwIDAtMy44NTggM0gxNHYyaDYuMTQyYTMuOTQgMy45NCAwIDAgMCAuNDI1IDEuMDE5TDE0IDE3LjU4NkwxNS40MTQgMTlsNi41NjctNi41NjdBMy45NTIgMy45NTIgMCAwIDAgMjQgMTNhNCA0IDAgMCAwIDAtOHptMCA2YTIgMiAwIDEgMSAyLTJhMi4wMDIgMi4wMDIgMCAwIDEtMiAyeiIKICAgICAgICBmaWxsPSIjMEQxNTIzIi8+CiAgICA8cGF0aCBkPSJNOS42OTMgMTIuNzVhNSA1IDAgMCAxIDAtNy41bDEuMzI0IDEuNWEzIDMgMCAwIDAgMCA0LjUwMXoiIGZpbGw9IiMwRDE1MjMiLz4KICAgIDxwYXRoIGQ9Ik03LjA0NyAxNS43NTFhOSA5IDAgMCAxIDAtMTMuNTAxbDEuMzI0IDEuNWE3IDcgMCAwIDAgMCAxMC41MDF6IiBmaWxsPSIjMEQxNTIzIi8+Cjwvc3ZnPg==",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Flow"},{property:"og:description",content:"Trigger another flow | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/core/tasks/flows/io.kestra.core.tasks.flows.Flow.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Flow"},{name:"twitter:description",content:"Trigger another flow | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/core/tasks/flows/io.kestra.core.tasks.flows.Flow.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/core/tasks/flows/io.kestra.core.tasks.flows.Flow.html",relativePath:"plugins/core/tasks/flows/io.kestra.core.tasks.flows.Flow.md",key:"v-3fc91bd3",path:"/plugins/core/tasks/flows/io.kestra.core.tasks.flows.Flow.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:75},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:326},{level:3,title:"flowId",slug:"flowid",normalizedTitle:"flowid",charIndex:220},{level:3,title:"inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:241},{level:3,title:"namespace",slug:"namespace",normalizedTitle:"namespace",charIndex:193},{level:3,title:"outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:261},{level:3,title:"revision",slug:"revision",normalizedTitle:"revision",charIndex:844},{level:3,title:"transmitFailed",slug:"transmitfailed",normalizedTitle:"transmitfailed",charIndex:995},{level:3,title:"wait",slug:"wait",normalizedTitle:"wait",charIndex:309},{level:2,title:"Outputs",slug:"outputs-2",normalizedTitle:"outputs",charIndex:1437},{level:3,title:"executionId",slug:"executionid",normalizedTitle:"executionid",charIndex:1449},{level:3,title:"outputs",slug:"outputs-3",normalizedTitle:"outputs",charIndex:261},{level:3,title:"state",slug:"state",normalizedTitle:"state",charIndex:1599},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:1867}],headersStr:"Examples Properties flowId inputs namespace outputs revision transmitFailed wait Outputs executionId outputs state Definitions",content:'Flow\n\ntype: "io.kestra.core.tasks.flows.Flow"\n\n\n> Trigger another flow\n\n\n# Examples\n\n> Trigger another flow, passing some file and arguments\n\nid: "flow"\ntype: "io.kestra.core.tasks.flows.Flow"\nnamespace: io.kestra.tests\nflowId: my-sub-flows\ninputs:\n  file: "{{ outputs.my-task.files.resolver\' }}"\n  store: 12\nwait: false\n\n\n\n# Properties\n\n\n# flowId\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The flowId to trigger\n\n\n# inputs\n\n * Type: object\n * Dynamic: ✔️\n * Required: ❌\n\n> The input to pass to the triggered flow\n\n\n# namespace\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The namespace of the flow to trigger\n\n\n# outputs\n\n * Type: object\n * Dynamic: ✔️\n * Required: ❌\n\n> Extract outputs from triggered executions.\n\nAllow to specify key value (with value renderered), in order to extract any outputs from triggered execution.\n\n\n# revision\n\n * Type: integer\n * Dynamic: ✔️\n * Required: ❌\n\n> The revision of the flow you want to trigger\n\nBy default, we trigger the last version.\n\n\n# transmitFailed\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n * Default: false\n\n> Failed the current execution if the waited execution is failed or killed.\n\nwait need to be true to make it work\n\n\n# wait\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n * Default: false\n\n> Wait the end of the execution.\n\nBy default, we don\'t wait till the end of the flow, if you set to true, we wait the end of the trigger flow before continue this one.\n\n\n# Outputs\n\n\n# executionId\n\n * Type: string\n\n> The id of the execution trigger.\n\n\n# outputs\n\n * Type: object\n\n> The extracted outputs from triggered executions.\n\n\n# state\n\n * Type: string\n\n * Possible Values:\n   \n   * CREATED\n   * RUNNING\n   * PAUSED\n   * RESTARTED\n   * KILLING\n   * SUCCESS\n   * WARNING\n   * FAILED\n   * KILLED\n\n> The state of the execution trigger.\n\nOnly available if the execution is waited with wait options\n\n\n# Definitions',normalizedContent:'flow\n\ntype: "io.kestra.core.tasks.flows.flow"\n\n\n> trigger another flow\n\n\n# examples\n\n> trigger another flow, passing some file and arguments\n\nid: "flow"\ntype: "io.kestra.core.tasks.flows.flow"\nnamespace: io.kestra.tests\nflowid: my-sub-flows\ninputs:\n  file: "{{ outputs.my-task.files.resolver\' }}"\n  store: 12\nwait: false\n\n\n\n# properties\n\n\n# flowid\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the flowid to trigger\n\n\n# inputs\n\n * type: object\n * dynamic: ✔️\n * required: ❌\n\n> the input to pass to the triggered flow\n\n\n# namespace\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the namespace of the flow to trigger\n\n\n# outputs\n\n * type: object\n * dynamic: ✔️\n * required: ❌\n\n> extract outputs from triggered executions.\n\nallow to specify key value (with value renderered), in order to extract any outputs from triggered execution.\n\n\n# revision\n\n * type: integer\n * dynamic: ✔️\n * required: ❌\n\n> the revision of the flow you want to trigger\n\nby default, we trigger the last version.\n\n\n# transmitfailed\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n * default: false\n\n> failed the current execution if the waited execution is failed or killed.\n\nwait need to be true to make it work\n\n\n# wait\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n * default: false\n\n> wait the end of the execution.\n\nby default, we don\'t wait till the end of the flow, if you set to true, we wait the end of the trigger flow before continue this one.\n\n\n# outputs\n\n\n# executionid\n\n * type: string\n\n> the id of the execution trigger.\n\n\n# outputs\n\n * type: object\n\n> the extracted outputs from triggered executions.\n\n\n# state\n\n * type: string\n\n * possible values:\n   \n   * created\n   * running\n   * paused\n   * restarted\n   * killing\n   * success\n   * warning\n   * failed\n   * killed\n\n> the state of the execution trigger.\n\nonly available if the execution is waited with wait options\n\n\n# definitions',charsets:{}},{title:"Parallel",frontmatter:{title:"Parallel",editLink:!1,description:"Process task in parallel",icon:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB3aWR0aD0iMjAiIGhlaWdodD0iMjAiCiAgICAgcHJlc2VydmVBc3BlY3RSYXRpbz0ieE1pZFlNaWQgbWVldCIgdmlld0JveD0iMCAwIDIwIDIwIgogICAgIHN0eWxlPSItbXMtdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTsgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpOyB0cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpOyI+CiAgICA8cGF0aAogICAgICAgIGQ9Ik04LjQgNGEyLjQgMi40IDAgMSAwLTQuOCAwYzAgLjk2Ny41NzYgMS43OTYgMS40IDIuMTc2djcuNjQ5QTIuMzkzIDIuMzkzIDAgMCAwIDMuNiAxNmEyLjQgMi40IDAgMSAwIDQuOCAwYzAtLjk2Ny0uNTc2LTEuNzk2LTEuNC0yLjE3NlY2LjE3NkEyLjM5NiAyLjM5NiAwIDAgMCA4LjQgNHpNNy4zODQgMTZhMS4zODUgMS4zODUgMCAxIDEtMi43NyAwYTEuMzg1IDEuMzg1IDAgMCAxIDIuNzcgMHpNNiA1LjM4NWExLjM4NSAxLjM4NSAwIDEgMSAuMDAxLTIuNzdBMS4zODUgMS4zODUgMCAwIDEgNiA1LjM4NnptOSA4LjQzOVY2LjE3NkEyLjM5NSAyLjM5NSAwIDAgMCAxNi40IDRhMi40IDIuNCAwIDEgMC00LjggMGMwIC45NjcuNTc2IDEuNzk2IDEuNCAyLjE3NnY3LjY0OWEyLjM5NSAyLjM5NSAwIDAgMC0xLjQgMi4xNzZhMi40IDIuNCAwIDEgMCA0LjggMGMwLS45NjgtLjU3NS0xLjc5Ny0xLjQtMi4xNzd6TTEyLjYxNiA0YTEuMzg0IDEuMzg0IDAgMSAxIDIuNzY5IDBhMS4zODUgMS4zODUgMCAwIDEtMi43NjkgMHpNMTQgMTcuMzg1YTEuMzg1IDEuMzg1IDAgMSAxIDAtMi43N2ExLjM4NSAxLjM4NSAwIDAgMSAwIDIuNzd6IgogICAgICAgIGZpbGw9IiMwRDE1MjMiLz4KPC9zdmc+",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Parallel"},{property:"og:description",content:"Process task in parallel | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/core/tasks/flows/io.kestra.core.tasks.flows.Parallel.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Parallel"},{name:"twitter:description",content:"Process task in parallel | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/core/tasks/flows/io.kestra.core.tasks.flows.Parallel.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/core/tasks/flows/io.kestra.core.tasks.flows.Parallel.html",relativePath:"plugins/core/tasks/flows/io.kestra.core.tasks.flows.Parallel.md",key:"v-4162bd61",path:"/plugins/core/tasks/flows/io.kestra.core.tasks.flows.Parallel.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:181},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:657},{level:3,title:"concurrent",slug:"concurrent",normalizedTitle:"concurrent",charIndex:672},{level:3,title:"errors",slug:"errors",normalizedTitle:"errors",charIndex:871},{level:3,title:"tasks",slug:"tasks",normalizedTitle:"tasks",charIndex:32},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1085},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:1097},{level:3,title:"Task-2",slug:"task-2",normalizedTitle:"task-2",charIndex:906},{level:3,title:"Task-1",slug:"task-1",normalizedTitle:"task-1",charIndex:1124}],headersStr:"Examples Properties concurrent errors tasks Outputs Definitions Task-2 Task-1",content:'Parallel\n\ntype: "io.kestra.core.tasks.flows.Parallel"\n\n\n> Process task in parallel\n\nThis task processes tasks in parallel. It makes it convinient to process many tasks at once.\n\n\n# Examples\n\nid: parallel\nnamespace: io.kestra.tests\n\ntasks:\n  - id: parallel\n    type: io.kestra.core.tasks.flows.Parallel\n    tasks:\n      - id: 1st\n        type: io.kestra.core.tasks.debugs.Return\n        format: "{{task.id}} > {{taskrun.startDate}}"\n      - id: 2nd\n        type: io.kestra.core.tasks.debugs.Return\n        format: "{{task.id}} > {{taskrun.id}}"\n  - id: last\n    type: io.kestra.core.tasks.debugs.Return\n    format: "{{task.id}} > {{taskrun.startDate}}"\n\n\n\n# Properties\n\n\n# concurrent\n\n * Type: integer\n * Dynamic: ❓\n * Required: ✔️\n * Default: 0\n\n> Number of concurrent parrallels tasks\n\nIf the value is 0, no limit exist and all the tasks will start at the same time\n\n\n# errors\n\n * Type: array\n * SubType: Task-2\n * Dynamic: ❓\n * Required: ❌\n\n> List of tasks to run if any tasks failed on this FlowableTask\n\n\n# tasks\n\n * Type: array\n * SubType: Task-2\n * Dynamic: ❓\n * Required: ❌\n\n\n# Outputs\n\n\n# Definitions\n\n\n# Task-2\n\n\n# Task-1',normalizedContent:'parallel\n\ntype: "io.kestra.core.tasks.flows.parallel"\n\n\n> process task in parallel\n\nthis task processes tasks in parallel. it makes it convinient to process many tasks at once.\n\n\n# examples\n\nid: parallel\nnamespace: io.kestra.tests\n\ntasks:\n  - id: parallel\n    type: io.kestra.core.tasks.flows.parallel\n    tasks:\n      - id: 1st\n        type: io.kestra.core.tasks.debugs.return\n        format: "{{task.id}} > {{taskrun.startdate}}"\n      - id: 2nd\n        type: io.kestra.core.tasks.debugs.return\n        format: "{{task.id}} > {{taskrun.id}}"\n  - id: last\n    type: io.kestra.core.tasks.debugs.return\n    format: "{{task.id}} > {{taskrun.startdate}}"\n\n\n\n# properties\n\n\n# concurrent\n\n * type: integer\n * dynamic: ❓\n * required: ✔️\n * default: 0\n\n> number of concurrent parrallels tasks\n\nif the value is 0, no limit exist and all the tasks will start at the same time\n\n\n# errors\n\n * type: array\n * subtype: task-2\n * dynamic: ❓\n * required: ❌\n\n> list of tasks to run if any tasks failed on this flowabletask\n\n\n# tasks\n\n * type: array\n * subtype: task-2\n * dynamic: ❓\n * required: ❌\n\n\n# outputs\n\n\n# definitions\n\n\n# task-2\n\n\n# task-1',charsets:{}},{title:"Pause",frontmatter:{title:"Pause",editLink:!1,description:"Pause current execution and wait for a manual approval",icon:"PHN2ZyBoZWlnaHQ9JzMwMHB4JyB3aWR0aD0nMzAwcHgnICBmaWxsPSIjMEQxNTIzIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB4bWw6c3BhY2U9InByZXNlcnZlIiB2ZXJzaW9uPSIxLjEiIHN0eWxlPSJzaGFwZS1yZW5kZXJpbmc6Z2VvbWV0cmljUHJlY2lzaW9uO3RleHQtcmVuZGVyaW5nOmdlb21ldHJpY1ByZWNpc2lvbjtpbWFnZS1yZW5kZXJpbmc6b3B0aW1pemVRdWFsaXR5OyIgdmlld0JveD0iMCAwIDg0NyA4NDciIHg9IjBweCIgeT0iMHB4IiBmaWxsLXJ1bGU9ImV2ZW5vZGQiIGNsaXAtcnVsZT0iZXZlbm9kZCI+PGRlZnM+PHN0eWxlIHR5cGU9InRleHQvY3NzIj4KCiAgICAuZmlsMCB7ZmlsbDojMEQxNTIzfQoKICA8L3N0eWxlPjwvZGVmcz48Zz48cGF0aCBjbGFzcz0iZmlsMCIgZD0iTTE2IDQyM2MwLC0yMjUgMTgyLC00MDcgNDA3LC00MDcgMjI1LDAgNDA4LDE4MiA0MDgsNDA3IDAsMjI1IC0xODMsNDA4IC00MDgsNDA4IC0yMjUsMCAtNDA3LC0xODMgLTQwNywtNDA4em0yNjYgMTU5bDAgLTMxN2MwLC0xNCAxMSwtMjQgMjQsLTI0bDU5IDBjMTMsMCAyNCwxMCAyNCwyNGwwIDMxN2MwLDEzIC0xMSwyNCAtMjQsMjRsLTU5IDBjLTEzLDAgLTI0LC0xMSAtMjQsLTI0em0xNzYgMGwwIC0zMTdjMCwtMTQgMTEsLTI0IDI0LC0yNGw1OCAwYzE0LDAgMjQsMTAgMjQsMjRsMCAzMTdjMCwxMyAtMTAsMjQgLTI0LDI0bC01OCAwYy0xMywwIC0yNCwtMTEgLTI0LC0yNHoiPjwvcGF0aD48L2c+PC9zdmc+",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Pause"},{property:"og:description",content:"Pause current execution and wait for a manual approval | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/core/tasks/flows/io.kestra.core.tasks.flows.Pause.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Pause"},{name:"twitter:description",content:"Pause current execution and wait for a manual approval | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/core/tasks/flows/io.kestra.core.tasks.flows.Pause.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/core/tasks/flows/io.kestra.core.tasks.flows.Pause.html",relativePath:"plugins/core/tasks/flows/io.kestra.core.tasks.flows.Pause.md",key:"v-49f10763",path:"/plugins/core/tasks/flows/io.kestra.core.tasks.flows.Pause.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:111},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:473},{level:3,title:"errors",slug:"errors",normalizedTitle:"errors",charIndex:488},{level:3,title:"tasks",slug:"tasks",normalizedTitle:"tasks",charIndex:29},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:719},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:731},{level:3,title:"Task-2",slug:"task-2",normalizedTitle:"task-2",charIndex:523},{level:3,title:"Task-1",slug:"task-1",normalizedTitle:"task-1",charIndex:758}],headersStr:"Examples Properties errors tasks Outputs Definitions Task-2 Task-1",content:'Pause\n\ntype: "io.kestra.core.tasks.flows.Pause"\n\n\n> Pause current execution and wait for a manual approval\n\n\n# Examples\n\nid: pause\nnamespace: io.kestra.tests\n\ntasks:\n  - id: pause\n    type: io.kestra.core.tasks.flows.Pause\n    tasks:\n     - id: ko\n       type: io.kestra.core.tasks.scripts.Bash\n       commands:\n        - \'echo "trigger after manual restart"\'\n  - id: last\n    type: io.kestra.core.tasks.debugs.Return\n    format: "{{task.id}} > {{taskrun.startDate}}"\n\n\n\n# Properties\n\n\n# errors\n\n * Type: array\n * SubType: Task-2\n * Dynamic: ❓\n * Required: ❌\n\n> List of tasks to run if any tasks failed on this FlowableTask\n\n\n# tasks\n\n * Type: array\n * SubType: Task-2\n * Dynamic: ❓\n * Required: ✔️\n * Min items: 1\n\n\n# Outputs\n\n\n# Definitions\n\n\n# Task-2\n\n\n# Task-1',normalizedContent:'pause\n\ntype: "io.kestra.core.tasks.flows.pause"\n\n\n> pause current execution and wait for a manual approval\n\n\n# examples\n\nid: pause\nnamespace: io.kestra.tests\n\ntasks:\n  - id: pause\n    type: io.kestra.core.tasks.flows.pause\n    tasks:\n     - id: ko\n       type: io.kestra.core.tasks.scripts.bash\n       commands:\n        - \'echo "trigger after manual restart"\'\n  - id: last\n    type: io.kestra.core.tasks.debugs.return\n    format: "{{task.id}} > {{taskrun.startdate}}"\n\n\n\n# properties\n\n\n# errors\n\n * type: array\n * subtype: task-2\n * dynamic: ❓\n * required: ❌\n\n> list of tasks to run if any tasks failed on this flowabletask\n\n\n# tasks\n\n * type: array\n * subtype: task-2\n * dynamic: ❓\n * required: ✔️\n * min items: 1\n\n\n# outputs\n\n\n# definitions\n\n\n# task-2\n\n\n# task-1',charsets:{}},{title:"Sequential",frontmatter:{title:"Sequential",editLink:!1,description:"Process tasks ones after others sequentially",icon:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB3aWR0aD0iMjAiIGhlaWdodD0iMjAiCiAgICAgcHJlc2VydmVBc3BlY3RSYXRpbz0ieE1pZFlNaWQgbWVldCIgdmlld0JveD0iMCAwIDIwIDIwIgogICAgIHN0eWxlPSItbXMtdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTsgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpOyB0cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpOyI+CiAgICA8cGF0aAogICAgICAgIGQ9Ik0xMSAxMy44MjRWNi4xNzZBMi4zOTUgMi4zOTUgMCAwIDAgMTIuNCA0YTIuNCAyLjQgMCAxIDAtNC44IDBjMCAuOTY3LjU3NiAxLjc5NiAxLjQgMi4xNzZ2Ny42NDlBMi4zOTMgMi4zOTMgMCAwIDAgNy42IDE2YTIuNCAyLjQgMCAxIDAgNC44IDBjMC0uOTY3LS41NzUtMS43OTYtMS40LTIuMTc2ek0xMCAyLjYxNWExLjM4NCAxLjM4NCAwIDEgMSAwIDIuNzY4YTEuMzg0IDEuMzg0IDAgMCAxIDAtMi43Njh6bTAgMTQuNzdhMS4zODUgMS4zODUgMCAxIDEgMC0yLjc3YTEuMzg1IDEuMzg1IDAgMCAxIDAgMi43N3oiCiAgICAgICAgZmlsbD0iIzBEMTUyMyIvPgo8L3N2Zz4=",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Sequential"},{property:"og:description",content:"Process tasks ones after others sequentially | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/core/tasks/flows/io.kestra.core.tasks.flows.Sequential.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Sequential"},{name:"twitter:description",content:"Process tasks ones after others sequentially | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/core/tasks/flows/io.kestra.core.tasks.flows.Sequential.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/core/tasks/flows/io.kestra.core.tasks.flows.Sequential.html",relativePath:"plugins/core/tasks/flows/io.kestra.core.tasks.flows.Sequential.md",key:"v-dd1e609e",path:"/plugins/core/tasks/flows/io.kestra.core.tasks.flows.Sequential.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:148},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:630},{level:3,title:"errors",slug:"errors",normalizedTitle:"errors",charIndex:645},{level:3,title:"tasks",slug:"tasks",normalizedTitle:"tasks",charIndex:34},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:876},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:888},{level:3,title:"Task-2",slug:"task-2",normalizedTitle:"task-2",charIndex:680},{level:3,title:"Task-1",slug:"task-1",normalizedTitle:"task-1",charIndex:915}],headersStr:"Examples Properties errors tasks Outputs Definitions Task-2 Task-1",content:'Sequential\n\ntype: "io.kestra.core.tasks.flows.Sequential"\n\n\n> Process tasks ones after others sequentially\n\nMostly use in order to group tasks.\n\n\n# Examples\n\nid: sequential\nnamespace: io.kestra.tests\n\ntasks:\n  - id: sequential\n    type: io.kestra.core.tasks.flows.Sequential\n    tasks:\n      - id: 1st\n        type: io.kestra.core.tasks.debugs.Return\n        format: "{{task.id}} > {{taskrun.startDate}}"\n      - id: 2nd\n        type: io.kestra.core.tasks.debugs.Return\n        format: "{{task.id}} > {{taskrun.id}}"\n  - id: last\n    type: io.kestra.core.tasks.debugs.Return\n    format: "{{task.id}} > {{taskrun.startDate}}"\n\n\n\n# Properties\n\n\n# errors\n\n * Type: array\n * SubType: Task-2\n * Dynamic: ❓\n * Required: ❌\n\n> List of tasks to run if any tasks failed on this FlowableTask\n\n\n# tasks\n\n * Type: array\n * SubType: Task-2\n * Dynamic: ❓\n * Required: ✔️\n * Min items: 1\n\n\n# Outputs\n\n\n# Definitions\n\n\n# Task-2\n\n\n# Task-1',normalizedContent:'sequential\n\ntype: "io.kestra.core.tasks.flows.sequential"\n\n\n> process tasks ones after others sequentially\n\nmostly use in order to group tasks.\n\n\n# examples\n\nid: sequential\nnamespace: io.kestra.tests\n\ntasks:\n  - id: sequential\n    type: io.kestra.core.tasks.flows.sequential\n    tasks:\n      - id: 1st\n        type: io.kestra.core.tasks.debugs.return\n        format: "{{task.id}} > {{taskrun.startdate}}"\n      - id: 2nd\n        type: io.kestra.core.tasks.debugs.return\n        format: "{{task.id}} > {{taskrun.id}}"\n  - id: last\n    type: io.kestra.core.tasks.debugs.return\n    format: "{{task.id}} > {{taskrun.startdate}}"\n\n\n\n# properties\n\n\n# errors\n\n * type: array\n * subtype: task-2\n * dynamic: ❓\n * required: ❌\n\n> list of tasks to run if any tasks failed on this flowabletask\n\n\n# tasks\n\n * type: array\n * subtype: task-2\n * dynamic: ❓\n * required: ✔️\n * min items: 1\n\n\n# outputs\n\n\n# definitions\n\n\n# task-2\n\n\n# task-1',charsets:{}},{title:"Switch",frontmatter:{title:"Switch",editLink:!1,description:"Process some tasks conditionnaly depending on a contextual value",icon:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB3aWR0aD0iMjAiIGhlaWdodD0iMjAiCiAgICAgcHJlc2VydmVBc3BlY3RSYXRpbz0ieE1pZFlNaWQgbWVldCIgdmlld0JveD0iMCAwIDIwIDIwIgogICAgIHN0eWxlPSItbXMtdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTsgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpOyB0cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpOyI+CiAgICA8cGF0aAogICAgICAgIGQ9Ik0xNi40IDRhMi40IDIuNCAwIDEgMC00LjggMGMwIC45NjEuNTY4IDEuNzg0IDEuMzg0IDIuMTY3Yy0uMDgyIDEuNTg0LTEuMjcgMi4xMjItMy4zMzUgMi44OTZjLS44Ny4zMjctMS44MjkuNjg5LTIuNjQ5IDEuMjM0VjYuMTc2QTIuMzk2IDIuMzk2IDAgMCAwIDYgMS42YTIuMzk3IDIuMzk3IDAgMCAwLTEgNC41NzZ2Ny42NDlBMi4zOTMgMi4zOTMgMCAwIDAgMy42IDE2YTIuNCAyLjQgMCAxIDAgNC44IDBjMC0uOTYxLS41NjgtMS43ODQtMS4zODQtMi4xNjdjLjA4Mi0xLjU4MyAxLjI3MS0yLjEyMiAzLjMzNS0yLjg5NmMyLjAzLS43NjIgNC41NDEtMS43MTEgNC42NC00Ljc1NkEyLjM5OCAyLjM5OCAwIDAgMCAxNi40IDR6TTYgMi42MTVhMS4zODQgMS4zODQgMCAxIDEgMCAyLjc2OGExLjM4NCAxLjM4NCAwIDAgMSAwLTIuNzY4em0wIDE0Ljc3YTEuMzg1IDEuMzg1IDAgMSAxIDAtMi43N2ExLjM4NSAxLjM4NSAwIDAgMSAwIDIuNzd6bTgtMTJhMS4zODUgMS4zODUgMCAxIDEgMC0yLjc3YTEuMzg1IDEuMzg1IDAgMCAxIDAgMi43N3oiCiAgICAgICAgZmlsbD0iIzBEMTUyMyIvPgo8L3N2Zz4=",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Switch"},{property:"og:description",content:"Process some tasks conditionnaly depending on a contextual value | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/core/tasks/flows/io.kestra.core.tasks.flows.Switch.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Switch"},{name:"twitter:description",content:"Process some tasks conditionnaly depending on a contextual value | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/core/tasks/flows/io.kestra.core.tasks.flows.Switch.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/core/tasks/flows/io.kestra.core.tasks.flows.Switch.html",relativePath:"plugins/core/tasks/flows/io.kestra.core.tasks.flows.Switch.md",key:"v-797da7c7",path:"/plugins/core/tasks/flows/io.kestra.core.tasks.flows.Switch.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:221},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:997},{level:3,title:"cases",slug:"cases",normalizedTitle:"cases",charIndex:433},{level:3,title:"defaults",slug:"defaults",normalizedTitle:"defaults",charIndex:859},{level:3,title:"errors",slug:"errors",normalizedTitle:"errors",charIndex:1216},{level:3,title:"value",slug:"value",normalizedTitle:"value",charIndex:113},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1460},{level:3,title:"defaults",slug:"defaults-2",normalizedTitle:"defaults",charIndex:859},{level:3,title:"value",slug:"value-2",normalizedTitle:"value",charIndex:113},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:1548},{level:3,title:"Task-2",slug:"task-2",normalizedTitle:"task-2",charIndex:1176},{level:3,title:"Task-1",slug:"task-1",normalizedTitle:"task-1",charIndex:1575}],headersStr:"Examples Properties cases defaults errors value Outputs defaults value Definitions Task-2 Task-1",content:'Switch\n\ntype: "io.kestra.core.tasks.flows.Switch"\n\n\n> Process some tasks conditionnaly depending on a contextual value\n\nAllow some workflow based on context variables, allow you to branch your based on previous task.\n\n\n# Examples\n\nid: switch\nnamespace: io.kestra.tests\n\ninputs:\n  - name: string\n    type: STRING\n    required: true\n\ntasks:\n  - id: switch\n    type: io.kestra.core.tasks.flows.Switch\n    value: "{{inputs.string}}"\n    cases:\n      FIRST:\n        - id: 1st\n          type: io.kestra.core.tasks.debugs.Return\n          format: "{{task.id}} > {{taskrun.startDate}}"\n      SECOND:\n        - id: 2nd\n          type: io.kestra.core.tasks.debugs.Return\n          format: "{{task.id}} > {{taskrun.startDate}}"\n      THIRD:\n        - id: 3th\n          type: io.kestra.core.tasks.debugs.Return\n          format: "{{task.id}} > {{taskrun.startDate}}"\n    defaults:\n      - id: default\n        type: io.kestra.core.tasks.debugs.Return\n        format: "{{task.id}} > {{taskrun.startDate}}"\n\n\n\n# Properties\n\n\n# cases\n\n * Type: object\n * Dynamic: ❓\n * Required: ❌\n\n> The case switch, as map with key the value, value the list of tasks\n\n\n# defaults\n\n * Type: array\n * SubType: Task-2\n * Dynamic: ❓\n * Required: ❌\n\n\n# errors\n\n * Type: array\n * SubType: Task-2\n * Dynamic: ❓\n * Required: ❌\n\n> List of tasks to run if any tasks failed on this FlowableTask\n\n\n# value\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> The value to be evaluated\n\n\n# Outputs\n\n\n# defaults\n\n * Type: boolean\n * Default: false\n\n\n# value\n\n * Type: string\n\n\n# Definitions\n\n\n# Task-2\n\n\n# Task-1',normalizedContent:'switch\n\ntype: "io.kestra.core.tasks.flows.switch"\n\n\n> process some tasks conditionnaly depending on a contextual value\n\nallow some workflow based on context variables, allow you to branch your based on previous task.\n\n\n# examples\n\nid: switch\nnamespace: io.kestra.tests\n\ninputs:\n  - name: string\n    type: string\n    required: true\n\ntasks:\n  - id: switch\n    type: io.kestra.core.tasks.flows.switch\n    value: "{{inputs.string}}"\n    cases:\n      first:\n        - id: 1st\n          type: io.kestra.core.tasks.debugs.return\n          format: "{{task.id}} > {{taskrun.startdate}}"\n      second:\n        - id: 2nd\n          type: io.kestra.core.tasks.debugs.return\n          format: "{{task.id}} > {{taskrun.startdate}}"\n      third:\n        - id: 3th\n          type: io.kestra.core.tasks.debugs.return\n          format: "{{task.id}} > {{taskrun.startdate}}"\n    defaults:\n      - id: default\n        type: io.kestra.core.tasks.debugs.return\n        format: "{{task.id}} > {{taskrun.startdate}}"\n\n\n\n# properties\n\n\n# cases\n\n * type: object\n * dynamic: ❓\n * required: ❌\n\n> the case switch, as map with key the value, value the list of tasks\n\n\n# defaults\n\n * type: array\n * subtype: task-2\n * dynamic: ❓\n * required: ❌\n\n\n# errors\n\n * type: array\n * subtype: task-2\n * dynamic: ❓\n * required: ❌\n\n> list of tasks to run if any tasks failed on this flowabletask\n\n\n# value\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> the value to be evaluated\n\n\n# outputs\n\n\n# defaults\n\n * type: boolean\n * default: false\n\n\n# value\n\n * type: string\n\n\n# definitions\n\n\n# task-2\n\n\n# task-1',charsets:{}},{title:"Template",frontmatter:{title:"Template",editLink:!1,description:"Include a resuable template inside a flow",icon:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB3aWR0aD0iMjQiIGhlaWdodD0iMjQiCiAgICAgcHJlc2VydmVBc3BlY3RSYXRpbz0ieE1pZFlNaWQgbWVldCIgdmlld0JveD0iMCAwIDI0IDI0IgogICAgIHN0eWxlPSItbXMtdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTsgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpOyB0cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpOyI+CiAgICA8cGF0aCBkPSJNMjAgMkgxMGEyIDIgMCAwIDAtMiAydjJoOGEyIDIgMCAwIDEgMiAydjhoMmEyIDIgMCAwIDAgMi0yVjRhMiAyIDAgMCAwLTItMnoiIGZpbGw9IiMwRDE1MjMiLz4KICAgIDxwYXRoCiAgICAgICAgZD0iTTQgMjJoMTBjMS4xMDMgMCAyLS44OTcgMi0yVjEwYzAtMS4xMDMtLjg5Ny0yLTItMkg0Yy0xLjEwMyAwLTIgLjg5Ny0yIDJ2MTBjMCAxLjEwMy44OTcgMiAyIDJ6bTItMTBoNnYySDZ2LTJ6bTAgNGg2djJINnYtMnoiCiAgICAgICAgZmlsbD0iIzBEMTUyMyIvPgo8L3N2Zz4=",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Template"},{property:"og:description",content:"Include a resuable template inside a flow | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/core/tasks/flows/io.kestra.core.tasks.flows.Template.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Template"},{name:"twitter:description",content:"Include a resuable template inside a flow | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/core/tasks/flows/io.kestra.core.tasks.flows.Template.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/core/tasks/flows/io.kestra.core.tasks.flows.Template.html",relativePath:"plugins/core/tasks/flows/io.kestra.core.tasks.flows.Template.md",key:"v-52208f8a",path:"/plugins/core/tasks/flows/io.kestra.core.tasks.flows.Template.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:104},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:613},{level:3,title:"args",slug:"args",normalizedTitle:"args",charIndex:447},{level:3,title:"errors",slug:"errors",normalizedTitle:"errors",charIndex:1203},{level:3,title:"namespace",slug:"namespace",normalizedTitle:"namespace",charIndex:127},{level:3,title:"templateId",slug:"templateid",normalizedTitle:"templateid",charIndex:422},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1525},{level:3,title:"args",slug:"args-2",normalizedTitle:"args",charIndex:447},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:1598},{level:3,title:"Task-2",slug:"task-2",normalizedTitle:"task-2",charIndex:1238},{level:3,title:"Task-1",slug:"task-1",normalizedTitle:"task-1",charIndex:1625}],headersStr:"Examples Properties args errors namespace templateId Outputs args Definitions Task-2 Task-1",content:'Template\n\ntype: "io.kestra.core.tasks.flows.Template"\n\n\n> Include a resuable template inside a flow\n\n\n# Examples\n\nid: template\nnamespace: io.kestra.tests\n\ninputs:\n  - name: with-string\n    type: STRING\n\ntasks:\n  - id: 1-return\n    type: io.kestra.core.tasks.debugs.Return\n    format: "{{task.id}} > {{taskrun.startDate}}"\n  - id: 2-template\n    type: io.kestra.core.tasks.flows.Template\n    namespace: io.kestra.tests\n    templateId: template\n    args:\n      my-forward: "{{ inputs.with-string }}"\n  - id: 3-end\n    type: io.kestra.core.tasks.debugs.Return\n    format: "{{task.id}} > {{taskrun.startDate}}"\n\n\n\n\n# Properties\n\n\n# args\n\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The args to pass to the template\n\nYou can provide a list of named arguments (like function argument on dev) allowing to rename outputs of current flow for this template.\nfor example, if you declare this use of template like this:\n\n  - id: 2-template\n    type: io.kestra.core.tasks.flows.Template\n    namespace: io.kestra.tests\n    templateId: template\n    args:\n      forward: "{{ output.task-id.uri }}"\n\n\nYou will be able to get this output on the template with {{ parent.outputs.args.forward }}\n\n\n# errors\n\n * Type: array\n * SubType: Task-2\n * Dynamic: ❓\n * Required: ❌\n\n> List of tasks to run if any tasks failed on this FlowableTask\n\n\n# namespace\n\n * Type: string\n * Dynamic: ❌\n * Required: ✔️\n\n> The namespace of the template\n\n\n# templateId\n\n * Type: string\n * Dynamic: ❌\n * Required: ✔️\n\n> The id of the template\n\n\n# Outputs\n\n\n# args\n\n * Type: object\n\n> The args passed to the template\n\n\n# Definitions\n\n\n# Task-2\n\n\n# Task-1',normalizedContent:'template\n\ntype: "io.kestra.core.tasks.flows.template"\n\n\n> include a resuable template inside a flow\n\n\n# examples\n\nid: template\nnamespace: io.kestra.tests\n\ninputs:\n  - name: with-string\n    type: string\n\ntasks:\n  - id: 1-return\n    type: io.kestra.core.tasks.debugs.return\n    format: "{{task.id}} > {{taskrun.startdate}}"\n  - id: 2-template\n    type: io.kestra.core.tasks.flows.template\n    namespace: io.kestra.tests\n    templateid: template\n    args:\n      my-forward: "{{ inputs.with-string }}"\n  - id: 3-end\n    type: io.kestra.core.tasks.debugs.return\n    format: "{{task.id}} > {{taskrun.startdate}}"\n\n\n\n\n# properties\n\n\n# args\n\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> the args to pass to the template\n\nyou can provide a list of named arguments (like function argument on dev) allowing to rename outputs of current flow for this template.\nfor example, if you declare this use of template like this:\n\n  - id: 2-template\n    type: io.kestra.core.tasks.flows.template\n    namespace: io.kestra.tests\n    templateid: template\n    args:\n      forward: "{{ output.task-id.uri }}"\n\n\nyou will be able to get this output on the template with {{ parent.outputs.args.forward }}\n\n\n# errors\n\n * type: array\n * subtype: task-2\n * dynamic: ❓\n * required: ❌\n\n> list of tasks to run if any tasks failed on this flowabletask\n\n\n# namespace\n\n * type: string\n * dynamic: ❌\n * required: ✔️\n\n> the namespace of the template\n\n\n# templateid\n\n * type: string\n * dynamic: ❌\n * required: ✔️\n\n> the id of the template\n\n\n# outputs\n\n\n# args\n\n * type: object\n\n> the args passed to the template\n\n\n# definitions\n\n\n# task-2\n\n\n# task-1',charsets:{}},{title:"Bash",frontmatter:{title:"Bash",editLink:!1,description:"Execute a Bash script, command or set of commands.",icon:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB2aWV3Qm94PSIwIDAgNTggNjciIGZpbGw9IiNmZmYiCiAgICAgZmlsbC1ydWxlPSJldmVub2RkIiBzdHJva2U9IiMwMDAiIHN0cm9rZS1saW5lY2FwPSJyb3VuZCIgc3Ryb2tlLWxpbmVqb2luPSJyb3VuZCI+CiAgICA8dXNlIHhsaW5rOmhyZWY9IiNBIiB4PSIxIiB5PSIxIi8+CiAgICA8c3ltYm9sIGlkPSJBIiBvdmVyZmxvdz0idmlzaWJsZSI+CiAgICAgICAgPHBhdGgKICAgICAgICAgICAgZD0iTTUyLjExNCAxMy4wNjFMMzEuOTA0IDEuMDY1YTcuNiA3LjYgMCAwIDAtNy43NiAwTDMuOTMgMTMuMDYxQTguMDYgOC4wNiAwIDAgMCAwIDIwLjAwNXYyMy45OTJhOC4wNiA4LjA2IDAgMCAwIDMuODk2IDYuOTQ0bDIwLjIxIDExLjk5NmE3LjYgNy42IDAgMCAwIDcuNzYgMEw1Mi4wOCA1MC45NDFhOC4wNiA4LjA2IDAgMCAwIDMuODk2LTYuOTQ0VjIwLjAwNWE4LjA2IDguMDYgMCAwIDAtMy44Ni02Ljk0NHpNMzYuNDYgNTAuNTI1djEuNzJjLS4wMDIuMjE2LS4xMTQuNDE0LS4yOTYuNTNsLTEuMDI0LjU4NmMtLjE2LjA4NC0uMjk2IDAtLjI5Ni0uMjI2di0xLjY5NGEzLjMyIDMuMzIgMCAwIDEtMi4zMjguMjI2Yy0uMTI0LS4wODQtLjE3Mi0uMjQ0LS4xMTItLjRsLjM2Ni0xLjU2Yy4wMzItLjEzMi4xLS4yNS4yMDQtLjM0LjAyOS0uMDI5LjA2My0uMDUzLjEtLjA3YS4yMi4yMiAwIDAgMSAuMTYgMCAyLjgyIDIuODIgMCAwIDAgMi4xMTgtLjI2OCAyLjgyIDIuODIgMCAwIDAgMS41OC0yLjQyYzAtLjg3Ni0uNDgtMS4yNC0xLjY0LTEuMjUtMS40NjggMC0yLjgtLjI4LTIuODYtMi40NDguMDM0LTEuODc0LjkwNC0zLjYzNCAyLjM3Mi00Ljh2LTEuNzQ0YS42OC42OCAwIDAgMSAuMjk2LS41MzZsLjk4OC0uNjI4Yy4xNi0uMDg0LjI5NiAwIC4yOTYuMjMydjEuNzQ0YTMuMjIgMy4yMiAwIDAgMSAxLjkzNC0uMjMyLjMxLjMxIDAgMCAxIC4xMjguNGwtLjM0NiAxLjU0NmEuNjUuNjUgMCAwIDEtLjE3Ni4zMS40NS40NSAwIDAgMS0uMS4wOGMtLjA0LjAyNC0uMS4wMTYtLjE0OCAwYTIuNTYgMi41NiAwIDAgMC0xLjg2Mi4zMDQgMi4zNCAyLjM0IDAgMCAwLTEuNDEyIDIuMDc0YzAgLjc5LjQxNiAxLjAzIDEuODE0IDEuMDYgMS44NyAwIDIuNjc0Ljg0NiAyLjY5NiAyLjcyNC0uMDM2IDEuOTY2LS45MzQgMy44MTYtMi40NTYgNS4wNnptMTAuNTg2LTIuOWMuMDI0LjE0OC0uMDM2LjMtLjE1Ni4zODhsLTUuMDkgMy4xMDRjLS4wNDguMDQtLjEyLjA0Ni0uMTc0LjAxNGEuMTUuMTUgMCAwIDEtLjA2Ni0uMTZ2LTEuMzJhLjM3LjM3IDAgMCAxIC4yMzItLjMyNGw1LjAzMi0zLjAxNGMuMDQ4LS4wNC4xMi0uMDQ2LjE3NC0uMDE0YS4xNS4xNSAwIDAgMSAuMDY2LjE2djEuMTY0em0zLjUzLTI5LjUwNEwzMS40NTIgMjkuOTMzYy0yLjM4NiAxLjQxMi00LjE0IDIuOTU2LTQuMTQgNS44Mjh2MjMuNTU2YzAgMS43Mi43MDYgMi44IDEuNzY0IDMuMTYtLjM1LjA2NS0uNzA0LjEwMS0xLjA2LjEwNmE2LjI2IDYuMjYgMCAwIDEtMy4xOS0uODgyTDQuNjE2IDQ5LjcwN2E2LjYgNi42IDAgMCAxLTMuMjA0LTUuNzA2VjIwLjAwNUMxLjQgMTcuNjY5IDIuNiAxNS41MDEgNC42MTYgMTQuMjg5bDIwLjIxLTExLjk5NmE2LjIzIDYuMjMgMCAwIDEgNi4zNTIgMGwyMC4yMSAxMS45OTZhNi42MSA2LjYxIDAgMCAxIDMuMTA0IDQuNmMtLjY1Ni0xLjQyNi0yLjE2Ni0xLjgtMy45MjQtLjc5aC4wMDZ6IgogICAgICAgICAgICBzdHJva2U9Im5vbmUiIGZpbGw9IiMwRDE1MjMiLz4KICAgIDwvc3ltYm9sPgo8L3N2Zz4=",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Bash"},{property:"og:description",content:"Execute a Bash script, command or set of commands. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/core/tasks/scripts/io.kestra.core.tasks.scripts.Bash.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Bash"},{name:"twitter:description",content:"Execute a Bash script, command or set of commands. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/core/tasks/scripts/io.kestra.core.tasks.scripts.Bash.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/core/tasks/scripts/io.kestra.core.tasks.scripts.Bash.html",relativePath:"plugins/core/tasks/scripts/io.kestra.core.tasks.scripts.Bash.md",key:"v-1efc3447",path:"/plugins/core/tasks/scripts/io.kestra.core.tasks.scripts.Bash.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:107},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:677},{level:3,title:"commands",slug:"commands",normalizedTitle:"commands",charIndex:93},{level:3,title:"dockerOptions",slug:"dockeroptions",normalizedTitle:"dockeroptions",charIndex:871},{level:3,title:"env",slug:"env",normalizedTitle:"env",charIndex:985},{level:3,title:"exitOnFailed",slug:"exitonfailed",normalizedTitle:"exitonfailed",charIndex:1125},{level:3,title:"files",slug:"files",normalizedTitle:"files",charIndex:527},{level:3,title:"inputFiles",slug:"inputfiles",normalizedTitle:"inputfiles",charIndex:587},{level:3,title:"interpreter",slug:"interpreter",normalizedTitle:"interpreter",charIndex:2050},{level:3,title:"interpreterArgs",slug:"interpreterargs",normalizedTitle:"interpreterargs",charIndex:2173},{level:3,title:"outputFiles",slug:"outputfiles",normalizedTitle:"outputfiles",charIndex:384},{level:3,title:"outputsFiles",slug:"outputsfiles",normalizedTitle:"outputsfiles",charIndex:2731},{level:3,title:"runner",slug:"runner",normalizedTitle:"runner",charIndex:967},{level:3,title:"warningOnStdErr",slug:"warningonstderr",normalizedTitle:"warningonstderr",charIndex:3018},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:3146},{level:3,title:"exitCode",slug:"exitcode",normalizedTitle:"exitcode",charIndex:3158},{level:3,title:"files",slug:"files-2",normalizedTitle:"files",charIndex:527},{level:3,title:"outputFiles",slug:"outputfiles-2",normalizedTitle:"outputfiles",charIndex:384},{level:3,title:"stdErrLineCount",slug:"stderrlinecount",normalizedTitle:"stderrlinecount",charIndex:3451},{level:3,title:"stdOutLineCount",slug:"stdoutlinecount",normalizedTitle:"stdoutlinecount",charIndex:3536},{level:3,title:"vars",slug:"vars",normalizedTitle:"vars",charIndex:2619},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:3697},{level:3,title:"DockerOptions",slug:"dockeroptions-2",normalizedTitle:"dockeroptions",charIndex:895}],headersStr:"Examples Properties commands dockerOptions env exitOnFailed files inputFiles interpreter interpreterArgs outputFiles outputsFiles runner warningOnStdErr Outputs exitCode files outputFiles stdErrLineCount stdOutLineCount vars Definitions DockerOptions",content:'Bash\n\ntype: "io.kestra.core.tasks.scripts.Bash"\n\n\n> Execute a Bash script, command or set of commands.\n\n\n# Examples\n\n> Single bash command\n\nid: "bash"\ntype: "io.kestra.core.tasks.scripts.Bash"\ncommands:\n- echo "The current execution is : {{execution.id}}"\n\n\n> Bash command that generate file in storage accessible through outputs\n\nid: "bash"\ntype: "io.kestra.core.tasks.scripts.Bash"\noutputFiles:\n- first\n- second\ncommands:\n- echo "1" >> {{ outputFiles.first }}\n- echo "2" >> {{ outputFiles.second }}\n\n\n> Bash with some inputs files\n\nid: "bash"\ntype: "io.kestra.core.tasks.scripts.Bash"\ninputFiles:\n  script.sh: |\n    echo {{ workingDir }}\ncommands:\n- /bin/bash script.sh\n\n\n\n# Properties\n\n\n# commands\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min items: 1\n\n> The commands to run\n\nDefault command will be launched with /bin/sh -c "commands"\n\n\n# dockerOptions\n\n * Type: DockerOptions\n * Dynamic: ❓\n * Required: ❌\n\n> Docker options when using runner DOCKER\n\n\n# env\n\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Additional environnements variable to add for current process.\n\n\n# exitOnFailed\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Exit if any non true return value\n\nThis tells bash that it should exit the script if any statement returns a non-true return value.\nThe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n\n# files\n\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The list of files that will be uploaded to internal storage,\n\nuse outputFiles property instead\n\n\n# inputFiles\n\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Input files are extra files supplied by user that make it simpler organize code.\n\nDescribe a files map that will be written and usable in execution context. In python execution context is in a temp folder, for bash scripts, you can reach files using a workingDir variable like \'source {{workingDir}}/myfile.sh\'\n\n\n# interpreter\n\n * Type: string\n * Dynamic: ❌\n * Required: ✔️\n * Default: /bin/sh\n * Min length: 1\n\n> Interpreter to used\n\n\n# interpreterArgs\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n * Default: [-c]\n\n> Interpreter args used\n\n\n# outputFiles\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Output file list that will be uploaded to internal storage\n\nList of key that will generate temporary files.\nOn the command, just can use with special variable named outputFiles.key.\nIf you add a files with ["first"], you can use the special vars echo 1 >> {[ outputFiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n\n# outputsFiles\n\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Deprecated Output file\n\nuse outputFiles\n\n\n# runner\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ✔️\n\n * Default: PROCESS\n\n * Possible Values:\n   \n   * PROCESS\n   * DOCKER\n\n> Runner to use\n\n\n# warningOnStdErr\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Use WARNING state if any stdErr is sent\n\n\n# Outputs\n\n\n# exitCode\n\n * Type: integer\n * Default: 0\n\n> The exit code of the whole execution\n\n\n# files\n\n🔒 Deprecated\n\n * Type: object\n * SubType: string\n\n> Deprecated output files\n\nuse outputFiles\n\n\n# outputFiles\n\n * Type: object\n * SubType: string\n\n> The output files uri in Kestra internal storage\n\n\n# stdErrLineCount\n\n * Type: integer\n * Default: 0\n\n> The standard error line count\n\n\n# stdOutLineCount\n\n * Type: integer\n * Default: 0\n\n> The standard output line count\n\n\n# vars\n\n * Type: object\n\n> The value extract from output of the commands\n\n\n# Definitions\n\n\n# DockerOptions\n\n# dockerConfig\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker config file\n\nFull file that can be used to configure private registries, ...\n\n# dockerHost\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: unix:///var/run/docker.sock\n\n> Docker api uri\n\n# entryPoint\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker entrypoint to use\n\n# extraHosts\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker extra host to use\n\n# image\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> Docker image to use\n\n# user\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker user to use',normalizedContent:'bash\n\ntype: "io.kestra.core.tasks.scripts.bash"\n\n\n> execute a bash script, command or set of commands.\n\n\n# examples\n\n> single bash command\n\nid: "bash"\ntype: "io.kestra.core.tasks.scripts.bash"\ncommands:\n- echo "the current execution is : {{execution.id}}"\n\n\n> bash command that generate file in storage accessible through outputs\n\nid: "bash"\ntype: "io.kestra.core.tasks.scripts.bash"\noutputfiles:\n- first\n- second\ncommands:\n- echo "1" >> {{ outputfiles.first }}\n- echo "2" >> {{ outputfiles.second }}\n\n\n> bash with some inputs files\n\nid: "bash"\ntype: "io.kestra.core.tasks.scripts.bash"\ninputfiles:\n  script.sh: |\n    echo {{ workingdir }}\ncommands:\n- /bin/bash script.sh\n\n\n\n# properties\n\n\n# commands\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ✔️\n * min items: 1\n\n> the commands to run\n\ndefault command will be launched with /bin/sh -c "commands"\n\n\n# dockeroptions\n\n * type: dockeroptions\n * dynamic: ❓\n * required: ❌\n\n> docker options when using runner docker\n\n\n# env\n\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> additional environnements variable to add for current process.\n\n\n# exitonfailed\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> exit if any non true return value\n\nthis tells bash that it should exit the script if any statement returns a non-true return value.\nthe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n\n# files\n\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> the list of files that will be uploaded to internal storage,\n\nuse outputfiles property instead\n\n\n# inputfiles\n\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> input files are extra files supplied by user that make it simpler organize code.\n\ndescribe a files map that will be written and usable in execution context. in python execution context is in a temp folder, for bash scripts, you can reach files using a workingdir variable like \'source {{workingdir}}/myfile.sh\'\n\n\n# interpreter\n\n * type: string\n * dynamic: ❌\n * required: ✔️\n * default: /bin/sh\n * min length: 1\n\n> interpreter to used\n\n\n# interpreterargs\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n * default: [-c]\n\n> interpreter args used\n\n\n# outputfiles\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> output file list that will be uploaded to internal storage\n\nlist of key that will generate temporary files.\non the command, just can use with special variable named outputfiles.key.\nif you add a files with ["first"], you can use the special vars echo 1 >> {[ outputfiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n\n# outputsfiles\n\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> deprecated output file\n\nuse outputfiles\n\n\n# runner\n\n * type: string\n\n * dynamic: ❌\n\n * required: ✔️\n\n * default: process\n\n * possible values:\n   \n   * process\n   * docker\n\n> runner to use\n\n\n# warningonstderr\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> use warning state if any stderr is sent\n\n\n# outputs\n\n\n# exitcode\n\n * type: integer\n * default: 0\n\n> the exit code of the whole execution\n\n\n# files\n\n🔒 deprecated\n\n * type: object\n * subtype: string\n\n> deprecated output files\n\nuse outputfiles\n\n\n# outputfiles\n\n * type: object\n * subtype: string\n\n> the output files uri in kestra internal storage\n\n\n# stderrlinecount\n\n * type: integer\n * default: 0\n\n> the standard error line count\n\n\n# stdoutlinecount\n\n * type: integer\n * default: 0\n\n> the standard output line count\n\n\n# vars\n\n * type: object\n\n> the value extract from output of the commands\n\n\n# definitions\n\n\n# dockeroptions\n\n# dockerconfig\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> docker config file\n\nfull file that can be used to configure private registries, ...\n\n# dockerhost\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n * default: unix:///var/run/docker.sock\n\n> docker api uri\n\n# entrypoint\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> docker entrypoint to use\n\n# extrahosts\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> docker extra host to use\n\n# image\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> docker image to use\n\n# user\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> docker user to use',charsets:{cjk:!0}},{title:"Node",frontmatter:{title:"Node",editLink:!1,description:"Execute a Node.js script",icon:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB2aWV3Qm94PSIwIDAgNjAgNjYiIGZpbGw9IiNmZmYiIGZpbGwtcnVsZT0iZXZlbm9kZCIgc3Ryb2tlPSIjMDAwIiBzdHJva2UtbGluZWNhcD0icm91bmQiIHN0cm9rZS1saW5lam9pbj0icm91bmQiPjx1c2UgeGxpbms6aHJlZj0iI0EiIHg9IjEiIHk9IjEiLz48c3ltYm9sIGlkPSJBIiBvdmVyZmxvdz0idmlzaWJsZSI+PHBhdGggZD0iTTI2LjMyLjY4MWMxLjYtLjkwNiAzLjY0LS45MSA1LjIgMGwyMy44ODggMTMuNDY2YzEuNDk0Ljg0IDIuNDk0IDIuNTA2IDIuNDggNC4yMjh2MjdjLjAxIDEuNzk0LTEuMDg4IDMuNDk2LTIuNjY0IDQuMzJsLTIzLjc2IDEzLjQwNGE1LjIgNS4yIDAgMCAxLTUuMjc4LS4xNDZsLTcuMTMtNC4xMmMtLjQ4Ni0uMjktMS4wMzItLjUyLTEuMzc2LS45OS4zMDQtLjQwOC44NDQtLjQ2IDEuMjg0LS42NC45OTItLjMxNiAxLjktLjggMi44MTItMS4zMTIuMjMtLjE2LjUxMi0uMS43MzIuMDQ0bDYuMDggMy41MTZjLjQzNC4yNS44NzQtLjA4IDEuMjQ2LS4yOWwyMy4zMy0xMy4xNjZjLjI4OC0uMTQuNDQ4LS40NDQuNDI0LS43NnYtMjYuNzRjLjAzMi0uMzYtLjE3NC0uNjg4LS41LS44MzRMMjkuNDA4IDQuMzE1YS44Mi44MiAwIDAgMC0uOTMtLjAwMkw0Ljc5MiAxNy42ODdjLS4zMi4xNDYtLjU0LjQ3LS41LjgzdjI2Ljc0YS43NS43NSAwIDAgMCAuNDMuNzVsNi4zMjQgMy41N2MxLjE4OC42NCAyLjY0NiAxIDMuOTU0LjUzYTMgMyAwIDAgMCAxLjk0Mi0yLjgxOGwuMDA2LTI2LjZjLS4wMjgtLjM5NC4zNDQtLjcyLjcyNi0uNjhoMy4wNGMuNC0uMDEuNzE0LjQxNC42Ni44MWwtLjAwNiAyNi43NjhjLjAwMiAyLjM3Ni0uOTc0IDQuOTYtMy4xNzIgNi4xMjYtMi43MDggMS40LTYuMDU2IDEuMTA2LTguNzMyLS4yNGwtNi44LTMuNzZBNC45IDQuOSAwIDAgMSAwIDQ1LjM5M3YtMjdhNC45MiA0LjkyIDAgMCAxIDIuNTY0LTQuMjgyTDI2LjMyLjY4MXptNi44ODggMTguNzE2YzMuNDU0LS4yIDcuMTUyLS4xMzIgMTAuMjYgMS41NyAyLjQwNiAxLjMwNCAzLjc0IDQuMDQgMy43ODQgNi43MTYtLjA2OC4zNi0uNDQ0LjU2LS43ODguNTM0LTEtLjAwMi0yLjAwNC4wMTQtMy4wMDgtLjAwNi0uNDI2LjAxNi0uNjcyLS4zNzYtLjcyNi0uNzUyLS4yODgtMS4yOC0uOTg2LTIuNTQ2LTIuMTktMy4xNjQtMS44NDgtLjkyNi0zLjk5Mi0uODgtNi4wMDgtLjg2LTEuNDcyLjA4LTMuMDU0LjIwNi00LjMgMS4wNy0uOTYuNjU2LTEuMjQ4IDItLjkwNiAzLjA0NC4zMi43NjYgMS4yMDYgMS4wMTIgMS45MjggMS4yNCA0LjE2NCAxLjA4OCA4LjU3NCAxIDEyLjY2IDIuNDE0IDEuNjkuNTg0IDMuMzQ0IDEuNzIgMy45MjQgMy40OS43NTYgMi4zNzIuNDI2IDUuMjA4LTEuMjYgNy4xMTItMS4zNjggMS41NjgtMy4zNiAyLjQtNS4zNSAyLjg4NC0yLjY0Ni41OS01LjM5LjYwNC04LjA3Ni4zNC0yLjUyNi0uMjg4LTUuMTU0LS45NTItNy4xMDQtMi42NzItMS42NjgtMS40NDgtMi40OC0zLjcwNC0yLjQtNS44OC4wMi0uMzY4LjM4Ni0uNjI0Ljc0LS41OTRoM2MuNDA0LS4wMjguNy4zMi43Mi43LjE4NiAxLjIuNjQ0IDIuNSAxLjcwOCAzLjIgMi4wNTIgMS4zMjQgNC42MjYgMS4yMzIgNi45NzQgMS4yNyAxLjk0Ni0uMDg2IDQuMTMtLjExMiA1LjcyLTEuNC44NC0uNzM0IDEuMDg2LTEuOTYuODYtMy4wMTYtLjI0Ni0uODkyLTEuMi0xLjMwNi0yLTEuNi00LjExLTEuMy04LjU3LS44MjgtMTIuNjQtMi4zLTEuNjUyLS41ODQtMy4yNS0xLjY4OC0zLjg4NC0zLjM4Ni0uODg2LTIuNC0uNDgtNS4zNzQgMS4zODYtNy4yMTQgMS44LTEuODMgNC40NC0yLjUzNiA2Ljk0LTIuNzg4eiIgc3Ryb2tlPSJub25lIiBmaWxsPSIjOGNjODRiIiBmaWxsLXJ1bGU9Im5vbnplcm8iLz48L3N5bWJvbD48L3N2Zz4=",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Node"},{property:"og:description",content:"Execute a Node.js script | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/core/tasks/scripts/io.kestra.core.tasks.scripts.Node.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Node"},{name:"twitter:description",content:"Execute a Node.js script | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/core/tasks/scripts/io.kestra.core.tasks.scripts.Node.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/core/tasks/scripts/io.kestra.core.tasks.scripts.Node.html",relativePath:"plugins/core/tasks/scripts/io.kestra.core.tasks.scripts.Node.md",key:"v-1c59ef6b",path:"/plugins/core/tasks/scripts/io.kestra.core.tasks.scripts.Node.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:960},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:1918},{level:3,title:"args",slug:"args",normalizedTitle:"args",charIndex:1893},{level:3,title:"dockerOptions",slug:"dockeroptions",normalizedTitle:"dockeroptions",charIndex:2078},{level:3,title:"env",slug:"env",normalizedTitle:"env",charIndex:2192},{level:3,title:"exitOnFailed",slug:"exitonfailed",normalizedTitle:"exitonfailed",charIndex:2332},{level:3,title:"files",slug:"files",normalizedTitle:"files",charIndex:337},{level:3,title:"inputFiles",slug:"inputfiles",normalizedTitle:"inputfiles",charIndex:346},{level:3,title:"interpreter",slug:"interpreter",normalizedTitle:"interpreter",charIndex:3257},{level:3,title:"interpreterArgs",slug:"interpreterargs",normalizedTitle:"interpreterargs",charIndex:3380},{level:3,title:"nodePath",slug:"nodepath",normalizedTitle:"nodepath",charIndex:3506},{level:3,title:"npmPath",slug:"npmpath",normalizedTitle:"npmpath",charIndex:3651},{level:3,title:"outputFiles",slug:"outputfiles",normalizedTitle:"outputfiles",charIndex:2829},{level:3,title:"outputsFiles",slug:"outputsfiles",normalizedTitle:"outputsfiles",charIndex:4235},{level:3,title:"runner",slug:"runner",normalizedTitle:"runner",charIndex:2174},{level:3,title:"warningOnStdErr",slug:"warningonstderr",normalizedTitle:"warningonstderr",charIndex:4522},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:4650},{level:3,title:"exitCode",slug:"exitcode",normalizedTitle:"exitcode",charIndex:4662},{level:3,title:"files",slug:"files-2",normalizedTitle:"files",charIndex:337},{level:3,title:"outputFiles",slug:"outputfiles-2",normalizedTitle:"outputfiles",charIndex:2829},{level:3,title:"stdErrLineCount",slug:"stderrlinecount",normalizedTitle:"stderrlinecount",charIndex:4955},{level:3,title:"stdOutLineCount",slug:"stdoutlinecount",normalizedTitle:"stdoutlinecount",charIndex:5040},{level:3,title:"vars",slug:"vars",normalizedTitle:"vars",charIndex:4123},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:5201},{level:3,title:"DockerOptions",slug:"dockeroptions-2",normalizedTitle:"dockeroptions",charIndex:2102}],headersStr:"Examples Properties args dockerOptions env exitOnFailed files inputFiles interpreter interpreterArgs nodePath npmPath outputFiles outputsFiles runner warningOnStdErr Outputs exitCode files outputFiles stdErrLineCount stdOutLineCount vars Definitions DockerOptions",content:'Node\n\ntype: "io.kestra.core.tasks.scripts.Node"\n\n\n> Execute a Node.js script\n\nWith this Node task, we can execute a full javascript script.\nThe task will create a temprorary folder for every tasks and allows you to install some npm packages defined in an optional package.json file.\n\nBy convention, you need to define at least a main.js files in inputFiles that will be the script used.\nYou can also add as many javascript files as you need in inputFiles.\n\nYou can send outputs & metrics from your node script that can be used by others tasks. In order to help, we inject a node package directly on the working dir.Here is an example usage:\n\nconst Kestra = require("./kestra");\nKestra.outputs({test: \'value\', int: 2, bool: true, float: 3.65});\nKestra.counter(\'count\', 1, {tag1: \'i\', tag2: \'win\'});\nKestra.timer(\'timer1\', (callback) => { setTimeout(callback, 1000) }, {tag1: \'i\', tag2: \'lost\'});\nKestra.timer(\'timer2\', 2.12, {tag1: \'i\', tag2: \'destroy\'});\n\n\n\n# Examples\n\n> Execute a node script\n\nid: "node"\ntype: "io.kestra.core.tasks.scripts.Node"\ninputFiles:\n  main.js: |\n    const Kestra = require("./kestra");\n    const fs = require(\'fs\')\n    const result = fs.readFileSync(process.argv[2], "utf-8")\n    console.log(JSON.parse(result).status)\n    const axios = require(\'axios\')\n    axios.get(\'http://google.fr\').then(d => console.log(d.status); Kestra.outputs({\'status\': d.status, \'text\': d.data}))\n    console.log(require(\'./mymodule\').value)\n  data.json: |\n    {"status": "OK"}\n  mymodule.js: |\n    module.exports.value = \'hello world\'\n  package.json: |\n    {\n      "name": "tmp",\n      "version": "1.0.0",\n      "description": "",\n      "main": "index.js",\n      "dependencies": {\n          "axios": "^0.20.0"\n      },\n      "devDependencies": {},\n      "scripts": {\n          "test": "echo "Error: no test specified" && exit 1"\n      },\n      "author": "",\n      "license": "ISC"\n    }\nargs:\n  - data.json\n\n\n\n# Properties\n\n\n# args\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> node command args\n\nArguments list to pass to main javascript script\n\n\n# dockerOptions\n\n * Type: DockerOptions\n * Dynamic: ❓\n * Required: ❌\n\n> Docker options when using runner DOCKER\n\n\n# env\n\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Additional environnements variable to add for current process.\n\n\n# exitOnFailed\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Exit if any non true return value\n\nThis tells bash that it should exit the script if any statement returns a non-true return value.\nThe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n\n# files\n\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The list of files that will be uploaded to internal storage,\n\nuse outputFiles property instead\n\n\n# inputFiles\n\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Input files are extra files supplied by user that make it simpler organize code.\n\nDescribe a files map that will be written and usable in execution context. In python execution context is in a temp folder, for bash scripts, you can reach files using a workingDir variable like \'source {{workingDir}}/myfile.sh\'\n\n\n# interpreter\n\n * Type: string\n * Dynamic: ❌\n * Required: ✔️\n * Default: /bin/sh\n * Min length: 1\n\n> Interpreter to used\n\n\n# interpreterArgs\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n * Default: [-c]\n\n> Interpreter args used\n\n\n# nodePath\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Default: node\n\n> The node interpreter to use\n\nSet the node interpreter path to use\n\n\n# npmPath\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Default: npm\n\n> The npm binary to use\n\nSet the npm binary path for node dependencies setup\n\n\n# outputFiles\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Output file list that will be uploaded to internal storage\n\nList of key that will generate temporary files.\nOn the command, just can use with special variable named outputFiles.key.\nIf you add a files with ["first"], you can use the special vars echo 1 >> {[ outputFiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n\n# outputsFiles\n\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Deprecated Output file\n\nuse outputFiles\n\n\n# runner\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ✔️\n\n * Default: PROCESS\n\n * Possible Values:\n   \n   * PROCESS\n   * DOCKER\n\n> Runner to use\n\n\n# warningOnStdErr\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Use WARNING state if any stdErr is sent\n\n\n# Outputs\n\n\n# exitCode\n\n * Type: integer\n * Default: 0\n\n> The exit code of the whole execution\n\n\n# files\n\n🔒 Deprecated\n\n * Type: object\n * SubType: string\n\n> Deprecated output files\n\nuse outputFiles\n\n\n# outputFiles\n\n * Type: object\n * SubType: string\n\n> The output files uri in Kestra internal storage\n\n\n# stdErrLineCount\n\n * Type: integer\n * Default: 0\n\n> The standard error line count\n\n\n# stdOutLineCount\n\n * Type: integer\n * Default: 0\n\n> The standard output line count\n\n\n# vars\n\n * Type: object\n\n> The value extract from output of the commands\n\n\n# Definitions\n\n\n# DockerOptions\n\n# dockerConfig\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker config file\n\nFull file that can be used to configure private registries, ...\n\n# dockerHost\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: unix:///var/run/docker.sock\n\n> Docker api uri\n\n# entryPoint\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker entrypoint to use\n\n# extraHosts\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker extra host to use\n\n# image\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> Docker image to use\n\n# user\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker user to use',normalizedContent:'node\n\ntype: "io.kestra.core.tasks.scripts.node"\n\n\n> execute a node.js script\n\nwith this node task, we can execute a full javascript script.\nthe task will create a temprorary folder for every tasks and allows you to install some npm packages defined in an optional package.json file.\n\nby convention, you need to define at least a main.js files in inputfiles that will be the script used.\nyou can also add as many javascript files as you need in inputfiles.\n\nyou can send outputs & metrics from your node script that can be used by others tasks. in order to help, we inject a node package directly on the working dir.here is an example usage:\n\nconst kestra = require("./kestra");\nkestra.outputs({test: \'value\', int: 2, bool: true, float: 3.65});\nkestra.counter(\'count\', 1, {tag1: \'i\', tag2: \'win\'});\nkestra.timer(\'timer1\', (callback) => { settimeout(callback, 1000) }, {tag1: \'i\', tag2: \'lost\'});\nkestra.timer(\'timer2\', 2.12, {tag1: \'i\', tag2: \'destroy\'});\n\n\n\n# examples\n\n> execute a node script\n\nid: "node"\ntype: "io.kestra.core.tasks.scripts.node"\ninputfiles:\n  main.js: |\n    const kestra = require("./kestra");\n    const fs = require(\'fs\')\n    const result = fs.readfilesync(process.argv[2], "utf-8")\n    console.log(json.parse(result).status)\n    const axios = require(\'axios\')\n    axios.get(\'http://google.fr\').then(d => console.log(d.status); kestra.outputs({\'status\': d.status, \'text\': d.data}))\n    console.log(require(\'./mymodule\').value)\n  data.json: |\n    {"status": "ok"}\n  mymodule.js: |\n    module.exports.value = \'hello world\'\n  package.json: |\n    {\n      "name": "tmp",\n      "version": "1.0.0",\n      "description": "",\n      "main": "index.js",\n      "dependencies": {\n          "axios": "^0.20.0"\n      },\n      "devdependencies": {},\n      "scripts": {\n          "test": "echo "error: no test specified" && exit 1"\n      },\n      "author": "",\n      "license": "isc"\n    }\nargs:\n  - data.json\n\n\n\n# properties\n\n\n# args\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> node command args\n\narguments list to pass to main javascript script\n\n\n# dockeroptions\n\n * type: dockeroptions\n * dynamic: ❓\n * required: ❌\n\n> docker options when using runner docker\n\n\n# env\n\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> additional environnements variable to add for current process.\n\n\n# exitonfailed\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> exit if any non true return value\n\nthis tells bash that it should exit the script if any statement returns a non-true return value.\nthe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n\n# files\n\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> the list of files that will be uploaded to internal storage,\n\nuse outputfiles property instead\n\n\n# inputfiles\n\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> input files are extra files supplied by user that make it simpler organize code.\n\ndescribe a files map that will be written and usable in execution context. in python execution context is in a temp folder, for bash scripts, you can reach files using a workingdir variable like \'source {{workingdir}}/myfile.sh\'\n\n\n# interpreter\n\n * type: string\n * dynamic: ❌\n * required: ✔️\n * default: /bin/sh\n * min length: 1\n\n> interpreter to used\n\n\n# interpreterargs\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n * default: [-c]\n\n> interpreter args used\n\n\n# nodepath\n\n * type: string\n * dynamic: ❓\n * required: ❌\n * default: node\n\n> the node interpreter to use\n\nset the node interpreter path to use\n\n\n# npmpath\n\n * type: string\n * dynamic: ❓\n * required: ❌\n * default: npm\n\n> the npm binary to use\n\nset the npm binary path for node dependencies setup\n\n\n# outputfiles\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> output file list that will be uploaded to internal storage\n\nlist of key that will generate temporary files.\non the command, just can use with special variable named outputfiles.key.\nif you add a files with ["first"], you can use the special vars echo 1 >> {[ outputfiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n\n# outputsfiles\n\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> deprecated output file\n\nuse outputfiles\n\n\n# runner\n\n * type: string\n\n * dynamic: ❌\n\n * required: ✔️\n\n * default: process\n\n * possible values:\n   \n   * process\n   * docker\n\n> runner to use\n\n\n# warningonstderr\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> use warning state if any stderr is sent\n\n\n# outputs\n\n\n# exitcode\n\n * type: integer\n * default: 0\n\n> the exit code of the whole execution\n\n\n# files\n\n🔒 deprecated\n\n * type: object\n * subtype: string\n\n> deprecated output files\n\nuse outputfiles\n\n\n# outputfiles\n\n * type: object\n * subtype: string\n\n> the output files uri in kestra internal storage\n\n\n# stderrlinecount\n\n * type: integer\n * default: 0\n\n> the standard error line count\n\n\n# stdoutlinecount\n\n * type: integer\n * default: 0\n\n> the standard output line count\n\n\n# vars\n\n * type: object\n\n> the value extract from output of the commands\n\n\n# definitions\n\n\n# dockeroptions\n\n# dockerconfig\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> docker config file\n\nfull file that can be used to configure private registries, ...\n\n# dockerhost\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n * default: unix:///var/run/docker.sock\n\n> docker api uri\n\n# entrypoint\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> docker entrypoint to use\n\n# extrahosts\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> docker extra host to use\n\n# image\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> docker image to use\n\n# user\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> docker user to use',charsets:{cjk:!0}},{title:"Python",frontmatter:{title:"Python",editLink:!1,description:"Execute a Python script",icon:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB2aWV3Qm94PSIwIDAgODUgODUiIGZpbGw9IiNmZmYiIGZpbGwtcnVsZT0iZXZlbm9kZCIgc3Ryb2tlPSIjMDAwIiBzdHJva2UtbGluZWNhcD0icm91bmQiIHN0cm9rZS1saW5lam9pbj0icm91bmQiPjx1c2UgeGxpbms6aHJlZj0iI0MiIHg9IjIuNSIgeT0iMi41Ii8+PGRlZnM+PGxpbmVhckdyYWRpZW50IGlkPSJBIiB4MT0iNTIlIiB5MT0iMCUiIHgyPSI0OCUiIHkyPSIxMDAlIj48c3RvcCBvZmZzZXQ9IjAlIiBzdG9wLWNvbG9yPSIjMzg3ZWI4Ii8+PHN0b3Agb2Zmc2V0PSIxMDAlIiBzdG9wLWNvbG9yPSIjMzY2OTk0Ii8+PC9saW5lYXJHcmFkaWVudD48bGluZWFyR3JhZGllbnQgaWQ9IkIiIHgxPSI1MCUiIHkxPSIwJSIgeDI9IjUwJSIgeTI9IjEwMCUiPjxzdG9wIG9mZnNldD0iMCUiIHN0b3AtY29sb3I9IiNmZmUwNTIiLz48c3RvcCBvZmZzZXQ9IjEwMCUiIHN0b3AtY29sb3I9IiNmZmMzMzEiLz48L2xpbmVhckdyYWRpZW50PjwvZGVmcz48c3ltYm9sIGlkPSJDIiBvdmVyZmxvdz0idmlzaWJsZSI+PGcgc3Ryb2tlPSJub25lIj48cGF0aCBkPSJNMzkuNzEyIDBDMTkuNDAzIDAgMjAuNjcxIDguODUzIDIwLjY3MSA4Ljg1M2wuMDIzIDkuMTcyaDE5LjM4MXYyLjc1NEgxMi45OTZTMCAxOS4yOTggMCAzOS44OTZzMTEuMzQzIDE5Ljg2OSAxMS4zNDMgMTkuODY5aDYuNzd2LTkuNTU5cy0uMzY1LTExLjQwMiAxMS4xNjItMTEuNDAyaDE5LjIyMnMxMC43OTkuMTc1IDEwLjc5OS0xMC40OTJWMTAuNjc0UzYwLjkzNiAwIDM5LjcxMiAwek0yOS4wMjUgNi4xNjhjLjkyNS0uMDAxIDEuODEyLjM2OCAyLjQ2NiAxLjAyNmEzLjUxIDMuNTEgMCAwIDEgMCA0Ljk1OGMtLjY1NC42NTctMS41NDEgMS4wMjYtMi40NjYgMS4wMjZzLTEuODEyLS4zNjgtMi40NjYtMS4wMjZhMy41MSAzLjUxIDAgMCAxIDAtNC45NThjLjY1NC0uNjU3IDEuNTQxLTEuMDI2IDIuNDY2LTEuMDI2eiIgZmlsbD0idXJsKCNBKSIvPjxwYXRoIGQ9Ik00MC4yODkgODBjMjAuMzA5IDAgMTkuMDQxLTguODUzIDE5LjA0MS04Ljg1M2wtLjAyMy05LjE3MkgzOS45MjZ2LTIuNzU0aDI3LjA3OFM4MCA2MC43MDMgODAgNDAuMTA0IDY4LjY1NyAyMC4yMzUgNjguNjU3IDIwLjIzNWgtNi43N3Y5LjU1OXMuMzY1IDExLjQwMi0xMS4xNjIgMTEuNDAySDMxLjUwNHMtMTAuOC0uMTc1LTEwLjggMTAuNDkydjE3LjYzOFMxOS4wNjUgODAgNDAuMjg5IDgwem0xMC42ODYtNi4xNjhjLS45MjUuMDAxLTEuODEyLS4zNjgtMi40NjYtMS4wMjZhMy41MSAzLjUxIDAgMCAxIDAtNC45NThjLjY1NC0uNjU3IDEuNTQxLTEuMDI2IDIuNDY2LTEuMDI2czEuODEyLjM2OCAyLjQ2NiAxLjAyNmEzLjUxIDMuNTEgMCAwIDEgMCA0Ljk1OGMtLjY1NC42NTctMS41NDEgMS4wMjYtMi40NjYgMS4wMjZ6IiBmaWxsPSJ1cmwoI0IpIi8+PC9nPjwvc3ltYm9sPjwvc3ZnPg==",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Python"},{property:"og:description",content:"Execute a Python script | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/core/tasks/scripts/io.kestra.core.tasks.scripts.Python.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Python"},{name:"twitter:description",content:"Execute a Python script | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/core/tasks/scripts/io.kestra.core.tasks.scripts.Python.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/core/tasks/scripts/io.kestra.core.tasks.scripts.Python.html",relativePath:"plugins/core/tasks/scripts/io.kestra.core.tasks.scripts.Python.md",key:"v-6a588fb7",path:"/plugins/core/tasks/scripts/io.kestra.core.tasks.scripts.Python.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:1057},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:1668},{level:3,title:"args",slug:"args",normalizedTitle:"args",charIndex:1616},{level:3,title:"commands",slug:"commands",normalizedTitle:"commands",charIndex:1826},{level:3,title:"dockerOptions",slug:"dockeroptions",normalizedTitle:"dockeroptions",charIndex:2048},{level:3,title:"env",slug:"env",normalizedTitle:"env",charIndex:177},{level:3,title:"exitOnFailed",slug:"exitonfailed",normalizedTitle:"exitonfailed",charIndex:2302},{level:3,title:"files",slug:"files",normalizedTitle:"files",charIndex:329},{level:3,title:"inputFiles",slug:"inputfiles",normalizedTitle:"inputfiles",charIndex:338},{level:3,title:"interpreter",slug:"interpreter",normalizedTitle:"interpreter",charIndex:3227},{level:3,title:"interpreterArgs",slug:"interpreterargs",normalizedTitle:"interpreterargs",charIndex:3350},{level:3,title:"outputFiles",slug:"outputfiles",normalizedTitle:"outputfiles",charIndex:2799},{level:3,title:"outputsFiles",slug:"outputsfiles",normalizedTitle:"outputsfiles",charIndex:3908},{level:3,title:"pythonPath",slug:"pythonpath",normalizedTitle:"pythonpath",charIndex:4047},{level:3,title:"requirements",slug:"requirements",normalizedTitle:"requirements",charIndex:252},{level:3,title:"runner",slug:"runner",normalizedTitle:"runner",charIndex:2144},{level:3,title:"warningOnStdErr",slug:"warningonstderr",normalizedTitle:"warningonstderr",charIndex:4623},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:4751},{level:3,title:"exitCode",slug:"exitcode",normalizedTitle:"exitcode",charIndex:4763},{level:3,title:"files",slug:"files-2",normalizedTitle:"files",charIndex:329},{level:3,title:"outputFiles",slug:"outputfiles-2",normalizedTitle:"outputfiles",charIndex:2799},{level:3,title:"stdErrLineCount",slug:"stderrlinecount",normalizedTitle:"stderrlinecount",charIndex:5056},{level:3,title:"stdOutLineCount",slug:"stdoutlinecount",normalizedTitle:"stdoutlinecount",charIndex:5141},{level:3,title:"vars",slug:"vars",normalizedTitle:"vars",charIndex:3796},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:5302},{level:3,title:"DockerOptions",slug:"dockeroptions-2",normalizedTitle:"dockeroptions",charIndex:2072}],headersStr:"Examples Properties args commands dockerOptions env exitOnFailed files inputFiles interpreter interpreterArgs outputFiles outputsFiles pythonPath requirements runner warningOnStdErr Outputs exitCode files outputFiles stdErrLineCount stdOutLineCount vars Definitions DockerOptions",content:"Python\n\ntype: \"io.kestra.core.tasks.scripts.Python\"\n\n\n> Execute a Python script\n\nWith this Python task, we can execute a full python script.\nThe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nBy convention, you need to define at least a main.py files in inputFiles that will be the script used.\nBut you are also able to add as many script as you need in inputFiles.\n\nYou can also add a pip.conf in inputFiles to customize the pip download of dependencies (like a private registry).\n\nYou can send outputs & metrics from your python script that can be used by others tasks. In order to help, we inject a python package directly on the working dir.Here is an example usage:\n\nfrom kestra import Kestra\nKestra.outputs({'test': 'value', 'int': 2, 'bool': True, 'float': 3.65})\nKestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nKestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nKestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n\n# Examples\n\n> Execute a python script\n\nid: \"python\"\ntype: \"io.kestra.core.tasks.scripts.Python\"\ninputFiles:\n  data.json: |\n          {\"status\": \"OK\"}\n  main.py: |\n    from kestra import Kestra\n    import json\n    import requests\n    import sys\n    result = json.loads(open(sys.argv[1]).read())\n    print(f\"python script {result['status']}\")\n    response = requests.get('http://google.com')\n    print(response.status_code)\n    Kestra.outputs({'status': response.status_code, 'text': response.text})\n  pip.conf: |\n    # some specific pip repository configuration\nargs:\n  - data.json\nrequirements:\n  - requests\n\n\n\n# Properties\n\n\n# args\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Python command args\n\nArguments list to pass to main python script\n\n\n# commands\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ✔️\n * Default: [./bin/python main.py]\n * Min items: 1\n\n> The commands to run\n\nDefault command will be launched with ./bin/python main.py {{args}}\n\n\n# dockerOptions\n\n * Type: DockerOptions\n * Dynamic: ❓\n * Required: ❌\n\n> Docker options when using runner DOCKER\n\n\n# env\n\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Additional environnements variable to add for current process.\n\n\n# exitOnFailed\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Exit if any non true return value\n\nThis tells bash that it should exit the script if any statement returns a non-true return value.\nThe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n\n# files\n\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The list of files that will be uploaded to internal storage,\n\nuse outputFiles property instead\n\n\n# inputFiles\n\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Input files are extra files supplied by user that make it simpler organize code.\n\nDescribe a files map that will be written and usable in execution context. In python execution context is in a temp folder, for bash scripts, you can reach files using a workingDir variable like 'source {{workingDir}}/myfile.sh'\n\n\n# interpreter\n\n * Type: string\n * Dynamic: ❌\n * Required: ✔️\n * Default: /bin/sh\n * Min length: 1\n\n> Interpreter to used\n\n\n# interpreterArgs\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n * Default: [-c]\n\n> Interpreter args used\n\n\n# outputFiles\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Output file list that will be uploaded to internal storage\n\nList of key that will generate temporary files.\nOn the command, just can use with special variable named outputFiles.key.\nIf you add a files with [\"first\"], you can use the special vars echo 1 >> {[ outputFiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n\n# outputsFiles\n\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Deprecated Output file\n\nuse outputFiles\n\n\n# pythonPath\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Default: python\n * Min length: 1\n\n> The python interpreter to use\n\nSet the python interpreter path to use\n\n\n# requirements\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Requirements are python dependencies to add to the python execution process\n\nPython dependencies list to setup in the virtualenv, in the same format than requirements.txt\n\n\n# runner\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ✔️\n\n * Default: PROCESS\n\n * Possible Values:\n   \n   * PROCESS\n   * DOCKER\n\n> Runner to use\n\n\n# warningOnStdErr\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Use WARNING state if any stdErr is sent\n\n\n# Outputs\n\n\n# exitCode\n\n * Type: integer\n * Default: 0\n\n> The exit code of the whole execution\n\n\n# files\n\n🔒 Deprecated\n\n * Type: object\n * SubType: string\n\n> Deprecated output files\n\nuse outputFiles\n\n\n# outputFiles\n\n * Type: object\n * SubType: string\n\n> The output files uri in Kestra internal storage\n\n\n# stdErrLineCount\n\n * Type: integer\n * Default: 0\n\n> The standard error line count\n\n\n# stdOutLineCount\n\n * Type: integer\n * Default: 0\n\n> The standard output line count\n\n\n# vars\n\n * Type: object\n\n> The value extract from output of the commands\n\n\n# Definitions\n\n\n# DockerOptions\n\n# dockerConfig\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker config file\n\nFull file that can be used to configure private registries, ...\n\n# dockerHost\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: unix:///var/run/docker.sock\n\n> Docker api uri\n\n# entryPoint\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker entrypoint to use\n\n# extraHosts\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker extra host to use\n\n# image\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> Docker image to use\n\n# user\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker user to use",normalizedContent:"python\n\ntype: \"io.kestra.core.tasks.scripts.python\"\n\n\n> execute a python script\n\nwith this python task, we can execute a full python script.\nthe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nby convention, you need to define at least a main.py files in inputfiles that will be the script used.\nbut you are also able to add as many script as you need in inputfiles.\n\nyou can also add a pip.conf in inputfiles to customize the pip download of dependencies (like a private registry).\n\nyou can send outputs & metrics from your python script that can be used by others tasks. in order to help, we inject a python package directly on the working dir.here is an example usage:\n\nfrom kestra import kestra\nkestra.outputs({'test': 'value', 'int': 2, 'bool': true, 'float': 3.65})\nkestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nkestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nkestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n\n# examples\n\n> execute a python script\n\nid: \"python\"\ntype: \"io.kestra.core.tasks.scripts.python\"\ninputfiles:\n  data.json: |\n          {\"status\": \"ok\"}\n  main.py: |\n    from kestra import kestra\n    import json\n    import requests\n    import sys\n    result = json.loads(open(sys.argv[1]).read())\n    print(f\"python script {result['status']}\")\n    response = requests.get('http://google.com')\n    print(response.status_code)\n    kestra.outputs({'status': response.status_code, 'text': response.text})\n  pip.conf: |\n    # some specific pip repository configuration\nargs:\n  - data.json\nrequirements:\n  - requests\n\n\n\n# properties\n\n\n# args\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> python command args\n\narguments list to pass to main python script\n\n\n# commands\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ✔️\n * default: [./bin/python main.py]\n * min items: 1\n\n> the commands to run\n\ndefault command will be launched with ./bin/python main.py {{args}}\n\n\n# dockeroptions\n\n * type: dockeroptions\n * dynamic: ❓\n * required: ❌\n\n> docker options when using runner docker\n\n\n# env\n\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> additional environnements variable to add for current process.\n\n\n# exitonfailed\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> exit if any non true return value\n\nthis tells bash that it should exit the script if any statement returns a non-true return value.\nthe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n\n# files\n\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> the list of files that will be uploaded to internal storage,\n\nuse outputfiles property instead\n\n\n# inputfiles\n\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> input files are extra files supplied by user that make it simpler organize code.\n\ndescribe a files map that will be written and usable in execution context. in python execution context is in a temp folder, for bash scripts, you can reach files using a workingdir variable like 'source {{workingdir}}/myfile.sh'\n\n\n# interpreter\n\n * type: string\n * dynamic: ❌\n * required: ✔️\n * default: /bin/sh\n * min length: 1\n\n> interpreter to used\n\n\n# interpreterargs\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n * default: [-c]\n\n> interpreter args used\n\n\n# outputfiles\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> output file list that will be uploaded to internal storage\n\nlist of key that will generate temporary files.\non the command, just can use with special variable named outputfiles.key.\nif you add a files with [\"first\"], you can use the special vars echo 1 >> {[ outputfiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n\n# outputsfiles\n\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> deprecated output file\n\nuse outputfiles\n\n\n# pythonpath\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * default: python\n * min length: 1\n\n> the python interpreter to use\n\nset the python interpreter path to use\n\n\n# requirements\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> requirements are python dependencies to add to the python execution process\n\npython dependencies list to setup in the virtualenv, in the same format than requirements.txt\n\n\n# runner\n\n * type: string\n\n * dynamic: ❌\n\n * required: ✔️\n\n * default: process\n\n * possible values:\n   \n   * process\n   * docker\n\n> runner to use\n\n\n# warningonstderr\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> use warning state if any stderr is sent\n\n\n# outputs\n\n\n# exitcode\n\n * type: integer\n * default: 0\n\n> the exit code of the whole execution\n\n\n# files\n\n🔒 deprecated\n\n * type: object\n * subtype: string\n\n> deprecated output files\n\nuse outputfiles\n\n\n# outputfiles\n\n * type: object\n * subtype: string\n\n> the output files uri in kestra internal storage\n\n\n# stderrlinecount\n\n * type: integer\n * default: 0\n\n> the standard error line count\n\n\n# stdoutlinecount\n\n * type: integer\n * default: 0\n\n> the standard output line count\n\n\n# vars\n\n * type: object\n\n> the value extract from output of the commands\n\n\n# definitions\n\n\n# dockeroptions\n\n# dockerconfig\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> docker config file\n\nfull file that can be used to configure private registries, ...\n\n# dockerhost\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n * default: unix:///var/run/docker.sock\n\n> docker api uri\n\n# entrypoint\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> docker entrypoint to use\n\n# extrahosts\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> docker extra host to use\n\n# image\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> docker image to use\n\n# user\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> docker user to use",charsets:{cjk:!0}},{title:"Concat",frontmatter:{title:"Concat",editLink:!1,description:"Concat files from internal storage.",icon:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB3aWR0aD0iMTAyNCIgaGVpZ2h0PSIxMDI0IgogICAgIHByZXNlcnZlQXNwZWN0UmF0aW89InhNaWRZTWlkIG1lZXQiIHZpZXdCb3g9IjAgMCAxMDI0IDEwMjQiCiAgICAgc3R5bGU9Ii1tcy10cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpOyAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKDM2MGRlZyk7IHRyYW5zZm9ybTogcm90YXRlKDM2MGRlZyk7Ij4KICAgIDxkZWZzLz4KICAgIDxwYXRoCiAgICAgICAgZD0iTTQ4Mi4yIDUwOC40TDMzMS4zIDM4OWMtMy0yLjQtNy4zLS4yLTcuMyAzLjZWNDc4SDE4NFYxODRoMjA0djEyOGMwIDIuMiAxLjggNCA0IDRoNjBjMi4yIDAgNC0xLjggNC00VjE0NGMwLTE1LjUtMTIuNS0yOC0yOC0yOEgxNDRjLTE1LjUgMC0yOCAxMi41LTI4IDI4djczNmMwIDE1LjUgMTIuNSAyOCAyOCAyOGgyODRjMTUuNSAwIDI4LTEyLjUgMjgtMjhWNzEyYzAtMi4yLTEuOC00LTQtNGgtNjBjLTIuMiAwLTQgMS44LTQgNHYxMjhIMTg0VjU0NmgxNDB2ODUuNGMwIDMuOCA0LjQgNiA3LjMgMy42bDE1MC45LTExOS40YzIuNC0xLjggMi40LTUuNCAwLTcuMnpNODgwIDExNkg1OTZjLTE1LjUgMC0yOCAxMi41LTI4IDI4djE2OGMwIDIuMiAxLjggNCA0IDRoNjBjMi4yIDAgNC0xLjggNC00VjE4NGgyMDR2Mjk0SDcwMHYtODUuNGMwLTMuOC00LjMtNi03LjMtMy42bC0xNTEgMTE5LjRjLTIuMyAxLjgtMi4zIDUuMyAwIDcuMWwxNTEgMTE5LjVjMi45IDIuMyA3LjMuMiA3LjMtMy42VjU0NmgxNDB2Mjk0SDYzNlY3MTJjMC0yLjItMS44LTQtNC00aC02MGMtMi4yIDAtNCAxLjgtNCA0djE2OGMwIDE1LjUgMTIuNSAyOCAyOCAyOGgyODRjMTUuNSAwIDI4LTEyLjUgMjgtMjhWMTQ0YzAtMTUuNS0xMi41LTI4LTI4LTI4eiIKICAgICAgICBmaWxsPSIjMEQxNTIzIi8+Cjwvc3ZnPg==",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Concat"},{property:"og:description",content:"Concat files from internal storage. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/core/tasks/storages/io.kestra.core.tasks.storages.Concat.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Concat"},{name:"twitter:description",content:"Concat files from internal storage. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/core/tasks/storages/io.kestra.core.tasks.storages.Concat.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/core/tasks/storages/io.kestra.core.tasks.storages.Concat.html",relativePath:"plugins/core/tasks/storages/io.kestra.core.tasks.storages.Concat.md",key:"v-0943ab37",path:"/plugins/core/tasks/storages/io.kestra.core.tasks.storages.Concat.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:97},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:923},{level:3,title:"files",slug:"files",normalizedTitle:"files",charIndex:64},{level:3,title:"separator",slug:"separator",normalizedTitle:"separator",charIndex:138},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1207},{level:3,title:"uri",slug:"uri",normalizedTitle:"uri",charIndex:1219},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:1273}],headersStr:"Examples Properties files separator Outputs uri Definitions",content:'Concat\n\ntype: "io.kestra.core.tasks.storages.Concat"\n\n\n> Concat files from internal storage.\n\n\n# Examples\n\n> Concat 2 files with a custom separator\n\nid: "concat"\ntype: "io.kestra.core.tasks.storages.Concat"\nfiles: \n  - "kestra://long/url/file1.txt"\n  - "kestra://long/url/file2.txt"\nseparator: "\\n"\n\n\n> Concat file generated by a each tasks\n\ntasks:\n  - id: each\n    type: io.kestra.core.tasks.flows.EachSequential\n    tasks:\n      - id: start_api_call\n        type: io.kestra.core.tasks.scripts.Bash\n        commands:\n          - echo {{ taskrun.value }} > {{ temp.generated }}\n        files:\n          - generated\n    value: \'["value1", "value2", "value3"]\'\n  - id: concat\n    type: io.kestra.core.tasks.storages.Concat\n    files:\n      - "{{ outputs.start_api_call.value1.files.generated }}"\n      - "{{ outputs.start_api_call.value2.files.generated }}"\n      - "{{ outputs.start_api_call.value3.files.generated }}"\n\n\n\n# Properties\n\n\n# files\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> List of files to be concatenated.\n\nMust be a kestra:// storage url\n\n\n# separator\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The separator to used between files, default is no seprator\n\n\n# Outputs\n\n\n# uri\n\n * Type: string\n\n> The concatenate file uri.\n\n\n# Definitions',normalizedContent:'concat\n\ntype: "io.kestra.core.tasks.storages.concat"\n\n\n> concat files from internal storage.\n\n\n# examples\n\n> concat 2 files with a custom separator\n\nid: "concat"\ntype: "io.kestra.core.tasks.storages.concat"\nfiles: \n  - "kestra://long/url/file1.txt"\n  - "kestra://long/url/file2.txt"\nseparator: "\\n"\n\n\n> concat file generated by a each tasks\n\ntasks:\n  - id: each\n    type: io.kestra.core.tasks.flows.eachsequential\n    tasks:\n      - id: start_api_call\n        type: io.kestra.core.tasks.scripts.bash\n        commands:\n          - echo {{ taskrun.value }} > {{ temp.generated }}\n        files:\n          - generated\n    value: \'["value1", "value2", "value3"]\'\n  - id: concat\n    type: io.kestra.core.tasks.storages.concat\n    files:\n      - "{{ outputs.start_api_call.value1.files.generated }}"\n      - "{{ outputs.start_api_call.value2.files.generated }}"\n      - "{{ outputs.start_api_call.value3.files.generated }}"\n\n\n\n# properties\n\n\n# files\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> list of files to be concatenated.\n\nmust be a kestra:// storage url\n\n\n# separator\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the separator to used between files, default is no seprator\n\n\n# outputs\n\n\n# uri\n\n * type: string\n\n> the concatenate file uri.\n\n\n# definitions',charsets:{}},{title:"Delete",frontmatter:{title:"Delete",editLink:!1,description:"Delete a file from internal storage.",icon:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB3aWR0aD0iMTAyNCIgaGVpZ2h0PSIxMDI0IgogICAgIHByZXNlcnZlQXNwZWN0UmF0aW89InhNaWRZTWlkIG1lZXQiIHZpZXdCb3g9IjAgMCAxMDI0IDEwMjQiCiAgICAgc3R5bGU9Ii1tcy10cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpOyAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKDM2MGRlZyk7IHRyYW5zZm9ybTogcm90YXRlKDM2MGRlZyk7Ij4KICAgIDxkZWZzLz4KICAgIDxwYXRoCiAgICAgICAgZD0iTTY1MS4xIDY0MS45Yy0xLjQtMS4yLTMuMi0xLjktNS4xLTEuOWgtNTQuN2MtMi40IDAtNC42IDEuMS02LjEgMi45TDUxMiA3MzAuN2wtNzMuMS04Ny44Yy0xLjUtMS44LTMuOC0yLjktNi4xLTIuOUgzNzhjLTEuOSAwLTMuNy43LTUuMSAxLjljLTMuNCAyLjgtMy45IDcuOS0xIDExLjNMNDc0LjIgNzc2TDM3MS44IDg5OC45Yy0yLjggMy40LTIuNCA4LjQgMSAxMS4zYzEuNCAxLjIgMy4yIDEuOSA1LjEgMS45aDU0LjdjMi40IDAgNC42LTEuMSA2LjEtMi45bDczLjEtODcuOGw3My4xIDg3LjhjMS41IDEuOCAzLjggMi45IDYuMSAyLjloNTVjMS45IDAgMy43LS43IDUuMS0xLjljMy40LTIuOCAzLjktNy45IDEtMTEuM0w1NDkuOCA3NzZsMTAyLjQtMTIyLjljMi44LTMuNCAyLjMtOC40LTEuMS0xMS4yek00NzIgNTQ0aDgwYzQuNCAwIDgtMy42IDgtOFYxMjBjMC00LjQtMy42LTgtOC04aC04MGMtNC40IDAtOCAzLjYtOCA4djQxNmMwIDQuNCAzLjYgOCA4IDh6TTM1MCAzODZIMTg0VjEzNmMwLTMuMy0yLjctNi02LTZoLTYwYy0zLjMgMC02IDIuNy02IDZ2MjkyYzAgMTYuNiAxMy40IDMwIDMwIDMwaDIwOGMzLjMgMCA2LTIuNyA2LTZ2LTYwYzAtMy4zLTIuNy02LTYtNnptNTU2LTI1NmgtNjBjLTMuMyAwLTYgMi43LTYgNnYyNTBINjc0Yy0zLjMgMC02IDIuNy02IDZ2NjBjMCAzLjMgMi43IDYgNiA2aDIwOGMxNi42IDAgMzAtMTMuNCAzMC0zMFYxMzZjMC0zLjMtMi43LTYtNi02eiIKICAgICAgICBmaWxsPSIjMEQxNTIzIi8+Cjwvc3ZnPg==",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Delete"},{property:"og:description",content:"Delete a file from internal storage. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/core/tasks/storages/io.kestra.core.tasks.storages.Delete.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Delete"},{name:"twitter:description",content:"Delete a file from internal storage. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/core/tasks/storages/io.kestra.core.tasks.storages.Delete.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/core/tasks/storages/io.kestra.core.tasks.storages.Delete.html",relativePath:"plugins/core/tasks/storages/io.kestra.core.tasks.storages.Delete.md",key:"v-66fcc649",path:"/plugins/core/tasks/storages/io.kestra.core.tasks.storages.Delete.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:98},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:205},{level:3,title:"errorOnMissing",slug:"erroronmissing",normalizedTitle:"erroronmissing",charIndex:220},{level:3,title:"uri",slug:"uri",normalizedTitle:"uri",charIndex:166},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:458},{level:3,title:"deleted",slug:"deleted",normalizedTitle:"deleted",charIndex:470},{level:3,title:"uri",slug:"uri-2",normalizedTitle:"uri",charIndex:166},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:575}],headersStr:"Examples Properties errorOnMissing uri Outputs deleted uri Definitions",content:'Delete\n\ntype: "io.kestra.core.tasks.storages.Delete"\n\n\n> Delete a file from internal storage.\n\n\n# Examples\n\nid: "delete"\ntype: "io.kestra.core.tasks.storages.Delete"\nuri: "kestra://long/url/file.txt"\n\n\n\n# Properties\n\n\n# errorOnMissing\n\n * Type: boolean\n * Dynamic: ✔️\n * Required: ❌\n * Default: false\n\n> raise an error if the file is not found\n\n\n# uri\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> the file to delete\n\nMust be a kestra:// storage url\n\n\n# Outputs\n\n\n# deleted\n\n * Type: boolean\n\n> If the files was really deleted\n\n\n# uri\n\n * Type: string\n\n> The deleted\n\n\n# Definitions',normalizedContent:'delete\n\ntype: "io.kestra.core.tasks.storages.delete"\n\n\n> delete a file from internal storage.\n\n\n# examples\n\nid: "delete"\ntype: "io.kestra.core.tasks.storages.delete"\nuri: "kestra://long/url/file.txt"\n\n\n\n# properties\n\n\n# erroronmissing\n\n * type: boolean\n * dynamic: ✔️\n * required: ❌\n * default: false\n\n> raise an error if the file is not found\n\n\n# uri\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the file to delete\n\nmust be a kestra:// storage url\n\n\n# outputs\n\n\n# deleted\n\n * type: boolean\n\n> if the files was really deleted\n\n\n# uri\n\n * type: string\n\n> the deleted\n\n\n# definitions',charsets:{}},{title:"Size",frontmatter:{title:"Size",editLink:!1,description:"Get a filesize from internal storage.",icon:"PHN2ZyBoZWlnaHQ9JzMwMHB4JyB3aWR0aD0nMzAwcHgnICBmaWxsPSIjMEQxNTIzIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB2ZXJzaW9uPSIxLjEiIHg9IjBweCIgeT0iMHB4IiB2aWV3Qm94PSIwIDAgMzIgMzIiIHN0eWxlPSJlbmFibGUtYmFja2dyb3VuZDpuZXcgMCAwIDMyIDMyOyIgeG1sOnNwYWNlPSJwcmVzZXJ2ZSI+PGc+PGc+PHBhdGggZD0iTTUsNEgzQzIuNDQ3NzUzOSw0LDIsMy41NTI3MzQ0LDIsM3MwLjQ0Nzc1MzktMSwxLTFoMVYxYzAtMC41NTI3MzQ0LDAuNDQ3NzUzOS0xLDEtMXMxLDAuNDQ3MjY1NiwxLDF2MiAgICBDNiwzLjU1MjczNDQsNS41NTIyNDYxLDQsNSw0eiI+PC9wYXRoPjwvZz48Zz48cGF0aCBkPSJNMjksNGgtMmMtMC41NTIyNDYxLDAtMS0wLjQ0NzI2NTYtMS0xVjFjMC0wLjU1MjczNDQsMC40NDc3NTM5LTEsMS0xczEsMC40NDcyNjU2LDEsMXYxaDFjMC41NTIyNDYxLDAsMSwwLjQ0NzI2NTYsMSwxICAgIFMyOS41NTIyNDYxLDQsMjksNHoiPjwvcGF0aD48L2c+PGc+PHBhdGggZD0iTTUsMzJjLTAuNTUyMjQ2MSwwLTEtMC40NDcyNjU2LTEtMXYtMUgzYy0wLjU1MjI0NjEsMC0xLTAuNDQ3MjY1Ni0xLTFzMC40NDc3NTM5LTEsMS0xaDJjMC41NTIyNDYxLDAsMSwwLjQ0NzI2NTYsMSwxdjIgICAgQzYsMzEuNTUyNzM0NCw1LjU1MjI0NjEsMzIsNSwzMnoiPjwvcGF0aD48L2c+PGc+PHBhdGggZD0iTTI3LDMyYy0wLjU1MjI0NjEsMC0xLTAuNDQ3MjY1Ni0xLTF2LTJjMC0wLjU1MjczNDQsMC40NDc3NTM5LTEsMS0xaDJjMC41NTIyNDYxLDAsMSwwLjQ0NzI2NTYsMSwxcy0wLjQ0Nzc1MzksMS0xLDFoLTEgICAgdjFDMjgsMzEuNTUyNzM0NCwyNy41NTIyNDYxLDMyLDI3LDMyeiI+PC9wYXRoPjwvZz48Zz48cGF0aCBkPSJNMjQuOTc5OTgwNSwyOEg3LjAyMDAxOTVjLTAuNTUyMjQ2MSwwLTEtMC40NDcyNjU2LTEtMVY1YzAtMC41NTI3MzQ0LDAuNDQ3NzUzOS0xLDEtMWgxNy45NTk5NjA5ICAgIGMwLjU1MjI0NjEsMCwxLDAuNDQ3MjY1NiwxLDF2MjJDMjUuOTc5OTgwNSwyNy41NTI3MzQ0LDI1LjUzMjIyNjYsMjgsMjQuOTc5OTgwNSwyOHogTTguMDIwMDE5NSwyNmgxNS45NTk5NjA5VjZIOC4wMjAwMTk1VjI2eiI+PC9wYXRoPjwvZz48Zz48cGF0aCBkPSJNMTYuOTYwOTM3NSwxMC45MDYyNWgtNi4xNDA2MjVjLTAuNTUyMjQ2MSwwLTEtMC40NDcyNjU2LTEtMXMwLjQ0Nzc1MzktMSwxLTFoNi4xNDA2MjVjMC41NTIyNDYxLDAsMSwwLjQ0NzI2NTYsMSwxICAgIFMxNy41MTMxODM2LDEwLjkwNjI1LDE2Ljk2MDkzNzUsMTAuOTA2MjV6Ij48L3BhdGg+PC9nPjxnPjxwYXRoIGQ9Ik0yMS4xNzk2ODc1LDE1LjQwNjI1aC0xMC4zNTkzNzVjLTAuNTUyMjQ2MSwwLTEtMC40NDcyNjU2LTEtMXMwLjQ0Nzc1MzktMSwxLTFoMTAuMzU5Mzc1YzAuNTUyMjQ2MSwwLDEsMC40NDcyNjU2LDEsMSAgICBTMjEuNzMxOTMzNiwxNS40MDYyNSwyMS4xNzk2ODc1LDE1LjQwNjI1eiI+PC9wYXRoPjwvZz48Zz48cGF0aCBkPSJNMjEuMTc5Njg3NSwxOS4yNWgtMTAuMzU5Mzc1Yy0wLjU1MjI0NjEsMC0xLTAuNDQ3MjY1Ni0xLTFzMC40NDc3NTM5LTEsMS0xaDEwLjM1OTM3NWMwLjU1MjI0NjEsMCwxLDAuNDQ3MjY1NiwxLDEgICAgUzIxLjczMTkzMzYsMTkuMjUsMjEuMTc5Njg3NSwxOS4yNXoiPjwvcGF0aD48L2c+PGc+PHBhdGggZD0iTTIxLjE3OTY4NzUsMjMuMDkzNzVoLTEwLjM1OTM3NWMtMC41NTIyNDYxLDAtMS0wLjQ0NzI2NTYtMS0xczAuNDQ3NzUzOS0xLDEtMWgxMC4zNTkzNzVjMC41NTIyNDYxLDAsMSwwLjQ0NzI2NTYsMSwxICAgIFMyMS43MzE5MzM2LDIzLjA5Mzc1LDIxLjE3OTY4NzUsMjMuMDkzNzV6Ij48L3BhdGg+PC9nPjwvZz48L3N2Zz4=",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Size"},{property:"og:description",content:"Get a filesize from internal storage. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/core/tasks/storages/io.kestra.core.tasks.storages.Size.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Size"},{name:"twitter:description",content:"Get a filesize from internal storage. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/core/tasks/storages/io.kestra.core.tasks.storages.Size.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/core/tasks/storages/io.kestra.core.tasks.storages.Size.html",relativePath:"plugins/core/tasks/storages/io.kestra.core.tasks.storages.Size.md",key:"v-ae992146",path:"/plugins/core/tasks/storages/io.kestra.core.tasks.storages.Size.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:95},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:198},{level:3,title:"uri",slug:"uri",normalizedTitle:"uri",charIndex:159},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:313},{level:3,title:"size",slug:"size",normalizedTitle:"size",charIndex:63},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:376}],headersStr:"Examples Properties uri Outputs size Definitions",content:'Size\n\ntype: "io.kestra.core.tasks.storages.Size"\n\n\n> Get a filesize from internal storage.\n\n\n# Examples\n\nid: "size"\ntype: "io.kestra.core.tasks.storages.Size"\nuri: "kestra://long/url/file.txt"\n\n\n\n# Properties\n\n\n# uri\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> the file\n\nMust be a kestra:// storage url\n\n\n# Outputs\n\n\n# size\n\n * Type: integer\n\n> The size of the file\n\n\n# Definitions',normalizedContent:'size\n\ntype: "io.kestra.core.tasks.storages.size"\n\n\n> get a filesize from internal storage.\n\n\n# examples\n\nid: "size"\ntype: "io.kestra.core.tasks.storages.size"\nuri: "kestra://long/url/file.txt"\n\n\n\n# properties\n\n\n# uri\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the file\n\nmust be a kestra:// storage url\n\n\n# outputs\n\n\n# size\n\n * type: integer\n\n> the size of the file\n\n\n# definitions',charsets:{}},{title:"PurgeExecution",frontmatter:{title:"PurgeExecution",editLink:!1,description:"Purge all files from internal storage created by this execution.",icon:"PHN2ZyBoZWlnaHQ9JzMwMHB4JyB3aWR0aD0nMzAwcHgnICBmaWxsPSIjMEQxNTIzIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOmNjPSJodHRwOi8vY3JlYXRpdmVjb21tb25zLm9yZy9ucyMiIHhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIiB2ZXJzaW9uPSIxLjEiIHZpZXdCb3g9IjAgMCAxMDAgMTAwIiB4PSIwcHgiIHk9IjBweCI+PHBhdGggZD0ibTE1LjMyOSAyLjgzMDlzLTAuNzMwODUgOC4wNDA1LTIuOTUxMyAxMC4yNzNjLTIuMjIwNSAyLjIzMjItMTAuMzcxIDMuMTIwNi0xMC4zNzEgMy4xMjA2czguMDAwNCAwLjgzNTQyIDEwLjIzMyAzLjA1NTljMi4yMzIxIDIuMjIwNSAzLjE1ODYgMTAuMjY3IDMuMTU4NiAxMC4yNjdzMC45NTE0MS04LjA1MTggMy4xNzE5LTEwLjI4NGMyLjIyMDUtMi4yMzIyIDEwLjE1My0zLjEwOTIgMTAuMTUzLTMuMTA5MnMtOC4xNDMxLTAuNzkzNTktMTAuMzc1LTMuMDE0MWMtMi4yMzIyLTIuMjIwNS0zLjAxNzktMTAuMzA5LTMuMDE3OS0xMC4zMDl6bTQwLjcyNyA4LjY1MjRzLTIuMjY0IDI0Ljk2LTkuMTU2MyAzMS44ODhjLTYuODkyMyA2LjkyODctMzIuMTk2IDkuNjgzMS0zMi4xOTYgOS42ODMxczI0LjgzNCAyLjU5NDggMzEuNzYzIDkuNDg3MmM2LjkyODcgNi44OTIzIDkuODA4NCAzMS44NjcgOS44MDg0IDMxLjg2N3MyLjk1MjMtMjQuOTkgOS44NDQ0LTMxLjkxOWM2Ljg5MjMtNi45Mjg3IDMxLjUxLTkuNjUyNyAzMS41MS05LjY1MjdzLTI1LjI3NS0yLjQ2MTctMzIuMjA0LTkuMzU0MWMtNi45Mjg3LTYuODkyMy05LjM2OTMtMzItOS4zNjkzLTMyem0tMzIuMjU3IDU4LjUwOXMtMC43Mjg5NCA4LjA0MjMtMi45NDk0IDEwLjI3NWMtMi4yMjA1IDIuMjMyMi0xMC4zNzMgMy4xMTg2LTEwLjM3MyAzLjExODZzOC4wMDI0IDAuODM3MzIgMTAuMjM1IDMuMDU3OGMyLjIzMjIgMi4yMjA1IDMuMTU4NiAxMC4yNjUgMy4xNTg2IDEwLjI2NXMwLjk1MTQxLTguMDQ5OSAzLjE3MTktMTAuMjgzYzIuMjIwNS0yLjIzMjIgMTAuMTUxLTMuMTExIDEwLjE1MS0zLjExMXMtOC4xNDEyLTAuNzkxNjgtMTAuMzczLTMuMDEyMmMtMi4yMzIyLTIuMjIwNS0zLjAxOTgtMTAuMzExLTMuMDE5OC0xMC4zMTF6IiBzdHJva2Utd2lkdGg9Ii45NzM2MyI+PC9wYXRoPjwvc3ZnPg==",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"PurgeExecution"},{property:"og:description",content:"Purge all files from internal storage created by this execution. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/core/tasks/storages/io.kestra.core.tasks.storages.PurgeExecution.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"PurgeExecution"},{name:"twitter:description",content:"Purge all files from internal storage created by this execution. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/core/tasks/storages/io.kestra.core.tasks.storages.PurgeExecution.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/core/tasks/storages/io.kestra.core.tasks.storages.PurgeExecution.html",relativePath:"plugins/core/tasks/storages/io.kestra.core.tasks.storages.PurgeExecution.md",key:"v-541b8ec5",path:"/plugins/core/tasks/storages/io.kestra.core.tasks.storages.PurgeExecution.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:388},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:479},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:494},{level:3,title:"uris",slug:"uris",normalizedTitle:"uris",charIndex:506},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:571}],headersStr:"Examples Properties Outputs uris Definitions",content:'PurgeExecution\n\ntype: "io.kestra.core.tasks.storages.PurgeExecution"\n\n\n> Purge all files from internal storage created by this execution.\n\nWill delete all the generated files from a flow for this current execution. This will delete:\n+- inputs\n\n * outputs\n * triggers\n\n * If you pass a internal storage from another execution, it will not be deleted, only current execution is deleted\n\n\n# Examples\n\nid: "purge_execution"\ntype: "io.kestra.core.tasks.storages.PurgeExecution"\n\n\n\n\n# Properties\n\n\n# Outputs\n\n\n# uris\n\n * Type: array\n * SubType: string\n\n> The deleted files\n\n\n# Definitions',normalizedContent:'purgeexecution\n\ntype: "io.kestra.core.tasks.storages.purgeexecution"\n\n\n> purge all files from internal storage created by this execution.\n\nwill delete all the generated files from a flow for this current execution. this will delete:\n+- inputs\n\n * outputs\n * triggers\n\n * if you pass a internal storage from another execution, it will not be deleted, only current execution is deleted\n\n\n# examples\n\nid: "purge_execution"\ntype: "io.kestra.core.tasks.storages.purgeexecution"\n\n\n\n\n# properties\n\n\n# outputs\n\n\n# uris\n\n * type: array\n * subtype: string\n\n> the deleted files\n\n\n# definitions',charsets:{}},{title:"Flow",frontmatter:{title:"Flow",editLink:!1,description:"Kestra is able to trigger flow after another one. This allows chaining flow without need to update the base flows.\nWith that, you can break responsibility between different flow to different teams.",icon:"PHN2ZyBoZWlnaHQ9JzMwMHB4JyB3aWR0aD0nMzAwcHgnICBmaWxsPSIjMEQxNTIzIiB4bWxuczp4PSJodHRwOi8vbnMuYWRvYmUuY29tL0V4dGVuc2liaWxpdHkvMS4wLyIgeG1sbnM6aT0iaHR0cDovL25zLmFkb2JlLmNvbS9BZG9iZUlsbHVzdHJhdG9yLzEwLjAvIiB4bWxuczpncmFwaD0iaHR0cDovL25zLmFkb2JlLmNvbS9HcmFwaHMvMS4wLyIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIgdmVyc2lvbj0iMS4xIiB4PSIwcHgiIHk9IjBweCIgdmlld0JveD0iMCAwIDEwMCAxMDAiIHN0eWxlPSJlbmFibGUtYmFja2dyb3VuZDpuZXcgMCAwIDEwMCAxMDA7IiB4bWw6c3BhY2U9InByZXNlcnZlIj48c3dpdGNoPjxmb3JlaWduT2JqZWN0IHJlcXVpcmVkRXh0ZW5zaW9ucz0iaHR0cDovL25zLmFkb2JlLmNvbS9BZG9iZUlsbHVzdHJhdG9yLzEwLjAvIiB4PSIwIiB5PSIwIiB3aWR0aD0iMSIgaGVpZ2h0PSIxIj48L2ZvcmVpZ25PYmplY3Q+PGcgaTpleHRyYW5lb3VzPSJzZWxmIj48Zz48Y2lyY2xlIGN4PSI1MCIgY3k9IjUwIiByPSIxMS43Ij48L2NpcmNsZT48cGF0aCBkPSJNNDguMywzMC45YzAuNSwwLjUsMS4xLDAuNywxLjcsMC43YzAuNiwwLDEuMi0wLjIsMS43LTAuN2w3LjItNy4yYzAuOS0wLjksMC45LTIuNSwwLTMuNHMtMi41LTAuOS0zLjQsMGwtMywzVjQuOSAgICAgYzAtMS4zLTEuMS0yLjQtMi40LTIuNGMtMS4zLDAtMi40LDEuMS0yLjQsMi40djE4LjRsLTMtM2MtMC45LTAuOS0yLjUtMC45LTMuNCwwcy0wLjksMi41LDAsMy40TDQ4LjMsMzAuOXoiPjwvcGF0aD48cGF0aCBkPSJNMjAuMyw1NS41Yy0wLjksMC45LTAuOSwyLjUsMCwzLjRjMC41LDAuNSwxLjEsMC43LDEuNywwLjdjMC42LDAsMS4yLTAuMiwxLjctMC43bDcuMi03LjJjMC41LTAuNSwwLjctMS4xLDAuNy0xLjcgICAgIHMtMC4zLTEuMy0wLjctMS43bC03LjItNy4yYy0wLjktMC45LTIuNS0wLjktMy40LDBjLTAuOSwwLjktMC45LDIuNSwwLDMuNGwzLDNINC45Yy0xLjMsMC0yLjQsMS4xLTIuNCwyLjRzMS4xLDIuNCwyLjQsMi40aDE4LjQgICAgIEwyMC4zLDU1LjV6Ij48L3BhdGg+PHBhdGggZD0iTTUxLjcsNjkuMWMtMC45LTAuOS0yLjUtMC45LTMuNCwwbC03LjIsNy4yYy0wLjksMC45LTAuOSwyLjUsMCwzLjRjMC41LDAuNSwxLjEsMC43LDEuNywwLjdzMS4yLTAuMiwxLjctMC43bDMtM3YxOC40ICAgICBjMCwxLjMsMS4xLDIuNCwyLjQsMi40YzEuMywwLDIuNC0xLjEsMi40LTIuNFY3Ni43bDMsM2MwLjksMC45LDIuNSwwLjksMy40LDBjMC45LTAuOSwwLjktMi41LDAtMy40TDUxLjcsNjkuMXoiPjwvcGF0aD48cGF0aCBkPSJNOTUuMSw0Ny42SDc2LjdsMy0zYzAuOS0wLjksMC45LTIuNSwwLTMuNGMtMC45LTAuOS0yLjUtMC45LTMuNCwwbC03LjIsNy4yYy0wLjUsMC41LTAuNywxLjEtMC43LDEuN3MwLjMsMS4zLDAuNywxLjcgICAgIGw3LjIsNy4yYzAuNSwwLjUsMS4xLDAuNywxLjcsMC43czEuMi0wLjIsMS43LTAuN2MwLjktMC45LDAuOS0yLjUsMC0zLjRsLTMtM2gxOC40YzEuMywwLDIuNC0xLjEsMi40LTIuNFM5Ni40LDQ3LjYsOTUuMSw0Ny42eiI+PC9wYXRoPjxwYXRoIGQ9Ik02NC43LDM3LjdjMC42LDAsMS4yLTAuMiwxLjctMC43bDEzLTEzdjQuM2MwLDEuMywxLjEsMi40LDIuNCwyLjRjMS4zLDAsMi40LTEuMSwyLjQtMi40VjE4LjFjMC0xLjMtMS4xLTIuNC0yLjQtMi40ICAgICBINzEuN2MtMS4zLDAtMi40LDEuMS0yLjQsMi40YzAsMS4zLDEuMSwyLjQsMi40LDIuNEg3NmwtMTMsMTNjLTAuOSwwLjktMC45LDIuNSwwLDMuNEM2My41LDM3LjUsNjQuMSwzNy43LDY0LjcsMzcuN3oiPjwvcGF0aD48cGF0aCBkPSJNMjQsMjAuNmg0LjNjMS4zLDAsMi40LTEuMSwyLjQtMi40YzAtMS4zLTEuMS0yLjQtMi40LTIuNEgxOC4xYy0xLjMsMC0yLjQsMS4xLTIuNCwyLjR2MTAuMmMwLDEuMywxLjEsMi40LDIuNCwyLjQgICAgIGMxLjMsMCwyLjQtMS4xLDIuNC0yLjRWMjRsMTMsMTNjMC41LDAuNSwxLjEsMC43LDEuNywwLjdzMS4yLTAuMiwxLjctMC43YzAuOS0wLjksMC45LTIuNSwwLTMuNEwyNCwyMC42eiI+PC9wYXRoPjxwYXRoIGQ9Ik0zMy42LDYzbC0xMywxM3YtNC4zYzAtMS4zLTEuMS0yLjQtMi40LTIuNGMtMS4zLDAtMi40LDEuMS0yLjQsMi40djEwLjJjMCwxLjMsMS4xLDIuNCwyLjQsMi40aDEwLjIgICAgIGMxLjMsMCwyLjQtMS4xLDIuNC0yLjRzLTEuMS0yLjQtMi40LTIuNEgyNGwxMy0xM2MwLjktMC45LDAuOS0yLjUsMC0zLjRTMzQuNSw2Mi4xLDMzLjYsNjN6Ij48L3BhdGg+PHBhdGggZD0iTTgxLjksNjkuM2MtMS4zLDAtMi40LDEuMS0yLjQsMi40Vjc2bC0xMy0xM2MtMC45LTAuOS0yLjUtMC45LTMuNCwwYy0wLjksMC45LTAuOSwyLjUsMCwzLjRsMTMsMTNoLTQuMyAgICAgYy0xLjMsMC0yLjQsMS4xLTIuNCwyLjRzMS4xLDIuNCwyLjQsMi40aDEwLjJjMS4zLDAsMi40LTEuMSwyLjQtMi40VjcxLjdDODQuMyw3MC40LDgzLjIsNjkuMyw4MS45LDY5LjN6Ij48L3BhdGg+PC9nPjwvZz48L3N3aXRjaD48L3N2Zz4=",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Flow"},{property:"og:description",content:"Kestra is able to trigger flow after another one. This allows chaining flow without need to update the base flows.\nWith that, you can break responsibility between different flow to different teams. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/core/triggers/io.kestra.core.models.triggers.types.Flow.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Flow"},{name:"twitter:description",content:"Kestra is able to trigger flow after another one. This allows chaining flow without need to update the base flows.\nWith that, you can break responsibility between different flow to different teams. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/core/triggers/io.kestra.core.models.triggers.types.Flow.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/core/triggers/io.kestra.core.models.triggers.types.Flow.html",relativePath:"plugins/core/triggers/io.kestra.core.models.triggers.types.Flow.md",key:"v-719322e3",path:"/plugins/core/triggers/io.kestra.core.models.triggers.types.Flow.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:390},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:1253},{level:3,title:"inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:676},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1663},{level:3,title:"executionId",slug:"executionid",normalizedTitle:"executionid",charIndex:825},{level:3,title:"flowId",slug:"flowid",normalizedTitle:"flowid",charIndex:1117},{level:3,title:"flowRevision",slug:"flowrevision",normalizedTitle:"flowrevision",charIndex:1836},{level:3,title:"namespace",slug:"namespace",normalizedTitle:"namespace",charIndex:636},{level:3,title:"state",slug:"state",normalizedTitle:"state",charIndex:2012},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:2203}],headersStr:"Examples Properties inputs Outputs executionId flowId flowRevision namespace state Definitions",content:'Flow\n\ntype: "io.kestra.core.models.triggers.types.Flow"\n\n\n> Kestra is able to trigger flow after another one. This allows chaining flow without need to update the base flows.\n> With that, you can break responsibility between different flow to different teams.\n\nWARNING\n\nIf you don\'t provide any conditions, the flow will be triggered for EVERY execution of EVERY flow on your instance.\n\n\n# Examples\n\n> This flow will be triggered after each successfully execution of flow io.kestra.tests.trigger-flow and forward the uri of my-task taskId outputs.\n\nid: "flow"\ntype: "io.kestra.core.models.triggers.types.Flow"\nid: trigger-flow-listener\nnamespace: io.kestra.tests\nrevision: 1\n\ninputs:\n  - name: from-parent\n    type: STRING\n\ntasks:\n  - id: only-no-input\n    type: io.kestra.core.tasks.debugs.Return\n    format: "v1: {{trigger.executionId}}"\n\ntriggers:\n  - id: listen-flow\n    type: io.kestra.core.models.triggers.types.Flow\n    inputs:\n      from-parent: \'{{ outputs.my-task.uri }}\'\n    conditions:\n      - type: io.kestra.core.models.conditions.types.ExecutionFlowCondition\n        namespace: io.kestra.tests\n        flowId: trigger-flow\n      - type: io.kestra.core.models.conditions.types.ExecutionStatusCondition\n        in:\n          - SUCCESS\n\n\n\n# Properties\n\n\n# inputs\n\n * Type: object\n * Dynamic: ❓\n * Required: ❌\n\n> Fill input of this flow based on output of current flow, allowing to pass data or file on the triggered flow\n\nWARNING\n\nIf you provide invalid input, the flow will not be created! Since there is no task started, you can\'t log any reason visible on the execution ui.\nSo you will need to go to Logs tabs on the ui to understand the error\n\n\n# Outputs\n\n\n# executionId\n\n * Type: string\n\n> The execution id that trigger the current flow\n\n\n# flowId\n\n * Type: string\n\n> The execution id that trigger the current flow\n\n\n# flowRevision\n\n * Type: integer\n\n> The flow revision that trigger the current flow\n\n\n# namespace\n\n * Type: string\n\n> The namespace of the flow that trigger the current flow\n\n\n# state\n\n * Type: string\n\n * Possible Values:\n   \n   * CREATED\n   * RUNNING\n   * PAUSED\n   * RESTARTED\n   * KILLING\n   * SUCCESS\n   * WARNING\n   * FAILED\n   * KILLED\n\n> The execution state\n\n\n# Definitions',normalizedContent:'flow\n\ntype: "io.kestra.core.models.triggers.types.flow"\n\n\n> kestra is able to trigger flow after another one. this allows chaining flow without need to update the base flows.\n> with that, you can break responsibility between different flow to different teams.\n\nwarning\n\nif you don\'t provide any conditions, the flow will be triggered for every execution of every flow on your instance.\n\n\n# examples\n\n> this flow will be triggered after each successfully execution of flow io.kestra.tests.trigger-flow and forward the uri of my-task taskid outputs.\n\nid: "flow"\ntype: "io.kestra.core.models.triggers.types.flow"\nid: trigger-flow-listener\nnamespace: io.kestra.tests\nrevision: 1\n\ninputs:\n  - name: from-parent\n    type: string\n\ntasks:\n  - id: only-no-input\n    type: io.kestra.core.tasks.debugs.return\n    format: "v1: {{trigger.executionid}}"\n\ntriggers:\n  - id: listen-flow\n    type: io.kestra.core.models.triggers.types.flow\n    inputs:\n      from-parent: \'{{ outputs.my-task.uri }}\'\n    conditions:\n      - type: io.kestra.core.models.conditions.types.executionflowcondition\n        namespace: io.kestra.tests\n        flowid: trigger-flow\n      - type: io.kestra.core.models.conditions.types.executionstatuscondition\n        in:\n          - success\n\n\n\n# properties\n\n\n# inputs\n\n * type: object\n * dynamic: ❓\n * required: ❌\n\n> fill input of this flow based on output of current flow, allowing to pass data or file on the triggered flow\n\nwarning\n\nif you provide invalid input, the flow will not be created! since there is no task started, you can\'t log any reason visible on the execution ui.\nso you will need to go to logs tabs on the ui to understand the error\n\n\n# outputs\n\n\n# executionid\n\n * type: string\n\n> the execution id that trigger the current flow\n\n\n# flowid\n\n * type: string\n\n> the execution id that trigger the current flow\n\n\n# flowrevision\n\n * type: integer\n\n> the flow revision that trigger the current flow\n\n\n# namespace\n\n * type: string\n\n> the namespace of the flow that trigger the current flow\n\n\n# state\n\n * type: string\n\n * possible values:\n   \n   * created\n   * running\n   * paused\n   * restarted\n   * killing\n   * success\n   * warning\n   * failed\n   * killed\n\n> the execution state\n\n\n# definitions',charsets:{}},{title:"Schedule",frontmatter:{title:"Schedule",editLink:!1,description:"Schedule a flow based on cron date",icon:"PHN2ZyBoZWlnaHQ9JzMwMHB4JyB3aWR0aD0nMzAwcHgnICBmaWxsPSIjMEQxNTIzIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGRhdGEtbmFtZT0iTGF5ZXIgMSIgdmlld0JveD0iMCAwIDEwMCAxMDAiIHg9IjBweCIgeT0iMHB4Ij48dGl0bGU+Q2FsZW5kYXI8L3RpdGxlPjxyZWN0IHg9IjMxLjc1IiB5PSI2OC43OCIgd2lkdGg9IjEwIiBoZWlnaHQ9IjYiIHJ4PSIxLjciIHJ5PSIxLjciPjwvcmVjdD48cmVjdCB4PSIzMS43NSIgeT0iNTcuNDMiIHdpZHRoPSIxMCIgaGVpZ2h0PSI2IiByeD0iMS43IiByeT0iMS43Ij48L3JlY3Q+PHJlY3QgeD0iMTUuNjIiIHk9IjY4Ljc4IiB3aWR0aD0iMTAiIGhlaWdodD0iNiIgcng9IjEuNyIgcnk9IjEuNyI+PC9yZWN0PjxyZWN0IHg9IjE1LjYyIiB5PSI1Ny40MyIgd2lkdGg9IjEwIiBoZWlnaHQ9IjYiIHJ4PSIxLjciIHJ5PSIxLjciPjwvcmVjdD48cmVjdCB4PSIzMS43NSIgeT0iNDYuMDgiIHdpZHRoPSIxMCIgaGVpZ2h0PSI2IiByeD0iMS43IiByeT0iMS43Ij48L3JlY3Q+PHJlY3QgeD0iNDcuODciIHk9IjQ2LjA4IiB3aWR0aD0iMTAiIGhlaWdodD0iNiIgcng9IjEuNyIgcnk9IjEuNyI+PC9yZWN0PjxwYXRoIGQ9Ik03My4yNSw5NUEyMS43NSwyMS43NSwwLDEsMSw5NSw3My4yNSwyMS43OCwyMS43OCwwLDAsMSw3My4yNSw5NVptMC0zOUExNy4yNSwxNy4yNSwwLDEsMCw5MC41LDczLjI1LDE3LjI3LDE3LjI3LDAsMCwwLDczLjI1LDU2WiI+PC9wYXRoPjxwYXRoIGQ9Ik04NC42OSw3NS41SDczLjI1QTIuMjUsMi4yNSwwLDAsMSw3MSw3My4yNVY2NC4wNmEyLjI1LDIuMjUsMCwwLDEsNC41LDBWNzFoOS4xOWEyLjI1LDIuMjUsMCwwLDEsMCw0LjVaIj48L3BhdGg+PHBhdGggZD0iTTYzLjI2LDI2YTUsNSwwLDAsMS01LTVWMTBhNSw1LDAsMCwxLDEwLDBWMjFBNSw1LDAsMCwxLDYzLjI2LDI2WiI+PC9wYXRoPjxwYXRoIGQ9Ik03Ny4zNywxMy4xNkg3Mi43NlYyMWE5LjUsOS41LDAsMCwxLTE5LDBWMTMuMTZIMzUuODZWMjFhOS41LDkuNSwwLDEsMS0xOSwwVjEzLjE2SDEyLjI1QTcuMjYsNy4yNiwwLDAsMCw1LDIwLjQxdjU3YTcuMjYsNy4yNiwwLDAsMCw3LjI1LDcuMjVINDkuNmEyNi42NiwyNi42NiwwLDAsMS0xLjY4LTQuNUgxMi4yNUEyLjc1LDIuNzUsMCwwLDEsOS41LDc3LjM4VjQwLjc0SDgwLjEydjcuMThhMjUuNzksMjUuNzksMCwwLDEsNC41LDEuNjdWMjAuNDFBNy4yNiw3LjI2LDAsMCwwLDc3LjM3LDEzLjE2WiI+PC9wYXRoPjxwYXRoIGQ9Ik0yNi4zNiwyNmE1LDUsMCwwLDEtNS01VjEwYTUsNSwwLDAsMSwxMCwwVjIxQTUsNSwwLDAsMSwyNi4zNiwyNloiPjwvcGF0aD48L3N2Zz4=",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Schedule"},{property:"og:description",content:"Schedule a flow based on cron date | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/core/triggers/io.kestra.core.models.triggers.types.Schedule.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Schedule"},{name:"twitter:description",content:"Schedule a flow based on cron date | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/core/triggers/io.kestra.core.models.triggers.types.Schedule.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/core/triggers/io.kestra.core.models.triggers.types.Schedule.html",relativePath:"plugins/core/triggers/io.kestra.core.models.triggers.types.Schedule.md",key:"v-19cb5103",path:"/plugins/core/triggers/io.kestra.core.models.triggers.types.Schedule.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:661},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:1116},{level:3,title:"backfill",slug:"backfill",normalizedTitle:"backfill",charIndex:477},{level:3,title:"cron",slug:"cron",normalizedTitle:"cron",charIndex:93},{level:3,title:"inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:1650},{level:3,title:"interval",slug:"interval",normalizedTitle:"interval",charIndex:1751},{level:3,title:"scheduleConditions",slug:"scheduleconditions",normalizedTitle:"scheduleconditions",charIndex:982},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:2323},{level:3,title:"date",slug:"date",normalizedTitle:"date",charIndex:98},{level:3,title:"next",slug:"next",normalizedTitle:"next",charIndex:2393},{level:3,title:"previous",slug:"previous",normalizedTitle:"previous",charIndex:1241},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:2511},{level:3,title:"ScheduleCondition-1",slug:"schedulecondition-1",normalizedTitle:"schedulecondition-1",charIndex:2527},{level:3,title:"ScheduleCondition-2",slug:"schedulecondition-2",normalizedTitle:"schedulecondition-2",charIndex:2206},{level:3,title:"ScheduleBackfill",slug:"schedulebackfill",normalizedTitle:"schedulebackfill",charIndex:1150}],headersStr:"Examples Properties backfill cron inputs interval scheduleConditions Outputs date next previous Definitions ScheduleCondition-1 ScheduleCondition-2 ScheduleBackfill",content:'Schedule\n\ntype: "io.kestra.core.models.triggers.types.Schedule"\n\n\n> Schedule a flow based on cron date\n\nKestra is able to trigger flow based on Schedule (aka the time). If you need to wait another system to be ready and can\'t use any event mechanism, you can schedule 1 or more time for the current flow.\n\nThe scheduler will keep the last execution date for this schedule based on the id. This allow you to change the cron expression without restart all the past execution (if backfill exists)\nIf you changed the current id, the scheduler will think it\'s a new schedule and will start with a fresh date and replay the all backfill date (if backfill exists)\n\n\n# Examples\n\n> A schedule with a backfill\n\ntriggers:\n  - id: schedule\n    type: io.kestra.core.models.triggers.types.Schedule\n    cron: "*/15 * * * *"\n    backfill:\n      start: 2020-06-25T14:00:00Z\n\n\n> A schedule that run only the first monday on every month at 11 AM\n\ntriggers:\n  - id: schedule\n    cron: "0 11 * * 1"\n    scheduleConditions:\n      - id: monday\n        date: "{{ trigger.date }}"        dayOfWeek: "MONDAY"\n        dayInMonth: "FIRST"\n\n\n\n# Properties\n\n\n# backfill\n\n * Type: ScheduleBackfill\n * Dynamic: ❓\n * Required: ❌\n\n> Backfill options in order to fill missing previous past date\n\nKestra will handle optionnaly a backfill. The concept of backfill is the replay the missing schedule because we create the flow later.\n\nBackfill will do all schedules between define date & current date and will start after the normal schedule.\n\n\n# cron\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n\n> the cron expression you need tyo\n\na standard unix cron expression without second.\n\n\n# inputs\n\n * Type: object\n * Dynamic: ✔️\n * Required: ❌\n\n> The input to pass to the triggered flow\n\n\n# interval\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Default: PT1S\n * Format: duration\n\n> Interval between polling\n\nThe interval between 2 different test of schedule, this can avoid to overload the remote system with too many call. For most of trigger that depend on external system, a minimal interval must be at least PT30S.\nSee ISO_8601 Durations for more information of available interval value\n\n\n# scheduleConditions\n\n * Type: array\n * SubType: ScheduleCondition-2\n * Dynamic: ❓\n * Required: ❌\n\n> List of schedule Conditions in order to limit schedule date.\n\n\n# Outputs\n\n\n# date\n\n * Type: string\n\n> The date of current schedule\n\n\n# next\n\n * Type: string\n\n> The date of next schedule\n\n\n# previous\n\n * Type: string\n\n> The date of previous schedule\n\n\n# Definitions\n\n\n# ScheduleCondition-1\n\n\n# ScheduleCondition-2\n\n\n# ScheduleBackfill\n\n# start\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The first start date',normalizedContent:'schedule\n\ntype: "io.kestra.core.models.triggers.types.schedule"\n\n\n> schedule a flow based on cron date\n\nkestra is able to trigger flow based on schedule (aka the time). if you need to wait another system to be ready and can\'t use any event mechanism, you can schedule 1 or more time for the current flow.\n\nthe scheduler will keep the last execution date for this schedule based on the id. this allow you to change the cron expression without restart all the past execution (if backfill exists)\nif you changed the current id, the scheduler will think it\'s a new schedule and will start with a fresh date and replay the all backfill date (if backfill exists)\n\n\n# examples\n\n> a schedule with a backfill\n\ntriggers:\n  - id: schedule\n    type: io.kestra.core.models.triggers.types.schedule\n    cron: "*/15 * * * *"\n    backfill:\n      start: 2020-06-25t14:00:00z\n\n\n> a schedule that run only the first monday on every month at 11 am\n\ntriggers:\n  - id: schedule\n    cron: "0 11 * * 1"\n    scheduleconditions:\n      - id: monday\n        date: "{{ trigger.date }}"        dayofweek: "monday"\n        dayinmonth: "first"\n\n\n\n# properties\n\n\n# backfill\n\n * type: schedulebackfill\n * dynamic: ❓\n * required: ❌\n\n> backfill options in order to fill missing previous past date\n\nkestra will handle optionnaly a backfill. the concept of backfill is the replay the missing schedule because we create the flow later.\n\nbackfill will do all schedules between define date & current date and will start after the normal schedule.\n\n\n# cron\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n\n> the cron expression you need tyo\n\na standard unix cron expression without second.\n\n\n# inputs\n\n * type: object\n * dynamic: ✔️\n * required: ❌\n\n> the input to pass to the triggered flow\n\n\n# interval\n\n * type: string\n * dynamic: ❓\n * required: ❌\n * default: pt1s\n * format: duration\n\n> interval between polling\n\nthe interval between 2 different test of schedule, this can avoid to overload the remote system with too many call. for most of trigger that depend on external system, a minimal interval must be at least pt30s.\nsee iso_8601 durations for more information of available interval value\n\n\n# scheduleconditions\n\n * type: array\n * subtype: schedulecondition-2\n * dynamic: ❓\n * required: ❌\n\n> list of schedule conditions in order to limit schedule date.\n\n\n# outputs\n\n\n# date\n\n * type: string\n\n> the date of current schedule\n\n\n# next\n\n * type: string\n\n> the date of next schedule\n\n\n# previous\n\n * type: string\n\n> the date of previous schedule\n\n\n# definitions\n\n\n# schedulecondition-1\n\n\n# schedulecondition-2\n\n\n# schedulebackfill\n\n# start\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the first start date',charsets:{}},{title:"Webhook",frontmatter:{title:"Webhook",editLink:!1,description:"Trigger a flow from a webhook",icon:"PHN2ZyBoZWlnaHQ9JzMwMHB4JyB3aWR0aD0nMzAwcHgnICBmaWxsPSIjMEQxNTIzIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB4bWxuczpza2V0Y2g9Imh0dHA6Ly93d3cuYm9oZW1pYW5jb2RpbmcuY29tL3NrZXRjaC9ucyIgdmlld0JveD0iMCAwIDEwMCAxMDAiIHZlcnNpb249IjEuMSIgeD0iMHB4IiB5PSIwcHgiPjx0aXRsZT5XZWJob29rczwvdGl0bGU+PGRlc2M+Q3JlYXRlZCB3aXRoIFNrZXRjaC48L2Rlc2M+PGcgc3Ryb2tlPSJub25lIiBzdHJva2Utd2lkdGg9IjEiIGZpbGw9Im5vbmUiIGZpbGwtcnVsZT0iZXZlbm9kZCIgc2tldGNoOnR5cGU9Ik1TUGFnZSI+PGcgc2tldGNoOnR5cGU9Ik1TQXJ0Ym9hcmRHcm91cCIgZmlsbD0iIzBEMTUyMyI+PHBhdGggZD0iTTc2LjQ5NTExODEsNzMuOTE0NTM2MSBMMjkuNzQxNjA0Niw3My45MTQ1MzYxIEwyOS43NDE2MDQ2LDc4LjkyMTYyOTIgQzI4LjgzMzM3NDgsODQuMDU0MzI4NyAyNC4zMzE4ODQsODcuOTUzODIwOSAxOC45MTU0OTMsODcuOTUzODIwOSBDMTIuODQ0MTAxMSw4Ny45NTM4MjA5IDcuOTIyMjY1NTksODMuMDU0MTc2NiA3LjkyMjI2NTU5LDc3LjAxMDE1ODkgQzcuOTIyMjY1NTksNzMuMjgwNTg5MiA5Ljc5NjM2NzEsNjkuOTg2NzY1OCAxMi42NTgyMjUsNjguMDExMDM3NiBMOS41MDU4MjU1NSw2My41Mjc5MTQ1IEw5LjUwNTgyNTU1LDYzLjUyNzkxNDUgQzUuMjI2NDMxODQsNjYuNDkzMzE4MiAyLjQyNTY1MTksNzEuNDI2MTM0NyAyLjQyNTY1MTksNzcuMDEwMTU4OSBDMi40MjU2NTE5LDg2LjA3NjE4NTQgOS44MDg0MDUyMSw5My40MjU2NTE5IDE4LjkxNTQ5Myw5My40MjU2NTE5IEMyNy4wODI2ODY3LDkzLjQyNTY1MTkgMzMuODYzMDk4Niw4Ny41MTQ5MDMyIDM1LjE3NTY0ODQsNzkuNzU2MDg1NCBMMzUuMTc1NjQ4NCw3OS43NTYwODU0IEw3Ni4yNzI3MzU5LDc5Ljc1NjA4NTQgQzc3LjIyNDU0OTMsODEuMzg2MDk3MSA3OC45OTc3OTk4LDgyLjQ4MTk4OTkgODEuMDI4MTY5LDgyLjQ4MTk4OTkgQzg0LjA2Mzg2NDksODIuNDgxOTg5OSA4Ni41MjQ3ODI3LDgwLjAzMjE2NzcgODYuNTI0NzgyNyw3Ny4wMTAxNTg5IEM4Ni41MjQ3ODI3LDczLjk4ODE1MDEgODQuMDYzODY0OSw3MS41MzgzMjggODEuMDI4MTY5LDcxLjUzODMyOCBDNzkuMTQ2NjY0LDcxLjUzODMyOCA3Ny40ODU5NTY2LDcyLjQ3OTQxMjggNzYuNDk1MTE4MSw3My45MTQ1MzYxIFoiIHNrZXRjaDp0eXBlPSJNU1NoYXBlR3JvdXAiPjwvcGF0aD48cGF0aCBkPSJNMTMuOTk3MDQzNSw3NC43MzMxNjE2IEMxNC4wOTIwMTA4LDc0LjQ5ODM3MTYgMTQuMjA0NDAzNyw3NC4yNjczNTA5IDE0LjMzNDY2MDgsNzQuMDQxNzM5IEMxNS4zNDQ1NTk4LDcyLjI5MjU0MjYgMTcuMTcyOTQ2MSw3MS4zMTA3NTIzIDE5LjA1NTg3MSw3MS4zMDEzNDc0IEwzOS42NjgyODc5LDM1LjU5OTU5NCBMMzkuNjY4Mjg3OSwzNS41OTk1OTQgQzMzLjU5NDQ2NzgsMzAuNTg3NDU5OSAzMS44NDkwMTUxLDIxLjc3NTI5NzEgMzUuOTE5OTc4LDE0LjcyNDE4MjUgQzQwLjQ1NzQ1MTcsNi44NjUwNDc1NiA1MC41MDI1MzM1LDQuMTY5Nzk0NzMgNTguMzU2Mjk2Miw4LjcwNDE2Njc3IEM2My4xNzgxMDAzLDExLjQ4ODAzNjYgNjYuMDUyOTA1MSwxNi4zNDk3NjU3IDY2LjUwMzg4MTEsMjEuNTA3MzY0NyBMNjYuNTAzODgxMSwyMS41MDczNjQ3IEw2MS4wNDk2MzExLDIxLjk4NTU1MDEgQzYwLjc0OTY5NCwxOC41NDYyMTggNTguODMzMDA3LDE1LjMwMzkzOTIgNTUuNjE3Njg4NiwxMy40NDc1NzQzIEM1MC4zODE4NDY4LDEwLjQyNDY1OTYgNDMuNjg1MTI1NiwxMi4yMjE0OTQ4IDQwLjY2MDE0MzIsMTcuNDYwOTE4MSBDMzcuNjk3NzIyMSwyMi41OTE5ODE5IDM5LjM1NTM0MzYsMjkuMTIxODY1NSA0NC4zNDI4MzMsMzIuMjI4OTc4MyBMNDcuMzU2ODkwMiwzMy45NjkxNDUgTDI0LjAxMDc0MTYsNzQuNDA1ODYwNSBMMjQuMDEwNzQxNiw3NC40MDU4NjA1IEMyNC42NzQxNTk0LDc1Ljc5MTQ1NTUgMjQuNzQ1NzA2OSw3Ny40MzUyMzkzIDI0LjExMzMxMzIsNzguOTE4Mzg0NyBDMjMuMzQxNjg1NSw4MS4wMDcwNDAxIDIxLjMzMTYwOTgsODIuNDk2MjU2IDE4Ljk3MzQ3MTIsODIuNDk2MjU2IEMxNS45NDg0ODg4LDgyLjQ5NjI1NiAxMy40OTYyNTYsODAuMDQ1Njk5NSAxMy40OTYyNTYsNzcuMDIyNzg0OCBDMTMuNDk2MjU2LDc2LjIwNTM0NDEgMTMuNjc1NTczNCw3NS40Mjk3NTY3IDEzLjk5NzA0MzUsNzQuNzMzMTYxNiBaIiBza2V0Y2g6dHlwZT0iTVNTaGFwZUdyb3VwIj48L3BhdGg+PHBhdGggZD0iTTQ5LjY2MjkyMywyOC4zNTM3NzE0IEw3Mi43NzU0MDUsNjguMzg1NzY0NiBMNzUuNTI3ODkwNiw2Ni43OTY2MTYzIEw3NS41NzQ1NjYxLDY2Ljg3NzQ2MDYgQzc1LjU5NzI4NDcsNjYuODY0MTMxMiA3NS42MjAwNjg0LDY2Ljg1MDg3MDQgNzUuNjQyOTE3MSw2Ni44Mzc2Nzg3IEM4MC44ODIzOTgxLDYzLjgxMjY2MjkgODcuNTU3NTc4Miw2NS41NjUzNzQ5IDkwLjU1MjM0OTIsNzAuNzUyNDcwNCBDOTMuNTQ3MTIwMiw3NS45Mzk1NjYgOTEuNzI3NDIzMiw4Mi41OTY3OTc1IDg2LjQ4Nzk0MjMsODUuNjIxODEzMyBDODMuMjU3OTE2NSw4Ny40ODY2Njk1IDc5LjQ4MjI2LDg3LjUzNTc3MjUgNzYuMzU5NjI0LDg2LjA4Mzg1MzkgTDc0LjAyODIxOTcsOTEuMDIwODg1IEw3NC4wMjgyMTk3LDkxLjAyMDg4NSBDNzguNzA3OTk3Myw5My4xODg1NTQxIDg0LjM2MTU3MDIsOTMuMTEwODUyOSA4OS4xOTkxOTg1LDkwLjMxNzg0NjkgQzk3LjA1ODQyLDg1Ljc4MDMyMzMgOTkuNzg3OTY1NSw3NS43OTQ0NzYgOTUuMjk1ODA5LDY4LjAxMzgzMjcgQzkxLjIzOTg3MjQsNjAuOTg4NzQ0NCA4Mi42ODM0NDQ2LDU4LjE2MzMwMTQgNzUuMjc1MTEyNiw2MS4wMjA2NjE3IEw3NS4yNzUxMTI2LDYxLjAyMDY2MTcgTDU0Ljc2NzI5MjcsMjUuNTAwMDc1NiBDNTUuNjUwNjc1OSwyMy44ODkxOTk1IDU1LjcwMDM2OTcsMjEuODc5OTcyNyA1NC43MjE2NDk5LDIwLjE4NDc4MDIgQzUzLjIyNDI2NDQsMTcuNTkxMjMyNSA0OS44ODY2NzQzLDE2LjcxNDg3NjUgNDcuMjY2OTMzOCwxOC4yMjczODQ0IEM0NC42NDcxOTMzLDE5LjczOTg5MjIgNDMuNzM3MzQ0OCwyMy4wNjg1MDggNDUuMjM0NzMwMywyNS42NjIwNTU4IEM0Ni4xODYzOTA3LDI3LjMxMDM3OTggNDcuODgxMzQ4NywyOC4yNjUwOTM2IDQ5LjY2MjkyMywyOC4zNTM3NzE0IFoiIHNrZXRjaDp0eXBlPSJNU1NoYXBlR3JvdXAiPjwvcGF0aD48L2c+PC9nPjwvc3ZnPg==",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Webhook"},{property:"og:description",content:"Trigger a flow from a webhook | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/core/triggers/io.kestra.core.models.triggers.types.Webhook.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Webhook"},{name:"twitter:description",content:"Trigger a flow from a webhook | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/core/triggers/io.kestra.core.models.triggers.types.Webhook.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/core/triggers/io.kestra.core.models.triggers.types.Webhook.html",relativePath:"plugins/core/triggers/io.kestra.core.models.triggers.types.Webhook.md",key:"v-33989629",path:"/plugins/core/triggers/io.kestra.core.models.triggers.types.Webhook.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:442},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:893},{level:3,title:"key",slug:"key",normalizedTitle:"key",charIndex:189},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1329},{level:3,title:"body",slug:"body",normalizedTitle:"body",charIndex:336},{level:3,title:"headers",slug:"headers",normalizedTitle:"headers",charIndex:343},{level:3,title:"parameters",slug:"parameters",normalizedTitle:"parameters",charIndex:1599},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:1673}],headersStr:"Examples Properties key Outputs body headers parameters Definitions",content:"Webhook\n\ntype: \"io.kestra.core.models.triggers.types.Webhook\"\n\n\n> Trigger a flow from a webhook\n\nWebbook trigger allow you to trigger a flow from a webhook url.\nThe trigger will generate a key that must be used on url : /api/v1/executions/webhook/{namespace}/[flowId]/{key}.\nKestra accept GET, POST & PUT request on this url.\nThe whole body & headers will be available as variable:\n\n * trigger.variables.body\n * trigger.variables.headers\n\n\n# Examples\n\n> Add a trigger to the current flow\n\ntriggers:\n  - id: webhook\n    type: io.kestra.core.models.triggers.types.Webhook\n\n\n> After the trigger is created, a key will be created that will be use in the webhook url, now, you can launch the flow on the url /api/v1/executions/webhook/{namespace}/[flowId]/4wjtkzwVGBM9yKnjm3yv8r\n\ntriggers:\n  - id: webhook\n    type: io.kestra.core.models.triggers.types.Webhook\n    key: 4wjtkzwVGBM9yKnjm3yv8r\n\n\n\n# Properties\n\n\n# key\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Default: 7CNwAwBdkiRMZaRzabv4Xj\n * Min length: 16\n * Max length: 256\n\n> The unique key that will be part of the url\n\nIf you don't provide a key, a random one will be generated. Is used as key for generating the url of the webhook.\n\nWARNING\n\nTake care when using manual key, the key is the only security to protect your webhook and must be considered as a secret !\n\n\n# Outputs\n\n\n# body\n\n * Type: ====\n\n> The full body for the webhook request\n\nWe try to deserialize the incoming request as json (array or object).\nIf we can't the full body as string will be available\n\n\n# headers\n\n * Type: object\n\n> The headers for the webhook request\n\n\n# parameters\n\n * Type: object\n\n> The parameters for the webhook request\n\n\n# Definitions",normalizedContent:"webhook\n\ntype: \"io.kestra.core.models.triggers.types.webhook\"\n\n\n> trigger a flow from a webhook\n\nwebbook trigger allow you to trigger a flow from a webhook url.\nthe trigger will generate a key that must be used on url : /api/v1/executions/webhook/{namespace}/[flowid]/{key}.\nkestra accept get, post & put request on this url.\nthe whole body & headers will be available as variable:\n\n * trigger.variables.body\n * trigger.variables.headers\n\n\n# examples\n\n> add a trigger to the current flow\n\ntriggers:\n  - id: webhook\n    type: io.kestra.core.models.triggers.types.webhook\n\n\n> after the trigger is created, a key will be created that will be use in the webhook url, now, you can launch the flow on the url /api/v1/executions/webhook/{namespace}/[flowid]/4wjtkzwvgbm9yknjm3yv8r\n\ntriggers:\n  - id: webhook\n    type: io.kestra.core.models.triggers.types.webhook\n    key: 4wjtkzwvgbm9yknjm3yv8r\n\n\n\n# properties\n\n\n# key\n\n * type: string\n * dynamic: ❓\n * required: ❌\n * default: 7cnwawbdkirmzarzabv4xj\n * min length: 16\n * max length: 256\n\n> the unique key that will be part of the url\n\nif you don't provide a key, a random one will be generated. is used as key for generating the url of the webhook.\n\nwarning\n\ntake care when using manual key, the key is the only security to protect your webhook and must be considered as a secret !\n\n\n# outputs\n\n\n# body\n\n * type: ====\n\n> the full body for the webhook request\n\nwe try to deserialize the incoming request as json (array or object).\nif we can't the full body as string will be available\n\n\n# headers\n\n * type: object\n\n> the headers for the webhook request\n\n\n# parameters\n\n * type: object\n\n> the parameters for the webhook request\n\n\n# definitions",charsets:{}},{title:"Plugin aws",frontmatter:{title:"Plugin aws",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Plugin aws"},{property:"og:description",content:"Plugin aws | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-aws/"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Plugin aws"},{name:"twitter:description",content:"Plugin aws | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-aws/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-aws/",relativePath:"plugins/plugin-aws/README.md",key:"v-63419da8",path:"/plugins/plugin-aws/",headers:[{level:2,title:"S3",slug:"s3",normalizedTitle:"s3",charIndex:17},{level:3,title:"Tasks",slug:"tasks",normalizedTitle:"tasks",charIndex:24}],headersStr:"S3 Tasks",content:"# Plugin aws\n\n\n# S3\n\n\n# Tasks\n\n * CreateBucket\n * Delete\n * Download\n * Upload",normalizedContent:"# plugin aws\n\n\n# s3\n\n\n# tasks\n\n * createbucket\n * delete\n * download\n * upload",charsets:{}},{title:"CreateBucket",frontmatter:{title:"CreateBucket",editLink:!1,description:"Create a bucket",icon:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB2aWV3Qm94PSIwIDAgNzQuMzc1IDg1IiBmaWxsPSIjZmZmIiBmaWxsLXJ1bGU9ImV2ZW5vZGQiIHN0cm9rZT0iIzAwMCIgc3Ryb2tlLWxpbmVjYXA9InJvdW5kIiBzdHJva2UtbGluZWpvaW49InJvdW5kIj48dXNlIHhsaW5rOmhyZWY9IiNBIiB4PSIyLjE4OCIgeT0iMi41Ii8+PHN5bWJvbCBpZD0iQSIgb3ZlcmZsb3c9InZpc2libGUiPjxnIHN0cm9rZT0ibm9uZSI+PHBhdGggZD0iTTUuNjM0IDEzLjg4M0wwIDE2LjU0NnY0Ni44bDUuNjM0IDIuNjYzIDEzLjgyNy0yNi4wNjhMNS42MzQgMTMuODgzeiIgZmlsbD0iIzhjMzEyMyIvPjxwYXRoIGQ9Ik0zNSA1OS4yNzhMNS42MzQgNjZWMTMuODgzTDM1IDIwLjYwNSA0OC44NzggNDAuMDIgMzUgNTkuMjc4eiIgZmlsbD0iI2UwNTI0MyIvPjxwYXRoIGQ9Ik0zNSA1OS4yNzhMNjQuMzU2IDY2bDUuMDc3LTI1LjM5NS01LjA3Ny0yNi43MjJMMzUgMjAuNjA1djM4LjY3M3oiIGZpbGw9IiM4YzMxMjMiLz48cGF0aCBkPSJNNjQuMzU2IDEzLjg4M0w3MCAxNi41NDZ2NDYuOGwtNS42NDQgMi42NjNWMTMuODgzeiIgZmlsbD0iI2UwNTI0MyIvPjxwYXRoIGQ9Ik0yMi4xOTUgNDguNTY2TDM1IDUwLjExNyA0NS4xNTMgNDAuMDIgMzUgMjkuOTMybC0xMi44MDUgMS41MjJ2MTcuMTEyeiIgZmlsbD0iIzhjMzEyMyIvPjxwYXRoIGQ9Ik00Ny44MDUgMjMuMTcxTDM1IDI1LjM3NmwtMTIuODA1LTIuMjA1TDM1IDBsMTIuODA1IDIzLjE3MXoiIGZpbGw9IiM1ZTFmMTgiLz48cGF0aCBkPSJNNDcuODA1IDU2LjgyOUwzNSA1NC42MDVsLTEyLjgwNSAyLjIyNEwzNSA4MGwxMi44MDUtMjMuMTcxeiIgZmlsbD0iI2YyYjBhOSIvPjxwYXRoIGQ9Ik00Ny44MDUgMjMuMTcxTDM1IDIwLjE3NlYwbDEyLjgwNSA2LjA0OXYxNy4xMjJ6IiBmaWxsPSIjZTA1MjQzIi8+PHBhdGggZD0iTTIyLjE5NSAyMy4xNzFMMzUgMjAuMTc2VjBMMjIuMTk1IDYuMDQ5djE3LjEyMnoiIGZpbGw9IiM4YzMxMjMiLz48cGF0aCBkPSJNMzUgODBsMTIuODA1LTYuMDQ5VjU2LjgyOUwzNSA1OS44MjRWODB6IiBmaWxsPSIjZTA1MjQzIi8+PHBhdGggZD0iTTM1IDgwbC0xMi44MDUtNi4wNDlWNTYuODI5TDM1IDU5LjgyNFY4MHoiIGZpbGw9IiM4YzMxMjMiLz48cGF0aCBkPSJNNDcuODA1IDQ4LjU2NkwzNSA1MC4xMTdWMjkuOTMybDEyLjgwNSAxLjUyMnYxNy4xMTJ6IiBmaWxsPSIjZTA1MjQzIi8+PC9nPjwvc3ltYm9sPjwvc3ZnPg==",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"CreateBucket"},{property:"og:description",content:"Create a bucket | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-aws/tasks/s3/io.kestra.plugin.aws.s3.CreateBucket.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"CreateBucket"},{name:"twitter:description",content:"Create a bucket | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-aws/tasks/s3/io.kestra.plugin.aws.s3.CreateBucket.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-aws/tasks/s3/io.kestra.plugin.aws.s3.CreateBucket.html",relativePath:"plugins/plugin-aws/tasks/s3/io.kestra.plugin.aws.s3.CreateBucket.md",key:"v-f8cd9ab6",path:"/plugins/plugin-aws/tasks/s3/io.kestra.plugin.aws.s3.CreateBucket.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:83},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:242},{level:3,title:"accessKeyId",slug:"accesskeyid",normalizedTitle:"accesskeyid",charIndex:257},{level:3,title:"acl",slug:"acl",normalizedTitle:"acl",charIndex:478},{level:3,title:"bucket",slug:"bucket",normalizedTitle:"bucket",charIndex:72},{level:3,title:"grantFullControl",slug:"grantfullcontrol",normalizedTitle:"grantfullcontrol",charIndex:672},{level:3,title:"grantRead",slug:"grantread",normalizedTitle:"grantread",charIndex:824},{level:3,title:"grantReadACP",slug:"grantreadacp",normalizedTitle:"grantreadacp",charIndex:938},{level:3,title:"grantWrite",slug:"grantwrite",normalizedTitle:"grantwrite",charIndex:1055},{level:3,title:"grantWriteACP",slug:"grantwriteacp",normalizedTitle:"grantwriteacp",charIndex:1194},{level:3,title:"objectLockEnabledForBucket",slug:"objectlockenabledforbucket",normalizedTitle:"objectlockenabledforbucket",charIndex:1321},{level:3,title:"region",slug:"region",normalizedTitle:"region",charIndex:217},{level:3,title:"secretKeyId",slug:"secretkeyid",normalizedTitle:"secretkeyid",charIndex:1562},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1783},{level:3,title:"bucket",slug:"bucket-2",normalizedTitle:"bucket",charIndex:72},{level:3,title:"region",slug:"region-2",normalizedTitle:"region",charIndex:217},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:1851}],headersStr:"Examples Properties accessKeyId acl bucket grantFullControl grantRead grantReadACP grantWrite grantWriteACP objectLockEnabledForBucket region secretKeyId Outputs bucket region Definitions",content:'CreateBucket\n\ntype: "io.kestra.plugin.aws.s3.CreateBucket"\n\n\n> Create a bucket\n\n\n# Examples\n\n> Create a new bucket with some options\n\nid: "create_bucket"\ntype: "io.kestra.plugin.aws.s3.CreateBucket"\nname: "my-bucket"\nregion: "eu-west-1"\n\n\n\n# Properties\n\n\n# accessKeyId\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The Access Key Id in order to connect to AWS\n\nIf no connection is defined, we will use default DefaultCredentialsProvider that will try to guess the value\n\n\n# acl\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The canned ACL to apply to the bucket.\n\n\n# bucket\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\nThe bucket where to download the file\n\n\n# grantFullControl\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\nAllows grantee the read, write, read ACP, and write ACP permissions on the bucket.\n\n\n# grantRead\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Allows grantee to list the objects in the bucket.\n\n\n# grantReadACP\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Allows grantee to list the objects in the bucket.\n\n\n# grantWrite\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Allows grantee to create, overwrite, and delete any object in the bucket.\n\n\n# grantWriteACP\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Allows grantee to write the ACL for the applicable bucket.\n\n\n# objectLockEnabledForBucket\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n> Specifies whether you want S3 Object Lock to be enabled for the new bucket.\n\n\n# region\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The AWS region to used\n\n\n# secretKeyId\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The Secret Key Id in order to connect to AWS\n\nIf no connection is defined, we will use default DefaultCredentialsProvider that will try to guess the value\n\n\n# Outputs\n\n\n# bucket\n\n * Type: string\n\n\n# region\n\n * Type: string\n\n\n# Definitions',normalizedContent:'createbucket\n\ntype: "io.kestra.plugin.aws.s3.createbucket"\n\n\n> create a bucket\n\n\n# examples\n\n> create a new bucket with some options\n\nid: "create_bucket"\ntype: "io.kestra.plugin.aws.s3.createbucket"\nname: "my-bucket"\nregion: "eu-west-1"\n\n\n\n# properties\n\n\n# accesskeyid\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the access key id in order to connect to aws\n\nif no connection is defined, we will use default defaultcredentialsprovider that will try to guess the value\n\n\n# acl\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the canned acl to apply to the bucket.\n\n\n# bucket\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\nthe bucket where to download the file\n\n\n# grantfullcontrol\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\nallows grantee the read, write, read acp, and write acp permissions on the bucket.\n\n\n# grantread\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> allows grantee to list the objects in the bucket.\n\n\n# grantreadacp\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> allows grantee to list the objects in the bucket.\n\n\n# grantwrite\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> allows grantee to create, overwrite, and delete any object in the bucket.\n\n\n# grantwriteacp\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> allows grantee to write the acl for the applicable bucket.\n\n\n# objectlockenabledforbucket\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n> specifies whether you want s3 object lock to be enabled for the new bucket.\n\n\n# region\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the aws region to used\n\n\n# secretkeyid\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the secret key id in order to connect to aws\n\nif no connection is defined, we will use default defaultcredentialsprovider that will try to guess the value\n\n\n# outputs\n\n\n# bucket\n\n * type: string\n\n\n# region\n\n * type: string\n\n\n# definitions',charsets:{}},{title:"Delete",frontmatter:{title:"Delete",editLink:!1,description:"Download a file to a S3 bucket.",icon:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB2aWV3Qm94PSIwIDAgNzQuMzc1IDg1IiBmaWxsPSIjZmZmIiBmaWxsLXJ1bGU9ImV2ZW5vZGQiIHN0cm9rZT0iIzAwMCIgc3Ryb2tlLWxpbmVjYXA9InJvdW5kIiBzdHJva2UtbGluZWpvaW49InJvdW5kIj48dXNlIHhsaW5rOmhyZWY9IiNBIiB4PSIyLjE4OCIgeT0iMi41Ii8+PHN5bWJvbCBpZD0iQSIgb3ZlcmZsb3c9InZpc2libGUiPjxnIHN0cm9rZT0ibm9uZSI+PHBhdGggZD0iTTUuNjM0IDEzLjg4M0wwIDE2LjU0NnY0Ni44bDUuNjM0IDIuNjYzIDEzLjgyNy0yNi4wNjhMNS42MzQgMTMuODgzeiIgZmlsbD0iIzhjMzEyMyIvPjxwYXRoIGQ9Ik0zNSA1OS4yNzhMNS42MzQgNjZWMTMuODgzTDM1IDIwLjYwNSA0OC44NzggNDAuMDIgMzUgNTkuMjc4eiIgZmlsbD0iI2UwNTI0MyIvPjxwYXRoIGQ9Ik0zNSA1OS4yNzhMNjQuMzU2IDY2bDUuMDc3LTI1LjM5NS01LjA3Ny0yNi43MjJMMzUgMjAuNjA1djM4LjY3M3oiIGZpbGw9IiM4YzMxMjMiLz48cGF0aCBkPSJNNjQuMzU2IDEzLjg4M0w3MCAxNi41NDZ2NDYuOGwtNS42NDQgMi42NjNWMTMuODgzeiIgZmlsbD0iI2UwNTI0MyIvPjxwYXRoIGQ9Ik0yMi4xOTUgNDguNTY2TDM1IDUwLjExNyA0NS4xNTMgNDAuMDIgMzUgMjkuOTMybC0xMi44MDUgMS41MjJ2MTcuMTEyeiIgZmlsbD0iIzhjMzEyMyIvPjxwYXRoIGQ9Ik00Ny44MDUgMjMuMTcxTDM1IDI1LjM3NmwtMTIuODA1LTIuMjA1TDM1IDBsMTIuODA1IDIzLjE3MXoiIGZpbGw9IiM1ZTFmMTgiLz48cGF0aCBkPSJNNDcuODA1IDU2LjgyOUwzNSA1NC42MDVsLTEyLjgwNSAyLjIyNEwzNSA4MGwxMi44MDUtMjMuMTcxeiIgZmlsbD0iI2YyYjBhOSIvPjxwYXRoIGQ9Ik00Ny44MDUgMjMuMTcxTDM1IDIwLjE3NlYwbDEyLjgwNSA2LjA0OXYxNy4xMjJ6IiBmaWxsPSIjZTA1MjQzIi8+PHBhdGggZD0iTTIyLjE5NSAyMy4xNzFMMzUgMjAuMTc2VjBMMjIuMTk1IDYuMDQ5djE3LjEyMnoiIGZpbGw9IiM4YzMxMjMiLz48cGF0aCBkPSJNMzUgODBsMTIuODA1LTYuMDQ5VjU2LjgyOUwzNSA1OS44MjRWODB6IiBmaWxsPSIjZTA1MjQzIi8+PHBhdGggZD0iTTM1IDgwbC0xMi44MDUtNi4wNDlWNTYuODI5TDM1IDU5LjgyNFY4MHoiIGZpbGw9IiM4YzMxMjMiLz48cGF0aCBkPSJNNDcuODA1IDQ4LjU2NkwzNSA1MC4xMTdWMjkuOTMybDEyLjgwNSAxLjUyMnYxNy4xMTJ6IiBmaWxsPSIjZTA1MjQzIi8+PC9nPjwvc3ltYm9sPjwvc3ZnPg==",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Delete"},{property:"og:description",content:"Download a file to a S3 bucket. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-aws/tasks/s3/io.kestra.plugin.aws.s3.Delete.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Delete"},{name:"twitter:description",content:"Download a file to a S3 bucket. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-aws/tasks/s3/io.kestra.plugin.aws.s3.Delete.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-aws/tasks/s3/io.kestra.plugin.aws.s3.Delete.html",relativePath:"plugins/plugin-aws/tasks/s3/io.kestra.plugin.aws.s3.Delete.md",key:"v-1ac4429b",path:"/plugins/plugin-aws/tasks/s3/io.kestra.plugin.aws.s3.Delete.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:87},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:194},{level:3,title:"accessKeyId",slug:"accesskeyid",normalizedTitle:"accesskeyid",charIndex:209},{level:3,title:"bucket",slug:"bucket",normalizedTitle:"bucket",charIndex:75},{level:3,title:"bypassGovernanceRetention",slug:"bypassgovernanceretention",normalizedTitle:"bypassgovernanceretention",charIndex:502},{level:3,title:"key",slug:"key",normalizedTitle:"key",charIndex:169},{level:3,title:"mfa",slug:"mfa",normalizedTitle:"mfa",charIndex:761},{level:3,title:"region",slug:"region",normalizedTitle:"region",charIndex:1059},{level:3,title:"requestPayer",slug:"requestpayer",normalizedTitle:"requestpayer",charIndex:1143},{level:3,title:"secretKeyId",slug:"secretkeyid",normalizedTitle:"secretkeyid",charIndex:1269},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1490},{level:3,title:"deleteMarker",slug:"deletemarker",normalizedTitle:"deletemarker",charIndex:1502},{level:3,title:"requestCharged",slug:"requestcharged",normalizedTitle:"requestcharged",charIndex:1655},{level:3,title:"versionId",slug:"versionid",normalizedTitle:"versionid",charIndex:1760},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:1883}],headersStr:"Examples Properties accessKeyId bucket bypassGovernanceRetention key mfa region requestPayer secretKeyId Outputs deleteMarker requestCharged versionId Definitions",content:'Delete\n\ntype: "io.kestra.plugin.aws.s3.Delete"\n\n\n> Download a file to a S3 bucket.\n\n\n# Examples\n\nid: "delete"\ntype: "io.kestra.plugin.aws.s3.Delete"\nbucket: "my-bucket"\nkey: "path/to/file"\n\n\n\n# Properties\n\n\n# accessKeyId\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The Access Key Id in order to connect to AWS\n\nIf no connection is defined, we will use default DefaultCredentialsProvider that will try to guess the value\n\n\n# bucket\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The bucket\n\n\n# bypassGovernanceRetention\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n> Indicates whether S3 Object Lock should bypass Governance-mode restrictions to process this operation.\n\n\n# key\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The key to delete\n\n\n# mfa\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The concatenation of the authentication device\'s serial number, a space, and the value that is displayed on your authentication device.\n\nRequired to permanently delete a versioned object if versioning is configured with MFA delete enabled.\n\n\n# region\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The AWS region to used\n\n\n# requestPayer\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\nSets the value of the RequestPayer property for this object.\n\n\n# secretKeyId\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The Secret Key Id in order to connect to AWS\n\nIf no connection is defined, we will use default DefaultCredentialsProvider that will try to guess the value\n\n\n# Outputs\n\n\n# deleteMarker\n\n * Type: boolean\n\n> Specifies whether the versioned object that was permanently deleted was (true) or was not (false) a delete marker.\n\n\n# requestCharged\n\n * Type: string\n\n> Returns the value of the RequestCharged property for this object.\n\n\n# versionId\n\n * Type: string\n\n> Returns the version ID of the delete marker created as a result of the DELETE operation.\n\n\n# Definitions',normalizedContent:'delete\n\ntype: "io.kestra.plugin.aws.s3.delete"\n\n\n> download a file to a s3 bucket.\n\n\n# examples\n\nid: "delete"\ntype: "io.kestra.plugin.aws.s3.delete"\nbucket: "my-bucket"\nkey: "path/to/file"\n\n\n\n# properties\n\n\n# accesskeyid\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the access key id in order to connect to aws\n\nif no connection is defined, we will use default defaultcredentialsprovider that will try to guess the value\n\n\n# bucket\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the bucket\n\n\n# bypassgovernanceretention\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n> indicates whether s3 object lock should bypass governance-mode restrictions to process this operation.\n\n\n# key\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the key to delete\n\n\n# mfa\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the concatenation of the authentication device\'s serial number, a space, and the value that is displayed on your authentication device.\n\nrequired to permanently delete a versioned object if versioning is configured with mfa delete enabled.\n\n\n# region\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the aws region to used\n\n\n# requestpayer\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\nsets the value of the requestpayer property for this object.\n\n\n# secretkeyid\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the secret key id in order to connect to aws\n\nif no connection is defined, we will use default defaultcredentialsprovider that will try to guess the value\n\n\n# outputs\n\n\n# deletemarker\n\n * type: boolean\n\n> specifies whether the versioned object that was permanently deleted was (true) or was not (false) a delete marker.\n\n\n# requestcharged\n\n * type: string\n\n> returns the value of the requestcharged property for this object.\n\n\n# versionid\n\n * type: string\n\n> returns the version id of the delete marker created as a result of the delete operation.\n\n\n# definitions',charsets:{}},{title:"Download",frontmatter:{title:"Download",editLink:!1,description:"Download a file to a S3 bucket.",icon:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB2aWV3Qm94PSIwIDAgNzQuMzc1IDg1IiBmaWxsPSIjZmZmIiBmaWxsLXJ1bGU9ImV2ZW5vZGQiIHN0cm9rZT0iIzAwMCIgc3Ryb2tlLWxpbmVjYXA9InJvdW5kIiBzdHJva2UtbGluZWpvaW49InJvdW5kIj48dXNlIHhsaW5rOmhyZWY9IiNBIiB4PSIyLjE4OCIgeT0iMi41Ii8+PHN5bWJvbCBpZD0iQSIgb3ZlcmZsb3c9InZpc2libGUiPjxnIHN0cm9rZT0ibm9uZSI+PHBhdGggZD0iTTUuNjM0IDEzLjg4M0wwIDE2LjU0NnY0Ni44bDUuNjM0IDIuNjYzIDEzLjgyNy0yNi4wNjhMNS42MzQgMTMuODgzeiIgZmlsbD0iIzhjMzEyMyIvPjxwYXRoIGQ9Ik0zNSA1OS4yNzhMNS42MzQgNjZWMTMuODgzTDM1IDIwLjYwNSA0OC44NzggNDAuMDIgMzUgNTkuMjc4eiIgZmlsbD0iI2UwNTI0MyIvPjxwYXRoIGQ9Ik0zNSA1OS4yNzhMNjQuMzU2IDY2bDUuMDc3LTI1LjM5NS01LjA3Ny0yNi43MjJMMzUgMjAuNjA1djM4LjY3M3oiIGZpbGw9IiM4YzMxMjMiLz48cGF0aCBkPSJNNjQuMzU2IDEzLjg4M0w3MCAxNi41NDZ2NDYuOGwtNS42NDQgMi42NjNWMTMuODgzeiIgZmlsbD0iI2UwNTI0MyIvPjxwYXRoIGQ9Ik0yMi4xOTUgNDguNTY2TDM1IDUwLjExNyA0NS4xNTMgNDAuMDIgMzUgMjkuOTMybC0xMi44MDUgMS41MjJ2MTcuMTEyeiIgZmlsbD0iIzhjMzEyMyIvPjxwYXRoIGQ9Ik00Ny44MDUgMjMuMTcxTDM1IDI1LjM3NmwtMTIuODA1LTIuMjA1TDM1IDBsMTIuODA1IDIzLjE3MXoiIGZpbGw9IiM1ZTFmMTgiLz48cGF0aCBkPSJNNDcuODA1IDU2LjgyOUwzNSA1NC42MDVsLTEyLjgwNSAyLjIyNEwzNSA4MGwxMi44MDUtMjMuMTcxeiIgZmlsbD0iI2YyYjBhOSIvPjxwYXRoIGQ9Ik00Ny44MDUgMjMuMTcxTDM1IDIwLjE3NlYwbDEyLjgwNSA2LjA0OXYxNy4xMjJ6IiBmaWxsPSIjZTA1MjQzIi8+PHBhdGggZD0iTTIyLjE5NSAyMy4xNzFMMzUgMjAuMTc2VjBMMjIuMTk1IDYuMDQ5djE3LjEyMnoiIGZpbGw9IiM4YzMxMjMiLz48cGF0aCBkPSJNMzUgODBsMTIuODA1LTYuMDQ5VjU2LjgyOUwzNSA1OS44MjRWODB6IiBmaWxsPSIjZTA1MjQzIi8+PHBhdGggZD0iTTM1IDgwbC0xMi44MDUtNi4wNDlWNTYuODI5TDM1IDU5LjgyNFY4MHoiIGZpbGw9IiM4YzMxMjMiLz48cGF0aCBkPSJNNDcuODA1IDQ4LjU2NkwzNSA1MC4xMTdWMjkuOTMybDEyLjgwNSAxLjUyMnYxNy4xMTJ6IiBmaWxsPSIjZTA1MjQzIi8+PC9nPjwvc3ltYm9sPjwvc3ZnPg==",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Download"},{property:"og:description",content:"Download a file to a S3 bucket. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-aws/tasks/s3/io.kestra.plugin.aws.s3.Download.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Download"},{name:"twitter:description",content:"Download a file to a S3 bucket. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-aws/tasks/s3/io.kestra.plugin.aws.s3.Download.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-aws/tasks/s3/io.kestra.plugin.aws.s3.Download.html",relativePath:"plugins/plugin-aws/tasks/s3/io.kestra.plugin.aws.s3.Download.md",key:"v-222de1a1",path:"/plugins/plugin-aws/tasks/s3/io.kestra.plugin.aws.s3.Download.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:91},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:202},{level:3,title:"accessKeyId",slug:"accesskeyid",normalizedTitle:"accesskeyid",charIndex:217},{level:3,title:"bucket",slug:"bucket",normalizedTitle:"bucket",charIndex:79},{level:3,title:"key",slug:"key",normalizedTitle:"key",charIndex:177},{level:3,title:"region",slug:"region",normalizedTitle:"region",charIndex:630},{level:3,title:"requestPayer",slug:"requestpayer",normalizedTitle:"requestpayer",charIndex:714},{level:3,title:"secretKeyId",slug:"secretkeyid",normalizedTitle:"secretkeyid",charIndex:842},{level:3,title:"versionId",slug:"versionid",normalizedTitle:"versionid",charIndex:1063},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1189},{level:3,title:"contentLength",slug:"contentlength",normalizedTitle:"contentlength",charIndex:1201},{level:3,title:"contentType",slug:"contenttype",normalizedTitle:"contenttype",charIndex:1267},{level:3,title:"metadata",slug:"metadata",normalizedTitle:"metadata",charIndex:1366},{level:3,title:"uri",slug:"uri",normalizedTitle:"uri",charIndex:1449},{level:3,title:"versionId",slug:"versionid-2",normalizedTitle:"versionid",charIndex:1063},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:1531}],headersStr:"Examples Properties accessKeyId bucket key region requestPayer secretKeyId versionId Outputs contentLength contentType metadata uri versionId Definitions",content:'Download\n\ntype: "io.kestra.plugin.aws.s3.Download"\n\n\n> Download a file to a S3 bucket.\n\n\n# Examples\n\nid: "download"\ntype: "io.kestra.plugin.aws.s3.Download"\nbucket: "my-bucket"\nkey: "path/to/file"\n\n\n\n# Properties\n\n\n# accessKeyId\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The Access Key Id in order to connect to AWS\n\nIf no connection is defined, we will use default DefaultCredentialsProvider that will try to guess the value\n\n\n# bucket\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The bucket where to download the file\n\n\n# key\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The key where to download the file\n\n\n# region\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The AWS region to used\n\n\n# requestPayer\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Sets the value of the RequestPayer property for this object.\n\n\n# secretKeyId\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The Secret Key Id in order to connect to AWS\n\nIf no connection is defined, we will use default DefaultCredentialsProvider that will try to guess the value\n\n\n# versionId\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> VersionId used to reference a specific version of the object.\n\n\n# Outputs\n\n\n# contentLength\n\n * Type: integer\n\n> Size of the body in bytes.\n\n\n# contentType\n\n * Type: string\n\n> A standard MIME type describing the format of the object data.\n\n\n# metadata\n\n * Type: object\n\n> A map of metadata to store with the object in S3.\n\n\n# uri\n\n * Type: string\n\n\n# versionId\n\n * Type: string\n\n> Version of the object.\n\n\n# Definitions',normalizedContent:'download\n\ntype: "io.kestra.plugin.aws.s3.download"\n\n\n> download a file to a s3 bucket.\n\n\n# examples\n\nid: "download"\ntype: "io.kestra.plugin.aws.s3.download"\nbucket: "my-bucket"\nkey: "path/to/file"\n\n\n\n# properties\n\n\n# accesskeyid\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the access key id in order to connect to aws\n\nif no connection is defined, we will use default defaultcredentialsprovider that will try to guess the value\n\n\n# bucket\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the bucket where to download the file\n\n\n# key\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the key where to download the file\n\n\n# region\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the aws region to used\n\n\n# requestpayer\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> sets the value of the requestpayer property for this object.\n\n\n# secretkeyid\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the secret key id in order to connect to aws\n\nif no connection is defined, we will use default defaultcredentialsprovider that will try to guess the value\n\n\n# versionid\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> versionid used to reference a specific version of the object.\n\n\n# outputs\n\n\n# contentlength\n\n * type: integer\n\n> size of the body in bytes.\n\n\n# contenttype\n\n * type: string\n\n> a standard mime type describing the format of the object data.\n\n\n# metadata\n\n * type: object\n\n> a map of metadata to store with the object in s3.\n\n\n# uri\n\n * type: string\n\n\n# versionid\n\n * type: string\n\n> version of the object.\n\n\n# definitions',charsets:{}},{title:"Upload",frontmatter:{title:"Upload",editLink:!1,description:"Upload a file to a S3 bucket.",icon:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB2aWV3Qm94PSIwIDAgNzQuMzc1IDg1IiBmaWxsPSIjZmZmIiBmaWxsLXJ1bGU9ImV2ZW5vZGQiIHN0cm9rZT0iIzAwMCIgc3Ryb2tlLWxpbmVjYXA9InJvdW5kIiBzdHJva2UtbGluZWpvaW49InJvdW5kIj48dXNlIHhsaW5rOmhyZWY9IiNBIiB4PSIyLjE4OCIgeT0iMi41Ii8+PHN5bWJvbCBpZD0iQSIgb3ZlcmZsb3c9InZpc2libGUiPjxnIHN0cm9rZT0ibm9uZSI+PHBhdGggZD0iTTUuNjM0IDEzLjg4M0wwIDE2LjU0NnY0Ni44bDUuNjM0IDIuNjYzIDEzLjgyNy0yNi4wNjhMNS42MzQgMTMuODgzeiIgZmlsbD0iIzhjMzEyMyIvPjxwYXRoIGQ9Ik0zNSA1OS4yNzhMNS42MzQgNjZWMTMuODgzTDM1IDIwLjYwNSA0OC44NzggNDAuMDIgMzUgNTkuMjc4eiIgZmlsbD0iI2UwNTI0MyIvPjxwYXRoIGQ9Ik0zNSA1OS4yNzhMNjQuMzU2IDY2bDUuMDc3LTI1LjM5NS01LjA3Ny0yNi43MjJMMzUgMjAuNjA1djM4LjY3M3oiIGZpbGw9IiM4YzMxMjMiLz48cGF0aCBkPSJNNjQuMzU2IDEzLjg4M0w3MCAxNi41NDZ2NDYuOGwtNS42NDQgMi42NjNWMTMuODgzeiIgZmlsbD0iI2UwNTI0MyIvPjxwYXRoIGQ9Ik0yMi4xOTUgNDguNTY2TDM1IDUwLjExNyA0NS4xNTMgNDAuMDIgMzUgMjkuOTMybC0xMi44MDUgMS41MjJ2MTcuMTEyeiIgZmlsbD0iIzhjMzEyMyIvPjxwYXRoIGQ9Ik00Ny44MDUgMjMuMTcxTDM1IDI1LjM3NmwtMTIuODA1LTIuMjA1TDM1IDBsMTIuODA1IDIzLjE3MXoiIGZpbGw9IiM1ZTFmMTgiLz48cGF0aCBkPSJNNDcuODA1IDU2LjgyOUwzNSA1NC42MDVsLTEyLjgwNSAyLjIyNEwzNSA4MGwxMi44MDUtMjMuMTcxeiIgZmlsbD0iI2YyYjBhOSIvPjxwYXRoIGQ9Ik00Ny44MDUgMjMuMTcxTDM1IDIwLjE3NlYwbDEyLjgwNSA2LjA0OXYxNy4xMjJ6IiBmaWxsPSIjZTA1MjQzIi8+PHBhdGggZD0iTTIyLjE5NSAyMy4xNzFMMzUgMjAuMTc2VjBMMjIuMTk1IDYuMDQ5djE3LjEyMnoiIGZpbGw9IiM4YzMxMjMiLz48cGF0aCBkPSJNMzUgODBsMTIuODA1LTYuMDQ5VjU2LjgyOUwzNSA1OS44MjRWODB6IiBmaWxsPSIjZTA1MjQzIi8+PHBhdGggZD0iTTM1IDgwbC0xMi44MDUtNi4wNDlWNTYuODI5TDM1IDU5LjgyNFY4MHoiIGZpbGw9IiM4YzMxMjMiLz48cGF0aCBkPSJNNDcuODA1IDQ4LjU2NkwzNSA1MC4xMTdWMjkuOTMybDEyLjgwNSAxLjUyMnYxNy4xMTJ6IiBmaWxsPSIjZTA1MjQzIi8+PC9nPjwvc3ltYm9sPjwvc3ZnPg==",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Upload"},{property:"og:description",content:"Upload a file to a S3 bucket. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-aws/tasks/s3/io.kestra.plugin.aws.s3.Upload.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Upload"},{name:"twitter:description",content:"Upload a file to a S3 bucket. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-aws/tasks/s3/io.kestra.plugin.aws.s3.Upload.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-aws/tasks/s3/io.kestra.plugin.aws.s3.Upload.html",relativePath:"plugins/plugin-aws/tasks/s3/io.kestra.plugin.aws.s3.Upload.md",key:"v-2164bfef",path:"/plugins/plugin-aws/tasks/s3/io.kestra.plugin.aws.s3.Upload.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:85},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:218},{level:3,title:"accessKeyId",slug:"accesskeyid",normalizedTitle:"accesskeyid",charIndex:233},{level:3,title:"bucket",slug:"bucket",normalizedTitle:"bucket",charIndex:73},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:147},{level:3,title:"key",slug:"key",normalizedTitle:"key",charIndex:193},{level:3,title:"metadata",slug:"metadata",normalizedTitle:"metadata",charIndex:720},{level:3,title:"region",slug:"region",normalizedTitle:"region",charIndex:832},{level:3,title:"requestPayer",slug:"requestpayer",normalizedTitle:"requestpayer",charIndex:916},{level:3,title:"secretKeyId",slug:"secretkeyid",normalizedTitle:"secretkeyid",charIndex:1044},{level:3,title:"storageClass",slug:"storageclass",normalizedTitle:"storageclass",charIndex:1265},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1438},{level:3,title:"bucket",slug:"bucket-2",normalizedTitle:"bucket",charIndex:73},{level:3,title:"key",slug:"key-2",normalizedTitle:"key",charIndex:193},{level:3,title:"versionId",slug:"versionid",normalizedTitle:"versionid",charIndex:1503},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:1560}],headersStr:"Examples Properties accessKeyId bucket from key metadata region requestPayer secretKeyId storageClass Outputs bucket key versionId Definitions",content:'Upload\n\ntype: "io.kestra.plugin.aws.s3.Upload"\n\n\n> Upload a file to a S3 bucket.\n\n\n# Examples\n\nid: "upload"\ntype: "io.kestra.plugin.aws.s3.Upload"\nfrom: "{{ inputs.file }}"\nbucket: "my-bucket"\nkey: "path/to/file"\n\n\n\n# Properties\n\n\n# accessKeyId\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The Access Key Id in order to connect to AWS\n\nIf no connection is defined, we will use default DefaultCredentialsProvider that will try to guess the value\n\n\n# bucket\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The bucket where to upload the file\n\n\n# from\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The file to upload\n\n\n# key\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The key where to upload the file\n\n\n# metadata\n\n * Type: object\n * Dynamic: ❌\n * Required: ❌\n\n> A map of metadata to store with the object in S3.\n\n\n# region\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The AWS region to used\n\n\n# requestPayer\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Sets the value of the RequestPayer property for this object.\n\n\n# secretKeyId\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The Secret Key Id in order to connect to AWS\n\nIf no connection is defined, we will use default DefaultCredentialsProvider that will try to guess the value\n\n\n# storageClass\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> If you don\'t specify, S3 Standard is the default storage class. Amazon S3 supports other storage classes.\n\n\n# Outputs\n\n\n# bucket\n\n * Type: string\n\n\n# key\n\n * Type: string\n\n\n# versionId\n\n * Type: string\n\n> Version of the object.\n\n\n# Definitions',normalizedContent:'upload\n\ntype: "io.kestra.plugin.aws.s3.upload"\n\n\n> upload a file to a s3 bucket.\n\n\n# examples\n\nid: "upload"\ntype: "io.kestra.plugin.aws.s3.upload"\nfrom: "{{ inputs.file }}"\nbucket: "my-bucket"\nkey: "path/to/file"\n\n\n\n# properties\n\n\n# accesskeyid\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the access key id in order to connect to aws\n\nif no connection is defined, we will use default defaultcredentialsprovider that will try to guess the value\n\n\n# bucket\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the bucket where to upload the file\n\n\n# from\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the file to upload\n\n\n# key\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the key where to upload the file\n\n\n# metadata\n\n * type: object\n * dynamic: ❌\n * required: ❌\n\n> a map of metadata to store with the object in s3.\n\n\n# region\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the aws region to used\n\n\n# requestpayer\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> sets the value of the requestpayer property for this object.\n\n\n# secretkeyid\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the secret key id in order to connect to aws\n\nif no connection is defined, we will use default defaultcredentialsprovider that will try to guess the value\n\n\n# storageclass\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> if you don\'t specify, s3 standard is the default storage class. amazon s3 supports other storage classes.\n\n\n# outputs\n\n\n# bucket\n\n * type: string\n\n\n# key\n\n * type: string\n\n\n# versionid\n\n * type: string\n\n> version of the object.\n\n\n# definitions',charsets:{}},{title:"Plugin compress",frontmatter:{title:"Plugin compress",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Plugin compress"},{property:"og:description",content:"Plugin compress | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-compress/"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Plugin compress"},{name:"twitter:description",content:"Plugin compress | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-compress/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-compress/",relativePath:"plugins/plugin-compress/README.md",key:"v-9e03bf08",path:"/plugins/plugin-compress/",headers:[{level:2,title:"Common",slug:"common",normalizedTitle:"common",charIndex:22},{level:3,title:"Tasks",slug:"tasks",normalizedTitle:"tasks",charIndex:33}],headersStr:"Common Tasks",content:"# Plugin compress\n\n\n# Common\n\n\n# Tasks\n\n * ArchiveCompress\n * ArchiveDecompress\n * FileCompress\n * FileDecompress",normalizedContent:"# plugin compress\n\n\n# common\n\n\n# tasks\n\n * archivecompress\n * archivedecompress\n * filecompress\n * filedecompress",charsets:{}},{title:"ArchiveCompress",frontmatter:{title:"ArchiveCompress",editLink:!1,description:"Decompress an archive file",icon:"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz48IURPQ1RZUEUgc3ZnIFBVQkxJQyAiLS8vVzNDLy9EVEQgU1ZHIDEuMS8vRU4iICJodHRwOi8vd3d3LnczLm9yZy9HcmFwaGljcy9TVkcvMS4xL0RURC9zdmcxMS5kdGQiPjxzdmcgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIgdmVyc2lvbj0iMS4xIiB3aWR0aD0iMjQiIGhlaWdodD0iMjQiIHZpZXdCb3g9IjAgMCAyNCAyNCI+PHBhdGggZD0iTTIwIDZIMTJMMTAgNEg0QzIuOSA0IDIgNC45IDIgNlYxOEMyIDE5LjEgMi45IDIwIDQgMjBIMjBDMjEuMSAyMCAyMiAxOS4xIDIyIDE4VjhDMjIgNi45IDIxLjEgNiAyMCA2TTIwIDE4SDE2VjE2SDE0VjE4SDRWOEgxNFYxMEgxNlY4SDIwVjE4TTE2IDEyVjEwSDE4VjEySDE2TTE0IDEySDE2VjE0SDE0VjEyTTE4IDE2SDE2VjE0SDE4VjE2WiIgLz48L3N2Zz4=",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"ArchiveCompress"},{property:"og:description",content:"Decompress an archive file | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-compress/tasks/io.kestra.plugin.compress.ArchiveCompress.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"ArchiveCompress"},{name:"twitter:description",content:"Decompress an archive file | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-compress/tasks/io.kestra.plugin.compress.ArchiveCompress.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-compress/tasks/io.kestra.plugin.compress.ArchiveCompress.html",relativePath:"plugins/plugin-compress/tasks/io.kestra.plugin.compress.ArchiveCompress.md",key:"v-518c7fba",path:"/plugins/plugin-compress/tasks/io.kestra.plugin.compress.ArchiveCompress.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:102},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:406},{level:3,title:"algorithm",slug:"algorithm",normalizedTitle:"algorithm",charIndex:227},{level:3,title:"compression",slug:"compression",normalizedTitle:"compression",charIndex:242},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:185},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1206},{level:3,title:"uri",slug:"uri",normalizedTitle:"uri",charIndex:360},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:1292}],headersStr:"Examples Properties algorithm compression from Outputs uri Definitions",content:'ArchiveCompress\n\ntype: "io.kestra.plugin.compress.ArchiveCompress"\n\n\n> Decompress an archive file\n\n\n# Examples\n\nid: "archive_compress"\ntype: "io.kestra.plugin.compress.ArchiveCompress"\nfrom:\n  myfile.txt: "{{ inputs.files }} "\nalgorithm: ZIP\ncompression: GZIP\n\n\nid: "archive_compress"\ntype: "io.kestra.plugin.compress.ArchiveCompress"\nfrom: "{{ outputs.taskId.uri }}"\nalgorithm: ZIP\ncompression: GZIP\n\n\n\n# Properties\n\n\n# algorithm\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ✔️\n\n * Possible Values:\n   \n   * AR\n   * ARJ\n   * CPIO\n   * DUMP\n   * JAR\n   * TAR\n   * ZIP\n\n> The algorithm of the archive file\n\n\n# compression\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ❌\n\n * Possible Values:\n   \n   * BROTLI\n   * BZIP2\n   * DEFLATE\n   * DEFLATE64\n   * GZIP\n   * LZ4BLOCK\n   * LZ4FRAME\n   * LZMA\n   * SNAPPY\n   * SNAPPYFRAME\n   * XZ\n   * Z\n   * ZSTD\n\n> The algorithm compression of the archive file\n\n\n# from\n\n * Type: ====\n * SubType: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The files to compress\n\nThe key must be a valid path in the archive and can contains / in order to create directory, the value must be a kestra internal storage path.\nThe value can also be a JSON containing multiple keys/values.\n\n\n# Outputs\n\n\n# uri\n\n * Type: string\n\n> The url of the archive file on kestra storage\n\n\n# Definitions',normalizedContent:'archivecompress\n\ntype: "io.kestra.plugin.compress.archivecompress"\n\n\n> decompress an archive file\n\n\n# examples\n\nid: "archive_compress"\ntype: "io.kestra.plugin.compress.archivecompress"\nfrom:\n  myfile.txt: "{{ inputs.files }} "\nalgorithm: zip\ncompression: gzip\n\n\nid: "archive_compress"\ntype: "io.kestra.plugin.compress.archivecompress"\nfrom: "{{ outputs.taskid.uri }}"\nalgorithm: zip\ncompression: gzip\n\n\n\n# properties\n\n\n# algorithm\n\n * type: string\n\n * dynamic: ❌\n\n * required: ✔️\n\n * possible values:\n   \n   * ar\n   * arj\n   * cpio\n   * dump\n   * jar\n   * tar\n   * zip\n\n> the algorithm of the archive file\n\n\n# compression\n\n * type: string\n\n * dynamic: ❌\n\n * required: ❌\n\n * possible values:\n   \n   * brotli\n   * bzip2\n   * deflate\n   * deflate64\n   * gzip\n   * lz4block\n   * lz4frame\n   * lzma\n   * snappy\n   * snappyframe\n   * xz\n   * z\n   * zstd\n\n> the algorithm compression of the archive file\n\n\n# from\n\n * type: ====\n * subtype: string\n * dynamic: ✔️\n * required: ✔️\n\n> the files to compress\n\nthe key must be a valid path in the archive and can contains / in order to create directory, the value must be a kestra internal storage path.\nthe value can also be a json containing multiple keys/values.\n\n\n# outputs\n\n\n# uri\n\n * type: string\n\n> the url of the archive file on kestra storage\n\n\n# definitions',charsets:{}},{title:"ExecutorTemplate",frontmatter:{title:"ExecutorTemplate",editLink:!1,description:"Include a resuable template inside a flow",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"ExecutorTemplate"},{property:"og:description",content:"Include a resuable template inside a flow | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/core/tasks/flows/io.kestra.core.tasks.flows.Template$ExecutorTemplate.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"ExecutorTemplate"},{name:"twitter:description",content:"Include a resuable template inside a flow | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/core/tasks/flows/io.kestra.core.tasks.flows.Template$ExecutorTemplate.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/core/tasks/flows/io.kestra.core.tasks.flows.Template$ExecutorTemplate.html",relativePath:"plugins/core/tasks/flows/io.kestra.core.tasks.flows.Template$ExecutorTemplate.md",key:"v-6717a943",path:"/plugins/core/tasks/flows/io.kestra.core.tasks.flows.Template$ExecutorTemplate.html",headers:[{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:129},{level:3,title:"args",slug:"args",normalizedTitle:"args",charIndex:144},{level:3,title:"errors",slug:"errors",normalizedTitle:"errors",charIndex:719},{level:3,title:"namespace",slug:"namespace",normalizedTitle:"namespace",charIndex:518},{level:3,title:"template",slug:"template",normalizedTitle:"template",charIndex:102},{level:3,title:"templateId",slug:"templateid",normalizedTitle:"templateid",charIndex:549},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1102},{level:3,title:"args",slug:"args-2",normalizedTitle:"args",charIndex:144},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:1175},{level:3,title:"Task-2",slug:"task-2",normalizedTitle:"task-2",charIndex:754},{level:3,title:"Task-1",slug:"task-1",normalizedTitle:"task-1",charIndex:1202},{level:3,title:"Template",slug:"template-2",normalizedTitle:"template",charIndex:8}],headersStr:"Properties args errors namespace template templateId Outputs args Definitions Task-2 Task-1 Template",content:'ExecutorTemplate\n\ntype: "io.kestra.core.tasks.flows.Template$ExecutorTemplate"\n\n\n> Include a resuable template inside a flow\n\n\n# Properties\n\n\n# args\n\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The args to pass to the template\n\nYou can provide a list of named arguments (like function argument on dev) allowing to rename outputs of current flow for this template.\nfor example, if you declare this use of template like this:\n\n  - id: 2-template\n    type: io.kestra.core.tasks.flows.Template\n    namespace: io.kestra.tests\n    templateId: template\n    args:\n      forward: "{{ output.task-id.uri }}"\n\n\nYou will be able to get this output on the template with {{ parent.outputs.args.forward }}\n\n\n# errors\n\n * Type: array\n * SubType: Task-2\n * Dynamic: ❓\n * Required: ❌\n\n> List of tasks to run if any tasks failed on this FlowableTask\n\n\n# namespace\n\n * Type: string\n * Dynamic: ❌\n * Required: ✔️\n\n> The namespace of the template\n\n\n# template\n\n * Type: Template\n * Dynamic: ❓\n * Required: ❌\n\n\n# templateId\n\n * Type: string\n * Dynamic: ❌\n * Required: ✔️\n\n> The id of the template\n\n\n# Outputs\n\n\n# args\n\n * Type: object\n\n> The args passed to the template\n\n\n# Definitions\n\n\n# Task-2\n\n\n# Task-1\n\n\n# Template\n\n# deleted\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ✔️\n * Default: false\n\n# errors\n\n * Type: array\n * SubType: Task-2\n * Dynamic: ❓\n * Required: ❌\n\n# id\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n * Validation regExp: [a-zA-Z0-9._-]+\n * Min length: 1\n\n# namespace\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n * Validation regExp: [a-z0-9._-]+\n\n# tasks\n\n * Type: array\n * SubType: Task-2\n * Dynamic: ❓\n * Required: ✔️\n * Min items: 1',normalizedContent:'executortemplate\n\ntype: "io.kestra.core.tasks.flows.template$executortemplate"\n\n\n> include a resuable template inside a flow\n\n\n# properties\n\n\n# args\n\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> the args to pass to the template\n\nyou can provide a list of named arguments (like function argument on dev) allowing to rename outputs of current flow for this template.\nfor example, if you declare this use of template like this:\n\n  - id: 2-template\n    type: io.kestra.core.tasks.flows.template\n    namespace: io.kestra.tests\n    templateid: template\n    args:\n      forward: "{{ output.task-id.uri }}"\n\n\nyou will be able to get this output on the template with {{ parent.outputs.args.forward }}\n\n\n# errors\n\n * type: array\n * subtype: task-2\n * dynamic: ❓\n * required: ❌\n\n> list of tasks to run if any tasks failed on this flowabletask\n\n\n# namespace\n\n * type: string\n * dynamic: ❌\n * required: ✔️\n\n> the namespace of the template\n\n\n# template\n\n * type: template\n * dynamic: ❓\n * required: ❌\n\n\n# templateid\n\n * type: string\n * dynamic: ❌\n * required: ✔️\n\n> the id of the template\n\n\n# outputs\n\n\n# args\n\n * type: object\n\n> the args passed to the template\n\n\n# definitions\n\n\n# task-2\n\n\n# task-1\n\n\n# template\n\n# deleted\n\n * type: boolean\n * dynamic: ❓\n * required: ✔️\n * default: false\n\n# errors\n\n * type: array\n * subtype: task-2\n * dynamic: ❓\n * required: ❌\n\n# id\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n * validation regexp: [a-za-z0-9._-]+\n * min length: 1\n\n# namespace\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n * validation regexp: [a-z0-9._-]+\n\n# tasks\n\n * type: array\n * subtype: task-2\n * dynamic: ❓\n * required: ✔️\n * min items: 1',charsets:{}},{title:"ArchiveDecompress",frontmatter:{title:"ArchiveDecompress",editLink:!1,description:"Decompress an archive file",icon:"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz48IURPQ1RZUEUgc3ZnIFBVQkxJQyAiLS8vVzNDLy9EVEQgU1ZHIDEuMS8vRU4iICJodHRwOi8vd3d3LnczLm9yZy9HcmFwaGljcy9TVkcvMS4xL0RURC9zdmcxMS5kdGQiPjxzdmcgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIgdmVyc2lvbj0iMS4xIiB3aWR0aD0iMjQiIGhlaWdodD0iMjQiIHZpZXdCb3g9IjAgMCAyNCAyNCI+PHBhdGggZD0iTTIwIDZIMTJMMTAgNEg0QzIuOSA0IDIgNC45IDIgNlYxOEMyIDE5LjEgMi45IDIwIDQgMjBIMjBDMjEuMSAyMCAyMiAxOS4xIDIyIDE4VjhDMjIgNi45IDIxLjEgNiAyMCA2TTE4IDEySDE2VjE0SDE4VjE2SDE2VjE4SDE0VjE2SDE2VjE0SDE0VjEySDE2VjEwSDE0VjhIMTZWMTBIMThWMTJaIiAvPjwvc3ZnPg==",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"ArchiveDecompress"},{property:"og:description",content:"Decompress an archive file | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-compress/tasks/io.kestra.plugin.compress.ArchiveDecompress.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"ArchiveDecompress"},{name:"twitter:description",content:"Decompress an archive file | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-compress/tasks/io.kestra.plugin.compress.ArchiveDecompress.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-compress/tasks/io.kestra.plugin.compress.ArchiveDecompress.html",relativePath:"plugins/plugin-compress/tasks/io.kestra.plugin.compress.ArchiveDecompress.md",key:"v-1644ab03",path:"/plugins/plugin-compress/tasks/io.kestra.plugin.compress.ArchiveDecompress.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:106},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:241},{level:3,title:"algorithm",slug:"algorithm",normalizedTitle:"algorithm",charIndex:221},{level:3,title:"compression",slug:"compression",normalizedTitle:"compression",charIndex:445},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:193},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:826},{level:3,title:"files",slug:"files",normalizedTitle:"files",charIndex:210},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:910}],headersStr:"Examples Properties algorithm compression from Outputs files Definitions",content:'ArchiveDecompress\n\ntype: "io.kestra.plugin.compress.ArchiveDecompress"\n\n\n> Decompress an archive file\n\n\n# Examples\n\nid: "archive_decompress"\ntype: "io.kestra.plugin.compress.ArchiveDecompress"\nfrom: "{{ inputs.files }} "\nalgorithm: ZIP\n\n\n\n# Properties\n\n\n# algorithm\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ✔️\n\n * Possible Values:\n   \n   * AR\n   * ARJ\n   * CPIO\n   * DUMP\n   * JAR\n   * TAR\n   * ZIP\n\n> The algorithm of the archive file\n\n\n# compression\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ❌\n\n * Possible Values:\n   \n   * BROTLI\n   * BZIP2\n   * DEFLATE\n   * DEFLATE64\n   * GZIP\n   * LZ4BLOCK\n   * LZ4FRAME\n   * LZMA\n   * SNAPPY\n   * SNAPPYFRAME\n   * XZ\n   * Z\n   * ZSTD\n\n> The algorithm compression of the archive file\n\n\n# from\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The file internal storage uri\n\n\n# Outputs\n\n\n# files\n\n * Type: object\n\n> The url of the zip file on kestra storage\n\n\n# Definitions',normalizedContent:'archivedecompress\n\ntype: "io.kestra.plugin.compress.archivedecompress"\n\n\n> decompress an archive file\n\n\n# examples\n\nid: "archive_decompress"\ntype: "io.kestra.plugin.compress.archivedecompress"\nfrom: "{{ inputs.files }} "\nalgorithm: zip\n\n\n\n# properties\n\n\n# algorithm\n\n * type: string\n\n * dynamic: ❌\n\n * required: ✔️\n\n * possible values:\n   \n   * ar\n   * arj\n   * cpio\n   * dump\n   * jar\n   * tar\n   * zip\n\n> the algorithm of the archive file\n\n\n# compression\n\n * type: string\n\n * dynamic: ❌\n\n * required: ❌\n\n * possible values:\n   \n   * brotli\n   * bzip2\n   * deflate\n   * deflate64\n   * gzip\n   * lz4block\n   * lz4frame\n   * lzma\n   * snappy\n   * snappyframe\n   * xz\n   * z\n   * zstd\n\n> the algorithm compression of the archive file\n\n\n# from\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the file internal storage uri\n\n\n# outputs\n\n\n# files\n\n * type: object\n\n> the url of the zip file on kestra storage\n\n\n# definitions',charsets:{}},{title:"FileCompress",frontmatter:{title:"FileCompress",editLink:!1,description:"Compress a file",icon:"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz48IURPQ1RZUEUgc3ZnIFBVQkxJQyAiLS8vVzNDLy9EVEQgU1ZHIDEuMS8vRU4iICJodHRwOi8vd3d3LnczLm9yZy9HcmFwaGljcy9TVkcvMS4xL0RURC9zdmcxMS5kdGQiPjxzdmcgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIgdmVyc2lvbj0iMS4xIiB3aWR0aD0iMjQiIGhlaWdodD0iMjQiIHZpZXdCb3g9IjAgMCAyNCAyNCI+PHBhdGggZD0iTTEyIDE3VjE1SDE0VjE3SDEyTTE0IDEzVjExSDEyVjEzSDE0TTE0IDlWN0gxMlY5SDE0TTEwIDExSDEyVjlIMTBWMTFNMTAgMTVIMTJWMTNIMTBWMTVNMjEgNVYxOUMyMSAyMC4xIDIwLjEgMjEgMTkgMjFINUMzLjkgMjEgMyAyMC4xIDMgMTlWNUMzIDMuOSAzLjkgMyA1IDNIMTlDMjAuMSAzIDIxIDMuOSAyMSA1TTE5IDVIMTJWN0gxMFY1SDVWMTlIMTlWNVoiIC8+PC9zdmc+",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"FileCompress"},{property:"og:description",content:"Compress a file | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-compress/tasks/io.kestra.plugin.compress.FileCompress.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"FileCompress"},{name:"twitter:description",content:"Compress a file | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-compress/tasks/io.kestra.plugin.compress.FileCompress.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-compress/tasks/io.kestra.plugin.compress.FileCompress.html",relativePath:"plugins/plugin-compress/tasks/io.kestra.plugin.compress.FileCompress.md",key:"v-773120b3",path:"/plugins/plugin-compress/tasks/io.kestra.plugin.compress.FileCompress.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:85},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:210},{level:3,title:"compression",slug:"compression",normalizedTitle:"compression",charIndex:190},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:162},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:607},{level:3,title:"uri",slug:"uri",normalizedTitle:"uri",charIndex:599},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:689}],headersStr:"Examples Properties compression from Outputs uri Definitions",content:'FileCompress\n\ntype: "io.kestra.plugin.compress.FileCompress"\n\n\n> Compress a file\n\n\n# Examples\n\nid: "file_compress"\ntype: "io.kestra.plugin.compress.FileCompress"\nfrom: "{{ inputs.files }} "\ncompression: Z\n\n\n\n# Properties\n\n\n# compression\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ✔️\n\n * Possible Values:\n   \n   * BROTLI\n   * BZIP2\n   * DEFLATE\n   * DEFLATE64\n   * GZIP\n   * LZ4BLOCK\n   * LZ4FRAME\n   * LZMA\n   * SNAPPY\n   * SNAPPYFRAME\n   * XZ\n   * Z\n   * ZSTD\n\n> The algorithm compression of the archive file\n\n\n# from\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The file internal storage uri\n\n\n# Outputs\n\n\n# uri\n\n * Type: string\n\n> The url of the zip file on kestra storage\n\n\n# Definitions',normalizedContent:'filecompress\n\ntype: "io.kestra.plugin.compress.filecompress"\n\n\n> compress a file\n\n\n# examples\n\nid: "file_compress"\ntype: "io.kestra.plugin.compress.filecompress"\nfrom: "{{ inputs.files }} "\ncompression: z\n\n\n\n# properties\n\n\n# compression\n\n * type: string\n\n * dynamic: ❌\n\n * required: ✔️\n\n * possible values:\n   \n   * brotli\n   * bzip2\n   * deflate\n   * deflate64\n   * gzip\n   * lz4block\n   * lz4frame\n   * lzma\n   * snappy\n   * snappyframe\n   * xz\n   * z\n   * zstd\n\n> the algorithm compression of the archive file\n\n\n# from\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the file internal storage uri\n\n\n# outputs\n\n\n# uri\n\n * type: string\n\n> the url of the zip file on kestra storage\n\n\n# definitions',charsets:{}},{title:"FileDecompress",frontmatter:{title:"FileDecompress",editLink:!1,description:"Decompress a file",icon:"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz48IURPQ1RZUEUgc3ZnIFBVQkxJQyAiLS8vVzNDLy9EVEQgU1ZHIDEuMS8vRU4iICJodHRwOi8vd3d3LnczLm9yZy9HcmFwaGljcy9TVkcvMS4xL0RURC9zdmcxMS5kdGQiPjxzdmcgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIgdmVyc2lvbj0iMS4xIiB3aWR0aD0iMjQiIGhlaWdodD0iMjQiIHZpZXdCb3g9IjAgMCAyNCAyNCI+PHBhdGggZD0iTTE0LDE3SDEyVjE1SDEwVjEzSDEyVjE1SDE0TTE0LDlIMTJWMTFIMTRWMTNIMTJWMTFIMTBWOUgxMlY3SDEwVjVIMTJWN0gxNE0xOSwzSDVDMy44OSwzIDMsMy44OSAzLDVWMTlBMiwyIDAgMCwwIDUsMjFIMTlBMiwyIDAgMCwwIDIxLDE5VjVDMjEsMy44OSAyMC4xLDMgMTksM1oiIC8+PC9zdmc+",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"FileDecompress"},{property:"og:description",content:"Decompress a file | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-compress/tasks/io.kestra.plugin.compress.FileDecompress.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"FileDecompress"},{name:"twitter:description",content:"Decompress a file | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-compress/tasks/io.kestra.plugin.compress.FileDecompress.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-compress/tasks/io.kestra.plugin.compress.FileDecompress.html",relativePath:"plugins/plugin-compress/tasks/io.kestra.plugin.compress.FileDecompress.md",key:"v-2d261431",path:"/plugins/plugin-compress/tasks/io.kestra.plugin.compress.FileDecompress.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:91},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:220},{level:3,title:"compression",slug:"compression",normalizedTitle:"compression",charIndex:200},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:172},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:617},{level:3,title:"uri",slug:"uri",normalizedTitle:"uri",charIndex:609},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:699}],headersStr:"Examples Properties compression from Outputs uri Definitions",content:'FileDecompress\n\ntype: "io.kestra.plugin.compress.FileDecompress"\n\n\n> Decompress a file\n\n\n# Examples\n\nid: "file_decompress"\ntype: "io.kestra.plugin.compress.FileDecompress"\nfrom: "{{ inputs.files }} "\ncompression: Z\n\n\n\n# Properties\n\n\n# compression\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ✔️\n\n * Possible Values:\n   \n   * BROTLI\n   * BZIP2\n   * DEFLATE\n   * DEFLATE64\n   * GZIP\n   * LZ4BLOCK\n   * LZ4FRAME\n   * LZMA\n   * SNAPPY\n   * SNAPPYFRAME\n   * XZ\n   * Z\n   * ZSTD\n\n> The algorithm compression of the archive file\n\n\n# from\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The file internal storage uri\n\n\n# Outputs\n\n\n# uri\n\n * Type: string\n\n> The url of the zip file on kestra storage\n\n\n# Definitions',normalizedContent:'filedecompress\n\ntype: "io.kestra.plugin.compress.filedecompress"\n\n\n> decompress a file\n\n\n# examples\n\nid: "file_decompress"\ntype: "io.kestra.plugin.compress.filedecompress"\nfrom: "{{ inputs.files }} "\ncompression: z\n\n\n\n# properties\n\n\n# compression\n\n * type: string\n\n * dynamic: ❌\n\n * required: ✔️\n\n * possible values:\n   \n   * brotli\n   * bzip2\n   * deflate\n   * deflate64\n   * gzip\n   * lz4block\n   * lz4frame\n   * lzma\n   * snappy\n   * snappyframe\n   * xz\n   * z\n   * zstd\n\n> the algorithm compression of the archive file\n\n\n# from\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the file internal storage uri\n\n\n# outputs\n\n\n# uri\n\n * type: string\n\n> the url of the zip file on kestra storage\n\n\n# definitions',charsets:{}},{title:"Plugin crypto",frontmatter:{title:"Plugin crypto",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Plugin crypto"},{property:"og:description",content:"Plugin crypto | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-crypto/"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Plugin crypto"},{name:"twitter:description",content:"Plugin crypto | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-crypto/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-crypto/",relativePath:"plugins/plugin-crypto/README.md",key:"v-73d7027e",path:"/plugins/plugin-crypto/",headers:[{level:2,title:"Openpgp",slug:"openpgp",normalizedTitle:"openpgp",charIndex:20},{level:3,title:"Tasks",slug:"tasks",normalizedTitle:"tasks",charIndex:32}],headersStr:"Openpgp Tasks",content:"# Plugin crypto\n\n\n# Openpgp\n\n\n# Tasks\n\n * Decrypt\n * Encrypt",normalizedContent:"# plugin crypto\n\n\n# openpgp\n\n\n# tasks\n\n * decrypt\n * encrypt",charsets:{}},{title:"Decrypt",frontmatter:{title:"Decrypt",editLink:!1,description:"Decrypt a file crypted with PGP",icon:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB3aWR0aD0iMjQiIGhlaWdodD0iMjQiCiAgICAgcHJlc2VydmVBc3BlY3RSYXRpbz0ieE1pZFlNaWQgbWVldCIgdmlld0JveD0iMCAwIDI0IDI0IgogICAgIHN0eWxlPSItbXMtdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTsgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpOyB0cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpOyI+CiAgICA8cGF0aCBkPSJNMTggOGgtMVY2YzAtMi43Ni0yLjI0LTUtNS01UzcgMy4yNCA3IDZ2Mkg2Yy0xLjEgMC0yIC45LTIgMnYxMGMwIDEuMS45IDIgMiAyaDEyYzEuMSAwIDItLjkgMi0yVjEwYzAtMS4xLS45LTItMi0yek04LjkgNmMwLTEuNzEgMS4zOS0zLjEgMy4xLTMuMXMzLjEgMS4zOSAzLjEgMy4xdjJIOC45VjZ6TTE2IDE2aC0zdjNoLTJ2LTNIOHYtMmgzdi0zaDJ2M2gzdjJ6IgogICAgICAgICAgZmlsbD0iIzMzMyIvPgo8L3N2Zz4K",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Decrypt"},{property:"og:description",content:"Decrypt a file crypted with PGP | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-crypto/tasks/openpgp/io.kestra.plugin.crypto.openpgp.Decrypt.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Decrypt"},{name:"twitter:description",content:"Decrypt a file crypted with PGP | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-crypto/tasks/openpgp/io.kestra.plugin.crypto.openpgp.Decrypt.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-crypto/tasks/openpgp/io.kestra.plugin.crypto.openpgp.Decrypt.html",relativePath:"plugins/plugin-crypto/tasks/openpgp/io.kestra.plugin.crypto.openpgp.Decrypt.md",key:"v-23b873ba",path:"/plugins/plugin-crypto/tasks/openpgp/io.kestra.plugin.crypto.openpgp.Decrypt.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:97},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:633},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:187},{level:3,title:"privateKey",slug:"privatekey",normalizedTitle:"privatekey",charIndex:213},{level:3,title:"privateKeyPassphrase",slug:"privatekeypassphrase",normalizedTitle:"privatekeypassphrase",charIndex:267},{level:3,title:"requiredSignerUsers",slug:"requiredsignerusers",normalizedTitle:"requiredsignerusers",charIndex:585},{level:3,title:"signUsersKey",slug:"signuserskey",normalizedTitle:"signuserskey",charIndex:522},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1313},{level:3,title:"uri",slug:"uri",normalizedTitle:"uri",charIndex:1325},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:1377}],headersStr:"Examples Properties from privateKey privateKeyPassphrase requiredSignerUsers signUsersKey Outputs uri Definitions",content:'Decrypt\n\ntype: "io.kestra.plugin.crypto.openpgp.Decrypt"\n\n\n> Decrypt a file crypted with PGP\n\n\n# Examples\n\n> Decrypt a file\n\nid: "decrypt"\ntype: "io.kestra.plugin.crypto.openpgp.Decrypt"\nfrom: "{{ inputs.file }}"\nprivateKey: |\n  -----BEGIN PGP PRIVATE KEY BLOCK-----\nprivateKeyPassphrase: my-passphrase\n\n\n> Decrypt a file and verify signature\n\nid: "decrypt"\ntype: "io.kestra.plugin.crypto.openpgp.Decrypt"\nfrom: "{{ inputs.file }}"\nprivateKey: |\n  -----BEGIN PGP PRIVATE KEY BLOCK-----\nprivateKeyPassphrase: my-passphrase\nsignUsersKey: \n  - |\n    -----BEGIN PGP PRIVATE KEY BLOCK-----\nrequiredSignerUsers: \n  - signer@kestra.io\n\n\n\n# Properties\n\n\n# from\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The file to crypt\n\n\n# privateKey\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The private key to decrypt\n\nMust be an ascii key export with gpg --export-secret-key -a\n\n\n# privateKeyPassphrase\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The passphrase use to unlock the secret ring\n\n\n# requiredSignerUsers\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The list of recipients the file will be generated.\n\n\n# signUsersKey\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The public key use to sign the files\n\nMust be an ascii key export with gpg --export -a\n\n\n# Outputs\n\n\n# uri\n\n * Type: string\n\n> The decrypted files uri\n\n\n# Definitions',normalizedContent:'decrypt\n\ntype: "io.kestra.plugin.crypto.openpgp.decrypt"\n\n\n> decrypt a file crypted with pgp\n\n\n# examples\n\n> decrypt a file\n\nid: "decrypt"\ntype: "io.kestra.plugin.crypto.openpgp.decrypt"\nfrom: "{{ inputs.file }}"\nprivatekey: |\n  -----begin pgp private key block-----\nprivatekeypassphrase: my-passphrase\n\n\n> decrypt a file and verify signature\n\nid: "decrypt"\ntype: "io.kestra.plugin.crypto.openpgp.decrypt"\nfrom: "{{ inputs.file }}"\nprivatekey: |\n  -----begin pgp private key block-----\nprivatekeypassphrase: my-passphrase\nsignuserskey: \n  - |\n    -----begin pgp private key block-----\nrequiredsignerusers: \n  - signer@kestra.io\n\n\n\n# properties\n\n\n# from\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the file to crypt\n\n\n# privatekey\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the private key to decrypt\n\nmust be an ascii key export with gpg --export-secret-key -a\n\n\n# privatekeypassphrase\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the passphrase use to unlock the secret ring\n\n\n# requiredsignerusers\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> the list of recipients the file will be generated.\n\n\n# signuserskey\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> the public key use to sign the files\n\nmust be an ascii key export with gpg --export -a\n\n\n# outputs\n\n\n# uri\n\n * type: string\n\n> the decrypted files uri\n\n\n# definitions',charsets:{cjk:!0}},{title:"Encrypt",frontmatter:{title:"Encrypt",editLink:!1,description:"Encrypt a file crypted with PGP",icon:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB3aWR0aD0iMjQiIGhlaWdodD0iMjQiCiAgICAgcHJlc2VydmVBc3BlY3RSYXRpbz0ieE1pZFlNaWQgbWVldCIgdmlld0JveD0iMCAwIDI0IDI0IgogICAgIHN0eWxlPSItbXMtdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTsgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpOyB0cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpOyI+CiAgICA8cGF0aCBkPSJNMTggOGgtMVY2YzAtMi43Ni0yLjI0LTUtNS01UzcgMy4yNCA3IDZ2Mkg2Yy0xLjEgMC0yIC45LTIgMnYxMGMwIDEuMS45IDIgMiAyaDEyYzEuMSAwIDItLjkgMi0yVjEwYzAtMS4xLS45LTItMi0yek04LjkgNmMwLTEuNzEgMS4zOS0zLjEgMy4xLTMuMXMzLjEgMS4zOSAzLjEgMy4xdjJIOC45VjZ6TTE2IDE2aC0zdjNoLTJ2LTNIOHYtMmgzdi0zaDJ2M2gzdjJ6IgogICAgICAgICAgZmlsbD0iIzMzMyIvPgo8L3N2Zz4K",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Encrypt"},{property:"og:description",content:"Encrypt a file crypted with PGP | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-crypto/tasks/openpgp/io.kestra.plugin.crypto.openpgp.Encrypt.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Encrypt"},{name:"twitter:description",content:"Encrypt a file crypted with PGP | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-crypto/tasks/openpgp/io.kestra.plugin.crypto.openpgp.Encrypt.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-crypto/tasks/openpgp/io.kestra.plugin.crypto.openpgp.Encrypt.html",relativePath:"plugins/plugin-crypto/tasks/openpgp/io.kestra.plugin.crypto.openpgp.Encrypt.md",key:"v-20fc1dba",path:"/plugins/plugin-crypto/tasks/openpgp/io.kestra.plugin.crypto.openpgp.Encrypt.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:97},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:686},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:198},{level:3,title:"key",slug:"key",normalizedTitle:"key",charIndex:224},{level:3,title:"recipients",slug:"recipients",normalizedTitle:"recipients",charIndex:275},{level:3,title:"signPassphrase",slug:"signpassphrase",normalizedTitle:"signpassphrase",charIndex:624},{level:3,title:"signPrivateKey",slug:"signprivatekey",normalizedTitle:"signprivatekey",charIndex:566},{level:3,title:"signPublicKey",slug:"signpublickey",normalizedTitle:"signpublickey",charIndex:505},{level:3,title:"signUser",slug:"signuser",normalizedTitle:"signuser",charIndex:654},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1645},{level:3,title:"uri",slug:"uri",normalizedTitle:"uri",charIndex:1657},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:1709}],headersStr:"Examples Properties from key recipients signPassphrase signPrivateKey signPublicKey signUser Outputs uri Definitions",content:'Encrypt\n\ntype: "io.kestra.plugin.crypto.openpgp.Encrypt"\n\n\n> Encrypt a file crypted with PGP\n\n\n# Examples\n\n> Encrypt a file not signed\n\nid: "encrypt"\ntype: "io.kestra.plugin.crypto.openpgp.Encrypt"\nfrom: "{{ inputs.file }}"\nkey: |\n  -----BEGIN PGP PUBLIC KEY BLOCK----- ... \nrecipients:\n  - hello@kestra.io\n\n\n> Encrypt a file signed\n\nid: "encrypt"\ntype: "io.kestra.plugin.crypto.openpgp.Encrypt"\nfrom: "{{ inputs.file }}"\nkey: |\n  -----BEGIN PGP PUBLIC KEY BLOCK----- ... \nrecipients:\n  - hello@kestra.io\nsignPublicKey: |\n  -----BEGIN PGP PUBLIC KEY BLOCK----- ... \nsignPrivateKey: |\n  -----BEGIN PGP PRIVATE KEY BLOCK-----\nsignPassphrase: my-passphrase\nsignUser: signer@kestra.io\n\n\n\n# Properties\n\n\n# from\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The file to crypt\n\n\n# key\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The public key use to sign the files\n\nMust be an ascii key export with gpg --export -a\n\n\n# recipients\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The list of recipients the file will be generated.\n\n\n# signPassphrase\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The passphrase use to unlock the secret ring\n\n\n# signPrivateKey\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The public key use to sign the files\n\nMust be an ascii key export with gpg --export -a\n\n\n# signPublicKey\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The public key use to sign the files\n\nMust be an ascii key export with gpg --export -a\n\n\n# signUser\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The user that will signed the files\n\nIf you want to sign the file, you need to provide a privateKey\n\n\n# Outputs\n\n\n# uri\n\n * Type: string\n\n> The encrypted files uri\n\n\n# Definitions',normalizedContent:'encrypt\n\ntype: "io.kestra.plugin.crypto.openpgp.encrypt"\n\n\n> encrypt a file crypted with pgp\n\n\n# examples\n\n> encrypt a file not signed\n\nid: "encrypt"\ntype: "io.kestra.plugin.crypto.openpgp.encrypt"\nfrom: "{{ inputs.file }}"\nkey: |\n  -----begin pgp public key block----- ... \nrecipients:\n  - hello@kestra.io\n\n\n> encrypt a file signed\n\nid: "encrypt"\ntype: "io.kestra.plugin.crypto.openpgp.encrypt"\nfrom: "{{ inputs.file }}"\nkey: |\n  -----begin pgp public key block----- ... \nrecipients:\n  - hello@kestra.io\nsignpublickey: |\n  -----begin pgp public key block----- ... \nsignprivatekey: |\n  -----begin pgp private key block-----\nsignpassphrase: my-passphrase\nsignuser: signer@kestra.io\n\n\n\n# properties\n\n\n# from\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the file to crypt\n\n\n# key\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the public key use to sign the files\n\nmust be an ascii key export with gpg --export -a\n\n\n# recipients\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> the list of recipients the file will be generated.\n\n\n# signpassphrase\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the passphrase use to unlock the secret ring\n\n\n# signprivatekey\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the public key use to sign the files\n\nmust be an ascii key export with gpg --export -a\n\n\n# signpublickey\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the public key use to sign the files\n\nmust be an ascii key export with gpg --export -a\n\n\n# signuser\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the user that will signed the files\n\nif you want to sign the file, you need to provide a privatekey\n\n\n# outputs\n\n\n# uri\n\n * type: string\n\n> the encrypted files uri\n\n\n# definitions',charsets:{cjk:!0}},{title:"Plugin elasticsearch",frontmatter:{title:"Plugin elasticsearch",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Plugin elasticsearch"},{property:"og:description",content:"Plugin elasticsearch | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-elasticsearch/"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Plugin elasticsearch"},{name:"twitter:description",content:"Plugin elasticsearch | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-elasticsearch/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-elasticsearch/",relativePath:"plugins/plugin-elasticsearch/README.md",key:"v-57685830",path:"/plugins/plugin-elasticsearch/",headers:[{level:2,title:"Common",slug:"common",normalizedTitle:"common",charIndex:27},{level:3,title:"Tasks",slug:"tasks",normalizedTitle:"tasks",charIndex:38}],headersStr:"Common Tasks",content:"# Plugin elasticsearch\n\n\n# Common\n\n\n# Tasks\n\n * Bulk\n * Get\n * Load\n * Put\n * Request\n * Scroll\n * Search",normalizedContent:"# plugin elasticsearch\n\n\n# common\n\n\n# tasks\n\n * bulk\n * get\n * load\n * put\n * request\n * scroll\n * search",charsets:{}},{title:"Bulk",frontmatter:{title:"Bulk",editLink:!1,description:"Bulk load documents in elasticsearch using [bulk files](https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-bulk.html) elastic files",icon:"PHN2ZyB3aWR0aD0iMjUwMCIgaGVpZ2h0PSIyNTAwIiB2aWV3Qm94PSIwIDAgMjU2IDI1NiIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiBwcmVzZXJ2ZUFzcGVjdFJhdGlvPSJ4TWluWU1pbiBtZWV0Ij48cGF0aCBkPSJNMjU1Ljk2IDEzNC4zOTNjMC0yMS41MjEtMTMuMzczLTQwLjExNy0zMy4yMjMtNDcuNDNhNzUuMjM5IDc1LjIzOSAwIDAgMCAxLjI1My0xMy43OTFjMC0zOS45MDktMzIuMzg2LTcyLjI5NS03Mi4yOTUtNzIuMjk1LTIzLjE5MyAwLTQ0LjkyMyAxMS4wNzQtNTguNTA1IDMwLjA4OC02LjY4Ni01LjIyNC0xNC44MzUtNy45NC0yMy40MDItNy45NC0yMS4xMDQgMC0zOC40NDYgMTcuMTMzLTM4LjQ0NiAzOC40NDYgMCA0LjU5Ny44MzYgOS4xOTQgMi4yOTggMTMuMzczQzEzLjU4MiA4MS43MzkgMCAxMDAuOTYyIDAgMTIyLjI3NGMwIDIxLjUyMiAxMy4zNzMgNDAuMzI3IDMzLjQzMSA0Ny42NC0uODM1IDQuMzg4LTEuMjUzIDguOTg1LTEuMjUzIDEzLjc5IDAgMzkuNyAzMi4zODYgNzIuMDg3IDcyLjA4NiA3Mi4wODcgMjMuNDAyIDAgNDQuOTI0LTExLjI4MyA1OC41MDUtMzAuMDg4IDYuNjg2IDUuMjIzIDE1LjA0NCA4LjE0OSAyMy42MTEgOC4xNDkgMjEuMTA0IDAgMzguNDQ2LTE3LjEzNCAzOC40NDYtMzguNDQ2IDAtNC41OTctLjgzNi05LjE5NC0yLjI5OC0xMy4zNzMgMTkuNjQtNy4xMDQgMzMuNDMxLTI2LjMyNyAzMy40MzEtNDcuNjR6IiBmaWxsPSIjRkZGIi8+PHBhdGggZD0iTTEwMC4wODUgMTEwLjM2NGw1Ny4wNDMgMjYuMTE5IDU3LjY2OS01MC41NjVhNjQuMzEyIDY0LjMxMiAwIDAgMCAxLjI1My0xMi43NDZjMC0zNS41Mi0yOC44MzQtNjQuMzU1LTY0LjM1NS02NC4zNTUtMjEuMzEzIDAtNDEuMTYyIDEwLjQ0Ny01My4wNzIgMjcuOTk4bC05LjYxMiA0OS43MyAxMS4wNzQgMjMuODJ6IiBmaWxsPSIjRjRCRDE5Ii8+PHBhdGggZD0iTTQwLjk1MyAxNzAuNzVjLS44MzUgNC4xNzktMS4yNTMgOC41NjctMS4yNTMgMTIuOTU1IDAgMzUuNTIgMjkuMDQzIDY0LjU2NCA2NC41NjQgNjQuNTY0IDIxLjUyMiAwIDQxLjM3Mi0xMC42NTYgNTMuNDktMjguMjA4bDkuNDAzLTQ5LjcyOS0xMi43NDYtMjQuMjM4LTU3LjI1MS0yNi4xMTgtNTYuMjA3IDUwLjc3NHoiIGZpbGw9IiMzQ0JFQjEiLz48cGF0aCBkPSJNNDAuNTM2IDcxLjkxOGwzOS4wNzMgOS4xOTQgOC43NzUtNDQuNTA2Yy01LjQzMi00LjE3OS0xMS45MS02LjI2OC0xOC44MDUtNi4yNjgtMTYuOTI1IDAtMzAuOTI0IDEzLjc5LTMwLjkyNCAzMC45MjQgMCAzLjU1Mi42MjcgNy4zMTMgMS44OCAxMC42NTZ6IiBmaWxsPSIjRTk0NzhDIi8+PHBhdGggZD0iTTM3LjE5MiA4MS4zMmMtMTcuNTUxIDUuNjQyLTI5LjY3IDIyLjU2Ny0yOS42NyA0MC45NTQgMCAxNy45NyAxMS4wNzQgMzQuMDU5IDI3Ljc5IDQwLjMyN2w1NC45NTMtNDkuNzMtMTAuMDMtMjEuNTItNDMuMDQzLTEwLjAzeiIgZmlsbD0iIzJDNDU4RiIvPjxwYXRoIGQ9Ik0xNjcuNzg0IDIxOS44NTJjNS40MzIgNC4xOCAxMS45MSA2LjQ3OCAxOC41OTYgNi40NzggMTYuOTI1IDAgMzAuOTI0LTEzLjc5IDMwLjkyNC0zMC45MjQgMC0zLjc2MS0uNjI3LTcuMzE0LTEuODgtMTAuNjU3bC0zOS4wNzMtOS4xOTMtOC41NjcgNDQuMjk2eiIgZmlsbD0iIzk1QzYzRCIvPjxwYXRoIGQ9Ik0xNzUuNzI0IDE2NS4zMTdsNDMuMDQzIDEwLjAzYzE3LjU1MS01Ljg1IDI5LjY3LTIyLjU2NiAyOS42Ny00MC45NTQgMC0xNy45Ny0xMS4wNzQtMzMuODQ5LTI3Ljc5LTQwLjMyNmwtNTYuNDE1IDQ5LjMxMSAxMS40OTIgMjEuOTR6IiBmaWxsPSIjMTc2NjU1Ii8+PC9zdmc+",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Bulk"},{property:"og:description",content:"Bulk load documents in elasticsearch using [bulk files](https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-bulk.html) elastic files | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-elasticsearch/tasks/io.kestra.plugin.elasticsearch.Bulk.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Bulk"},{name:"twitter:description",content:"Bulk load documents in elasticsearch using [bulk files](https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-bulk.html) elastic files | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-elasticsearch/tasks/io.kestra.plugin.elasticsearch.Bulk.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-elasticsearch/tasks/io.kestra.plugin.elasticsearch.Bulk.html",relativePath:"plugins/plugin-elasticsearch/tasks/io.kestra.plugin.elasticsearch.Bulk.md",key:"v-95b3b072",path:"/plugins/plugin-elasticsearch/tasks/io.kestra.plugin.elasticsearch.Bulk.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:126},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:273},{level:3,title:"chunk",slug:"chunk",normalizedTitle:"chunk",charIndex:288},{level:3,title:"connection",slug:"connection",normalizedTitle:"connection",charIndex:191},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:242},{level:3,title:"routing",slug:"routing",normalizedTitle:"routing",charIndex:575},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:733},{level:3,title:"size",slug:"size",normalizedTitle:"size",charIndex:349},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:802},{level:3,title:"ElasticsearchConnection",slug:"elasticsearchconnection",normalizedTitle:"elasticsearchconnection",charIndex:411},{level:3,title:"BasicAuth",slug:"basicauth-2",normalizedTitle:"basicauth",charIndex:865}],headersStr:"Examples Properties chunk connection from routing Outputs size Definitions ElasticsearchConnection BasicAuth",content:'Bulk\n\ntype: "io.kestra.plugin.elasticsearch.Bulk"\n\n\n> Bulk load documents in elasticsearch using bulk files elastic files\n\n\n# Examples\n\nid: "bulk"\ntype: "io.kestra.plugin.elasticsearch.Bulk"\nconnection:\n  hosts: \n   - "http://localhost:9200"\nfrom: "{{ inputs.file }}"\n\n\n\n# Properties\n\n\n# chunk\n\n * Type: integer\n * Dynamic: ✔️\n * Required: ❌\n\n> The size of chunk for every bulk request\n\n\n# connection\n\n * Type: ElasticsearchConnection\n * Dynamic: ❓\n * Required: ✔️\n\n> The connection properties.\n\n\n# from\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The source file\n\n\n# routing\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> Controls the shard routing of the request.\n\nUsing this value to hash the shard and not the id.\n\n\n# Outputs\n\n\n# size\n\n * Type: integer\n\n> The size of the rows fetch\n\n\n# Definitions\n\n\n# ElasticsearchConnection\n\n# basicAuth\n\n * Type: BasicAuth\n * Dynamic: ❌\n * Required: ❌\n\n> Basic Auth configuration\n\n# headers\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> List of http headers to be send on every request\n\nMust be an string with key value separated with :, ex: Authorization: Token XYZ\n\n# hosts\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min items: 1\n\n> List of http elasticsearch servers\n\nMust be an uri like https://elasticsearch.com:9200 with scheme and port\n\n# pathPrefix\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Sets the path\'s prefix for every request used by the http client.\n\nFor example, if this is set to /my/path, then any client request will become /my/path/ + endpoint.\nIn essence, every request\'s endpoint is prefixed by this pathPrefix.\nThe path prefix is useful for when Elasticsearch is behind a proxy that provides a base path or a proxy that requires all paths to start with \'/\'; it is not intended for other purposes and it should not be supplied in other scenarios.\n\n# strictDeprecationMode\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n\n> Whether the REST client should return any response containing at leas one warning header as a failure.\n\n# trustAllSsl\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n\n> Trust all SSL CA certificate\n\nUse this if the server is using a self signed ssl certificate.\n\n\n# BasicAuth\n\n# password\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Basic Auth password\n\n# username\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Basic Auth username',normalizedContent:'bulk\n\ntype: "io.kestra.plugin.elasticsearch.bulk"\n\n\n> bulk load documents in elasticsearch using bulk files elastic files\n\n\n# examples\n\nid: "bulk"\ntype: "io.kestra.plugin.elasticsearch.bulk"\nconnection:\n  hosts: \n   - "http://localhost:9200"\nfrom: "{{ inputs.file }}"\n\n\n\n# properties\n\n\n# chunk\n\n * type: integer\n * dynamic: ✔️\n * required: ❌\n\n> the size of chunk for every bulk request\n\n\n# connection\n\n * type: elasticsearchconnection\n * dynamic: ❓\n * required: ✔️\n\n> the connection properties.\n\n\n# from\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the source file\n\n\n# routing\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> controls the shard routing of the request.\n\nusing this value to hash the shard and not the id.\n\n\n# outputs\n\n\n# size\n\n * type: integer\n\n> the size of the rows fetch\n\n\n# definitions\n\n\n# elasticsearchconnection\n\n# basicauth\n\n * type: basicauth\n * dynamic: ❌\n * required: ❌\n\n> basic auth configuration\n\n# headers\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> list of http headers to be send on every request\n\nmust be an string with key value separated with :, ex: authorization: token xyz\n\n# hosts\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ✔️\n * min items: 1\n\n> list of http elasticsearch servers\n\nmust be an uri like https://elasticsearch.com:9200 with scheme and port\n\n# pathprefix\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> sets the path\'s prefix for every request used by the http client.\n\nfor example, if this is set to /my/path, then any client request will become /my/path/ + endpoint.\nin essence, every request\'s endpoint is prefixed by this pathprefix.\nthe path prefix is useful for when elasticsearch is behind a proxy that provides a base path or a proxy that requires all paths to start with \'/\'; it is not intended for other purposes and it should not be supplied in other scenarios.\n\n# strictdeprecationmode\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n\n> whether the rest client should return any response containing at leas one warning header as a failure.\n\n# trustallssl\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n\n> trust all ssl ca certificate\n\nuse this if the server is using a self signed ssl certificate.\n\n\n# basicauth\n\n# password\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> basic auth password\n\n# username\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> basic auth username',charsets:{}},{title:"Get",frontmatter:{title:"Get",editLink:!1,description:"Get an Elasticsearch document",icon:"PHN2ZyB3aWR0aD0iMjUwMCIgaGVpZ2h0PSIyNTAwIiB2aWV3Qm94PSIwIDAgMjU2IDI1NiIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiBwcmVzZXJ2ZUFzcGVjdFJhdGlvPSJ4TWluWU1pbiBtZWV0Ij48cGF0aCBkPSJNMjU1Ljk2IDEzNC4zOTNjMC0yMS41MjEtMTMuMzczLTQwLjExNy0zMy4yMjMtNDcuNDNhNzUuMjM5IDc1LjIzOSAwIDAgMCAxLjI1My0xMy43OTFjMC0zOS45MDktMzIuMzg2LTcyLjI5NS03Mi4yOTUtNzIuMjk1LTIzLjE5MyAwLTQ0LjkyMyAxMS4wNzQtNTguNTA1IDMwLjA4OC02LjY4Ni01LjIyNC0xNC44MzUtNy45NC0yMy40MDItNy45NC0yMS4xMDQgMC0zOC40NDYgMTcuMTMzLTM4LjQ0NiAzOC40NDYgMCA0LjU5Ny44MzYgOS4xOTQgMi4yOTggMTMuMzczQzEzLjU4MiA4MS43MzkgMCAxMDAuOTYyIDAgMTIyLjI3NGMwIDIxLjUyMiAxMy4zNzMgNDAuMzI3IDMzLjQzMSA0Ny42NC0uODM1IDQuMzg4LTEuMjUzIDguOTg1LTEuMjUzIDEzLjc5IDAgMzkuNyAzMi4zODYgNzIuMDg3IDcyLjA4NiA3Mi4wODcgMjMuNDAyIDAgNDQuOTI0LTExLjI4MyA1OC41MDUtMzAuMDg4IDYuNjg2IDUuMjIzIDE1LjA0NCA4LjE0OSAyMy42MTEgOC4xNDkgMjEuMTA0IDAgMzguNDQ2LTE3LjEzNCAzOC40NDYtMzguNDQ2IDAtNC41OTctLjgzNi05LjE5NC0yLjI5OC0xMy4zNzMgMTkuNjQtNy4xMDQgMzMuNDMxLTI2LjMyNyAzMy40MzEtNDcuNjR6IiBmaWxsPSIjRkZGIi8+PHBhdGggZD0iTTEwMC4wODUgMTEwLjM2NGw1Ny4wNDMgMjYuMTE5IDU3LjY2OS01MC41NjVhNjQuMzEyIDY0LjMxMiAwIDAgMCAxLjI1My0xMi43NDZjMC0zNS41Mi0yOC44MzQtNjQuMzU1LTY0LjM1NS02NC4zNTUtMjEuMzEzIDAtNDEuMTYyIDEwLjQ0Ny01My4wNzIgMjcuOTk4bC05LjYxMiA0OS43MyAxMS4wNzQgMjMuODJ6IiBmaWxsPSIjRjRCRDE5Ii8+PHBhdGggZD0iTTQwLjk1MyAxNzAuNzVjLS44MzUgNC4xNzktMS4yNTMgOC41NjctMS4yNTMgMTIuOTU1IDAgMzUuNTIgMjkuMDQzIDY0LjU2NCA2NC41NjQgNjQuNTY0IDIxLjUyMiAwIDQxLjM3Mi0xMC42NTYgNTMuNDktMjguMjA4bDkuNDAzLTQ5LjcyOS0xMi43NDYtMjQuMjM4LTU3LjI1MS0yNi4xMTgtNTYuMjA3IDUwLjc3NHoiIGZpbGw9IiMzQ0JFQjEiLz48cGF0aCBkPSJNNDAuNTM2IDcxLjkxOGwzOS4wNzMgOS4xOTQgOC43NzUtNDQuNTA2Yy01LjQzMi00LjE3OS0xMS45MS02LjI2OC0xOC44MDUtNi4yNjgtMTYuOTI1IDAtMzAuOTI0IDEzLjc5LTMwLjkyNCAzMC45MjQgMCAzLjU1Mi42MjcgNy4zMTMgMS44OCAxMC42NTZ6IiBmaWxsPSIjRTk0NzhDIi8+PHBhdGggZD0iTTM3LjE5MiA4MS4zMmMtMTcuNTUxIDUuNjQyLTI5LjY3IDIyLjU2Ny0yOS42NyA0MC45NTQgMCAxNy45NyAxMS4wNzQgMzQuMDU5IDI3Ljc5IDQwLjMyN2w1NC45NTMtNDkuNzMtMTAuMDMtMjEuNTItNDMuMDQzLTEwLjAzeiIgZmlsbD0iIzJDNDU4RiIvPjxwYXRoIGQ9Ik0xNjcuNzg0IDIxOS44NTJjNS40MzIgNC4xOCAxMS45MSA2LjQ3OCAxOC41OTYgNi40NzggMTYuOTI1IDAgMzAuOTI0LTEzLjc5IDMwLjkyNC0zMC45MjQgMC0zLjc2MS0uNjI3LTcuMzE0LTEuODgtMTAuNjU3bC0zOS4wNzMtOS4xOTMtOC41NjcgNDQuMjk2eiIgZmlsbD0iIzk1QzYzRCIvPjxwYXRoIGQ9Ik0xNzUuNzI0IDE2NS4zMTdsNDMuMDQzIDEwLjAzYzE3LjU1MS01Ljg1IDI5LjY3LTIyLjU2NiAyOS42Ny00MC45NTQgMC0xNy45Ny0xMS4wNzQtMzMuODQ5LTI3Ljc5LTQwLjMyNmwtNTYuNDE1IDQ5LjMxMSAxMS40OTIgMjEuOTR6IiBmaWxsPSIjMTc2NjU1Ii8+PC9zdmc+",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Get"},{property:"og:description",content:"Get an Elasticsearch document | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-elasticsearch/tasks/io.kestra.plugin.elasticsearch.Get.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Get"},{name:"twitter:description",content:"Get an Elasticsearch document | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-elasticsearch/tasks/io.kestra.plugin.elasticsearch.Get.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-elasticsearch/tasks/io.kestra.plugin.elasticsearch.Get.html",relativePath:"plugins/plugin-elasticsearch/tasks/io.kestra.plugin.elasticsearch.Get.md",key:"v-0d5cccba",path:"/plugins/plugin-elasticsearch/tasks/io.kestra.plugin.elasticsearch.Get.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:86},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:236},{level:3,title:"connection",slug:"connection",normalizedTitle:"connection",charIndex:149},{level:3,title:"index",slug:"index",normalizedTitle:"index",charIndex:200},{level:3,title:"key",slug:"key",normalizedTitle:"key",charIndex:218},{level:3,title:"routing",slug:"routing",normalizedTitle:"routing",charIndex:526},{level:3,title:"version",slug:"version",normalizedTitle:"version",charIndex:684},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:897},{level:3,title:"row",slug:"row",normalizedTitle:"row",charIndex:909},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:934},{level:3,title:"ElasticsearchConnection",slug:"elasticsearchconnection",normalizedTitle:"elasticsearchconnection",charIndex:272},{level:3,title:"BasicAuth",slug:"basicauth-2",normalizedTitle:"basicauth",charIndex:997}],headersStr:"Examples Properties connection index key routing version Outputs row Definitions ElasticsearchConnection BasicAuth",content:'Get\n\ntype: "io.kestra.plugin.elasticsearch.Get"\n\n\n> Get an Elasticsearch document\n\n\n# Examples\n\nid: "get"\ntype: "io.kestra.plugin.elasticsearch.Get"\nconnection:\n  hosts: \n   - "http://localhost:9200"\nindex: "my_index"\nkey: "my_id"\n\n\n\n# Properties\n\n\n# connection\n\n * Type: ElasticsearchConnection\n * Dynamic: ❓\n * Required: ✔️\n\n> The connection properties.\n\n\n# index\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The elasticsearch indice\n\n\n# key\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The elasticsearch id\n\n\n# routing\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> Controls the shard routing of the request.\n\nUsing this value to hash the shard and not the id.\n\n\n# version\n\n * Type: integer\n * Dynamic: ❌\n * Required: ✔️\n\n> Sets the version\n\nwhich will cause the get operation to only be performed if a matching version exists and no changes happened on the doc since then.\n\n\n# Outputs\n\n\n# row\n\n * Type: object\n\n\n# Definitions\n\n\n# ElasticsearchConnection\n\n# basicAuth\n\n * Type: BasicAuth\n * Dynamic: ❌\n * Required: ❌\n\n> Basic Auth configuration\n\n# headers\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> List of http headers to be send on every request\n\nMust be an string with key value separated with :, ex: Authorization: Token XYZ\n\n# hosts\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min items: 1\n\n> List of http elasticsearch servers\n\nMust be an uri like https://elasticsearch.com:9200 with scheme and port\n\n# pathPrefix\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Sets the path\'s prefix for every request used by the http client.\n\nFor example, if this is set to /my/path, then any client request will become /my/path/ + endpoint.\nIn essence, every request\'s endpoint is prefixed by this pathPrefix.\nThe path prefix is useful for when Elasticsearch is behind a proxy that provides a base path or a proxy that requires all paths to start with \'/\'; it is not intended for other purposes and it should not be supplied in other scenarios.\n\n# strictDeprecationMode\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n\n> Whether the REST client should return any response containing at leas one warning header as a failure.\n\n# trustAllSsl\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n\n> Trust all SSL CA certificate\n\nUse this if the server is using a self signed ssl certificate.\n\n\n# BasicAuth\n\n# password\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Basic Auth password\n\n# username\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Basic Auth username',normalizedContent:'get\n\ntype: "io.kestra.plugin.elasticsearch.get"\n\n\n> get an elasticsearch document\n\n\n# examples\n\nid: "get"\ntype: "io.kestra.plugin.elasticsearch.get"\nconnection:\n  hosts: \n   - "http://localhost:9200"\nindex: "my_index"\nkey: "my_id"\n\n\n\n# properties\n\n\n# connection\n\n * type: elasticsearchconnection\n * dynamic: ❓\n * required: ✔️\n\n> the connection properties.\n\n\n# index\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the elasticsearch indice\n\n\n# key\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the elasticsearch id\n\n\n# routing\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> controls the shard routing of the request.\n\nusing this value to hash the shard and not the id.\n\n\n# version\n\n * type: integer\n * dynamic: ❌\n * required: ✔️\n\n> sets the version\n\nwhich will cause the get operation to only be performed if a matching version exists and no changes happened on the doc since then.\n\n\n# outputs\n\n\n# row\n\n * type: object\n\n\n# definitions\n\n\n# elasticsearchconnection\n\n# basicauth\n\n * type: basicauth\n * dynamic: ❌\n * required: ❌\n\n> basic auth configuration\n\n# headers\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> list of http headers to be send on every request\n\nmust be an string with key value separated with :, ex: authorization: token xyz\n\n# hosts\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ✔️\n * min items: 1\n\n> list of http elasticsearch servers\n\nmust be an uri like https://elasticsearch.com:9200 with scheme and port\n\n# pathprefix\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> sets the path\'s prefix for every request used by the http client.\n\nfor example, if this is set to /my/path, then any client request will become /my/path/ + endpoint.\nin essence, every request\'s endpoint is prefixed by this pathprefix.\nthe path prefix is useful for when elasticsearch is behind a proxy that provides a base path or a proxy that requires all paths to start with \'/\'; it is not intended for other purposes and it should not be supplied in other scenarios.\n\n# strictdeprecationmode\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n\n> whether the rest client should return any response containing at leas one warning header as a failure.\n\n# trustallssl\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n\n> trust all ssl ca certificate\n\nuse this if the server is using a self signed ssl certificate.\n\n\n# basicauth\n\n# password\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> basic auth password\n\n# username\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> basic auth username',charsets:{}},{title:"Load",frontmatter:{title:"Load",editLink:!1,description:"Bulk load documents in elasticsearch using Kestra Internal Storage file",icon:"PHN2ZyB3aWR0aD0iMjUwMCIgaGVpZ2h0PSIyNTAwIiB2aWV3Qm94PSIwIDAgMjU2IDI1NiIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiBwcmVzZXJ2ZUFzcGVjdFJhdGlvPSJ4TWluWU1pbiBtZWV0Ij48cGF0aCBkPSJNMjU1Ljk2IDEzNC4zOTNjMC0yMS41MjEtMTMuMzczLTQwLjExNy0zMy4yMjMtNDcuNDNhNzUuMjM5IDc1LjIzOSAwIDAgMCAxLjI1My0xMy43OTFjMC0zOS45MDktMzIuMzg2LTcyLjI5NS03Mi4yOTUtNzIuMjk1LTIzLjE5MyAwLTQ0LjkyMyAxMS4wNzQtNTguNTA1IDMwLjA4OC02LjY4Ni01LjIyNC0xNC44MzUtNy45NC0yMy40MDItNy45NC0yMS4xMDQgMC0zOC40NDYgMTcuMTMzLTM4LjQ0NiAzOC40NDYgMCA0LjU5Ny44MzYgOS4xOTQgMi4yOTggMTMuMzczQzEzLjU4MiA4MS43MzkgMCAxMDAuOTYyIDAgMTIyLjI3NGMwIDIxLjUyMiAxMy4zNzMgNDAuMzI3IDMzLjQzMSA0Ny42NC0uODM1IDQuMzg4LTEuMjUzIDguOTg1LTEuMjUzIDEzLjc5IDAgMzkuNyAzMi4zODYgNzIuMDg3IDcyLjA4NiA3Mi4wODcgMjMuNDAyIDAgNDQuOTI0LTExLjI4MyA1OC41MDUtMzAuMDg4IDYuNjg2IDUuMjIzIDE1LjA0NCA4LjE0OSAyMy42MTEgOC4xNDkgMjEuMTA0IDAgMzguNDQ2LTE3LjEzNCAzOC40NDYtMzguNDQ2IDAtNC41OTctLjgzNi05LjE5NC0yLjI5OC0xMy4zNzMgMTkuNjQtNy4xMDQgMzMuNDMxLTI2LjMyNyAzMy40MzEtNDcuNjR6IiBmaWxsPSIjRkZGIi8+PHBhdGggZD0iTTEwMC4wODUgMTEwLjM2NGw1Ny4wNDMgMjYuMTE5IDU3LjY2OS01MC41NjVhNjQuMzEyIDY0LjMxMiAwIDAgMCAxLjI1My0xMi43NDZjMC0zNS41Mi0yOC44MzQtNjQuMzU1LTY0LjM1NS02NC4zNTUtMjEuMzEzIDAtNDEuMTYyIDEwLjQ0Ny01My4wNzIgMjcuOTk4bC05LjYxMiA0OS43MyAxMS4wNzQgMjMuODJ6IiBmaWxsPSIjRjRCRDE5Ii8+PHBhdGggZD0iTTQwLjk1MyAxNzAuNzVjLS44MzUgNC4xNzktMS4yNTMgOC41NjctMS4yNTMgMTIuOTU1IDAgMzUuNTIgMjkuMDQzIDY0LjU2NCA2NC41NjQgNjQuNTY0IDIxLjUyMiAwIDQxLjM3Mi0xMC42NTYgNTMuNDktMjguMjA4bDkuNDAzLTQ5LjcyOS0xMi43NDYtMjQuMjM4LTU3LjI1MS0yNi4xMTgtNTYuMjA3IDUwLjc3NHoiIGZpbGw9IiMzQ0JFQjEiLz48cGF0aCBkPSJNNDAuNTM2IDcxLjkxOGwzOS4wNzMgOS4xOTQgOC43NzUtNDQuNTA2Yy01LjQzMi00LjE3OS0xMS45MS02LjI2OC0xOC44MDUtNi4yNjgtMTYuOTI1IDAtMzAuOTI0IDEzLjc5LTMwLjkyNCAzMC45MjQgMCAzLjU1Mi42MjcgNy4zMTMgMS44OCAxMC42NTZ6IiBmaWxsPSIjRTk0NzhDIi8+PHBhdGggZD0iTTM3LjE5MiA4MS4zMmMtMTcuNTUxIDUuNjQyLTI5LjY3IDIyLjU2Ny0yOS42NyA0MC45NTQgMCAxNy45NyAxMS4wNzQgMzQuMDU5IDI3Ljc5IDQwLjMyN2w1NC45NTMtNDkuNzMtMTAuMDMtMjEuNTItNDMuMDQzLTEwLjAzeiIgZmlsbD0iIzJDNDU4RiIvPjxwYXRoIGQ9Ik0xNjcuNzg0IDIxOS44NTJjNS40MzIgNC4xOCAxMS45MSA2LjQ3OCAxOC41OTYgNi40NzggMTYuOTI1IDAgMzAuOTI0LTEzLjc5IDMwLjkyNC0zMC45MjQgMC0zLjc2MS0uNjI3LTcuMzE0LTEuODgtMTAuNjU3bC0zOS4wNzMtOS4xOTMtOC41NjcgNDQuMjk2eiIgZmlsbD0iIzk1QzYzRCIvPjxwYXRoIGQ9Ik0xNzUuNzI0IDE2NS4zMTdsNDMuMDQzIDEwLjAzYzE3LjU1MS01Ljg1IDI5LjY3LTIyLjU2NiAyOS42Ny00MC45NTQgMC0xNy45Ny0xMS4wNzQtMzMuODQ5LTI3Ljc5LTQwLjMyNmwtNTYuNDE1IDQ5LjMxMSAxMS40OTIgMjEuOTR6IiBmaWxsPSIjMTc2NjU1Ii8+PC9zdmc+",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Load"},{property:"og:description",content:"Bulk load documents in elasticsearch using Kestra Internal Storage file | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-elasticsearch/tasks/io.kestra.plugin.elasticsearch.Load.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Load"},{name:"twitter:description",content:"Bulk load documents in elasticsearch using Kestra Internal Storage file | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-elasticsearch/tasks/io.kestra.plugin.elasticsearch.Load.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-elasticsearch/tasks/io.kestra.plugin.elasticsearch.Load.html",relativePath:"plugins/plugin-elasticsearch/tasks/io.kestra.plugin.elasticsearch.Load.md",key:"v-7a84821f",path:"/plugins/plugin-elasticsearch/tasks/io.kestra.plugin.elasticsearch.Load.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:130},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:295},{level:3,title:"chunk",slug:"chunk",normalizedTitle:"chunk",charIndex:310},{level:3,title:"connection",slug:"connection",normalizedTitle:"connection",charIndex:195},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:246},{level:3,title:"idKey",slug:"idkey",normalizedTitle:"idkey",charIndex:597},{level:3,title:"index",slug:"index",normalizedTitle:"index",charIndex:272},{level:3,title:"opType",slug:"optype",normalizedTitle:"optype",charIndex:763},{level:3,title:"removeIdKey",slug:"removeidkey",normalizedTitle:"removeidkey",charIndex:936},{level:3,title:"routing",slug:"routing",normalizedTitle:"routing",charIndex:1057},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1215},{level:3,title:"size",slug:"size",normalizedTitle:"size",charIndex:371},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:1284},{level:3,title:"ElasticsearchConnection",slug:"elasticsearchconnection",normalizedTitle:"elasticsearchconnection",charIndex:433},{level:3,title:"BasicAuth",slug:"basicauth-2",normalizedTitle:"basicauth",charIndex:1347}],headersStr:"Examples Properties chunk connection from idKey index opType removeIdKey routing Outputs size Definitions ElasticsearchConnection BasicAuth",content:'Load\n\ntype: "io.kestra.plugin.elasticsearch.Load"\n\n\n> Bulk load documents in elasticsearch using Kestra Internal Storage file\n\n\n# Examples\n\nid: "load"\ntype: "io.kestra.plugin.elasticsearch.Load"\nconnection:\n  hosts: \n   - "http://localhost:9200"\nfrom: "{{ inputs.file }}"\nindex: "my_index"\n\n\n\n# Properties\n\n\n# chunk\n\n * Type: integer\n * Dynamic: ✔️\n * Required: ❌\n\n> The size of chunk for every bulk request\n\n\n# connection\n\n * Type: ElasticsearchConnection\n * Dynamic: ❓\n * Required: ✔️\n\n> The connection properties.\n\n\n# from\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The source file\n\n\n# idKey\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Use this key as id.\n\n\n# index\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The elasticsearch indice\n\n\n# opType\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ❌\n\n * Possible Values:\n   \n   * INDEX\n   * CREATE\n   * UPDATE\n   * DELETE\n\n> Sets the type of operation to perform.\n\n\n# removeIdKey\n\n * Type: boolean\n * Dynamic: ✔️\n * Required: ❌\n * Default: true\n\n> Remove idKey from the final document\n\n\n# routing\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> Controls the shard routing of the request.\n\nUsing this value to hash the shard and not the id.\n\n\n# Outputs\n\n\n# size\n\n * Type: integer\n\n> The size of the rows fetch\n\n\n# Definitions\n\n\n# ElasticsearchConnection\n\n# basicAuth\n\n * Type: BasicAuth\n * Dynamic: ❌\n * Required: ❌\n\n> Basic Auth configuration\n\n# headers\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> List of http headers to be send on every request\n\nMust be an string with key value separated with :, ex: Authorization: Token XYZ\n\n# hosts\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min items: 1\n\n> List of http elasticsearch servers\n\nMust be an uri like https://elasticsearch.com:9200 with scheme and port\n\n# pathPrefix\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Sets the path\'s prefix for every request used by the http client.\n\nFor example, if this is set to /my/path, then any client request will become /my/path/ + endpoint.\nIn essence, every request\'s endpoint is prefixed by this pathPrefix.\nThe path prefix is useful for when Elasticsearch is behind a proxy that provides a base path or a proxy that requires all paths to start with \'/\'; it is not intended for other purposes and it should not be supplied in other scenarios.\n\n# strictDeprecationMode\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n\n> Whether the REST client should return any response containing at leas one warning header as a failure.\n\n# trustAllSsl\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n\n> Trust all SSL CA certificate\n\nUse this if the server is using a self signed ssl certificate.\n\n\n# BasicAuth\n\n# password\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Basic Auth password\n\n# username\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Basic Auth username',normalizedContent:'load\n\ntype: "io.kestra.plugin.elasticsearch.load"\n\n\n> bulk load documents in elasticsearch using kestra internal storage file\n\n\n# examples\n\nid: "load"\ntype: "io.kestra.plugin.elasticsearch.load"\nconnection:\n  hosts: \n   - "http://localhost:9200"\nfrom: "{{ inputs.file }}"\nindex: "my_index"\n\n\n\n# properties\n\n\n# chunk\n\n * type: integer\n * dynamic: ✔️\n * required: ❌\n\n> the size of chunk for every bulk request\n\n\n# connection\n\n * type: elasticsearchconnection\n * dynamic: ❓\n * required: ✔️\n\n> the connection properties.\n\n\n# from\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the source file\n\n\n# idkey\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> use this key as id.\n\n\n# index\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the elasticsearch indice\n\n\n# optype\n\n * type: string\n\n * dynamic: ❌\n\n * required: ❌\n\n * possible values:\n   \n   * index\n   * create\n   * update\n   * delete\n\n> sets the type of operation to perform.\n\n\n# removeidkey\n\n * type: boolean\n * dynamic: ✔️\n * required: ❌\n * default: true\n\n> remove idkey from the final document\n\n\n# routing\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> controls the shard routing of the request.\n\nusing this value to hash the shard and not the id.\n\n\n# outputs\n\n\n# size\n\n * type: integer\n\n> the size of the rows fetch\n\n\n# definitions\n\n\n# elasticsearchconnection\n\n# basicauth\n\n * type: basicauth\n * dynamic: ❌\n * required: ❌\n\n> basic auth configuration\n\n# headers\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> list of http headers to be send on every request\n\nmust be an string with key value separated with :, ex: authorization: token xyz\n\n# hosts\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ✔️\n * min items: 1\n\n> list of http elasticsearch servers\n\nmust be an uri like https://elasticsearch.com:9200 with scheme and port\n\n# pathprefix\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> sets the path\'s prefix for every request used by the http client.\n\nfor example, if this is set to /my/path, then any client request will become /my/path/ + endpoint.\nin essence, every request\'s endpoint is prefixed by this pathprefix.\nthe path prefix is useful for when elasticsearch is behind a proxy that provides a base path or a proxy that requires all paths to start with \'/\'; it is not intended for other purposes and it should not be supplied in other scenarios.\n\n# strictdeprecationmode\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n\n> whether the rest client should return any response containing at leas one warning header as a failure.\n\n# trustallssl\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n\n> trust all ssl ca certificate\n\nuse this if the server is using a self signed ssl certificate.\n\n\n# basicauth\n\n# password\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> basic auth password\n\n# username\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> basic auth username',charsets:{}},{title:"Put",frontmatter:{title:"Put",editLink:!1,description:"Put an Elasticsearch document",icon:"PHN2ZyB3aWR0aD0iMjUwMCIgaGVpZ2h0PSIyNTAwIiB2aWV3Qm94PSIwIDAgMjU2IDI1NiIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiBwcmVzZXJ2ZUFzcGVjdFJhdGlvPSJ4TWluWU1pbiBtZWV0Ij48cGF0aCBkPSJNMjU1Ljk2IDEzNC4zOTNjMC0yMS41MjEtMTMuMzczLTQwLjExNy0zMy4yMjMtNDcuNDNhNzUuMjM5IDc1LjIzOSAwIDAgMCAxLjI1My0xMy43OTFjMC0zOS45MDktMzIuMzg2LTcyLjI5NS03Mi4yOTUtNzIuMjk1LTIzLjE5MyAwLTQ0LjkyMyAxMS4wNzQtNTguNTA1IDMwLjA4OC02LjY4Ni01LjIyNC0xNC44MzUtNy45NC0yMy40MDItNy45NC0yMS4xMDQgMC0zOC40NDYgMTcuMTMzLTM4LjQ0NiAzOC40NDYgMCA0LjU5Ny44MzYgOS4xOTQgMi4yOTggMTMuMzczQzEzLjU4MiA4MS43MzkgMCAxMDAuOTYyIDAgMTIyLjI3NGMwIDIxLjUyMiAxMy4zNzMgNDAuMzI3IDMzLjQzMSA0Ny42NC0uODM1IDQuMzg4LTEuMjUzIDguOTg1LTEuMjUzIDEzLjc5IDAgMzkuNyAzMi4zODYgNzIuMDg3IDcyLjA4NiA3Mi4wODcgMjMuNDAyIDAgNDQuOTI0LTExLjI4MyA1OC41MDUtMzAuMDg4IDYuNjg2IDUuMjIzIDE1LjA0NCA4LjE0OSAyMy42MTEgOC4xNDkgMjEuMTA0IDAgMzguNDQ2LTE3LjEzNCAzOC40NDYtMzguNDQ2IDAtNC41OTctLjgzNi05LjE5NC0yLjI5OC0xMy4zNzMgMTkuNjQtNy4xMDQgMzMuNDMxLTI2LjMyNyAzMy40MzEtNDcuNjR6IiBmaWxsPSIjRkZGIi8+PHBhdGggZD0iTTEwMC4wODUgMTEwLjM2NGw1Ny4wNDMgMjYuMTE5IDU3LjY2OS01MC41NjVhNjQuMzEyIDY0LjMxMiAwIDAgMCAxLjI1My0xMi43NDZjMC0zNS41Mi0yOC44MzQtNjQuMzU1LTY0LjM1NS02NC4zNTUtMjEuMzEzIDAtNDEuMTYyIDEwLjQ0Ny01My4wNzIgMjcuOTk4bC05LjYxMiA0OS43MyAxMS4wNzQgMjMuODJ6IiBmaWxsPSIjRjRCRDE5Ii8+PHBhdGggZD0iTTQwLjk1MyAxNzAuNzVjLS44MzUgNC4xNzktMS4yNTMgOC41NjctMS4yNTMgMTIuOTU1IDAgMzUuNTIgMjkuMDQzIDY0LjU2NCA2NC41NjQgNjQuNTY0IDIxLjUyMiAwIDQxLjM3Mi0xMC42NTYgNTMuNDktMjguMjA4bDkuNDAzLTQ5LjcyOS0xMi43NDYtMjQuMjM4LTU3LjI1MS0yNi4xMTgtNTYuMjA3IDUwLjc3NHoiIGZpbGw9IiMzQ0JFQjEiLz48cGF0aCBkPSJNNDAuNTM2IDcxLjkxOGwzOS4wNzMgOS4xOTQgOC43NzUtNDQuNTA2Yy01LjQzMi00LjE3OS0xMS45MS02LjI2OC0xOC44MDUtNi4yNjgtMTYuOTI1IDAtMzAuOTI0IDEzLjc5LTMwLjkyNCAzMC45MjQgMCAzLjU1Mi42MjcgNy4zMTMgMS44OCAxMC42NTZ6IiBmaWxsPSIjRTk0NzhDIi8+PHBhdGggZD0iTTM3LjE5MiA4MS4zMmMtMTcuNTUxIDUuNjQyLTI5LjY3IDIyLjU2Ny0yOS42NyA0MC45NTQgMCAxNy45NyAxMS4wNzQgMzQuMDU5IDI3Ljc5IDQwLjMyN2w1NC45NTMtNDkuNzMtMTAuMDMtMjEuNTItNDMuMDQzLTEwLjAzeiIgZmlsbD0iIzJDNDU4RiIvPjxwYXRoIGQ9Ik0xNjcuNzg0IDIxOS44NTJjNS40MzIgNC4xOCAxMS45MSA2LjQ3OCAxOC41OTYgNi40NzggMTYuOTI1IDAgMzAuOTI0LTEzLjc5IDMwLjkyNC0zMC45MjQgMC0zLjc2MS0uNjI3LTcuMzE0LTEuODgtMTAuNjU3bC0zOS4wNzMtOS4xOTMtOC41NjcgNDQuMjk2eiIgZmlsbD0iIzk1QzYzRCIvPjxwYXRoIGQ9Ik0xNzUuNzI0IDE2NS4zMTdsNDMuMDQzIDEwLjAzYzE3LjU1MS01Ljg1IDI5LjY3LTIyLjU2NiAyOS42Ny00MC45NTQgMC0xNy45Ny0xMS4wNzQtMzMuODQ5LTI3Ljc5LTQwLjMyNmwtNTYuNDE1IDQ5LjMxMSAxMS40OTIgMjEuOTR6IiBmaWxsPSIjMTc2NjU1Ii8+PC9zdmc+",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Put"},{property:"og:description",content:"Put an Elasticsearch document | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-elasticsearch/tasks/io.kestra.plugin.elasticsearch.Put.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Put"},{name:"twitter:description",content:"Put an Elasticsearch document | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-elasticsearch/tasks/io.kestra.plugin.elasticsearch.Put.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-elasticsearch/tasks/io.kestra.plugin.elasticsearch.Put.html",relativePath:"plugins/plugin-elasticsearch/tasks/io.kestra.plugin.elasticsearch.Put.md",key:"v-9bcb74fa",path:"/plugins/plugin-elasticsearch/tasks/io.kestra.plugin.elasticsearch.Put.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:86},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:463},{level:3,title:"connection",slug:"connection",normalizedTitle:"connection",charIndex:173},{level:3,title:"contentType",slug:"contenttype",normalizedTitle:"contenttype",charIndex:587},{level:3,title:"index",slug:"index",normalizedTitle:"index",charIndex:224},{level:3,title:"key",slug:"key",normalizedTitle:"key",charIndex:242},{level:3,title:"opType",slug:"optype",normalizedTitle:"optype",charIndex:929},{level:3,title:"refreshPolicy",slug:"refreshpolicy",normalizedTitle:"refreshpolicy",charIndex:1102},{level:3,title:"routing",slug:"routing",normalizedTitle:"routing",charIndex:1400},{level:3,title:"value",slug:"value",normalizedTitle:"value",charIndex:255},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1714},{level:3,title:"id",slug:"id",normalizedTitle:"id",charIndex:120},{level:3,title:"result",slug:"result",normalizedTitle:"result",charIndex:1785},{level:3,title:"version",slug:"version",normalizedTitle:"version",charIndex:1947},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:2022},{level:3,title:"ElasticsearchConnection",slug:"elasticsearchconnection",normalizedTitle:"elasticsearchconnection",charIndex:499},{level:3,title:"BasicAuth",slug:"basicauth-2",normalizedTitle:"basicauth",charIndex:2085}],headersStr:"Examples Properties connection contentType index key opType refreshPolicy routing value Outputs id result version Definitions ElasticsearchConnection BasicAuth",content:'Put\n\ntype: "io.kestra.plugin.elasticsearch.Put"\n\n\n> Put an Elasticsearch document\n\n\n# Examples\n\n> Put a doc with a Map\n\nid: "put"\ntype: "io.kestra.plugin.elasticsearch.Put"\nconnection:\n  hosts: \n   - "http://localhost:9200"\nindex: "my_index"\nkey: "my_id"\nvalue:\n  name: "John Doe"\n  city: "Paris"\n\n\n> Put a doc from a json string\n\nid: "put"\ntype: "io.kestra.plugin.elasticsearch.Put"\nindex: "my_index"\nkey: "my_id"\nvalue: "{{ outputs.task_id.data | json }}"\n\n\n\n# Properties\n\n\n# connection\n\n * Type: ElasticsearchConnection\n * Dynamic: ❓\n * Required: ✔️\n\n> The connection properties.\n\n\n# contentType\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ❌\n\n * Default: JSON\n\n * Possible Values:\n   \n   * JSON\n   * SMILE\n   * YAML\n   * CBOR\n\n> The content type of value\n\n\n# index\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The elasticsearch indice\n\n\n# key\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The elasticsearch id\n\n\n# opType\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ❌\n\n * Possible Values:\n   \n   * INDEX\n   * CREATE\n   * UPDATE\n   * DELETE\n\n> Sets the type of operation to perform.\n\n\n# refreshPolicy\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ❌\n\n * Default: NONE\n\n * Possible Values:\n   \n   * NONE\n   * IMMEDIATE\n   * WAIT_UNTIL\n\n> Should this request trigger a refresh\n\nan immediate refresh IMMEDIATE, wait for a refresh WAIT_UNTIL, or proceed ignore refreshes entirely NONE.\n\n\n# routing\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> Controls the shard routing of the request.\n\nUsing this value to hash the shard and not the id.\n\n\n# value\n\n * Type: ====\n * Dynamic: ✔️\n * Required: ❌\n\n> The elasticsearch value\n\nCan be a string, in this case, the contentType will be used or a raw Map\n\n\n# Outputs\n\n\n# id\n\n * Type: string\n\n> The id of the document changed.\n\n\n# result\n\n * Type: string\n\n * Possible Values:\n   \n   * CREATED\n   * UPDATED\n   * DELETED\n   * NOT_FOUND\n   * NOOP\n\n> The change that occurred to the document.\n\n\n# version\n\n * Type: integer\n\n> The change that occurred to the document.\n\n\n# Definitions\n\n\n# ElasticsearchConnection\n\n# basicAuth\n\n * Type: BasicAuth\n * Dynamic: ❌\n * Required: ❌\n\n> Basic Auth configuration\n\n# headers\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> List of http headers to be send on every request\n\nMust be an string with key value separated with :, ex: Authorization: Token XYZ\n\n# hosts\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min items: 1\n\n> List of http elasticsearch servers\n\nMust be an uri like https://elasticsearch.com:9200 with scheme and port\n\n# pathPrefix\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Sets the path\'s prefix for every request used by the http client.\n\nFor example, if this is set to /my/path, then any client request will become /my/path/ + endpoint.\nIn essence, every request\'s endpoint is prefixed by this pathPrefix.\nThe path prefix is useful for when Elasticsearch is behind a proxy that provides a base path or a proxy that requires all paths to start with \'/\'; it is not intended for other purposes and it should not be supplied in other scenarios.\n\n# strictDeprecationMode\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n\n> Whether the REST client should return any response containing at leas one warning header as a failure.\n\n# trustAllSsl\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n\n> Trust all SSL CA certificate\n\nUse this if the server is using a self signed ssl certificate.\n\n\n# BasicAuth\n\n# password\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Basic Auth password\n\n# username\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Basic Auth username',normalizedContent:'put\n\ntype: "io.kestra.plugin.elasticsearch.put"\n\n\n> put an elasticsearch document\n\n\n# examples\n\n> put a doc with a map\n\nid: "put"\ntype: "io.kestra.plugin.elasticsearch.put"\nconnection:\n  hosts: \n   - "http://localhost:9200"\nindex: "my_index"\nkey: "my_id"\nvalue:\n  name: "john doe"\n  city: "paris"\n\n\n> put a doc from a json string\n\nid: "put"\ntype: "io.kestra.plugin.elasticsearch.put"\nindex: "my_index"\nkey: "my_id"\nvalue: "{{ outputs.task_id.data | json }}"\n\n\n\n# properties\n\n\n# connection\n\n * type: elasticsearchconnection\n * dynamic: ❓\n * required: ✔️\n\n> the connection properties.\n\n\n# contenttype\n\n * type: string\n\n * dynamic: ❌\n\n * required: ❌\n\n * default: json\n\n * possible values:\n   \n   * json\n   * smile\n   * yaml\n   * cbor\n\n> the content type of value\n\n\n# index\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the elasticsearch indice\n\n\n# key\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the elasticsearch id\n\n\n# optype\n\n * type: string\n\n * dynamic: ❌\n\n * required: ❌\n\n * possible values:\n   \n   * index\n   * create\n   * update\n   * delete\n\n> sets the type of operation to perform.\n\n\n# refreshpolicy\n\n * type: string\n\n * dynamic: ❌\n\n * required: ❌\n\n * default: none\n\n * possible values:\n   \n   * none\n   * immediate\n   * wait_until\n\n> should this request trigger a refresh\n\nan immediate refresh immediate, wait for a refresh wait_until, or proceed ignore refreshes entirely none.\n\n\n# routing\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> controls the shard routing of the request.\n\nusing this value to hash the shard and not the id.\n\n\n# value\n\n * type: ====\n * dynamic: ✔️\n * required: ❌\n\n> the elasticsearch value\n\ncan be a string, in this case, the contenttype will be used or a raw map\n\n\n# outputs\n\n\n# id\n\n * type: string\n\n> the id of the document changed.\n\n\n# result\n\n * type: string\n\n * possible values:\n   \n   * created\n   * updated\n   * deleted\n   * not_found\n   * noop\n\n> the change that occurred to the document.\n\n\n# version\n\n * type: integer\n\n> the change that occurred to the document.\n\n\n# definitions\n\n\n# elasticsearchconnection\n\n# basicauth\n\n * type: basicauth\n * dynamic: ❌\n * required: ❌\n\n> basic auth configuration\n\n# headers\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> list of http headers to be send on every request\n\nmust be an string with key value separated with :, ex: authorization: token xyz\n\n# hosts\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ✔️\n * min items: 1\n\n> list of http elasticsearch servers\n\nmust be an uri like https://elasticsearch.com:9200 with scheme and port\n\n# pathprefix\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> sets the path\'s prefix for every request used by the http client.\n\nfor example, if this is set to /my/path, then any client request will become /my/path/ + endpoint.\nin essence, every request\'s endpoint is prefixed by this pathprefix.\nthe path prefix is useful for when elasticsearch is behind a proxy that provides a base path or a proxy that requires all paths to start with \'/\'; it is not intended for other purposes and it should not be supplied in other scenarios.\n\n# strictdeprecationmode\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n\n> whether the rest client should return any response containing at leas one warning header as a failure.\n\n# trustallssl\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n\n> trust all ssl ca certificate\n\nuse this if the server is using a self signed ssl certificate.\n\n\n# basicauth\n\n# password\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> basic auth password\n\n# username\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> basic auth username',charsets:{cjk:!0}},{title:"Request",frontmatter:{title:"Request",editLink:!1,description:"Send a generic elasticsearch request",icon:"PHN2ZyB3aWR0aD0iMjUwMCIgaGVpZ2h0PSIyNTAwIiB2aWV3Qm94PSIwIDAgMjU2IDI1NiIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiBwcmVzZXJ2ZUFzcGVjdFJhdGlvPSJ4TWluWU1pbiBtZWV0Ij48cGF0aCBkPSJNMjU1Ljk2IDEzNC4zOTNjMC0yMS41MjEtMTMuMzczLTQwLjExNy0zMy4yMjMtNDcuNDNhNzUuMjM5IDc1LjIzOSAwIDAgMCAxLjI1My0xMy43OTFjMC0zOS45MDktMzIuMzg2LTcyLjI5NS03Mi4yOTUtNzIuMjk1LTIzLjE5MyAwLTQ0LjkyMyAxMS4wNzQtNTguNTA1IDMwLjA4OC02LjY4Ni01LjIyNC0xNC44MzUtNy45NC0yMy40MDItNy45NC0yMS4xMDQgMC0zOC40NDYgMTcuMTMzLTM4LjQ0NiAzOC40NDYgMCA0LjU5Ny44MzYgOS4xOTQgMi4yOTggMTMuMzczQzEzLjU4MiA4MS43MzkgMCAxMDAuOTYyIDAgMTIyLjI3NGMwIDIxLjUyMiAxMy4zNzMgNDAuMzI3IDMzLjQzMSA0Ny42NC0uODM1IDQuMzg4LTEuMjUzIDguOTg1LTEuMjUzIDEzLjc5IDAgMzkuNyAzMi4zODYgNzIuMDg3IDcyLjA4NiA3Mi4wODcgMjMuNDAyIDAgNDQuOTI0LTExLjI4MyA1OC41MDUtMzAuMDg4IDYuNjg2IDUuMjIzIDE1LjA0NCA4LjE0OSAyMy42MTEgOC4xNDkgMjEuMTA0IDAgMzguNDQ2LTE3LjEzNCAzOC40NDYtMzguNDQ2IDAtNC41OTctLjgzNi05LjE5NC0yLjI5OC0xMy4zNzMgMTkuNjQtNy4xMDQgMzMuNDMxLTI2LjMyNyAzMy40MzEtNDcuNjR6IiBmaWxsPSIjRkZGIi8+PHBhdGggZD0iTTEwMC4wODUgMTEwLjM2NGw1Ny4wNDMgMjYuMTE5IDU3LjY2OS01MC41NjVhNjQuMzEyIDY0LjMxMiAwIDAgMCAxLjI1My0xMi43NDZjMC0zNS41Mi0yOC44MzQtNjQuMzU1LTY0LjM1NS02NC4zNTUtMjEuMzEzIDAtNDEuMTYyIDEwLjQ0Ny01My4wNzIgMjcuOTk4bC05LjYxMiA0OS43MyAxMS4wNzQgMjMuODJ6IiBmaWxsPSIjRjRCRDE5Ii8+PHBhdGggZD0iTTQwLjk1MyAxNzAuNzVjLS44MzUgNC4xNzktMS4yNTMgOC41NjctMS4yNTMgMTIuOTU1IDAgMzUuNTIgMjkuMDQzIDY0LjU2NCA2NC41NjQgNjQuNTY0IDIxLjUyMiAwIDQxLjM3Mi0xMC42NTYgNTMuNDktMjguMjA4bDkuNDAzLTQ5LjcyOS0xMi43NDYtMjQuMjM4LTU3LjI1MS0yNi4xMTgtNTYuMjA3IDUwLjc3NHoiIGZpbGw9IiMzQ0JFQjEiLz48cGF0aCBkPSJNNDAuNTM2IDcxLjkxOGwzOS4wNzMgOS4xOTQgOC43NzUtNDQuNTA2Yy01LjQzMi00LjE3OS0xMS45MS02LjI2OC0xOC44MDUtNi4yNjgtMTYuOTI1IDAtMzAuOTI0IDEzLjc5LTMwLjkyNCAzMC45MjQgMCAzLjU1Mi42MjcgNy4zMTMgMS44OCAxMC42NTZ6IiBmaWxsPSIjRTk0NzhDIi8+PHBhdGggZD0iTTM3LjE5MiA4MS4zMmMtMTcuNTUxIDUuNjQyLTI5LjY3IDIyLjU2Ny0yOS42NyA0MC45NTQgMCAxNy45NyAxMS4wNzQgMzQuMDU5IDI3Ljc5IDQwLjMyN2w1NC45NTMtNDkuNzMtMTAuMDMtMjEuNTItNDMuMDQzLTEwLjAzeiIgZmlsbD0iIzJDNDU4RiIvPjxwYXRoIGQ9Ik0xNjcuNzg0IDIxOS44NTJjNS40MzIgNC4xOCAxMS45MSA2LjQ3OCAxOC41OTYgNi40NzggMTYuOTI1IDAgMzAuOTI0LTEzLjc5IDMwLjkyNC0zMC45MjQgMC0zLjc2MS0uNjI3LTcuMzE0LTEuODgtMTAuNjU3bC0zOS4wNzMtOS4xOTMtOC41NjcgNDQuMjk2eiIgZmlsbD0iIzk1QzYzRCIvPjxwYXRoIGQ9Ik0xNzUuNzI0IDE2NS4zMTdsNDMuMDQzIDEwLjAzYzE3LjU1MS01Ljg1IDI5LjY3LTIyLjU2NiAyOS42Ny00MC45NTQgMC0xNy45Ny0xMS4wNzQtMzMuODQ5LTI3Ljc5LTQwLjMyNmwtNTYuNDE1IDQ5LjMxMSAxMS40OTIgMjEuOTR6IiBmaWxsPSIjMTc2NjU1Ii8+PC9zdmc+",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Request"},{property:"og:description",content:"Send a generic elasticsearch request | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-elasticsearch/tasks/io.kestra.plugin.elasticsearch.Request.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Request"},{name:"twitter:description",content:"Send a generic elasticsearch request | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-elasticsearch/tasks/io.kestra.plugin.elasticsearch.Request.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-elasticsearch/tasks/io.kestra.plugin.elasticsearch.Request.html",relativePath:"plugins/plugin-elasticsearch/tasks/io.kestra.plugin.elasticsearch.Request.md",key:"v-8c4eabfa",path:"/plugins/plugin-elasticsearch/tasks/io.kestra.plugin.elasticsearch.Request.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:101},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:295},{level:3,title:"body",slug:"body",normalizedTitle:"body",charIndex:269},{level:3,title:"connection",slug:"connection",normalizedTitle:"connection",charIndex:172},{level:3,title:"endpoint",slug:"endpoint",normalizedTitle:"endpoint",charIndex:238},{level:3,title:"method",slug:"method",normalizedTitle:"method",charIndex:223},{level:3,title:"parameters",slug:"parameters",normalizedTitle:"parameters",charIndex:918},{level:3,title:"routing",slug:"routing",normalizedTitle:"routing",charIndex:1027},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1185},{level:3,title:"response",slug:"response",normalizedTitle:"response",charIndex:1197},{level:3,title:"status",slug:"status",normalizedTitle:"status",charIndex:1225},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:1254},{level:3,title:"ElasticsearchConnection",slug:"elasticsearchconnection",normalizedTitle:"elasticsearchconnection",charIndex:466},{level:3,title:"BasicAuth",slug:"basicauth-2",normalizedTitle:"basicauth",charIndex:1317}],headersStr:"Examples Properties body connection endpoint method parameters routing Outputs response status Definitions ElasticsearchConnection BasicAuth",content:'Request\n\ntype: "io.kestra.plugin.elasticsearch.Request"\n\n\n> Send a generic elasticsearch request\n\n\n# Examples\n\nid: "request"\ntype: "io.kestra.plugin.elasticsearch.Request"\nconnection:\n  hosts: \n   - "http://localhost:9200"\nmethod: "POST"\nendpoint: "my_index/_doc/john"\nbody:\n  name: "john"\n\n\n\n# Properties\n\n\n# body\n\n * Type: ====\n * Dynamic: ✔️\n * Required: ❌\n\n> The full body\n\nCan be a json string or raw Map that will be converted to json\n\n\n# connection\n\n * Type: ElasticsearchConnection\n * Dynamic: ❓\n * Required: ✔️\n\n> The connection properties.\n\n\n# endpoint\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The path of the request (without scheme, host, port, or prefix)\n\n\n# method\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ❌\n\n * Default: GET\n\n * Possible Values:\n   \n   * OPTIONS\n   * GET\n   * HEAD\n   * POST\n   * PUT\n   * DELETE\n   * TRACE\n   * CONNECT\n   * PATCH\n   * CUSTOM\n\n> The http method to use\n\n\n# parameters\n\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Query string parameters.\n\n\n# routing\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> Controls the shard routing of the request.\n\nUsing this value to hash the shard and not the id.\n\n\n# Outputs\n\n\n# response\n\n * Type: ====\n\n\n# status\n\n * Type: integer\n\n\n# Definitions\n\n\n# ElasticsearchConnection\n\n# basicAuth\n\n * Type: BasicAuth\n * Dynamic: ❌\n * Required: ❌\n\n> Basic Auth configuration\n\n# headers\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> List of http headers to be send on every request\n\nMust be an string with key value separated with :, ex: Authorization: Token XYZ\n\n# hosts\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min items: 1\n\n> List of http elasticsearch servers\n\nMust be an uri like https://elasticsearch.com:9200 with scheme and port\n\n# pathPrefix\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Sets the path\'s prefix for every request used by the http client.\n\nFor example, if this is set to /my/path, then any client request will become /my/path/ + endpoint.\nIn essence, every request\'s endpoint is prefixed by this pathPrefix.\nThe path prefix is useful for when Elasticsearch is behind a proxy that provides a base path or a proxy that requires all paths to start with \'/\'; it is not intended for other purposes and it should not be supplied in other scenarios.\n\n# strictDeprecationMode\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n\n> Whether the REST client should return any response containing at leas one warning header as a failure.\n\n# trustAllSsl\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n\n> Trust all SSL CA certificate\n\nUse this if the server is using a self signed ssl certificate.\n\n\n# BasicAuth\n\n# password\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Basic Auth password\n\n# username\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Basic Auth username',normalizedContent:'request\n\ntype: "io.kestra.plugin.elasticsearch.request"\n\n\n> send a generic elasticsearch request\n\n\n# examples\n\nid: "request"\ntype: "io.kestra.plugin.elasticsearch.request"\nconnection:\n  hosts: \n   - "http://localhost:9200"\nmethod: "post"\nendpoint: "my_index/_doc/john"\nbody:\n  name: "john"\n\n\n\n# properties\n\n\n# body\n\n * type: ====\n * dynamic: ✔️\n * required: ❌\n\n> the full body\n\ncan be a json string or raw map that will be converted to json\n\n\n# connection\n\n * type: elasticsearchconnection\n * dynamic: ❓\n * required: ✔️\n\n> the connection properties.\n\n\n# endpoint\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the path of the request (without scheme, host, port, or prefix)\n\n\n# method\n\n * type: string\n\n * dynamic: ❌\n\n * required: ❌\n\n * default: get\n\n * possible values:\n   \n   * options\n   * get\n   * head\n   * post\n   * put\n   * delete\n   * trace\n   * connect\n   * patch\n   * custom\n\n> the http method to use\n\n\n# parameters\n\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> query string parameters.\n\n\n# routing\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> controls the shard routing of the request.\n\nusing this value to hash the shard and not the id.\n\n\n# outputs\n\n\n# response\n\n * type: ====\n\n\n# status\n\n * type: integer\n\n\n# definitions\n\n\n# elasticsearchconnection\n\n# basicauth\n\n * type: basicauth\n * dynamic: ❌\n * required: ❌\n\n> basic auth configuration\n\n# headers\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> list of http headers to be send on every request\n\nmust be an string with key value separated with :, ex: authorization: token xyz\n\n# hosts\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ✔️\n * min items: 1\n\n> list of http elasticsearch servers\n\nmust be an uri like https://elasticsearch.com:9200 with scheme and port\n\n# pathprefix\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> sets the path\'s prefix for every request used by the http client.\n\nfor example, if this is set to /my/path, then any client request will become /my/path/ + endpoint.\nin essence, every request\'s endpoint is prefixed by this pathprefix.\nthe path prefix is useful for when elasticsearch is behind a proxy that provides a base path or a proxy that requires all paths to start with \'/\'; it is not intended for other purposes and it should not be supplied in other scenarios.\n\n# strictdeprecationmode\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n\n> whether the rest client should return any response containing at leas one warning header as a failure.\n\n# trustallssl\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n\n> trust all ssl ca certificate\n\nuse this if the server is using a self signed ssl certificate.\n\n\n# basicauth\n\n# password\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> basic auth password\n\n# username\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> basic auth username',charsets:{}},{title:"Scroll",frontmatter:{title:"Scroll",editLink:!1,description:"Scroll over search request",icon:"PHN2ZyB3aWR0aD0iMjUwMCIgaGVpZ2h0PSIyNTAwIiB2aWV3Qm94PSIwIDAgMjU2IDI1NiIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiBwcmVzZXJ2ZUFzcGVjdFJhdGlvPSJ4TWluWU1pbiBtZWV0Ij48cGF0aCBkPSJNMjU1Ljk2IDEzNC4zOTNjMC0yMS41MjEtMTMuMzczLTQwLjExNy0zMy4yMjMtNDcuNDNhNzUuMjM5IDc1LjIzOSAwIDAgMCAxLjI1My0xMy43OTFjMC0zOS45MDktMzIuMzg2LTcyLjI5NS03Mi4yOTUtNzIuMjk1LTIzLjE5MyAwLTQ0LjkyMyAxMS4wNzQtNTguNTA1IDMwLjA4OC02LjY4Ni01LjIyNC0xNC44MzUtNy45NC0yMy40MDItNy45NC0yMS4xMDQgMC0zOC40NDYgMTcuMTMzLTM4LjQ0NiAzOC40NDYgMCA0LjU5Ny44MzYgOS4xOTQgMi4yOTggMTMuMzczQzEzLjU4MiA4MS43MzkgMCAxMDAuOTYyIDAgMTIyLjI3NGMwIDIxLjUyMiAxMy4zNzMgNDAuMzI3IDMzLjQzMSA0Ny42NC0uODM1IDQuMzg4LTEuMjUzIDguOTg1LTEuMjUzIDEzLjc5IDAgMzkuNyAzMi4zODYgNzIuMDg3IDcyLjA4NiA3Mi4wODcgMjMuNDAyIDAgNDQuOTI0LTExLjI4MyA1OC41MDUtMzAuMDg4IDYuNjg2IDUuMjIzIDE1LjA0NCA4LjE0OSAyMy42MTEgOC4xNDkgMjEuMTA0IDAgMzguNDQ2LTE3LjEzNCAzOC40NDYtMzguNDQ2IDAtNC41OTctLjgzNi05LjE5NC0yLjI5OC0xMy4zNzMgMTkuNjQtNy4xMDQgMzMuNDMxLTI2LjMyNyAzMy40MzEtNDcuNjR6IiBmaWxsPSIjRkZGIi8+PHBhdGggZD0iTTEwMC4wODUgMTEwLjM2NGw1Ny4wNDMgMjYuMTE5IDU3LjY2OS01MC41NjVhNjQuMzEyIDY0LjMxMiAwIDAgMCAxLjI1My0xMi43NDZjMC0zNS41Mi0yOC44MzQtNjQuMzU1LTY0LjM1NS02NC4zNTUtMjEuMzEzIDAtNDEuMTYyIDEwLjQ0Ny01My4wNzIgMjcuOTk4bC05LjYxMiA0OS43MyAxMS4wNzQgMjMuODJ6IiBmaWxsPSIjRjRCRDE5Ii8+PHBhdGggZD0iTTQwLjk1MyAxNzAuNzVjLS44MzUgNC4xNzktMS4yNTMgOC41NjctMS4yNTMgMTIuOTU1IDAgMzUuNTIgMjkuMDQzIDY0LjU2NCA2NC41NjQgNjQuNTY0IDIxLjUyMiAwIDQxLjM3Mi0xMC42NTYgNTMuNDktMjguMjA4bDkuNDAzLTQ5LjcyOS0xMi43NDYtMjQuMjM4LTU3LjI1MS0yNi4xMTgtNTYuMjA3IDUwLjc3NHoiIGZpbGw9IiMzQ0JFQjEiLz48cGF0aCBkPSJNNDAuNTM2IDcxLjkxOGwzOS4wNzMgOS4xOTQgOC43NzUtNDQuNTA2Yy01LjQzMi00LjE3OS0xMS45MS02LjI2OC0xOC44MDUtNi4yNjgtMTYuOTI1IDAtMzAuOTI0IDEzLjc5LTMwLjkyNCAzMC45MjQgMCAzLjU1Mi42MjcgNy4zMTMgMS44OCAxMC42NTZ6IiBmaWxsPSIjRTk0NzhDIi8+PHBhdGggZD0iTTM3LjE5MiA4MS4zMmMtMTcuNTUxIDUuNjQyLTI5LjY3IDIyLjU2Ny0yOS42NyA0MC45NTQgMCAxNy45NyAxMS4wNzQgMzQuMDU5IDI3Ljc5IDQwLjMyN2w1NC45NTMtNDkuNzMtMTAuMDMtMjEuNTItNDMuMDQzLTEwLjAzeiIgZmlsbD0iIzJDNDU4RiIvPjxwYXRoIGQ9Ik0xNjcuNzg0IDIxOS44NTJjNS40MzIgNC4xOCAxMS45MSA2LjQ3OCAxOC41OTYgNi40NzggMTYuOTI1IDAgMzAuOTI0LTEzLjc5IDMwLjkyNC0zMC45MjQgMC0zLjc2MS0uNjI3LTcuMzE0LTEuODgtMTAuNjU3bC0zOS4wNzMtOS4xOTMtOC41NjcgNDQuMjk2eiIgZmlsbD0iIzk1QzYzRCIvPjxwYXRoIGQ9Ik0xNzUuNzI0IDE2NS4zMTdsNDMuMDQzIDEwLjAzYzE3LjU1MS01Ljg1IDI5LjY3LTIyLjU2NiAyOS42Ny00MC45NTQgMC0xNy45Ny0xMS4wNzQtMzMuODQ5LTI3Ljc5LTQwLjMyNmwtNTYuNDE1IDQ5LjMxMSAxMS40OTIgMjEuOTR6IiBmaWxsPSIjMTc2NjU1Ii8+PC9zdmc+",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Scroll"},{property:"og:description",content:"Scroll over search request | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-elasticsearch/tasks/io.kestra.plugin.elasticsearch.Scroll.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Scroll"},{name:"twitter:description",content:"Scroll over search request | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-elasticsearch/tasks/io.kestra.plugin.elasticsearch.Scroll.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-elasticsearch/tasks/io.kestra.plugin.elasticsearch.Scroll.html",relativePath:"plugins/plugin-elasticsearch/tasks/io.kestra.plugin.elasticsearch.Scroll.md",key:"v-326d1311",path:"/plugins/plugin-elasticsearch/tasks/io.kestra.plugin.elasticsearch.Scroll.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:175},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:386},{level:3,title:"connection",slug:"connection",normalizedTitle:"connection",charIndex:244},{level:3,title:"contentType",slug:"contenttype",normalizedTitle:"contenttype",charIndex:510},{level:3,title:"indexes",slug:"indexes",normalizedTitle:"indexes",charIndex:295},{level:3,title:"request",slug:"request",normalizedTitle:"request",charIndex:77},{level:3,title:"routing",slug:"routing",normalizedTitle:"routing",charIndex:962},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1120},{level:3,title:"size",slug:"size",normalizedTitle:"size",charIndex:1132},{level:3,title:"uri",slug:"uri",normalizedTitle:"uri",charIndex:1189},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:1241},{level:3,title:"ElasticsearchConnection",slug:"elasticsearchconnection",normalizedTitle:"elasticsearchconnection",charIndex:422},{level:3,title:"BasicAuth",slug:"basicauth-2",normalizedTitle:"basicauth",charIndex:1304}],headersStr:"Examples Properties connection contentType indexes request routing Outputs size uri Definitions ElasticsearchConnection BasicAuth",content:'Scroll\n\ntype: "io.kestra.plugin.elasticsearch.Scroll"\n\n\n> Scroll over search request\n\nGet all documents from a search request and store it as Kestra Internal Storage file\n\n\n# Examples\n\nid: "scroll"\ntype: "io.kestra.plugin.elasticsearch.Scroll"\nconnection:\n  hosts: \n   - "http://localhost:9200"\nindexes:\n - "my_index"\nrequest:\n  query: \n    term:\n      name:\n        value: \'john\'\n\n\n\n# Properties\n\n\n# connection\n\n * Type: ElasticsearchConnection\n * Dynamic: ❓\n * Required: ✔️\n\n> The connection properties.\n\n\n# contentType\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ❌\n\n * Possible Values:\n   \n   * JSON\n   * SMILE\n   * YAML\n   * CBOR\n\n> The content type of value\n\n\n# indexes\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The elasticsearch indices\n\nDefault to all indices\n\n\n# request\n\n * Type: ====\n * Dynamic: ✔️\n * Required: ❌\n\n> The elasticsearch value\n\nCan be a json string, in this case, the contentType will be used or a raw Map\n\n\n# routing\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> Controls the shard routing of the request.\n\nUsing this value to hash the shard and not the id.\n\n\n# Outputs\n\n\n# size\n\n * Type: integer\n\n> The size of the rows fetch\n\n\n# uri\n\n * Type: string\n\n> The uri of store result\n\n\n# Definitions\n\n\n# ElasticsearchConnection\n\n# basicAuth\n\n * Type: BasicAuth\n * Dynamic: ❌\n * Required: ❌\n\n> Basic Auth configuration\n\n# headers\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> List of http headers to be send on every request\n\nMust be an string with key value separated with :, ex: Authorization: Token XYZ\n\n# hosts\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min items: 1\n\n> List of http elasticsearch servers\n\nMust be an uri like https://elasticsearch.com:9200 with scheme and port\n\n# pathPrefix\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Sets the path\'s prefix for every request used by the http client.\n\nFor example, if this is set to /my/path, then any client request will become /my/path/ + endpoint.\nIn essence, every request\'s endpoint is prefixed by this pathPrefix.\nThe path prefix is useful for when Elasticsearch is behind a proxy that provides a base path or a proxy that requires all paths to start with \'/\'; it is not intended for other purposes and it should not be supplied in other scenarios.\n\n# strictDeprecationMode\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n\n> Whether the REST client should return any response containing at leas one warning header as a failure.\n\n# trustAllSsl\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n\n> Trust all SSL CA certificate\n\nUse this if the server is using a self signed ssl certificate.\n\n\n# BasicAuth\n\n# password\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Basic Auth password\n\n# username\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Basic Auth username',normalizedContent:'scroll\n\ntype: "io.kestra.plugin.elasticsearch.scroll"\n\n\n> scroll over search request\n\nget all documents from a search request and store it as kestra internal storage file\n\n\n# examples\n\nid: "scroll"\ntype: "io.kestra.plugin.elasticsearch.scroll"\nconnection:\n  hosts: \n   - "http://localhost:9200"\nindexes:\n - "my_index"\nrequest:\n  query: \n    term:\n      name:\n        value: \'john\'\n\n\n\n# properties\n\n\n# connection\n\n * type: elasticsearchconnection\n * dynamic: ❓\n * required: ✔️\n\n> the connection properties.\n\n\n# contenttype\n\n * type: string\n\n * dynamic: ❌\n\n * required: ❌\n\n * possible values:\n   \n   * json\n   * smile\n   * yaml\n   * cbor\n\n> the content type of value\n\n\n# indexes\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> the elasticsearch indices\n\ndefault to all indices\n\n\n# request\n\n * type: ====\n * dynamic: ✔️\n * required: ❌\n\n> the elasticsearch value\n\ncan be a json string, in this case, the contenttype will be used or a raw map\n\n\n# routing\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> controls the shard routing of the request.\n\nusing this value to hash the shard and not the id.\n\n\n# outputs\n\n\n# size\n\n * type: integer\n\n> the size of the rows fetch\n\n\n# uri\n\n * type: string\n\n> the uri of store result\n\n\n# definitions\n\n\n# elasticsearchconnection\n\n# basicauth\n\n * type: basicauth\n * dynamic: ❌\n * required: ❌\n\n> basic auth configuration\n\n# headers\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> list of http headers to be send on every request\n\nmust be an string with key value separated with :, ex: authorization: token xyz\n\n# hosts\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ✔️\n * min items: 1\n\n> list of http elasticsearch servers\n\nmust be an uri like https://elasticsearch.com:9200 with scheme and port\n\n# pathprefix\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> sets the path\'s prefix for every request used by the http client.\n\nfor example, if this is set to /my/path, then any client request will become /my/path/ + endpoint.\nin essence, every request\'s endpoint is prefixed by this pathprefix.\nthe path prefix is useful for when elasticsearch is behind a proxy that provides a base path or a proxy that requires all paths to start with \'/\'; it is not intended for other purposes and it should not be supplied in other scenarios.\n\n# strictdeprecationmode\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n\n> whether the rest client should return any response containing at leas one warning header as a failure.\n\n# trustallssl\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n\n> trust all ssl ca certificate\n\nuse this if the server is using a self signed ssl certificate.\n\n\n# basicauth\n\n# password\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> basic auth password\n\n# username\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> basic auth username',charsets:{}},{title:"Search",frontmatter:{title:"Search",editLink:!1,description:"Send a search request",icon:"PHN2ZyB3aWR0aD0iMjUwMCIgaGVpZ2h0PSIyNTAwIiB2aWV3Qm94PSIwIDAgMjU2IDI1NiIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiBwcmVzZXJ2ZUFzcGVjdFJhdGlvPSJ4TWluWU1pbiBtZWV0Ij48cGF0aCBkPSJNMjU1Ljk2IDEzNC4zOTNjMC0yMS41MjEtMTMuMzczLTQwLjExNy0zMy4yMjMtNDcuNDNhNzUuMjM5IDc1LjIzOSAwIDAgMCAxLjI1My0xMy43OTFjMC0zOS45MDktMzIuMzg2LTcyLjI5NS03Mi4yOTUtNzIuMjk1LTIzLjE5MyAwLTQ0LjkyMyAxMS4wNzQtNTguNTA1IDMwLjA4OC02LjY4Ni01LjIyNC0xNC44MzUtNy45NC0yMy40MDItNy45NC0yMS4xMDQgMC0zOC40NDYgMTcuMTMzLTM4LjQ0NiAzOC40NDYgMCA0LjU5Ny44MzYgOS4xOTQgMi4yOTggMTMuMzczQzEzLjU4MiA4MS43MzkgMCAxMDAuOTYyIDAgMTIyLjI3NGMwIDIxLjUyMiAxMy4zNzMgNDAuMzI3IDMzLjQzMSA0Ny42NC0uODM1IDQuMzg4LTEuMjUzIDguOTg1LTEuMjUzIDEzLjc5IDAgMzkuNyAzMi4zODYgNzIuMDg3IDcyLjA4NiA3Mi4wODcgMjMuNDAyIDAgNDQuOTI0LTExLjI4MyA1OC41MDUtMzAuMDg4IDYuNjg2IDUuMjIzIDE1LjA0NCA4LjE0OSAyMy42MTEgOC4xNDkgMjEuMTA0IDAgMzguNDQ2LTE3LjEzNCAzOC40NDYtMzguNDQ2IDAtNC41OTctLjgzNi05LjE5NC0yLjI5OC0xMy4zNzMgMTkuNjQtNy4xMDQgMzMuNDMxLTI2LjMyNyAzMy40MzEtNDcuNjR6IiBmaWxsPSIjRkZGIi8+PHBhdGggZD0iTTEwMC4wODUgMTEwLjM2NGw1Ny4wNDMgMjYuMTE5IDU3LjY2OS01MC41NjVhNjQuMzEyIDY0LjMxMiAwIDAgMCAxLjI1My0xMi43NDZjMC0zNS41Mi0yOC44MzQtNjQuMzU1LTY0LjM1NS02NC4zNTUtMjEuMzEzIDAtNDEuMTYyIDEwLjQ0Ny01My4wNzIgMjcuOTk4bC05LjYxMiA0OS43MyAxMS4wNzQgMjMuODJ6IiBmaWxsPSIjRjRCRDE5Ii8+PHBhdGggZD0iTTQwLjk1MyAxNzAuNzVjLS44MzUgNC4xNzktMS4yNTMgOC41NjctMS4yNTMgMTIuOTU1IDAgMzUuNTIgMjkuMDQzIDY0LjU2NCA2NC41NjQgNjQuNTY0IDIxLjUyMiAwIDQxLjM3Mi0xMC42NTYgNTMuNDktMjguMjA4bDkuNDAzLTQ5LjcyOS0xMi43NDYtMjQuMjM4LTU3LjI1MS0yNi4xMTgtNTYuMjA3IDUwLjc3NHoiIGZpbGw9IiMzQ0JFQjEiLz48cGF0aCBkPSJNNDAuNTM2IDcxLjkxOGwzOS4wNzMgOS4xOTQgOC43NzUtNDQuNTA2Yy01LjQzMi00LjE3OS0xMS45MS02LjI2OC0xOC44MDUtNi4yNjgtMTYuOTI1IDAtMzAuOTI0IDEzLjc5LTMwLjkyNCAzMC45MjQgMCAzLjU1Mi42MjcgNy4zMTMgMS44OCAxMC42NTZ6IiBmaWxsPSIjRTk0NzhDIi8+PHBhdGggZD0iTTM3LjE5MiA4MS4zMmMtMTcuNTUxIDUuNjQyLTI5LjY3IDIyLjU2Ny0yOS42NyA0MC45NTQgMCAxNy45NyAxMS4wNzQgMzQuMDU5IDI3Ljc5IDQwLjMyN2w1NC45NTMtNDkuNzMtMTAuMDMtMjEuNTItNDMuMDQzLTEwLjAzeiIgZmlsbD0iIzJDNDU4RiIvPjxwYXRoIGQ9Ik0xNjcuNzg0IDIxOS44NTJjNS40MzIgNC4xOCAxMS45MSA2LjQ3OCAxOC41OTYgNi40NzggMTYuOTI1IDAgMzAuOTI0LTEzLjc5IDMwLjkyNC0zMC45MjQgMC0zLjc2MS0uNjI3LTcuMzE0LTEuODgtMTAuNjU3bC0zOS4wNzMtOS4xOTMtOC41NjcgNDQuMjk2eiIgZmlsbD0iIzk1QzYzRCIvPjxwYXRoIGQ9Ik0xNzUuNzI0IDE2NS4zMTdsNDMuMDQzIDEwLjAzYzE3LjU1MS01Ljg1IDI5LjY3LTIyLjU2NiAyOS42Ny00MC45NTQgMC0xNy45Ny0xMS4wNzQtMzMuODQ5LTI3Ljc5LTQwLjMyNmwtNTYuNDE1IDQ5LjMxMSAxMS40OTIgMjEuOTR6IiBmaWxsPSIjMTc2NjU1Ii8+PC9zdmc+",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Search"},{property:"og:description",content:"Send a search request | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-elasticsearch/tasks/io.kestra.plugin.elasticsearch.Search.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Search"},{name:"twitter:description",content:"Send a search request | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-elasticsearch/tasks/io.kestra.plugin.elasticsearch.Search.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-elasticsearch/tasks/io.kestra.plugin.elasticsearch.Search.html",relativePath:"plugins/plugin-elasticsearch/tasks/io.kestra.plugin.elasticsearch.Search.md",key:"v-2599af9b",path:"/plugins/plugin-elasticsearch/tasks/io.kestra.plugin.elasticsearch.Search.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:149},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:360},{level:3,title:"connection",slug:"connection",normalizedTitle:"connection",charIndex:218},{level:3,title:"contentType",slug:"contenttype",normalizedTitle:"contenttype",charIndex:484},{level:3,title:"indexes",slug:"indexes",normalizedTitle:"indexes",charIndex:269},{level:3,title:"request",slug:"request",normalizedTitle:"request",charIndex:72},{level:3,title:"routing",slug:"routing",normalizedTitle:"routing",charIndex:936},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1094},{level:3,title:"rows",slug:"rows",normalizedTitle:"rows",charIndex:1106},{level:3,title:"size",slug:"size",normalizedTitle:"size",charIndex:1177},{level:3,title:"total",slug:"total",normalizedTitle:"total",charIndex:1234},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:1312},{level:3,title:"ElasticsearchConnection",slug:"elasticsearchconnection",normalizedTitle:"elasticsearchconnection",charIndex:396},{level:3,title:"BasicAuth",slug:"basicauth-2",normalizedTitle:"basicauth",charIndex:1375}],headersStr:"Examples Properties connection contentType indexes request routing Outputs rows size total Definitions ElasticsearchConnection BasicAuth",content:'Search\n\ntype: "io.kestra.plugin.elasticsearch.Search"\n\n\n> Send a search request\n\nGet all documents from a search request and store it as outputs\n\n\n# Examples\n\nid: "search"\ntype: "io.kestra.plugin.elasticsearch.Search"\nconnection:\n  hosts: \n   - "http://localhost:9200"\nindexes:\n - "my_index"\nrequest:\n  query: \n    term:\n      name:\n        value: \'john\'\n\n\n\n# Properties\n\n\n# connection\n\n * Type: ElasticsearchConnection\n * Dynamic: ❓\n * Required: ✔️\n\n> The connection properties.\n\n\n# contentType\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ❌\n\n * Possible Values:\n   \n   * JSON\n   * SMILE\n   * YAML\n   * CBOR\n\n> The content type of value\n\n\n# indexes\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The elasticsearch indices\n\nDefault to all indices\n\n\n# request\n\n * Type: ====\n * Dynamic: ✔️\n * Required: ❌\n\n> The elasticsearch value\n\nCan be a json string, in this case, the contentType will be used or a raw Map\n\n\n# routing\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> Controls the shard routing of the request.\n\nUsing this value to hash the shard and not the id.\n\n\n# Outputs\n\n\n# rows\n\n * Type: array\n * SubType: object\n\n> The search result fetch\n\n\n# size\n\n * Type: integer\n\n> The size of the rows fetch\n\n\n# total\n\n * Type: integer\n\n> The total of the rows fetch without pagination\n\n\n# Definitions\n\n\n# ElasticsearchConnection\n\n# basicAuth\n\n * Type: BasicAuth\n * Dynamic: ❌\n * Required: ❌\n\n> Basic Auth configuration\n\n# headers\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> List of http headers to be send on every request\n\nMust be an string with key value separated with :, ex: Authorization: Token XYZ\n\n# hosts\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min items: 1\n\n> List of http elasticsearch servers\n\nMust be an uri like https://elasticsearch.com:9200 with scheme and port\n\n# pathPrefix\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Sets the path\'s prefix for every request used by the http client.\n\nFor example, if this is set to /my/path, then any client request will become /my/path/ + endpoint.\nIn essence, every request\'s endpoint is prefixed by this pathPrefix.\nThe path prefix is useful for when Elasticsearch is behind a proxy that provides a base path or a proxy that requires all paths to start with \'/\'; it is not intended for other purposes and it should not be supplied in other scenarios.\n\n# strictDeprecationMode\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n\n> Whether the REST client should return any response containing at leas one warning header as a failure.\n\n# trustAllSsl\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n\n> Trust all SSL CA certificate\n\nUse this if the server is using a self signed ssl certificate.\n\n\n# BasicAuth\n\n# password\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Basic Auth password\n\n# username\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Basic Auth username',normalizedContent:'search\n\ntype: "io.kestra.plugin.elasticsearch.search"\n\n\n> send a search request\n\nget all documents from a search request and store it as outputs\n\n\n# examples\n\nid: "search"\ntype: "io.kestra.plugin.elasticsearch.search"\nconnection:\n  hosts: \n   - "http://localhost:9200"\nindexes:\n - "my_index"\nrequest:\n  query: \n    term:\n      name:\n        value: \'john\'\n\n\n\n# properties\n\n\n# connection\n\n * type: elasticsearchconnection\n * dynamic: ❓\n * required: ✔️\n\n> the connection properties.\n\n\n# contenttype\n\n * type: string\n\n * dynamic: ❌\n\n * required: ❌\n\n * possible values:\n   \n   * json\n   * smile\n   * yaml\n   * cbor\n\n> the content type of value\n\n\n# indexes\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> the elasticsearch indices\n\ndefault to all indices\n\n\n# request\n\n * type: ====\n * dynamic: ✔️\n * required: ❌\n\n> the elasticsearch value\n\ncan be a json string, in this case, the contenttype will be used or a raw map\n\n\n# routing\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> controls the shard routing of the request.\n\nusing this value to hash the shard and not the id.\n\n\n# outputs\n\n\n# rows\n\n * type: array\n * subtype: object\n\n> the search result fetch\n\n\n# size\n\n * type: integer\n\n> the size of the rows fetch\n\n\n# total\n\n * type: integer\n\n> the total of the rows fetch without pagination\n\n\n# definitions\n\n\n# elasticsearchconnection\n\n# basicauth\n\n * type: basicauth\n * dynamic: ❌\n * required: ❌\n\n> basic auth configuration\n\n# headers\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> list of http headers to be send on every request\n\nmust be an string with key value separated with :, ex: authorization: token xyz\n\n# hosts\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ✔️\n * min items: 1\n\n> list of http elasticsearch servers\n\nmust be an uri like https://elasticsearch.com:9200 with scheme and port\n\n# pathprefix\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> sets the path\'s prefix for every request used by the http client.\n\nfor example, if this is set to /my/path, then any client request will become /my/path/ + endpoint.\nin essence, every request\'s endpoint is prefixed by this pathprefix.\nthe path prefix is useful for when elasticsearch is behind a proxy that provides a base path or a proxy that requires all paths to start with \'/\'; it is not intended for other purposes and it should not be supplied in other scenarios.\n\n# strictdeprecationmode\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n\n> whether the rest client should return any response containing at leas one warning header as a failure.\n\n# trustallssl\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n\n> trust all ssl ca certificate\n\nuse this if the server is using a self signed ssl certificate.\n\n\n# basicauth\n\n# password\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> basic auth password\n\n# username\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> basic auth username',charsets:{}},{title:"Plugin fs",frontmatter:{title:"Plugin fs",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Plugin fs"},{property:"og:description",content:"Plugin fs | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-fs/"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Plugin fs"},{name:"twitter:description",content:"Plugin fs | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-fs/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-fs/",relativePath:"plugins/plugin-fs/README.md",key:"v-70b0dc34",path:"/plugins/plugin-fs/",headers:[{level:2,title:"Ftps",slug:"ftps",normalizedTitle:"ftps",charIndex:16},{level:3,title:"Triggers",slug:"triggers",normalizedTitle:"triggers",charIndex:25},{level:3,title:"Tasks",slug:"tasks",normalizedTitle:"tasks",charIndex:50},{level:2,title:"Ftp",slug:"ftp",normalizedTitle:"ftp",charIndex:16},{level:3,title:"Triggers",slug:"triggers-2",normalizedTitle:"triggers",charIndex:25},{level:3,title:"Tasks",slug:"tasks-2",normalizedTitle:"tasks",charIndex:50},{level:2,title:"Http",slug:"http",normalizedTitle:"http",charIndex:227},{level:3,title:"Tasks",slug:"tasks-3",normalizedTitle:"tasks",charIndex:50},{level:2,title:"Sftp",slug:"sftp",normalizedTitle:"sftp",charIndex:270},{level:3,title:"Triggers",slug:"triggers-3",normalizedTitle:"triggers",charIndex:25},{level:3,title:"Tasks",slug:"tasks-4",normalizedTitle:"tasks",charIndex:50}],headersStr:"Ftps Triggers Tasks Ftp Triggers Tasks Http Tasks Sftp Triggers Tasks",content:"# Plugin fs\n\n\n# Ftps\n\n\n# Triggers\n\n * Trigger\n\n\n# Tasks\n\n * Delete\n * Download\n * Downloads\n * List\n * Move\n * Upload\n\n\n# Ftp\n\n\n# Triggers\n\n * Trigger\n\n\n# Tasks\n\n * Delete\n * Download\n * Downloads\n * List\n * Move\n * Upload\n\n\n# Http\n\n\n# Tasks\n\n * Download\n * Request\n\n\n# Sftp\n\n\n# Triggers\n\n * Trigger\n\n\n# Tasks\n\n * Delete\n * Download\n * Downloads\n * List\n * Move\n * Upload",normalizedContent:"# plugin fs\n\n\n# ftps\n\n\n# triggers\n\n * trigger\n\n\n# tasks\n\n * delete\n * download\n * downloads\n * list\n * move\n * upload\n\n\n# ftp\n\n\n# triggers\n\n * trigger\n\n\n# tasks\n\n * delete\n * download\n * downloads\n * list\n * move\n * upload\n\n\n# http\n\n\n# tasks\n\n * download\n * request\n\n\n# sftp\n\n\n# triggers\n\n * trigger\n\n\n# tasks\n\n * delete\n * download\n * downloads\n * list\n * move\n * upload",charsets:{}},{title:"Delete",frontmatter:{title:"Delete",editLink:!1,description:"Delete a file to a FTP server.",icon:"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4KPHN2ZyB2ZXJzaW9uPSIxLjEiIGlkPSJDYWxxdWVfMSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIgeD0iMHB4IiB5PSIwcHgiCiAgICAgdmlld0JveD0iMCAwIDI0IDI0IiBzdHlsZT0iZW5hYmxlLWJhY2tncm91bmQ6bmV3IDAgMCAyNCAyNDsiIHhtbDpzcGFjZT0icHJlc2VydmUiPgo8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgoJLnN0MHtmaWxsOm5vbmU7fQoJLnN0MXtmaWxsOiMwRjE3MjQ7fQo8L3N0eWxlPgogICAgPGc+Cgk8cmVjdCB4PSI1IiB5PSI0IiBjbGFzcz0ic3QwIiB3aWR0aD0iMiIgaGVpZ2h0PSIyIi8+CiAgICAgICAgPHJlY3QgeD0iOSIgeT0iNCIgY2xhc3M9InN0MCIgd2lkdGg9IjEiIGhlaWdodD0iMiIvPgogICAgICAgIDxwYXRoIGNsYXNzPSJzdDEiIGQ9Ik00LDhoMTZjMC42LDAsMS0wLjQsMS0xVjNjMC0wLjYtMC40LTEtMS0xSDRDMy40LDIsMywyLjQsMywzdjRDMyw3LjYsMy40LDgsNCw4eiBNOSw0aDF2Mkg5VjR6IE01LDRoMnYySDVWNHoKCQkiLz4KICAgICAgICA8cGF0aCBjbGFzcz0ic3QxIiBkPSJNMTUsMTNjMC4xLDAsMC4yLTAuMSwwLjMtMC4xczAuMi0wLjEsMC4yLTAuMmMwLTAuMSwwLjEtMC4yLDAuMS0wLjNjMC0wLjEsMC0wLjItMC4xLTAuM3MtMC4xLTAuMi0wLjItMC4yCgkJYy0wLjEtMC4xLTAuMi0wLjEtMC4zLTAuMWMtMC4xLDAtMC4yLDAtMC40LDBjLTAuMiwwLTAuNCwwLTAuNSwwVjEzaDAuNEMxNC43LDEzLDE0LjgsMTMsMTUsMTN6Ii8+CiAgICAgICAgPHBhdGggY2xhc3M9InN0MSIgZD0iTTE1LDE5YzAtMC42LTAuNC0xLTEtMWgtMXYtMmg3YzAuNiwwLDEtMC40LDEtMXYtNGMwLTAuNi0wLjQtMS0xLTFINGMtMC42LDAtMSwwLjQtMSwxdjRjMCwwLjYsMC40LDEsMSwxaDd2MgoJCWgtMWMtMC42LDAtMSwwLjQtMSwxSDJ2Mmg3YzAsMC42LDAuNCwxLDEsMWg0YzAuNiwwLDEtMC40LDEtMWg3di0ySDE1eiBNMTMuNywxMS4zYzAuMSwwLDAuMy0wLjEsMC41LTAuMWMwLjIsMCwwLjMsMCwwLjUsMAoJCWMwLjUsMCwwLjksMC4xLDEuMSwwLjNzMC40LDAuNSwwLjQsMC44YzAsMC4yLDAsMC40LTAuMSwwLjVjLTAuMSwwLjEtMC4yLDAuMy0wLjMsMC4zYy0wLjEsMC4xLTAuMywwLjItMC41LDAuMnMtMC40LDAuMS0wLjcsMC4xCgkJaC0wLjR2MS4zaC0wLjVWMTEuM3ogTTEwLjIsMTEuN0g4LjZ2MUgxMHYwLjRIOC42djEuNkg4LjF2LTMuNWgyLjFWMTEuN3ogTTEyLjEsMTQuN2gtMC41di0zaC0xLjF2LTAuNGgyLjd2MC40aC0xLjFWMTQuN3oiLz4KPC9nPgo8L3N2Zz4K",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Delete"},{property:"og:description",content:"Delete a file to a FTP server. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-fs/tasks/ftp/io.kestra.plugin.fs.ftp.Delete.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Delete"},{name:"twitter:description",content:"Delete a file to a FTP server. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-fs/tasks/ftp/io.kestra.plugin.fs.ftp.Delete.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-fs/tasks/ftp/io.kestra.plugin.fs.ftp.Delete.html",relativePath:"plugins/plugin-fs/tasks/ftp/io.kestra.plugin.fs.ftp.Delete.md",key:"v-aac0365a",path:"/plugins/plugin-fs/tasks/ftp/io.kestra.plugin.fs.ftp.Delete.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:86},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:236},{level:3,title:"errorOnMissing",slug:"erroronmissing",normalizedTitle:"erroronmissing",charIndex:251},{level:3,title:"host",slug:"host",normalizedTitle:"host",charIndex:148},{level:3,title:"passiveMode",slug:"passivemode",normalizedTitle:"passivemode",charIndex:448},{level:3,title:"password",slug:"password",normalizedTitle:"password",charIndex:187},{level:3,title:"port",slug:"port",normalizedTitle:"port",charIndex:164},{level:3,title:"proxyHost",slug:"proxyhost",normalizedTitle:"proxyhost",charIndex:747},{level:3,title:"proxyPort",slug:"proxyport",normalizedTitle:"proxyport",charIndex:825},{level:3,title:"proxyType",slug:"proxytype",normalizedTitle:"proxytype",charIndex:903},{level:3,title:"rootDir",slug:"rootdir",normalizedTitle:"rootdir",charIndex:1041},{level:3,title:"uri",slug:"uri",normalizedTitle:"uri",charIndex:202},{level:3,title:"username",slug:"username",normalizedTitle:"username",charIndex:173},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1320},{level:3,title:"deleted",slug:"deleted",normalizedTitle:"deleted",charIndex:1332},{level:3,title:"uri",slug:"uri-2",normalizedTitle:"uri",charIndex:202},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:1459}],headersStr:"Examples Properties errorOnMissing host passiveMode password port proxyHost proxyPort proxyType rootDir uri username Outputs deleted uri Definitions",content:'Delete\n\ntype: "io.kestra.plugin.fs.ftp.Delete"\n\n\n> Delete a file to a FTP server.\n\n\n# Examples\n\nid: "delete"\ntype: "io.kestra.plugin.fs.ftp.Delete"\nhost: localhost\nport: 21\nusername: foo\npassword: pass\nuri: "/upload/dir1/file.txt"\n\n\n\n# Properties\n\n\n# errorOnMissing\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n> raise an error if the file is not found\n\n\n# host\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Hostname of the remote server\n\n\n# passiveMode\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: true\n\n> Enter into passive mode.\n\n\n# password\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Password on the remote server\n\n\n# port\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Default: 21\n\n> Port of the remote server\n\n\n# proxyHost\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> FTP proxy host\n\n\n# proxyPort\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> FTP proxy port\n\n\n# proxyType\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Possible Values:\n   \n   * DIRECT\n   * HTTP\n   * SOCKS\n\n> FTP proxy type\n\n\n# rootDir\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: true\n\n> Is path is relative to root dir\n\n\n# uri\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The file to delete\n\n\n# username\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Username on the remote server\n\n\n# Outputs\n\n\n# deleted\n\n * Type: boolean\n * Default: false\n\n> If the files was really deleted\n\n\n# uri\n\n * Type: string\n\n> The deleted uri\n\n\n# Definitions',normalizedContent:'delete\n\ntype: "io.kestra.plugin.fs.ftp.delete"\n\n\n> delete a file to a ftp server.\n\n\n# examples\n\nid: "delete"\ntype: "io.kestra.plugin.fs.ftp.delete"\nhost: localhost\nport: 21\nusername: foo\npassword: pass\nuri: "/upload/dir1/file.txt"\n\n\n\n# properties\n\n\n# erroronmissing\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n> raise an error if the file is not found\n\n\n# host\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> hostname of the remote server\n\n\n# passivemode\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: true\n\n> enter into passive mode.\n\n\n# password\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> password on the remote server\n\n\n# port\n\n * type: string\n * dynamic: ❓\n * required: ❌\n * default: 21\n\n> port of the remote server\n\n\n# proxyhost\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> ftp proxy host\n\n\n# proxyport\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> ftp proxy port\n\n\n# proxytype\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * possible values:\n   \n   * direct\n   * http\n   * socks\n\n> ftp proxy type\n\n\n# rootdir\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: true\n\n> is path is relative to root dir\n\n\n# uri\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the file to delete\n\n\n# username\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> username on the remote server\n\n\n# outputs\n\n\n# deleted\n\n * type: boolean\n * default: false\n\n> if the files was really deleted\n\n\n# uri\n\n * type: string\n\n> the deleted uri\n\n\n# definitions',charsets:{}},{title:"Download",frontmatter:{title:"Download",editLink:!1,description:"Download file from FTP server",icon:"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4KPHN2ZyB2ZXJzaW9uPSIxLjEiIGlkPSJDYWxxdWVfMSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIgeD0iMHB4IiB5PSIwcHgiCiAgICAgdmlld0JveD0iMCAwIDI0IDI0IiBzdHlsZT0iZW5hYmxlLWJhY2tncm91bmQ6bmV3IDAgMCAyNCAyNDsiIHhtbDpzcGFjZT0icHJlc2VydmUiPgo8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgoJLnN0MHtmaWxsOm5vbmU7fQoJLnN0MXtmaWxsOiMwRjE3MjQ7fQo8L3N0eWxlPgogICAgPGc+Cgk8cmVjdCB4PSI1IiB5PSI0IiBjbGFzcz0ic3QwIiB3aWR0aD0iMiIgaGVpZ2h0PSIyIi8+CiAgICAgICAgPHJlY3QgeD0iOSIgeT0iNCIgY2xhc3M9InN0MCIgd2lkdGg9IjEiIGhlaWdodD0iMiIvPgogICAgICAgIDxwYXRoIGNsYXNzPSJzdDEiIGQ9Ik00LDhoMTZjMC42LDAsMS0wLjQsMS0xVjNjMC0wLjYtMC40LTEtMS0xSDRDMy40LDIsMywyLjQsMywzdjRDMyw3LjYsMy40LDgsNCw4eiBNOSw0aDF2Mkg5VjR6IE01LDRoMnYySDVWNHoKCQkiLz4KICAgICAgICA8cGF0aCBjbGFzcz0ic3QxIiBkPSJNMTUsMTNjMC4xLDAsMC4yLTAuMSwwLjMtMC4xczAuMi0wLjEsMC4yLTAuMmMwLTAuMSwwLjEtMC4yLDAuMS0wLjNjMC0wLjEsMC0wLjItMC4xLTAuM3MtMC4xLTAuMi0wLjItMC4yCgkJYy0wLjEtMC4xLTAuMi0wLjEtMC4zLTAuMWMtMC4xLDAtMC4yLDAtMC40LDBjLTAuMiwwLTAuNCwwLTAuNSwwVjEzaDAuNEMxNC43LDEzLDE0LjgsMTMsMTUsMTN6Ii8+CiAgICAgICAgPHBhdGggY2xhc3M9InN0MSIgZD0iTTE1LDE5YzAtMC42LTAuNC0xLTEtMWgtMXYtMmg3YzAuNiwwLDEtMC40LDEtMXYtNGMwLTAuNi0wLjQtMS0xLTFINGMtMC42LDAtMSwwLjQtMSwxdjRjMCwwLjYsMC40LDEsMSwxaDd2MgoJCWgtMWMtMC42LDAtMSwwLjQtMSwxSDJ2Mmg3YzAsMC42LDAuNCwxLDEsMWg0YzAuNiwwLDEtMC40LDEtMWg3di0ySDE1eiBNMTMuNywxMS4zYzAuMSwwLDAuMy0wLjEsMC41LTAuMWMwLjIsMCwwLjMsMCwwLjUsMAoJCWMwLjUsMCwwLjksMC4xLDEuMSwwLjNzMC40LDAuNSwwLjQsMC44YzAsMC4yLDAsMC40LTAuMSwwLjVjLTAuMSwwLjEtMC4yLDAuMy0wLjMsMC4zYy0wLjEsMC4xLTAuMywwLjItMC41LDAuMnMtMC40LDAuMS0wLjcsMC4xCgkJaC0wLjR2MS4zaC0wLjVWMTEuM3ogTTEwLjIsMTEuN0g4LjZ2MUgxMHYwLjRIOC42djEuNkg4LjF2LTMuNWgyLjFWMTEuN3ogTTEyLjEsMTQuN2gtMC41di0zaC0xLjF2LTAuNGgyLjd2MC40aC0xLjFWMTQuN3oiLz4KPC9nPgo8L3N2Zz4K",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Download"},{property:"og:description",content:"Download file from FTP server | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-fs/tasks/ftp/io.kestra.plugin.fs.ftp.Download.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Download"},{name:"twitter:description",content:"Download file from FTP server | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-fs/tasks/ftp/io.kestra.plugin.fs.ftp.Download.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-fs/tasks/ftp/io.kestra.plugin.fs.ftp.Download.html",relativePath:"plugins/plugin-fs/tasks/ftp/io.kestra.plugin.fs.ftp.Download.md",key:"v-a582424e",path:"/plugins/plugin-fs/tasks/ftp/io.kestra.plugin.fs.ftp.Download.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:89},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:235},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:69},{level:3,title:"host",slug:"host",normalizedTitle:"host",charIndex:155},{level:3,title:"passiveMode",slug:"passivemode",normalizedTitle:"passivemode",charIndex:453},{level:3,title:"password",slug:"password",normalizedTitle:"password",charIndex:194},{level:3,title:"port",slug:"port",normalizedTitle:"port",charIndex:171},{level:3,title:"proxyHost",slug:"proxyhost",normalizedTitle:"proxyhost",charIndex:752},{level:3,title:"proxyPort",slug:"proxyport",normalizedTitle:"proxyport",charIndex:830},{level:3,title:"proxyType",slug:"proxytype",normalizedTitle:"proxytype",charIndex:908},{level:3,title:"rootDir",slug:"rootdir",normalizedTitle:"rootdir",charIndex:1046},{level:3,title:"username",slug:"username",normalizedTitle:"username",charIndex:180},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1249},{level:3,title:"from",slug:"from-2",normalizedTitle:"from",charIndex:69},{level:3,title:"to",slug:"to",normalizedTitle:"to",charIndex:341},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:1424}],headersStr:"Examples Properties from host passiveMode password port proxyHost proxyPort proxyType rootDir username Outputs from to Definitions",content:'Download\n\ntype: "io.kestra.plugin.fs.ftp.Download"\n\n\n> Download file from FTP server\n\n\n# Examples\n\nid: "download"\ntype: "io.kestra.plugin.fs.ftp.Download"\nhost: localhost\nport: 21\nusername: foo\npassword: pass\nfrom: "/in/file.txt"\n\n\n\n# Properties\n\n\n# from\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The fully-qualified URIs that point to destination path\n\n\n# host\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Hostname of the remote server\n\n\n# passiveMode\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: true\n\n> Enter into passive mode.\n\n\n# password\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Password on the remote server\n\n\n# port\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Default: 21\n\n> Port of the remote server\n\n\n# proxyHost\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> FTP proxy host\n\n\n# proxyPort\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> FTP proxy port\n\n\n# proxyType\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Possible Values:\n   \n   * DIRECT\n   * HTTP\n   * SOCKS\n\n> FTP proxy type\n\n\n# rootDir\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: true\n\n> Is path is relative to root dir\n\n\n# username\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Username on the remote server\n\n\n# Outputs\n\n\n# from\n\n * Type: string\n\n> The fully-qualified URIs that point to source data\n\n\n# to\n\n * Type: string\n\n> The fully-qualified URIs that point to destination path\n\n\n# Definitions',normalizedContent:'download\n\ntype: "io.kestra.plugin.fs.ftp.download"\n\n\n> download file from ftp server\n\n\n# examples\n\nid: "download"\ntype: "io.kestra.plugin.fs.ftp.download"\nhost: localhost\nport: 21\nusername: foo\npassword: pass\nfrom: "/in/file.txt"\n\n\n\n# properties\n\n\n# from\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the fully-qualified uris that point to destination path\n\n\n# host\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> hostname of the remote server\n\n\n# passivemode\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: true\n\n> enter into passive mode.\n\n\n# password\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> password on the remote server\n\n\n# port\n\n * type: string\n * dynamic: ❓\n * required: ❌\n * default: 21\n\n> port of the remote server\n\n\n# proxyhost\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> ftp proxy host\n\n\n# proxyport\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> ftp proxy port\n\n\n# proxytype\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * possible values:\n   \n   * direct\n   * http\n   * socks\n\n> ftp proxy type\n\n\n# rootdir\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: true\n\n> is path is relative to root dir\n\n\n# username\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> username on the remote server\n\n\n# outputs\n\n\n# from\n\n * type: string\n\n> the fully-qualified uris that point to source data\n\n\n# to\n\n * type: string\n\n> the fully-qualified uris that point to destination path\n\n\n# definitions',charsets:{}},{title:"Downloads",frontmatter:{title:"Downloads",editLink:!1,description:"Download multiple files from FTP server",icon:"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4KPHN2ZyB2ZXJzaW9uPSIxLjEiIGlkPSJDYWxxdWVfMSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIgeD0iMHB4IiB5PSIwcHgiCiAgICAgdmlld0JveD0iMCAwIDI0IDI0IiBzdHlsZT0iZW5hYmxlLWJhY2tncm91bmQ6bmV3IDAgMCAyNCAyNDsiIHhtbDpzcGFjZT0icHJlc2VydmUiPgo8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgoJLnN0MHtmaWxsOm5vbmU7fQoJLnN0MXtmaWxsOiMwRjE3MjQ7fQo8L3N0eWxlPgogICAgPGc+Cgk8cmVjdCB4PSI1IiB5PSI0IiBjbGFzcz0ic3QwIiB3aWR0aD0iMiIgaGVpZ2h0PSIyIi8+CiAgICAgICAgPHJlY3QgeD0iOSIgeT0iNCIgY2xhc3M9InN0MCIgd2lkdGg9IjEiIGhlaWdodD0iMiIvPgogICAgICAgIDxwYXRoIGNsYXNzPSJzdDEiIGQ9Ik00LDhoMTZjMC42LDAsMS0wLjQsMS0xVjNjMC0wLjYtMC40LTEtMS0xSDRDMy40LDIsMywyLjQsMywzdjRDMyw3LjYsMy40LDgsNCw4eiBNOSw0aDF2Mkg5VjR6IE01LDRoMnYySDVWNHoKCQkiLz4KICAgICAgICA8cGF0aCBjbGFzcz0ic3QxIiBkPSJNMTUsMTNjMC4xLDAsMC4yLTAuMSwwLjMtMC4xczAuMi0wLjEsMC4yLTAuMmMwLTAuMSwwLjEtMC4yLDAuMS0wLjNjMC0wLjEsMC0wLjItMC4xLTAuM3MtMC4xLTAuMi0wLjItMC4yCgkJYy0wLjEtMC4xLTAuMi0wLjEtMC4zLTAuMWMtMC4xLDAtMC4yLDAtMC40LDBjLTAuMiwwLTAuNCwwLTAuNSwwVjEzaDAuNEMxNC43LDEzLDE0LjgsMTMsMTUsMTN6Ii8+CiAgICAgICAgPHBhdGggY2xhc3M9InN0MSIgZD0iTTE1LDE5YzAtMC42LTAuNC0xLTEtMWgtMXYtMmg3YzAuNiwwLDEtMC40LDEtMXYtNGMwLTAuNi0wLjQtMS0xLTFINGMtMC42LDAtMSwwLjQtMSwxdjRjMCwwLjYsMC40LDEsMSwxaDd2MgoJCWgtMWMtMC42LDAtMSwwLjQtMSwxSDJ2Mmg3YzAsMC42LDAuNCwxLDEsMWg0YzAuNiwwLDEtMC40LDEtMWg3di0ySDE1eiBNMTMuNywxMS4zYzAuMSwwLDAuMy0wLjEsMC41LTAuMWMwLjIsMCwwLjMsMCwwLjUsMAoJCWMwLjUsMCwwLjksMC4xLDEuMSwwLjNzMC40LDAuNSwwLjQsMC44YzAsMC4yLDAsMC40LTAuMSwwLjVjLTAuMSwwLjEtMC4yLDAuMy0wLjMsMC4zYy0wLjEsMC4xLTAuMywwLjItMC41LDAuMnMtMC40LDAuMS0wLjcsMC4xCgkJaC0wLjR2MS4zaC0wLjVWMTEuM3ogTTEwLjIsMTEuN0g4LjZ2MUgxMHYwLjRIOC42djEuNkg4LjF2LTMuNWgyLjFWMTEuN3ogTTEyLjEsMTQuN2gtMC41di0zaC0xLjF2LTAuNGgyLjd2MC40aC0xLjFWMTQuN3oiLz4KPC9nPgo8L3N2Zz4K",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Downloads"},{property:"og:description",content:"Download multiple files from FTP server | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-fs/tasks/ftp/io.kestra.plugin.fs.ftp.Downloads.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Downloads"},{name:"twitter:description",content:"Download multiple files from FTP server | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-fs/tasks/ftp/io.kestra.plugin.fs.ftp.Downloads.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-fs/tasks/ftp/io.kestra.plugin.fs.ftp.Downloads.html",relativePath:"plugins/plugin-fs/tasks/ftp/io.kestra.plugin.fs.ftp.Downloads.md",key:"v-f82935ba",path:"/plugins/plugin-fs/tasks/ftp/io.kestra.plugin.fs.ftp.Downloads.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:101},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:359},{level:3,title:"action",slug:"action",normalizedTitle:"action",charIndex:314},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:81},{level:3,title:"host",slug:"host",normalizedTitle:"host",charIndex:231},{level:3,title:"moveDirectory",slug:"movedirectory",normalizedTitle:"movedirectory",charIndex:327},{level:3,title:"passiveMode",slug:"passivemode",normalizedTitle:"passivemode",charIndex:796},{level:3,title:"password",slug:"password",normalizedTitle:"password",charIndex:270},{level:3,title:"port",slug:"port",normalizedTitle:"port",charIndex:247},{level:3,title:"proxyHost",slug:"proxyhost",normalizedTitle:"proxyhost",charIndex:1095},{level:3,title:"proxyPort",slug:"proxyport",normalizedTitle:"proxyport",charIndex:1173},{level:3,title:"proxyType",slug:"proxytype",normalizedTitle:"proxytype",charIndex:1251},{level:3,title:"regExp",slug:"regexp",normalizedTitle:"regexp",charIndex:1389},{level:3,title:"rootDir",slug:"rootdir",normalizedTitle:"rootdir",charIndex:1482},{level:3,title:"username",slug:"username",normalizedTitle:"username",charIndex:256},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1685},{level:3,title:"files",slug:"files",normalizedTitle:"files",charIndex:75},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:1794},{level:3,title:"File",slug:"file",normalizedTitle:"file",charIndex:1731}],headersStr:"Examples Properties action from host moveDirectory passiveMode password port proxyHost proxyPort proxyType regExp rootDir username Outputs files Definitions File",content:'Downloads\n\ntype: "io.kestra.plugin.fs.ftp.Downloads"\n\n\n> Download multiple files from FTP server\n\n\n# Examples\n\n> Download a list of files and move it to an archive folders\n\nid: "downloads"\ntype: "io.kestra.plugin.fs.ftp.Downloads"\nhost: localhost\nport: 21\nusername: foo\npassword: pass\nfrom: "/in/"\ninterval: PT10S\naction: MOVE\nmoveDirectory: "/archive/"\n\n\n\n# Properties\n\n\n# action\n\n * Type: string\n\n * Dynamic: ✔️\n\n * Required: ❌\n\n * Possible Values:\n   \n   * MOVE\n   * DELETE\n\n> The action to do on find files\n\n\n# from\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The directory to list\n\n\n# host\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Hostname of the remote server\n\n\n# moveDirectory\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The destination directory in case off MOVE\n\n\n# passiveMode\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: true\n\n> Enter into passive mode.\n\n\n# password\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Password on the remote server\n\n\n# port\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Default: 21\n\n> Port of the remote server\n\n\n# proxyHost\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> FTP proxy host\n\n\n# proxyPort\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> FTP proxy port\n\n\n# proxyType\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Possible Values:\n   \n   * DIRECT\n   * HTTP\n   * SOCKS\n\n> FTP proxy type\n\n\n# regExp\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> A regexp to filter on full path\n\n\n# rootDir\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: true\n\n> Is path is relative to root dir\n\n\n# username\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Username on the remote server\n\n\n# Outputs\n\n\n# files\n\n * Type: array\n * SubType: File\n * SubType: ====\n\n> The bucket of the downloaded file\n\n\n# Definitions\n\n\n# File\n\n# accessDate\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# fileType\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Possible Values:\n   \n   * FOLDER\n   * FILE\n   * FILE_OR_FOLDER\n   * IMAGINARY\n\n# flags\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n# groupId\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n# name\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# path\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# permissions\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n# size\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n# symbolicLink\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: false\n\n# updatedDate\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# userId\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌',normalizedContent:'downloads\n\ntype: "io.kestra.plugin.fs.ftp.downloads"\n\n\n> download multiple files from ftp server\n\n\n# examples\n\n> download a list of files and move it to an archive folders\n\nid: "downloads"\ntype: "io.kestra.plugin.fs.ftp.downloads"\nhost: localhost\nport: 21\nusername: foo\npassword: pass\nfrom: "/in/"\ninterval: pt10s\naction: move\nmovedirectory: "/archive/"\n\n\n\n# properties\n\n\n# action\n\n * type: string\n\n * dynamic: ✔️\n\n * required: ❌\n\n * possible values:\n   \n   * move\n   * delete\n\n> the action to do on find files\n\n\n# from\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the directory to list\n\n\n# host\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> hostname of the remote server\n\n\n# movedirectory\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the destination directory in case off move\n\n\n# passivemode\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: true\n\n> enter into passive mode.\n\n\n# password\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> password on the remote server\n\n\n# port\n\n * type: string\n * dynamic: ❓\n * required: ❌\n * default: 21\n\n> port of the remote server\n\n\n# proxyhost\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> ftp proxy host\n\n\n# proxyport\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> ftp proxy port\n\n\n# proxytype\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * possible values:\n   \n   * direct\n   * http\n   * socks\n\n> ftp proxy type\n\n\n# regexp\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> a regexp to filter on full path\n\n\n# rootdir\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: true\n\n> is path is relative to root dir\n\n\n# username\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> username on the remote server\n\n\n# outputs\n\n\n# files\n\n * type: array\n * subtype: file\n * subtype: ====\n\n> the bucket of the downloaded file\n\n\n# definitions\n\n\n# file\n\n# accessdate\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# filetype\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * possible values:\n   \n   * folder\n   * file\n   * file_or_folder\n   * imaginary\n\n# flags\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n# groupid\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n# name\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# path\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# permissions\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n# size\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n# symboliclink\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: false\n\n# updateddate\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# userid\n\n * type: integer\n * dynamic: ❓\n * required: ❌',charsets:{}},{title:"List",frontmatter:{title:"List",editLink:!1,description:"List files from FTP server directory",icon:"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4KPHN2ZyB2ZXJzaW9uPSIxLjEiIGlkPSJDYWxxdWVfMSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIgeD0iMHB4IiB5PSIwcHgiCiAgICAgdmlld0JveD0iMCAwIDI0IDI0IiBzdHlsZT0iZW5hYmxlLWJhY2tncm91bmQ6bmV3IDAgMCAyNCAyNDsiIHhtbDpzcGFjZT0icHJlc2VydmUiPgo8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgoJLnN0MHtmaWxsOm5vbmU7fQoJLnN0MXtmaWxsOiMwRjE3MjQ7fQo8L3N0eWxlPgogICAgPGc+Cgk8cmVjdCB4PSI1IiB5PSI0IiBjbGFzcz0ic3QwIiB3aWR0aD0iMiIgaGVpZ2h0PSIyIi8+CiAgICAgICAgPHJlY3QgeD0iOSIgeT0iNCIgY2xhc3M9InN0MCIgd2lkdGg9IjEiIGhlaWdodD0iMiIvPgogICAgICAgIDxwYXRoIGNsYXNzPSJzdDEiIGQ9Ik00LDhoMTZjMC42LDAsMS0wLjQsMS0xVjNjMC0wLjYtMC40LTEtMS0xSDRDMy40LDIsMywyLjQsMywzdjRDMyw3LjYsMy40LDgsNCw4eiBNOSw0aDF2Mkg5VjR6IE01LDRoMnYySDVWNHoKCQkiLz4KICAgICAgICA8cGF0aCBjbGFzcz0ic3QxIiBkPSJNMTUsMTNjMC4xLDAsMC4yLTAuMSwwLjMtMC4xczAuMi0wLjEsMC4yLTAuMmMwLTAuMSwwLjEtMC4yLDAuMS0wLjNjMC0wLjEsMC0wLjItMC4xLTAuM3MtMC4xLTAuMi0wLjItMC4yCgkJYy0wLjEtMC4xLTAuMi0wLjEtMC4zLTAuMWMtMC4xLDAtMC4yLDAtMC40LDBjLTAuMiwwLTAuNCwwLTAuNSwwVjEzaDAuNEMxNC43LDEzLDE0LjgsMTMsMTUsMTN6Ii8+CiAgICAgICAgPHBhdGggY2xhc3M9InN0MSIgZD0iTTE1LDE5YzAtMC42LTAuNC0xLTEtMWgtMXYtMmg3YzAuNiwwLDEtMC40LDEtMXYtNGMwLTAuNi0wLjQtMS0xLTFINGMtMC42LDAtMSwwLjQtMSwxdjRjMCwwLjYsMC40LDEsMSwxaDd2MgoJCWgtMWMtMC42LDAtMSwwLjQtMSwxSDJ2Mmg3YzAsMC42LDAuNCwxLDEsMWg0YzAuNiwwLDEtMC40LDEtMWg3di0ySDE1eiBNMTMuNywxMS4zYzAuMSwwLDAuMy0wLjEsMC41LTAuMWMwLjIsMCwwLjMsMCwwLjUsMAoJCWMwLjUsMCwwLjksMC4xLDEuMSwwLjNzMC40LDAuNSwwLjQsMC44YzAsMC4yLDAsMC40LTAuMSwwLjVjLTAuMSwwLjEtMC4yLDAuMy0wLjMsMC4zYy0wLjEsMC4xLTAuMywwLjItMC41LDAuMnMtMC40LDAuMS0wLjcsMC4xCgkJaC0wLjR2MS4zaC0wLjVWMTEuM3ogTTEwLjIsMTEuN0g4LjZ2MUgxMHYwLjRIOC42djEuNkg4LjF2LTMuNWgyLjFWMTEuN3ogTTEyLjEsMTQuN2gtMC41di0zaC0xLjF2LTAuNGgyLjd2MC40aC0xLjFWMTQuN3oiLz4KPC9nPgo8L3N2Zz4K",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"List"},{property:"og:description",content:"List files from FTP server directory | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-fs/tasks/ftp/io.kestra.plugin.fs.ftp.List.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"List"},{name:"twitter:description",content:"List files from FTP server directory | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-fs/tasks/ftp/io.kestra.plugin.fs.ftp.List.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-fs/tasks/ftp/io.kestra.plugin.fs.ftp.List.html",relativePath:"plugins/plugin-fs/tasks/ftp/io.kestra.plugin.fs.ftp.List.md",key:"v-8041dca6",path:"/plugins/plugin-fs/tasks/ftp/io.kestra.plugin.fs.ftp.List.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:88},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:262},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:58},{level:3,title:"host",slug:"host",normalizedTitle:"host",charIndex:146},{level:3,title:"passiveMode",slug:"passivemode",normalizedTitle:"passivemode",charIndex:468},{level:3,title:"password",slug:"password",normalizedTitle:"password",charIndex:185},{level:3,title:"port",slug:"port",normalizedTitle:"port",charIndex:162},{level:3,title:"proxyHost",slug:"proxyhost",normalizedTitle:"proxyhost",charIndex:767},{level:3,title:"proxyPort",slug:"proxyport",normalizedTitle:"proxyport",charIndex:845},{level:3,title:"proxyType",slug:"proxytype",normalizedTitle:"proxytype",charIndex:923},{level:3,title:"regExp",slug:"regexp",normalizedTitle:"regexp",charIndex:222},{level:3,title:"rootDir",slug:"rootdir",normalizedTitle:"rootdir",charIndex:1154},{level:3,title:"username",slug:"username",normalizedTitle:"username",charIndex:171},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1357},{level:3,title:"files",slug:"files",normalizedTitle:"files",charIndex:52},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:1433},{level:3,title:"File",slug:"file",normalizedTitle:"file",charIndex:1403}],headersStr:"Examples Properties from host passiveMode password port proxyHost proxyPort proxyType regExp rootDir username Outputs files Definitions File",content:'List\n\ntype: "io.kestra.plugin.fs.ftp.List"\n\n\n> List files from FTP server directory\n\n\n# Examples\n\nid: "list"\ntype: "io.kestra.plugin.fs.ftp.List"\nhost: localhost\nport: 21\nusername: foo\npassword: pass\nfrom: "/upload/dir1/"\nregExp: ".*\\/dir1\\/.*\\.(yaml|yml)"\n\n\n\n# Properties\n\n\n# from\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The fully-qualified URIs that point to path\n\n\n# host\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Hostname of the remote server\n\n\n# passiveMode\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: true\n\n> Enter into passive mode.\n\n\n# password\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Password on the remote server\n\n\n# port\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Default: 21\n\n> Port of the remote server\n\n\n# proxyHost\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> FTP proxy host\n\n\n# proxyPort\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> FTP proxy port\n\n\n# proxyType\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Possible Values:\n   \n   * DIRECT\n   * HTTP\n   * SOCKS\n\n> FTP proxy type\n\n\n# regExp\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> A regexp to filter on full path\n\n\n# rootDir\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: true\n\n> Is path is relative to root dir\n\n\n# username\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Username on the remote server\n\n\n# Outputs\n\n\n# files\n\n * Type: array\n * SubType: File\n\n> The list of files\n\n\n# Definitions\n\n\n# File\n\n# accessDate\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# fileType\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Possible Values:\n   \n   * FOLDER\n   * FILE\n   * FILE_OR_FOLDER\n   * IMAGINARY\n\n# flags\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n# groupId\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n# name\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# path\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# permissions\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n# size\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n# symbolicLink\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: false\n\n# updatedDate\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# userId\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌',normalizedContent:'list\n\ntype: "io.kestra.plugin.fs.ftp.list"\n\n\n> list files from ftp server directory\n\n\n# examples\n\nid: "list"\ntype: "io.kestra.plugin.fs.ftp.list"\nhost: localhost\nport: 21\nusername: foo\npassword: pass\nfrom: "/upload/dir1/"\nregexp: ".*\\/dir1\\/.*\\.(yaml|yml)"\n\n\n\n# properties\n\n\n# from\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the fully-qualified uris that point to path\n\n\n# host\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> hostname of the remote server\n\n\n# passivemode\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: true\n\n> enter into passive mode.\n\n\n# password\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> password on the remote server\n\n\n# port\n\n * type: string\n * dynamic: ❓\n * required: ❌\n * default: 21\n\n> port of the remote server\n\n\n# proxyhost\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> ftp proxy host\n\n\n# proxyport\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> ftp proxy port\n\n\n# proxytype\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * possible values:\n   \n   * direct\n   * http\n   * socks\n\n> ftp proxy type\n\n\n# regexp\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> a regexp to filter on full path\n\n\n# rootdir\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: true\n\n> is path is relative to root dir\n\n\n# username\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> username on the remote server\n\n\n# outputs\n\n\n# files\n\n * type: array\n * subtype: file\n\n> the list of files\n\n\n# definitions\n\n\n# file\n\n# accessdate\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# filetype\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * possible values:\n   \n   * folder\n   * file\n   * file_or_folder\n   * imaginary\n\n# flags\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n# groupid\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n# name\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# path\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# permissions\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n# size\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n# symboliclink\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: false\n\n# updateddate\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# userid\n\n * type: integer\n * dynamic: ❓\n * required: ❌',charsets:{cjk:!0}},{title:"Move",frontmatter:{title:"Move",editLink:!1,description:"Move a file to a FTP server.",icon:"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4KPHN2ZyB2ZXJzaW9uPSIxLjEiIGlkPSJDYWxxdWVfMSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIgeD0iMHB4IiB5PSIwcHgiCiAgICAgdmlld0JveD0iMCAwIDI0IDI0IiBzdHlsZT0iZW5hYmxlLWJhY2tncm91bmQ6bmV3IDAgMCAyNCAyNDsiIHhtbDpzcGFjZT0icHJlc2VydmUiPgo8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgoJLnN0MHtmaWxsOm5vbmU7fQoJLnN0MXtmaWxsOiMwRjE3MjQ7fQo8L3N0eWxlPgogICAgPGc+Cgk8cmVjdCB4PSI1IiB5PSI0IiBjbGFzcz0ic3QwIiB3aWR0aD0iMiIgaGVpZ2h0PSIyIi8+CiAgICAgICAgPHJlY3QgeD0iOSIgeT0iNCIgY2xhc3M9InN0MCIgd2lkdGg9IjEiIGhlaWdodD0iMiIvPgogICAgICAgIDxwYXRoIGNsYXNzPSJzdDEiIGQ9Ik00LDhoMTZjMC42LDAsMS0wLjQsMS0xVjNjMC0wLjYtMC40LTEtMS0xSDRDMy40LDIsMywyLjQsMywzdjRDMyw3LjYsMy40LDgsNCw4eiBNOSw0aDF2Mkg5VjR6IE01LDRoMnYySDVWNHoKCQkiLz4KICAgICAgICA8cGF0aCBjbGFzcz0ic3QxIiBkPSJNMTUsMTNjMC4xLDAsMC4yLTAuMSwwLjMtMC4xczAuMi0wLjEsMC4yLTAuMmMwLTAuMSwwLjEtMC4yLDAuMS0wLjNjMC0wLjEsMC0wLjItMC4xLTAuM3MtMC4xLTAuMi0wLjItMC4yCgkJYy0wLjEtMC4xLTAuMi0wLjEtMC4zLTAuMWMtMC4xLDAtMC4yLDAtMC40LDBjLTAuMiwwLTAuNCwwLTAuNSwwVjEzaDAuNEMxNC43LDEzLDE0LjgsMTMsMTUsMTN6Ii8+CiAgICAgICAgPHBhdGggY2xhc3M9InN0MSIgZD0iTTE1LDE5YzAtMC42LTAuNC0xLTEtMWgtMXYtMmg3YzAuNiwwLDEtMC40LDEtMXYtNGMwLTAuNi0wLjQtMS0xLTFINGMtMC42LDAtMSwwLjQtMSwxdjRjMCwwLjYsMC40LDEsMSwxaDd2MgoJCWgtMWMtMC42LDAtMSwwLjQtMSwxSDJ2Mmg3YzAsMC42LDAuNCwxLDEsMWg0YzAuNiwwLDEtMC40LDEtMWg3di0ySDE1eiBNMTMuNywxMS4zYzAuMSwwLDAuMy0wLjEsMC41LTAuMWMwLjIsMCwwLjMsMCwwLjUsMAoJCWMwLjUsMCwwLjksMC4xLDEuMSwwLjNzMC40LDAuNSwwLjQsMC44YzAsMC4yLDAsMC40LTAuMSwwLjVjLTAuMSwwLjEtMC4yLDAuMy0wLjMsMC4zYy0wLjEsMC4xLTAuMywwLjItMC41LDAuMnMtMC40LDAuMS0wLjcsMC4xCgkJaC0wLjR2MS4zaC0wLjVWMTEuM3ogTTEwLjIsMTEuN0g4LjZ2MUgxMHYwLjRIOC42djEuNkg4LjF2LTMuNWgyLjFWMTEuN3ogTTEyLjEsMTQuN2gtMC41di0zaC0xLjF2LTAuNGgyLjd2MC40aC0xLjFWMTQuN3oiLz4KPC9nPgo8L3N2Zz4K",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Move"},{property:"og:description",content:"Move a file to a FTP server. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-fs/tasks/ftp/io.kestra.plugin.fs.ftp.Move.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Move"},{name:"twitter:description",content:"Move a file to a FTP server. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-fs/tasks/ftp/io.kestra.plugin.fs.ftp.Move.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-fs/tasks/ftp/io.kestra.plugin.fs.ftp.Move.html",relativePath:"plugins/plugin-fs/tasks/ftp/io.kestra.plugin.fs.ftp.Move.md",key:"v-3ee58187",path:"/plugins/plugin-fs/tasks/ftp/io.kestra.plugin.fs.ftp.Move.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:144},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:319},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:256},{level:3,title:"host",slug:"host",normalizedTitle:"host",charIndex:202},{level:3,title:"passiveMode",slug:"passivemode",normalizedTitle:"passivemode",charIndex:498},{level:3,title:"password",slug:"password",normalizedTitle:"password",charIndex:241},{level:3,title:"port",slug:"port",normalizedTitle:"port",charIndex:218},{level:3,title:"proxyHost",slug:"proxyhost",normalizedTitle:"proxyhost",charIndex:797},{level:3,title:"proxyPort",slug:"proxyport",normalizedTitle:"proxyport",charIndex:875},{level:3,title:"proxyType",slug:"proxytype",normalizedTitle:"proxytype",charIndex:953},{level:3,title:"rootDir",slug:"rootdir",normalizedTitle:"rootdir",charIndex:1091},{level:3,title:"to",slug:"to",normalizedTitle:"to",charIndex:59},{level:3,title:"username",slug:"username",normalizedTitle:"username",charIndex:227},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1569},{level:3,title:"from",slug:"from-2",normalizedTitle:"from",charIndex:256},{level:3,title:"to",slug:"to-2",normalizedTitle:"to",charIndex:59},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:1670}],headersStr:"Examples Properties from host passiveMode password port proxyHost proxyPort proxyType rootDir to username Outputs from to Definitions",content:'Move\n\ntype: "io.kestra.plugin.fs.ftp.Move"\n\n\n> Move a file to a FTP server.\n\nIf the destination directory doesn\'t exist, it will be created\n\n\n# Examples\n\nid: "move"\ntype: "io.kestra.plugin.fs.ftp.Move"\nhost: localhost\nport: 21\nusername: foo\npassword: pass\nfrom: "/upload/dir1/file.txt"\nto: "/upload/dir2/file.txt"\n\n\n\n# Properties\n\n\n# from\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The file to move\n\n\n# host\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Hostname of the remote server\n\n\n# passiveMode\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: true\n\n> Enter into passive mode.\n\n\n# password\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Password on the remote server\n\n\n# port\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Default: 21\n\n> Port of the remote server\n\n\n# proxyHost\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> FTP proxy host\n\n\n# proxyPort\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> FTP proxy port\n\n\n# proxyType\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Possible Values:\n   \n   * DIRECT\n   * HTTP\n   * SOCKS\n\n> FTP proxy type\n\n\n# rootDir\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: true\n\n> Is path is relative to root dir\n\n\n# to\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The destination path to move\n\nThe full destination path (with filename optionally)\nIf end with a /, the destination is considered as a directory and filename will be happen\nIf the destFile exists, it is deleted first.\n\n\n# username\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Username on the remote server\n\n\n# Outputs\n\n\n# from\n\n * Type: string\n\n> The from uri\n\n\n# to\n\n * Type: string\n\n> The destination uri\n\n\n# Definitions',normalizedContent:'move\n\ntype: "io.kestra.plugin.fs.ftp.move"\n\n\n> move a file to a ftp server.\n\nif the destination directory doesn\'t exist, it will be created\n\n\n# examples\n\nid: "move"\ntype: "io.kestra.plugin.fs.ftp.move"\nhost: localhost\nport: 21\nusername: foo\npassword: pass\nfrom: "/upload/dir1/file.txt"\nto: "/upload/dir2/file.txt"\n\n\n\n# properties\n\n\n# from\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the file to move\n\n\n# host\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> hostname of the remote server\n\n\n# passivemode\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: true\n\n> enter into passive mode.\n\n\n# password\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> password on the remote server\n\n\n# port\n\n * type: string\n * dynamic: ❓\n * required: ❌\n * default: 21\n\n> port of the remote server\n\n\n# proxyhost\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> ftp proxy host\n\n\n# proxyport\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> ftp proxy port\n\n\n# proxytype\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * possible values:\n   \n   * direct\n   * http\n   * socks\n\n> ftp proxy type\n\n\n# rootdir\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: true\n\n> is path is relative to root dir\n\n\n# to\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the destination path to move\n\nthe full destination path (with filename optionally)\nif end with a /, the destination is considered as a directory and filename will be happen\nif the destfile exists, it is deleted first.\n\n\n# username\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> username on the remote server\n\n\n# outputs\n\n\n# from\n\n * type: string\n\n> the from uri\n\n\n# to\n\n * type: string\n\n> the destination uri\n\n\n# definitions',charsets:{}},{title:"Upload",frontmatter:{title:"Upload",editLink:!1,description:"Upload a file to a FTP server",icon:"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4KPHN2ZyB2ZXJzaW9uPSIxLjEiIGlkPSJDYWxxdWVfMSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIgeD0iMHB4IiB5PSIwcHgiCiAgICAgdmlld0JveD0iMCAwIDI0IDI0IiBzdHlsZT0iZW5hYmxlLWJhY2tncm91bmQ6bmV3IDAgMCAyNCAyNDsiIHhtbDpzcGFjZT0icHJlc2VydmUiPgo8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgoJLnN0MHtmaWxsOm5vbmU7fQoJLnN0MXtmaWxsOiMwRjE3MjQ7fQo8L3N0eWxlPgogICAgPGc+Cgk8cmVjdCB4PSI1IiB5PSI0IiBjbGFzcz0ic3QwIiB3aWR0aD0iMiIgaGVpZ2h0PSIyIi8+CiAgICAgICAgPHJlY3QgeD0iOSIgeT0iNCIgY2xhc3M9InN0MCIgd2lkdGg9IjEiIGhlaWdodD0iMiIvPgogICAgICAgIDxwYXRoIGNsYXNzPSJzdDEiIGQ9Ik00LDhoMTZjMC42LDAsMS0wLjQsMS0xVjNjMC0wLjYtMC40LTEtMS0xSDRDMy40LDIsMywyLjQsMywzdjRDMyw3LjYsMy40LDgsNCw4eiBNOSw0aDF2Mkg5VjR6IE01LDRoMnYySDVWNHoKCQkiLz4KICAgICAgICA8cGF0aCBjbGFzcz0ic3QxIiBkPSJNMTUsMTNjMC4xLDAsMC4yLTAuMSwwLjMtMC4xczAuMi0wLjEsMC4yLTAuMmMwLTAuMSwwLjEtMC4yLDAuMS0wLjNjMC0wLjEsMC0wLjItMC4xLTAuM3MtMC4xLTAuMi0wLjItMC4yCgkJYy0wLjEtMC4xLTAuMi0wLjEtMC4zLTAuMWMtMC4xLDAtMC4yLDAtMC40LDBjLTAuMiwwLTAuNCwwLTAuNSwwVjEzaDAuNEMxNC43LDEzLDE0LjgsMTMsMTUsMTN6Ii8+CiAgICAgICAgPHBhdGggY2xhc3M9InN0MSIgZD0iTTE1LDE5YzAtMC42LTAuNC0xLTEtMWgtMXYtMmg3YzAuNiwwLDEtMC40LDEtMXYtNGMwLTAuNi0wLjQtMS0xLTFINGMtMC42LDAtMSwwLjQtMSwxdjRjMCwwLjYsMC40LDEsMSwxaDd2MgoJCWgtMWMtMC42LDAtMSwwLjQtMSwxSDJ2Mmg3YzAsMC42LDAuNCwxLDEsMWg0YzAuNiwwLDEtMC40LDEtMWg3di0ySDE1eiBNMTMuNywxMS4zYzAuMSwwLDAuMy0wLjEsMC41LTAuMWMwLjIsMCwwLjMsMCwwLjUsMAoJCWMwLjUsMCwwLjksMC4xLDEuMSwwLjNzMC40LDAuNSwwLjQsMC44YzAsMC4yLDAsMC40LTAuMSwwLjVjLTAuMSwwLjEtMC4yLDAuMy0wLjMsMC4zYy0wLjEsMC4xLTAuMywwLjItMC41LDAuMnMtMC40LDAuMS0wLjcsMC4xCgkJaC0wLjR2MS4zaC0wLjVWMTEuM3ogTTEwLjIsMTEuN0g4LjZ2MUgxMHYwLjRIOC42djEuNkg4LjF2LTMuNWgyLjFWMTEuN3ogTTEyLjEsMTQuN2gtMC41di0zaC0xLjF2LTAuNGgyLjd2MC40aC0xLjFWMTQuN3oiLz4KPC9nPgo8L3N2Zz4K",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Upload"},{property:"og:description",content:"Upload a file to a FTP server | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-fs/tasks/ftp/io.kestra.plugin.fs.ftp.Upload.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Upload"},{name:"twitter:description",content:"Upload a file to a FTP server | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-fs/tasks/ftp/io.kestra.plugin.fs.ftp.Upload.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-fs/tasks/ftp/io.kestra.plugin.fs.ftp.Upload.html",relativePath:"plugins/plugin-fs/tasks/ftp/io.kestra.plugin.fs.ftp.Upload.md",key:"v-9d7f3bb2",path:"/plugins/plugin-fs/tasks/ftp/io.kestra.plugin.fs.ftp.Upload.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:85},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:267},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:201},{level:3,title:"host",slug:"host",normalizedTitle:"host",charIndex:147},{level:3,title:"passiveMode",slug:"passivemode",normalizedTitle:"passivemode",charIndex:451},{level:3,title:"password",slug:"password",normalizedTitle:"password",charIndex:186},{level:3,title:"port",slug:"port",normalizedTitle:"port",charIndex:163},{level:3,title:"proxyHost",slug:"proxyhost",normalizedTitle:"proxyhost",charIndex:750},{level:3,title:"proxyPort",slug:"proxyport",normalizedTitle:"proxyport",charIndex:828},{level:3,title:"proxyType",slug:"proxytype",normalizedTitle:"proxytype",charIndex:906},{level:3,title:"rootDir",slug:"rootdir",normalizedTitle:"rootdir",charIndex:1044},{level:3,title:"to",slug:"to",normalizedTitle:"to",charIndex:65},{level:3,title:"username",slug:"username",normalizedTitle:"username",charIndex:172},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1325},{level:3,title:"from",slug:"from-2",normalizedTitle:"from",charIndex:201},{level:3,title:"to",slug:"to-2",normalizedTitle:"to",charIndex:65},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:1500}],headersStr:"Examples Properties from host passiveMode password port proxyHost proxyPort proxyType rootDir to username Outputs from to Definitions",content:'Upload\n\ntype: "io.kestra.plugin.fs.ftp.Upload"\n\n\n> Upload a file to a FTP server\n\n\n# Examples\n\nid: "upload"\ntype: "io.kestra.plugin.fs.ftp.Upload"\nhost: localhost\nport: 21\nusername: foo\npassword: pass\nfrom: "{{ outputs.taskid.uri }}"\nto: "/upload/dir2/file.txt"\n\n\n\n# Properties\n\n\n# from\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The file path to copy\n\n\n# host\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Hostname of the remote server\n\n\n# passiveMode\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: true\n\n> Enter into passive mode.\n\n\n# password\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Password on the remote server\n\n\n# port\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Default: 21\n\n> Port of the remote server\n\n\n# proxyHost\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> FTP proxy host\n\n\n# proxyPort\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> FTP proxy port\n\n\n# proxyType\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Possible Values:\n   \n   * DIRECT\n   * HTTP\n   * SOCKS\n\n> FTP proxy type\n\n\n# rootDir\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: true\n\n> Is path is relative to root dir\n\n\n# to\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The destination path\n\n\n# username\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Username on the remote server\n\n\n# Outputs\n\n\n# from\n\n * Type: string\n\n> The fully-qualified URIs that point to source data\n\n\n# to\n\n * Type: string\n\n> The fully-qualified URIs that point to destination path\n\n\n# Definitions',normalizedContent:'upload\n\ntype: "io.kestra.plugin.fs.ftp.upload"\n\n\n> upload a file to a ftp server\n\n\n# examples\n\nid: "upload"\ntype: "io.kestra.plugin.fs.ftp.upload"\nhost: localhost\nport: 21\nusername: foo\npassword: pass\nfrom: "{{ outputs.taskid.uri }}"\nto: "/upload/dir2/file.txt"\n\n\n\n# properties\n\n\n# from\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the file path to copy\n\n\n# host\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> hostname of the remote server\n\n\n# passivemode\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: true\n\n> enter into passive mode.\n\n\n# password\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> password on the remote server\n\n\n# port\n\n * type: string\n * dynamic: ❓\n * required: ❌\n * default: 21\n\n> port of the remote server\n\n\n# proxyhost\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> ftp proxy host\n\n\n# proxyport\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> ftp proxy port\n\n\n# proxytype\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * possible values:\n   \n   * direct\n   * http\n   * socks\n\n> ftp proxy type\n\n\n# rootdir\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: true\n\n> is path is relative to root dir\n\n\n# to\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the destination path\n\n\n# username\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> username on the remote server\n\n\n# outputs\n\n\n# from\n\n * type: string\n\n> the fully-qualified uris that point to source data\n\n\n# to\n\n * type: string\n\n> the fully-qualified uris that point to destination path\n\n\n# definitions',charsets:{}},{title:"Delete",frontmatter:{title:"Delete",editLink:!1,description:"Delete a file to a FTPS server.",icon:"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4KPHN2ZyB2ZXJzaW9uPSIxLjEiIGlkPSJDYWxxdWVfMSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIgeD0iMHB4IiB5PSIwcHgiCiAgICAgdmlld0JveD0iMCAwIDI0IDI0IiBzdHlsZT0iZW5hYmxlLWJhY2tncm91bmQ6bmV3IDAgMCAyNCAyNDsiIHhtbDpzcGFjZT0icHJlc2VydmUiPgo8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgoJLnN0MHtmaWxsOm5vbmU7fQoJLnN0MXtmaWxsOiMwRjE3MjQ7fQo8L3N0eWxlPgogICAgPGc+Cgk8cmVjdCB4PSI1IiB5PSI0IiBjbGFzcz0ic3QwIiB3aWR0aD0iMiIgaGVpZ2h0PSIyIi8+CiAgICAgICAgPHJlY3QgeD0iOSIgeT0iNCIgY2xhc3M9InN0MCIgd2lkdGg9IjEiIGhlaWdodD0iMiIvPgogICAgICAgIDxwYXRoIGNsYXNzPSJzdDEiIGQ9Ik00LDhoMTZjMC42LDAsMS0wLjQsMS0xVjNjMC0wLjYtMC40LTEtMS0xSDRDMy40LDIsMywyLjQsMywzdjRDMyw3LjYsMy40LDgsNCw4eiBNOSw0aDF2Mkg5VjR6IE01LDRoMnYySDVWNHoKCQkiLz4KICAgICAgICA8cGF0aCBjbGFzcz0ic3QxIiBkPSJNMTUsMTljMC0wLjYtMC40LTEtMS0xaC0xdi0yaDdjMC42LDAsMS0wLjQsMS0xdi00YzAtMC42LTAuNC0xLTEtMUg0Yy0wLjYsMC0xLDAuNC0xLDF2NGMwLDAuNiwwLjQsMSwxLDFoN3YyCgkJaC0xYy0wLjYsMC0xLDAuNC0xLDFIMnYyaDdjMCwwLjYsMC40LDEsMSwxaDRjMC42LDAsMS0wLjQsMS0xaDd2LTJIMTV6IE0xNi45LDEzLjZjMC0wLjEtMC4xLTAuMS0wLjItMC4yCgkJYy0wLjEtMC4xLTAuMi0wLjEtMC4zLTAuMXMtMC4yLTAuMS0wLjMtMC4xYy0wLjEsMC0wLjItMC4xLTAuNC0wLjFjLTAuMS0wLjEtMC4yLTAuMS0wLjMtMC4yYy0wLjEtMC4xLTAuMS0wLjItMC4yLTAuMwoJCWMwLTAuMS0wLjEtMC4yLTAuMS0wLjRjMC0wLjMsMC4xLTAuNSwwLjMtMC43YzAuMi0wLjIsMC41LTAuMywwLjktMC4zYzAuMiwwLDAuNCwwLDAuNiwwLjFzMC4zLDAuMSwwLjQsMC4xbC0wLjIsMC40CgkJYy0wLjEsMC0wLjItMC4xLTAuMy0wLjFzLTAuMy0wLjEtMC41LTAuMWMtMC4xLDAtMC4yLDAtMC4zLDBzLTAuMiwwLjEtMC4yLDAuMWMtMC4xLDAtMC4xLDAuMS0wLjEsMC4yYzAsMC4xLTAuMSwwLjEtMC4xLDAuMgoJCWMwLDAuMSwwLDAuMiwwLjEsMC4yYzAsMC4xLDAuMSwwLjEsMC4yLDAuMnMwLjEsMC4xLDAuMiwwLjFjMC4xLDAsMC4yLDAuMSwwLjMsMC4xYzAuMSwwLjEsMC4zLDAuMSwwLjQsMC4yCgkJYzAuMSwwLjEsMC4yLDAuMSwwLjMsMC4yczAuMiwwLjIsMC4yLDAuM2MwLjEsMC4xLDAuMSwwLjMsMC4xLDAuNGMwLDAuMy0wLjEsMC41LTAuMywwLjdzLTAuNSwwLjItMC45LDAuMmMtMC4xLDAtMC4zLDAtMC40LDAKCQljLTAuMSwwLTAuMiwwLTAuMy0wLjFzLTAuMi0wLjEtMC4yLTAuMWMtMC4xLDAtMC4xLTAuMS0wLjItMC4xbDAuMS0wLjRjMC4xLDAsMC4yLDAuMSwwLjQsMC4xYzAuMiwwLjEsMC4zLDAuMSwwLjYsMC4xCgkJYzAuNSwwLDAuOC0wLjIsMC44LTAuNUMxNywxMy43LDE2LjksMTMuNywxNi45LDEzLjZ6IE04LjksMTEuN0g3LjN2MWgxLjR2MC40SDcuM3YxLjZINi44di0zLjVoMi4xVjExLjd6IE0xMS44LDExLjdoLTEuMXYzaC0wLjUKCQl2LTNIOS4ydi0wLjRoMi43VjExLjd6IE0xMi44LDE0LjdoLTAuNXYtMy40YzAuMSwwLDAuMy0wLjEsMC41LTAuMWMwLjIsMCwwLjMsMCwwLjUsMGMwLjUsMCwwLjksMC4xLDEuMSwwLjNzMC40LDAuNSwwLjQsMC44CgkJYzAsMC4yLDAsMC40LTAuMSwwLjVjLTAuMSwwLjEtMC4yLDAuMy0wLjMsMC4zYy0wLjEsMC4xLTAuMywwLjItMC41LDAuMnMtMC40LDAuMS0wLjcsMC4xaC0wLjRWMTQuN3oiLz4KICAgICAgICA8cGF0aCBjbGFzcz0ic3QxIiBkPSJNMTQsMTIuOWMwLjEtMC4xLDAuMi0wLjEsMC4yLTAuMmMwLTAuMSwwLjEtMC4yLDAuMS0wLjNjMC0wLjEsMC0wLjItMC4xLTAuM3MtMC4xLTAuMi0wLjItMC4yCgkJYy0wLjEtMC4xLTAuMi0wLjEtMC4zLTAuMXMtMC4yLDAtMC40LDBjLTAuMiwwLTAuNCwwLTAuNSwwVjEzaDAuNGMwLjIsMCwwLjMsMCwwLjQsMEMxMy44LDEzLDEzLjksMTIuOSwxNCwxMi45eiIvPgo8L2c+Cjwvc3ZnPgo=",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Delete"},{property:"og:description",content:"Delete a file to a FTPS server. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-fs/tasks/ftps/io.kestra.plugin.fs.ftps.Delete.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Delete"},{name:"twitter:description",content:"Delete a file to a FTPS server. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-fs/tasks/ftps/io.kestra.plugin.fs.ftps.Delete.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-fs/tasks/ftps/io.kestra.plugin.fs.ftps.Delete.html",relativePath:"plugins/plugin-fs/tasks/ftps/io.kestra.plugin.fs.ftps.Delete.md",key:"v-5106e98f",path:"/plugins/plugin-fs/tasks/ftps/io.kestra.plugin.fs.ftps.Delete.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:88},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:240},{level:3,title:"dataChannelProtectionLevel",slug:"datachannelprotectionlevel",normalizedTitle:"datachannelprotectionlevel",charIndex:255},{level:3,title:"errorOnMissing",slug:"erroronmissing",normalizedTitle:"erroronmissing",charIndex:452},{level:3,title:"host",slug:"host",normalizedTitle:"host",charIndex:151},{level:3,title:"mode",slug:"mode",normalizedTitle:"mode",charIndex:667},{level:3,title:"passiveMode",slug:"passivemode",normalizedTitle:"passivemode",charIndex:851},{level:3,title:"password",slug:"password",normalizedTitle:"password",charIndex:191},{level:3,title:"port",slug:"port",normalizedTitle:"port",charIndex:167},{level:3,title:"proxyHost",slug:"proxyhost",normalizedTitle:"proxyhost",charIndex:1151},{level:3,title:"proxyPort",slug:"proxyport",normalizedTitle:"proxyport",charIndex:1229},{level:3,title:"proxyType",slug:"proxytype",normalizedTitle:"proxytype",charIndex:1307},{level:3,title:"rootDir",slug:"rootdir",normalizedTitle:"rootdir",charIndex:1445},{level:3,title:"uri",slug:"uri",normalizedTitle:"uri",charIndex:206},{level:3,title:"username",slug:"username",normalizedTitle:"username",charIndex:177},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1724},{level:3,title:"deleted",slug:"deleted",normalizedTitle:"deleted",charIndex:1736},{level:3,title:"uri",slug:"uri-2",normalizedTitle:"uri",charIndex:206},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:1863}],headersStr:"Examples Properties dataChannelProtectionLevel errorOnMissing host mode passiveMode password port proxyHost proxyPort proxyType rootDir uri username Outputs deleted uri Definitions",content:'Delete\n\ntype: "io.kestra.plugin.fs.ftps.Delete"\n\n\n> Delete a file to a FTPS server.\n\n\n# Examples\n\nid: "delete"\ntype: "io.kestra.plugin.fs.ftps.Delete"\nhost: localhost\nport: 990\nusername: foo\npassword: pass\nuri: "/upload/dir1/file.txt"\n\n\n\n# Properties\n\n\n# dataChannelProtectionLevel\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Default: P\n\n * Possible Values:\n   \n   * C\n   * S\n   * E\n   * P\n\n> Sets the data channel protection level (PROT).\n\n\n# errorOnMissing\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: false\n\n> raise an error if the file is not found\n\n\n# host\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Hostname of the remote server\n\n\n# mode\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Default: EXPLICIT\n\n * Possible Values:\n   \n   * IMPLICIT\n   * EXPLICIT\n\n> Sets FTPS mode, either "implicit" or "explicit".\n\n\n# passiveMode\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: true\n\n> Enter into passive mode.\n\n\n# password\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Password on the remote server\n\n\n# port\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Default: 990\n\n> Port of the remote server\n\n\n# proxyHost\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> FTP proxy host\n\n\n# proxyPort\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> FTP proxy port\n\n\n# proxyType\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Possible Values:\n   \n   * DIRECT\n   * HTTP\n   * SOCKS\n\n> FTP proxy type\n\n\n# rootDir\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: true\n\n> Is path is relative to root dir\n\n\n# uri\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The file to delete\n\n\n# username\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Username on the remote server\n\n\n# Outputs\n\n\n# deleted\n\n * Type: boolean\n * Default: false\n\n> If the files was really deleted\n\n\n# uri\n\n * Type: string\n\n> The deleted uri\n\n\n# Definitions',normalizedContent:'delete\n\ntype: "io.kestra.plugin.fs.ftps.delete"\n\n\n> delete a file to a ftps server.\n\n\n# examples\n\nid: "delete"\ntype: "io.kestra.plugin.fs.ftps.delete"\nhost: localhost\nport: 990\nusername: foo\npassword: pass\nuri: "/upload/dir1/file.txt"\n\n\n\n# properties\n\n\n# datachannelprotectionlevel\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * default: p\n\n * possible values:\n   \n   * c\n   * s\n   * e\n   * p\n\n> sets the data channel protection level (prot).\n\n\n# erroronmissing\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: false\n\n> raise an error if the file is not found\n\n\n# host\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> hostname of the remote server\n\n\n# mode\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * default: explicit\n\n * possible values:\n   \n   * implicit\n   * explicit\n\n> sets ftps mode, either "implicit" or "explicit".\n\n\n# passivemode\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: true\n\n> enter into passive mode.\n\n\n# password\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> password on the remote server\n\n\n# port\n\n * type: string\n * dynamic: ❓\n * required: ❌\n * default: 990\n\n> port of the remote server\n\n\n# proxyhost\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> ftp proxy host\n\n\n# proxyport\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> ftp proxy port\n\n\n# proxytype\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * possible values:\n   \n   * direct\n   * http\n   * socks\n\n> ftp proxy type\n\n\n# rootdir\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: true\n\n> is path is relative to root dir\n\n\n# uri\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the file to delete\n\n\n# username\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> username on the remote server\n\n\n# outputs\n\n\n# deleted\n\n * type: boolean\n * default: false\n\n> if the files was really deleted\n\n\n# uri\n\n * type: string\n\n> the deleted uri\n\n\n# definitions',charsets:{}},{title:"Download",frontmatter:{title:"Download",editLink:!1,description:"Download file from FTPS server",icon:"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4KPHN2ZyB2ZXJzaW9uPSIxLjEiIGlkPSJDYWxxdWVfMSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIgeD0iMHB4IiB5PSIwcHgiCiAgICAgdmlld0JveD0iMCAwIDI0IDI0IiBzdHlsZT0iZW5hYmxlLWJhY2tncm91bmQ6bmV3IDAgMCAyNCAyNDsiIHhtbDpzcGFjZT0icHJlc2VydmUiPgo8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgoJLnN0MHtmaWxsOm5vbmU7fQoJLnN0MXtmaWxsOiMwRjE3MjQ7fQo8L3N0eWxlPgogICAgPGc+Cgk8cmVjdCB4PSI1IiB5PSI0IiBjbGFzcz0ic3QwIiB3aWR0aD0iMiIgaGVpZ2h0PSIyIi8+CiAgICAgICAgPHJlY3QgeD0iOSIgeT0iNCIgY2xhc3M9InN0MCIgd2lkdGg9IjEiIGhlaWdodD0iMiIvPgogICAgICAgIDxwYXRoIGNsYXNzPSJzdDEiIGQ9Ik00LDhoMTZjMC42LDAsMS0wLjQsMS0xVjNjMC0wLjYtMC40LTEtMS0xSDRDMy40LDIsMywyLjQsMywzdjRDMyw3LjYsMy40LDgsNCw4eiBNOSw0aDF2Mkg5VjR6IE01LDRoMnYySDVWNHoKCQkiLz4KICAgICAgICA8cGF0aCBjbGFzcz0ic3QxIiBkPSJNMTUsMTljMC0wLjYtMC40LTEtMS0xaC0xdi0yaDdjMC42LDAsMS0wLjQsMS0xdi00YzAtMC42LTAuNC0xLTEtMUg0Yy0wLjYsMC0xLDAuNC0xLDF2NGMwLDAuNiwwLjQsMSwxLDFoN3YyCgkJaC0xYy0wLjYsMC0xLDAuNC0xLDFIMnYyaDdjMCwwLjYsMC40LDEsMSwxaDRjMC42LDAsMS0wLjQsMS0xaDd2LTJIMTV6IE0xNi45LDEzLjZjMC0wLjEtMC4xLTAuMS0wLjItMC4yCgkJYy0wLjEtMC4xLTAuMi0wLjEtMC4zLTAuMXMtMC4yLTAuMS0wLjMtMC4xYy0wLjEsMC0wLjItMC4xLTAuNC0wLjFjLTAuMS0wLjEtMC4yLTAuMS0wLjMtMC4yYy0wLjEtMC4xLTAuMS0wLjItMC4yLTAuMwoJCWMwLTAuMS0wLjEtMC4yLTAuMS0wLjRjMC0wLjMsMC4xLTAuNSwwLjMtMC43YzAuMi0wLjIsMC41LTAuMywwLjktMC4zYzAuMiwwLDAuNCwwLDAuNiwwLjFzMC4zLDAuMSwwLjQsMC4xbC0wLjIsMC40CgkJYy0wLjEsMC0wLjItMC4xLTAuMy0wLjFzLTAuMy0wLjEtMC41LTAuMWMtMC4xLDAtMC4yLDAtMC4zLDBzLTAuMiwwLjEtMC4yLDAuMWMtMC4xLDAtMC4xLDAuMS0wLjEsMC4yYzAsMC4xLTAuMSwwLjEtMC4xLDAuMgoJCWMwLDAuMSwwLDAuMiwwLjEsMC4yYzAsMC4xLDAuMSwwLjEsMC4yLDAuMnMwLjEsMC4xLDAuMiwwLjFjMC4xLDAsMC4yLDAuMSwwLjMsMC4xYzAuMSwwLjEsMC4zLDAuMSwwLjQsMC4yCgkJYzAuMSwwLjEsMC4yLDAuMSwwLjMsMC4yczAuMiwwLjIsMC4yLDAuM2MwLjEsMC4xLDAuMSwwLjMsMC4xLDAuNGMwLDAuMy0wLjEsMC41LTAuMywwLjdzLTAuNSwwLjItMC45LDAuMmMtMC4xLDAtMC4zLDAtMC40LDAKCQljLTAuMSwwLTAuMiwwLTAuMy0wLjFzLTAuMi0wLjEtMC4yLTAuMWMtMC4xLDAtMC4xLTAuMS0wLjItMC4xbDAuMS0wLjRjMC4xLDAsMC4yLDAuMSwwLjQsMC4xYzAuMiwwLjEsMC4zLDAuMSwwLjYsMC4xCgkJYzAuNSwwLDAuOC0wLjIsMC44LTAuNUMxNywxMy43LDE2LjksMTMuNywxNi45LDEzLjZ6IE04LjksMTEuN0g3LjN2MWgxLjR2MC40SDcuM3YxLjZINi44di0zLjVoMi4xVjExLjd6IE0xMS44LDExLjdoLTEuMXYzaC0wLjUKCQl2LTNIOS4ydi0wLjRoMi43VjExLjd6IE0xMi44LDE0LjdoLTAuNXYtMy40YzAuMSwwLDAuMy0wLjEsMC41LTAuMWMwLjIsMCwwLjMsMCwwLjUsMGMwLjUsMCwwLjksMC4xLDEuMSwwLjNzMC40LDAuNSwwLjQsMC44CgkJYzAsMC4yLDAsMC40LTAuMSwwLjVjLTAuMSwwLjEtMC4yLDAuMy0wLjMsMC4zYy0wLjEsMC4xLTAuMywwLjItMC41LDAuMnMtMC40LDAuMS0wLjcsMC4xaC0wLjRWMTQuN3oiLz4KICAgICAgICA8cGF0aCBjbGFzcz0ic3QxIiBkPSJNMTQsMTIuOWMwLjEtMC4xLDAuMi0wLjEsMC4yLTAuMmMwLTAuMSwwLjEtMC4yLDAuMS0wLjNjMC0wLjEsMC0wLjItMC4xLTAuM3MtMC4xLTAuMi0wLjItMC4yCgkJYy0wLjEtMC4xLTAuMi0wLjEtMC4zLTAuMXMtMC4yLDAtMC40LDBjLTAuMiwwLTAuNCwwLTAuNSwwVjEzaDAuNGMwLjIsMCwwLjMsMCwwLjQsMEMxMy44LDEzLDEzLjksMTIuOSwxNCwxMi45eiIvPgo8L2c+Cjwvc3ZnPgo=",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Download"},{property:"og:description",content:"Download file from FTPS server | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-fs/tasks/ftps/io.kestra.plugin.fs.ftps.Download.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Download"},{name:"twitter:description",content:"Download file from FTPS server | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-fs/tasks/ftps/io.kestra.plugin.fs.ftps.Download.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-fs/tasks/ftps/io.kestra.plugin.fs.ftps.Download.html",relativePath:"plugins/plugin-fs/tasks/ftps/io.kestra.plugin.fs.ftps.Download.md",key:"v-2794b055",path:"/plugins/plugin-fs/tasks/ftps/io.kestra.plugin.fs.ftps.Download.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:91},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:239},{level:3,title:"dataChannelProtectionLevel",slug:"datachannelprotectionlevel",normalizedTitle:"datachannelprotectionlevel",charIndex:254},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:70},{level:3,title:"host",slug:"host",normalizedTitle:"host",charIndex:158},{level:3,title:"mode",slug:"mode",normalizedTitle:"mode",charIndex:654},{level:3,title:"passiveMode",slug:"passivemode",normalizedTitle:"passivemode",charIndex:838},{level:3,title:"password",slug:"password",normalizedTitle:"password",charIndex:198},{level:3,title:"port",slug:"port",normalizedTitle:"port",charIndex:174},{level:3,title:"proxyHost",slug:"proxyhost",normalizedTitle:"proxyhost",charIndex:1138},{level:3,title:"proxyPort",slug:"proxyport",normalizedTitle:"proxyport",charIndex:1216},{level:3,title:"proxyType",slug:"proxytype",normalizedTitle:"proxytype",charIndex:1294},{level:3,title:"rootDir",slug:"rootdir",normalizedTitle:"rootdir",charIndex:1432},{level:3,title:"username",slug:"username",normalizedTitle:"username",charIndex:184},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1635},{level:3,title:"from",slug:"from-2",normalizedTitle:"from",charIndex:70},{level:3,title:"to",slug:"to",normalizedTitle:"to",charIndex:542},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:1810}],headersStr:"Examples Properties dataChannelProtectionLevel from host mode passiveMode password port proxyHost proxyPort proxyType rootDir username Outputs from to Definitions",content:'Download\n\ntype: "io.kestra.plugin.fs.ftps.Download"\n\n\n> Download file from FTPS server\n\n\n# Examples\n\nid: "download"\ntype: "io.kestra.plugin.fs.ftps.Download"\nhost: localhost\nport: 990\nusername: foo\npassword: pass\nfrom: "/in/file.txt"\n\n\n\n# Properties\n\n\n# dataChannelProtectionLevel\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Default: P\n\n * Possible Values:\n   \n   * C\n   * S\n   * E\n   * P\n\n> Sets the data channel protection level (PROT).\n\n\n# from\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The fully-qualified URIs that point to destination path\n\n\n# host\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Hostname of the remote server\n\n\n# mode\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Default: EXPLICIT\n\n * Possible Values:\n   \n   * IMPLICIT\n   * EXPLICIT\n\n> Sets FTPS mode, either "implicit" or "explicit".\n\n\n# passiveMode\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: true\n\n> Enter into passive mode.\n\n\n# password\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Password on the remote server\n\n\n# port\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Default: 990\n\n> Port of the remote server\n\n\n# proxyHost\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> FTP proxy host\n\n\n# proxyPort\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> FTP proxy port\n\n\n# proxyType\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Possible Values:\n   \n   * DIRECT\n   * HTTP\n   * SOCKS\n\n> FTP proxy type\n\n\n# rootDir\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: true\n\n> Is path is relative to root dir\n\n\n# username\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Username on the remote server\n\n\n# Outputs\n\n\n# from\n\n * Type: string\n\n> The fully-qualified URIs that point to source data\n\n\n# to\n\n * Type: string\n\n> The fully-qualified URIs that point to destination path\n\n\n# Definitions',normalizedContent:'download\n\ntype: "io.kestra.plugin.fs.ftps.download"\n\n\n> download file from ftps server\n\n\n# examples\n\nid: "download"\ntype: "io.kestra.plugin.fs.ftps.download"\nhost: localhost\nport: 990\nusername: foo\npassword: pass\nfrom: "/in/file.txt"\n\n\n\n# properties\n\n\n# datachannelprotectionlevel\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * default: p\n\n * possible values:\n   \n   * c\n   * s\n   * e\n   * p\n\n> sets the data channel protection level (prot).\n\n\n# from\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the fully-qualified uris that point to destination path\n\n\n# host\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> hostname of the remote server\n\n\n# mode\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * default: explicit\n\n * possible values:\n   \n   * implicit\n   * explicit\n\n> sets ftps mode, either "implicit" or "explicit".\n\n\n# passivemode\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: true\n\n> enter into passive mode.\n\n\n# password\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> password on the remote server\n\n\n# port\n\n * type: string\n * dynamic: ❓\n * required: ❌\n * default: 990\n\n> port of the remote server\n\n\n# proxyhost\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> ftp proxy host\n\n\n# proxyport\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> ftp proxy port\n\n\n# proxytype\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * possible values:\n   \n   * direct\n   * http\n   * socks\n\n> ftp proxy type\n\n\n# rootdir\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: true\n\n> is path is relative to root dir\n\n\n# username\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> username on the remote server\n\n\n# outputs\n\n\n# from\n\n * type: string\n\n> the fully-qualified uris that point to source data\n\n\n# to\n\n * type: string\n\n> the fully-qualified uris that point to destination path\n\n\n# definitions',charsets:{}},{title:"Downloads",frontmatter:{title:"Downloads",editLink:!1,description:"Download multiple files from FTPS server",icon:"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4KPHN2ZyB2ZXJzaW9uPSIxLjEiIGlkPSJDYWxxdWVfMSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIgeD0iMHB4IiB5PSIwcHgiCiAgICAgdmlld0JveD0iMCAwIDI0IDI0IiBzdHlsZT0iZW5hYmxlLWJhY2tncm91bmQ6bmV3IDAgMCAyNCAyNDsiIHhtbDpzcGFjZT0icHJlc2VydmUiPgo8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgoJLnN0MHtmaWxsOm5vbmU7fQoJLnN0MXtmaWxsOiMwRjE3MjQ7fQo8L3N0eWxlPgogICAgPGc+Cgk8cmVjdCB4PSI1IiB5PSI0IiBjbGFzcz0ic3QwIiB3aWR0aD0iMiIgaGVpZ2h0PSIyIi8+CiAgICAgICAgPHJlY3QgeD0iOSIgeT0iNCIgY2xhc3M9InN0MCIgd2lkdGg9IjEiIGhlaWdodD0iMiIvPgogICAgICAgIDxwYXRoIGNsYXNzPSJzdDEiIGQ9Ik00LDhoMTZjMC42LDAsMS0wLjQsMS0xVjNjMC0wLjYtMC40LTEtMS0xSDRDMy40LDIsMywyLjQsMywzdjRDMyw3LjYsMy40LDgsNCw4eiBNOSw0aDF2Mkg5VjR6IE01LDRoMnYySDVWNHoKCQkiLz4KICAgICAgICA8cGF0aCBjbGFzcz0ic3QxIiBkPSJNMTUsMTljMC0wLjYtMC40LTEtMS0xaC0xdi0yaDdjMC42LDAsMS0wLjQsMS0xdi00YzAtMC42LTAuNC0xLTEtMUg0Yy0wLjYsMC0xLDAuNC0xLDF2NGMwLDAuNiwwLjQsMSwxLDFoN3YyCgkJaC0xYy0wLjYsMC0xLDAuNC0xLDFIMnYyaDdjMCwwLjYsMC40LDEsMSwxaDRjMC42LDAsMS0wLjQsMS0xaDd2LTJIMTV6IE0xNi45LDEzLjZjMC0wLjEtMC4xLTAuMS0wLjItMC4yCgkJYy0wLjEtMC4xLTAuMi0wLjEtMC4zLTAuMXMtMC4yLTAuMS0wLjMtMC4xYy0wLjEsMC0wLjItMC4xLTAuNC0wLjFjLTAuMS0wLjEtMC4yLTAuMS0wLjMtMC4yYy0wLjEtMC4xLTAuMS0wLjItMC4yLTAuMwoJCWMwLTAuMS0wLjEtMC4yLTAuMS0wLjRjMC0wLjMsMC4xLTAuNSwwLjMtMC43YzAuMi0wLjIsMC41LTAuMywwLjktMC4zYzAuMiwwLDAuNCwwLDAuNiwwLjFzMC4zLDAuMSwwLjQsMC4xbC0wLjIsMC40CgkJYy0wLjEsMC0wLjItMC4xLTAuMy0wLjFzLTAuMy0wLjEtMC41LTAuMWMtMC4xLDAtMC4yLDAtMC4zLDBzLTAuMiwwLjEtMC4yLDAuMWMtMC4xLDAtMC4xLDAuMS0wLjEsMC4yYzAsMC4xLTAuMSwwLjEtMC4xLDAuMgoJCWMwLDAuMSwwLDAuMiwwLjEsMC4yYzAsMC4xLDAuMSwwLjEsMC4yLDAuMnMwLjEsMC4xLDAuMiwwLjFjMC4xLDAsMC4yLDAuMSwwLjMsMC4xYzAuMSwwLjEsMC4zLDAuMSwwLjQsMC4yCgkJYzAuMSwwLjEsMC4yLDAuMSwwLjMsMC4yczAuMiwwLjIsMC4yLDAuM2MwLjEsMC4xLDAuMSwwLjMsMC4xLDAuNGMwLDAuMy0wLjEsMC41LTAuMywwLjdzLTAuNSwwLjItMC45LDAuMmMtMC4xLDAtMC4zLDAtMC40LDAKCQljLTAuMSwwLTAuMiwwLTAuMy0wLjFzLTAuMi0wLjEtMC4yLTAuMWMtMC4xLDAtMC4xLTAuMS0wLjItMC4xbDAuMS0wLjRjMC4xLDAsMC4yLDAuMSwwLjQsMC4xYzAuMiwwLjEsMC4zLDAuMSwwLjYsMC4xCgkJYzAuNSwwLDAuOC0wLjIsMC44LTAuNUMxNywxMy43LDE2LjksMTMuNywxNi45LDEzLjZ6IE04LjksMTEuN0g3LjN2MWgxLjR2MC40SDcuM3YxLjZINi44di0zLjVoMi4xVjExLjd6IE0xMS44LDExLjdoLTEuMXYzaC0wLjUKCQl2LTNIOS4ydi0wLjRoMi43VjExLjd6IE0xMi44LDE0LjdoLTAuNXYtMy40YzAuMSwwLDAuMy0wLjEsMC41LTAuMWMwLjIsMCwwLjMsMCwwLjUsMGMwLjUsMCwwLjksMC4xLDEuMSwwLjNzMC40LDAuNSwwLjQsMC44CgkJYzAsMC4yLDAsMC40LTAuMSwwLjVjLTAuMSwwLjEtMC4yLDAuMy0wLjMsMC4zYy0wLjEsMC4xLTAuMywwLjItMC41LDAuMnMtMC40LDAuMS0wLjcsMC4xaC0wLjRWMTQuN3oiLz4KICAgICAgICA8cGF0aCBjbGFzcz0ic3QxIiBkPSJNMTQsMTIuOWMwLjEtMC4xLDAuMi0wLjEsMC4yLTAuMmMwLTAuMSwwLjEtMC4yLDAuMS0wLjNjMC0wLjEsMC0wLjItMC4xLTAuM3MtMC4xLTAuMi0wLjItMC4yCgkJYy0wLjEtMC4xLTAuMi0wLjEtMC4zLTAuMXMtMC4yLDAtMC40LDBjLTAuMiwwLTAuNCwwLTAuNSwwVjEzaDAuNGMwLjIsMCwwLjMsMCwwLjQsMEMxMy44LDEzLDEzLjksMTIuOSwxNCwxMi45eiIvPgo8L2c+Cjwvc3ZnPgo=",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Downloads"},{property:"og:description",content:"Download multiple files from FTPS server | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-fs/tasks/ftps/io.kestra.plugin.fs.ftps.Downloads.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Downloads"},{name:"twitter:description",content:"Download multiple files from FTPS server | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-fs/tasks/ftps/io.kestra.plugin.fs.ftps.Downloads.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-fs/tasks/ftps/io.kestra.plugin.fs.ftps.Downloads.html",relativePath:"plugins/plugin-fs/tasks/ftps/io.kestra.plugin.fs.ftps.Downloads.md",key:"v-2eb43963",path:"/plugins/plugin-fs/tasks/ftps/io.kestra.plugin.fs.ftps.Downloads.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:103},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:363},{level:3,title:"action",slug:"action",normalizedTitle:"action",charIndex:318},{level:3,title:"dataChannelProtectionLevel",slug:"datachannelprotectionlevel",normalizedTitle:"datachannelprotectionlevel",charIndex:519},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:82},{level:3,title:"host",slug:"host",normalizedTitle:"host",charIndex:234},{level:3,title:"mode",slug:"mode",normalizedTitle:"mode",charIndex:886},{level:3,title:"moveDirectory",slug:"movedirectory",normalizedTitle:"movedirectory",charIndex:331},{level:3,title:"passiveMode",slug:"passivemode",normalizedTitle:"passivemode",charIndex:1181},{level:3,title:"password",slug:"password",normalizedTitle:"password",charIndex:274},{level:3,title:"port",slug:"port",normalizedTitle:"port",charIndex:250},{level:3,title:"proxyHost",slug:"proxyhost",normalizedTitle:"proxyhost",charIndex:1481},{level:3,title:"proxyPort",slug:"proxyport",normalizedTitle:"proxyport",charIndex:1559},{level:3,title:"proxyType",slug:"proxytype",normalizedTitle:"proxytype",charIndex:1637},{level:3,title:"regExp",slug:"regexp",normalizedTitle:"regexp",charIndex:1775},{level:3,title:"rootDir",slug:"rootdir",normalizedTitle:"rootdir",charIndex:1868},{level:3,title:"username",slug:"username",normalizedTitle:"username",charIndex:260},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:2071},{level:3,title:"files",slug:"files",normalizedTitle:"files",charIndex:76},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:2180},{level:3,title:"File",slug:"file",normalizedTitle:"file",charIndex:2117}],headersStr:"Examples Properties action dataChannelProtectionLevel from host mode moveDirectory passiveMode password port proxyHost proxyPort proxyType regExp rootDir username Outputs files Definitions File",content:'Downloads\n\ntype: "io.kestra.plugin.fs.ftps.Downloads"\n\n\n> Download multiple files from FTPS server\n\n\n# Examples\n\n> Download a list of files and move it to an archive folders\n\nid: "downloads"\ntype: "io.kestra.plugin.fs.ftps.Downloads"\nhost: localhost\nport: 990\nusername: foo\npassword: pass\nfrom: "/in/"\ninterval: PT10S\naction: MOVE\nmoveDirectory: "/archive/"\n\n\n\n# Properties\n\n\n# action\n\n * Type: string\n\n * Dynamic: ✔️\n\n * Required: ❌\n\n * Possible Values:\n   \n   * MOVE\n   * DELETE\n\n> The action to do on find files\n\n\n# dataChannelProtectionLevel\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Default: P\n\n * Possible Values:\n   \n   * C\n   * S\n   * E\n   * P\n\n> Sets the data channel protection level (PROT).\n\n\n# from\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The directory to list\n\n\n# host\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Hostname of the remote server\n\n\n# mode\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Default: EXPLICIT\n\n * Possible Values:\n   \n   * IMPLICIT\n   * EXPLICIT\n\n> Sets FTPS mode, either "implicit" or "explicit".\n\n\n# moveDirectory\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The destination directory in case off MOVE\n\n\n# passiveMode\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: true\n\n> Enter into passive mode.\n\n\n# password\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Password on the remote server\n\n\n# port\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Default: 990\n\n> Port of the remote server\n\n\n# proxyHost\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> FTP proxy host\n\n\n# proxyPort\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> FTP proxy port\n\n\n# proxyType\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Possible Values:\n   \n   * DIRECT\n   * HTTP\n   * SOCKS\n\n> FTP proxy type\n\n\n# regExp\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> A regexp to filter on full path\n\n\n# rootDir\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: true\n\n> Is path is relative to root dir\n\n\n# username\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Username on the remote server\n\n\n# Outputs\n\n\n# files\n\n * Type: array\n * SubType: File\n * SubType: ====\n\n> The bucket of the downloaded file\n\n\n# Definitions\n\n\n# File\n\n# accessDate\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# fileType\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Possible Values:\n   \n   * FOLDER\n   * FILE\n   * FILE_OR_FOLDER\n   * IMAGINARY\n\n# flags\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n# groupId\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n# name\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# path\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# permissions\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n# size\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n# symbolicLink\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: false\n\n# updatedDate\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# userId\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌',normalizedContent:'downloads\n\ntype: "io.kestra.plugin.fs.ftps.downloads"\n\n\n> download multiple files from ftps server\n\n\n# examples\n\n> download a list of files and move it to an archive folders\n\nid: "downloads"\ntype: "io.kestra.plugin.fs.ftps.downloads"\nhost: localhost\nport: 990\nusername: foo\npassword: pass\nfrom: "/in/"\ninterval: pt10s\naction: move\nmovedirectory: "/archive/"\n\n\n\n# properties\n\n\n# action\n\n * type: string\n\n * dynamic: ✔️\n\n * required: ❌\n\n * possible values:\n   \n   * move\n   * delete\n\n> the action to do on find files\n\n\n# datachannelprotectionlevel\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * default: p\n\n * possible values:\n   \n   * c\n   * s\n   * e\n   * p\n\n> sets the data channel protection level (prot).\n\n\n# from\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the directory to list\n\n\n# host\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> hostname of the remote server\n\n\n# mode\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * default: explicit\n\n * possible values:\n   \n   * implicit\n   * explicit\n\n> sets ftps mode, either "implicit" or "explicit".\n\n\n# movedirectory\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the destination directory in case off move\n\n\n# passivemode\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: true\n\n> enter into passive mode.\n\n\n# password\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> password on the remote server\n\n\n# port\n\n * type: string\n * dynamic: ❓\n * required: ❌\n * default: 990\n\n> port of the remote server\n\n\n# proxyhost\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> ftp proxy host\n\n\n# proxyport\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> ftp proxy port\n\n\n# proxytype\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * possible values:\n   \n   * direct\n   * http\n   * socks\n\n> ftp proxy type\n\n\n# regexp\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> a regexp to filter on full path\n\n\n# rootdir\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: true\n\n> is path is relative to root dir\n\n\n# username\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> username on the remote server\n\n\n# outputs\n\n\n# files\n\n * type: array\n * subtype: file\n * subtype: ====\n\n> the bucket of the downloaded file\n\n\n# definitions\n\n\n# file\n\n# accessdate\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# filetype\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * possible values:\n   \n   * folder\n   * file\n   * file_or_folder\n   * imaginary\n\n# flags\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n# groupid\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n# name\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# path\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# permissions\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n# size\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n# symboliclink\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: false\n\n# updateddate\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# userid\n\n * type: integer\n * dynamic: ❓\n * required: ❌',charsets:{}},{title:"List",frontmatter:{title:"List",editLink:!1,description:"List files from FTPS server directory",icon:"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4KPHN2ZyB2ZXJzaW9uPSIxLjEiIGlkPSJDYWxxdWVfMSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIgeD0iMHB4IiB5PSIwcHgiCiAgICAgdmlld0JveD0iMCAwIDI0IDI0IiBzdHlsZT0iZW5hYmxlLWJhY2tncm91bmQ6bmV3IDAgMCAyNCAyNDsiIHhtbDpzcGFjZT0icHJlc2VydmUiPgo8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgoJLnN0MHtmaWxsOm5vbmU7fQoJLnN0MXtmaWxsOiMwRjE3MjQ7fQo8L3N0eWxlPgogICAgPGc+Cgk8cmVjdCB4PSI1IiB5PSI0IiBjbGFzcz0ic3QwIiB3aWR0aD0iMiIgaGVpZ2h0PSIyIi8+CiAgICAgICAgPHJlY3QgeD0iOSIgeT0iNCIgY2xhc3M9InN0MCIgd2lkdGg9IjEiIGhlaWdodD0iMiIvPgogICAgICAgIDxwYXRoIGNsYXNzPSJzdDEiIGQ9Ik00LDhoMTZjMC42LDAsMS0wLjQsMS0xVjNjMC0wLjYtMC40LTEtMS0xSDRDMy40LDIsMywyLjQsMywzdjRDMyw3LjYsMy40LDgsNCw4eiBNOSw0aDF2Mkg5VjR6IE01LDRoMnYySDVWNHoKCQkiLz4KICAgICAgICA8cGF0aCBjbGFzcz0ic3QxIiBkPSJNMTUsMTljMC0wLjYtMC40LTEtMS0xaC0xdi0yaDdjMC42LDAsMS0wLjQsMS0xdi00YzAtMC42LTAuNC0xLTEtMUg0Yy0wLjYsMC0xLDAuNC0xLDF2NGMwLDAuNiwwLjQsMSwxLDFoN3YyCgkJaC0xYy0wLjYsMC0xLDAuNC0xLDFIMnYyaDdjMCwwLjYsMC40LDEsMSwxaDRjMC42LDAsMS0wLjQsMS0xaDd2LTJIMTV6IE0xNi45LDEzLjZjMC0wLjEtMC4xLTAuMS0wLjItMC4yCgkJYy0wLjEtMC4xLTAuMi0wLjEtMC4zLTAuMXMtMC4yLTAuMS0wLjMtMC4xYy0wLjEsMC0wLjItMC4xLTAuNC0wLjFjLTAuMS0wLjEtMC4yLTAuMS0wLjMtMC4yYy0wLjEtMC4xLTAuMS0wLjItMC4yLTAuMwoJCWMwLTAuMS0wLjEtMC4yLTAuMS0wLjRjMC0wLjMsMC4xLTAuNSwwLjMtMC43YzAuMi0wLjIsMC41LTAuMywwLjktMC4zYzAuMiwwLDAuNCwwLDAuNiwwLjFzMC4zLDAuMSwwLjQsMC4xbC0wLjIsMC40CgkJYy0wLjEsMC0wLjItMC4xLTAuMy0wLjFzLTAuMy0wLjEtMC41LTAuMWMtMC4xLDAtMC4yLDAtMC4zLDBzLTAuMiwwLjEtMC4yLDAuMWMtMC4xLDAtMC4xLDAuMS0wLjEsMC4yYzAsMC4xLTAuMSwwLjEtMC4xLDAuMgoJCWMwLDAuMSwwLDAuMiwwLjEsMC4yYzAsMC4xLDAuMSwwLjEsMC4yLDAuMnMwLjEsMC4xLDAuMiwwLjFjMC4xLDAsMC4yLDAuMSwwLjMsMC4xYzAuMSwwLjEsMC4zLDAuMSwwLjQsMC4yCgkJYzAuMSwwLjEsMC4yLDAuMSwwLjMsMC4yczAuMiwwLjIsMC4yLDAuM2MwLjEsMC4xLDAuMSwwLjMsMC4xLDAuNGMwLDAuMy0wLjEsMC41LTAuMywwLjdzLTAuNSwwLjItMC45LDAuMmMtMC4xLDAtMC4zLDAtMC40LDAKCQljLTAuMSwwLTAuMiwwLTAuMy0wLjFzLTAuMi0wLjEtMC4yLTAuMWMtMC4xLDAtMC4xLTAuMS0wLjItMC4xbDAuMS0wLjRjMC4xLDAsMC4yLDAuMSwwLjQsMC4xYzAuMiwwLjEsMC4zLDAuMSwwLjYsMC4xCgkJYzAuNSwwLDAuOC0wLjIsMC44LTAuNUMxNywxMy43LDE2LjksMTMuNywxNi45LDEzLjZ6IE04LjksMTEuN0g3LjN2MWgxLjR2MC40SDcuM3YxLjZINi44di0zLjVoMi4xVjExLjd6IE0xMS44LDExLjdoLTEuMXYzaC0wLjUKCQl2LTNIOS4ydi0wLjRoMi43VjExLjd6IE0xMi44LDE0LjdoLTAuNXYtMy40YzAuMSwwLDAuMy0wLjEsMC41LTAuMWMwLjIsMCwwLjMsMCwwLjUsMGMwLjUsMCwwLjksMC4xLDEuMSwwLjNzMC40LDAuNSwwLjQsMC44CgkJYzAsMC4yLDAsMC40LTAuMSwwLjVjLTAuMSwwLjEtMC4yLDAuMy0wLjMsMC4zYy0wLjEsMC4xLTAuMywwLjItMC41LDAuMnMtMC40LDAuMS0wLjcsMC4xaC0wLjRWMTQuN3oiLz4KICAgICAgICA8cGF0aCBjbGFzcz0ic3QxIiBkPSJNMTQsMTIuOWMwLjEtMC4xLDAuMi0wLjEsMC4yLTAuMmMwLTAuMSwwLjEtMC4yLDAuMS0wLjNjMC0wLjEsMC0wLjItMC4xLTAuM3MtMC4xLTAuMi0wLjItMC4yCgkJYy0wLjEtMC4xLTAuMi0wLjEtMC4zLTAuMXMtMC4yLDAtMC40LDBjLTAuMiwwLTAuNCwwLTAuNSwwVjEzaDAuNGMwLjIsMCwwLjMsMCwwLjQsMEMxMy44LDEzLDEzLjksMTIuOSwxNCwxMi45eiIvPgo8L2c+Cjwvc3ZnPgo=",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"List"},{property:"og:description",content:"List files from FTPS server directory | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-fs/tasks/ftps/io.kestra.plugin.fs.ftps.List.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"List"},{name:"twitter:description",content:"List files from FTPS server directory | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-fs/tasks/ftps/io.kestra.plugin.fs.ftps.List.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-fs/tasks/ftps/io.kestra.plugin.fs.ftps.List.html",relativePath:"plugins/plugin-fs/tasks/ftps/io.kestra.plugin.fs.ftps.List.md",key:"v-301a84ae",path:"/plugins/plugin-fs/tasks/ftps/io.kestra.plugin.fs.ftps.List.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:90},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:266},{level:3,title:"dataChannelProtectionLevel",slug:"datachannelprotectionlevel",normalizedTitle:"datachannelprotectionlevel",charIndex:281},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:59},{level:3,title:"host",slug:"host",normalizedTitle:"host",charIndex:149},{level:3,title:"mode",slug:"mode",normalizedTitle:"mode",charIndex:669},{level:3,title:"passiveMode",slug:"passivemode",normalizedTitle:"passivemode",charIndex:853},{level:3,title:"password",slug:"password",normalizedTitle:"password",charIndex:189},{level:3,title:"port",slug:"port",normalizedTitle:"port",charIndex:165},{level:3,title:"proxyHost",slug:"proxyhost",normalizedTitle:"proxyhost",charIndex:1153},{level:3,title:"proxyPort",slug:"proxyport",normalizedTitle:"proxyport",charIndex:1231},{level:3,title:"proxyType",slug:"proxytype",normalizedTitle:"proxytype",charIndex:1309},{level:3,title:"regExp",slug:"regexp",normalizedTitle:"regexp",charIndex:226},{level:3,title:"rootDir",slug:"rootdir",normalizedTitle:"rootdir",charIndex:1540},{level:3,title:"username",slug:"username",normalizedTitle:"username",charIndex:175},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1743},{level:3,title:"files",slug:"files",normalizedTitle:"files",charIndex:53},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:1819},{level:3,title:"File",slug:"file",normalizedTitle:"file",charIndex:1789}],headersStr:"Examples Properties dataChannelProtectionLevel from host mode passiveMode password port proxyHost proxyPort proxyType regExp rootDir username Outputs files Definitions File",content:'List\n\ntype: "io.kestra.plugin.fs.ftps.List"\n\n\n> List files from FTPS server directory\n\n\n# Examples\n\nid: "list"\ntype: "io.kestra.plugin.fs.ftps.List"\nhost: localhost\nport: 990\nusername: foo\npassword: pass\nfrom: "/upload/dir1/"\nregExp: ".*\\/dir1\\/.*\\.(yaml|yml)"\n\n\n\n# Properties\n\n\n# dataChannelProtectionLevel\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Default: P\n\n * Possible Values:\n   \n   * C\n   * S\n   * E\n   * P\n\n> Sets the data channel protection level (PROT).\n\n\n# from\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The fully-qualified URIs that point to path\n\n\n# host\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Hostname of the remote server\n\n\n# mode\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Default: EXPLICIT\n\n * Possible Values:\n   \n   * IMPLICIT\n   * EXPLICIT\n\n> Sets FTPS mode, either "implicit" or "explicit".\n\n\n# passiveMode\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: true\n\n> Enter into passive mode.\n\n\n# password\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Password on the remote server\n\n\n# port\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Default: 990\n\n> Port of the remote server\n\n\n# proxyHost\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> FTP proxy host\n\n\n# proxyPort\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> FTP proxy port\n\n\n# proxyType\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Possible Values:\n   \n   * DIRECT\n   * HTTP\n   * SOCKS\n\n> FTP proxy type\n\n\n# regExp\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> A regexp to filter on full path\n\n\n# rootDir\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: true\n\n> Is path is relative to root dir\n\n\n# username\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Username on the remote server\n\n\n# Outputs\n\n\n# files\n\n * Type: array\n * SubType: File\n\n> The list of files\n\n\n# Definitions\n\n\n# File\n\n# accessDate\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# fileType\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Possible Values:\n   \n   * FOLDER\n   * FILE\n   * FILE_OR_FOLDER\n   * IMAGINARY\n\n# flags\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n# groupId\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n# name\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# path\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# permissions\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n# size\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n# symbolicLink\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: false\n\n# updatedDate\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# userId\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌',normalizedContent:'list\n\ntype: "io.kestra.plugin.fs.ftps.list"\n\n\n> list files from ftps server directory\n\n\n# examples\n\nid: "list"\ntype: "io.kestra.plugin.fs.ftps.list"\nhost: localhost\nport: 990\nusername: foo\npassword: pass\nfrom: "/upload/dir1/"\nregexp: ".*\\/dir1\\/.*\\.(yaml|yml)"\n\n\n\n# properties\n\n\n# datachannelprotectionlevel\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * default: p\n\n * possible values:\n   \n   * c\n   * s\n   * e\n   * p\n\n> sets the data channel protection level (prot).\n\n\n# from\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the fully-qualified uris that point to path\n\n\n# host\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> hostname of the remote server\n\n\n# mode\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * default: explicit\n\n * possible values:\n   \n   * implicit\n   * explicit\n\n> sets ftps mode, either "implicit" or "explicit".\n\n\n# passivemode\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: true\n\n> enter into passive mode.\n\n\n# password\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> password on the remote server\n\n\n# port\n\n * type: string\n * dynamic: ❓\n * required: ❌\n * default: 990\n\n> port of the remote server\n\n\n# proxyhost\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> ftp proxy host\n\n\n# proxyport\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> ftp proxy port\n\n\n# proxytype\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * possible values:\n   \n   * direct\n   * http\n   * socks\n\n> ftp proxy type\n\n\n# regexp\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> a regexp to filter on full path\n\n\n# rootdir\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: true\n\n> is path is relative to root dir\n\n\n# username\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> username on the remote server\n\n\n# outputs\n\n\n# files\n\n * type: array\n * subtype: file\n\n> the list of files\n\n\n# definitions\n\n\n# file\n\n# accessdate\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# filetype\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * possible values:\n   \n   * folder\n   * file\n   * file_or_folder\n   * imaginary\n\n# flags\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n# groupid\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n# name\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# path\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# permissions\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n# size\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n# symboliclink\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: false\n\n# updateddate\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# userid\n\n * type: integer\n * dynamic: ❓\n * required: ❌',charsets:{cjk:!0}},{title:"contains",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"contains"},{property:"og:description",content:"contains | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/operator/contains.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"contains"},{name:"twitter:description",content:"contains | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/operator/contains.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/operator/contains.html",relativePath:"docs/developer-guide/variables/operator/contains.md",key:"v-c8549002",path:"/docs/developer-guide/variables/operator/contains.html",lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:null,content:'# contains\n\nThe contains operator can be used to determine if a collection, map, or array contains a particular item.\n\n{% if ["apple", "pear", "banana"] contains "apple" %}\n\t...\n{% endif %}\n\n\nWhen using maps, the contains operator checks for an existing key.\n\n{% if {"apple":"red", "banana":"yellow"} contains "banana" %}\n\t...\n{% endif %}\n\n\nThe operator can be used to look for multiple items at once:\n\n{% if ["apple", "pear", "banana", "peach"] contains ["apple", "peach"] %}\n\t...\n{% endif %}\n',normalizedContent:'# contains\n\nthe contains operator can be used to determine if a collection, map, or array contains a particular item.\n\n{% if ["apple", "pear", "banana"] contains "apple" %}\n\t...\n{% endif %}\n\n\nwhen using maps, the contains operator checks for an existing key.\n\n{% if {"apple":"red", "banana":"yellow"} contains "banana" %}\n\t...\n{% endif %}\n\n\nthe operator can be used to look for multiple items at once:\n\n{% if ["apple", "pear", "banana", "peach"] contains ["apple", "peach"] %}\n\t...\n{% endif %}\n',charsets:{}},{title:"Upload",frontmatter:{title:"Upload",editLink:!1,description:"Upload a file to a FTPS server",icon:"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4KPHN2ZyB2ZXJzaW9uPSIxLjEiIGlkPSJDYWxxdWVfMSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIgeD0iMHB4IiB5PSIwcHgiCiAgICAgdmlld0JveD0iMCAwIDI0IDI0IiBzdHlsZT0iZW5hYmxlLWJhY2tncm91bmQ6bmV3IDAgMCAyNCAyNDsiIHhtbDpzcGFjZT0icHJlc2VydmUiPgo8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgoJLnN0MHtmaWxsOm5vbmU7fQoJLnN0MXtmaWxsOiMwRjE3MjQ7fQo8L3N0eWxlPgogICAgPGc+Cgk8cmVjdCB4PSI1IiB5PSI0IiBjbGFzcz0ic3QwIiB3aWR0aD0iMiIgaGVpZ2h0PSIyIi8+CiAgICAgICAgPHJlY3QgeD0iOSIgeT0iNCIgY2xhc3M9InN0MCIgd2lkdGg9IjEiIGhlaWdodD0iMiIvPgogICAgICAgIDxwYXRoIGNsYXNzPSJzdDEiIGQ9Ik00LDhoMTZjMC42LDAsMS0wLjQsMS0xVjNjMC0wLjYtMC40LTEtMS0xSDRDMy40LDIsMywyLjQsMywzdjRDMyw3LjYsMy40LDgsNCw4eiBNOSw0aDF2Mkg5VjR6IE01LDRoMnYySDVWNHoKCQkiLz4KICAgICAgICA8cGF0aCBjbGFzcz0ic3QxIiBkPSJNMTUsMTljMC0wLjYtMC40LTEtMS0xaC0xdi0yaDdjMC42LDAsMS0wLjQsMS0xdi00YzAtMC42LTAuNC0xLTEtMUg0Yy0wLjYsMC0xLDAuNC0xLDF2NGMwLDAuNiwwLjQsMSwxLDFoN3YyCgkJaC0xYy0wLjYsMC0xLDAuNC0xLDFIMnYyaDdjMCwwLjYsMC40LDEsMSwxaDRjMC42LDAsMS0wLjQsMS0xaDd2LTJIMTV6IE0xNi45LDEzLjZjMC0wLjEtMC4xLTAuMS0wLjItMC4yCgkJYy0wLjEtMC4xLTAuMi0wLjEtMC4zLTAuMXMtMC4yLTAuMS0wLjMtMC4xYy0wLjEsMC0wLjItMC4xLTAuNC0wLjFjLTAuMS0wLjEtMC4yLTAuMS0wLjMtMC4yYy0wLjEtMC4xLTAuMS0wLjItMC4yLTAuMwoJCWMwLTAuMS0wLjEtMC4yLTAuMS0wLjRjMC0wLjMsMC4xLTAuNSwwLjMtMC43YzAuMi0wLjIsMC41LTAuMywwLjktMC4zYzAuMiwwLDAuNCwwLDAuNiwwLjFzMC4zLDAuMSwwLjQsMC4xbC0wLjIsMC40CgkJYy0wLjEsMC0wLjItMC4xLTAuMy0wLjFzLTAuMy0wLjEtMC41LTAuMWMtMC4xLDAtMC4yLDAtMC4zLDBzLTAuMiwwLjEtMC4yLDAuMWMtMC4xLDAtMC4xLDAuMS0wLjEsMC4yYzAsMC4xLTAuMSwwLjEtMC4xLDAuMgoJCWMwLDAuMSwwLDAuMiwwLjEsMC4yYzAsMC4xLDAuMSwwLjEsMC4yLDAuMnMwLjEsMC4xLDAuMiwwLjFjMC4xLDAsMC4yLDAuMSwwLjMsMC4xYzAuMSwwLjEsMC4zLDAuMSwwLjQsMC4yCgkJYzAuMSwwLjEsMC4yLDAuMSwwLjMsMC4yczAuMiwwLjIsMC4yLDAuM2MwLjEsMC4xLDAuMSwwLjMsMC4xLDAuNGMwLDAuMy0wLjEsMC41LTAuMywwLjdzLTAuNSwwLjItMC45LDAuMmMtMC4xLDAtMC4zLDAtMC40LDAKCQljLTAuMSwwLTAuMiwwLTAuMy0wLjFzLTAuMi0wLjEtMC4yLTAuMWMtMC4xLDAtMC4xLTAuMS0wLjItMC4xbDAuMS0wLjRjMC4xLDAsMC4yLDAuMSwwLjQsMC4xYzAuMiwwLjEsMC4zLDAuMSwwLjYsMC4xCgkJYzAuNSwwLDAuOC0wLjIsMC44LTAuNUMxNywxMy43LDE2LjksMTMuNywxNi45LDEzLjZ6IE04LjksMTEuN0g3LjN2MWgxLjR2MC40SDcuM3YxLjZINi44di0zLjVoMi4xVjExLjd6IE0xMS44LDExLjdoLTEuMXYzaC0wLjUKCQl2LTNIOS4ydi0wLjRoMi43VjExLjd6IE0xMi44LDE0LjdoLTAuNXYtMy40YzAuMSwwLDAuMy0wLjEsMC41LTAuMWMwLjIsMCwwLjMsMCwwLjUsMGMwLjUsMCwwLjksMC4xLDEuMSwwLjNzMC40LDAuNSwwLjQsMC44CgkJYzAsMC4yLDAsMC40LTAuMSwwLjVjLTAuMSwwLjEtMC4yLDAuMy0wLjMsMC4zYy0wLjEsMC4xLTAuMywwLjItMC41LDAuMnMtMC40LDAuMS0wLjcsMC4xaC0wLjRWMTQuN3oiLz4KICAgICAgICA8cGF0aCBjbGFzcz0ic3QxIiBkPSJNMTQsMTIuOWMwLjEtMC4xLDAuMi0wLjEsMC4yLTAuMmMwLTAuMSwwLjEtMC4yLDAuMS0wLjNjMC0wLjEsMC0wLjItMC4xLTAuM3MtMC4xLTAuMi0wLjItMC4yCgkJYy0wLjEtMC4xLTAuMi0wLjEtMC4zLTAuMXMtMC4yLDAtMC40LDBjLTAuMiwwLTAuNCwwLTAuNSwwVjEzaDAuNGMwLjIsMCwwLjMsMCwwLjQsMEMxMy44LDEzLDEzLjksMTIuOSwxNCwxMi45eiIvPgo8L2c+Cjwvc3ZnPgo=",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Upload"},{property:"og:description",content:"Upload a file to a FTPS server | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-fs/tasks/ftps/io.kestra.plugin.fs.ftps.Upload.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Upload"},{name:"twitter:description",content:"Upload a file to a FTPS server | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-fs/tasks/ftps/io.kestra.plugin.fs.ftps.Upload.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-fs/tasks/ftps/io.kestra.plugin.fs.ftps.Upload.html",relativePath:"plugins/plugin-fs/tasks/ftps/io.kestra.plugin.fs.ftps.Upload.md",key:"v-66971463",path:"/plugins/plugin-fs/tasks/ftps/io.kestra.plugin.fs.ftps.Upload.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:87},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:271},{level:3,title:"dataChannelProtectionLevel",slug:"datachannelprotectionlevel",normalizedTitle:"datachannelprotectionlevel",charIndex:286},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:205},{level:3,title:"host",slug:"host",normalizedTitle:"host",charIndex:150},{level:3,title:"mode",slug:"mode",normalizedTitle:"mode",charIndex:652},{level:3,title:"passiveMode",slug:"passivemode",normalizedTitle:"passivemode",charIndex:836},{level:3,title:"password",slug:"password",normalizedTitle:"password",charIndex:190},{level:3,title:"port",slug:"port",normalizedTitle:"port",charIndex:166},{level:3,title:"proxyHost",slug:"proxyhost",normalizedTitle:"proxyhost",charIndex:1136},{level:3,title:"proxyPort",slug:"proxyport",normalizedTitle:"proxyport",charIndex:1214},{level:3,title:"proxyType",slug:"proxytype",normalizedTitle:"proxytype",charIndex:1292},{level:3,title:"rootDir",slug:"rootdir",normalizedTitle:"rootdir",charIndex:1430},{level:3,title:"to",slug:"to",normalizedTitle:"to",charIndex:66},{level:3,title:"username",slug:"username",normalizedTitle:"username",charIndex:176},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1711},{level:3,title:"from",slug:"from-2",normalizedTitle:"from",charIndex:205},{level:3,title:"to",slug:"to-2",normalizedTitle:"to",charIndex:66},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:1886}],headersStr:"Examples Properties dataChannelProtectionLevel from host mode passiveMode password port proxyHost proxyPort proxyType rootDir to username Outputs from to Definitions",content:'Upload\n\ntype: "io.kestra.plugin.fs.ftps.Upload"\n\n\n> Upload a file to a FTPS server\n\n\n# Examples\n\nid: "upload"\ntype: "io.kestra.plugin.fs.ftps.Upload"\nhost: localhost\nport: 990\nusername: foo\npassword: pass\nfrom: "{{ outputs.taskid.uri }}"\nto: "/upload/dir2/file.txt"\n\n\n\n# Properties\n\n\n# dataChannelProtectionLevel\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Default: P\n\n * Possible Values:\n   \n   * C\n   * S\n   * E\n   * P\n\n> Sets the data channel protection level (PROT).\n\n\n# from\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The file path to copy\n\n\n# host\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Hostname of the remote server\n\n\n# mode\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Default: EXPLICIT\n\n * Possible Values:\n   \n   * IMPLICIT\n   * EXPLICIT\n\n> Sets FTPS mode, either "implicit" or "explicit".\n\n\n# passiveMode\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: true\n\n> Enter into passive mode.\n\n\n# password\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Password on the remote server\n\n\n# port\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Default: 990\n\n> Port of the remote server\n\n\n# proxyHost\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> FTP proxy host\n\n\n# proxyPort\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> FTP proxy port\n\n\n# proxyType\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Possible Values:\n   \n   * DIRECT\n   * HTTP\n   * SOCKS\n\n> FTP proxy type\n\n\n# rootDir\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: true\n\n> Is path is relative to root dir\n\n\n# to\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The destination path\n\n\n# username\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Username on the remote server\n\n\n# Outputs\n\n\n# from\n\n * Type: string\n\n> The fully-qualified URIs that point to source data\n\n\n# to\n\n * Type: string\n\n> The fully-qualified URIs that point to destination path\n\n\n# Definitions',normalizedContent:'upload\n\ntype: "io.kestra.plugin.fs.ftps.upload"\n\n\n> upload a file to a ftps server\n\n\n# examples\n\nid: "upload"\ntype: "io.kestra.plugin.fs.ftps.upload"\nhost: localhost\nport: 990\nusername: foo\npassword: pass\nfrom: "{{ outputs.taskid.uri }}"\nto: "/upload/dir2/file.txt"\n\n\n\n# properties\n\n\n# datachannelprotectionlevel\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * default: p\n\n * possible values:\n   \n   * c\n   * s\n   * e\n   * p\n\n> sets the data channel protection level (prot).\n\n\n# from\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the file path to copy\n\n\n# host\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> hostname of the remote server\n\n\n# mode\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * default: explicit\n\n * possible values:\n   \n   * implicit\n   * explicit\n\n> sets ftps mode, either "implicit" or "explicit".\n\n\n# passivemode\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: true\n\n> enter into passive mode.\n\n\n# password\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> password on the remote server\n\n\n# port\n\n * type: string\n * dynamic: ❓\n * required: ❌\n * default: 990\n\n> port of the remote server\n\n\n# proxyhost\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> ftp proxy host\n\n\n# proxyport\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> ftp proxy port\n\n\n# proxytype\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * possible values:\n   \n   * direct\n   * http\n   * socks\n\n> ftp proxy type\n\n\n# rootdir\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: true\n\n> is path is relative to root dir\n\n\n# to\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the destination path\n\n\n# username\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> username on the remote server\n\n\n# outputs\n\n\n# from\n\n * type: string\n\n> the fully-qualified uris that point to source data\n\n\n# to\n\n * type: string\n\n> the fully-qualified uris that point to destination path\n\n\n# definitions',charsets:{}},{title:"Download",frontmatter:{title:"Download",editLink:!1,description:"Download file from http server",icon:"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4KPHN2ZyB2ZXJzaW9uPSIxLjEiIGlkPSJDYWxxdWVfMSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIgeD0iMHB4IiB5PSIwcHgiCiAgICAgdmlld0JveD0iMCAwIDI0IDI0IiBzdHlsZT0iZW5hYmxlLWJhY2tncm91bmQ6bmV3IDAgMCAyNCAyNDsiIHhtbDpzcGFjZT0icHJlc2VydmUiPgo8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgoJLnN0MHtmaWxsOm5vbmU7fQoJLnN0MXtmaWxsOiMwRjE3MjQ7fQo8L3N0eWxlPgogICAgPGc+Cgk8cmVjdCB4PSI1IiB5PSI0IiBjbGFzcz0ic3QwIiB3aWR0aD0iMiIgaGVpZ2h0PSIyIi8+CiAgICAgICAgPHJlY3QgeD0iOSIgeT0iNCIgY2xhc3M9InN0MCIgd2lkdGg9IjEiIGhlaWdodD0iMiIvPgogICAgICAgIDxwYXRoIGNsYXNzPSJzdDEiIGQ9Ik00LDhoMTZjMC42LDAsMS0wLjQsMS0xVjNjMC0wLjYtMC40LTEtMS0xSDRDMy40LDIsMywyLjQsMywzdjRDMyw3LjYsMy40LDgsNCw4eiBNOSw0aDF2Mkg5VjR6IE01LDRoMnYySDVWNHoKCQkiLz4KICAgICAgICA8cGF0aCBjbGFzcz0ic3QxIiBkPSJNMTUsMTljMC0wLjYtMC40LTEtMS0xaC0xdi0yaDdjMC42LDAsMS0wLjQsMS0xdi00YzAtMC42LTAuNC0xLTEtMUg0Yy0wLjYsMC0xLDAuNC0xLDF2NGMwLDAuNiwwLjQsMSwxLDFoN3YyCgkJaC0xYy0wLjYsMC0xLDAuNC0xLDFIMnYyaDdjMCwwLjYsMC40LDEsMSwxaDRjMC42LDAsMS0wLjQsMS0xaDd2LTJIMTV6IE0xNS41LDExLjNjMC4xLDAsMC4zLTAuMSwwLjUtMC4xYzAuMiwwLDAuMywwLDAuNSwwCgkJYzAuNSwwLDAuOSwwLjEsMS4xLDAuM1MxOCwxMiwxOCwxMi4zYzAsMC4yLDAsMC40LTAuMSwwLjVjLTAuMSwwLjEtMC4yLDAuMy0wLjMsMC4zYy0wLjEsMC4xLTAuMywwLjItMC41LDAuMnMtMC40LDAuMS0wLjcsMC4xSDE2CgkJdjEuM2gtMC41VjExLjN6IE04LjksMTQuN0g4LjR2LTEuNkg2Ljd2MS42SDYuMnYtMy41aDAuNXYxLjRoMS43di0xLjRoMC41VjE0Ljd6IE0xMi4xLDExLjdIMTF2M2gtMC41di0zSDkuNHYtMC40aDIuN1YxMS43egoJCSBNMTIuNCwxMS4ySDE1djAuNGgtMS4xdjNoLTAuNXYtM2gtMS4xVjExLjJ6Ii8+CiAgICAgICAgPHBhdGggY2xhc3M9InN0MSIgZD0iTTE2LjgsMTNjMC4xLDAsMC4yLTAuMSwwLjMtMC4xczAuMi0wLjEsMC4yLTAuMmMwLTAuMSwwLjEtMC4yLDAuMS0wLjNjMC0wLjEsMC0wLjItMC4xLTAuM3MtMC4xLTAuMi0wLjItMC4yCgkJYy0wLjEtMC4xLTAuMi0wLjEtMC4zLTAuMWMtMC4xLDAtMC4yLDAtMC40LDBjLTAuMiwwLTAuNCwwLTAuNSwwVjEzaDAuNEMxNi42LDEzLDE2LjcsMTMsMTYuOCwxM3oiLz4KPC9nPgo8L3N2Zz4K",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Download"},{property:"og:description",content:"Download file from http server | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-fs/tasks/http/io.kestra.plugin.fs.http.Download.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Download"},{name:"twitter:description",content:"Download file from http server | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-fs/tasks/http/io.kestra.plugin.fs.http.Download.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-fs/tasks/http/io.kestra.plugin.fs.http.Download.html",relativePath:"plugins/plugin-fs/tasks/http/io.kestra.plugin.fs.http.Download.md",key:"v-44eda015",path:"/plugins/plugin-fs/tasks/http/io.kestra.plugin.fs.http.Download.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:163},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:302},{level:3,title:"body",slug:"body",normalizedTitle:"body",charIndex:317},{level:3,title:"contentType",slug:"contenttype",normalizedTitle:"contenttype",charIndex:400},{level:3,title:"formData",slug:"formdata",normalizedTitle:"formdata",charIndex:491},{level:3,title:"headers",slug:"headers",normalizedTitle:"headers",charIndex:230},{level:3,title:"method",slug:"method",normalizedTitle:"method",charIndex:679},{level:3,title:"options",slug:"options",normalizedTitle:"options",charIndex:899},{level:3,title:"uri",slug:"uri",normalizedTitle:"uri",charIndex:266},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1114},{level:3,title:"code",slug:"code",normalizedTitle:"code",charIndex:1126},{level:3,title:"headers",slug:"headers-2",normalizedTitle:"headers",charIndex:230},{level:3,title:"uri",slug:"uri-2",normalizedTitle:"uri",charIndex:266},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:1325},{level:3,title:"RequestOptions",slug:"requestoptions",normalizedTitle:"requestoptions",charIndex:917},{level:3,title:"Charset",slug:"charset",normalizedTitle:"charset",charIndex:1837}],headersStr:"Examples Properties body contentType formData headers method options uri Outputs code headers uri Definitions RequestOptions Charset",content:'Download\n\ntype: "io.kestra.plugin.fs.http.Download"\n\n\n> Download file from http server\n\nThis task connects to http server and copy file to kestra file storage\n\n\n# Examples\n\nid: "download"\ntype: "io.kestra.plugin.fs.http.Download"\nheaders: \n  user-agent: "kestra-io"\nuri: "https://server.com/file"\n\n\n\n# Properties\n\n\n# body\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The full body as string\n\n\n# contentType\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The request content type\n\n\n# formData\n\n * Type: object\n * Dynamic: ✔️\n * Required: ❌\n\n> The form data to be send\n\n\n# headers\n\n * Type: object\n * Dynamic: ✔️\n * Required: ❌\n\n> The header to pass to current request\n\n\n# method\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ❌\n\n * Possible Values:\n   \n   * OPTIONS\n   * GET\n   * HEAD\n   * POST\n   * PUT\n   * DELETE\n   * TRACE\n   * CONNECT\n   * PATCH\n   * CUSTOM\n\n> The http method to use\n\n\n# options\n\n * Type: RequestOptions\n * Dynamic: ❓\n * Required: ❌\n\n> The http request options\n\n\n# uri\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The fully-qualified URIs that point to destination http server\n\n\n# Outputs\n\n\n# code\n\n * Type: integer\n\n> The status code of the response\n\n\n# headers\n\n * Type: object\n\n> The headers of the response\n\n\n# uri\n\n * Type: string\n\n> The url of the downloaded file on kestra storage\n\n\n# Definitions\n\n\n# RequestOptions\n\n# basicAuthPassword\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The basicAuth password.\n\n# basicAuthUser\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The basicAuth username.\n\n# connectTimeout\n\n * Type: string\n * Dynamic: ❌\n * Required: ❌\n * Format: duration\n\n> The connect timeout.\n\n# connectionPoolIdleTimeout\n\n * Type: string\n * Dynamic: ❌\n * Required: ❌\n * Default: 0.0\n * Format: duration\n\n> The idle timeout for connection in the client connection pool.\n\n# defaultCharset\n\n * Type: Charset\n * Dynamic: ❌\n * Required: ❌\n * Default: UTF-8\n\n> Sets the default charset to use.\n\n# followRedirects\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n * Default: true\n\n> Whether redirects should be followed.\n\n# logLevel\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ❌\n\n * Possible Values:\n   \n   * ALL\n   * TRACE\n   * DEBUG\n   * INFO\n   * WARN\n   * ERROR\n   * OFF\n   * NOT_SPECIFIED\n\n> The level to enable trace logging at.\n\n# maxContentLength\n\n * Type: integer\n * Dynamic: ❌\n * Required: ❌\n * Default: 10485760\n\n> Sets the maximum content length the client can consume.\n\n# proxyAddress\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The proxy to use.\n\n# proxyPassword\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The proxy password to use.\n\n# proxyPort\n\n * Type: integer\n * Dynamic: ❌\n * Required: ❌\n\n> The proxy port to use.\n\n# proxyType\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ❌\n\n * Default: DIRECT\n\n * Possible Values:\n   \n   * DIRECT\n   * HTTP\n   * SOCKS\n\n> The proxy type to use.\n\n# proxyUsername\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The proxy user to use.\n\n# readIdleTimeout\n\n * Type: string\n * Dynamic: ❌\n * Required: ❌\n * Default: 300.000000000\n * Format: duration\n\n> The default amount of time to allow read operation connections to remain idle.\n\n# readTimeout\n\n * Type: string\n * Dynamic: ❌\n * Required: ❌\n * Default: 10.000000000\n * Format: duration\n\n> The default read timeout.\n\n\n# Charset',normalizedContent:'download\n\ntype: "io.kestra.plugin.fs.http.download"\n\n\n> download file from http server\n\nthis task connects to http server and copy file to kestra file storage\n\n\n# examples\n\nid: "download"\ntype: "io.kestra.plugin.fs.http.download"\nheaders: \n  user-agent: "kestra-io"\nuri: "https://server.com/file"\n\n\n\n# properties\n\n\n# body\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the full body as string\n\n\n# contenttype\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the request content type\n\n\n# formdata\n\n * type: object\n * dynamic: ✔️\n * required: ❌\n\n> the form data to be send\n\n\n# headers\n\n * type: object\n * dynamic: ✔️\n * required: ❌\n\n> the header to pass to current request\n\n\n# method\n\n * type: string\n\n * dynamic: ❌\n\n * required: ❌\n\n * possible values:\n   \n   * options\n   * get\n   * head\n   * post\n   * put\n   * delete\n   * trace\n   * connect\n   * patch\n   * custom\n\n> the http method to use\n\n\n# options\n\n * type: requestoptions\n * dynamic: ❓\n * required: ❌\n\n> the http request options\n\n\n# uri\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the fully-qualified uris that point to destination http server\n\n\n# outputs\n\n\n# code\n\n * type: integer\n\n> the status code of the response\n\n\n# headers\n\n * type: object\n\n> the headers of the response\n\n\n# uri\n\n * type: string\n\n> the url of the downloaded file on kestra storage\n\n\n# definitions\n\n\n# requestoptions\n\n# basicauthpassword\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the basicauth password.\n\n# basicauthuser\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the basicauth username.\n\n# connecttimeout\n\n * type: string\n * dynamic: ❌\n * required: ❌\n * format: duration\n\n> the connect timeout.\n\n# connectionpoolidletimeout\n\n * type: string\n * dynamic: ❌\n * required: ❌\n * default: 0.0\n * format: duration\n\n> the idle timeout for connection in the client connection pool.\n\n# defaultcharset\n\n * type: charset\n * dynamic: ❌\n * required: ❌\n * default: utf-8\n\n> sets the default charset to use.\n\n# followredirects\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n * default: true\n\n> whether redirects should be followed.\n\n# loglevel\n\n * type: string\n\n * dynamic: ❌\n\n * required: ❌\n\n * possible values:\n   \n   * all\n   * trace\n   * debug\n   * info\n   * warn\n   * error\n   * off\n   * not_specified\n\n> the level to enable trace logging at.\n\n# maxcontentlength\n\n * type: integer\n * dynamic: ❌\n * required: ❌\n * default: 10485760\n\n> sets the maximum content length the client can consume.\n\n# proxyaddress\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the proxy to use.\n\n# proxypassword\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the proxy password to use.\n\n# proxyport\n\n * type: integer\n * dynamic: ❌\n * required: ❌\n\n> the proxy port to use.\n\n# proxytype\n\n * type: string\n\n * dynamic: ❌\n\n * required: ❌\n\n * default: direct\n\n * possible values:\n   \n   * direct\n   * http\n   * socks\n\n> the proxy type to use.\n\n# proxyusername\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the proxy user to use.\n\n# readidletimeout\n\n * type: string\n * dynamic: ❌\n * required: ❌\n * default: 300.000000000\n * format: duration\n\n> the default amount of time to allow read operation connections to remain idle.\n\n# readtimeout\n\n * type: string\n * dynamic: ❌\n * required: ❌\n * default: 10.000000000\n * format: duration\n\n> the default read timeout.\n\n\n# charset',charsets:{}},{title:"Request",frontmatter:{title:"Request",editLink:!1,description:"Request an http server",icon:"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4KPHN2ZyB2ZXJzaW9uPSIxLjEiIGlkPSJDYWxxdWVfMSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIgeD0iMHB4IiB5PSIwcHgiCiAgICAgdmlld0JveD0iMCAwIDI0IDI0IiBzdHlsZT0iZW5hYmxlLWJhY2tncm91bmQ6bmV3IDAgMCAyNCAyNDsiIHhtbDpzcGFjZT0icHJlc2VydmUiPgo8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgoJLnN0MHtmaWxsOm5vbmU7fQoJLnN0MXtmaWxsOiMwRjE3MjQ7fQo8L3N0eWxlPgogICAgPGc+Cgk8cmVjdCB4PSI1IiB5PSI0IiBjbGFzcz0ic3QwIiB3aWR0aD0iMiIgaGVpZ2h0PSIyIi8+CiAgICAgICAgPHJlY3QgeD0iOSIgeT0iNCIgY2xhc3M9InN0MCIgd2lkdGg9IjEiIGhlaWdodD0iMiIvPgogICAgICAgIDxwYXRoIGNsYXNzPSJzdDEiIGQ9Ik00LDhoMTZjMC42LDAsMS0wLjQsMS0xVjNjMC0wLjYtMC40LTEtMS0xSDRDMy40LDIsMywyLjQsMywzdjRDMyw3LjYsMy40LDgsNCw4eiBNOSw0aDF2Mkg5VjR6IE01LDRoMnYySDVWNHoKCQkiLz4KICAgICAgICA8cGF0aCBjbGFzcz0ic3QxIiBkPSJNMTUsMTljMC0wLjYtMC40LTEtMS0xaC0xdi0yaDdjMC42LDAsMS0wLjQsMS0xdi00YzAtMC42LTAuNC0xLTEtMUg0Yy0wLjYsMC0xLDAuNC0xLDF2NGMwLDAuNiwwLjQsMSwxLDFoN3YyCgkJaC0xYy0wLjYsMC0xLDAuNC0xLDFIMnYyaDdjMCwwLjYsMC40LDEsMSwxaDRjMC42LDAsMS0wLjQsMS0xaDd2LTJIMTV6IE0xNS41LDExLjNjMC4xLDAsMC4zLTAuMSwwLjUtMC4xYzAuMiwwLDAuMywwLDAuNSwwCgkJYzAuNSwwLDAuOSwwLjEsMS4xLDAuM1MxOCwxMiwxOCwxMi4zYzAsMC4yLDAsMC40LTAuMSwwLjVjLTAuMSwwLjEtMC4yLDAuMy0wLjMsMC4zYy0wLjEsMC4xLTAuMywwLjItMC41LDAuMnMtMC40LDAuMS0wLjcsMC4xSDE2CgkJdjEuM2gtMC41VjExLjN6IE04LjksMTQuN0g4LjR2LTEuNkg2Ljd2MS42SDYuMnYtMy41aDAuNXYxLjRoMS43di0xLjRoMC41VjE0Ljd6IE0xMi4xLDExLjdIMTF2M2gtMC41di0zSDkuNHYtMC40aDIuN1YxMS43egoJCSBNMTIuNCwxMS4ySDE1djAuNGgtMS4xdjNoLTAuNXYtM2gtMS4xVjExLjJ6Ii8+CiAgICAgICAgPHBhdGggY2xhc3M9InN0MSIgZD0iTTE2LjgsMTNjMC4xLDAsMC4yLTAuMSwwLjMtMC4xczAuMi0wLjEsMC4yLTAuMmMwLTAuMSwwLjEtMC4yLDAuMS0wLjNjMC0wLjEsMC0wLjItMC4xLTAuM3MtMC4xLTAuMi0wLjItMC4yCgkJYy0wLjEtMC4xLTAuMi0wLjEtMC4zLTAuMWMtMC4xLDAtMC4yLDAtMC40LDBjLTAuMiwwLTAuNCwwLTAuNSwwVjEzaDAuNEMxNi42LDEzLDE2LjcsMTMsMTYuOCwxM3oiLz4KPC9nPgo8L3N2Zz4K",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Request"},{property:"og:description",content:"Request an http server | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-fs/tasks/http/io.kestra.plugin.fs.http.Request.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Request"},{name:"twitter:description",content:"Request an http server | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-fs/tasks/http/io.kestra.plugin.fs.http.Request.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-fs/tasks/http/io.kestra.plugin.fs.http.Request.html",relativePath:"plugins/plugin-fs/tasks/http/io.kestra.plugin.fs.http.Request.md",key:"v-179b58e3",path:"/plugins/plugin-fs/tasks/http/io.kestra.plugin.fs.http.Request.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:175},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:660},{level:3,title:"allowFailed",slug:"allowfailed",normalizedTitle:"allowfailed",charIndex:675},{level:3,title:"body",slug:"body",normalizedTitle:"body",charIndex:817},{level:3,title:"contentType",slug:"contenttype",normalizedTitle:"contenttype",charIndex:582},{level:3,title:"formData",slug:"formdata",normalizedTitle:"formdata",charIndex:354},{level:3,title:"headers",slug:"headers",normalizedTitle:"headers",charIndex:303},{level:3,title:"method",slug:"method",normalizedTitle:"method",charIndex:339},{level:3,title:"options",slug:"options",normalizedTitle:"options",charIndex:1416},{level:3,title:"uri",slug:"uri",normalizedTitle:"uri",charIndex:271},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1631},{level:3,title:"body",slug:"body-2",normalizedTitle:"body",charIndex:817},{level:3,title:"code",slug:"code",normalizedTitle:"code",charIndex:786},{level:3,title:"headers",slug:"headers-2",normalizedTitle:"headers",charIndex:303},{level:3,title:"uri",slug:"uri-2",normalizedTitle:"uri",charIndex:271},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:1878},{level:3,title:"RequestOptions",slug:"requestoptions",normalizedTitle:"requestoptions",charIndex:1434},{level:3,title:"Charset",slug:"charset",normalizedTitle:"charset",charIndex:2390}],headersStr:"Examples Properties allowFailed body contentType formData headers method options uri Outputs body code headers uri Definitions RequestOptions Charset",content:'Request\n\ntype: "io.kestra.plugin.fs.http.Request"\n\n\n> Request an http server\n\nThis task connects to http server, request the provided url and store the response as output\n\n\n# Examples\n\n> Post request to a webserver\n\nid: "request"\ntype: "io.kestra.plugin.fs.http.Request"\nuri: "https://server.com/login"\nheaders: \n  user-agent: "kestra-io"\nmethod: "POST"\nformData:\n  user: "user"\n  password: "pass"\n\n\n> Post a multipart request to a webserver\n\nid: "request"\ntype: "io.kestra.plugin.fs.http.Request"\nuri: "https://server.com/upload"\nheaders: \n  user-agent: "kestra-io"\nmethod: "POST"\ncontentType: "multipart/form-data"\nformData:\n  user: "{{ inputs.file }}"\n\n\n\n# Properties\n\n\n# allowFailed\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: false\n\n> If true, allow failed response code (response code >=400)\n\n\n# body\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The full body as string\n\n\n# contentType\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The request content type\n\n\n# formData\n\n * Type: object\n * Dynamic: ✔️\n * Required: ❌\n\n> The form data to be send\n\n\n# headers\n\n * Type: object\n * Dynamic: ✔️\n * Required: ❌\n\n> The header to pass to current request\n\n\n# method\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ❌\n\n * Default: GET\n\n * Possible Values:\n   \n   * OPTIONS\n   * GET\n   * HEAD\n   * POST\n   * PUT\n   * DELETE\n   * TRACE\n   * CONNECT\n   * PATCH\n   * CUSTOM\n\n> The http method to use\n\n\n# options\n\n * Type: RequestOptions\n * Dynamic: ❓\n * Required: ❌\n\n> The http request options\n\n\n# uri\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The fully-qualified URIs that point to destination http server\n\n\n# Outputs\n\n\n# body\n\n * Type: string\n\n> The body of the response\n\n\n# code\n\n * Type: integer\n\n> The status code of the response\n\n\n# headers\n\n * Type: object\n\n> The headers of the response\n\n\n# uri\n\n * Type: string\n\n> The url of the current request\n\n\n# Definitions\n\n\n# RequestOptions\n\n# basicAuthPassword\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The basicAuth password.\n\n# basicAuthUser\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The basicAuth username.\n\n# connectTimeout\n\n * Type: string\n * Dynamic: ❌\n * Required: ❌\n * Format: duration\n\n> The connect timeout.\n\n# connectionPoolIdleTimeout\n\n * Type: string\n * Dynamic: ❌\n * Required: ❌\n * Default: 0.0\n * Format: duration\n\n> The idle timeout for connection in the client connection pool.\n\n# defaultCharset\n\n * Type: Charset\n * Dynamic: ❌\n * Required: ❌\n * Default: UTF-8\n\n> Sets the default charset to use.\n\n# followRedirects\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n * Default: true\n\n> Whether redirects should be followed.\n\n# logLevel\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ❌\n\n * Possible Values:\n   \n   * ALL\n   * TRACE\n   * DEBUG\n   * INFO\n   * WARN\n   * ERROR\n   * OFF\n   * NOT_SPECIFIED\n\n> The level to enable trace logging at.\n\n# maxContentLength\n\n * Type: integer\n * Dynamic: ❌\n * Required: ❌\n * Default: 10485760\n\n> Sets the maximum content length the client can consume.\n\n# proxyAddress\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The proxy to use.\n\n# proxyPassword\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The proxy password to use.\n\n# proxyPort\n\n * Type: integer\n * Dynamic: ❌\n * Required: ❌\n\n> The proxy port to use.\n\n# proxyType\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ❌\n\n * Default: DIRECT\n\n * Possible Values:\n   \n   * DIRECT\n   * HTTP\n   * SOCKS\n\n> The proxy type to use.\n\n# proxyUsername\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The proxy user to use.\n\n# readIdleTimeout\n\n * Type: string\n * Dynamic: ❌\n * Required: ❌\n * Default: 300.000000000\n * Format: duration\n\n> The default amount of time to allow read operation connections to remain idle.\n\n# readTimeout\n\n * Type: string\n * Dynamic: ❌\n * Required: ❌\n * Default: 10.000000000\n * Format: duration\n\n> The default read timeout.\n\n\n# Charset',normalizedContent:'request\n\ntype: "io.kestra.plugin.fs.http.request"\n\n\n> request an http server\n\nthis task connects to http server, request the provided url and store the response as output\n\n\n# examples\n\n> post request to a webserver\n\nid: "request"\ntype: "io.kestra.plugin.fs.http.request"\nuri: "https://server.com/login"\nheaders: \n  user-agent: "kestra-io"\nmethod: "post"\nformdata:\n  user: "user"\n  password: "pass"\n\n\n> post a multipart request to a webserver\n\nid: "request"\ntype: "io.kestra.plugin.fs.http.request"\nuri: "https://server.com/upload"\nheaders: \n  user-agent: "kestra-io"\nmethod: "post"\ncontenttype: "multipart/form-data"\nformdata:\n  user: "{{ inputs.file }}"\n\n\n\n# properties\n\n\n# allowfailed\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: false\n\n> if true, allow failed response code (response code >=400)\n\n\n# body\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the full body as string\n\n\n# contenttype\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the request content type\n\n\n# formdata\n\n * type: object\n * dynamic: ✔️\n * required: ❌\n\n> the form data to be send\n\n\n# headers\n\n * type: object\n * dynamic: ✔️\n * required: ❌\n\n> the header to pass to current request\n\n\n# method\n\n * type: string\n\n * dynamic: ❌\n\n * required: ❌\n\n * default: get\n\n * possible values:\n   \n   * options\n   * get\n   * head\n   * post\n   * put\n   * delete\n   * trace\n   * connect\n   * patch\n   * custom\n\n> the http method to use\n\n\n# options\n\n * type: requestoptions\n * dynamic: ❓\n * required: ❌\n\n> the http request options\n\n\n# uri\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the fully-qualified uris that point to destination http server\n\n\n# outputs\n\n\n# body\n\n * type: string\n\n> the body of the response\n\n\n# code\n\n * type: integer\n\n> the status code of the response\n\n\n# headers\n\n * type: object\n\n> the headers of the response\n\n\n# uri\n\n * type: string\n\n> the url of the current request\n\n\n# definitions\n\n\n# requestoptions\n\n# basicauthpassword\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the basicauth password.\n\n# basicauthuser\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the basicauth username.\n\n# connecttimeout\n\n * type: string\n * dynamic: ❌\n * required: ❌\n * format: duration\n\n> the connect timeout.\n\n# connectionpoolidletimeout\n\n * type: string\n * dynamic: ❌\n * required: ❌\n * default: 0.0\n * format: duration\n\n> the idle timeout for connection in the client connection pool.\n\n# defaultcharset\n\n * type: charset\n * dynamic: ❌\n * required: ❌\n * default: utf-8\n\n> sets the default charset to use.\n\n# followredirects\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n * default: true\n\n> whether redirects should be followed.\n\n# loglevel\n\n * type: string\n\n * dynamic: ❌\n\n * required: ❌\n\n * possible values:\n   \n   * all\n   * trace\n   * debug\n   * info\n   * warn\n   * error\n   * off\n   * not_specified\n\n> the level to enable trace logging at.\n\n# maxcontentlength\n\n * type: integer\n * dynamic: ❌\n * required: ❌\n * default: 10485760\n\n> sets the maximum content length the client can consume.\n\n# proxyaddress\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the proxy to use.\n\n# proxypassword\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the proxy password to use.\n\n# proxyport\n\n * type: integer\n * dynamic: ❌\n * required: ❌\n\n> the proxy port to use.\n\n# proxytype\n\n * type: string\n\n * dynamic: ❌\n\n * required: ❌\n\n * default: direct\n\n * possible values:\n   \n   * direct\n   * http\n   * socks\n\n> the proxy type to use.\n\n# proxyusername\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the proxy user to use.\n\n# readidletimeout\n\n * type: string\n * dynamic: ❌\n * required: ❌\n * default: 300.000000000\n * format: duration\n\n> the default amount of time to allow read operation connections to remain idle.\n\n# readtimeout\n\n * type: string\n * dynamic: ❌\n * required: ❌\n * default: 10.000000000\n * format: duration\n\n> the default read timeout.\n\n\n# charset',charsets:{}},{title:"Delete",frontmatter:{title:"Delete",editLink:!1,description:"Delete a file to a SFTP server.",icon:"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4KPHN2ZyB2ZXJzaW9uPSIxLjEiIGlkPSJDYWxxdWVfMSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIgeD0iMHB4IiB5PSIwcHgiCiAgICAgdmlld0JveD0iMCAwIDI0IDI0IiBzdHlsZT0iZW5hYmxlLWJhY2tncm91bmQ6bmV3IDAgMCAyNCAyNDsiIHhtbDpzcGFjZT0icHJlc2VydmUiPgo8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgoJLnN0MHtmaWxsOm5vbmU7fQoJLnN0MXtmaWxsOiMwRjE3MjQ7fQo8L3N0eWxlPgogICAgPGc+Cgk8cmVjdCB4PSI5IiB5PSI0IiBjbGFzcz0ic3QwIiB3aWR0aD0iMSIgaGVpZ2h0PSIyIi8+CiAgICAgICAgPHJlY3QgeD0iNSIgeT0iNCIgY2xhc3M9InN0MCIgd2lkdGg9IjIiIGhlaWdodD0iMiIvPgogICAgICAgIDxwYXRoIGNsYXNzPSJzdDEiIGQ9Ik00LDhoMTZjMC42LDAsMS0wLjQsMS0xVjNjMC0wLjYtMC40LTEtMS0xSDRDMy40LDIsMywyLjQsMywzdjRDMyw3LjYsMy40LDgsNCw4eiBNOSw0aDF2Mkg5VjR6IE01LDRoMnYySDVWNHoKCQkiLz4KICAgICAgICA8cGF0aCBjbGFzcz0ic3QxIiBkPSJNMTYuMywxM2MwLjEsMCwwLjItMC4xLDAuMy0wLjFzMC4yLTAuMSwwLjItMC4yYzAtMC4xLDAuMS0wLjIsMC4xLTAuM2MwLTAuMSwwLTAuMi0wLjEtMC4zcy0wLjEtMC4yLTAuMi0wLjIKCQljLTAuMS0wLjEtMC4yLTAuMS0wLjMtMC4xYy0wLjEsMC0wLjIsMC0wLjQsMGMtMC4yLDAtMC40LDAtMC41LDBWMTNoMC40QzE2LDEzLDE2LjIsMTMsMTYuMywxM3oiLz4KICAgICAgICA8cGF0aCBjbGFzcz0ic3QxIiBkPSJNMTUsMTljMC0wLjYtMC40LTEtMS0xaC0xdi0yaDdjMC42LDAsMS0wLjQsMS0xdi00YzAtMC42LTAuNC0xLTEtMUg0Yy0wLjYsMC0xLDAuNC0xLDF2NGMwLDAuNiwwLjQsMSwxLDFoN3YyCgkJaC0xYy0wLjYsMC0xLDAuNC0xLDFIMnYyaDdjMCwwLjYsMC40LDEsMSwxaDRjMC42LDAsMS0wLjQsMS0xaDd2LTJIMTV6IE0xNSwxMS4zYzAuMSwwLDAuMy0wLjEsMC41LTAuMWMwLjIsMCwwLjMsMCwwLjUsMAoJCWMwLjUsMCwwLjksMC4xLDEuMSwwLjNzMC40LDAuNSwwLjQsMC44YzAsMC4yLDAsMC40LTAuMSwwLjVjLTAuMSwwLjEtMC4yLDAuMy0wLjMsMC4zYy0wLjEsMC4xLTAuMywwLjItMC41LDAuMnMtMC40LDAuMS0wLjcsMC4xCgkJaC0wLjR2MS4zSDE1VjExLjN6IE04LjUsMTQuNWMtMC4yLDAuMi0wLjUsMC4yLTAuOSwwLjJjLTAuMSwwLTAuMywwLTAuNCwwYy0wLjEsMC0wLjIsMC0wLjMtMC4xYy0wLjEsMC0wLjItMC4xLTAuMi0wLjEKCQlzLTAuMS0wLjEtMC4yLTAuMWwwLjEtMC40YzAuMSwwLDAuMiwwLjEsMC40LDAuMWMwLjIsMC4xLDAuMywwLjEsMC42LDAuMWMwLjUsMCwwLjgtMC4yLDAuOC0wLjVjMC0wLjEsMC0wLjItMC4xLTAuMwoJCWMwLTAuMS0wLjEtMC4xLTAuMi0wLjJjLTAuMS0wLjEtMC4yLTAuMS0wLjMtMC4xcy0wLjItMC4xLTAuMy0wLjFjLTAuMSwwLTAuMi0wLjEtMC40LTAuMWMtMC4xLTAuMS0wLjItMC4xLTAuMy0wLjIKCQljLTAuMS0wLjEtMC4xLTAuMi0wLjItMC4zYzAtMC4xLTAuMS0wLjItMC4xLTAuNGMwLTAuMywwLjEtMC41LDAuMy0wLjdjMC4yLTAuMiwwLjUtMC4zLDAuOS0wLjNjMC4yLDAsMC40LDAsMC42LDAuMQoJCXMwLjMsMC4xLDAuNCwwLjFsLTAuMiwwLjRjLTAuMSwwLTAuMi0wLjEtMC4zLTAuMWMtMC4xLDAtMC4zLTAuMS0wLjUtMC4xYy0wLjEsMC0wLjIsMC0wLjMsMHMtMC4xLDAuMS0wLjIsMC4xcy0wLjEsMC4xLTAuMSwwLjIKCQljMCwwLjEtMC4xLDAuMS0wLjEsMC4yYzAsMC4xLDAsMC4yLDAuMSwwLjJjMCwwLjEsMC4xLDAuMSwwLjIsMC4yYzAuMSwwLDAuMSwwLjEsMC4yLDAuMWMwLjEsMCwwLjIsMC4xLDAuMywwLjEKCQljMC4xLDAuMSwwLjMsMC4xLDAuNCwwLjJDOC40LDEzLDguNSwxMyw4LjYsMTMuMWMwLjEsMC4xLDAuMiwwLjIsMC4yLDAuM2MwLDAuMSwwLjEsMC4zLDAuMSwwLjRDOC44LDE0LjEsOC43LDE0LjQsOC41LDE0LjV6CgkJIE0xMS41LDExLjdIOS45djFoMS40djAuNEg5Ljl2MS42SDkuNHYtMy41aDIuMVYxMS43eiBNMTEuOCwxMS43di0wLjRoMi43djAuNGgtMS4xdjNoLTAuNXYtM0gxMS44eiIvPgo8L2c+Cjwvc3ZnPgo=",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Delete"},{property:"og:description",content:"Delete a file to a SFTP server. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-fs/tasks/sftp/io.kestra.plugin.fs.sftp.Delete.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Delete"},{name:"twitter:description",content:"Delete a file to a SFTP server. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-fs/tasks/sftp/io.kestra.plugin.fs.sftp.Delete.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-fs/tasks/sftp/io.kestra.plugin.fs.sftp.Delete.html",relativePath:"plugins/plugin-fs/tasks/sftp/io.kestra.plugin.fs.sftp.Delete.md",key:"v-4d47e5e2",path:"/plugins/plugin-fs/tasks/sftp/io.kestra.plugin.fs.sftp.Delete.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:88},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:239},{level:3,title:"errorOnMissing",slug:"erroronmissing",normalizedTitle:"erroronmissing",charIndex:254},{level:3,title:"host",slug:"host",normalizedTitle:"host",charIndex:151},{level:3,title:"keyfile",slug:"keyfile",normalizedTitle:"keyfile",charIndex:469},{level:3,title:"passphrase",slug:"passphrase",normalizedTitle:"passphrase",charIndex:585},{level:3,title:"password",slug:"password",normalizedTitle:"password",charIndex:190},{level:3,title:"port",slug:"port",normalizedTitle:"port",charIndex:167},{level:3,title:"proxyHost",slug:"proxyhost",normalizedTitle:"proxyhost",charIndex:866},{level:3,title:"proxyPassword",slug:"proxypassword",normalizedTitle:"proxypassword",charIndex:945},{level:3,title:"proxyPort",slug:"proxyport",normalizedTitle:"proxyport",charIndex:1032},{level:3,title:"proxyType",slug:"proxytype",normalizedTitle:"proxytype",charIndex:1111},{level:3,title:"proxyUser",slug:"proxyuser",normalizedTitle:"proxyuser",charIndex:1190},{level:3,title:"rootDir",slug:"rootdir",normalizedTitle:"rootdir",charIndex:1269},{level:3,title:"uri",slug:"uri",normalizedTitle:"uri",charIndex:205},{level:3,title:"username",slug:"username",normalizedTitle:"username",charIndex:176},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1548},{level:3,title:"deleted",slug:"deleted",normalizedTitle:"deleted",charIndex:1560},{level:3,title:"uri",slug:"uri-2",normalizedTitle:"uri",charIndex:205},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:1687}],headersStr:"Examples Properties errorOnMissing host keyfile passphrase password port proxyHost proxyPassword proxyPort proxyType proxyUser rootDir uri username Outputs deleted uri Definitions",content:'Delete\n\ntype: "io.kestra.plugin.fs.sftp.Delete"\n\n\n> Delete a file to a SFTP server.\n\n\n# Examples\n\nid: "delete"\ntype: "io.kestra.plugin.fs.sftp.Delete"\nhost: localhost\nport: 22\nusername: foo\npassword: pass\nuri: "/upload/dir1/file.txt"\n\n\n\n# Properties\n\n\n# errorOnMissing\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: false\n\n> raise an error if the file is not found\n\n\n# host\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Hostname of the remote server\n\n\n# keyfile\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Private keyfile to login on the source server with ssh\n\n\n# passphrase\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Passphrase of the ssh key\n\n\n# password\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Password on the remote server\n\n\n# port\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Default: 22\n\n> Port of the remote server\n\n\n# proxyHost\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> SFTP proxy host\n\n\n# proxyPassword\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> SFTP proxy password\n\n\n# proxyPort\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> SFTP proxy port\n\n\n# proxyType\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> SFTP proxy type\n\n\n# proxyUser\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> SFTP proxy user\n\n\n# rootDir\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: true\n\n> Is path is relative to root dir\n\n\n# uri\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The file to delete\n\n\n# username\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Username on the remote server\n\n\n# Outputs\n\n\n# deleted\n\n * Type: boolean\n * Default: false\n\n> If the files was really deleted\n\n\n# uri\n\n * Type: string\n\n> The deleted uri\n\n\n# Definitions',normalizedContent:'delete\n\ntype: "io.kestra.plugin.fs.sftp.delete"\n\n\n> delete a file to a sftp server.\n\n\n# examples\n\nid: "delete"\ntype: "io.kestra.plugin.fs.sftp.delete"\nhost: localhost\nport: 22\nusername: foo\npassword: pass\nuri: "/upload/dir1/file.txt"\n\n\n\n# properties\n\n\n# erroronmissing\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: false\n\n> raise an error if the file is not found\n\n\n# host\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> hostname of the remote server\n\n\n# keyfile\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> private keyfile to login on the source server with ssh\n\n\n# passphrase\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> passphrase of the ssh key\n\n\n# password\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> password on the remote server\n\n\n# port\n\n * type: string\n * dynamic: ❓\n * required: ❌\n * default: 22\n\n> port of the remote server\n\n\n# proxyhost\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> sftp proxy host\n\n\n# proxypassword\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> sftp proxy password\n\n\n# proxyport\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> sftp proxy port\n\n\n# proxytype\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> sftp proxy type\n\n\n# proxyuser\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> sftp proxy user\n\n\n# rootdir\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: true\n\n> is path is relative to root dir\n\n\n# uri\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the file to delete\n\n\n# username\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> username on the remote server\n\n\n# outputs\n\n\n# deleted\n\n * type: boolean\n * default: false\n\n> if the files was really deleted\n\n\n# uri\n\n * type: string\n\n> the deleted uri\n\n\n# definitions',charsets:{}},{title:"Download",frontmatter:{title:"Download",editLink:!1,description:"Download file from SFTP server",icon:"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4KPHN2ZyB2ZXJzaW9uPSIxLjEiIGlkPSJDYWxxdWVfMSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIgeD0iMHB4IiB5PSIwcHgiCiAgICAgdmlld0JveD0iMCAwIDI0IDI0IiBzdHlsZT0iZW5hYmxlLWJhY2tncm91bmQ6bmV3IDAgMCAyNCAyNDsiIHhtbDpzcGFjZT0icHJlc2VydmUiPgo8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgoJLnN0MHtmaWxsOm5vbmU7fQoJLnN0MXtmaWxsOiMwRjE3MjQ7fQo8L3N0eWxlPgogICAgPGc+Cgk8cmVjdCB4PSI5IiB5PSI0IiBjbGFzcz0ic3QwIiB3aWR0aD0iMSIgaGVpZ2h0PSIyIi8+CiAgICAgICAgPHJlY3QgeD0iNSIgeT0iNCIgY2xhc3M9InN0MCIgd2lkdGg9IjIiIGhlaWdodD0iMiIvPgogICAgICAgIDxwYXRoIGNsYXNzPSJzdDEiIGQ9Ik00LDhoMTZjMC42LDAsMS0wLjQsMS0xVjNjMC0wLjYtMC40LTEtMS0xSDRDMy40LDIsMywyLjQsMywzdjRDMyw3LjYsMy40LDgsNCw4eiBNOSw0aDF2Mkg5VjR6IE01LDRoMnYySDVWNHoKCQkiLz4KICAgICAgICA8cGF0aCBjbGFzcz0ic3QxIiBkPSJNMTYuMywxM2MwLjEsMCwwLjItMC4xLDAuMy0wLjFzMC4yLTAuMSwwLjItMC4yYzAtMC4xLDAuMS0wLjIsMC4xLTAuM2MwLTAuMSwwLTAuMi0wLjEtMC4zcy0wLjEtMC4yLTAuMi0wLjIKCQljLTAuMS0wLjEtMC4yLTAuMS0wLjMtMC4xYy0wLjEsMC0wLjIsMC0wLjQsMGMtMC4yLDAtMC40LDAtMC41LDBWMTNoMC40QzE2LDEzLDE2LjIsMTMsMTYuMywxM3oiLz4KICAgICAgICA8cGF0aCBjbGFzcz0ic3QxIiBkPSJNMTUsMTljMC0wLjYtMC40LTEtMS0xaC0xdi0yaDdjMC42LDAsMS0wLjQsMS0xdi00YzAtMC42LTAuNC0xLTEtMUg0Yy0wLjYsMC0xLDAuNC0xLDF2NGMwLDAuNiwwLjQsMSwxLDFoN3YyCgkJaC0xYy0wLjYsMC0xLDAuNC0xLDFIMnYyaDdjMCwwLjYsMC40LDEsMSwxaDRjMC42LDAsMS0wLjQsMS0xaDd2LTJIMTV6IE0xNSwxMS4zYzAuMSwwLDAuMy0wLjEsMC41LTAuMWMwLjIsMCwwLjMsMCwwLjUsMAoJCWMwLjUsMCwwLjksMC4xLDEuMSwwLjNzMC40LDAuNSwwLjQsMC44YzAsMC4yLDAsMC40LTAuMSwwLjVjLTAuMSwwLjEtMC4yLDAuMy0wLjMsMC4zYy0wLjEsMC4xLTAuMywwLjItMC41LDAuMnMtMC40LDAuMS0wLjcsMC4xCgkJaC0wLjR2MS4zSDE1VjExLjN6IE04LjUsMTQuNWMtMC4yLDAuMi0wLjUsMC4yLTAuOSwwLjJjLTAuMSwwLTAuMywwLTAuNCwwYy0wLjEsMC0wLjIsMC0wLjMtMC4xYy0wLjEsMC0wLjItMC4xLTAuMi0wLjEKCQlzLTAuMS0wLjEtMC4yLTAuMWwwLjEtMC40YzAuMSwwLDAuMiwwLjEsMC40LDAuMWMwLjIsMC4xLDAuMywwLjEsMC42LDAuMWMwLjUsMCwwLjgtMC4yLDAuOC0wLjVjMC0wLjEsMC0wLjItMC4xLTAuMwoJCWMwLTAuMS0wLjEtMC4xLTAuMi0wLjJjLTAuMS0wLjEtMC4yLTAuMS0wLjMtMC4xcy0wLjItMC4xLTAuMy0wLjFjLTAuMSwwLTAuMi0wLjEtMC40LTAuMWMtMC4xLTAuMS0wLjItMC4xLTAuMy0wLjIKCQljLTAuMS0wLjEtMC4xLTAuMi0wLjItMC4zYzAtMC4xLTAuMS0wLjItMC4xLTAuNGMwLTAuMywwLjEtMC41LDAuMy0wLjdjMC4yLTAuMiwwLjUtMC4zLDAuOS0wLjNjMC4yLDAsMC40LDAsMC42LDAuMQoJCXMwLjMsMC4xLDAuNCwwLjFsLTAuMiwwLjRjLTAuMSwwLTAuMi0wLjEtMC4zLTAuMWMtMC4xLDAtMC4zLTAuMS0wLjUtMC4xYy0wLjEsMC0wLjIsMC0wLjMsMHMtMC4xLDAuMS0wLjIsMC4xcy0wLjEsMC4xLTAuMSwwLjIKCQljMCwwLjEtMC4xLDAuMS0wLjEsMC4yYzAsMC4xLDAsMC4yLDAuMSwwLjJjMCwwLjEsMC4xLDAuMSwwLjIsMC4yYzAuMSwwLDAuMSwwLjEsMC4yLDAuMWMwLjEsMCwwLjIsMC4xLDAuMywwLjEKCQljMC4xLDAuMSwwLjMsMC4xLDAuNCwwLjJDOC40LDEzLDguNSwxMyw4LjYsMTMuMWMwLjEsMC4xLDAuMiwwLjIsMC4yLDAuM2MwLDAuMSwwLjEsMC4zLDAuMSwwLjRDOC44LDE0LjEsOC43LDE0LjQsOC41LDE0LjV6CgkJIE0xMS41LDExLjdIOS45djFoMS40djAuNEg5Ljl2MS42SDkuNHYtMy41aDIuMVYxMS43eiBNMTEuOCwxMS43di0wLjRoMi43djAuNGgtMS4xdjNoLTAuNXYtM0gxMS44eiIvPgo8L2c+Cjwvc3ZnPgo=",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Download"},{property:"og:description",content:"Download file from SFTP server | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-fs/tasks/sftp/io.kestra.plugin.fs.sftp.Download.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Download"},{name:"twitter:description",content:"Download file from SFTP server | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-fs/tasks/sftp/io.kestra.plugin.fs.sftp.Download.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-fs/tasks/sftp/io.kestra.plugin.fs.sftp.Download.html",relativePath:"plugins/plugin-fs/tasks/sftp/io.kestra.plugin.fs.sftp.Download.md",key:"v-dba4f856",path:"/plugins/plugin-fs/tasks/sftp/io.kestra.plugin.fs.sftp.Download.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:91},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:238},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:70},{level:3,title:"host",slug:"host",normalizedTitle:"host",charIndex:158},{level:3,title:"keyfile",slug:"keyfile",normalizedTitle:"keyfile",charIndex:456},{level:3,title:"passphrase",slug:"passphrase",normalizedTitle:"passphrase",charIndex:572},{level:3,title:"password",slug:"password",normalizedTitle:"password",charIndex:197},{level:3,title:"port",slug:"port",normalizedTitle:"port",charIndex:174},{level:3,title:"proxyHost",slug:"proxyhost",normalizedTitle:"proxyhost",charIndex:853},{level:3,title:"proxyPassword",slug:"proxypassword",normalizedTitle:"proxypassword",charIndex:932},{level:3,title:"proxyPort",slug:"proxyport",normalizedTitle:"proxyport",charIndex:1019},{level:3,title:"proxyType",slug:"proxytype",normalizedTitle:"proxytype",charIndex:1098},{level:3,title:"proxyUser",slug:"proxyuser",normalizedTitle:"proxyuser",charIndex:1177},{level:3,title:"rootDir",slug:"rootdir",normalizedTitle:"rootdir",charIndex:1256},{level:3,title:"username",slug:"username",normalizedTitle:"username",charIndex:183},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1459},{level:3,title:"from",slug:"from-2",normalizedTitle:"from",charIndex:70},{level:3,title:"to",slug:"to",normalizedTitle:"to",charIndex:344},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:1634}],headersStr:"Examples Properties from host keyfile passphrase password port proxyHost proxyPassword proxyPort proxyType proxyUser rootDir username Outputs from to Definitions",content:'Download\n\ntype: "io.kestra.plugin.fs.sftp.Download"\n\n\n> Download file from SFTP server\n\n\n# Examples\n\nid: "download"\ntype: "io.kestra.plugin.fs.sftp.Download"\nhost: localhost\nport: 22\nusername: foo\npassword: pass\nfrom: "/in/file.txt"\n\n\n\n# Properties\n\n\n# from\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The fully-qualified URIs that point to destination path\n\n\n# host\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Hostname of the remote server\n\n\n# keyfile\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Private keyfile to login on the source server with ssh\n\n\n# passphrase\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Passphrase of the ssh key\n\n\n# password\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Password on the remote server\n\n\n# port\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Default: 22\n\n> Port of the remote server\n\n\n# proxyHost\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> SFTP proxy host\n\n\n# proxyPassword\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> SFTP proxy password\n\n\n# proxyPort\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> SFTP proxy port\n\n\n# proxyType\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> SFTP proxy type\n\n\n# proxyUser\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> SFTP proxy user\n\n\n# rootDir\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: true\n\n> Is path is relative to root dir\n\n\n# username\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Username on the remote server\n\n\n# Outputs\n\n\n# from\n\n * Type: string\n\n> The fully-qualified URIs that point to source data\n\n\n# to\n\n * Type: string\n\n> The fully-qualified URIs that point to destination path\n\n\n# Definitions',normalizedContent:'download\n\ntype: "io.kestra.plugin.fs.sftp.download"\n\n\n> download file from sftp server\n\n\n# examples\n\nid: "download"\ntype: "io.kestra.plugin.fs.sftp.download"\nhost: localhost\nport: 22\nusername: foo\npassword: pass\nfrom: "/in/file.txt"\n\n\n\n# properties\n\n\n# from\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the fully-qualified uris that point to destination path\n\n\n# host\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> hostname of the remote server\n\n\n# keyfile\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> private keyfile to login on the source server with ssh\n\n\n# passphrase\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> passphrase of the ssh key\n\n\n# password\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> password on the remote server\n\n\n# port\n\n * type: string\n * dynamic: ❓\n * required: ❌\n * default: 22\n\n> port of the remote server\n\n\n# proxyhost\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> sftp proxy host\n\n\n# proxypassword\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> sftp proxy password\n\n\n# proxyport\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> sftp proxy port\n\n\n# proxytype\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> sftp proxy type\n\n\n# proxyuser\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> sftp proxy user\n\n\n# rootdir\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: true\n\n> is path is relative to root dir\n\n\n# username\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> username on the remote server\n\n\n# outputs\n\n\n# from\n\n * type: string\n\n> the fully-qualified uris that point to source data\n\n\n# to\n\n * type: string\n\n> the fully-qualified uris that point to destination path\n\n\n# definitions',charsets:{}},{title:"Downloads",frontmatter:{title:"Downloads",editLink:!1,description:"Download multiple files from SFTP server",icon:"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4KPHN2ZyB2ZXJzaW9uPSIxLjEiIGlkPSJDYWxxdWVfMSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIgeD0iMHB4IiB5PSIwcHgiCiAgICAgdmlld0JveD0iMCAwIDI0IDI0IiBzdHlsZT0iZW5hYmxlLWJhY2tncm91bmQ6bmV3IDAgMCAyNCAyNDsiIHhtbDpzcGFjZT0icHJlc2VydmUiPgo8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgoJLnN0MHtmaWxsOm5vbmU7fQoJLnN0MXtmaWxsOiMwRjE3MjQ7fQo8L3N0eWxlPgogICAgPGc+Cgk8cmVjdCB4PSI5IiB5PSI0IiBjbGFzcz0ic3QwIiB3aWR0aD0iMSIgaGVpZ2h0PSIyIi8+CiAgICAgICAgPHJlY3QgeD0iNSIgeT0iNCIgY2xhc3M9InN0MCIgd2lkdGg9IjIiIGhlaWdodD0iMiIvPgogICAgICAgIDxwYXRoIGNsYXNzPSJzdDEiIGQ9Ik00LDhoMTZjMC42LDAsMS0wLjQsMS0xVjNjMC0wLjYtMC40LTEtMS0xSDRDMy40LDIsMywyLjQsMywzdjRDMyw3LjYsMy40LDgsNCw4eiBNOSw0aDF2Mkg5VjR6IE01LDRoMnYySDVWNHoKCQkiLz4KICAgICAgICA8cGF0aCBjbGFzcz0ic3QxIiBkPSJNMTYuMywxM2MwLjEsMCwwLjItMC4xLDAuMy0wLjFzMC4yLTAuMSwwLjItMC4yYzAtMC4xLDAuMS0wLjIsMC4xLTAuM2MwLTAuMSwwLTAuMi0wLjEtMC4zcy0wLjEtMC4yLTAuMi0wLjIKCQljLTAuMS0wLjEtMC4yLTAuMS0wLjMtMC4xYy0wLjEsMC0wLjIsMC0wLjQsMGMtMC4yLDAtMC40LDAtMC41LDBWMTNoMC40QzE2LDEzLDE2LjIsMTMsMTYuMywxM3oiLz4KICAgICAgICA8cGF0aCBjbGFzcz0ic3QxIiBkPSJNMTUsMTljMC0wLjYtMC40LTEtMS0xaC0xdi0yaDdjMC42LDAsMS0wLjQsMS0xdi00YzAtMC42LTAuNC0xLTEtMUg0Yy0wLjYsMC0xLDAuNC0xLDF2NGMwLDAuNiwwLjQsMSwxLDFoN3YyCgkJaC0xYy0wLjYsMC0xLDAuNC0xLDFIMnYyaDdjMCwwLjYsMC40LDEsMSwxaDRjMC42LDAsMS0wLjQsMS0xaDd2LTJIMTV6IE0xNSwxMS4zYzAuMSwwLDAuMy0wLjEsMC41LTAuMWMwLjIsMCwwLjMsMCwwLjUsMAoJCWMwLjUsMCwwLjksMC4xLDEuMSwwLjNzMC40LDAuNSwwLjQsMC44YzAsMC4yLDAsMC40LTAuMSwwLjVjLTAuMSwwLjEtMC4yLDAuMy0wLjMsMC4zYy0wLjEsMC4xLTAuMywwLjItMC41LDAuMnMtMC40LDAuMS0wLjcsMC4xCgkJaC0wLjR2MS4zSDE1VjExLjN6IE04LjUsMTQuNWMtMC4yLDAuMi0wLjUsMC4yLTAuOSwwLjJjLTAuMSwwLTAuMywwLTAuNCwwYy0wLjEsMC0wLjIsMC0wLjMtMC4xYy0wLjEsMC0wLjItMC4xLTAuMi0wLjEKCQlzLTAuMS0wLjEtMC4yLTAuMWwwLjEtMC40YzAuMSwwLDAuMiwwLjEsMC40LDAuMWMwLjIsMC4xLDAuMywwLjEsMC42LDAuMWMwLjUsMCwwLjgtMC4yLDAuOC0wLjVjMC0wLjEsMC0wLjItMC4xLTAuMwoJCWMwLTAuMS0wLjEtMC4xLTAuMi0wLjJjLTAuMS0wLjEtMC4yLTAuMS0wLjMtMC4xcy0wLjItMC4xLTAuMy0wLjFjLTAuMSwwLTAuMi0wLjEtMC40LTAuMWMtMC4xLTAuMS0wLjItMC4xLTAuMy0wLjIKCQljLTAuMS0wLjEtMC4xLTAuMi0wLjItMC4zYzAtMC4xLTAuMS0wLjItMC4xLTAuNGMwLTAuMywwLjEtMC41LDAuMy0wLjdjMC4yLTAuMiwwLjUtMC4zLDAuOS0wLjNjMC4yLDAsMC40LDAsMC42LDAuMQoJCXMwLjMsMC4xLDAuNCwwLjFsLTAuMiwwLjRjLTAuMSwwLTAuMi0wLjEtMC4zLTAuMWMtMC4xLDAtMC4zLTAuMS0wLjUtMC4xYy0wLjEsMC0wLjIsMC0wLjMsMHMtMC4xLDAuMS0wLjIsMC4xcy0wLjEsMC4xLTAuMSwwLjIKCQljMCwwLjEtMC4xLDAuMS0wLjEsMC4yYzAsMC4xLDAsMC4yLDAuMSwwLjJjMCwwLjEsMC4xLDAuMSwwLjIsMC4yYzAuMSwwLDAuMSwwLjEsMC4yLDAuMWMwLjEsMCwwLjIsMC4xLDAuMywwLjEKCQljMC4xLDAuMSwwLjMsMC4xLDAuNCwwLjJDOC40LDEzLDguNSwxMyw4LjYsMTMuMWMwLjEsMC4xLDAuMiwwLjIsMC4yLDAuM2MwLDAuMSwwLjEsMC4zLDAuMSwwLjRDOC44LDE0LjEsOC43LDE0LjQsOC41LDE0LjV6CgkJIE0xMS41LDExLjdIOS45djFoMS40djAuNEg5Ljl2MS42SDkuNHYtMy41aDIuMVYxMS43eiBNMTEuOCwxMS43di0wLjRoMi43djAuNGgtMS4xdjNoLTAuNXYtM0gxMS44eiIvPgo8L2c+Cjwvc3ZnPgo=",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Downloads"},{property:"og:description",content:"Download multiple files from SFTP server | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-fs/tasks/sftp/io.kestra.plugin.fs.sftp.Downloads.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Downloads"},{name:"twitter:description",content:"Download multiple files from SFTP server | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-fs/tasks/sftp/io.kestra.plugin.fs.sftp.Downloads.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-fs/tasks/sftp/io.kestra.plugin.fs.sftp.Downloads.html",relativePath:"plugins/plugin-fs/tasks/sftp/io.kestra.plugin.fs.sftp.Downloads.md",key:"v-25e39163",path:"/plugins/plugin-fs/tasks/sftp/io.kestra.plugin.fs.sftp.Downloads.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:103},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:362},{level:3,title:"action",slug:"action",normalizedTitle:"action",charIndex:317},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:82},{level:3,title:"host",slug:"host",normalizedTitle:"host",charIndex:234},{level:3,title:"keyfile",slug:"keyfile",normalizedTitle:"keyfile",charIndex:688},{level:3,title:"moveDirectory",slug:"movedirectory",normalizedTitle:"movedirectory",charIndex:330},{level:3,title:"passphrase",slug:"passphrase",normalizedTitle:"passphrase",charIndex:915},{level:3,title:"password",slug:"password",normalizedTitle:"password",charIndex:273},{level:3,title:"port",slug:"port",normalizedTitle:"port",charIndex:250},{level:3,title:"proxyHost",slug:"proxyhost",normalizedTitle:"proxyhost",charIndex:1196},{level:3,title:"proxyPassword",slug:"proxypassword",normalizedTitle:"proxypassword",charIndex:1275},{level:3,title:"proxyPort",slug:"proxyport",normalizedTitle:"proxyport",charIndex:1362},{level:3,title:"proxyType",slug:"proxytype",normalizedTitle:"proxytype",charIndex:1441},{level:3,title:"proxyUser",slug:"proxyuser",normalizedTitle:"proxyuser",charIndex:1520},{level:3,title:"regExp",slug:"regexp",normalizedTitle:"regexp",charIndex:1599},{level:3,title:"rootDir",slug:"rootdir",normalizedTitle:"rootdir",charIndex:1692},{level:3,title:"username",slug:"username",normalizedTitle:"username",charIndex:259},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1895},{level:3,title:"files",slug:"files",normalizedTitle:"files",charIndex:76},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:2004},{level:3,title:"File",slug:"file",normalizedTitle:"file",charIndex:1941}],headersStr:"Examples Properties action from host keyfile moveDirectory passphrase password port proxyHost proxyPassword proxyPort proxyType proxyUser regExp rootDir username Outputs files Definitions File",content:'Downloads\n\ntype: "io.kestra.plugin.fs.sftp.Downloads"\n\n\n> Download multiple files from SFTP server\n\n\n# Examples\n\n> Download a list of files and move it to an archive folders\n\nid: "downloads"\ntype: "io.kestra.plugin.fs.sftp.Downloads"\nhost: localhost\nport: 22\nusername: foo\npassword: pass\nfrom: "/in/"\ninterval: PT10S\naction: MOVE\nmoveDirectory: "/archive/"\n\n\n\n# Properties\n\n\n# action\n\n * Type: string\n\n * Dynamic: ✔️\n\n * Required: ❌\n\n * Possible Values:\n   \n   * MOVE\n   * DELETE\n\n> The action to do on find files\n\n\n# from\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The directory to list\n\n\n# host\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Hostname of the remote server\n\n\n# keyfile\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Private keyfile to login on the source server with ssh\n\n\n# moveDirectory\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The destination directory in case off MOVE\n\n\n# passphrase\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Passphrase of the ssh key\n\n\n# password\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Password on the remote server\n\n\n# port\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Default: 22\n\n> Port of the remote server\n\n\n# proxyHost\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> SFTP proxy host\n\n\n# proxyPassword\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> SFTP proxy password\n\n\n# proxyPort\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> SFTP proxy port\n\n\n# proxyType\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> SFTP proxy type\n\n\n# proxyUser\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> SFTP proxy user\n\n\n# regExp\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> A regexp to filter on full path\n\n\n# rootDir\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: true\n\n> Is path is relative to root dir\n\n\n# username\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Username on the remote server\n\n\n# Outputs\n\n\n# files\n\n * Type: array\n * SubType: File\n * SubType: ====\n\n> The bucket of the downloaded file\n\n\n# Definitions\n\n\n# File\n\n# accessDate\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# fileType\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Possible Values:\n   \n   * FOLDER\n   * FILE\n   * FILE_OR_FOLDER\n   * IMAGINARY\n\n# flags\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n# groupId\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n# name\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# path\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# permissions\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n# size\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n# symbolicLink\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: false\n\n# updatedDate\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# userId\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌',normalizedContent:'downloads\n\ntype: "io.kestra.plugin.fs.sftp.downloads"\n\n\n> download multiple files from sftp server\n\n\n# examples\n\n> download a list of files and move it to an archive folders\n\nid: "downloads"\ntype: "io.kestra.plugin.fs.sftp.downloads"\nhost: localhost\nport: 22\nusername: foo\npassword: pass\nfrom: "/in/"\ninterval: pt10s\naction: move\nmovedirectory: "/archive/"\n\n\n\n# properties\n\n\n# action\n\n * type: string\n\n * dynamic: ✔️\n\n * required: ❌\n\n * possible values:\n   \n   * move\n   * delete\n\n> the action to do on find files\n\n\n# from\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the directory to list\n\n\n# host\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> hostname of the remote server\n\n\n# keyfile\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> private keyfile to login on the source server with ssh\n\n\n# movedirectory\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the destination directory in case off move\n\n\n# passphrase\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> passphrase of the ssh key\n\n\n# password\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> password on the remote server\n\n\n# port\n\n * type: string\n * dynamic: ❓\n * required: ❌\n * default: 22\n\n> port of the remote server\n\n\n# proxyhost\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> sftp proxy host\n\n\n# proxypassword\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> sftp proxy password\n\n\n# proxyport\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> sftp proxy port\n\n\n# proxytype\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> sftp proxy type\n\n\n# proxyuser\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> sftp proxy user\n\n\n# regexp\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> a regexp to filter on full path\n\n\n# rootdir\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: true\n\n> is path is relative to root dir\n\n\n# username\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> username on the remote server\n\n\n# outputs\n\n\n# files\n\n * type: array\n * subtype: file\n * subtype: ====\n\n> the bucket of the downloaded file\n\n\n# definitions\n\n\n# file\n\n# accessdate\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# filetype\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * possible values:\n   \n   * folder\n   * file\n   * file_or_folder\n   * imaginary\n\n# flags\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n# groupid\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n# name\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# path\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# permissions\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n# size\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n# symboliclink\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: false\n\n# updateddate\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# userid\n\n * type: integer\n * dynamic: ❓\n * required: ❌',charsets:{}},{title:"List",frontmatter:{title:"List",editLink:!1,description:"List files from a SFTP server directory",icon:"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4KPHN2ZyB2ZXJzaW9uPSIxLjEiIGlkPSJDYWxxdWVfMSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIgeD0iMHB4IiB5PSIwcHgiCiAgICAgdmlld0JveD0iMCAwIDI0IDI0IiBzdHlsZT0iZW5hYmxlLWJhY2tncm91bmQ6bmV3IDAgMCAyNCAyNDsiIHhtbDpzcGFjZT0icHJlc2VydmUiPgo8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgoJLnN0MHtmaWxsOm5vbmU7fQoJLnN0MXtmaWxsOiMwRjE3MjQ7fQo8L3N0eWxlPgogICAgPGc+Cgk8cmVjdCB4PSI5IiB5PSI0IiBjbGFzcz0ic3QwIiB3aWR0aD0iMSIgaGVpZ2h0PSIyIi8+CiAgICAgICAgPHJlY3QgeD0iNSIgeT0iNCIgY2xhc3M9InN0MCIgd2lkdGg9IjIiIGhlaWdodD0iMiIvPgogICAgICAgIDxwYXRoIGNsYXNzPSJzdDEiIGQ9Ik00LDhoMTZjMC42LDAsMS0wLjQsMS0xVjNjMC0wLjYtMC40LTEtMS0xSDRDMy40LDIsMywyLjQsMywzdjRDMyw3LjYsMy40LDgsNCw4eiBNOSw0aDF2Mkg5VjR6IE01LDRoMnYySDVWNHoKCQkiLz4KICAgICAgICA8cGF0aCBjbGFzcz0ic3QxIiBkPSJNMTYuMywxM2MwLjEsMCwwLjItMC4xLDAuMy0wLjFzMC4yLTAuMSwwLjItMC4yYzAtMC4xLDAuMS0wLjIsMC4xLTAuM2MwLTAuMSwwLTAuMi0wLjEtMC4zcy0wLjEtMC4yLTAuMi0wLjIKCQljLTAuMS0wLjEtMC4yLTAuMS0wLjMtMC4xYy0wLjEsMC0wLjIsMC0wLjQsMGMtMC4yLDAtMC40LDAtMC41LDBWMTNoMC40QzE2LDEzLDE2LjIsMTMsMTYuMywxM3oiLz4KICAgICAgICA8cGF0aCBjbGFzcz0ic3QxIiBkPSJNMTUsMTljMC0wLjYtMC40LTEtMS0xaC0xdi0yaDdjMC42LDAsMS0wLjQsMS0xdi00YzAtMC42LTAuNC0xLTEtMUg0Yy0wLjYsMC0xLDAuNC0xLDF2NGMwLDAuNiwwLjQsMSwxLDFoN3YyCgkJaC0xYy0wLjYsMC0xLDAuNC0xLDFIMnYyaDdjMCwwLjYsMC40LDEsMSwxaDRjMC42LDAsMS0wLjQsMS0xaDd2LTJIMTV6IE0xNSwxMS4zYzAuMSwwLDAuMy0wLjEsMC41LTAuMWMwLjIsMCwwLjMsMCwwLjUsMAoJCWMwLjUsMCwwLjksMC4xLDEuMSwwLjNzMC40LDAuNSwwLjQsMC44YzAsMC4yLDAsMC40LTAuMSwwLjVjLTAuMSwwLjEtMC4yLDAuMy0wLjMsMC4zYy0wLjEsMC4xLTAuMywwLjItMC41LDAuMnMtMC40LDAuMS0wLjcsMC4xCgkJaC0wLjR2MS4zSDE1VjExLjN6IE04LjUsMTQuNWMtMC4yLDAuMi0wLjUsMC4yLTAuOSwwLjJjLTAuMSwwLTAuMywwLTAuNCwwYy0wLjEsMC0wLjIsMC0wLjMtMC4xYy0wLjEsMC0wLjItMC4xLTAuMi0wLjEKCQlzLTAuMS0wLjEtMC4yLTAuMWwwLjEtMC40YzAuMSwwLDAuMiwwLjEsMC40LDAuMWMwLjIsMC4xLDAuMywwLjEsMC42LDAuMWMwLjUsMCwwLjgtMC4yLDAuOC0wLjVjMC0wLjEsMC0wLjItMC4xLTAuMwoJCWMwLTAuMS0wLjEtMC4xLTAuMi0wLjJjLTAuMS0wLjEtMC4yLTAuMS0wLjMtMC4xcy0wLjItMC4xLTAuMy0wLjFjLTAuMSwwLTAuMi0wLjEtMC40LTAuMWMtMC4xLTAuMS0wLjItMC4xLTAuMy0wLjIKCQljLTAuMS0wLjEtMC4xLTAuMi0wLjItMC4zYzAtMC4xLTAuMS0wLjItMC4xLTAuNGMwLTAuMywwLjEtMC41LDAuMy0wLjdjMC4yLTAuMiwwLjUtMC4zLDAuOS0wLjNjMC4yLDAsMC40LDAsMC42LDAuMQoJCXMwLjMsMC4xLDAuNCwwLjFsLTAuMiwwLjRjLTAuMSwwLTAuMi0wLjEtMC4zLTAuMWMtMC4xLDAtMC4zLTAuMS0wLjUtMC4xYy0wLjEsMC0wLjIsMC0wLjMsMHMtMC4xLDAuMS0wLjIsMC4xcy0wLjEsMC4xLTAuMSwwLjIKCQljMCwwLjEtMC4xLDAuMS0wLjEsMC4yYzAsMC4xLDAsMC4yLDAuMSwwLjJjMCwwLjEsMC4xLDAuMSwwLjIsMC4yYzAuMSwwLDAuMSwwLjEsMC4yLDAuMWMwLjEsMCwwLjIsMC4xLDAuMywwLjEKCQljMC4xLDAuMSwwLjMsMC4xLDAuNCwwLjJDOC40LDEzLDguNSwxMyw4LjYsMTMuMWMwLjEsMC4xLDAuMiwwLjIsMC4yLDAuM2MwLDAuMSwwLjEsMC4zLDAuMSwwLjRDOC44LDE0LjEsOC43LDE0LjQsOC41LDE0LjV6CgkJIE0xMS41LDExLjdIOS45djFoMS40djAuNEg5Ljl2MS42SDkuNHYtMy41aDIuMVYxMS43eiBNMTEuOCwxMS43di0wLjRoMi43djAuNGgtMS4xdjNoLTAuNXYtM0gxMS44eiIvPgo8L2c+Cjwvc3ZnPgo=",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"List"},{property:"og:description",content:"List files from a SFTP server directory | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-fs/tasks/sftp/io.kestra.plugin.fs.sftp.List.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"List"},{name:"twitter:description",content:"List files from a SFTP server directory | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-fs/tasks/sftp/io.kestra.plugin.fs.sftp.List.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-fs/tasks/sftp/io.kestra.plugin.fs.sftp.List.html",relativePath:"plugins/plugin-fs/tasks/sftp/io.kestra.plugin.fs.sftp.List.md",key:"v-8ddf9dae",path:"/plugins/plugin-fs/tasks/sftp/io.kestra.plugin.fs.sftp.List.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:92},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:267},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:59},{level:3,title:"host",slug:"host",normalizedTitle:"host",charIndex:151},{level:3,title:"keyfile",slug:"keyfile",normalizedTitle:"keyfile",charIndex:473},{level:3,title:"passphrase",slug:"passphrase",normalizedTitle:"passphrase",charIndex:589},{level:3,title:"password",slug:"password",normalizedTitle:"password",charIndex:190},{level:3,title:"port",slug:"port",normalizedTitle:"port",charIndex:167},{level:3,title:"proxyHost",slug:"proxyhost",normalizedTitle:"proxyhost",charIndex:870},{level:3,title:"proxyPassword",slug:"proxypassword",normalizedTitle:"proxypassword",charIndex:949},{level:3,title:"proxyPort",slug:"proxyport",normalizedTitle:"proxyport",charIndex:1036},{level:3,title:"proxyType",slug:"proxytype",normalizedTitle:"proxytype",charIndex:1115},{level:3,title:"proxyUser",slug:"proxyuser",normalizedTitle:"proxyuser",charIndex:1194},{level:3,title:"regExp",slug:"regexp",normalizedTitle:"regexp",charIndex:227},{level:3,title:"rootDir",slug:"rootdir",normalizedTitle:"rootdir",charIndex:1366},{level:3,title:"username",slug:"username",normalizedTitle:"username",charIndex:176},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1569},{level:3,title:"files",slug:"files",normalizedTitle:"files",charIndex:53},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:1645},{level:3,title:"File",slug:"file",normalizedTitle:"file",charIndex:1615}],headersStr:"Examples Properties from host keyfile passphrase password port proxyHost proxyPassword proxyPort proxyType proxyUser regExp rootDir username Outputs files Definitions File",content:'List\n\ntype: "io.kestra.plugin.fs.sftp.List"\n\n\n> List files from a SFTP server directory\n\n\n# Examples\n\nid: "list"\ntype: "io.kestra.plugin.fs.sftp.List"\nhost: localhost\nport: 22\nusername: foo\npassword: pass\nfrom: "/upload/dir1/"\nregExp: ".*\\/dir1\\/.*\\.(yaml|yml)"\n\n\n\n# Properties\n\n\n# from\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The fully-qualified URIs that point to path\n\n\n# host\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Hostname of the remote server\n\n\n# keyfile\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Private keyfile to login on the source server with ssh\n\n\n# passphrase\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Passphrase of the ssh key\n\n\n# password\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Password on the remote server\n\n\n# port\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Default: 22\n\n> Port of the remote server\n\n\n# proxyHost\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> SFTP proxy host\n\n\n# proxyPassword\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> SFTP proxy password\n\n\n# proxyPort\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> SFTP proxy port\n\n\n# proxyType\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> SFTP proxy type\n\n\n# proxyUser\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> SFTP proxy user\n\n\n# regExp\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> A regexp to filter on full path\n\n\n# rootDir\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: true\n\n> Is path is relative to root dir\n\n\n# username\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Username on the remote server\n\n\n# Outputs\n\n\n# files\n\n * Type: array\n * SubType: File\n\n> The list of files\n\n\n# Definitions\n\n\n# File\n\n# accessDate\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# fileType\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Possible Values:\n   \n   * FOLDER\n   * FILE\n   * FILE_OR_FOLDER\n   * IMAGINARY\n\n# flags\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n# groupId\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n# name\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# path\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# permissions\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n# size\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n# symbolicLink\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: false\n\n# updatedDate\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# userId\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌',normalizedContent:'list\n\ntype: "io.kestra.plugin.fs.sftp.list"\n\n\n> list files from a sftp server directory\n\n\n# examples\n\nid: "list"\ntype: "io.kestra.plugin.fs.sftp.list"\nhost: localhost\nport: 22\nusername: foo\npassword: pass\nfrom: "/upload/dir1/"\nregexp: ".*\\/dir1\\/.*\\.(yaml|yml)"\n\n\n\n# properties\n\n\n# from\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the fully-qualified uris that point to path\n\n\n# host\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> hostname of the remote server\n\n\n# keyfile\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> private keyfile to login on the source server with ssh\n\n\n# passphrase\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> passphrase of the ssh key\n\n\n# password\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> password on the remote server\n\n\n# port\n\n * type: string\n * dynamic: ❓\n * required: ❌\n * default: 22\n\n> port of the remote server\n\n\n# proxyhost\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> sftp proxy host\n\n\n# proxypassword\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> sftp proxy password\n\n\n# proxyport\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> sftp proxy port\n\n\n# proxytype\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> sftp proxy type\n\n\n# proxyuser\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> sftp proxy user\n\n\n# regexp\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> a regexp to filter on full path\n\n\n# rootdir\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: true\n\n> is path is relative to root dir\n\n\n# username\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> username on the remote server\n\n\n# outputs\n\n\n# files\n\n * type: array\n * subtype: file\n\n> the list of files\n\n\n# definitions\n\n\n# file\n\n# accessdate\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# filetype\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * possible values:\n   \n   * folder\n   * file\n   * file_or_folder\n   * imaginary\n\n# flags\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n# groupid\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n# name\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# path\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# permissions\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n# size\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n# symboliclink\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: false\n\n# updateddate\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# userid\n\n * type: integer\n * dynamic: ❓\n * required: ❌',charsets:{cjk:!0}},{title:"Move",frontmatter:{title:"Move",editLink:!1,description:"Move a file to a SFTP server.",icon:"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4KPHN2ZyB2ZXJzaW9uPSIxLjEiIGlkPSJDYWxxdWVfMSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIgeD0iMHB4IiB5PSIwcHgiCiAgICAgdmlld0JveD0iMCAwIDI0IDI0IiBzdHlsZT0iZW5hYmxlLWJhY2tncm91bmQ6bmV3IDAgMCAyNCAyNDsiIHhtbDpzcGFjZT0icHJlc2VydmUiPgo8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgoJLnN0MHtmaWxsOm5vbmU7fQoJLnN0MXtmaWxsOiMwRjE3MjQ7fQo8L3N0eWxlPgogICAgPGc+Cgk8cmVjdCB4PSI5IiB5PSI0IiBjbGFzcz0ic3QwIiB3aWR0aD0iMSIgaGVpZ2h0PSIyIi8+CiAgICAgICAgPHJlY3QgeD0iNSIgeT0iNCIgY2xhc3M9InN0MCIgd2lkdGg9IjIiIGhlaWdodD0iMiIvPgogICAgICAgIDxwYXRoIGNsYXNzPSJzdDEiIGQ9Ik00LDhoMTZjMC42LDAsMS0wLjQsMS0xVjNjMC0wLjYtMC40LTEtMS0xSDRDMy40LDIsMywyLjQsMywzdjRDMyw3LjYsMy40LDgsNCw4eiBNOSw0aDF2Mkg5VjR6IE01LDRoMnYySDVWNHoKCQkiLz4KICAgICAgICA8cGF0aCBjbGFzcz0ic3QxIiBkPSJNMTYuMywxM2MwLjEsMCwwLjItMC4xLDAuMy0wLjFzMC4yLTAuMSwwLjItMC4yYzAtMC4xLDAuMS0wLjIsMC4xLTAuM2MwLTAuMSwwLTAuMi0wLjEtMC4zcy0wLjEtMC4yLTAuMi0wLjIKCQljLTAuMS0wLjEtMC4yLTAuMS0wLjMtMC4xYy0wLjEsMC0wLjIsMC0wLjQsMGMtMC4yLDAtMC40LDAtMC41LDBWMTNoMC40QzE2LDEzLDE2LjIsMTMsMTYuMywxM3oiLz4KICAgICAgICA8cGF0aCBjbGFzcz0ic3QxIiBkPSJNMTUsMTljMC0wLjYtMC40LTEtMS0xaC0xdi0yaDdjMC42LDAsMS0wLjQsMS0xdi00YzAtMC42LTAuNC0xLTEtMUg0Yy0wLjYsMC0xLDAuNC0xLDF2NGMwLDAuNiwwLjQsMSwxLDFoN3YyCgkJaC0xYy0wLjYsMC0xLDAuNC0xLDFIMnYyaDdjMCwwLjYsMC40LDEsMSwxaDRjMC42LDAsMS0wLjQsMS0xaDd2LTJIMTV6IE0xNSwxMS4zYzAuMSwwLDAuMy0wLjEsMC41LTAuMWMwLjIsMCwwLjMsMCwwLjUsMAoJCWMwLjUsMCwwLjksMC4xLDEuMSwwLjNzMC40LDAuNSwwLjQsMC44YzAsMC4yLDAsMC40LTAuMSwwLjVjLTAuMSwwLjEtMC4yLDAuMy0wLjMsMC4zYy0wLjEsMC4xLTAuMywwLjItMC41LDAuMnMtMC40LDAuMS0wLjcsMC4xCgkJaC0wLjR2MS4zSDE1VjExLjN6IE04LjUsMTQuNWMtMC4yLDAuMi0wLjUsMC4yLTAuOSwwLjJjLTAuMSwwLTAuMywwLTAuNCwwYy0wLjEsMC0wLjIsMC0wLjMtMC4xYy0wLjEsMC0wLjItMC4xLTAuMi0wLjEKCQlzLTAuMS0wLjEtMC4yLTAuMWwwLjEtMC40YzAuMSwwLDAuMiwwLjEsMC40LDAuMWMwLjIsMC4xLDAuMywwLjEsMC42LDAuMWMwLjUsMCwwLjgtMC4yLDAuOC0wLjVjMC0wLjEsMC0wLjItMC4xLTAuMwoJCWMwLTAuMS0wLjEtMC4xLTAuMi0wLjJjLTAuMS0wLjEtMC4yLTAuMS0wLjMtMC4xcy0wLjItMC4xLTAuMy0wLjFjLTAuMSwwLTAuMi0wLjEtMC40LTAuMWMtMC4xLTAuMS0wLjItMC4xLTAuMy0wLjIKCQljLTAuMS0wLjEtMC4xLTAuMi0wLjItMC4zYzAtMC4xLTAuMS0wLjItMC4xLTAuNGMwLTAuMywwLjEtMC41LDAuMy0wLjdjMC4yLTAuMiwwLjUtMC4zLDAuOS0wLjNjMC4yLDAsMC40LDAsMC42LDAuMQoJCXMwLjMsMC4xLDAuNCwwLjFsLTAuMiwwLjRjLTAuMSwwLTAuMi0wLjEtMC4zLTAuMWMtMC4xLDAtMC4zLTAuMS0wLjUtMC4xYy0wLjEsMC0wLjIsMC0wLjMsMHMtMC4xLDAuMS0wLjIsMC4xcy0wLjEsMC4xLTAuMSwwLjIKCQljMCwwLjEtMC4xLDAuMS0wLjEsMC4yYzAsMC4xLDAsMC4yLDAuMSwwLjJjMCwwLjEsMC4xLDAuMSwwLjIsMC4yYzAuMSwwLDAuMSwwLjEsMC4yLDAuMWMwLjEsMCwwLjIsMC4xLDAuMywwLjEKCQljMC4xLDAuMSwwLjMsMC4xLDAuNCwwLjJDOC40LDEzLDguNSwxMyw4LjYsMTMuMWMwLjEsMC4xLDAuMiwwLjIsMC4yLDAuM2MwLDAuMSwwLjEsMC4zLDAuMSwwLjRDOC44LDE0LjEsOC43LDE0LjQsOC41LDE0LjV6CgkJIE0xMS41LDExLjdIOS45djFoMS40djAuNEg5Ljl2MS42SDkuNHYtMy41aDIuMVYxMS43eiBNMTEuOCwxMS43di0wLjRoMi43djAuNGgtMS4xdjNoLTAuNXYtM0gxMS44eiIvPgo8L2c+Cjwvc3ZnPgo=",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Move"},{property:"og:description",content:"Move a file to a SFTP server. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-fs/tasks/sftp/io.kestra.plugin.fs.sftp.Move.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Move"},{name:"twitter:description",content:"Move a file to a SFTP server. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-fs/tasks/sftp/io.kestra.plugin.fs.sftp.Move.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-fs/tasks/sftp/io.kestra.plugin.fs.sftp.Move.html",relativePath:"plugins/plugin-fs/tasks/sftp/io.kestra.plugin.fs.sftp.Move.md",key:"v-23a689c3",path:"/plugins/plugin-fs/tasks/sftp/io.kestra.plugin.fs.sftp.Move.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:146},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:322},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:259},{level:3,title:"host",slug:"host",normalizedTitle:"host",charIndex:205},{level:3,title:"keyfile",slug:"keyfile",normalizedTitle:"keyfile",charIndex:501},{level:3,title:"passphrase",slug:"passphrase",normalizedTitle:"passphrase",charIndex:617},{level:3,title:"password",slug:"password",normalizedTitle:"password",charIndex:244},{level:3,title:"port",slug:"port",normalizedTitle:"port",charIndex:221},{level:3,title:"proxyHost",slug:"proxyhost",normalizedTitle:"proxyhost",charIndex:898},{level:3,title:"proxyPassword",slug:"proxypassword",normalizedTitle:"proxypassword",charIndex:977},{level:3,title:"proxyPort",slug:"proxyport",normalizedTitle:"proxyport",charIndex:1064},{level:3,title:"proxyType",slug:"proxytype",normalizedTitle:"proxytype",charIndex:1143},{level:3,title:"proxyUser",slug:"proxyuser",normalizedTitle:"proxyuser",charIndex:1222},{level:3,title:"rootDir",slug:"rootdir",normalizedTitle:"rootdir",charIndex:1301},{level:3,title:"to",slug:"to",normalizedTitle:"to",charIndex:60},{level:3,title:"username",slug:"username",normalizedTitle:"username",charIndex:230},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1779},{level:3,title:"from",slug:"from-2",normalizedTitle:"from",charIndex:259},{level:3,title:"to",slug:"to-2",normalizedTitle:"to",charIndex:60},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:1880}],headersStr:"Examples Properties from host keyfile passphrase password port proxyHost proxyPassword proxyPort proxyType proxyUser rootDir to username Outputs from to Definitions",content:'Move\n\ntype: "io.kestra.plugin.fs.sftp.Move"\n\n\n> Move a file to a SFTP server.\n\nIf the destination directory doesn\'t exist, it will be created\n\n\n# Examples\n\nid: "move"\ntype: "io.kestra.plugin.fs.sftp.Move"\nhost: localhost\nport: 22\nusername: foo\npassword: pass\nfrom: "/upload/dir1/file.txt"\nto: "/upload/dir2/file.txt"\n\n\n\n# Properties\n\n\n# from\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The file to move\n\n\n# host\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Hostname of the remote server\n\n\n# keyfile\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Private keyfile to login on the source server with ssh\n\n\n# passphrase\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Passphrase of the ssh key\n\n\n# password\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Password on the remote server\n\n\n# port\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Default: 22\n\n> Port of the remote server\n\n\n# proxyHost\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> SFTP proxy host\n\n\n# proxyPassword\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> SFTP proxy password\n\n\n# proxyPort\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> SFTP proxy port\n\n\n# proxyType\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> SFTP proxy type\n\n\n# proxyUser\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> SFTP proxy user\n\n\n# rootDir\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: true\n\n> Is path is relative to root dir\n\n\n# to\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The destination path to move\n\nThe full destination path (with filename optionally)\nIf end with a /, the destination is considered as a directory and filename will be happen\nIf the destFile exists, it is deleted first.\n\n\n# username\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Username on the remote server\n\n\n# Outputs\n\n\n# from\n\n * Type: string\n\n> The from uri\n\n\n# to\n\n * Type: string\n\n> The destination uri\n\n\n# Definitions',normalizedContent:'move\n\ntype: "io.kestra.plugin.fs.sftp.move"\n\n\n> move a file to a sftp server.\n\nif the destination directory doesn\'t exist, it will be created\n\n\n# examples\n\nid: "move"\ntype: "io.kestra.plugin.fs.sftp.move"\nhost: localhost\nport: 22\nusername: foo\npassword: pass\nfrom: "/upload/dir1/file.txt"\nto: "/upload/dir2/file.txt"\n\n\n\n# properties\n\n\n# from\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the file to move\n\n\n# host\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> hostname of the remote server\n\n\n# keyfile\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> private keyfile to login on the source server with ssh\n\n\n# passphrase\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> passphrase of the ssh key\n\n\n# password\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> password on the remote server\n\n\n# port\n\n * type: string\n * dynamic: ❓\n * required: ❌\n * default: 22\n\n> port of the remote server\n\n\n# proxyhost\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> sftp proxy host\n\n\n# proxypassword\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> sftp proxy password\n\n\n# proxyport\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> sftp proxy port\n\n\n# proxytype\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> sftp proxy type\n\n\n# proxyuser\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> sftp proxy user\n\n\n# rootdir\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: true\n\n> is path is relative to root dir\n\n\n# to\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the destination path to move\n\nthe full destination path (with filename optionally)\nif end with a /, the destination is considered as a directory and filename will be happen\nif the destfile exists, it is deleted first.\n\n\n# username\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> username on the remote server\n\n\n# outputs\n\n\n# from\n\n * type: string\n\n> the from uri\n\n\n# to\n\n * type: string\n\n> the destination uri\n\n\n# definitions',charsets:{}},{title:"Upload",frontmatter:{title:"Upload",editLink:!1,description:"Upload a file to a sftp server",icon:"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4KPHN2ZyB2ZXJzaW9uPSIxLjEiIGlkPSJDYWxxdWVfMSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIgeD0iMHB4IiB5PSIwcHgiCiAgICAgdmlld0JveD0iMCAwIDI0IDI0IiBzdHlsZT0iZW5hYmxlLWJhY2tncm91bmQ6bmV3IDAgMCAyNCAyNDsiIHhtbDpzcGFjZT0icHJlc2VydmUiPgo8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgoJLnN0MHtmaWxsOm5vbmU7fQoJLnN0MXtmaWxsOiMwRjE3MjQ7fQo8L3N0eWxlPgogICAgPGc+Cgk8cmVjdCB4PSI5IiB5PSI0IiBjbGFzcz0ic3QwIiB3aWR0aD0iMSIgaGVpZ2h0PSIyIi8+CiAgICAgICAgPHJlY3QgeD0iNSIgeT0iNCIgY2xhc3M9InN0MCIgd2lkdGg9IjIiIGhlaWdodD0iMiIvPgogICAgICAgIDxwYXRoIGNsYXNzPSJzdDEiIGQ9Ik00LDhoMTZjMC42LDAsMS0wLjQsMS0xVjNjMC0wLjYtMC40LTEtMS0xSDRDMy40LDIsMywyLjQsMywzdjRDMyw3LjYsMy40LDgsNCw4eiBNOSw0aDF2Mkg5VjR6IE01LDRoMnYySDVWNHoKCQkiLz4KICAgICAgICA8cGF0aCBjbGFzcz0ic3QxIiBkPSJNMTYuMywxM2MwLjEsMCwwLjItMC4xLDAuMy0wLjFzMC4yLTAuMSwwLjItMC4yYzAtMC4xLDAuMS0wLjIsMC4xLTAuM2MwLTAuMSwwLTAuMi0wLjEtMC4zcy0wLjEtMC4yLTAuMi0wLjIKCQljLTAuMS0wLjEtMC4yLTAuMS0wLjMtMC4xYy0wLjEsMC0wLjIsMC0wLjQsMGMtMC4yLDAtMC40LDAtMC41LDBWMTNoMC40QzE2LDEzLDE2LjIsMTMsMTYuMywxM3oiLz4KICAgICAgICA8cGF0aCBjbGFzcz0ic3QxIiBkPSJNMTUsMTljMC0wLjYtMC40LTEtMS0xaC0xdi0yaDdjMC42LDAsMS0wLjQsMS0xdi00YzAtMC42LTAuNC0xLTEtMUg0Yy0wLjYsMC0xLDAuNC0xLDF2NGMwLDAuNiwwLjQsMSwxLDFoN3YyCgkJaC0xYy0wLjYsMC0xLDAuNC0xLDFIMnYyaDdjMCwwLjYsMC40LDEsMSwxaDRjMC42LDAsMS0wLjQsMS0xaDd2LTJIMTV6IE0xNSwxMS4zYzAuMSwwLDAuMy0wLjEsMC41LTAuMWMwLjIsMCwwLjMsMCwwLjUsMAoJCWMwLjUsMCwwLjksMC4xLDEuMSwwLjNzMC40LDAuNSwwLjQsMC44YzAsMC4yLDAsMC40LTAuMSwwLjVjLTAuMSwwLjEtMC4yLDAuMy0wLjMsMC4zYy0wLjEsMC4xLTAuMywwLjItMC41LDAuMnMtMC40LDAuMS0wLjcsMC4xCgkJaC0wLjR2MS4zSDE1VjExLjN6IE04LjUsMTQuNWMtMC4yLDAuMi0wLjUsMC4yLTAuOSwwLjJjLTAuMSwwLTAuMywwLTAuNCwwYy0wLjEsMC0wLjIsMC0wLjMtMC4xYy0wLjEsMC0wLjItMC4xLTAuMi0wLjEKCQlzLTAuMS0wLjEtMC4yLTAuMWwwLjEtMC40YzAuMSwwLDAuMiwwLjEsMC40LDAuMWMwLjIsMC4xLDAuMywwLjEsMC42LDAuMWMwLjUsMCwwLjgtMC4yLDAuOC0wLjVjMC0wLjEsMC0wLjItMC4xLTAuMwoJCWMwLTAuMS0wLjEtMC4xLTAuMi0wLjJjLTAuMS0wLjEtMC4yLTAuMS0wLjMtMC4xcy0wLjItMC4xLTAuMy0wLjFjLTAuMSwwLTAuMi0wLjEtMC40LTAuMWMtMC4xLTAuMS0wLjItMC4xLTAuMy0wLjIKCQljLTAuMS0wLjEtMC4xLTAuMi0wLjItMC4zYzAtMC4xLTAuMS0wLjItMC4xLTAuNGMwLTAuMywwLjEtMC41LDAuMy0wLjdjMC4yLTAuMiwwLjUtMC4zLDAuOS0wLjNjMC4yLDAsMC40LDAsMC42LDAuMQoJCXMwLjMsMC4xLDAuNCwwLjFsLTAuMiwwLjRjLTAuMSwwLTAuMi0wLjEtMC4zLTAuMWMtMC4xLDAtMC4zLTAuMS0wLjUtMC4xYy0wLjEsMC0wLjIsMC0wLjMsMHMtMC4xLDAuMS0wLjIsMC4xcy0wLjEsMC4xLTAuMSwwLjIKCQljMCwwLjEtMC4xLDAuMS0wLjEsMC4yYzAsMC4xLDAsMC4yLDAuMSwwLjJjMCwwLjEsMC4xLDAuMSwwLjIsMC4yYzAuMSwwLDAuMSwwLjEsMC4yLDAuMWMwLjEsMCwwLjIsMC4xLDAuMywwLjEKCQljMC4xLDAuMSwwLjMsMC4xLDAuNCwwLjJDOC40LDEzLDguNSwxMyw4LjYsMTMuMWMwLjEsMC4xLDAuMiwwLjIsMC4yLDAuM2MwLDAuMSwwLjEsMC4zLDAuMSwwLjRDOC44LDE0LjEsOC43LDE0LjQsOC41LDE0LjV6CgkJIE0xMS41LDExLjdIOS45djFoMS40djAuNEg5Ljl2MS42SDkuNHYtMy41aDIuMVYxMS43eiBNMTEuOCwxMS43di0wLjRoMi43djAuNGgtMS4xdjNoLTAuNXYtM0gxMS44eiIvPgo8L2c+Cjwvc3ZnPgo=",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Upload"},{property:"og:description",content:"Upload a file to a sftp server | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-fs/tasks/sftp/io.kestra.plugin.fs.sftp.Upload.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Upload"},{name:"twitter:description",content:"Upload a file to a sftp server | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-fs/tasks/sftp/io.kestra.plugin.fs.sftp.Upload.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-fs/tasks/sftp/io.kestra.plugin.fs.sftp.Upload.html",relativePath:"plugins/plugin-fs/tasks/sftp/io.kestra.plugin.fs.sftp.Upload.md",key:"v-2227903a",path:"/plugins/plugin-fs/tasks/sftp/io.kestra.plugin.fs.sftp.Upload.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:87},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:270},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:204},{level:3,title:"host",slug:"host",normalizedTitle:"host",charIndex:150},{level:3,title:"keyfile",slug:"keyfile",normalizedTitle:"keyfile",charIndex:454},{level:3,title:"passphrase",slug:"passphrase",normalizedTitle:"passphrase",charIndex:570},{level:3,title:"password",slug:"password",normalizedTitle:"password",charIndex:189},{level:3,title:"port",slug:"port",normalizedTitle:"port",charIndex:166},{level:3,title:"proxyHost",slug:"proxyhost",normalizedTitle:"proxyhost",charIndex:851},{level:3,title:"proxyPassword",slug:"proxypassword",normalizedTitle:"proxypassword",charIndex:930},{level:3,title:"proxyPort",slug:"proxyport",normalizedTitle:"proxyport",charIndex:1017},{level:3,title:"proxyType",slug:"proxytype",normalizedTitle:"proxytype",charIndex:1096},{level:3,title:"proxyUser",slug:"proxyuser",normalizedTitle:"proxyuser",charIndex:1175},{level:3,title:"rootDir",slug:"rootdir",normalizedTitle:"rootdir",charIndex:1254},{level:3,title:"to",slug:"to",normalizedTitle:"to",charIndex:66},{level:3,title:"username",slug:"username",normalizedTitle:"username",charIndex:175},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1535},{level:3,title:"from",slug:"from-2",normalizedTitle:"from",charIndex:204},{level:3,title:"to",slug:"to-2",normalizedTitle:"to",charIndex:66},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:1710}],headersStr:"Examples Properties from host keyfile passphrase password port proxyHost proxyPassword proxyPort proxyType proxyUser rootDir to username Outputs from to Definitions",content:'Upload\n\ntype: "io.kestra.plugin.fs.sftp.Upload"\n\n\n> Upload a file to a sftp server\n\n\n# Examples\n\nid: "upload"\ntype: "io.kestra.plugin.fs.sftp.Upload"\nhost: localhost\nport: 22\nusername: foo\npassword: pass\nfrom: "{{ outputs.taskid.uri }}"\nto: "/upload/dir2/file.txt"\n\n\n\n# Properties\n\n\n# from\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The file path to copy\n\n\n# host\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Hostname of the remote server\n\n\n# keyfile\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Private keyfile to login on the source server with ssh\n\n\n# passphrase\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Passphrase of the ssh key\n\n\n# password\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Password on the remote server\n\n\n# port\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Default: 22\n\n> Port of the remote server\n\n\n# proxyHost\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> SFTP proxy host\n\n\n# proxyPassword\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> SFTP proxy password\n\n\n# proxyPort\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> SFTP proxy port\n\n\n# proxyType\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> SFTP proxy type\n\n\n# proxyUser\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> SFTP proxy user\n\n\n# rootDir\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: true\n\n> Is path is relative to root dir\n\n\n# to\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The destination path\n\n\n# username\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Username on the remote server\n\n\n# Outputs\n\n\n# from\n\n * Type: string\n\n> The fully-qualified URIs that point to source data\n\n\n# to\n\n * Type: string\n\n> The fully-qualified URIs that point to destination path\n\n\n# Definitions',normalizedContent:'upload\n\ntype: "io.kestra.plugin.fs.sftp.upload"\n\n\n> upload a file to a sftp server\n\n\n# examples\n\nid: "upload"\ntype: "io.kestra.plugin.fs.sftp.upload"\nhost: localhost\nport: 22\nusername: foo\npassword: pass\nfrom: "{{ outputs.taskid.uri }}"\nto: "/upload/dir2/file.txt"\n\n\n\n# properties\n\n\n# from\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the file path to copy\n\n\n# host\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> hostname of the remote server\n\n\n# keyfile\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> private keyfile to login on the source server with ssh\n\n\n# passphrase\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> passphrase of the ssh key\n\n\n# password\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> password on the remote server\n\n\n# port\n\n * type: string\n * dynamic: ❓\n * required: ❌\n * default: 22\n\n> port of the remote server\n\n\n# proxyhost\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> sftp proxy host\n\n\n# proxypassword\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> sftp proxy password\n\n\n# proxyport\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> sftp proxy port\n\n\n# proxytype\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> sftp proxy type\n\n\n# proxyuser\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> sftp proxy user\n\n\n# rootdir\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: true\n\n> is path is relative to root dir\n\n\n# to\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the destination path\n\n\n# username\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> username on the remote server\n\n\n# outputs\n\n\n# from\n\n * type: string\n\n> the fully-qualified uris that point to source data\n\n\n# to\n\n * type: string\n\n> the fully-qualified uris that point to destination path\n\n\n# definitions',charsets:{}},{title:"Trigger",frontmatter:{title:"Trigger",editLink:!1,description:"Wait for files on a FTPS server",icon:"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4KPHN2ZyB2ZXJzaW9uPSIxLjEiIGlkPSJDYWxxdWVfMSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIgeD0iMHB4IiB5PSIwcHgiCiAgICAgdmlld0JveD0iMCAwIDI0IDI0IiBzdHlsZT0iZW5hYmxlLWJhY2tncm91bmQ6bmV3IDAgMCAyNCAyNDsiIHhtbDpzcGFjZT0icHJlc2VydmUiPgo8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgoJLnN0MHtmaWxsOm5vbmU7fQoJLnN0MXtmaWxsOiMwRjE3MjQ7fQo8L3N0eWxlPgogICAgPGc+Cgk8cmVjdCB4PSI1IiB5PSI0IiBjbGFzcz0ic3QwIiB3aWR0aD0iMiIgaGVpZ2h0PSIyIi8+CiAgICAgICAgPHJlY3QgeD0iOSIgeT0iNCIgY2xhc3M9InN0MCIgd2lkdGg9IjEiIGhlaWdodD0iMiIvPgogICAgICAgIDxwYXRoIGNsYXNzPSJzdDEiIGQ9Ik00LDhoMTZjMC42LDAsMS0wLjQsMS0xVjNjMC0wLjYtMC40LTEtMS0xSDRDMy40LDIsMywyLjQsMywzdjRDMyw3LjYsMy40LDgsNCw4eiBNOSw0aDF2Mkg5VjR6IE01LDRoMnYySDVWNHoKCQkiLz4KICAgICAgICA8cGF0aCBjbGFzcz0ic3QxIiBkPSJNMTUsMTljMC0wLjYtMC40LTEtMS0xaC0xdi0yaDdjMC42LDAsMS0wLjQsMS0xdi00YzAtMC42LTAuNC0xLTEtMUg0Yy0wLjYsMC0xLDAuNC0xLDF2NGMwLDAuNiwwLjQsMSwxLDFoN3YyCgkJaC0xYy0wLjYsMC0xLDAuNC0xLDFIMnYyaDdjMCwwLjYsMC40LDEsMSwxaDRjMC42LDAsMS0wLjQsMS0xaDd2LTJIMTV6IE0xNi45LDEzLjZjMC0wLjEtMC4xLTAuMS0wLjItMC4yCgkJYy0wLjEtMC4xLTAuMi0wLjEtMC4zLTAuMXMtMC4yLTAuMS0wLjMtMC4xYy0wLjEsMC0wLjItMC4xLTAuNC0wLjFjLTAuMS0wLjEtMC4yLTAuMS0wLjMtMC4yYy0wLjEtMC4xLTAuMS0wLjItMC4yLTAuMwoJCWMwLTAuMS0wLjEtMC4yLTAuMS0wLjRjMC0wLjMsMC4xLTAuNSwwLjMtMC43YzAuMi0wLjIsMC41LTAuMywwLjktMC4zYzAuMiwwLDAuNCwwLDAuNiwwLjFzMC4zLDAuMSwwLjQsMC4xbC0wLjIsMC40CgkJYy0wLjEsMC0wLjItMC4xLTAuMy0wLjFzLTAuMy0wLjEtMC41LTAuMWMtMC4xLDAtMC4yLDAtMC4zLDBzLTAuMiwwLjEtMC4yLDAuMWMtMC4xLDAtMC4xLDAuMS0wLjEsMC4yYzAsMC4xLTAuMSwwLjEtMC4xLDAuMgoJCWMwLDAuMSwwLDAuMiwwLjEsMC4yYzAsMC4xLDAuMSwwLjEsMC4yLDAuMnMwLjEsMC4xLDAuMiwwLjFjMC4xLDAsMC4yLDAuMSwwLjMsMC4xYzAuMSwwLjEsMC4zLDAuMSwwLjQsMC4yCgkJYzAuMSwwLjEsMC4yLDAuMSwwLjMsMC4yczAuMiwwLjIsMC4yLDAuM2MwLjEsMC4xLDAuMSwwLjMsMC4xLDAuNGMwLDAuMy0wLjEsMC41LTAuMywwLjdzLTAuNSwwLjItMC45LDAuMmMtMC4xLDAtMC4zLDAtMC40LDAKCQljLTAuMSwwLTAuMiwwLTAuMy0wLjFzLTAuMi0wLjEtMC4yLTAuMWMtMC4xLDAtMC4xLTAuMS0wLjItMC4xbDAuMS0wLjRjMC4xLDAsMC4yLDAuMSwwLjQsMC4xYzAuMiwwLjEsMC4zLDAuMSwwLjYsMC4xCgkJYzAuNSwwLDAuOC0wLjIsMC44LTAuNUMxNywxMy43LDE2LjksMTMuNywxNi45LDEzLjZ6IE04LjksMTEuN0g3LjN2MWgxLjR2MC40SDcuM3YxLjZINi44di0zLjVoMi4xVjExLjd6IE0xMS44LDExLjdoLTEuMXYzaC0wLjUKCQl2LTNIOS4ydi0wLjRoMi43VjExLjd6IE0xMi44LDE0LjdoLTAuNXYtMy40YzAuMSwwLDAuMy0wLjEsMC41LTAuMWMwLjIsMCwwLjMsMCwwLjUsMGMwLjUsMCwwLjksMC4xLDEuMSwwLjNzMC40LDAuNSwwLjQsMC44CgkJYzAsMC4yLDAsMC40LTAuMSwwLjVjLTAuMSwwLjEtMC4yLDAuMy0wLjMsMC4zYy0wLjEsMC4xLTAuMywwLjItMC41LDAuMnMtMC40LDAuMS0wLjcsMC4xaC0wLjRWMTQuN3oiLz4KICAgICAgICA8cGF0aCBjbGFzcz0ic3QxIiBkPSJNMTQsMTIuOWMwLjEtMC4xLDAuMi0wLjEsMC4yLTAuMmMwLTAuMSwwLjEtMC4yLDAuMS0wLjNjMC0wLjEsMC0wLjItMC4xLTAuM3MtMC4xLTAuMi0wLjItMC4yCgkJYy0wLjEtMC4xLTAuMi0wLjEtMC4zLTAuMXMtMC4yLDAtMC40LDBjLTAuMiwwLTAuNCwwLTAuNSwwVjEzaDAuNGMwLjIsMCwwLjMsMCwwLjQsMEMxMy44LDEzLDEzLjksMTIuOSwxNCwxMi45eiIvPgo8L2c+Cjwvc3ZnPgo=",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Trigger"},{property:"og:description",content:"Wait for files on a FTPS server | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-fs/triggers/ftps/io.kestra.plugin.fs.ftps.Trigger.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Trigger"},{name:"twitter:description",content:"Wait for files on a FTPS server | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-fs/triggers/ftps/io.kestra.plugin.fs.ftps.Trigger.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-fs/triggers/ftps/io.kestra.plugin.fs.ftps.Trigger.html",relativePath:"plugins/plugin-fs/triggers/ftps/io.kestra.plugin.fs.ftps.Trigger.md",key:"v-dd0918da",path:"/plugins/plugin-fs/triggers/ftps/io.kestra.plugin.fs.ftps.Trigger.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:90},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:677},{level:3,title:"action",slug:"action",normalizedTitle:"action",charIndex:628},{level:3,title:"dataChannelProtectionLevel",slug:"datachannelprotectionlevel",normalizedTitle:"datachannelprotectionlevel",charIndex:834},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:591},{level:3,title:"host",slug:"host",normalizedTitle:"host",charIndex:520},{level:3,title:"interval",slug:"interval",normalizedTitle:"interval",charIndex:608},{level:3,title:"mode",slug:"mode",normalizedTitle:"mode",charIndex:1346},{level:3,title:"moveDirectory",slug:"movedirectory",normalizedTitle:"movedirectory",charIndex:645},{level:3,title:"passiveMode",slug:"passivemode",normalizedTitle:"passivemode",charIndex:1641},{level:3,title:"password",slug:"password",normalizedTitle:"password",charIndex:572},{level:3,title:"port",slug:"port",normalizedTitle:"port",charIndex:540},{level:3,title:"proxyHost",slug:"proxyhost",normalizedTitle:"proxyhost",charIndex:1941},{level:3,title:"proxyPort",slug:"proxyport",normalizedTitle:"proxyport",charIndex:2019},{level:3,title:"proxyType",slug:"proxytype",normalizedTitle:"proxytype",charIndex:2097},{level:3,title:"regExp",slug:"regexp",normalizedTitle:"regexp",charIndex:2235},{level:3,title:"rootDir",slug:"rootdir",normalizedTitle:"rootdir",charIndex:2328},{level:3,title:"username",slug:"username",normalizedTitle:"username",charIndex:554},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:2531},{level:3,title:"files",slug:"files",normalizedTitle:"files",charIndex:63},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:2640},{level:3,title:"File",slug:"file",normalizedTitle:"file",charIndex:2577}],headersStr:"Examples Properties action dataChannelProtectionLevel from host interval mode moveDirectory passiveMode password port proxyHost proxyPort proxyType regExp rootDir username Outputs files Definitions File",content:'Trigger\n\ntype: "io.kestra.plugin.fs.ftps.Trigger"\n\n\n> Wait for files on a FTPS server\n\n\n# Examples\n\n> Wait for a list of file on a FTP server and iterate through the files\n\nid: gcs-listen\nnamespace: io.kestra.tests\n\ntasks:\n  - id: each\n    type: io.kestra.core.tasks.flows.EachSequential\n    tasks:\n      - id: return\n        type: io.kestra.core.tasks.debugs.Return\n        format: "{{taskrun.value}}"\n    value: "{{ trigger.files | jq \'.path\' }}"\n\ntriggers:\n  - id: watch\n    type: io.kestra.plugin.fs.ftp.Trigger\n    host: localhost\n    port: 990\n    username: foo\n    password: pass\n    from: "/in/"\n    interval: PT10S\n    action: MOVE\n    moveDirectory: "/archive/"\n\n\n\n# Properties\n\n\n# action\n\n * Type: string\n\n * Dynamic: ✔️\n\n * Required: ✔️\n\n * Possible Values:\n   \n   * MOVE\n   * DELETE\n\n> The action to do on find files\n\n\n# dataChannelProtectionLevel\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Default: P\n\n * Possible Values:\n   \n   * C\n   * S\n   * E\n   * P\n\n> Sets the data channel protection level (PROT).\n\n\n# from\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The directory to list\n\n\n# host\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Hostname of the remote server\n\n\n# interval\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Default: 60.000000000\n * Format: duration\n\n> The interval between test of triggers\n\n\n# mode\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Default: EXPLICIT\n\n * Possible Values:\n   \n   * IMPLICIT\n   * EXPLICIT\n\n> Sets FTPS mode, either "implicit" or "explicit".\n\n\n# moveDirectory\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The destination directory in case off MOVE\n\n\n# passiveMode\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: true\n\n> Enter into passive mode.\n\n\n# password\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Password on the remote server\n\n\n# port\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Default: 990\n\n> Port of the remote server\n\n\n# proxyHost\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> FTP proxy host\n\n\n# proxyPort\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> FTP proxy port\n\n\n# proxyType\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Possible Values:\n   \n   * DIRECT\n   * HTTP\n   * SOCKS\n\n> FTP proxy type\n\n\n# regExp\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> A regexp to filter on full path\n\n\n# rootDir\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: true\n\n> Is path is relative to root dir\n\n\n# username\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Username on the remote server\n\n\n# Outputs\n\n\n# files\n\n * Type: array\n * SubType: File\n * SubType: ====\n\n> The bucket of the downloaded file\n\n\n# Definitions\n\n\n# File\n\n# accessDate\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# fileType\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Possible Values:\n   \n   * FOLDER\n   * FILE\n   * FILE_OR_FOLDER\n   * IMAGINARY\n\n# flags\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n# groupId\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n# name\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# path\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# permissions\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n# size\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n# symbolicLink\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: false\n\n# updatedDate\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# userId\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌',normalizedContent:'trigger\n\ntype: "io.kestra.plugin.fs.ftps.trigger"\n\n\n> wait for files on a ftps server\n\n\n# examples\n\n> wait for a list of file on a ftp server and iterate through the files\n\nid: gcs-listen\nnamespace: io.kestra.tests\n\ntasks:\n  - id: each\n    type: io.kestra.core.tasks.flows.eachsequential\n    tasks:\n      - id: return\n        type: io.kestra.core.tasks.debugs.return\n        format: "{{taskrun.value}}"\n    value: "{{ trigger.files | jq \'.path\' }}"\n\ntriggers:\n  - id: watch\n    type: io.kestra.plugin.fs.ftp.trigger\n    host: localhost\n    port: 990\n    username: foo\n    password: pass\n    from: "/in/"\n    interval: pt10s\n    action: move\n    movedirectory: "/archive/"\n\n\n\n# properties\n\n\n# action\n\n * type: string\n\n * dynamic: ✔️\n\n * required: ✔️\n\n * possible values:\n   \n   * move\n   * delete\n\n> the action to do on find files\n\n\n# datachannelprotectionlevel\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * default: p\n\n * possible values:\n   \n   * c\n   * s\n   * e\n   * p\n\n> sets the data channel protection level (prot).\n\n\n# from\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the directory to list\n\n\n# host\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> hostname of the remote server\n\n\n# interval\n\n * type: string\n * dynamic: ❓\n * required: ❌\n * default: 60.000000000\n * format: duration\n\n> the interval between test of triggers\n\n\n# mode\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * default: explicit\n\n * possible values:\n   \n   * implicit\n   * explicit\n\n> sets ftps mode, either "implicit" or "explicit".\n\n\n# movedirectory\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the destination directory in case off move\n\n\n# passivemode\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: true\n\n> enter into passive mode.\n\n\n# password\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> password on the remote server\n\n\n# port\n\n * type: string\n * dynamic: ❓\n * required: ❌\n * default: 990\n\n> port of the remote server\n\n\n# proxyhost\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> ftp proxy host\n\n\n# proxyport\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> ftp proxy port\n\n\n# proxytype\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * possible values:\n   \n   * direct\n   * http\n   * socks\n\n> ftp proxy type\n\n\n# regexp\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> a regexp to filter on full path\n\n\n# rootdir\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: true\n\n> is path is relative to root dir\n\n\n# username\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> username on the remote server\n\n\n# outputs\n\n\n# files\n\n * type: array\n * subtype: file\n * subtype: ====\n\n> the bucket of the downloaded file\n\n\n# definitions\n\n\n# file\n\n# accessdate\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# filetype\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * possible values:\n   \n   * folder\n   * file\n   * file_or_folder\n   * imaginary\n\n# flags\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n# groupid\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n# name\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# path\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# permissions\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n# size\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n# symboliclink\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: false\n\n# updateddate\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# userid\n\n * type: integer\n * dynamic: ❓\n * required: ❌',charsets:{cjk:!0}},{title:"Trigger",frontmatter:{title:"Trigger",editLink:!1,description:"Wait for files on a FTP server",icon:"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4KPHN2ZyB2ZXJzaW9uPSIxLjEiIGlkPSJDYWxxdWVfMSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIgeD0iMHB4IiB5PSIwcHgiCiAgICAgdmlld0JveD0iMCAwIDI0IDI0IiBzdHlsZT0iZW5hYmxlLWJhY2tncm91bmQ6bmV3IDAgMCAyNCAyNDsiIHhtbDpzcGFjZT0icHJlc2VydmUiPgo8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgoJLnN0MHtmaWxsOm5vbmU7fQoJLnN0MXtmaWxsOiMwRjE3MjQ7fQo8L3N0eWxlPgogICAgPGc+Cgk8cmVjdCB4PSI1IiB5PSI0IiBjbGFzcz0ic3QwIiB3aWR0aD0iMiIgaGVpZ2h0PSIyIi8+CiAgICAgICAgPHJlY3QgeD0iOSIgeT0iNCIgY2xhc3M9InN0MCIgd2lkdGg9IjEiIGhlaWdodD0iMiIvPgogICAgICAgIDxwYXRoIGNsYXNzPSJzdDEiIGQ9Ik00LDhoMTZjMC42LDAsMS0wLjQsMS0xVjNjMC0wLjYtMC40LTEtMS0xSDRDMy40LDIsMywyLjQsMywzdjRDMyw3LjYsMy40LDgsNCw4eiBNOSw0aDF2Mkg5VjR6IE01LDRoMnYySDVWNHoKCQkiLz4KICAgICAgICA8cGF0aCBjbGFzcz0ic3QxIiBkPSJNMTUsMTNjMC4xLDAsMC4yLTAuMSwwLjMtMC4xczAuMi0wLjEsMC4yLTAuMmMwLTAuMSwwLjEtMC4yLDAuMS0wLjNjMC0wLjEsMC0wLjItMC4xLTAuM3MtMC4xLTAuMi0wLjItMC4yCgkJYy0wLjEtMC4xLTAuMi0wLjEtMC4zLTAuMWMtMC4xLDAtMC4yLDAtMC40LDBjLTAuMiwwLTAuNCwwLTAuNSwwVjEzaDAuNEMxNC43LDEzLDE0LjgsMTMsMTUsMTN6Ii8+CiAgICAgICAgPHBhdGggY2xhc3M9InN0MSIgZD0iTTE1LDE5YzAtMC42LTAuNC0xLTEtMWgtMXYtMmg3YzAuNiwwLDEtMC40LDEtMXYtNGMwLTAuNi0wLjQtMS0xLTFINGMtMC42LDAtMSwwLjQtMSwxdjRjMCwwLjYsMC40LDEsMSwxaDd2MgoJCWgtMWMtMC42LDAtMSwwLjQtMSwxSDJ2Mmg3YzAsMC42LDAuNCwxLDEsMWg0YzAuNiwwLDEtMC40LDEtMWg3di0ySDE1eiBNMTMuNywxMS4zYzAuMSwwLDAuMy0wLjEsMC41LTAuMWMwLjIsMCwwLjMsMCwwLjUsMAoJCWMwLjUsMCwwLjksMC4xLDEuMSwwLjNzMC40LDAuNSwwLjQsMC44YzAsMC4yLDAsMC40LTAuMSwwLjVjLTAuMSwwLjEtMC4yLDAuMy0wLjMsMC4zYy0wLjEsMC4xLTAuMywwLjItMC41LDAuMnMtMC40LDAuMS0wLjcsMC4xCgkJaC0wLjR2MS4zaC0wLjVWMTEuM3ogTTEwLjIsMTEuN0g4LjZ2MUgxMHYwLjRIOC42djEuNkg4LjF2LTMuNWgyLjFWMTEuN3ogTTEyLjEsMTQuN2gtMC41di0zaC0xLjF2LTAuNGgyLjd2MC40aC0xLjFWMTQuN3oiLz4KPC9nPgo8L3N2Zz4K",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Trigger"},{property:"og:description",content:"Wait for files on a FTP server | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-fs/triggers/ftp/io.kestra.plugin.fs.ftp.Trigger.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Trigger"},{name:"twitter:description",content:"Wait for files on a FTP server | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-fs/triggers/ftp/io.kestra.plugin.fs.ftp.Trigger.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-fs/triggers/ftp/io.kestra.plugin.fs.ftp.Trigger.html",relativePath:"plugins/plugin-fs/triggers/ftp/io.kestra.plugin.fs.ftp.Trigger.md",key:"v-2942bfcf",path:"/plugins/plugin-fs/triggers/ftp/io.kestra.plugin.fs.ftp.Trigger.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:88},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:674},{level:3,title:"action",slug:"action",normalizedTitle:"action",charIndex:625},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:588},{level:3,title:"host",slug:"host",normalizedTitle:"host",charIndex:518},{level:3,title:"interval",slug:"interval",normalizedTitle:"interval",charIndex:605},{level:3,title:"moveDirectory",slug:"movedirectory",normalizedTitle:"movedirectory",charIndex:642},{level:3,title:"passiveMode",slug:"passivemode",normalizedTitle:"passivemode",charIndex:1232},{level:3,title:"password",slug:"password",normalizedTitle:"password",charIndex:569},{level:3,title:"port",slug:"port",normalizedTitle:"port",charIndex:538},{level:3,title:"proxyHost",slug:"proxyhost",normalizedTitle:"proxyhost",charIndex:1531},{level:3,title:"proxyPort",slug:"proxyport",normalizedTitle:"proxyport",charIndex:1609},{level:3,title:"proxyType",slug:"proxytype",normalizedTitle:"proxytype",charIndex:1687},{level:3,title:"regExp",slug:"regexp",normalizedTitle:"regexp",charIndex:1825},{level:3,title:"rootDir",slug:"rootdir",normalizedTitle:"rootdir",charIndex:1918},{level:3,title:"username",slug:"username",normalizedTitle:"username",charIndex:551},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:2121},{level:3,title:"files",slug:"files",normalizedTitle:"files",charIndex:62},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:2230},{level:3,title:"File",slug:"file",normalizedTitle:"file",charIndex:2167}],headersStr:"Examples Properties action from host interval moveDirectory passiveMode password port proxyHost proxyPort proxyType regExp rootDir username Outputs files Definitions File",content:'Trigger\n\ntype: "io.kestra.plugin.fs.ftp.Trigger"\n\n\n> Wait for files on a FTP server\n\n\n# Examples\n\n> Wait for a list of file on a FTP server and iterate through the files\n\nid: gcs-listen\nnamespace: io.kestra.tests\n\ntasks:\n  - id: each\n    type: io.kestra.core.tasks.flows.EachSequential\n    tasks:\n      - id: return\n        type: io.kestra.core.tasks.debugs.Return\n        format: "{{taskrun.value}}"\n    value: "{{ trigger.files | jq \'.path\' }}"\n\ntriggers:\n  - id: watch\n    type: io.kestra.plugin.fs.ftp.Trigger\n    host: localhost\n    port: 21\n    username: foo\n    password: pass\n    from: "/in/"\n    interval: PT10S\n    action: MOVE\n    moveDirectory: "/archive/"\n\n\n\n# Properties\n\n\n# action\n\n * Type: string\n\n * Dynamic: ✔️\n\n * Required: ✔️\n\n * Possible Values:\n   \n   * MOVE\n   * DELETE\n\n> The action to do on find files\n\n\n# from\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The directory to list\n\n\n# host\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Hostname of the remote server\n\n\n# interval\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Format: duration\n\n> The interval between test of triggers\n\n\n# moveDirectory\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The destination directory in case off MOVE\n\n\n# passiveMode\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: true\n\n> Enter into passive mode.\n\n\n# password\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Password on the remote server\n\n\n# port\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Default: 21\n\n> Port of the remote server\n\n\n# proxyHost\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> FTP proxy host\n\n\n# proxyPort\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> FTP proxy port\n\n\n# proxyType\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Possible Values:\n   \n   * DIRECT\n   * HTTP\n   * SOCKS\n\n> FTP proxy type\n\n\n# regExp\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> A regexp to filter on full path\n\n\n# rootDir\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: true\n\n> Is path is relative to root dir\n\n\n# username\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Username on the remote server\n\n\n# Outputs\n\n\n# files\n\n * Type: array\n * SubType: File\n * SubType: ====\n\n> The bucket of the downloaded file\n\n\n# Definitions\n\n\n# File\n\n# accessDate\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# fileType\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Possible Values:\n   \n   * FOLDER\n   * FILE\n   * FILE_OR_FOLDER\n   * IMAGINARY\n\n# flags\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n# groupId\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n# name\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# path\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# permissions\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n# size\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n# symbolicLink\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: false\n\n# updatedDate\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# userId\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌',normalizedContent:'trigger\n\ntype: "io.kestra.plugin.fs.ftp.trigger"\n\n\n> wait for files on a ftp server\n\n\n# examples\n\n> wait for a list of file on a ftp server and iterate through the files\n\nid: gcs-listen\nnamespace: io.kestra.tests\n\ntasks:\n  - id: each\n    type: io.kestra.core.tasks.flows.eachsequential\n    tasks:\n      - id: return\n        type: io.kestra.core.tasks.debugs.return\n        format: "{{taskrun.value}}"\n    value: "{{ trigger.files | jq \'.path\' }}"\n\ntriggers:\n  - id: watch\n    type: io.kestra.plugin.fs.ftp.trigger\n    host: localhost\n    port: 21\n    username: foo\n    password: pass\n    from: "/in/"\n    interval: pt10s\n    action: move\n    movedirectory: "/archive/"\n\n\n\n# properties\n\n\n# action\n\n * type: string\n\n * dynamic: ✔️\n\n * required: ✔️\n\n * possible values:\n   \n   * move\n   * delete\n\n> the action to do on find files\n\n\n# from\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the directory to list\n\n\n# host\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> hostname of the remote server\n\n\n# interval\n\n * type: string\n * dynamic: ❓\n * required: ❌\n * format: duration\n\n> the interval between test of triggers\n\n\n# movedirectory\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the destination directory in case off move\n\n\n# passivemode\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: true\n\n> enter into passive mode.\n\n\n# password\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> password on the remote server\n\n\n# port\n\n * type: string\n * dynamic: ❓\n * required: ❌\n * default: 21\n\n> port of the remote server\n\n\n# proxyhost\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> ftp proxy host\n\n\n# proxyport\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> ftp proxy port\n\n\n# proxytype\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * possible values:\n   \n   * direct\n   * http\n   * socks\n\n> ftp proxy type\n\n\n# regexp\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> a regexp to filter on full path\n\n\n# rootdir\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: true\n\n> is path is relative to root dir\n\n\n# username\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> username on the remote server\n\n\n# outputs\n\n\n# files\n\n * type: array\n * subtype: file\n * subtype: ====\n\n> the bucket of the downloaded file\n\n\n# definitions\n\n\n# file\n\n# accessdate\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# filetype\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * possible values:\n   \n   * folder\n   * file\n   * file_or_folder\n   * imaginary\n\n# flags\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n# groupid\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n# name\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# path\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# permissions\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n# size\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n# symboliclink\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: false\n\n# updateddate\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# userid\n\n * type: integer\n * dynamic: ❓\n * required: ❌',charsets:{cjk:!0}},{title:"Trigger",frontmatter:{title:"Trigger",editLink:!1,description:"Wait for files on a SFTP server",icon:"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4KPHN2ZyB2ZXJzaW9uPSIxLjEiIGlkPSJDYWxxdWVfMSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIgeD0iMHB4IiB5PSIwcHgiCiAgICAgdmlld0JveD0iMCAwIDI0IDI0IiBzdHlsZT0iZW5hYmxlLWJhY2tncm91bmQ6bmV3IDAgMCAyNCAyNDsiIHhtbDpzcGFjZT0icHJlc2VydmUiPgo8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgoJLnN0MHtmaWxsOm5vbmU7fQoJLnN0MXtmaWxsOiMwRjE3MjQ7fQo8L3N0eWxlPgogICAgPGc+Cgk8cmVjdCB4PSI5IiB5PSI0IiBjbGFzcz0ic3QwIiB3aWR0aD0iMSIgaGVpZ2h0PSIyIi8+CiAgICAgICAgPHJlY3QgeD0iNSIgeT0iNCIgY2xhc3M9InN0MCIgd2lkdGg9IjIiIGhlaWdodD0iMiIvPgogICAgICAgIDxwYXRoIGNsYXNzPSJzdDEiIGQ9Ik00LDhoMTZjMC42LDAsMS0wLjQsMS0xVjNjMC0wLjYtMC40LTEtMS0xSDRDMy40LDIsMywyLjQsMywzdjRDMyw3LjYsMy40LDgsNCw4eiBNOSw0aDF2Mkg5VjR6IE01LDRoMnYySDVWNHoKCQkiLz4KICAgICAgICA8cGF0aCBjbGFzcz0ic3QxIiBkPSJNMTYuMywxM2MwLjEsMCwwLjItMC4xLDAuMy0wLjFzMC4yLTAuMSwwLjItMC4yYzAtMC4xLDAuMS0wLjIsMC4xLTAuM2MwLTAuMSwwLTAuMi0wLjEtMC4zcy0wLjEtMC4yLTAuMi0wLjIKCQljLTAuMS0wLjEtMC4yLTAuMS0wLjMtMC4xYy0wLjEsMC0wLjIsMC0wLjQsMGMtMC4yLDAtMC40LDAtMC41LDBWMTNoMC40QzE2LDEzLDE2LjIsMTMsMTYuMywxM3oiLz4KICAgICAgICA8cGF0aCBjbGFzcz0ic3QxIiBkPSJNMTUsMTljMC0wLjYtMC40LTEtMS0xaC0xdi0yaDdjMC42LDAsMS0wLjQsMS0xdi00YzAtMC42LTAuNC0xLTEtMUg0Yy0wLjYsMC0xLDAuNC0xLDF2NGMwLDAuNiwwLjQsMSwxLDFoN3YyCgkJaC0xYy0wLjYsMC0xLDAuNC0xLDFIMnYyaDdjMCwwLjYsMC40LDEsMSwxaDRjMC42LDAsMS0wLjQsMS0xaDd2LTJIMTV6IE0xNSwxMS4zYzAuMSwwLDAuMy0wLjEsMC41LTAuMWMwLjIsMCwwLjMsMCwwLjUsMAoJCWMwLjUsMCwwLjksMC4xLDEuMSwwLjNzMC40LDAuNSwwLjQsMC44YzAsMC4yLDAsMC40LTAuMSwwLjVjLTAuMSwwLjEtMC4yLDAuMy0wLjMsMC4zYy0wLjEsMC4xLTAuMywwLjItMC41LDAuMnMtMC40LDAuMS0wLjcsMC4xCgkJaC0wLjR2MS4zSDE1VjExLjN6IE04LjUsMTQuNWMtMC4yLDAuMi0wLjUsMC4yLTAuOSwwLjJjLTAuMSwwLTAuMywwLTAuNCwwYy0wLjEsMC0wLjIsMC0wLjMtMC4xYy0wLjEsMC0wLjItMC4xLTAuMi0wLjEKCQlzLTAuMS0wLjEtMC4yLTAuMWwwLjEtMC40YzAuMSwwLDAuMiwwLjEsMC40LDAuMWMwLjIsMC4xLDAuMywwLjEsMC42LDAuMWMwLjUsMCwwLjgtMC4yLDAuOC0wLjVjMC0wLjEsMC0wLjItMC4xLTAuMwoJCWMwLTAuMS0wLjEtMC4xLTAuMi0wLjJjLTAuMS0wLjEtMC4yLTAuMS0wLjMtMC4xcy0wLjItMC4xLTAuMy0wLjFjLTAuMSwwLTAuMi0wLjEtMC40LTAuMWMtMC4xLTAuMS0wLjItMC4xLTAuMy0wLjIKCQljLTAuMS0wLjEtMC4xLTAuMi0wLjItMC4zYzAtMC4xLTAuMS0wLjItMC4xLTAuNGMwLTAuMywwLjEtMC41LDAuMy0wLjdjMC4yLTAuMiwwLjUtMC4zLDAuOS0wLjNjMC4yLDAsMC40LDAsMC42LDAuMQoJCXMwLjMsMC4xLDAuNCwwLjFsLTAuMiwwLjRjLTAuMSwwLTAuMi0wLjEtMC4zLTAuMWMtMC4xLDAtMC4zLTAuMS0wLjUtMC4xYy0wLjEsMC0wLjIsMC0wLjMsMHMtMC4xLDAuMS0wLjIsMC4xcy0wLjEsMC4xLTAuMSwwLjIKCQljMCwwLjEtMC4xLDAuMS0wLjEsMC4yYzAsMC4xLDAsMC4yLDAuMSwwLjJjMCwwLjEsMC4xLDAuMSwwLjIsMC4yYzAuMSwwLDAuMSwwLjEsMC4yLDAuMWMwLjEsMCwwLjIsMC4xLDAuMywwLjEKCQljMC4xLDAuMSwwLjMsMC4xLDAuNCwwLjJDOC40LDEzLDguNSwxMyw4LjYsMTMuMWMwLjEsMC4xLDAuMiwwLjIsMC4yLDAuM2MwLDAuMSwwLjEsMC4zLDAuMSwwLjRDOC44LDE0LjEsOC43LDE0LjQsOC41LDE0LjV6CgkJIE0xMS41LDExLjdIOS45djFoMS40djAuNEg5Ljl2MS42SDkuNHYtMy41aDIuMVYxMS43eiBNMTEuOCwxMS43di0wLjRoMi43djAuNGgtMS4xdjNoLTAuNXYtM0gxMS44eiIvPgo8L2c+Cjwvc3ZnPgo=",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Trigger"},{property:"og:description",content:"Wait for files on a SFTP server | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-fs/triggers/sftp/io.kestra.plugin.fs.sftp.Trigger.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Trigger"},{name:"twitter:description",content:"Wait for files on a SFTP server | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-fs/triggers/sftp/io.kestra.plugin.fs.sftp.Trigger.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-fs/triggers/sftp/io.kestra.plugin.fs.sftp.Trigger.html",relativePath:"plugins/plugin-fs/triggers/sftp/io.kestra.plugin.fs.sftp.Trigger.md",key:"v-e8e4bfda",path:"/plugins/plugin-fs/triggers/sftp/io.kestra.plugin.fs.sftp.Trigger.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:90},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:680},{level:3,title:"action",slug:"action",normalizedTitle:"action",charIndex:631},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:594},{level:3,title:"host",slug:"host",normalizedTitle:"host",charIndex:522},{level:3,title:"interval",slug:"interval",normalizedTitle:"interval",charIndex:611},{level:3,title:"keyfile",slug:"keyfile",normalizedTitle:"keyfile",charIndex:1152},{level:3,title:"moveDirectory",slug:"movedirectory",normalizedTitle:"movedirectory",charIndex:648},{level:3,title:"passphrase",slug:"passphrase",normalizedTitle:"passphrase",charIndex:1379},{level:3,title:"password",slug:"password",normalizedTitle:"password",charIndex:575},{level:3,title:"port",slug:"port",normalizedTitle:"port",charIndex:542},{level:3,title:"proxyHost",slug:"proxyhost",normalizedTitle:"proxyhost",charIndex:1660},{level:3,title:"proxyPassword",slug:"proxypassword",normalizedTitle:"proxypassword",charIndex:1739},{level:3,title:"proxyPort",slug:"proxyport",normalizedTitle:"proxyport",charIndex:1826},{level:3,title:"proxyType",slug:"proxytype",normalizedTitle:"proxytype",charIndex:1905},{level:3,title:"proxyUser",slug:"proxyuser",normalizedTitle:"proxyuser",charIndex:1984},{level:3,title:"regExp",slug:"regexp",normalizedTitle:"regexp",charIndex:2063},{level:3,title:"rootDir",slug:"rootdir",normalizedTitle:"rootdir",charIndex:2156},{level:3,title:"username",slug:"username",normalizedTitle:"username",charIndex:557},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:2359},{level:3,title:"files",slug:"files",normalizedTitle:"files",charIndex:63},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:2468},{level:3,title:"File",slug:"file",normalizedTitle:"file",charIndex:2405}],headersStr:"Examples Properties action from host interval keyfile moveDirectory passphrase password port proxyHost proxyPassword proxyPort proxyType proxyUser regExp rootDir username Outputs files Definitions File",content:'Trigger\n\ntype: "io.kestra.plugin.fs.sftp.Trigger"\n\n\n> Wait for files on a SFTP server\n\n\n# Examples\n\n> Wait for a list of file on a SFTP server and iterate through the files\n\nid: gcs-listen\nnamespace: io.kestra.tests\n\ntasks:\n  - id: each\n    type: io.kestra.core.tasks.flows.EachSequential\n    tasks:\n      - id: return\n        type: io.kestra.core.tasks.debugs.Return\n        format: "{{taskrun.value}}"\n    value: "{{ trigger.files | jq \'.path\' }}"\n\ntriggers:\n  - id: watch\n    type: io.kestra.plugin.fs.sftp.Trigger\n    host: localhost\n    port: 6622\n    username: foo\n    password: pass\n    from: "/in/"\n    interval: PT10S\n    action: MOVE\n    moveDirectory: "/archive/"\n\n\n\n# Properties\n\n\n# action\n\n * Type: string\n\n * Dynamic: ✔️\n\n * Required: ✔️\n\n * Possible Values:\n   \n   * MOVE\n   * DELETE\n\n> The action to do on find files\n\n\n# from\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The directory to list\n\n\n# host\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Hostname of the remote server\n\n\n# interval\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Default: 60.000000000\n * Format: duration\n\n> The interval between test of triggers\n\n\n# keyfile\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Private keyfile to login on the source server with ssh\n\n\n# moveDirectory\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The destination directory in case off MOVE\n\n\n# passphrase\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Passphrase of the ssh key\n\n\n# password\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Password on the remote server\n\n\n# port\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Default: 22\n\n> Port of the remote server\n\n\n# proxyHost\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> SFTP proxy host\n\n\n# proxyPassword\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> SFTP proxy password\n\n\n# proxyPort\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> SFTP proxy port\n\n\n# proxyType\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> SFTP proxy type\n\n\n# proxyUser\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> SFTP proxy user\n\n\n# regExp\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> A regexp to filter on full path\n\n\n# rootDir\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: true\n\n> Is path is relative to root dir\n\n\n# username\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Username on the remote server\n\n\n# Outputs\n\n\n# files\n\n * Type: array\n * SubType: File\n * SubType: ====\n\n> The bucket of the downloaded file\n\n\n# Definitions\n\n\n# File\n\n# accessDate\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# fileType\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Possible Values:\n   \n   * FOLDER\n   * FILE\n   * FILE_OR_FOLDER\n   * IMAGINARY\n\n# flags\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n# groupId\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n# name\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# path\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# permissions\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n# size\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n# symbolicLink\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: false\n\n# updatedDate\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# userId\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌',normalizedContent:'trigger\n\ntype: "io.kestra.plugin.fs.sftp.trigger"\n\n\n> wait for files on a sftp server\n\n\n# examples\n\n> wait for a list of file on a sftp server and iterate through the files\n\nid: gcs-listen\nnamespace: io.kestra.tests\n\ntasks:\n  - id: each\n    type: io.kestra.core.tasks.flows.eachsequential\n    tasks:\n      - id: return\n        type: io.kestra.core.tasks.debugs.return\n        format: "{{taskrun.value}}"\n    value: "{{ trigger.files | jq \'.path\' }}"\n\ntriggers:\n  - id: watch\n    type: io.kestra.plugin.fs.sftp.trigger\n    host: localhost\n    port: 6622\n    username: foo\n    password: pass\n    from: "/in/"\n    interval: pt10s\n    action: move\n    movedirectory: "/archive/"\n\n\n\n# properties\n\n\n# action\n\n * type: string\n\n * dynamic: ✔️\n\n * required: ✔️\n\n * possible values:\n   \n   * move\n   * delete\n\n> the action to do on find files\n\n\n# from\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the directory to list\n\n\n# host\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> hostname of the remote server\n\n\n# interval\n\n * type: string\n * dynamic: ❓\n * required: ❌\n * default: 60.000000000\n * format: duration\n\n> the interval between test of triggers\n\n\n# keyfile\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> private keyfile to login on the source server with ssh\n\n\n# movedirectory\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the destination directory in case off move\n\n\n# passphrase\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> passphrase of the ssh key\n\n\n# password\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> password on the remote server\n\n\n# port\n\n * type: string\n * dynamic: ❓\n * required: ❌\n * default: 22\n\n> port of the remote server\n\n\n# proxyhost\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> sftp proxy host\n\n\n# proxypassword\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> sftp proxy password\n\n\n# proxyport\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> sftp proxy port\n\n\n# proxytype\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> sftp proxy type\n\n\n# proxyuser\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> sftp proxy user\n\n\n# regexp\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> a regexp to filter on full path\n\n\n# rootdir\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: true\n\n> is path is relative to root dir\n\n\n# username\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> username on the remote server\n\n\n# outputs\n\n\n# files\n\n * type: array\n * subtype: file\n * subtype: ====\n\n> the bucket of the downloaded file\n\n\n# definitions\n\n\n# file\n\n# accessdate\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# filetype\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * possible values:\n   \n   * folder\n   * file\n   * file_or_folder\n   * imaginary\n\n# flags\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n# groupid\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n# name\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# path\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# permissions\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n# size\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n# symboliclink\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: false\n\n# updateddate\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# userid\n\n * type: integer\n * dynamic: ❓\n * required: ❌',charsets:{cjk:!0}},{title:"Plugin gcp",frontmatter:{title:"Plugin gcp",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Plugin gcp"},{property:"og:description",content:"Plugin gcp | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-gcp/"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Plugin gcp"},{name:"twitter:description",content:"Plugin gcp | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-gcp/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-gcp/",relativePath:"plugins/plugin-gcp/README.md",key:"v-73d31e48",path:"/plugins/plugin-gcp/",headers:[{level:2,title:"Gke",slug:"gke",normalizedTitle:"gke",charIndex:17},{level:3,title:"Tasks",slug:"tasks",normalizedTitle:"tasks",charIndex:25},{level:2,title:"Auth",slug:"auth",normalizedTitle:"auth",charIndex:55},{level:3,title:"Tasks",slug:"tasks-2",normalizedTitle:"tasks",charIndex:25},{level:2,title:"Vertexai",slug:"vertexai",normalizedTitle:"vertexai",charIndex:95},{level:3,title:"Tasks",slug:"tasks-3",normalizedTitle:"tasks",charIndex:25},{level:2,title:"Gcs",slug:"gcs",normalizedTitle:"gcs",charIndex:132},{level:3,title:"Triggers",slug:"triggers",normalizedTitle:"triggers",charIndex:140},{level:3,title:"Tasks",slug:"tasks-4",normalizedTitle:"tasks",charIndex:25},{level:2,title:"Bigquery",slug:"bigquery",normalizedTitle:"bigquery",charIndex:335},{level:3,title:"Triggers",slug:"triggers-2",normalizedTitle:"triggers",charIndex:140},{level:3,title:"Tasks",slug:"tasks-5",normalizedTitle:"tasks",charIndex:25}],headersStr:"Gke Tasks Auth Tasks Vertexai Tasks Gcs Triggers Tasks Bigquery Triggers Tasks",content:"# Plugin gcp\n\n\n# Gke\n\n\n# Tasks\n\n * ClusterMetadata\n\n\n# Auth\n\n\n# Tasks\n\n * OauthAccessToken\n\n\n# Vertexai\n\n\n# Tasks\n\n * CustomJob\n\n\n# Gcs\n\n\n# Triggers\n\n * Trigger\n\n\n# Tasks\n\n * Compose\n * Copy\n * CreateBucket\n * CreateBucketIamPolicy\n * Delete\n * DeleteBucket\n * DeleteList\n * Download\n * Downloads\n * List\n * UpdateBucket\n * Upload\n\n\n# Bigquery\n\n\n# Triggers\n\n * Trigger\n\n\n# Tasks\n\n * CreateDataset\n * CreateTable\n * DeleteDataset\n * DeleteTable\n * ExtractToGcs\n * Load\n * LoadFromGcs\n * Query\n * StorageWrite\n * TableMetadata\n * UpdateDataset\n * UpdateTable",normalizedContent:"# plugin gcp\n\n\n# gke\n\n\n# tasks\n\n * clustermetadata\n\n\n# auth\n\n\n# tasks\n\n * oauthaccesstoken\n\n\n# vertexai\n\n\n# tasks\n\n * customjob\n\n\n# gcs\n\n\n# triggers\n\n * trigger\n\n\n# tasks\n\n * compose\n * copy\n * createbucket\n * createbucketiampolicy\n * delete\n * deletebucket\n * deletelist\n * download\n * downloads\n * list\n * updatebucket\n * upload\n\n\n# bigquery\n\n\n# triggers\n\n * trigger\n\n\n# tasks\n\n * createdataset\n * createtable\n * deletedataset\n * deletetable\n * extracttogcs\n * load\n * loadfromgcs\n * query\n * storagewrite\n * tablemetadata\n * updatedataset\n * updatetable",charsets:{}},{title:"OauthAccessToken",frontmatter:{title:"OauthAccessToken",editLink:!1,description:"Fetch an OAuth access token.",icon:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB2aWV3Qm94PSIwIDAgMTAxIDEwMSIgZmlsbD0iI2ZmZiIgZmlsbC1ydWxlPSJldmVub2RkIiBzdHJva2U9IiMwMDAiIHN0cm9rZS1saW5lY2FwPSJyb3VuZCIgc3Ryb2tlLWxpbmVqb2luPSJyb3VuZCI+PHVzZSB4bGluazpocmVmPSIjQSIgeD0iLjUiIHk9Ii41Ii8+PHN5bWJvbCBpZD0iQSIgb3ZlcmZsb3c9InZpc2libGUiPjxnIGZpbGwtcnVsZT0ibm9uemVybyIgc3Ryb2tlPSJub25lIj48cGF0aCBkPSJNNDYuNDA1LjE0NWMyMi4xNS0xLjUzMiAzNi44MzcgOS4yODIgNDUuMjM0IDIyLjQ1OSA0LjIxMSA2LjYwNyA4LjM0MiAxNi42NDEgOC4zNjEgMjYuOTUxLjAyIDExLjIwMi0zLjYxNyAyMC45MDMtOC4zNjEgMjguMDItNC44NzYgNy4zMTYtMTEuMTgzIDEzLjM1OC0xOS4wOCAxNy4zMjYtMTMuMjAxIDYuNjMyLTMxLjY1IDYuODE0LTQzLjczNC40MjhDMTUuMzY4IDg4LjIxOCA1LjAyIDc4LjA2NyAxLjE3IDYwLjQ2NC0uMzcxIDUzLjQyLS41NDggNDQuMzE3IDEuNTk5IDM2LjUwOGMuNTA0LTEuODMyIDEuNDE5LTMuNzYgMi4xNDQtNS41NjEgMy40ODItOC42NTYgOS40MS0xNi4xODQgMTYuNzIyLTIxLjM5IDIuOTM4LTIuMDkyIDYuNTAyLTQuMTcyIDkuNjQ3LTUuNTYxQzM0LjAyNSAyLjI2NyA0MC42MTMuNTQ2IDQ2LjQwNS4xNDV6Ii8+PHBhdGggZD0iTTg4LjQyIDUwLjgwMWMwIDIwLjg4Ny0xNi45NzEgMzcuODE4LTM3LjkwNCAzNy44MThTMTIuNjEyIDcxLjY4OCAxMi42MTIgNTAuODAxczE2Ljk3LTM3LjgxOSAzNy45MDQtMzcuODE5Uzg4LjQyIDI5LjkxNCA4OC40MiA1MC44MDF6TTQ2LjQwNS4xNDVjMjIuMTUtMS41MzIgMzYuODM3IDkuMjgyIDQ1LjIzNCAyMi40NTkgNC4yMTEgNi42MDcgOC4zNDIgMTYuNjQxIDguMzYxIDI2Ljk1MS4wMiAxMS4yMDItMy42MTcgMjAuOTAzLTguMzYxIDI4LjAyLTQuODc2IDcuMzE2LTExLjE4MyAxMy4zNTgtMTkuMDggMTcuMzI2LTEzLjIwMSA2LjYzMi0zMS42NSA2LjgxNC00My43MzQuNDI4QzE1LjM2OCA4OC4yMTggNS4wMiA3OC4wNjcgMS4xNyA2MC40NjQtLjM3MSA1My40Mi0uNTQ4IDQ0LjMxNyAxLjU5OSAzNi41MDhjLjUwNC0xLjgzMiAxLjQxOS0zLjc2IDIuMTQ0LTUuNTYxIDMuNDgyLTguNjU2IDkuNDEtMTYuMTg0IDE2LjcyMi0yMS4zOSAyLjkzOC0yLjA5MiA2LjUwMi00LjE3MiA5LjY0Ny01LjU2MUMzNC4wMjUgMi4yNjcgNDAuNjEzLjU0NiA0Ni40MDUuMTQ1em0tNy41MDMgMy42MzZjLTguMjI3IDIuMTI4LTE0LjI2IDUuOTQxLTE5LjUwOSAxMC4wNTMtNy41NjkgNS45My0xMi4zOTQgMTQuMjA0LTE1LjIyMSAyNC4xNy0zLjE0NSAxMS4wODgtMS4xMjUgMjQuNTA1IDMuMjE2IDMyLjk0IDQuNTAxIDguNzQ4IDEwLjU0NSAxNS41MzggMTkuMDggMjAuMzIgOC4zMDMgNC42NTMgMTkuOTgyIDcuNjQgMzIuMTU3IDUuMzQ3IDEwLjgxNy0yLjAzNyAxOS4wMzMtNi43MzkgMjUuNzI2LTEzLjY4OSA4Ljk1NS05LjMgMTYuMTUyLTI2LjQyOSAxMS4zNjItNDQuNDkxLTEuMjgtNC44MjctMi45NTQtOS44NTgtNS41NzQtMTQuMTE3LTEuNDE2LTIuMzAxLTMuNDkzLTQuNTY1LTUuNTc0LTYuODQ1Qzc2LjcxIDguODY1IDY0LjAxNiAxLjQ0OSA0Ny42OTEgMi40OThjLTMuMTA3LjItNS44MzcuNTItOC43OSAxLjI4NHoiIGZpbGw9IiMwMDAiLz48L2c+PGcgZmlsbD0ibm9uZSIgc3Ryb2tlPSIjZmZmIiBzdHJva2UtbGluZWNhcD0iYnV0dCIgc3Ryb2tlLWxpbmVqb2luPSJtaXRlciIgc3Ryb2tlLXdpZHRoPSIxLjc4OCI+PHBhdGggZD0iTTUyLjgwOCA5Ni4xNTdsNDMuOC00My43TTQ4Ljk3OSA5Mi42OTZMOTIuOTcgNDguODA1TTQ1LjE1IDg5LjIzNmw0NC4xODMtNDQuMDgyTTQxLjMyMSA4NS43NzVsNDQuMzc0LTQ0LjI3M00zNy40OTIgODIuMzE1bDQ0LjU2NS00NC40NjRNMzMuNjYzIDc4Ljg1NGw0NC43NTYtNDQuNjU1TTI5LjgzNCA3NS4zOTNsNDQuOTQ3LTQ0Ljg0NU0yNi4wMDQgNzEuOTMybDQ1LjEzOC00NS4wMzZNMjIuMTc1IDY4LjQ3Mmw0NS4zMjgtNDUuMjI3TTE4LjM0NiA2NS4wMWw0NS41Mi00NS40MTdNMTQuNTE3IDYxLjU1bDQ1LjcxMi00NS42MDhNMTAuNjg4IDU4LjA4OUw1Ni41OTEgMTIuMjlNNi44NTkgNTQuNjI4TDUyLjk1MyA4LjYzOU0zLjAzIDUxLjE2N2w0Ni4yODUtNDYuMTgiLz48cGF0aCBkPSJNMy4wMTUgNTEuNjA5TDQ3LjY5IDk2LjE4Nk02LjYzOCA0Ny45NDNMNTEuNCA5Mi42MDZtLTQxLjEzOS00OC4zM2w0NC44NDkgNDQuNzVNMTMuODg0IDQwLjYxTDU4LjgyIDg1LjQ0N00xNy41MDcgMzYuOTQzTDYyLjUzIDgxLjg2Nm0tNDEuNC00OC41ODlsNDUuMTEgNDUuMDFNMjQuNzUyIDI5LjYxbDQ1LjE5NyA0NS4wOTdNMjguMzc1IDI1Ljk0NGw0NS4yODQgNDUuMTgzbS00MS42NjEtNDguODVsNDUuMzcxIDQ1LjI3TTM1LjYyMSAxOC42MTFsNDUuNDU4IDQ1LjM1Nk0zOS4yNDQgMTQuOTQ0bDQ1LjU0NSA0NS40NDNNNDIuODY3IDExLjI3OGw0NS42MzIgNDUuNTNNNDYuNDkgNy42MTJsNDUuNzE5IDQ1LjYxN001MC4xMTMgMy45NDVsNDUuODA2IDQ1LjcwMyIvPjwvZz48ZyBmaWxsLXJ1bGU9Im5vbnplcm8iPjxwYXRoIGQ9Ik04MS45OTIgMTcuNjg0Yy0zLjk0Mi0zLjkzMy04Ljc4OS03LjQ3OC0xNC41NzgtOS42MjUtNi4wMDEtMi4yMjYtMTIuNzg5LTQuMTAzLTIwLjc5NS0zLjQyMi0xMi43NTMgMS4wODUtMjEuNzA3IDYuNzk0LTI4LjUxMyAxMy40NzYtNC43NjcgNC42OC04LjM1MiAxMC40MTUtMTAuNzE5IDE3LjExMi0zLjQ3NSA5LjgzMy0zLjI2NCAyMS40MzkuNjQzIDMxLjQ0MyAzLjMzMyA4LjUzMyA4Ljc4OCAxNS40MTYgMTYuNTA3IDIwLjc0OCA3LjI1NyA1LjAxMyAxNy42NzIgOC45IDI5LjM3IDcuOTE0IDE0LjI0OC0xLjIwMSAyNC42NzMtOC40OTQgMzEuNTE0LTE2Ljg5OCAxLjc1LTIuMTUgMy40OTEtNC41OCA0LjUwMi03LjQ4Ni45OTEtMi4wOTQgMS40NzYtMy41MTggMS45My00LjI3OCAxLjktNC4yNDggMi45MDctOC43MyAzLjIxNi0xMy42ODkuOTUtMTUuMjUzLTQuOTMyLTI3LjE2Ny0xMy4wNzctMzUuMjkzem0tNC4xOTkgNDYuNDdsLS4wOC4xNzJjLS43MDcgMi4wMTgtMS45MjQgMy43MDUtMy4xNDggNS4xOTktNC43ODQgNS44MzYtMTIuMDc0IDEwLjktMjIuMDM4IDExLjczNC04LjE4MS42ODQtMTUuNDY0LTIuMDE1LTIwLjUzOS01LjQ5Ni00LjQxLTMuMDI1LTcuNzYyLTYuNzY5LTEwLjExMy0xMS4yNjgtLjE0My0uMjcxLTEuNTA4LTMuNDA5LTEuNTEyLTMuNTQ3LTEuODYyLTUuNzYzLTIuMDI0LTE1LjAzLS4xMTItMjAuNTkxIDEuMjc2LTMuNzExIDMuNDAxLTcuNzI3IDYuMjE3LTEwLjkwOSAzLjg4Ny00LjM5MyA3Ljc3OC03LjIwOCAxMy45MzUtOS4xOTggMi44MTEtLjkwOSA1LjMyOC0xLjgzMyA4Ljc5LTEuOTI1IDguNDQxLS4yMjQgMTcuMDM3IDMuNTU3IDIxLjY1MiA3LjcgNC4yNDEgMy44MDcgOS4wNzUgMTEuMjIzIDEwLjI5IDE4LjE4MSAxLjI1MSA3LjE2MS0uMDg0IDE0LjE1My0zLjM0MiAxOS45NDd6IiBmaWxsPSIjMDAwIiBzdHJva2U9Im5vbmUiLz48cGF0aCBkPSJNNjMuMTIgNzEuMDI1Yy0yLjA3OSAwLTMuOTAzLTEuMzEzLTQuNTM5LTMuMjY4bC0yLjMxNS03LjAzOEg0NC42ODRsLTIuMTUxIDYuOTc0YTQuOCA0LjggMCAwIDEtNC41NzcgMy4zMjdjLS41MDIgMC0xLS4wNzktMS40ODEtLjIzNS0yLjQ5Ny0uNzQ4LTMuOTE1LTMuNDMtMy4xNS01Ljk3NWw5Ljc3Ni0zMC44OTVjLjYzNS0xLjk2NSAyLjUwMy0zLjMzNiA0LjU0NS0zLjMzNmg1LjE5OGMyLjA1MyAwIDMuOTIxIDEuMzQ4IDQuNTQ0IDMuMjc3bDEwLjI4MSAzMC44ODRjLjgyMiAyLjUyNS0uNTM5IDUuMjM2LTMuMDMzIDYuMDQ1YTQuOTEgNC45MSAwIDAgMS0xLjUxNi4yNDFoMHoiIHN0cm9rZS1saW5lam9pbj0ibWl0ZXIiIHN0cm9rZS13aWR0aD0iNS4zNjMiLz48cGF0aCBkPSJNMjQuNzI5IDIwLjczMWwtLjAxMi0uMDE3Yy0xLjIxOS0xLjY2Ny0uODYxLTMuOTk5LjkzNC01LjMwNnM0LjEwMi0uOTQgNS4zMjEuNzI3bC4wMTIuMDE3YzEuMjE5IDEuNjY3Ljg2MSAzLjk5OS0uOTM0IDUuMzA2cy00LjEwMi45NC01LjMyMS0uNzI3em00LjYyMS0zLjM2NWwtLjAxMi0uMDE3Yy0uNjEzLS44MzgtMS43NTMtMS4xMjYtMi42NDItLjQ3OC0uODgxLjY0Mi0uOTUgMS43ODQtLjMzNyAyLjYyMmwuMDEyLjAxN2MuNjEzLjgzOCAxLjc1MyAxLjEyNiAyLjYzNC40ODQuODg5LS42NDguOTU4LTEuNzkuMzQ1LTIuNjI4em03LjEzMi03LjU2MWwxLjgzMi0uNTg2IDUuMTM2IDUuOTU3LTIuMDM4LjY1Mi0uODkzLTEuMDYyLTIuNjQ2Ljg0Ny0uMDk3IDEuMzc5LTEuOTk5LjY0LjcwMy03LjgyN3ptMy4wMTQgMy42NjFsLTEuMzktMS43MDEtLjE0OSAyLjE5MyAxLjUzOC0uNDkyem03LjI1NC0xLjg2OGwuMDE2LTQuMDM1IDIuMDI3LjAwOC0uMDE2IDMuOTk0Yy0uMDA0IDEuMDM3LjUxOSAxLjUzMiAxLjMyMSAxLjUzNXMxLjMyOS0uNDY3IDEuMzMzLTEuNDczbC4wMTYtNC4wNDUgMi4wMjcuMDA4LS4wMTYgMy45ODRjLS4wMDkgMi4zMi0xLjM0MSAzLjMzMi0zLjM4OCAzLjMyM3MtMy4zMy0xLjA1LTMuMzIxLTMuMjk5em0xNC4wNDctLjcwNWwtMi4wNjctLjYyOS41MTEtMS42NjkgNi4wNDIgMS44NC0uNTExIDEuNjY5LTIuMDY3LS42MjktMS41OTIgNS4yMDQtMS45MDktLjU4MSAxLjU5Mi01LjIwNHptOS44ODQgMS44N2wxLjY2MiAxLjEwMy0xLjQ5MyAyLjIzOSAyLjEzMyAxLjQxNiAxLjQ5NC0yLjIzOSAxLjY2MiAxLjEwMy0zLjk5MSA1Ljk4My0xLjY2Mi0xLjEwMyAxLjUxNi0yLjI3NC0yLjEzMy0xLjQxNi0xLjUxNiAyLjI3NC0xLjY2Mi0xLjEwMyAzLjk5MS01Ljk4M3ptNS44NyA2NS40MDVsLjAxMy4wMTZjMS4yODIgMS42MTkgMS4wMTQgMy45NjQtLjczIDUuMzM4cy00LjA2MyAxLjA5Ni01LjM0NS0uNTIzbC0uMDEzLS4wMTZjLTEuMjgyLTEuNjE5LTEuMDE0LTMuOTY0LjczLTUuMzM4czQuMDYzLTEuMDk2IDUuMzQ1LjUyM3ptLTQuNDg5IDMuNTM5bC4wMTMuMDE2Yy42NDQuODE0IDEuNzk1IDEuMDU4IDIuNjU5LjM3Ny44NTYtLjY3NS44ODEtMS44MTkuMjM2LTIuNjMzbC0uMDEzLS4wMTZjLS42NDQtLjgxNC0xLjc5NS0xLjA1OC0yLjY1MS0uMzgzLS44NjQuNjgxLS44ODkgMS44MjYtLjI0NCAyLjYzOXptLTYuNzc5IDcuODQ3bC0xLjgwNS42NjYtNS4zOTQtNS43MjYgMi4wMDctLjc0MS45MzkgMS4wMjIgMi42MDYtLjk2Mi4wMzYtMS4zODIgMS45NjktLjcyNy0uMzU4IDcuODV6bS0zLjE3My0zLjUyNWwxLjQ2NCAxLjYzOC4wNTItMi4xOTgtMS41MTUuNTZ6bS03LjE1NyAyLjE1OWwuMTc4IDQuMDMxLTIuMDI1LjA4OS0uMTc3LTMuOTljLS4wNDYtMS4wMzYtLjU5Mi0xLjUwNS0xLjM5NC0xLjQ3cy0xLjMwNS41My0xLjI2MSAxLjUzNWwuMTc5IDQuMDQxLTIuMDI1LjA4OS0uMTc2LTMuOThjLS4xMDMtMi4zMTggMS4xNzktMy4zOTIgMy4yMjQtMy40ODJzMy4zNzcuODg5IDMuNDc2IDMuMTM1em0tMTQuMDcxIDEuMzE4bDIuMDg2LjU2Mi0uNDU2IDEuNjg1LTYuMTAxLTEuNjQzLjQ1Ni0xLjY4NSAyLjA4Ni41NjIgMS40MjEtNS4yNTQgMS45MjguNTE5LTEuNDIxIDUuMjU0em0tOS44NjItMS40NjVsLTEuNzEyLTEuMDI0IDEuMzg2LTIuMzA3LTIuMTk4LTEuMzE0LTEuMzg2IDIuMzA3LTEuNzEyLTEuMDI0IDMuNzAzLTYuMTY1IDEuNzEyIDEuMDI0LTEuNDA3IDIuMzQzIDIuMTk4IDEuMzE0IDEuNDA3LTIuMzQzIDEuNzEyIDEuMDI0LTMuNzAzIDYuMTY0eiIgc3Ryb2tlPSJub25lIi8+PC9nPjwvc3ltYm9sPjwvc3ZnPg==",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"OauthAccessToken"},{property:"og:description",content:"Fetch an OAuth access token. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-gcp/tasks/auth/io.kestra.plugin.gcp.auth.OauthAccessToken.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"OauthAccessToken"},{name:"twitter:description",content:"Fetch an OAuth access token. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-gcp/tasks/auth/io.kestra.plugin.gcp.auth.OauthAccessToken.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-gcp/tasks/auth/io.kestra.plugin.gcp.auth.OauthAccessToken.html",relativePath:"plugins/plugin-gcp/tasks/auth/io.kestra.plugin.gcp.auth.OauthAccessToken.md",key:"v-7ecaadb9",path:"/plugins/plugin-gcp/tasks/auth/io.kestra.plugin.gcp.auth.OauthAccessToken.html",headers:[{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:106},{level:3,title:"projectId",slug:"projectid",normalizedTitle:"projectid",charIndex:121},{level:3,title:"scopes",slug:"scopes",normalizedTitle:"scopes",charIndex:203},{level:3,title:"serviceAccount",slug:"serviceaccount",normalizedTitle:"serviceaccount",charIndex:304},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:400},{level:3,title:"accessToken",slug:"accesstoken",normalizedTitle:"accesstoken",charIndex:412},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:495},{level:3,title:"AccessToken",slug:"accesstoken-2",normalizedTitle:"accesstoken",charIndex:5}],headersStr:"Properties projectId scopes serviceAccount Outputs accessToken Definitions AccessToken",content:'OauthAccessToken\n\ntype: "io.kestra.plugin.gcp.auth.OauthAccessToken"\n\n\n> Fetch an OAuth access token.\n\n\n# Properties\n\n\n# projectId\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The GCP project id\n\n\n# scopes\n\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n\n> The GCP scopes to used\n\n\n# serviceAccount\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The GCP service account key\n\n\n# Outputs\n\n\n# accessToken\n\n * Type: AccessToken\n\n> A oauth access token for the current user\n\n\n# Definitions\n\n\n# AccessToken\n\n# tokenValue\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌',normalizedContent:'oauthaccesstoken\n\ntype: "io.kestra.plugin.gcp.auth.oauthaccesstoken"\n\n\n> fetch an oauth access token.\n\n\n# properties\n\n\n# projectid\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the gcp project id\n\n\n# scopes\n\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n\n> the gcp scopes to used\n\n\n# serviceaccount\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the gcp service account key\n\n\n# outputs\n\n\n# accesstoken\n\n * type: accesstoken\n\n> a oauth access token for the current user\n\n\n# definitions\n\n\n# accesstoken\n\n# tokenvalue\n\n * type: string\n * dynamic: ❓\n * required: ❌',charsets:{}},{title:"CreateDataset",frontmatter:{title:"CreateDataset",editLink:!1,description:"Create a dataset or update if it already exists.",icon:"PHN2ZyBpZD0iUHJvZHVjdF9JY29ucyIgZGF0YS1uYW1lPSJQcm9kdWN0IEljb25zIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCAyNCAyNCI+PGRlZnM+PHN0eWxlPi5jbHMtMXtmaWxsOiNhZWNiZmE7fS5jbHMtMSwuY2xzLTIsLmNscy0ze2ZpbGwtcnVsZTpldmVub2RkO30uY2xzLTJ7ZmlsbDojNjY5ZGY2O30uY2xzLTN7ZmlsbDojNDI4NWY0O308L3N0eWxlPjwvZGVmcz48dGl0bGU+SWNvbl8yNHB4X0NvbG9yX0JpZ1F1ZXJ5PC90aXRsZT48ZyBpZD0iU2hhcGUiPjxwYXRoIGNsYXNzPSJjbHMtMSIgZD0iTTYuNzMsMTAuODN2Mi42M0E0LjkxLDQuOTEsMCwwLDAsOC40NCwxNS4yVjEwLjgzWiIvPjxwYXRoIGNsYXNzPSJjbHMtMiIgZD0iTTkuODksOC40MXY3LjUzQTcuNjIsNy42MiwwLDAsMCwxMSwxNiw4LDgsMCwwLDAsMTIsMTZWOC40MVoiLz48cGF0aCBjbGFzcz0iY2xzLTEiIGQ9Ik0xMy42NCwxMS44NnYzLjI5YTUsNSwwLDAsMCwxLjctMS44MlYxMS44NloiLz48cGF0aCBjbGFzcz0iY2xzLTMiIGQ9Ik0xNy43NCwxNi4zMmwtMS40MiwxLjQyYS40Mi40MiwwLDAsMCwwLC42bDMuNTQsMy41NGEuNDIuNDIsMCwwLDAsLjU5LDBsMS40My0xLjQzYS40Mi40MiwwLDAsMCwwLS41OWwtMy41NC0zLjU0YS40Mi40MiwwLDAsMC0uNiwwIi8+PHBhdGggY2xhc3M9ImNscy0yIiBkPSJNMTEsMmE5LDksMCwxLDAsOSw5LDksOSwwLDAsMC05LTltMCwxNS42OUE2LjY4LDYuNjgsMCwxLDEsMTcuNjksMTEsNi42OCw2LjY4LDAsMCwxLDExLDE3LjY5Ii8+PC9nPjwvc3ZnPg==",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"CreateDataset"},{property:"og:description",content:"Create a dataset or update if it already exists. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-gcp/tasks/bigquery/io.kestra.plugin.gcp.bigquery.CreateDataset.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"CreateDataset"},{name:"twitter:description",content:"Create a dataset or update if it already exists. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-gcp/tasks/bigquery/io.kestra.plugin.gcp.bigquery.CreateDataset.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-gcp/tasks/bigquery/io.kestra.plugin.gcp.bigquery.CreateDataset.html",relativePath:"plugins/plugin-gcp/tasks/bigquery/io.kestra.plugin.gcp.bigquery.CreateDataset.md",key:"v-fb396f7a",path:"/plugins/plugin-gcp/tasks/bigquery/io.kestra.plugin.gcp.bigquery.CreateDataset.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:124},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:296},{level:3,title:"acl",slug:"acl",normalizedTitle:"acl",charIndex:311},{level:3,title:"defaultEncryptionConfiguration",slug:"defaultencryptionconfiguration",normalizedTitle:"defaultencryptionconfiguration",charIndex:436},{level:3,title:"defaultPartitionExpirationMs",slug:"defaultpartitionexpirationms",normalizedTitle:"defaultpartitionexpirationms",charIndex:778},{level:3,title:"defaultTableLifetime",slug:"defaulttablelifetime",normalizedTitle:"defaulttablelifetime",charIndex:1724},{level:3,title:"description",slug:"description",normalizedTitle:"description",charIndex:2557},{level:3,title:"friendlyName",slug:"friendlyname",normalizedTitle:"friendlyname",charIndex:2681},{level:3,title:"ifExists",slug:"ifexists",normalizedTitle:"ifexists",charIndex:274},{level:3,title:"labels",slug:"labels",normalizedTitle:"labels",charIndex:2971},{level:3,title:"location",slug:"location",normalizedTitle:"location",charIndex:259},{level:3,title:"name",slug:"name",normalizedTitle:"name",charIndex:240},{level:3,title:"projectId",slug:"projectid",normalizedTitle:"projectid",charIndex:3357},{level:3,title:"retryAuto",slug:"retryauto",normalizedTitle:"retryauto",charIndex:3439},{level:3,title:"retryMessages",slug:"retrymessages",normalizedTitle:"retrymessages",charIndex:3497},{level:3,title:"retryReasons",slug:"retryreasons",normalizedTitle:"retryreasons",charIndex:3787},{level:3,title:"scopes",slug:"scopes",normalizedTitle:"scopes",charIndex:4003},{level:3,title:"serviceAccount",slug:"serviceaccount",normalizedTitle:"serviceaccount",charIndex:4165},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:4261},{level:3,title:"dataset",slug:"dataset",normalizedTitle:"dataset",charIndex:80},{level:3,title:"description",slug:"description-2",normalizedTitle:"description",charIndex:2557},{level:3,title:"friendlyName",slug:"friendlyname-2",normalizedTitle:"friendlyname",charIndex:2681},{level:3,title:"location",slug:"location-2",normalizedTitle:"location",charIndex:259},{level:3,title:"project",slug:"project",normalizedTitle:"project",charIndex:3357},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:4724},{level:3,title:"Entity",slug:"entity",normalizedTitle:"entity",charIndex:4740},{level:3,title:"Random-1",slug:"random-1",normalizedTitle:"random-1",charIndex:4878},{level:3,title:"Random-2",slug:"random-2",normalizedTitle:"random-2",charIndex:5300},{level:3,title:"EncryptionConfiguration",slug:"encryptionconfiguration",normalizedTitle:"encryptionconfiguration",charIndex:443},{level:3,title:"Exponential-2",slug:"exponential-2",normalizedTitle:"exponential-2",charIndex:5401},{level:3,title:"Constant-1",slug:"constant-1",normalizedTitle:"constant-1",charIndex:5419},{level:3,title:"Exponential-1",slug:"exponential-1",normalizedTitle:"exponential-1",charIndex:5758},{level:3,title:"Constant-2",slug:"constant-2",normalizedTitle:"constant-2",charIndex:6243},{level:3,title:"AccessControl",slug:"accesscontrol",normalizedTitle:"accesscontrol",charIndex:343}],headersStr:"Examples Properties acl defaultEncryptionConfiguration defaultPartitionExpirationMs defaultTableLifetime description friendlyName ifExists labels location name projectId retryAuto retryMessages retryReasons scopes serviceAccount Outputs dataset description friendlyName location project Definitions Entity Random-1 Random-2 EncryptionConfiguration Exponential-2 Constant-1 Exponential-1 Constant-2 AccessControl",content:'CreateDataset\n\ntype: "io.kestra.plugin.gcp.bigquery.CreateDataset"\n\n\n> Create a dataset or update if it already exists.\n\n\n# Examples\n\n> Create a dataset if not exits\n\nid: "create_dataset"\ntype: "io.kestra.plugin.gcp.bigquery.CreateDataset"\nname: "my_dataset"\nlocation: "EU"\nifExists: "SKIP"\n\n\n\n# Properties\n\n\n# acl\n\n * Type: array\n * SubType: AccessControl\n * Dynamic: ❓\n * Required: ❌\n\n> The dataset\'s access control configuration\n\n\n# defaultEncryptionConfiguration\n\n * Type: EncryptionConfiguration\n * Dynamic: ❓\n * Required: ❌\n\n> The default encryption key for all tables in the dataset\n\nOnce this property is set, all newly-created partitioned tables in the dataset will have encryption key set to this value, unless table creation request (or query) overrides the key.\n\n\n# defaultPartitionExpirationMs\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n> [Optional] The default partition expiration time for all partitioned tables in the dataset, in milliseconds\n\nOnce this property is set, all newly-created partitioned tables in the dataset will has an expirationMs property in the timePartitioning settings set to this value. Changing the value only affect new tables, not existing ones. The storage in a partition will have an expiration time of its partition time plus this value. Setting this property overrides the use of defaultTableExpirationMs for partitioned tables: only one of defaultTableExpirationMs and defaultPartitionExpirationMs will be used for any new partitioned table. If you provide an explicit timePartitioning.expirationMs when creating or updating a partitioned table, that value takes precedence over the default partition expiration time indicated by this property. The value may be null.\n\n\n# defaultTableLifetime\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n> The default lifetime of all tables in the dataset, in milliseconds\n\nThe minimum value is 3600000 milliseconds (one hour). Once this property is set, all newly-created tables in the dataset will have an expirationTime property set to the creation time plus the value in this property, and changing the value will only affect new tables, not existing ones. When the expirationTime for a given table is reached, that table will be deleted automatically. If a table\'s expirationTime is modified or removed before the table expires, or if you provide an explicit expirationTime when creating a table, that value takes precedence over the default expiration time indicated by this property. This property is experimental and might be subject to change or removed.\n\n\n# description\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Description\n\nA user-friendly description for the dataset.\n\n\n# friendlyName\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> A user-friendly name for the dataset\n\n\n# ifExists\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Default: ERROR\n\n * Possible Values:\n   \n   * ERROR\n   * UPDATE\n   * SKIP\n\n> Policy to apply if a dataset already exists.\n\n\n# labels\n\n * Type: object\n * Dynamic: ✔️\n * Required: ❌\n\n> The dataset\'s labels\n\n\n# location\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The geographic location where the dataset should reside\n\nThis property is experimental and might be subject to change or removed.\nSee Dataset Location\n\n\n# name\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The dataset\'s user-defined id\n\n\n# projectId\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The GCP project id\n\n\n# retryAuto\n\n * Type: ====\n * Dynamic: ❓\n * Required: ❌\n\n\n# retryMessages\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: [due to concurrent update, Retrying the job may solve the problem]\n\n> The message that are valid for a automatic retry.\n\nMessage is tested as a substring of the full message and case insensitive\n\n\n# retryReasons\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: [rateLimitExceeded, jobBackendError, internalError, jobInternalError]\n\n> The reason that are valid for a automatic retry.\n\n\n# scopes\n\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n * Default: [https://www.googleapis.com/auth/cloud-platform]\n\n> The GCP scopes to used\n\n\n# serviceAccount\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The GCP service account key\n\n\n# Outputs\n\n\n# dataset\n\n * Type: string\n\n> The dataset\'s user-defined id\n\n\n# description\n\n * Type: string\n\n> A user-friendly description for the dataset\n\n\n# friendlyName\n\n * Type: string\n\n> A user-friendly name for the dataset\n\n\n# location\n\n * Type: string\n\n> The geographic location where the dataset should reside\n\nThis property is experimental and might be subject to change or removed.\nSee Dataset Location\n\n\n# project\n\n * Type: string\n\n> The GCP project id\n\n\n# Definitions\n\n\n# Entity\n\n# value\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The value for the entity (ex : user email if the type is USER ...)\n\n\n# Random-1\n\n# maxAttempt\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n * Minimum: &gt;= 1\n\n# maxDuration\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Format: duration\n\n# maxInterval\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n * Format: duration\n\n# minInterval\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n * Format: duration\n\n# warningOnRetry\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: false\n\n\n# Random-2\n\n\n# EncryptionConfiguration\n\n# kmsKeyName\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n\n# Exponential-2\n\n\n# Constant-1\n\n# interval\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n * Format: duration\n\n# maxAttempt\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n * Minimum: &gt;= 1\n\n# maxDuration\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Format: duration\n\n# warningOnRetry\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: false\n\n\n# Exponential-1\n\n# delayFactor\n\n * Type: number\n * Dynamic: ❓\n * Required: ❌\n\n# interval\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n * Format: duration\n\n# maxAttempt\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n * Minimum: &gt;= 1\n\n# maxDuration\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Format: duration\n\n# maxInterval\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n * Format: duration\n\n# warningOnRetry\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: false\n\n\n# Constant-2\n\n\n# AccessControl\n\n# entity\n\n * Type: Entity\n * Dynamic: ✔️\n * Required: ✔️\n\n> The entity\n\n# role\n\n * Type: string\n\n * Dynamic: ✔️\n\n * Required: ✔️\n\n * Possible Values:\n   \n   * READER\n   * WRITER\n   * OWNER\n\n> The role to assign to the entity',normalizedContent:'createdataset\n\ntype: "io.kestra.plugin.gcp.bigquery.createdataset"\n\n\n> create a dataset or update if it already exists.\n\n\n# examples\n\n> create a dataset if not exits\n\nid: "create_dataset"\ntype: "io.kestra.plugin.gcp.bigquery.createdataset"\nname: "my_dataset"\nlocation: "eu"\nifexists: "skip"\n\n\n\n# properties\n\n\n# acl\n\n * type: array\n * subtype: accesscontrol\n * dynamic: ❓\n * required: ❌\n\n> the dataset\'s access control configuration\n\n\n# defaultencryptionconfiguration\n\n * type: encryptionconfiguration\n * dynamic: ❓\n * required: ❌\n\n> the default encryption key for all tables in the dataset\n\nonce this property is set, all newly-created partitioned tables in the dataset will have encryption key set to this value, unless table creation request (or query) overrides the key.\n\n\n# defaultpartitionexpirationms\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n> [optional] the default partition expiration time for all partitioned tables in the dataset, in milliseconds\n\nonce this property is set, all newly-created partitioned tables in the dataset will has an expirationms property in the timepartitioning settings set to this value. changing the value only affect new tables, not existing ones. the storage in a partition will have an expiration time of its partition time plus this value. setting this property overrides the use of defaulttableexpirationms for partitioned tables: only one of defaulttableexpirationms and defaultpartitionexpirationms will be used for any new partitioned table. if you provide an explicit timepartitioning.expirationms when creating or updating a partitioned table, that value takes precedence over the default partition expiration time indicated by this property. the value may be null.\n\n\n# defaulttablelifetime\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n> the default lifetime of all tables in the dataset, in milliseconds\n\nthe minimum value is 3600000 milliseconds (one hour). once this property is set, all newly-created tables in the dataset will have an expirationtime property set to the creation time plus the value in this property, and changing the value will only affect new tables, not existing ones. when the expirationtime for a given table is reached, that table will be deleted automatically. if a table\'s expirationtime is modified or removed before the table expires, or if you provide an explicit expirationtime when creating a table, that value takes precedence over the default expiration time indicated by this property. this property is experimental and might be subject to change or removed.\n\n\n# description\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> description\n\na user-friendly description for the dataset.\n\n\n# friendlyname\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> a user-friendly name for the dataset\n\n\n# ifexists\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * default: error\n\n * possible values:\n   \n   * error\n   * update\n   * skip\n\n> policy to apply if a dataset already exists.\n\n\n# labels\n\n * type: object\n * dynamic: ✔️\n * required: ❌\n\n> the dataset\'s labels\n\n\n# location\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the geographic location where the dataset should reside\n\nthis property is experimental and might be subject to change or removed.\nsee dataset location\n\n\n# name\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the dataset\'s user-defined id\n\n\n# projectid\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the gcp project id\n\n\n# retryauto\n\n * type: ====\n * dynamic: ❓\n * required: ❌\n\n\n# retrymessages\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n * default: [due to concurrent update, retrying the job may solve the problem]\n\n> the message that are valid for a automatic retry.\n\nmessage is tested as a substring of the full message and case insensitive\n\n\n# retryreasons\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n * default: [ratelimitexceeded, jobbackenderror, internalerror, jobinternalerror]\n\n> the reason that are valid for a automatic retry.\n\n\n# scopes\n\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n * default: [https://www.googleapis.com/auth/cloud-platform]\n\n> the gcp scopes to used\n\n\n# serviceaccount\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the gcp service account key\n\n\n# outputs\n\n\n# dataset\n\n * type: string\n\n> the dataset\'s user-defined id\n\n\n# description\n\n * type: string\n\n> a user-friendly description for the dataset\n\n\n# friendlyname\n\n * type: string\n\n> a user-friendly name for the dataset\n\n\n# location\n\n * type: string\n\n> the geographic location where the dataset should reside\n\nthis property is experimental and might be subject to change or removed.\nsee dataset location\n\n\n# project\n\n * type: string\n\n> the gcp project id\n\n\n# definitions\n\n\n# entity\n\n# value\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the value for the entity (ex : user email if the type is user ...)\n\n\n# random-1\n\n# maxattempt\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n * minimum: &gt;= 1\n\n# maxduration\n\n * type: string\n * dynamic: ❓\n * required: ❌\n * format: duration\n\n# maxinterval\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n * format: duration\n\n# mininterval\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n * format: duration\n\n# warningonretry\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: false\n\n\n# random-2\n\n\n# encryptionconfiguration\n\n# kmskeyname\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n\n# exponential-2\n\n\n# constant-1\n\n# interval\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n * format: duration\n\n# maxattempt\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n * minimum: &gt;= 1\n\n# maxduration\n\n * type: string\n * dynamic: ❓\n * required: ❌\n * format: duration\n\n# warningonretry\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: false\n\n\n# exponential-1\n\n# delayfactor\n\n * type: number\n * dynamic: ❓\n * required: ❌\n\n# interval\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n * format: duration\n\n# maxattempt\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n * minimum: &gt;= 1\n\n# maxduration\n\n * type: string\n * dynamic: ❓\n * required: ❌\n * format: duration\n\n# maxinterval\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n * format: duration\n\n# warningonretry\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: false\n\n\n# constant-2\n\n\n# accesscontrol\n\n# entity\n\n * type: entity\n * dynamic: ✔️\n * required: ✔️\n\n> the entity\n\n# role\n\n * type: string\n\n * dynamic: ✔️\n\n * required: ✔️\n\n * possible values:\n   \n   * reader\n   * writer\n   * owner\n\n> the role to assign to the entity',charsets:{}},{title:"CreateTable",frontmatter:{title:"CreateTable",editLink:!1,description:"Create a table",icon:"PHN2ZyBpZD0iUHJvZHVjdF9JY29ucyIgZGF0YS1uYW1lPSJQcm9kdWN0IEljb25zIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCAyNCAyNCI+PGRlZnM+PHN0eWxlPi5jbHMtMXtmaWxsOiNhZWNiZmE7fS5jbHMtMSwuY2xzLTIsLmNscy0ze2ZpbGwtcnVsZTpldmVub2RkO30uY2xzLTJ7ZmlsbDojNjY5ZGY2O30uY2xzLTN7ZmlsbDojNDI4NWY0O308L3N0eWxlPjwvZGVmcz48dGl0bGU+SWNvbl8yNHB4X0NvbG9yX0JpZ1F1ZXJ5PC90aXRsZT48ZyBpZD0iU2hhcGUiPjxwYXRoIGNsYXNzPSJjbHMtMSIgZD0iTTYuNzMsMTAuODN2Mi42M0E0LjkxLDQuOTEsMCwwLDAsOC40NCwxNS4yVjEwLjgzWiIvPjxwYXRoIGNsYXNzPSJjbHMtMiIgZD0iTTkuODksOC40MXY3LjUzQTcuNjIsNy42MiwwLDAsMCwxMSwxNiw4LDgsMCwwLDAsMTIsMTZWOC40MVoiLz48cGF0aCBjbGFzcz0iY2xzLTEiIGQ9Ik0xMy42NCwxMS44NnYzLjI5YTUsNSwwLDAsMCwxLjctMS44MlYxMS44NloiLz48cGF0aCBjbGFzcz0iY2xzLTMiIGQ9Ik0xNy43NCwxNi4zMmwtMS40MiwxLjQyYS40Mi40MiwwLDAsMCwwLC42bDMuNTQsMy41NGEuNDIuNDIsMCwwLDAsLjU5LDBsMS40My0xLjQzYS40Mi40MiwwLDAsMCwwLS41OWwtMy41NC0zLjU0YS40Mi40MiwwLDAsMC0uNiwwIi8+PHBhdGggY2xhc3M9ImNscy0yIiBkPSJNMTEsMmE5LDksMCwxLDAsOSw5LDksOSwwLDAsMC05LTltMCwxNS42OUE2LjY4LDYuNjgsMCwxLDEsMTcuNjksMTEsNi42OCw2LjY4LDAsMCwxLDExLDE3LjY5Ii8+PC9nPjwvc3ZnPg==",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"CreateTable"},{property:"og:description",content:"Create a table | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-gcp/tasks/bigquery/io.kestra.plugin.gcp.bigquery.CreateTable.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"CreateTable"},{name:"twitter:description",content:"Create a table | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-gcp/tasks/bigquery/io.kestra.plugin.gcp.bigquery.CreateTable.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-gcp/tasks/bigquery/io.kestra.plugin.gcp.bigquery.CreateTable.html",relativePath:"plugins/plugin-gcp/tasks/bigquery/io.kestra.plugin.gcp.bigquery.CreateTable.md",key:"v-3c55e943",path:"/plugins/plugin-gcp/tasks/bigquery/io.kestra.plugin.gcp.bigquery.CreateTable.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:86},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:437},{level:3,title:"dataset",slug:"dataset",normalizedTitle:"dataset",charIndex:187},{level:3,title:"description",slug:"description",normalizedTitle:"description",charIndex:545},{level:3,title:"encryptionConfiguration",slug:"encryptionconfiguration",normalizedTitle:"encryptionconfiguration",charIndex:655},{level:3,title:"expirationDuration",slug:"expirationduration",normalizedTitle:"expirationduration",charIndex:778},{level:3,title:"friendlyName",slug:"friendlyname",normalizedTitle:"friendlyname",charIndex:408},{level:3,title:"labels",slug:"labels",normalizedTitle:"labels",charIndex:1141},{level:3,title:"location",slug:"location",normalizedTitle:"location",charIndex:1247},{level:3,title:"projectId",slug:"projectid",normalizedTitle:"projectid",charIndex:165},{level:3,title:"requirePartitionFilter",slug:"requirepartitionfilter",normalizedTitle:"requirepartitionfilter",charIndex:1544},{level:3,title:"retryAuto",slug:"retryauto",normalizedTitle:"retryauto",charIndex:1741},{level:3,title:"retryMessages",slug:"retrymessages",normalizedTitle:"retrymessages",charIndex:1799},{level:3,title:"retryReasons",slug:"retryreasons",normalizedTitle:"retryreasons",charIndex:2089},{level:3,title:"scopes",slug:"scopes",normalizedTitle:"scopes",charIndex:2305},{level:3,title:"serviceAccount",slug:"serviceaccount",normalizedTitle:"serviceaccount",charIndex:2467},{level:3,title:"table",slug:"table",normalizedTitle:"table",charIndex:76},{level:3,title:"tableDefinition",slug:"tabledefinition",normalizedTitle:"tabledefinition",charIndex:223},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:2749},{level:3,title:"creationTime",slug:"creationtime",normalizedTitle:"creationtime",charIndex:2761},{level:3,title:"datasetId",slug:"datasetid",normalizedTitle:"datasetid",charIndex:2835},{level:3,title:"definition",slug:"definition",normalizedTitle:"definition",charIndex:2734},{level:3,title:"description",slug:"description-2",normalizedTitle:"description",charIndex:545},{level:3,title:"encryptionConfiguration",slug:"encryptionconfiguration-2",normalizedTitle:"encryptionconfiguration",charIndex:655},{level:3,title:"etag",slug:"etag",normalizedTitle:"etag",charIndex:3125},{level:3,title:"expirationTime",slug:"expirationtime",normalizedTitle:"expirationtime",charIndex:3185},{level:3,title:"friendlyName",slug:"friendlyname-2",normalizedTitle:"friendlyname",charIndex:408},{level:3,title:"generatedId",slug:"generatedid",normalizedTitle:"generatedid",charIndex:3453},{level:3,title:"labels",slug:"labels-2",normalizedTitle:"labels",charIndex:1141},{level:3,title:"lastModifiedTime",slug:"lastmodifiedtime",normalizedTitle:"lastmodifiedtime",charIndex:3604},{level:3,title:"numBytes",slug:"numbytes",normalizedTitle:"numbytes",charIndex:3688},{level:3,title:"numLongTermBytes",slug:"numlongtermbytes",normalizedTitle:"numlongtermbytes",charIndex:3754},{level:3,title:"numRows",slug:"numrows",normalizedTitle:"numrows",charIndex:3877},{level:3,title:"projectId",slug:"projectid-2",normalizedTitle:"projectid",charIndex:165},{level:3,title:"requirePartitionFilter",slug:"requirepartitionfilter-2",normalizedTitle:"requirepartitionfilter",charIndex:1544},{level:3,title:"selfLink",slug:"selflink",normalizedTitle:"selflink",charIndex:4170},{level:3,title:"table",slug:"table-2",normalizedTitle:"table",charIndex:76},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:4360},{level:3,title:"MaterializedViewDefinition",slug:"materializedviewdefinition",normalizedTitle:"materializedviewdefinition",charIndex:4376},{level:3,title:"TableDefinition",slug:"tabledefinition-2",normalizedTitle:"tabledefinition",charIndex:355},{level:3,title:"TimePartitioning",slug:"timepartitioning",normalizedTitle:"timepartitioning",charIndex:5593},{level:3,title:"StandardTableDefinition",slug:"standardtabledefinition-2",normalizedTitle:"standardtabledefinition",charIndex:5376},{level:3,title:"Random-1",slug:"random-1",normalizedTitle:"random-1",charIndex:7040},{level:3,title:"Random-2",slug:"random-2",normalizedTitle:"random-2",charIndex:7462},{level:3,title:"Constant-1",slug:"constant-1",normalizedTitle:"constant-1",charIndex:7475},{level:3,title:"Field",slug:"field-2",normalizedTitle:"field",charIndex:7814},{level:3,title:"UserDefinedFunction",slug:"userdefinedfunction",normalizedTitle:"userdefinedfunction",charIndex:8431},{level:3,title:"Constant-2",slug:"constant-2",normalizedTitle:"constant-2",charIndex:8862},{level:3,title:"ExternalTableDefinition",slug:"externaltabledefinition-2",normalizedTitle:"externaltabledefinition",charIndex:4985},{level:3,title:"StreamingBuffer",slug:"streamingbuffer-2",normalizedTitle:"streamingbuffer",charIndex:6678},{level:3,title:"Range",slug:"range",normalizedTitle:"range",charIndex:6485},{level:3,title:"PolicyTags",slug:"policytags-2",normalizedTitle:"policytags",charIndex:8190},{level:3,title:"RangePartitioning",slug:"rangepartitioning-2",normalizedTitle:"rangepartitioning",charIndex:6485},{level:3,title:"Exponential-2",slug:"exponential-2",normalizedTitle:"exponential-2",charIndex:11162},{level:3,title:"Exponential-1",slug:"exponential-1",normalizedTitle:"exponential-1",charIndex:11180},{level:3,title:"Schema",slug:"schema-2",normalizedTitle:"schema",charIndex:5280},{level:3,title:"ViewDefinition",slug:"viewdefinition-2",normalizedTitle:"viewdefinition",charIndex:4388},{level:3,title:"EncryptionConfiguration",slug:"encryptionconfiguration-3",normalizedTitle:"encryptionconfiguration",charIndex:689}],headersStr:"Examples Properties dataset description encryptionConfiguration expirationDuration friendlyName labels location projectId requirePartitionFilter retryAuto retryMessages retryReasons scopes serviceAccount table tableDefinition Outputs creationTime datasetId definition description encryptionConfiguration etag expirationTime friendlyName generatedId labels lastModifiedTime numBytes numLongTermBytes numRows projectId requirePartitionFilter selfLink table Definitions MaterializedViewDefinition TableDefinition TimePartitioning StandardTableDefinition Random-1 Random-2 Constant-1 Field UserDefinedFunction Constant-2 ExternalTableDefinition StreamingBuffer Range PolicyTags RangePartitioning Exponential-2 Exponential-1 Schema ViewDefinition EncryptionConfiguration",content:"CreateTable\n\ntype: \"io.kestra.plugin.gcp.bigquery.CreateTable\"\n\n\n> Create a table\n\n\n# Examples\n\nid: \"create_table\"\ntype: \"io.kestra.plugin.gcp.bigquery.CreateTable\"\nprojectId: my-project\ndataset: my-dataset\ntable: my-table\ntableDefinition:\n  type: TABLE\n  schema:\n    fields:\n    - name: id\n      type: INT64\n    - name: name\n      type: STRING\n  standardTableDefinition:\n    clustering:\n    - id\n    - name\nfriendlyName: new_table\n\n\n\n# Properties\n\n\n# dataset\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The dataset's user-defined id\n\n\n# description\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The user-friendly description for the table\n\n\n# encryptionConfiguration\n\n * Type: EncryptionConfiguration\n * Dynamic: ❓\n * Required: ❌\n\n> The encryption configuration\n\n\n# expirationDuration\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Format: duration\n\n> Sets the duration since now when this table expires.\n\nIf not present, the table will persist indefinitely. Expired tables will be deleted and their storage reclaimed.\n\n\n# friendlyName\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The user-friendly name for the table\n\n\n# labels\n\n * Type: object\n * Dynamic: ✔️\n * Required: ❌\n\n> Return a map for labels applied to the table\n\n\n# location\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The geographic location where the dataset should reside\n\nThis property is experimental and might be subject to change or removed.\n\nSee Dataset Location\n\n\n# projectId\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The GCP project id\n\n\n# requirePartitionFilter\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n> Return true if a partition filter (that can be used for partition elimination) is required for queries over this table.\n\n\n# retryAuto\n\n * Type: ====\n * Dynamic: ❓\n * Required: ❌\n\n\n# retryMessages\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: [due to concurrent update, Retrying the job may solve the problem]\n\n> The message that are valid for a automatic retry.\n\nMessage is tested as a substring of the full message and case insensitive\n\n\n# retryReasons\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: [rateLimitExceeded, jobBackendError, internalError, jobInternalError]\n\n> The reason that are valid for a automatic retry.\n\n\n# scopes\n\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n * Default: [https://www.googleapis.com/auth/cloud-platform]\n\n> The GCP scopes to used\n\n\n# serviceAccount\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The GCP service account key\n\n\n# table\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The table user-defined id\n\n\n# tableDefinition\n\n * Type: TableDefinition\n * Dynamic: ❓\n * Required: ❌\n\n> The table definition\n\n\n# Outputs\n\n\n# creationTime\n\n * Type: string\n\n> The time when this table was created\n\n\n# datasetId\n\n * Type: string\n\n> The dataset's id\n\n\n# definition\n\n * Type: TableDefinition\n\n> The table definition\n\n\n# description\n\n * Type: string\n\n> The user-friendly description for the table\n\n\n# encryptionConfiguration\n\n * Type: EncryptionConfiguration\n\n> The encryption configuration\n\n\n# etag\n\n * Type: string\n\n> The hash of the table resource\n\n\n# expirationTime\n\n * Type: string\n\n> Returns the time when this table expires\n\nIf not present, the table will persist indefinitely. Expired tables will be deleted and their storage reclaimed.\n\n\n# friendlyName\n\n * Type: string\n\n> The user-friendly name for the table\n\n\n# generatedId\n\n * Type: string\n\n> The service-generated id for the table\n\n\n# labels\n\n * Type: object\n\n> Return a map for labels applied to the table\n\n\n# lastModifiedTime\n\n * Type: string\n\n> The time when this table was last modified\n\n\n# numBytes\n\n * Type: integer\n\n> The size of this table in bytes\n\n\n# numLongTermBytes\n\n * Type: integer\n\n> The number of bytes considered \"long-term storage\" for reduced billing purposes.\n\n\n# numRows\n\n * Type: integer\n\n> The number of rows of data in this table\n\n\n# projectId\n\n * Type: string\n\n> The project's id\n\n\n# requirePartitionFilter\n\n * Type: boolean\n\n> Return true if a partition filter (that can be used for partition elimination) is required for queries over this table.\n\n\n# selfLink\n\n * Type: string\n\n> The URL that can be used to access the resource again. The returned URL can be used for get or update requests.\n\n\n# table\n\n * Type: string\n\n> The table name\n\n\n# Definitions\n\n\n# MaterializedViewDefinition\n\n# enableRefresh\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n\n> is enable automatic refresh of the materialized view when the base table is updated\n\n# lastRefreshDate\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Date when this materialized view was last modified\n\n# query\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> the query whose result is persisted\n\n# refreshInterval\n\n * Type: string\n * Dynamic: ❌\n * Required: ❌\n * Format: duration\n\n> the maximum frequency at which this materialized view will be refreshed\n\n\n# TableDefinition\n\n# externalTableDefinition\n\n * Type: ExternalTableDefinition\n * Dynamic: ❓\n * Required: ❌\n\n> the external table definition if the type is EXTERNAL\n\n# materializedViewDefinition\n\n * Type: MaterializedViewDefinition\n * Dynamic: ❓\n * Required: ❌\n\n> the materialized view definition if the type is MATERIALIZED_VIEW\n\n# schema\n\n * Type: Schema\n * Dynamic: ❓\n * Required: ❌\n\n> the table's schema.\n\n# standardTableDefinition\n\n * Type: StandardTableDefinition\n * Dynamic: ❓\n * Required: ❌\n\n> the table definition if the type is TABLE\n\n# viewDefinition\n\n * Type: ViewDefinition\n * Dynamic: ❓\n * Required: ❌\n\n> the view definition if the type is VIEW\n\n\n# TimePartitioning\n\n# expiration\n\n * Type: string\n * Dynamic: ❌\n * Required: ❌\n * Format: duration\n\n> the number of milliseconds for which to keep the storage for a partition. When expired, the storage for the partition is reclaimed. If null, the partion does not expire.\n\n# field\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> if not set, the table is partitioned by pseudo column '_PARTITIONTIME'; if set, the table is partitioned by this field.\n\n# requirePartitionFilter\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n\n> If set to true, queries over this table require a partition filter (that can be used for partition elimination) to be specified.\n\n\n# StandardTableDefinition\n\n# clustering\n\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n\n> Returns the clustering configuration for this table. If {@code null}, the table is not clustered.\n\n# rangePartitioning\n\n * Type: RangePartitioning\n * Dynamic: ❓\n * Required: ❌\n\n> Returns the range partitioning configuration for this table. If {@code null}, the table is not range-partitioned.\n\n# streamingBuffer\n\n * Type: StreamingBuffer\n * Dynamic: ❓\n * Required: ❌\n\n> Returns information on the table's streaming buffer if any exists. Returns {@code null} if no streaming buffer exists.\n\n# timePartitioning\n\n * Type: TimePartitioning\n * Dynamic: ❓\n * Required: ❌\n\n> Returns the time partitioning configuration for this table. If {@code null}, the table is not time-partitioned.\n\n\n# Random-1\n\n# maxAttempt\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n * Minimum: &gt;= 1\n\n# maxDuration\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Format: duration\n\n# maxInterval\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n * Format: duration\n\n# minInterval\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n * Format: duration\n\n# warningOnRetry\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: false\n\n\n# Random-2\n\n\n# Constant-1\n\n# interval\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n * Format: duration\n\n# maxAttempt\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n * Minimum: &gt;= 1\n\n# maxDuration\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Format: duration\n\n# warningOnRetry\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: false\n\n\n# Field\n\n# description\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> the field description.\n\n# mode\n\n * Type: string\n\n * Dynamic: ✔️\n\n * Required: ❌\n\n * Possible Values:\n   \n   * NULLABLE\n   * REQUIRED\n   * REPEATED\n\n> the field mode.\n\nBy default Field.Mode.NULLABLE is used.\n\n# name\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> the field name.\n\n# policyTags\n\n * Type: PolicyTags\n * Dynamic: ✔️\n * Required: ❌\n\n> the policy tags for the field.\n\n# subFields\n\n * Type: array\n * SubType: Field\n * Dynamic: ✔️\n * Required: ❌\n\n> the list of sub-fields if type is a LegacySQLType.RECORD. Returns null otherwise.\n\n\n# UserDefinedFunction\n\n# Type of UserDefinedFunction\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\nIf type is UserDefinedFunction.Type.INLINE this method returns a code blob.\nIf type is UserDefinedFunction.Type.FROM_URI the method returns a Google Cloud Storage URI (e.g. gs://bucket/path)\n\n# the type of user defined function.\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ❌\n\n * Possible Values:\n   \n   * INLINE\n   * FROM_URI\n\n\n# Constant-2\n\n\n# ExternalTableDefinition\n\n# autodetect\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n> whether automatic detection of schema and format options should be performed.\n\n# compression\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> the compression type of the data source.\n\n# formatType\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Possible Values:\n   \n   * CSV\n   * JSON\n   * BIGTABLE\n   * DATASTORE_BACKUP\n   * AVRO\n   * GOOGLE_SHEETS\n   * PARQUET\n   * ORC\n\n> the source format, and possibly some parsing options, of the external data.\n\n# ignoreUnknownValues\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n> whether BigQuery should allow extra values that are not represented in the table schema.\n\nIf true, the extra values are ignored. If false, records with extra columns are treated as bad records, and if there are too many bad records, an invalid error is returned in the job result.\n\n# maxBadRecords\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n> the maximum number of bad records that BigQuery can ignore when reading data.\n\nIf the number of bad records exceeds this value, an invalid error is returned in the job result.\n\n# sourceUris\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> the fully-qualified URIs that point to your data in Google Cloud Storage.\n\nEach URI can\n\n * contain one '*' wildcard character that must come after the bucket's name. Size limits related\n * to load jobs apply to external data sources, plus an additional limit of 10 GB maximum size\n * across all URIs.\n\n\n# StreamingBuffer\n\n# estimatedBytes\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n# estimatedRows\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n# oldestEntryTime\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n\n# Range\n\n# the end of range partitioning.\n\n * Type: integer\n * Dynamic: ❌\n * Required: ❌\n\n# the start of range partitioning.\n\n * Type: integer\n * Dynamic: ❌\n * Required: ❌\n\n# the width of each interval.\n\n * Type: integer\n * Dynamic: ❌\n * Required: ❌\n\n\n# PolicyTags\n\n# the policy tags names.\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n\n# RangePartitioning\n\n# the range of range partitioning.\n\n * Type: Range\n * Dynamic: ❓\n * Required: ❌\n\n# the range partitioning field.\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n\n# Exponential-2\n\n\n# Exponential-1\n\n# delayFactor\n\n * Type: number\n * Dynamic: ❓\n * Required: ❌\n\n# interval\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n * Format: duration\n\n# maxAttempt\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n * Minimum: &gt;= 1\n\n# maxDuration\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Format: duration\n\n# maxInterval\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n * Format: duration\n\n# warningOnRetry\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: false\n\n\n# Schema\n\n# the fields associated to this schema.\n\n * Type: array\n * SubType: Field\n * Dynamic: ❓\n * Required: ❌\n\n\n# ViewDefinition\n\n# query\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The query whose result is persisted\n\n# viewUserDefinedFunctions\n\n * Type: array\n * SubType: UserDefinedFunction\n * Dynamic: ❓\n * Required: ❌\n\n> User defined functions that can be used by query. Returns null if not set.\n\n\n# EncryptionConfiguration\n\n# the Kms key name\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌",normalizedContent:"createtable\n\ntype: \"io.kestra.plugin.gcp.bigquery.createtable\"\n\n\n> create a table\n\n\n# examples\n\nid: \"create_table\"\ntype: \"io.kestra.plugin.gcp.bigquery.createtable\"\nprojectid: my-project\ndataset: my-dataset\ntable: my-table\ntabledefinition:\n  type: table\n  schema:\n    fields:\n    - name: id\n      type: int64\n    - name: name\n      type: string\n  standardtabledefinition:\n    clustering:\n    - id\n    - name\nfriendlyname: new_table\n\n\n\n# properties\n\n\n# dataset\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the dataset's user-defined id\n\n\n# description\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the user-friendly description for the table\n\n\n# encryptionconfiguration\n\n * type: encryptionconfiguration\n * dynamic: ❓\n * required: ❌\n\n> the encryption configuration\n\n\n# expirationduration\n\n * type: string\n * dynamic: ❓\n * required: ❌\n * format: duration\n\n> sets the duration since now when this table expires.\n\nif not present, the table will persist indefinitely. expired tables will be deleted and their storage reclaimed.\n\n\n# friendlyname\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the user-friendly name for the table\n\n\n# labels\n\n * type: object\n * dynamic: ✔️\n * required: ❌\n\n> return a map for labels applied to the table\n\n\n# location\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the geographic location where the dataset should reside\n\nthis property is experimental and might be subject to change or removed.\n\nsee dataset location\n\n\n# projectid\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the gcp project id\n\n\n# requirepartitionfilter\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n> return true if a partition filter (that can be used for partition elimination) is required for queries over this table.\n\n\n# retryauto\n\n * type: ====\n * dynamic: ❓\n * required: ❌\n\n\n# retrymessages\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n * default: [due to concurrent update, retrying the job may solve the problem]\n\n> the message that are valid for a automatic retry.\n\nmessage is tested as a substring of the full message and case insensitive\n\n\n# retryreasons\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n * default: [ratelimitexceeded, jobbackenderror, internalerror, jobinternalerror]\n\n> the reason that are valid for a automatic retry.\n\n\n# scopes\n\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n * default: [https://www.googleapis.com/auth/cloud-platform]\n\n> the gcp scopes to used\n\n\n# serviceaccount\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the gcp service account key\n\n\n# table\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the table user-defined id\n\n\n# tabledefinition\n\n * type: tabledefinition\n * dynamic: ❓\n * required: ❌\n\n> the table definition\n\n\n# outputs\n\n\n# creationtime\n\n * type: string\n\n> the time when this table was created\n\n\n# datasetid\n\n * type: string\n\n> the dataset's id\n\n\n# definition\n\n * type: tabledefinition\n\n> the table definition\n\n\n# description\n\n * type: string\n\n> the user-friendly description for the table\n\n\n# encryptionconfiguration\n\n * type: encryptionconfiguration\n\n> the encryption configuration\n\n\n# etag\n\n * type: string\n\n> the hash of the table resource\n\n\n# expirationtime\n\n * type: string\n\n> returns the time when this table expires\n\nif not present, the table will persist indefinitely. expired tables will be deleted and their storage reclaimed.\n\n\n# friendlyname\n\n * type: string\n\n> the user-friendly name for the table\n\n\n# generatedid\n\n * type: string\n\n> the service-generated id for the table\n\n\n# labels\n\n * type: object\n\n> return a map for labels applied to the table\n\n\n# lastmodifiedtime\n\n * type: string\n\n> the time when this table was last modified\n\n\n# numbytes\n\n * type: integer\n\n> the size of this table in bytes\n\n\n# numlongtermbytes\n\n * type: integer\n\n> the number of bytes considered \"long-term storage\" for reduced billing purposes.\n\n\n# numrows\n\n * type: integer\n\n> the number of rows of data in this table\n\n\n# projectid\n\n * type: string\n\n> the project's id\n\n\n# requirepartitionfilter\n\n * type: boolean\n\n> return true if a partition filter (that can be used for partition elimination) is required for queries over this table.\n\n\n# selflink\n\n * type: string\n\n> the url that can be used to access the resource again. the returned url can be used for get or update requests.\n\n\n# table\n\n * type: string\n\n> the table name\n\n\n# definitions\n\n\n# materializedviewdefinition\n\n# enablerefresh\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n\n> is enable automatic refresh of the materialized view when the base table is updated\n\n# lastrefreshdate\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> date when this materialized view was last modified\n\n# query\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the query whose result is persisted\n\n# refreshinterval\n\n * type: string\n * dynamic: ❌\n * required: ❌\n * format: duration\n\n> the maximum frequency at which this materialized view will be refreshed\n\n\n# tabledefinition\n\n# externaltabledefinition\n\n * type: externaltabledefinition\n * dynamic: ❓\n * required: ❌\n\n> the external table definition if the type is external\n\n# materializedviewdefinition\n\n * type: materializedviewdefinition\n * dynamic: ❓\n * required: ❌\n\n> the materialized view definition if the type is materialized_view\n\n# schema\n\n * type: schema\n * dynamic: ❓\n * required: ❌\n\n> the table's schema.\n\n# standardtabledefinition\n\n * type: standardtabledefinition\n * dynamic: ❓\n * required: ❌\n\n> the table definition if the type is table\n\n# viewdefinition\n\n * type: viewdefinition\n * dynamic: ❓\n * required: ❌\n\n> the view definition if the type is view\n\n\n# timepartitioning\n\n# expiration\n\n * type: string\n * dynamic: ❌\n * required: ❌\n * format: duration\n\n> the number of milliseconds for which to keep the storage for a partition. when expired, the storage for the partition is reclaimed. if null, the partion does not expire.\n\n# field\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> if not set, the table is partitioned by pseudo column '_partitiontime'; if set, the table is partitioned by this field.\n\n# requirepartitionfilter\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n\n> if set to true, queries over this table require a partition filter (that can be used for partition elimination) to be specified.\n\n\n# standardtabledefinition\n\n# clustering\n\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n\n> returns the clustering configuration for this table. if {@code null}, the table is not clustered.\n\n# rangepartitioning\n\n * type: rangepartitioning\n * dynamic: ❓\n * required: ❌\n\n> returns the range partitioning configuration for this table. if {@code null}, the table is not range-partitioned.\n\n# streamingbuffer\n\n * type: streamingbuffer\n * dynamic: ❓\n * required: ❌\n\n> returns information on the table's streaming buffer if any exists. returns {@code null} if no streaming buffer exists.\n\n# timepartitioning\n\n * type: timepartitioning\n * dynamic: ❓\n * required: ❌\n\n> returns the time partitioning configuration for this table. if {@code null}, the table is not time-partitioned.\n\n\n# random-1\n\n# maxattempt\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n * minimum: &gt;= 1\n\n# maxduration\n\n * type: string\n * dynamic: ❓\n * required: ❌\n * format: duration\n\n# maxinterval\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n * format: duration\n\n# mininterval\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n * format: duration\n\n# warningonretry\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: false\n\n\n# random-2\n\n\n# constant-1\n\n# interval\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n * format: duration\n\n# maxattempt\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n * minimum: &gt;= 1\n\n# maxduration\n\n * type: string\n * dynamic: ❓\n * required: ❌\n * format: duration\n\n# warningonretry\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: false\n\n\n# field\n\n# description\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the field description.\n\n# mode\n\n * type: string\n\n * dynamic: ✔️\n\n * required: ❌\n\n * possible values:\n   \n   * nullable\n   * required\n   * repeated\n\n> the field mode.\n\nby default field.mode.nullable is used.\n\n# name\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the field name.\n\n# policytags\n\n * type: policytags\n * dynamic: ✔️\n * required: ❌\n\n> the policy tags for the field.\n\n# subfields\n\n * type: array\n * subtype: field\n * dynamic: ✔️\n * required: ❌\n\n> the list of sub-fields if type is a legacysqltype.record. returns null otherwise.\n\n\n# userdefinedfunction\n\n# type of userdefinedfunction\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\nif type is userdefinedfunction.type.inline this method returns a code blob.\nif type is userdefinedfunction.type.from_uri the method returns a google cloud storage uri (e.g. gs://bucket/path)\n\n# the type of user defined function.\n\n * type: string\n\n * dynamic: ❌\n\n * required: ❌\n\n * possible values:\n   \n   * inline\n   * from_uri\n\n\n# constant-2\n\n\n# externaltabledefinition\n\n# autodetect\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n> whether automatic detection of schema and format options should be performed.\n\n# compression\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the compression type of the data source.\n\n# formattype\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * possible values:\n   \n   * csv\n   * json\n   * bigtable\n   * datastore_backup\n   * avro\n   * google_sheets\n   * parquet\n   * orc\n\n> the source format, and possibly some parsing options, of the external data.\n\n# ignoreunknownvalues\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n> whether bigquery should allow extra values that are not represented in the table schema.\n\nif true, the extra values are ignored. if false, records with extra columns are treated as bad records, and if there are too many bad records, an invalid error is returned in the job result.\n\n# maxbadrecords\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n> the maximum number of bad records that bigquery can ignore when reading data.\n\nif the number of bad records exceeds this value, an invalid error is returned in the job result.\n\n# sourceuris\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> the fully-qualified uris that point to your data in google cloud storage.\n\neach uri can\n\n * contain one '*' wildcard character that must come after the bucket's name. size limits related\n * to load jobs apply to external data sources, plus an additional limit of 10 gb maximum size\n * across all uris.\n\n\n# streamingbuffer\n\n# estimatedbytes\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n# estimatedrows\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n# oldestentrytime\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n\n# range\n\n# the end of range partitioning.\n\n * type: integer\n * dynamic: ❌\n * required: ❌\n\n# the start of range partitioning.\n\n * type: integer\n * dynamic: ❌\n * required: ❌\n\n# the width of each interval.\n\n * type: integer\n * dynamic: ❌\n * required: ❌\n\n\n# policytags\n\n# the policy tags names.\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n\n# rangepartitioning\n\n# the range of range partitioning.\n\n * type: range\n * dynamic: ❓\n * required: ❌\n\n# the range partitioning field.\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n\n# exponential-2\n\n\n# exponential-1\n\n# delayfactor\n\n * type: number\n * dynamic: ❓\n * required: ❌\n\n# interval\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n * format: duration\n\n# maxattempt\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n * minimum: &gt;= 1\n\n# maxduration\n\n * type: string\n * dynamic: ❓\n * required: ❌\n * format: duration\n\n# maxinterval\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n * format: duration\n\n# warningonretry\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: false\n\n\n# schema\n\n# the fields associated to this schema.\n\n * type: array\n * subtype: field\n * dynamic: ❓\n * required: ❌\n\n\n# viewdefinition\n\n# query\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the query whose result is persisted\n\n# viewuserdefinedfunctions\n\n * type: array\n * subtype: userdefinedfunction\n * dynamic: ❓\n * required: ❌\n\n> user defined functions that can be used by query. returns null if not set.\n\n\n# encryptionconfiguration\n\n# the kms key name\n\n * type: string\n * dynamic: ✔️\n * required: ❌",charsets:{}},{title:"DeleteDataset",frontmatter:{title:"DeleteDataset",editLink:!1,description:"Delete a dataset.",icon:"PHN2ZyBpZD0iUHJvZHVjdF9JY29ucyIgZGF0YS1uYW1lPSJQcm9kdWN0IEljb25zIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCAyNCAyNCI+PGRlZnM+PHN0eWxlPi5jbHMtMXtmaWxsOiNhZWNiZmE7fS5jbHMtMSwuY2xzLTIsLmNscy0ze2ZpbGwtcnVsZTpldmVub2RkO30uY2xzLTJ7ZmlsbDojNjY5ZGY2O30uY2xzLTN7ZmlsbDojNDI4NWY0O308L3N0eWxlPjwvZGVmcz48dGl0bGU+SWNvbl8yNHB4X0NvbG9yX0JpZ1F1ZXJ5PC90aXRsZT48ZyBpZD0iU2hhcGUiPjxwYXRoIGNsYXNzPSJjbHMtMSIgZD0iTTYuNzMsMTAuODN2Mi42M0E0LjkxLDQuOTEsMCwwLDAsOC40NCwxNS4yVjEwLjgzWiIvPjxwYXRoIGNsYXNzPSJjbHMtMiIgZD0iTTkuODksOC40MXY3LjUzQTcuNjIsNy42MiwwLDAsMCwxMSwxNiw4LDgsMCwwLDAsMTIsMTZWOC40MVoiLz48cGF0aCBjbGFzcz0iY2xzLTEiIGQ9Ik0xMy42NCwxMS44NnYzLjI5YTUsNSwwLDAsMCwxLjctMS44MlYxMS44NloiLz48cGF0aCBjbGFzcz0iY2xzLTMiIGQ9Ik0xNy43NCwxNi4zMmwtMS40MiwxLjQyYS40Mi40MiwwLDAsMCwwLC42bDMuNTQsMy41NGEuNDIuNDIsMCwwLDAsLjU5LDBsMS40My0xLjQzYS40Mi40MiwwLDAsMCwwLS41OWwtMy41NC0zLjU0YS40Mi40MiwwLDAsMC0uNiwwIi8+PHBhdGggY2xhc3M9ImNscy0yIiBkPSJNMTEsMmE5LDksMCwxLDAsOSw5LDksOSwwLDAsMC05LTltMCwxNS42OUE2LjY4LDYuNjgsMCwxLDEsMTcuNjksMTEsNi42OCw2LjY4LDAsMCwxLDExLDE3LjY5Ii8+PC9nPjwvc3ZnPg==",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"DeleteDataset"},{property:"og:description",content:"Delete a dataset. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-gcp/tasks/bigquery/io.kestra.plugin.gcp.bigquery.DeleteDataset.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"DeleteDataset"},{name:"twitter:description",content:"Delete a dataset. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-gcp/tasks/bigquery/io.kestra.plugin.gcp.bigquery.DeleteDataset.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-gcp/tasks/bigquery/io.kestra.plugin.gcp.bigquery.DeleteDataset.html",relativePath:"plugins/plugin-gcp/tasks/bigquery/io.kestra.plugin.gcp.bigquery.DeleteDataset.md",key:"v-dbc6f7ba",path:"/plugins/plugin-gcp/tasks/bigquery/io.kestra.plugin.gcp.bigquery.DeleteDataset.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:93},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:240},{level:3,title:"deleteContents",slug:"deletecontents",normalizedTitle:"deletecontents",charIndex:214},{level:3,title:"location",slug:"location",normalizedTitle:"location",charIndex:470},{level:3,title:"name",slug:"name",normalizedTitle:"name",charIndex:196},{level:3,title:"projectId",slug:"projectid",normalizedTitle:"projectid",charIndex:775},{level:3,title:"retryAuto",slug:"retryauto",normalizedTitle:"retryauto",charIndex:857},{level:3,title:"retryMessages",slug:"retrymessages",normalizedTitle:"retrymessages",charIndex:915},{level:3,title:"retryReasons",slug:"retryreasons",normalizedTitle:"retryreasons",charIndex:1205},{level:3,title:"scopes",slug:"scopes",normalizedTitle:"scopes",charIndex:1421},{level:3,title:"serviceAccount",slug:"serviceaccount",normalizedTitle:"serviceaccount",charIndex:1583},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1679},{level:3,title:"dataset",slug:"dataset",normalizedTitle:"dataset",charIndex:80},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:1753},{level:3,title:"Random-1",slug:"random-1",normalizedTitle:"random-1",charIndex:1769},{level:3,title:"Random-2",slug:"random-2",normalizedTitle:"random-2",charIndex:2191},{level:3,title:"Exponential-2",slug:"exponential-2",normalizedTitle:"exponential-2",charIndex:2204},{level:3,title:"Constant-1",slug:"constant-1",normalizedTitle:"constant-1",charIndex:2222},{level:3,title:"Exponential-1",slug:"exponential-1",normalizedTitle:"exponential-1",charIndex:2561},{level:3,title:"Constant-2",slug:"constant-2",normalizedTitle:"constant-2",charIndex:3046}],headersStr:"Examples Properties deleteContents location name projectId retryAuto retryMessages retryReasons scopes serviceAccount Outputs dataset Definitions Random-1 Random-2 Exponential-2 Constant-1 Exponential-1 Constant-2",content:'DeleteDataset\n\ntype: "io.kestra.plugin.gcp.bigquery.DeleteDataset"\n\n\n> Delete a dataset.\n\n\n# Examples\n\n> Delete a dataset\n\nid: "delete_dataset"\ntype: "io.kestra.plugin.gcp.bigquery.DeleteDataset"\nname: "my-bucket"\ndeleteContents: true\n\n\n\n# Properties\n\n\n# deleteContents\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n> Whether to delete a dataset even if non-empty\n\nIf not provided, attempting to delete a non-empty dataset will result in a exception being thrown.\n\n\n# location\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The geographic location where the dataset should reside\n\nThis property is experimental and might be subject to change or removed.\n\nSee Dataset Location\n\n\n# name\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The dataset\'s user-defined id\n\n\n# projectId\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The GCP project id\n\n\n# retryAuto\n\n * Type: ====\n * Dynamic: ❓\n * Required: ❌\n\n\n# retryMessages\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: [due to concurrent update, Retrying the job may solve the problem]\n\n> The message that are valid for a automatic retry.\n\nMessage is tested as a substring of the full message and case insensitive\n\n\n# retryReasons\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: [rateLimitExceeded, jobBackendError, internalError, jobInternalError]\n\n> The reason that are valid for a automatic retry.\n\n\n# scopes\n\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n * Default: [https://www.googleapis.com/auth/cloud-platform]\n\n> The GCP scopes to used\n\n\n# serviceAccount\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The GCP service account key\n\n\n# Outputs\n\n\n# dataset\n\n * Type: string\n\n> The dataset\'s user-defined id\n\n\n# Definitions\n\n\n# Random-1\n\n# maxAttempt\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n * Minimum: &gt;= 1\n\n# maxDuration\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Format: duration\n\n# maxInterval\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n * Format: duration\n\n# minInterval\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n * Format: duration\n\n# warningOnRetry\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: false\n\n\n# Random-2\n\n\n# Exponential-2\n\n\n# Constant-1\n\n# interval\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n * Format: duration\n\n# maxAttempt\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n * Minimum: &gt;= 1\n\n# maxDuration\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Format: duration\n\n# warningOnRetry\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: false\n\n\n# Exponential-1\n\n# delayFactor\n\n * Type: number\n * Dynamic: ❓\n * Required: ❌\n\n# interval\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n * Format: duration\n\n# maxAttempt\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n * Minimum: &gt;= 1\n\n# maxDuration\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Format: duration\n\n# maxInterval\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n * Format: duration\n\n# warningOnRetry\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: false\n\n\n# Constant-2',normalizedContent:'deletedataset\n\ntype: "io.kestra.plugin.gcp.bigquery.deletedataset"\n\n\n> delete a dataset.\n\n\n# examples\n\n> delete a dataset\n\nid: "delete_dataset"\ntype: "io.kestra.plugin.gcp.bigquery.deletedataset"\nname: "my-bucket"\ndeletecontents: true\n\n\n\n# properties\n\n\n# deletecontents\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n> whether to delete a dataset even if non-empty\n\nif not provided, attempting to delete a non-empty dataset will result in a exception being thrown.\n\n\n# location\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the geographic location where the dataset should reside\n\nthis property is experimental and might be subject to change or removed.\n\nsee dataset location\n\n\n# name\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the dataset\'s user-defined id\n\n\n# projectid\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the gcp project id\n\n\n# retryauto\n\n * type: ====\n * dynamic: ❓\n * required: ❌\n\n\n# retrymessages\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n * default: [due to concurrent update, retrying the job may solve the problem]\n\n> the message that are valid for a automatic retry.\n\nmessage is tested as a substring of the full message and case insensitive\n\n\n# retryreasons\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n * default: [ratelimitexceeded, jobbackenderror, internalerror, jobinternalerror]\n\n> the reason that are valid for a automatic retry.\n\n\n# scopes\n\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n * default: [https://www.googleapis.com/auth/cloud-platform]\n\n> the gcp scopes to used\n\n\n# serviceaccount\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the gcp service account key\n\n\n# outputs\n\n\n# dataset\n\n * type: string\n\n> the dataset\'s user-defined id\n\n\n# definitions\n\n\n# random-1\n\n# maxattempt\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n * minimum: &gt;= 1\n\n# maxduration\n\n * type: string\n * dynamic: ❓\n * required: ❌\n * format: duration\n\n# maxinterval\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n * format: duration\n\n# mininterval\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n * format: duration\n\n# warningonretry\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: false\n\n\n# random-2\n\n\n# exponential-2\n\n\n# constant-1\n\n# interval\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n * format: duration\n\n# maxattempt\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n * minimum: &gt;= 1\n\n# maxduration\n\n * type: string\n * dynamic: ❓\n * required: ❌\n * format: duration\n\n# warningonretry\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: false\n\n\n# exponential-1\n\n# delayfactor\n\n * type: number\n * dynamic: ❓\n * required: ❌\n\n# interval\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n * format: duration\n\n# maxattempt\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n * minimum: &gt;= 1\n\n# maxduration\n\n * type: string\n * dynamic: ❓\n * required: ❌\n * format: duration\n\n# maxinterval\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n * format: duration\n\n# warningonretry\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: false\n\n\n# constant-2',charsets:{}},{title:"ExtractToGcs",frontmatter:{title:"ExtractToGcs",editLink:!1,description:"Extract data from BigQuery table to GCS (Google Cloud Storage)",icon:"PHN2ZyBpZD0iUHJvZHVjdF9JY29ucyIgZGF0YS1uYW1lPSJQcm9kdWN0IEljb25zIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCAyNCAyNCI+PGRlZnM+PHN0eWxlPi5jbHMtMXtmaWxsOiNhZWNiZmE7fS5jbHMtMSwuY2xzLTIsLmNscy0ze2ZpbGwtcnVsZTpldmVub2RkO30uY2xzLTJ7ZmlsbDojNjY5ZGY2O30uY2xzLTN7ZmlsbDojNDI4NWY0O308L3N0eWxlPjwvZGVmcz48dGl0bGU+SWNvbl8yNHB4X0NvbG9yX0JpZ1F1ZXJ5PC90aXRsZT48ZyBpZD0iU2hhcGUiPjxwYXRoIGNsYXNzPSJjbHMtMSIgZD0iTTYuNzMsMTAuODN2Mi42M0E0LjkxLDQuOTEsMCwwLDAsOC40NCwxNS4yVjEwLjgzWiIvPjxwYXRoIGNsYXNzPSJjbHMtMiIgZD0iTTkuODksOC40MXY3LjUzQTcuNjIsNy42MiwwLDAsMCwxMSwxNiw4LDgsMCwwLDAsMTIsMTZWOC40MVoiLz48cGF0aCBjbGFzcz0iY2xzLTEiIGQ9Ik0xMy42NCwxMS44NnYzLjI5YTUsNSwwLDAsMCwxLjctMS44MlYxMS44NloiLz48cGF0aCBjbGFzcz0iY2xzLTMiIGQ9Ik0xNy43NCwxNi4zMmwtMS40MiwxLjQyYS40Mi40MiwwLDAsMCwwLC42bDMuNTQsMy41NGEuNDIuNDIsMCwwLDAsLjU5LDBsMS40My0xLjQzYS40Mi40MiwwLDAsMCwwLS41OWwtMy41NC0zLjU0YS40Mi40MiwwLDAsMC0uNiwwIi8+PHBhdGggY2xhc3M9ImNscy0yIiBkPSJNMTEsMmE5LDksMCwxLDAsOSw5LDksOSwwLDAsMC05LTltMCwxNS42OUE2LjY4LDYuNjgsMCwxLDEsMTcuNjksMTEsNi42OCw2LjY4LDAsMCwxLDExLDE3LjY5Ii8+PC9nPjwvc3ZnPg==",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"ExtractToGcs"},{property:"og:description",content:"Extract data from BigQuery table to GCS (Google Cloud Storage) | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-gcp/tasks/bigquery/io.kestra.plugin.gcp.bigquery.ExtractToGcs.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"ExtractToGcs"},{name:"twitter:description",content:"Extract data from BigQuery table to GCS (Google Cloud Storage) | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-gcp/tasks/bigquery/io.kestra.plugin.gcp.bigquery.ExtractToGcs.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-gcp/tasks/bigquery/io.kestra.plugin.gcp.bigquery.ExtractToGcs.html",relativePath:"plugins/plugin-gcp/tasks/bigquery/io.kestra.plugin.gcp.bigquery.ExtractToGcs.md",key:"v-6cf47c7f",path:"/plugins/plugin-gcp/tasks/bigquery/io.kestra.plugin.gcp.bigquery.ExtractToGcs.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:136},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:417},{level:3,title:"compression",slug:"compression",normalizedTitle:"compression",charIndex:432},{level:3,title:"destinationUris",slug:"destinationuris",normalizedTitle:"destinationuris",charIndex:262},{level:3,title:"fieldDelimiter",slug:"fielddelimiter",normalizedTitle:"fielddelimiter",charIndex:374},{level:3,title:"format",slug:"format",normalizedTitle:"format",charIndex:362},{level:3,title:"jobTimeoutMs",slug:"jobtimeoutms",normalizedTitle:"jobtimeoutms",charIndex:1086},{level:3,title:"labels",slug:"labels",normalizedTitle:"labels",charIndex:1268},{level:3,title:"location",slug:"location",normalizedTitle:"location",charIndex:1794},{level:3,title:"printHeader",slug:"printheader",normalizedTitle:"printheader",charIndex:394},{level:3,title:"projectId",slug:"projectid",normalizedTitle:"projectid",charIndex:2158},{level:3,title:"retryAuto",slug:"retryauto",normalizedTitle:"retryauto",charIndex:2240},{level:3,title:"retryMessages",slug:"retrymessages",normalizedTitle:"retrymessages",charIndex:2298},{level:3,title:"retryReasons",slug:"retryreasons",normalizedTitle:"retryreasons",charIndex:2588},{level:3,title:"scopes",slug:"scopes",normalizedTitle:"scopes",charIndex:2804},{level:3,title:"serviceAccount",slug:"serviceaccount",normalizedTitle:"serviceaccount",charIndex:2966},{level:3,title:"sourceTable",slug:"sourcetable",normalizedTitle:"sourcetable",charIndex:316},{level:3,title:"useAvroLogicalTypes",slug:"useavrologicaltypes",normalizedTitle:"useavrologicaltypes",charIndex:3149},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:3595},{level:3,title:"destinationUris",slug:"destinationuris-2",normalizedTitle:"destinationuris",charIndex:262},{level:3,title:"fileCounts",slug:"filecounts",normalizedTitle:"filecounts",charIndex:3690},{level:3,title:"jobId",slug:"jobid",normalizedTitle:"jobid",charIndex:3770},{level:3,title:"sourceTable",slug:"sourcetable-2",normalizedTitle:"sourcetable",charIndex:316},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:3860},{level:3,title:"Random-1",slug:"random-1",normalizedTitle:"random-1",charIndex:3876},{level:3,title:"Random-2",slug:"random-2",normalizedTitle:"random-2",charIndex:4298},{level:3,title:"Exponential-2",slug:"exponential-2",normalizedTitle:"exponential-2",charIndex:4311},{level:3,title:"Constant-1",slug:"constant-1",normalizedTitle:"constant-1",charIndex:4329},{level:3,title:"Exponential-1",slug:"exponential-1",normalizedTitle:"exponential-1",charIndex:4668},{level:3,title:"Constant-2",slug:"constant-2",normalizedTitle:"constant-2",charIndex:5153}],headersStr:"Examples Properties compression destinationUris fieldDelimiter format jobTimeoutMs labels location printHeader projectId retryAuto retryMessages retryReasons scopes serviceAccount sourceTable useAvroLogicalTypes Outputs destinationUris fileCounts jobId sourceTable Definitions Random-1 Random-2 Exponential-2 Constant-1 Exponential-1 Constant-2",content:'ExtractToGcs\n\ntype: "io.kestra.plugin.gcp.bigquery.ExtractToGcs"\n\n\n> Extract data from BigQuery table to GCS (Google Cloud Storage)\n\n\n# Examples\n\n> Extract a BigQuery table to a gcs bucket\n\nid: "extract_to_gcs"\ntype: "io.kestra.plugin.gcp.bigquery.ExtractToGcs"\ndestinationUris: \n  - "gs://bucket_name/filename.csv"\nsourceTable: "my_project.my_dataset.my_table"\nformat: CSV\nfieldDelimiter: \';\'\nprintHeader: true\n\n\n\n# Properties\n\n\n# compression\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> the compression value to use for exported files. If not set exported files are not compressed.\n\n\n# destinationUris\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The list of fully-qualified Google Cloud Storage URIs (e.g. gs://bucket/path) where the extracted table should be written.\n\n\n# fieldDelimiter\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The delimiter to use between fields in the exported data. By default "," is used.\n\n\n# format\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The exported file format. If not set table is exported in CSV format.\n\n\n# jobTimeoutMs\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n> [Optional] Job timeout in milliseconds. If this time limit is exceeded, BigQuery may attempt to terminate the job.\n\n\n# labels\n\n * Type: object\n * Dynamic: ✔️\n * Required: ❌\n\n> The labels associated with this job.\n\nThe labels associated with this job. You can use these to organize and group your jobs. Label keys and values can be no longer than 63 characters, can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. Label values are optional. Label keys must start with a letter and each label in the list must have a different key.\nParameters:\nlabels - labels or null for none\n\n\n# location\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The geographic location where the dataset should reside\n\nThis property is experimental and might be subject to change or removed.\n\nSee Dataset Location\n\n\n# printHeader\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n> Whether to print out a header row in the results. By default an header is printed.\n\n\n# projectId\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The GCP project id\n\n\n# retryAuto\n\n * Type: ====\n * Dynamic: ❓\n * Required: ❌\n\n\n# retryMessages\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: [due to concurrent update, Retrying the job may solve the problem]\n\n> The message that are valid for a automatic retry.\n\nMessage is tested as a substring of the full message and case insensitive\n\n\n# retryReasons\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: [rateLimitExceeded, jobBackendError, internalError, jobInternalError]\n\n> The reason that are valid for a automatic retry.\n\n\n# scopes\n\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n * Default: [https://www.googleapis.com/auth/cloud-platform]\n\n> The GCP scopes to used\n\n\n# serviceAccount\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The GCP service account key\n\n\n# sourceTable\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The table to export.\n\n\n# useAvroLogicalTypes\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n> [Optional] Flag if format is set to "AVRO".\n\n[Optional] If destinationFormat is set to "AVRO", this flag indicates whether to enable extracting applicable column types (such as TIMESTAMP) to their corresponding AVRO logical types (timestamp-micros), instead of only using their raw types (avro-long).\nParameters:\nuseAvroLogicalTypes - useAvroLogicalTypes or null for none\n\n\n# Outputs\n\n\n# destinationUris\n\n * Type: array\n * SubType: string\n\n> The destination URI file\n\n\n# fileCounts\n\n * Type: array\n * SubType: integer\n\n> Number of extracted files\n\n\n# jobId\n\n * Type: string\n\n> The job id\n\n\n# sourceTable\n\n * Type: string\n\n> source Table\n\n\n# Definitions\n\n\n# Random-1\n\n# maxAttempt\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n * Minimum: &gt;= 1\n\n# maxDuration\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Format: duration\n\n# maxInterval\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n * Format: duration\n\n# minInterval\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n * Format: duration\n\n# warningOnRetry\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: false\n\n\n# Random-2\n\n\n# Exponential-2\n\n\n# Constant-1\n\n# interval\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n * Format: duration\n\n# maxAttempt\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n * Minimum: &gt;= 1\n\n# maxDuration\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Format: duration\n\n# warningOnRetry\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: false\n\n\n# Exponential-1\n\n# delayFactor\n\n * Type: number\n * Dynamic: ❓\n * Required: ❌\n\n# interval\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n * Format: duration\n\n# maxAttempt\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n * Minimum: &gt;= 1\n\n# maxDuration\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Format: duration\n\n# maxInterval\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n * Format: duration\n\n# warningOnRetry\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: false\n\n\n# Constant-2',normalizedContent:'extracttogcs\n\ntype: "io.kestra.plugin.gcp.bigquery.extracttogcs"\n\n\n> extract data from bigquery table to gcs (google cloud storage)\n\n\n# examples\n\n> extract a bigquery table to a gcs bucket\n\nid: "extract_to_gcs"\ntype: "io.kestra.plugin.gcp.bigquery.extracttogcs"\ndestinationuris: \n  - "gs://bucket_name/filename.csv"\nsourcetable: "my_project.my_dataset.my_table"\nformat: csv\nfielddelimiter: \';\'\nprintheader: true\n\n\n\n# properties\n\n\n# compression\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the compression value to use for exported files. if not set exported files are not compressed.\n\n\n# destinationuris\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> the list of fully-qualified google cloud storage uris (e.g. gs://bucket/path) where the extracted table should be written.\n\n\n# fielddelimiter\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the delimiter to use between fields in the exported data. by default "," is used.\n\n\n# format\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the exported file format. if not set table is exported in csv format.\n\n\n# jobtimeoutms\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n> [optional] job timeout in milliseconds. if this time limit is exceeded, bigquery may attempt to terminate the job.\n\n\n# labels\n\n * type: object\n * dynamic: ✔️\n * required: ❌\n\n> the labels associated with this job.\n\nthe labels associated with this job. you can use these to organize and group your jobs. label keys and values can be no longer than 63 characters, can only contain lowercase letters, numeric characters, underscores and dashes. international characters are allowed. label values are optional. label keys must start with a letter and each label in the list must have a different key.\nparameters:\nlabels - labels or null for none\n\n\n# location\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the geographic location where the dataset should reside\n\nthis property is experimental and might be subject to change or removed.\n\nsee dataset location\n\n\n# printheader\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n> whether to print out a header row in the results. by default an header is printed.\n\n\n# projectid\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the gcp project id\n\n\n# retryauto\n\n * type: ====\n * dynamic: ❓\n * required: ❌\n\n\n# retrymessages\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n * default: [due to concurrent update, retrying the job may solve the problem]\n\n> the message that are valid for a automatic retry.\n\nmessage is tested as a substring of the full message and case insensitive\n\n\n# retryreasons\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n * default: [ratelimitexceeded, jobbackenderror, internalerror, jobinternalerror]\n\n> the reason that are valid for a automatic retry.\n\n\n# scopes\n\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n * default: [https://www.googleapis.com/auth/cloud-platform]\n\n> the gcp scopes to used\n\n\n# serviceaccount\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the gcp service account key\n\n\n# sourcetable\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the table to export.\n\n\n# useavrologicaltypes\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n> [optional] flag if format is set to "avro".\n\n[optional] if destinationformat is set to "avro", this flag indicates whether to enable extracting applicable column types (such as timestamp) to their corresponding avro logical types (timestamp-micros), instead of only using their raw types (avro-long).\nparameters:\nuseavrologicaltypes - useavrologicaltypes or null for none\n\n\n# outputs\n\n\n# destinationuris\n\n * type: array\n * subtype: string\n\n> the destination uri file\n\n\n# filecounts\n\n * type: array\n * subtype: integer\n\n> number of extracted files\n\n\n# jobid\n\n * type: string\n\n> the job id\n\n\n# sourcetable\n\n * type: string\n\n> source table\n\n\n# definitions\n\n\n# random-1\n\n# maxattempt\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n * minimum: &gt;= 1\n\n# maxduration\n\n * type: string\n * dynamic: ❓\n * required: ❌\n * format: duration\n\n# maxinterval\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n * format: duration\n\n# mininterval\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n * format: duration\n\n# warningonretry\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: false\n\n\n# random-2\n\n\n# exponential-2\n\n\n# constant-1\n\n# interval\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n * format: duration\n\n# maxattempt\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n * minimum: &gt;= 1\n\n# maxduration\n\n * type: string\n * dynamic: ❓\n * required: ❌\n * format: duration\n\n# warningonretry\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: false\n\n\n# exponential-1\n\n# delayfactor\n\n * type: number\n * dynamic: ❓\n * required: ❌\n\n# interval\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n * format: duration\n\n# maxattempt\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n * minimum: &gt;= 1\n\n# maxduration\n\n * type: string\n * dynamic: ❓\n * required: ❌\n * format: duration\n\n# maxinterval\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n * format: duration\n\n# warningonretry\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: false\n\n\n# constant-2',charsets:{}},{title:"DeleteTable",frontmatter:{title:"DeleteTable",editLink:!1,description:"Delete a table or a partition",icon:"PHN2ZyBpZD0iUHJvZHVjdF9JY29ucyIgZGF0YS1uYW1lPSJQcm9kdWN0IEljb25zIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCAyNCAyNCI+PGRlZnM+PHN0eWxlPi5jbHMtMXtmaWxsOiNhZWNiZmE7fS5jbHMtMSwuY2xzLTIsLmNscy0ze2ZpbGwtcnVsZTpldmVub2RkO30uY2xzLTJ7ZmlsbDojNjY5ZGY2O30uY2xzLTN7ZmlsbDojNDI4NWY0O308L3N0eWxlPjwvZGVmcz48dGl0bGU+SWNvbl8yNHB4X0NvbG9yX0JpZ1F1ZXJ5PC90aXRsZT48ZyBpZD0iU2hhcGUiPjxwYXRoIGNsYXNzPSJjbHMtMSIgZD0iTTYuNzMsMTAuODN2Mi42M0E0LjkxLDQuOTEsMCwwLDAsOC40NCwxNS4yVjEwLjgzWiIvPjxwYXRoIGNsYXNzPSJjbHMtMiIgZD0iTTkuODksOC40MXY3LjUzQTcuNjIsNy42MiwwLDAsMCwxMSwxNiw4LDgsMCwwLDAsMTIsMTZWOC40MVoiLz48cGF0aCBjbGFzcz0iY2xzLTEiIGQ9Ik0xMy42NCwxMS44NnYzLjI5YTUsNSwwLDAsMCwxLjctMS44MlYxMS44NloiLz48cGF0aCBjbGFzcz0iY2xzLTMiIGQ9Ik0xNy43NCwxNi4zMmwtMS40MiwxLjQyYS40Mi40MiwwLDAsMCwwLC42bDMuNTQsMy41NGEuNDIuNDIsMCwwLDAsLjU5LDBsMS40My0xLjQzYS40Mi40MiwwLDAsMCwwLS41OWwtMy41NC0zLjU0YS40Mi40MiwwLDAsMC0uNiwwIi8+PHBhdGggY2xhc3M9ImNscy0yIiBkPSJNMTEsMmE5LDksMCwxLDAsOSw5LDksOSwwLDAsMC05LTltMCwxNS42OUE2LjY4LDYuNjgsMCwxLDEsMTcuNjksMTEsNi42OCw2LjY4LDAsMCwxLDExLDE3LjY5Ii8+PC9nPjwvc3ZnPg==",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"DeleteTable"},{property:"og:description",content:"Delete a table or a partition | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-gcp/tasks/bigquery/io.kestra.plugin.gcp.bigquery.DeleteTable.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"DeleteTable"},{name:"twitter:description",content:"Delete a table or a partition | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-gcp/tasks/bigquery/io.kestra.plugin.gcp.bigquery.DeleteTable.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-gcp/tasks/bigquery/io.kestra.plugin.gcp.bigquery.DeleteTable.html",relativePath:"plugins/plugin-gcp/tasks/bigquery/io.kestra.plugin.gcp.bigquery.DeleteTable.md",key:"v-54ad6563",path:"/plugins/plugin-gcp/tasks/bigquery/io.kestra.plugin.gcp.bigquery.DeleteTable.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:101},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:274},{level:3,title:"dataset",slug:"dataset",normalizedTitle:"dataset",charIndex:224},{level:3,title:"description",slug:"description",normalizedTitle:"description",charIndex:382},{level:3,title:"encryptionConfiguration",slug:"encryptionconfiguration",normalizedTitle:"encryptionconfiguration",charIndex:492},{level:3,title:"expirationDuration",slug:"expirationduration",normalizedTitle:"expirationduration",charIndex:615},{level:3,title:"friendlyName",slug:"friendlyname",normalizedTitle:"friendlyname",charIndex:874},{level:3,title:"labels",slug:"labels",normalizedTitle:"labels",charIndex:978},{level:3,title:"location",slug:"location",normalizedTitle:"location",charIndex:1084},{level:3,title:"projectId",slug:"projectid",normalizedTitle:"projectid",charIndex:202},{level:3,title:"requirePartitionFilter",slug:"requirepartitionfilter",normalizedTitle:"requirepartitionfilter",charIndex:1381},{level:3,title:"retryAuto",slug:"retryauto",normalizedTitle:"retryauto",charIndex:1578},{level:3,title:"retryMessages",slug:"retrymessages",normalizedTitle:"retrymessages",charIndex:1636},{level:3,title:"retryReasons",slug:"retryreasons",normalizedTitle:"retryreasons",charIndex:1926},{level:3,title:"scopes",slug:"scopes",normalizedTitle:"scopes",charIndex:2142},{level:3,title:"serviceAccount",slug:"serviceaccount",normalizedTitle:"serviceaccount",charIndex:2304},{level:3,title:"table",slug:"table",normalizedTitle:"table",charIndex:76},{level:3,title:"tableDefinition",slug:"tabledefinition",normalizedTitle:"tabledefinition",charIndex:2487},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:2586},{level:3,title:"datasetId",slug:"datasetid",normalizedTitle:"datasetid",charIndex:2598},{level:3,title:"projectId",slug:"projectid-2",normalizedTitle:"projectid",charIndex:202},{level:3,title:"table",slug:"table-2",normalizedTitle:"table",charIndex:76},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:2745},{level:3,title:"MaterializedViewDefinition",slug:"materializedviewdefinition",normalizedTitle:"materializedviewdefinition",charIndex:2761},{level:3,title:"TableDefinition",slug:"tabledefinition-2",normalizedTitle:"tabledefinition",charIndex:2513},{level:3,title:"TimePartitioning",slug:"timepartitioning",normalizedTitle:"timepartitioning",charIndex:3978},{level:3,title:"StandardTableDefinition",slug:"standardtabledefinition-2",normalizedTitle:"standardtabledefinition",charIndex:3761},{level:3,title:"Random-1",slug:"random-1",normalizedTitle:"random-1",charIndex:5425},{level:3,title:"Random-2",slug:"random-2",normalizedTitle:"random-2",charIndex:5847},{level:3,title:"Constant-1",slug:"constant-1",normalizedTitle:"constant-1",charIndex:5860},{level:3,title:"Field",slug:"field-2",normalizedTitle:"field",charIndex:6199},{level:3,title:"UserDefinedFunction",slug:"userdefinedfunction",normalizedTitle:"userdefinedfunction",charIndex:6816},{level:3,title:"Constant-2",slug:"constant-2",normalizedTitle:"constant-2",charIndex:7247},{level:3,title:"ExternalTableDefinition",slug:"externaltabledefinition-2",normalizedTitle:"externaltabledefinition",charIndex:3370},{level:3,title:"StreamingBuffer",slug:"streamingbuffer-2",normalizedTitle:"streamingbuffer",charIndex:5063},{level:3,title:"Range",slug:"range",normalizedTitle:"range",charIndex:4870},{level:3,title:"PolicyTags",slug:"policytags-2",normalizedTitle:"policytags",charIndex:6575},{level:3,title:"RangePartitioning",slug:"rangepartitioning-2",normalizedTitle:"rangepartitioning",charIndex:4870},{level:3,title:"Exponential-2",slug:"exponential-2",normalizedTitle:"exponential-2",charIndex:9547},{level:3,title:"Exponential-1",slug:"exponential-1",normalizedTitle:"exponential-1",charIndex:9565},{level:3,title:"Schema",slug:"schema-2",normalizedTitle:"schema",charIndex:3665},{level:3,title:"ViewDefinition",slug:"viewdefinition-2",normalizedTitle:"viewdefinition",charIndex:2773},{level:3,title:"EncryptionConfiguration",slug:"encryptionconfiguration-2",normalizedTitle:"encryptionconfiguration",charIndex:526}],headersStr:"Examples Properties dataset description encryptionConfiguration expirationDuration friendlyName labels location projectId requirePartitionFilter retryAuto retryMessages retryReasons scopes serviceAccount table tableDefinition Outputs datasetId projectId table Definitions MaterializedViewDefinition TableDefinition TimePartitioning StandardTableDefinition Random-1 Random-2 Constant-1 Field UserDefinedFunction Constant-2 ExternalTableDefinition StreamingBuffer Range PolicyTags RangePartitioning Exponential-2 Exponential-1 Schema ViewDefinition EncryptionConfiguration",content:"DeleteTable\n\ntype: \"io.kestra.plugin.gcp.bigquery.DeleteTable\"\n\n\n> Delete a table or a partition\n\n\n# Examples\n\n> Delete a partition\n\nid: \"delete_table\"\ntype: \"io.kestra.plugin.gcp.bigquery.DeleteTable\"\nprojectId: my-project\ndataset: my-dataset\ntable: my-table$20130908\n\n\n\n# Properties\n\n\n# dataset\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The dataset's user-defined id\n\n\n# description\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The user-friendly description for the table\n\n\n# encryptionConfiguration\n\n * Type: EncryptionConfiguration\n * Dynamic: ❓\n * Required: ❌\n\n> The encryption configuration\n\n\n# expirationDuration\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Format: duration\n\n> Sets the duration since now when this table expires.\n\nIf not present, the table will persist indefinitely. Expired tables will be deleted and their storage reclaimed.\n\n\n# friendlyName\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The user-friendly name for the table\n\n\n# labels\n\n * Type: object\n * Dynamic: ✔️\n * Required: ❌\n\n> Return a map for labels applied to the table\n\n\n# location\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The geographic location where the dataset should reside\n\nThis property is experimental and might be subject to change or removed.\n\nSee Dataset Location\n\n\n# projectId\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The GCP project id\n\n\n# requirePartitionFilter\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n> Return true if a partition filter (that can be used for partition elimination) is required for queries over this table.\n\n\n# retryAuto\n\n * Type: ====\n * Dynamic: ❓\n * Required: ❌\n\n\n# retryMessages\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: [due to concurrent update, Retrying the job may solve the problem]\n\n> The message that are valid for a automatic retry.\n\nMessage is tested as a substring of the full message and case insensitive\n\n\n# retryReasons\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: [rateLimitExceeded, jobBackendError, internalError, jobInternalError]\n\n> The reason that are valid for a automatic retry.\n\n\n# scopes\n\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n * Default: [https://www.googleapis.com/auth/cloud-platform]\n\n> The GCP scopes to used\n\n\n# serviceAccount\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The GCP service account key\n\n\n# table\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The table user-defined id\n\n\n# tableDefinition\n\n * Type: TableDefinition\n * Dynamic: ❓\n * Required: ❌\n\n> The table definition\n\n\n# Outputs\n\n\n# datasetId\n\n * Type: string\n\n> The dataset's id\n\n\n# projectId\n\n * Type: string\n\n> The project's id\n\n\n# table\n\n * Type: string\n\n> The table name\n\n\n# Definitions\n\n\n# MaterializedViewDefinition\n\n# enableRefresh\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n\n> is enable automatic refresh of the materialized view when the base table is updated\n\n# lastRefreshDate\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Date when this materialized view was last modified\n\n# query\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> the query whose result is persisted\n\n# refreshInterval\n\n * Type: string\n * Dynamic: ❌\n * Required: ❌\n * Format: duration\n\n> the maximum frequency at which this materialized view will be refreshed\n\n\n# TableDefinition\n\n# externalTableDefinition\n\n * Type: ExternalTableDefinition\n * Dynamic: ❓\n * Required: ❌\n\n> the external table definition if the type is EXTERNAL\n\n# materializedViewDefinition\n\n * Type: MaterializedViewDefinition\n * Dynamic: ❓\n * Required: ❌\n\n> the materialized view definition if the type is MATERIALIZED_VIEW\n\n# schema\n\n * Type: Schema\n * Dynamic: ❓\n * Required: ❌\n\n> the table's schema.\n\n# standardTableDefinition\n\n * Type: StandardTableDefinition\n * Dynamic: ❓\n * Required: ❌\n\n> the table definition if the type is TABLE\n\n# viewDefinition\n\n * Type: ViewDefinition\n * Dynamic: ❓\n * Required: ❌\n\n> the view definition if the type is VIEW\n\n\n# TimePartitioning\n\n# expiration\n\n * Type: string\n * Dynamic: ❌\n * Required: ❌\n * Format: duration\n\n> the number of milliseconds for which to keep the storage for a partition. When expired, the storage for the partition is reclaimed. If null, the partion does not expire.\n\n# field\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> if not set, the table is partitioned by pseudo column '_PARTITIONTIME'; if set, the table is partitioned by this field.\n\n# requirePartitionFilter\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n\n> If set to true, queries over this table require a partition filter (that can be used for partition elimination) to be specified.\n\n\n# StandardTableDefinition\n\n# clustering\n\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n\n> Returns the clustering configuration for this table. If {@code null}, the table is not clustered.\n\n# rangePartitioning\n\n * Type: RangePartitioning\n * Dynamic: ❓\n * Required: ❌\n\n> Returns the range partitioning configuration for this table. If {@code null}, the table is not range-partitioned.\n\n# streamingBuffer\n\n * Type: StreamingBuffer\n * Dynamic: ❓\n * Required: ❌\n\n> Returns information on the table's streaming buffer if any exists. Returns {@code null} if no streaming buffer exists.\n\n# timePartitioning\n\n * Type: TimePartitioning\n * Dynamic: ❓\n * Required: ❌\n\n> Returns the time partitioning configuration for this table. If {@code null}, the table is not time-partitioned.\n\n\n# Random-1\n\n# maxAttempt\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n * Minimum: &gt;= 1\n\n# maxDuration\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Format: duration\n\n# maxInterval\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n * Format: duration\n\n# minInterval\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n * Format: duration\n\n# warningOnRetry\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: false\n\n\n# Random-2\n\n\n# Constant-1\n\n# interval\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n * Format: duration\n\n# maxAttempt\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n * Minimum: &gt;= 1\n\n# maxDuration\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Format: duration\n\n# warningOnRetry\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: false\n\n\n# Field\n\n# description\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> the field description.\n\n# mode\n\n * Type: string\n\n * Dynamic: ✔️\n\n * Required: ❌\n\n * Possible Values:\n   \n   * NULLABLE\n   * REQUIRED\n   * REPEATED\n\n> the field mode.\n\nBy default Field.Mode.NULLABLE is used.\n\n# name\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> the field name.\n\n# policyTags\n\n * Type: PolicyTags\n * Dynamic: ✔️\n * Required: ❌\n\n> the policy tags for the field.\n\n# subFields\n\n * Type: array\n * SubType: Field\n * Dynamic: ✔️\n * Required: ❌\n\n> the list of sub-fields if type is a LegacySQLType.RECORD. Returns null otherwise.\n\n\n# UserDefinedFunction\n\n# Type of UserDefinedFunction\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\nIf type is UserDefinedFunction.Type.INLINE this method returns a code blob.\nIf type is UserDefinedFunction.Type.FROM_URI the method returns a Google Cloud Storage URI (e.g. gs://bucket/path)\n\n# the type of user defined function.\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ❌\n\n * Possible Values:\n   \n   * INLINE\n   * FROM_URI\n\n\n# Constant-2\n\n\n# ExternalTableDefinition\n\n# autodetect\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n> whether automatic detection of schema and format options should be performed.\n\n# compression\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> the compression type of the data source.\n\n# formatType\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Possible Values:\n   \n   * CSV\n   * JSON\n   * BIGTABLE\n   * DATASTORE_BACKUP\n   * AVRO\n   * GOOGLE_SHEETS\n   * PARQUET\n   * ORC\n\n> the source format, and possibly some parsing options, of the external data.\n\n# ignoreUnknownValues\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n> whether BigQuery should allow extra values that are not represented in the table schema.\n\nIf true, the extra values are ignored. If false, records with extra columns are treated as bad records, and if there are too many bad records, an invalid error is returned in the job result.\n\n# maxBadRecords\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n> the maximum number of bad records that BigQuery can ignore when reading data.\n\nIf the number of bad records exceeds this value, an invalid error is returned in the job result.\n\n# sourceUris\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> the fully-qualified URIs that point to your data in Google Cloud Storage.\n\nEach URI can\n\n * contain one '*' wildcard character that must come after the bucket's name. Size limits related\n * to load jobs apply to external data sources, plus an additional limit of 10 GB maximum size\n * across all URIs.\n\n\n# StreamingBuffer\n\n# estimatedBytes\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n# estimatedRows\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n# oldestEntryTime\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n\n# Range\n\n# the end of range partitioning.\n\n * Type: integer\n * Dynamic: ❌\n * Required: ❌\n\n# the start of range partitioning.\n\n * Type: integer\n * Dynamic: ❌\n * Required: ❌\n\n# the width of each interval.\n\n * Type: integer\n * Dynamic: ❌\n * Required: ❌\n\n\n# PolicyTags\n\n# the policy tags names.\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n\n# RangePartitioning\n\n# the range of range partitioning.\n\n * Type: Range\n * Dynamic: ❓\n * Required: ❌\n\n# the range partitioning field.\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n\n# Exponential-2\n\n\n# Exponential-1\n\n# delayFactor\n\n * Type: number\n * Dynamic: ❓\n * Required: ❌\n\n# interval\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n * Format: duration\n\n# maxAttempt\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n * Minimum: &gt;= 1\n\n# maxDuration\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Format: duration\n\n# maxInterval\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n * Format: duration\n\n# warningOnRetry\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: false\n\n\n# Schema\n\n# the fields associated to this schema.\n\n * Type: array\n * SubType: Field\n * Dynamic: ❓\n * Required: ❌\n\n\n# ViewDefinition\n\n# query\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The query whose result is persisted\n\n# viewUserDefinedFunctions\n\n * Type: array\n * SubType: UserDefinedFunction\n * Dynamic: ❓\n * Required: ❌\n\n> User defined functions that can be used by query. Returns null if not set.\n\n\n# EncryptionConfiguration\n\n# the Kms key name\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌",normalizedContent:"deletetable\n\ntype: \"io.kestra.plugin.gcp.bigquery.deletetable\"\n\n\n> delete a table or a partition\n\n\n# examples\n\n> delete a partition\n\nid: \"delete_table\"\ntype: \"io.kestra.plugin.gcp.bigquery.deletetable\"\nprojectid: my-project\ndataset: my-dataset\ntable: my-table$20130908\n\n\n\n# properties\n\n\n# dataset\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the dataset's user-defined id\n\n\n# description\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the user-friendly description for the table\n\n\n# encryptionconfiguration\n\n * type: encryptionconfiguration\n * dynamic: ❓\n * required: ❌\n\n> the encryption configuration\n\n\n# expirationduration\n\n * type: string\n * dynamic: ❓\n * required: ❌\n * format: duration\n\n> sets the duration since now when this table expires.\n\nif not present, the table will persist indefinitely. expired tables will be deleted and their storage reclaimed.\n\n\n# friendlyname\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the user-friendly name for the table\n\n\n# labels\n\n * type: object\n * dynamic: ✔️\n * required: ❌\n\n> return a map for labels applied to the table\n\n\n# location\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the geographic location where the dataset should reside\n\nthis property is experimental and might be subject to change or removed.\n\nsee dataset location\n\n\n# projectid\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the gcp project id\n\n\n# requirepartitionfilter\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n> return true if a partition filter (that can be used for partition elimination) is required for queries over this table.\n\n\n# retryauto\n\n * type: ====\n * dynamic: ❓\n * required: ❌\n\n\n# retrymessages\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n * default: [due to concurrent update, retrying the job may solve the problem]\n\n> the message that are valid for a automatic retry.\n\nmessage is tested as a substring of the full message and case insensitive\n\n\n# retryreasons\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n * default: [ratelimitexceeded, jobbackenderror, internalerror, jobinternalerror]\n\n> the reason that are valid for a automatic retry.\n\n\n# scopes\n\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n * default: [https://www.googleapis.com/auth/cloud-platform]\n\n> the gcp scopes to used\n\n\n# serviceaccount\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the gcp service account key\n\n\n# table\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the table user-defined id\n\n\n# tabledefinition\n\n * type: tabledefinition\n * dynamic: ❓\n * required: ❌\n\n> the table definition\n\n\n# outputs\n\n\n# datasetid\n\n * type: string\n\n> the dataset's id\n\n\n# projectid\n\n * type: string\n\n> the project's id\n\n\n# table\n\n * type: string\n\n> the table name\n\n\n# definitions\n\n\n# materializedviewdefinition\n\n# enablerefresh\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n\n> is enable automatic refresh of the materialized view when the base table is updated\n\n# lastrefreshdate\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> date when this materialized view was last modified\n\n# query\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the query whose result is persisted\n\n# refreshinterval\n\n * type: string\n * dynamic: ❌\n * required: ❌\n * format: duration\n\n> the maximum frequency at which this materialized view will be refreshed\n\n\n# tabledefinition\n\n# externaltabledefinition\n\n * type: externaltabledefinition\n * dynamic: ❓\n * required: ❌\n\n> the external table definition if the type is external\n\n# materializedviewdefinition\n\n * type: materializedviewdefinition\n * dynamic: ❓\n * required: ❌\n\n> the materialized view definition if the type is materialized_view\n\n# schema\n\n * type: schema\n * dynamic: ❓\n * required: ❌\n\n> the table's schema.\n\n# standardtabledefinition\n\n * type: standardtabledefinition\n * dynamic: ❓\n * required: ❌\n\n> the table definition if the type is table\n\n# viewdefinition\n\n * type: viewdefinition\n * dynamic: ❓\n * required: ❌\n\n> the view definition if the type is view\n\n\n# timepartitioning\n\n# expiration\n\n * type: string\n * dynamic: ❌\n * required: ❌\n * format: duration\n\n> the number of milliseconds for which to keep the storage for a partition. when expired, the storage for the partition is reclaimed. if null, the partion does not expire.\n\n# field\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> if not set, the table is partitioned by pseudo column '_partitiontime'; if set, the table is partitioned by this field.\n\n# requirepartitionfilter\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n\n> if set to true, queries over this table require a partition filter (that can be used for partition elimination) to be specified.\n\n\n# standardtabledefinition\n\n# clustering\n\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n\n> returns the clustering configuration for this table. if {@code null}, the table is not clustered.\n\n# rangepartitioning\n\n * type: rangepartitioning\n * dynamic: ❓\n * required: ❌\n\n> returns the range partitioning configuration for this table. if {@code null}, the table is not range-partitioned.\n\n# streamingbuffer\n\n * type: streamingbuffer\n * dynamic: ❓\n * required: ❌\n\n> returns information on the table's streaming buffer if any exists. returns {@code null} if no streaming buffer exists.\n\n# timepartitioning\n\n * type: timepartitioning\n * dynamic: ❓\n * required: ❌\n\n> returns the time partitioning configuration for this table. if {@code null}, the table is not time-partitioned.\n\n\n# random-1\n\n# maxattempt\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n * minimum: &gt;= 1\n\n# maxduration\n\n * type: string\n * dynamic: ❓\n * required: ❌\n * format: duration\n\n# maxinterval\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n * format: duration\n\n# mininterval\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n * format: duration\n\n# warningonretry\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: false\n\n\n# random-2\n\n\n# constant-1\n\n# interval\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n * format: duration\n\n# maxattempt\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n * minimum: &gt;= 1\n\n# maxduration\n\n * type: string\n * dynamic: ❓\n * required: ❌\n * format: duration\n\n# warningonretry\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: false\n\n\n# field\n\n# description\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the field description.\n\n# mode\n\n * type: string\n\n * dynamic: ✔️\n\n * required: ❌\n\n * possible values:\n   \n   * nullable\n   * required\n   * repeated\n\n> the field mode.\n\nby default field.mode.nullable is used.\n\n# name\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the field name.\n\n# policytags\n\n * type: policytags\n * dynamic: ✔️\n * required: ❌\n\n> the policy tags for the field.\n\n# subfields\n\n * type: array\n * subtype: field\n * dynamic: ✔️\n * required: ❌\n\n> the list of sub-fields if type is a legacysqltype.record. returns null otherwise.\n\n\n# userdefinedfunction\n\n# type of userdefinedfunction\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\nif type is userdefinedfunction.type.inline this method returns a code blob.\nif type is userdefinedfunction.type.from_uri the method returns a google cloud storage uri (e.g. gs://bucket/path)\n\n# the type of user defined function.\n\n * type: string\n\n * dynamic: ❌\n\n * required: ❌\n\n * possible values:\n   \n   * inline\n   * from_uri\n\n\n# constant-2\n\n\n# externaltabledefinition\n\n# autodetect\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n> whether automatic detection of schema and format options should be performed.\n\n# compression\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the compression type of the data source.\n\n# formattype\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * possible values:\n   \n   * csv\n   * json\n   * bigtable\n   * datastore_backup\n   * avro\n   * google_sheets\n   * parquet\n   * orc\n\n> the source format, and possibly some parsing options, of the external data.\n\n# ignoreunknownvalues\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n> whether bigquery should allow extra values that are not represented in the table schema.\n\nif true, the extra values are ignored. if false, records with extra columns are treated as bad records, and if there are too many bad records, an invalid error is returned in the job result.\n\n# maxbadrecords\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n> the maximum number of bad records that bigquery can ignore when reading data.\n\nif the number of bad records exceeds this value, an invalid error is returned in the job result.\n\n# sourceuris\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> the fully-qualified uris that point to your data in google cloud storage.\n\neach uri can\n\n * contain one '*' wildcard character that must come after the bucket's name. size limits related\n * to load jobs apply to external data sources, plus an additional limit of 10 gb maximum size\n * across all uris.\n\n\n# streamingbuffer\n\n# estimatedbytes\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n# estimatedrows\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n# oldestentrytime\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n\n# range\n\n# the end of range partitioning.\n\n * type: integer\n * dynamic: ❌\n * required: ❌\n\n# the start of range partitioning.\n\n * type: integer\n * dynamic: ❌\n * required: ❌\n\n# the width of each interval.\n\n * type: integer\n * dynamic: ❌\n * required: ❌\n\n\n# policytags\n\n# the policy tags names.\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n\n# rangepartitioning\n\n# the range of range partitioning.\n\n * type: range\n * dynamic: ❓\n * required: ❌\n\n# the range partitioning field.\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n\n# exponential-2\n\n\n# exponential-1\n\n# delayfactor\n\n * type: number\n * dynamic: ❓\n * required: ❌\n\n# interval\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n * format: duration\n\n# maxattempt\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n * minimum: &gt;= 1\n\n# maxduration\n\n * type: string\n * dynamic: ❓\n * required: ❌\n * format: duration\n\n# maxinterval\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n * format: duration\n\n# warningonretry\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: false\n\n\n# schema\n\n# the fields associated to this schema.\n\n * type: array\n * subtype: field\n * dynamic: ❓\n * required: ❌\n\n\n# viewdefinition\n\n# query\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the query whose result is persisted\n\n# viewuserdefinedfunctions\n\n * type: array\n * subtype: userdefinedfunction\n * dynamic: ❓\n * required: ❌\n\n> user defined functions that can be used by query. returns null if not set.\n\n\n# encryptionconfiguration\n\n# the kms key name\n\n * type: string\n * dynamic: ✔️\n * required: ❌",charsets:{}},{title:"Load",frontmatter:{title:"Load",editLink:!1,description:"Load data from local file to BigQuery",icon:"PHN2ZyBpZD0iUHJvZHVjdF9JY29ucyIgZGF0YS1uYW1lPSJQcm9kdWN0IEljb25zIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCAyNCAyNCI+PGRlZnM+PHN0eWxlPi5jbHMtMXtmaWxsOiNhZWNiZmE7fS5jbHMtMSwuY2xzLTIsLmNscy0ze2ZpbGwtcnVsZTpldmVub2RkO30uY2xzLTJ7ZmlsbDojNjY5ZGY2O30uY2xzLTN7ZmlsbDojNDI4NWY0O308L3N0eWxlPjwvZGVmcz48dGl0bGU+SWNvbl8yNHB4X0NvbG9yX0JpZ1F1ZXJ5PC90aXRsZT48ZyBpZD0iU2hhcGUiPjxwYXRoIGNsYXNzPSJjbHMtMSIgZD0iTTYuNzMsMTAuODN2Mi42M0E0LjkxLDQuOTEsMCwwLDAsOC40NCwxNS4yVjEwLjgzWiIvPjxwYXRoIGNsYXNzPSJjbHMtMiIgZD0iTTkuODksOC40MXY3LjUzQTcuNjIsNy42MiwwLDAsMCwxMSwxNiw4LDgsMCwwLDAsMTIsMTZWOC40MVoiLz48cGF0aCBjbGFzcz0iY2xzLTEiIGQ9Ik0xMy42NCwxMS44NnYzLjI5YTUsNSwwLDAsMCwxLjctMS44MlYxMS44NloiLz48cGF0aCBjbGFzcz0iY2xzLTMiIGQ9Ik0xNy43NCwxNi4zMmwtMS40MiwxLjQyYS40Mi40MiwwLDAsMCwwLC42bDMuNTQsMy41NGEuNDIuNDIsMCwwLDAsLjU5LDBsMS40My0xLjQzYS40Mi40MiwwLDAsMCwwLS41OWwtMy41NC0zLjU0YS40Mi40MiwwLDAsMC0uNiwwIi8+PHBhdGggY2xhc3M9ImNscy0yIiBkPSJNMTEsMmE5LDksMCwxLDAsOSw5LDksOSwwLDAsMC05LTltMCwxNS42OUE2LjY4LDYuNjgsMCwxLDEsMTcuNjksMTEsNi42OCw2LjY4LDAsMCwxLDExLDE3LjY5Ii8+PC9nPjwvc3ZnPg==",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Load"},{property:"og:description",content:"Load data from local file to BigQuery | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-gcp/tasks/bigquery/io.kestra.plugin.gcp.bigquery.Load.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Load"},{name:"twitter:description",content:"Load data from local file to BigQuery | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-gcp/tasks/bigquery/io.kestra.plugin.gcp.bigquery.Load.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-gcp/tasks/bigquery/io.kestra.plugin.gcp.bigquery.Load.html",relativePath:"plugins/plugin-gcp/tasks/bigquery/io.kestra.plugin.gcp.bigquery.Load.md",key:"v-7be064a9",path:"/plugins/plugin-gcp/tasks/bigquery/io.kestra.plugin.gcp.bigquery.Load.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:95},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:326},{level:3,title:"autodetect",slug:"autodetect",normalizedTitle:"autodetect",charIndex:341},{level:3,title:"avroOptions",slug:"avrooptions",normalizedTitle:"avrooptions",charIndex:492},{level:3,title:"clusteringFields",slug:"clusteringfields",normalizedTitle:"clusteringfields",charIndex:583},{level:3,title:"createDisposition",slug:"createdisposition",normalizedTitle:"createdisposition",charIndex:727},{level:3,title:"csvOptions",slug:"csvoptions",normalizedTitle:"csvoptions",charIndex:287},{level:3,title:"destinationTable",slug:"destinationtable",normalizedTitle:"destinationtable",charIndex:224},{level:3,title:"format",slug:"format",normalizedTitle:"format",charIndex:275},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:63},{level:3,title:"ignoreUnknownValues",slug:"ignoreunknownvalues",normalizedTitle:"ignoreunknownvalues",charIndex:1469},{level:3,title:"location",slug:"location",normalizedTitle:"location",charIndex:1866},{level:3,title:"maxBadRecords",slug:"maxbadrecords",normalizedTitle:"maxbadrecords",charIndex:2081},{level:3,title:"projectId",slug:"projectid",normalizedTitle:"projectid",charIndex:2364},{level:3,title:"retryAuto",slug:"retryauto",normalizedTitle:"retryauto",charIndex:2446},{level:3,title:"retryMessages",slug:"retrymessages",normalizedTitle:"retrymessages",charIndex:2504},{level:3,title:"retryReasons",slug:"retryreasons",normalizedTitle:"retryreasons",charIndex:2794},{level:3,title:"schema",slug:"schema",normalizedTitle:"schema",charIndex:456},{level:3,title:"schemaUpdateOptions",slug:"schemaupdateoptions",normalizedTitle:"schemaupdateoptions",charIndex:3405},{level:3,title:"scopes",slug:"scopes",normalizedTitle:"scopes",charIndex:3898},{level:3,title:"serviceAccount",slug:"serviceaccount",normalizedTitle:"serviceaccount",charIndex:4060},{level:3,title:"timePartitioningField",slug:"timepartitioningfield",normalizedTitle:"timepartitioningfield",charIndex:4156},{level:3,title:"writeDisposition",slug:"writedisposition",normalizedTitle:"writedisposition",charIndex:3664},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:4515},{level:3,title:"destinationTable",slug:"destinationtable-2",normalizedTitle:"destinationtable",charIndex:224},{level:3,title:"jobId",slug:"jobid",normalizedTitle:"jobid",charIndex:4586},{level:3,title:"rows",slug:"rows",normalizedTitle:"rows",charIndex:4627},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:4675},{level:3,title:"CsvOptions",slug:"csvoptions-2",normalizedTitle:"csvoptions",charIndex:930},{level:3,title:"Random-1",slug:"random-1",normalizedTitle:"random-1",charIndex:6883},{level:3,title:"Random-2",slug:"random-2",normalizedTitle:"random-2",charIndex:7305},{level:3,title:"Exponential-2",slug:"exponential-2",normalizedTitle:"exponential-2",charIndex:7318},{level:3,title:"AvroOptions",slug:"avrooptions-2",normalizedTitle:"avrooptions",charIndex:514},{level:3,title:"Constant-1",slug:"constant-1",normalizedTitle:"constant-1",charIndex:7621},{level:3,title:"Exponential-1",slug:"exponential-1",normalizedTitle:"exponential-1",charIndex:7960},{level:3,title:"Constant-2",slug:"constant-2",normalizedTitle:"constant-2",charIndex:8445}],headersStr:"Examples Properties autodetect avroOptions clusteringFields createDisposition csvOptions destinationTable format from ignoreUnknownValues location maxBadRecords projectId retryAuto retryMessages retryReasons schema schemaUpdateOptions scopes serviceAccount timePartitioningField writeDisposition Outputs destinationTable jobId rows Definitions CsvOptions Random-1 Random-2 Exponential-2 AvroOptions Constant-1 Exponential-1 Constant-2",content:'Load\n\ntype: "io.kestra.plugin.gcp.bigquery.Load"\n\n\n> Load data from local file to BigQuery\n\n\n# Examples\n\n> Load an csv file from an input file\n\nid: "load"\ntype: "io.kestra.plugin.gcp.bigquery.Load"\nfrom: "{{ inputs.file }}"\ndestinationTable: "my_project.my_dataset.my_table"\nformat: CSV\ncsvOptions:\n  fieldDelimiter: ";"\n\n\n\n# Properties\n\n\n# autodetect\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n\n> [Experimental] Automatic inference of the options and schema for CSV and JSON sources\n\n\n# avroOptions\n\n * Type: AvroOptions\n * Dynamic: ❓\n * Required: ❌\n\n> Avro parsing options\n\n\n# clusteringFields\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The clustering specification for the destination table\n\n\n# createDisposition\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ❌\n\n * Possible Values:\n   \n   * CREATE_IF_NEEDED\n   * CREATE_NEVER\n\n> Whether the job is allowed to create tables\n\n\n# csvOptions\n\n * Type: CsvOptions\n * Dynamic: ❓\n * Required: ❌\n\n> Csv parsing options\n\n\n# destinationTable\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The table where to put query results\n\nIf not provided a new table is created.\n\n\n# format\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ❌\n\n * Possible Values:\n   \n   * CSV\n   * JSON\n   * AVRO\n   * PARQUET\n   * ORC\n\n> The source format, and possibly some parsing options, of the external data\n\n\n# from\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The fully-qualified URIs that point to source data\n\n\n# ignoreUnknownValues\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n\n> Whether BigQuery should allow extra values that are not represented in the table schema\n\nIf true, the extra values are ignored. If false, records with extra columns are treated as bad records, and if there are too many bad records, an invalid error is returned in the job result. By default unknown values are not allowed.\n\n\n# location\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The geographic location where the dataset should reside\n\nThis property is experimental and might be subject to change or removed.\n\nSee Dataset Location\n\n\n# maxBadRecords\n\n * Type: integer\n * Dynamic: ❌\n * Required: ❌\n\n> The maximum number of bad records that BigQuery can ignore when running the job\n\nIf the number of bad records exceeds this value, an invalid error is returned in the job result. By default no bad record is ignored.\n\n\n# projectId\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The GCP project id\n\n\n# retryAuto\n\n * Type: ====\n * Dynamic: ❓\n * Required: ❌\n\n\n# retryMessages\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: [due to concurrent update, Retrying the job may solve the problem]\n\n> The message that are valid for a automatic retry.\n\nMessage is tested as a substring of the full message and case insensitive\n\n\n# retryReasons\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: [rateLimitExceeded, jobBackendError, internalError, jobInternalError]\n\n> The reason that are valid for a automatic retry.\n\n\n# schema\n\n * Type: object\n * Dynamic: ❌\n * Required: ❌\n\n> The schema for the destination table\n\nThe schema can be omitted if the destination table already exists, or if you\'re loading data from a Google Cloud Datastore backup (i.e. DATASTORE_BACKUP format option).\n\nschema:\n  fields:\n    - name: colA\n      type: STRING\n    - name: colB\n      type: NUMERIC\n\n\nSee type from StandardSQLTypeName\n\n\n# schemaUpdateOptions\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> [Experimental] Options allowing the schema of the destination table to be updated as a side effect of the query job\n\nSchema update options are supported in two cases: when writeDisposition is WRITE_APPEND; when writeDisposition is WRITE_TRUNCATE and the destination table is a partition of a table, specified by partition decorators. For normal tables, WRITE_TRUNCATE will always overwrite the schema.\n\n\n# scopes\n\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n * Default: [https://www.googleapis.com/auth/cloud-platform]\n\n> The GCP scopes to used\n\n\n# serviceAccount\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The GCP service account key\n\n\n# timePartitioningField\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The time partitioning specification for the destination table\n\n\n# writeDisposition\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ❌\n\n * Possible Values:\n   \n   * WRITE_TRUNCATE\n   * WRITE_APPEND\n   * WRITE_EMPTY\n\n> The action that should occur if the destination table already exists\n\n\n# Outputs\n\n\n# destinationTable\n\n * Type: string\n\n> Destination table\n\n\n# jobId\n\n * Type: string\n\n> The job id\n\n\n# rows\n\n * Type: integer\n\n> Output rows count\n\n\n# Definitions\n\n\n# CsvOptions\n\n# allowJaggedRows\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n\n> Whether BigQuery should accept rows that are missing trailing optional columns\n\nIf true, BigQuery treats missing trailing columns as null values. If {@code false}, records with missing trailing columns are treated as bad records, and if there are too many bad records, an invalid error is returned in the job result. By default, rows with missing trailing columns are considered bad records.\n\n# allowQuotedNewLines\n\n * Type: boolean\n * Dynamic: ✔️\n * Required: ❌\n\n> Whether BigQuery should allow quoted data sections that contain newline characters in a CSV file\n\nBy default quoted newline are not allowed.\n\n# encoding\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The character encoding of the data\n\nThe supported values are UTF-8 or ISO-8859-1. The default value is UTF-8. BigQuery decodes the data after the raw, binary data has been split using the values set in {@link #setQuote(String)} and {@link #setFieldDelimiter(String)}.\n\n# fieldDelimiter\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The separator for fields in a CSV file\n\nBigQuery converts the string to ISO-8859-1 encoding, and then uses the first byte of the encoded string to split the data in its raw, binary state. BigQuery also supports the escape sequence "\\t" to specify a tab separator. The default value is a comma (\',\').\n\n# quote\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The value that is used to quote data sections in a CSV file\n\nBigQuery converts the string to ISO-8859-1 encoding, and then uses the first byte of the encoded string to split the data in its raw, binary state. The default value is a double-quote (\'"\'). If your data does not contain quoted sections, set the property value to an empty string. If your data contains quoted newline characters, you must also set {@link #setAllowQuotedNewLines(boolean)} property to {@code true}.\n\n# skipLeadingRows\n\n * Type: integer\n * Dynamic: ❌\n * Required: ❌\n\n> The number of rows at the top of a CSV file that BigQuery will skip when reading the data\n\nThe default value is 0. This property is useful if you have header rows in the file that should be skipped.\n\n\n# Random-1\n\n# maxAttempt\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n * Minimum: &gt;= 1\n\n# maxDuration\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Format: duration\n\n# maxInterval\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n * Format: duration\n\n# minInterval\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n * Format: duration\n\n# warningOnRetry\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: false\n\n\n# Random-2\n\n\n# Exponential-2\n\n\n# AvroOptions\n\n# useAvroLogicalTypes\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n\n> If Format option is set to AVRO, you can interpret logical types into their corresponding types (such as TIMESTAMP) instead of only using their raw types (such as INTEGER)\n\nThe value may be null.\n\n\n# Constant-1\n\n# interval\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n * Format: duration\n\n# maxAttempt\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n * Minimum: &gt;= 1\n\n# maxDuration\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Format: duration\n\n# warningOnRetry\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: false\n\n\n# Exponential-1\n\n# delayFactor\n\n * Type: number\n * Dynamic: ❓\n * Required: ❌\n\n# interval\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n * Format: duration\n\n# maxAttempt\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n * Minimum: &gt;= 1\n\n# maxDuration\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Format: duration\n\n# maxInterval\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n * Format: duration\n\n# warningOnRetry\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: false\n\n\n# Constant-2',normalizedContent:'load\n\ntype: "io.kestra.plugin.gcp.bigquery.load"\n\n\n> load data from local file to bigquery\n\n\n# examples\n\n> load an csv file from an input file\n\nid: "load"\ntype: "io.kestra.plugin.gcp.bigquery.load"\nfrom: "{{ inputs.file }}"\ndestinationtable: "my_project.my_dataset.my_table"\nformat: csv\ncsvoptions:\n  fielddelimiter: ";"\n\n\n\n# properties\n\n\n# autodetect\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n\n> [experimental] automatic inference of the options and schema for csv and json sources\n\n\n# avrooptions\n\n * type: avrooptions\n * dynamic: ❓\n * required: ❌\n\n> avro parsing options\n\n\n# clusteringfields\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> the clustering specification for the destination table\n\n\n# createdisposition\n\n * type: string\n\n * dynamic: ❌\n\n * required: ❌\n\n * possible values:\n   \n   * create_if_needed\n   * create_never\n\n> whether the job is allowed to create tables\n\n\n# csvoptions\n\n * type: csvoptions\n * dynamic: ❓\n * required: ❌\n\n> csv parsing options\n\n\n# destinationtable\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the table where to put query results\n\nif not provided a new table is created.\n\n\n# format\n\n * type: string\n\n * dynamic: ❌\n\n * required: ❌\n\n * possible values:\n   \n   * csv\n   * json\n   * avro\n   * parquet\n   * orc\n\n> the source format, and possibly some parsing options, of the external data\n\n\n# from\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the fully-qualified uris that point to source data\n\n\n# ignoreunknownvalues\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n\n> whether bigquery should allow extra values that are not represented in the table schema\n\nif true, the extra values are ignored. if false, records with extra columns are treated as bad records, and if there are too many bad records, an invalid error is returned in the job result. by default unknown values are not allowed.\n\n\n# location\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the geographic location where the dataset should reside\n\nthis property is experimental and might be subject to change or removed.\n\nsee dataset location\n\n\n# maxbadrecords\n\n * type: integer\n * dynamic: ❌\n * required: ❌\n\n> the maximum number of bad records that bigquery can ignore when running the job\n\nif the number of bad records exceeds this value, an invalid error is returned in the job result. by default no bad record is ignored.\n\n\n# projectid\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the gcp project id\n\n\n# retryauto\n\n * type: ====\n * dynamic: ❓\n * required: ❌\n\n\n# retrymessages\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n * default: [due to concurrent update, retrying the job may solve the problem]\n\n> the message that are valid for a automatic retry.\n\nmessage is tested as a substring of the full message and case insensitive\n\n\n# retryreasons\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n * default: [ratelimitexceeded, jobbackenderror, internalerror, jobinternalerror]\n\n> the reason that are valid for a automatic retry.\n\n\n# schema\n\n * type: object\n * dynamic: ❌\n * required: ❌\n\n> the schema for the destination table\n\nthe schema can be omitted if the destination table already exists, or if you\'re loading data from a google cloud datastore backup (i.e. datastore_backup format option).\n\nschema:\n  fields:\n    - name: cola\n      type: string\n    - name: colb\n      type: numeric\n\n\nsee type from standardsqltypename\n\n\n# schemaupdateoptions\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> [experimental] options allowing the schema of the destination table to be updated as a side effect of the query job\n\nschema update options are supported in two cases: when writedisposition is write_append; when writedisposition is write_truncate and the destination table is a partition of a table, specified by partition decorators. for normal tables, write_truncate will always overwrite the schema.\n\n\n# scopes\n\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n * default: [https://www.googleapis.com/auth/cloud-platform]\n\n> the gcp scopes to used\n\n\n# serviceaccount\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the gcp service account key\n\n\n# timepartitioningfield\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the time partitioning specification for the destination table\n\n\n# writedisposition\n\n * type: string\n\n * dynamic: ❌\n\n * required: ❌\n\n * possible values:\n   \n   * write_truncate\n   * write_append\n   * write_empty\n\n> the action that should occur if the destination table already exists\n\n\n# outputs\n\n\n# destinationtable\n\n * type: string\n\n> destination table\n\n\n# jobid\n\n * type: string\n\n> the job id\n\n\n# rows\n\n * type: integer\n\n> output rows count\n\n\n# definitions\n\n\n# csvoptions\n\n# allowjaggedrows\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n\n> whether bigquery should accept rows that are missing trailing optional columns\n\nif true, bigquery treats missing trailing columns as null values. if {@code false}, records with missing trailing columns are treated as bad records, and if there are too many bad records, an invalid error is returned in the job result. by default, rows with missing trailing columns are considered bad records.\n\n# allowquotednewlines\n\n * type: boolean\n * dynamic: ✔️\n * required: ❌\n\n> whether bigquery should allow quoted data sections that contain newline characters in a csv file\n\nby default quoted newline are not allowed.\n\n# encoding\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the character encoding of the data\n\nthe supported values are utf-8 or iso-8859-1. the default value is utf-8. bigquery decodes the data after the raw, binary data has been split using the values set in {@link #setquote(string)} and {@link #setfielddelimiter(string)}.\n\n# fielddelimiter\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the separator for fields in a csv file\n\nbigquery converts the string to iso-8859-1 encoding, and then uses the first byte of the encoded string to split the data in its raw, binary state. bigquery also supports the escape sequence "\\t" to specify a tab separator. the default value is a comma (\',\').\n\n# quote\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the value that is used to quote data sections in a csv file\n\nbigquery converts the string to iso-8859-1 encoding, and then uses the first byte of the encoded string to split the data in its raw, binary state. the default value is a double-quote (\'"\'). if your data does not contain quoted sections, set the property value to an empty string. if your data contains quoted newline characters, you must also set {@link #setallowquotednewlines(boolean)} property to {@code true}.\n\n# skipleadingrows\n\n * type: integer\n * dynamic: ❌\n * required: ❌\n\n> the number of rows at the top of a csv file that bigquery will skip when reading the data\n\nthe default value is 0. this property is useful if you have header rows in the file that should be skipped.\n\n\n# random-1\n\n# maxattempt\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n * minimum: &gt;= 1\n\n# maxduration\n\n * type: string\n * dynamic: ❓\n * required: ❌\n * format: duration\n\n# maxinterval\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n * format: duration\n\n# mininterval\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n * format: duration\n\n# warningonretry\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: false\n\n\n# random-2\n\n\n# exponential-2\n\n\n# avrooptions\n\n# useavrologicaltypes\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n\n> if format option is set to avro, you can interpret logical types into their corresponding types (such as timestamp) instead of only using their raw types (such as integer)\n\nthe value may be null.\n\n\n# constant-1\n\n# interval\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n * format: duration\n\n# maxattempt\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n * minimum: &gt;= 1\n\n# maxduration\n\n * type: string\n * dynamic: ❓\n * required: ❌\n * format: duration\n\n# warningonretry\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: false\n\n\n# exponential-1\n\n# delayfactor\n\n * type: number\n * dynamic: ❓\n * required: ❌\n\n# interval\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n * format: duration\n\n# maxattempt\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n * minimum: &gt;= 1\n\n# maxduration\n\n * type: string\n * dynamic: ❓\n * required: ❌\n * format: duration\n\n# maxinterval\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n * format: duration\n\n# warningonretry\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: false\n\n\n# constant-2',charsets:{}},{title:"LoadFromGcs",frontmatter:{title:"LoadFromGcs",editLink:!1,description:"Load data from GCS (Google Cloud Storage) to BigQuery",icon:"PHN2ZyBpZD0iUHJvZHVjdF9JY29ucyIgZGF0YS1uYW1lPSJQcm9kdWN0IEljb25zIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCAyNCAyNCI+PGRlZnM+PHN0eWxlPi5jbHMtMXtmaWxsOiNhZWNiZmE7fS5jbHMtMSwuY2xzLTIsLmNscy0ze2ZpbGwtcnVsZTpldmVub2RkO30uY2xzLTJ7ZmlsbDojNjY5ZGY2O30uY2xzLTN7ZmlsbDojNDI4NWY0O308L3N0eWxlPjwvZGVmcz48dGl0bGU+SWNvbl8yNHB4X0NvbG9yX0JpZ1F1ZXJ5PC90aXRsZT48ZyBpZD0iU2hhcGUiPjxwYXRoIGNsYXNzPSJjbHMtMSIgZD0iTTYuNzMsMTAuODN2Mi42M0E0LjkxLDQuOTEsMCwwLDAsOC40NCwxNS4yVjEwLjgzWiIvPjxwYXRoIGNsYXNzPSJjbHMtMiIgZD0iTTkuODksOC40MXY3LjUzQTcuNjIsNy42MiwwLDAsMCwxMSwxNiw4LDgsMCwwLDAsMTIsMTZWOC40MVoiLz48cGF0aCBjbGFzcz0iY2xzLTEiIGQ9Ik0xMy42NCwxMS44NnYzLjI5YTUsNSwwLDAsMCwxLjctMS44MlYxMS44NloiLz48cGF0aCBjbGFzcz0iY2xzLTMiIGQ9Ik0xNy43NCwxNi4zMmwtMS40MiwxLjQyYS40Mi40MiwwLDAsMCwwLC42bDMuNTQsMy41NGEuNDIuNDIsMCwwLDAsLjU5LDBsMS40My0xLjQzYS40Mi40MiwwLDAsMCwwLS41OWwtMy41NC0zLjU0YS40Mi40MiwwLDAsMC0uNiwwIi8+PHBhdGggY2xhc3M9ImNscy0yIiBkPSJNMTEsMmE5LDksMCwxLDAsOSw5LDksOSwwLDAsMC05LTltMCwxNS42OUE2LjY4LDYuNjgsMCwxLDEsMTcuNjksMTEsNi42OCw2LjY4LDAsMCwxLDExLDE3LjY5Ii8+PC9nPjwvc3ZnPg==",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"LoadFromGcs"},{property:"og:description",content:"Load data from GCS (Google Cloud Storage) to BigQuery | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-gcp/tasks/bigquery/io.kestra.plugin.gcp.bigquery.LoadFromGcs.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"LoadFromGcs"},{name:"twitter:description",content:"Load data from GCS (Google Cloud Storage) to BigQuery | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-gcp/tasks/bigquery/io.kestra.plugin.gcp.bigquery.LoadFromGcs.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-gcp/tasks/bigquery/io.kestra.plugin.gcp.bigquery.LoadFromGcs.html",relativePath:"plugins/plugin-gcp/tasks/bigquery/io.kestra.plugin.gcp.bigquery.LoadFromGcs.md",key:"v-4e5709e3",path:"/plugins/plugin-gcp/tasks/bigquery/io.kestra.plugin.gcp.bigquery.LoadFromGcs.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:125},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:856},{level:3,title:"autodetect",slug:"autodetect",normalizedTitle:"autodetect",charIndex:871},{level:3,title:"avroOptions",slug:"avrooptions",normalizedTitle:"avrooptions",charIndex:349},{level:3,title:"clusteringFields",slug:"clusteringfields",normalizedTitle:"clusteringfields",charIndex:1113},{level:3,title:"createDisposition",slug:"createdisposition",normalizedTitle:"createdisposition",charIndex:1257},{level:3,title:"csvOptions",slug:"csvoptions",normalizedTitle:"csvoptions",charIndex:732},{level:3,title:"destinationTable",slug:"destinationtable",normalizedTitle:"destinationtable",charIndex:285},{level:3,title:"format",slug:"format",normalizedTitle:"format",charIndex:336},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:77},{level:3,title:"ignoreUnknownValues",slug:"ignoreunknownvalues",normalizedTitle:"ignoreunknownvalues",charIndex:547},{level:3,title:"location",slug:"location",normalizedTitle:"location",charIndex:2587},{level:3,title:"maxBadRecords",slug:"maxbadrecords",normalizedTitle:"maxbadrecords",charIndex:2802},{level:3,title:"projectId",slug:"projectid",normalizedTitle:"projectid",charIndex:3085},{level:3,title:"retryAuto",slug:"retryauto",normalizedTitle:"retryauto",charIndex:3167},{level:3,title:"retryMessages",slug:"retrymessages",normalizedTitle:"retrymessages",charIndex:3225},{level:3,title:"retryReasons",slug:"retryreasons",normalizedTitle:"retryreasons",charIndex:3515},{level:3,title:"schema",slug:"schema",normalizedTitle:"schema",charIndex:425},{level:3,title:"schemaUpdateOptions",slug:"schemaupdateoptions",normalizedTitle:"schemaupdateoptions",charIndex:4126},{level:3,title:"scopes",slug:"scopes",normalizedTitle:"scopes",charIndex:4619},{level:3,title:"serviceAccount",slug:"serviceaccount",normalizedTitle:"serviceaccount",charIndex:4781},{level:3,title:"timePartitioningField",slug:"timepartitioningfield",normalizedTitle:"timepartitioningfield",charIndex:4877},{level:3,title:"writeDisposition",slug:"writedisposition",normalizedTitle:"writedisposition",charIndex:4385},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:5236},{level:3,title:"destinationTable",slug:"destinationtable-2",normalizedTitle:"destinationtable",charIndex:285},{level:3,title:"jobId",slug:"jobid",normalizedTitle:"jobid",charIndex:5307},{level:3,title:"rows",slug:"rows",normalizedTitle:"rows",charIndex:5348},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:5396},{level:3,title:"CsvOptions",slug:"csvoptions-2",normalizedTitle:"csvoptions",charIndex:1460},{level:3,title:"Random-1",slug:"random-1",normalizedTitle:"random-1",charIndex:7604},{level:3,title:"Random-2",slug:"random-2",normalizedTitle:"random-2",charIndex:8026},{level:3,title:"Exponential-2",slug:"exponential-2",normalizedTitle:"exponential-2",charIndex:8039},{level:3,title:"AvroOptions",slug:"avrooptions-2",normalizedTitle:"avrooptions",charIndex:1044},{level:3,title:"Constant-1",slug:"constant-1",normalizedTitle:"constant-1",charIndex:8342},{level:3,title:"Exponential-1",slug:"exponential-1",normalizedTitle:"exponential-1",charIndex:8681},{level:3,title:"Constant-2",slug:"constant-2",normalizedTitle:"constant-2",charIndex:9166}],headersStr:"Examples Properties autodetect avroOptions clusteringFields createDisposition csvOptions destinationTable format from ignoreUnknownValues location maxBadRecords projectId retryAuto retryMessages retryReasons schema schemaUpdateOptions scopes serviceAccount timePartitioningField writeDisposition Outputs destinationTable jobId rows Definitions CsvOptions Random-1 Random-2 Exponential-2 AvroOptions Constant-1 Exponential-1 Constant-2",content:'LoadFromGcs\n\ntype: "io.kestra.plugin.gcp.bigquery.LoadFromGcs"\n\n\n> Load data from GCS (Google Cloud Storage) to BigQuery\n\n\n# Examples\n\n> Load an avro file from a gcs bucket\n\nid: "load_from_gcs"\ntype: "io.kestra.plugin.gcp.bigquery.LoadFromGcs"\nfrom:\n  - "{{ outputs[\'avro-to-gcs\'] }}"\ndestinationTable: "my_project.my_dataset.my_table"\nformat: AVRO\navroOptions:\n  useAvroLogicalTypes: true\n\n\n> Load a csv file with a defined schema\n\n- id: load_files_test\n  type: io.kestra.plugin.gcp.bigquery.LoadFromGcs\n  destinationTable: "myDataset.myTable"\n  ignoreUnknownValues: true\n  schema:\n    fields:\n      - name: colA\n        type: STRING\n      - name: colB\n        type: NUMERIC\n      - name: colC\n        type: STRING\n  format: CSV\n  csvOptions:\n    allowJaggedRows: true\n    encoding: UTF-8\n    fieldDelimiter: ","\n  from:\n  - gs://myBucket/myFile.csv\n\n\n\n# Properties\n\n\n# autodetect\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n\n> [Experimental] Automatic inference of the options and schema for CSV and JSON sources\n\n\n# avroOptions\n\n * Type: AvroOptions\n * Dynamic: ❓\n * Required: ❌\n\n> Avro parsing options\n\n\n# clusteringFields\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The clustering specification for the destination table\n\n\n# createDisposition\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ❌\n\n * Possible Values:\n   \n   * CREATE_IF_NEEDED\n   * CREATE_NEVER\n\n> Whether the job is allowed to create tables\n\n\n# csvOptions\n\n * Type: CsvOptions\n * Dynamic: ❓\n * Required: ❌\n\n> Csv parsing options\n\n\n# destinationTable\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The table where to put query results\n\nIf not provided a new table is created.\n\n\n# format\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ❌\n\n * Possible Values:\n   \n   * CSV\n   * JSON\n   * AVRO\n   * PARQUET\n   * ORC\n\n> The source format, and possibly some parsing options, of the external data\n\n\n# from\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Google Cloud Storage source data\n\nThe fully-qualified URIs that point to source data in Google Cloud Storage (e.g. gs://bucket/path). Each URI can contain one \'*\' wildcard character and it must come after the \'bucket\' name.\n\n\n# ignoreUnknownValues\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n\n> Whether BigQuery should allow extra values that are not represented in the table schema\n\nIf true, the extra values are ignored. If false, records with extra columns are treated as bad records, and if there are too many bad records, an invalid error is returned in the job result. By default unknown values are not allowed.\n\n\n# location\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The geographic location where the dataset should reside\n\nThis property is experimental and might be subject to change or removed.\n\nSee Dataset Location\n\n\n# maxBadRecords\n\n * Type: integer\n * Dynamic: ❌\n * Required: ❌\n\n> The maximum number of bad records that BigQuery can ignore when running the job\n\nIf the number of bad records exceeds this value, an invalid error is returned in the job result. By default no bad record is ignored.\n\n\n# projectId\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The GCP project id\n\n\n# retryAuto\n\n * Type: ====\n * Dynamic: ❓\n * Required: ❌\n\n\n# retryMessages\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: [due to concurrent update, Retrying the job may solve the problem]\n\n> The message that are valid for a automatic retry.\n\nMessage is tested as a substring of the full message and case insensitive\n\n\n# retryReasons\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: [rateLimitExceeded, jobBackendError, internalError, jobInternalError]\n\n> The reason that are valid for a automatic retry.\n\n\n# schema\n\n * Type: object\n * Dynamic: ❌\n * Required: ❌\n\n> The schema for the destination table\n\nThe schema can be omitted if the destination table already exists, or if you\'re loading data from a Google Cloud Datastore backup (i.e. DATASTORE_BACKUP format option).\n\nschema:\n  fields:\n    - name: colA\n      type: STRING\n    - name: colB\n      type: NUMERIC\n\n\nSee type from StandardSQLTypeName\n\n\n# schemaUpdateOptions\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> [Experimental] Options allowing the schema of the destination table to be updated as a side effect of the query job\n\nSchema update options are supported in two cases: when writeDisposition is WRITE_APPEND; when writeDisposition is WRITE_TRUNCATE and the destination table is a partition of a table, specified by partition decorators. For normal tables, WRITE_TRUNCATE will always overwrite the schema.\n\n\n# scopes\n\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n * Default: [https://www.googleapis.com/auth/cloud-platform]\n\n> The GCP scopes to used\n\n\n# serviceAccount\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The GCP service account key\n\n\n# timePartitioningField\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The time partitioning specification for the destination table\n\n\n# writeDisposition\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ❌\n\n * Possible Values:\n   \n   * WRITE_TRUNCATE\n   * WRITE_APPEND\n   * WRITE_EMPTY\n\n> The action that should occur if the destination table already exists\n\n\n# Outputs\n\n\n# destinationTable\n\n * Type: string\n\n> Destination table\n\n\n# jobId\n\n * Type: string\n\n> The job id\n\n\n# rows\n\n * Type: integer\n\n> Output rows count\n\n\n# Definitions\n\n\n# CsvOptions\n\n# allowJaggedRows\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n\n> Whether BigQuery should accept rows that are missing trailing optional columns\n\nIf true, BigQuery treats missing trailing columns as null values. If {@code false}, records with missing trailing columns are treated as bad records, and if there are too many bad records, an invalid error is returned in the job result. By default, rows with missing trailing columns are considered bad records.\n\n# allowQuotedNewLines\n\n * Type: boolean\n * Dynamic: ✔️\n * Required: ❌\n\n> Whether BigQuery should allow quoted data sections that contain newline characters in a CSV file\n\nBy default quoted newline are not allowed.\n\n# encoding\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The character encoding of the data\n\nThe supported values are UTF-8 or ISO-8859-1. The default value is UTF-8. BigQuery decodes the data after the raw, binary data has been split using the values set in {@link #setQuote(String)} and {@link #setFieldDelimiter(String)}.\n\n# fieldDelimiter\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The separator for fields in a CSV file\n\nBigQuery converts the string to ISO-8859-1 encoding, and then uses the first byte of the encoded string to split the data in its raw, binary state. BigQuery also supports the escape sequence "\\t" to specify a tab separator. The default value is a comma (\',\').\n\n# quote\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The value that is used to quote data sections in a CSV file\n\nBigQuery converts the string to ISO-8859-1 encoding, and then uses the first byte of the encoded string to split the data in its raw, binary state. The default value is a double-quote (\'"\'). If your data does not contain quoted sections, set the property value to an empty string. If your data contains quoted newline characters, you must also set {@link #setAllowQuotedNewLines(boolean)} property to {@code true}.\n\n# skipLeadingRows\n\n * Type: integer\n * Dynamic: ❌\n * Required: ❌\n\n> The number of rows at the top of a CSV file that BigQuery will skip when reading the data\n\nThe default value is 0. This property is useful if you have header rows in the file that should be skipped.\n\n\n# Random-1\n\n# maxAttempt\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n * Minimum: &gt;= 1\n\n# maxDuration\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Format: duration\n\n# maxInterval\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n * Format: duration\n\n# minInterval\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n * Format: duration\n\n# warningOnRetry\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: false\n\n\n# Random-2\n\n\n# Exponential-2\n\n\n# AvroOptions\n\n# useAvroLogicalTypes\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n\n> If Format option is set to AVRO, you can interpret logical types into their corresponding types (such as TIMESTAMP) instead of only using their raw types (such as INTEGER)\n\nThe value may be null.\n\n\n# Constant-1\n\n# interval\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n * Format: duration\n\n# maxAttempt\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n * Minimum: &gt;= 1\n\n# maxDuration\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Format: duration\n\n# warningOnRetry\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: false\n\n\n# Exponential-1\n\n# delayFactor\n\n * Type: number\n * Dynamic: ❓\n * Required: ❌\n\n# interval\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n * Format: duration\n\n# maxAttempt\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n * Minimum: &gt;= 1\n\n# maxDuration\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Format: duration\n\n# maxInterval\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n * Format: duration\n\n# warningOnRetry\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: false\n\n\n# Constant-2',normalizedContent:'loadfromgcs\n\ntype: "io.kestra.plugin.gcp.bigquery.loadfromgcs"\n\n\n> load data from gcs (google cloud storage) to bigquery\n\n\n# examples\n\n> load an avro file from a gcs bucket\n\nid: "load_from_gcs"\ntype: "io.kestra.plugin.gcp.bigquery.loadfromgcs"\nfrom:\n  - "{{ outputs[\'avro-to-gcs\'] }}"\ndestinationtable: "my_project.my_dataset.my_table"\nformat: avro\navrooptions:\n  useavrologicaltypes: true\n\n\n> load a csv file with a defined schema\n\n- id: load_files_test\n  type: io.kestra.plugin.gcp.bigquery.loadfromgcs\n  destinationtable: "mydataset.mytable"\n  ignoreunknownvalues: true\n  schema:\n    fields:\n      - name: cola\n        type: string\n      - name: colb\n        type: numeric\n      - name: colc\n        type: string\n  format: csv\n  csvoptions:\n    allowjaggedrows: true\n    encoding: utf-8\n    fielddelimiter: ","\n  from:\n  - gs://mybucket/myfile.csv\n\n\n\n# properties\n\n\n# autodetect\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n\n> [experimental] automatic inference of the options and schema for csv and json sources\n\n\n# avrooptions\n\n * type: avrooptions\n * dynamic: ❓\n * required: ❌\n\n> avro parsing options\n\n\n# clusteringfields\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> the clustering specification for the destination table\n\n\n# createdisposition\n\n * type: string\n\n * dynamic: ❌\n\n * required: ❌\n\n * possible values:\n   \n   * create_if_needed\n   * create_never\n\n> whether the job is allowed to create tables\n\n\n# csvoptions\n\n * type: csvoptions\n * dynamic: ❓\n * required: ❌\n\n> csv parsing options\n\n\n# destinationtable\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the table where to put query results\n\nif not provided a new table is created.\n\n\n# format\n\n * type: string\n\n * dynamic: ❌\n\n * required: ❌\n\n * possible values:\n   \n   * csv\n   * json\n   * avro\n   * parquet\n   * orc\n\n> the source format, and possibly some parsing options, of the external data\n\n\n# from\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> google cloud storage source data\n\nthe fully-qualified uris that point to source data in google cloud storage (e.g. gs://bucket/path). each uri can contain one \'*\' wildcard character and it must come after the \'bucket\' name.\n\n\n# ignoreunknownvalues\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n\n> whether bigquery should allow extra values that are not represented in the table schema\n\nif true, the extra values are ignored. if false, records with extra columns are treated as bad records, and if there are too many bad records, an invalid error is returned in the job result. by default unknown values are not allowed.\n\n\n# location\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the geographic location where the dataset should reside\n\nthis property is experimental and might be subject to change or removed.\n\nsee dataset location\n\n\n# maxbadrecords\n\n * type: integer\n * dynamic: ❌\n * required: ❌\n\n> the maximum number of bad records that bigquery can ignore when running the job\n\nif the number of bad records exceeds this value, an invalid error is returned in the job result. by default no bad record is ignored.\n\n\n# projectid\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the gcp project id\n\n\n# retryauto\n\n * type: ====\n * dynamic: ❓\n * required: ❌\n\n\n# retrymessages\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n * default: [due to concurrent update, retrying the job may solve the problem]\n\n> the message that are valid for a automatic retry.\n\nmessage is tested as a substring of the full message and case insensitive\n\n\n# retryreasons\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n * default: [ratelimitexceeded, jobbackenderror, internalerror, jobinternalerror]\n\n> the reason that are valid for a automatic retry.\n\n\n# schema\n\n * type: object\n * dynamic: ❌\n * required: ❌\n\n> the schema for the destination table\n\nthe schema can be omitted if the destination table already exists, or if you\'re loading data from a google cloud datastore backup (i.e. datastore_backup format option).\n\nschema:\n  fields:\n    - name: cola\n      type: string\n    - name: colb\n      type: numeric\n\n\nsee type from standardsqltypename\n\n\n# schemaupdateoptions\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> [experimental] options allowing the schema of the destination table to be updated as a side effect of the query job\n\nschema update options are supported in two cases: when writedisposition is write_append; when writedisposition is write_truncate and the destination table is a partition of a table, specified by partition decorators. for normal tables, write_truncate will always overwrite the schema.\n\n\n# scopes\n\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n * default: [https://www.googleapis.com/auth/cloud-platform]\n\n> the gcp scopes to used\n\n\n# serviceaccount\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the gcp service account key\n\n\n# timepartitioningfield\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the time partitioning specification for the destination table\n\n\n# writedisposition\n\n * type: string\n\n * dynamic: ❌\n\n * required: ❌\n\n * possible values:\n   \n   * write_truncate\n   * write_append\n   * write_empty\n\n> the action that should occur if the destination table already exists\n\n\n# outputs\n\n\n# destinationtable\n\n * type: string\n\n> destination table\n\n\n# jobid\n\n * type: string\n\n> the job id\n\n\n# rows\n\n * type: integer\n\n> output rows count\n\n\n# definitions\n\n\n# csvoptions\n\n# allowjaggedrows\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n\n> whether bigquery should accept rows that are missing trailing optional columns\n\nif true, bigquery treats missing trailing columns as null values. if {@code false}, records with missing trailing columns are treated as bad records, and if there are too many bad records, an invalid error is returned in the job result. by default, rows with missing trailing columns are considered bad records.\n\n# allowquotednewlines\n\n * type: boolean\n * dynamic: ✔️\n * required: ❌\n\n> whether bigquery should allow quoted data sections that contain newline characters in a csv file\n\nby default quoted newline are not allowed.\n\n# encoding\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the character encoding of the data\n\nthe supported values are utf-8 or iso-8859-1. the default value is utf-8. bigquery decodes the data after the raw, binary data has been split using the values set in {@link #setquote(string)} and {@link #setfielddelimiter(string)}.\n\n# fielddelimiter\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the separator for fields in a csv file\n\nbigquery converts the string to iso-8859-1 encoding, and then uses the first byte of the encoded string to split the data in its raw, binary state. bigquery also supports the escape sequence "\\t" to specify a tab separator. the default value is a comma (\',\').\n\n# quote\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the value that is used to quote data sections in a csv file\n\nbigquery converts the string to iso-8859-1 encoding, and then uses the first byte of the encoded string to split the data in its raw, binary state. the default value is a double-quote (\'"\'). if your data does not contain quoted sections, set the property value to an empty string. if your data contains quoted newline characters, you must also set {@link #setallowquotednewlines(boolean)} property to {@code true}.\n\n# skipleadingrows\n\n * type: integer\n * dynamic: ❌\n * required: ❌\n\n> the number of rows at the top of a csv file that bigquery will skip when reading the data\n\nthe default value is 0. this property is useful if you have header rows in the file that should be skipped.\n\n\n# random-1\n\n# maxattempt\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n * minimum: &gt;= 1\n\n# maxduration\n\n * type: string\n * dynamic: ❓\n * required: ❌\n * format: duration\n\n# maxinterval\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n * format: duration\n\n# mininterval\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n * format: duration\n\n# warningonretry\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: false\n\n\n# random-2\n\n\n# exponential-2\n\n\n# avrooptions\n\n# useavrologicaltypes\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n\n> if format option is set to avro, you can interpret logical types into their corresponding types (such as timestamp) instead of only using their raw types (such as integer)\n\nthe value may be null.\n\n\n# constant-1\n\n# interval\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n * format: duration\n\n# maxattempt\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n * minimum: &gt;= 1\n\n# maxduration\n\n * type: string\n * dynamic: ❓\n * required: ❌\n * format: duration\n\n# warningonretry\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: false\n\n\n# exponential-1\n\n# delayfactor\n\n * type: number\n * dynamic: ❓\n * required: ❌\n\n# interval\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n * format: duration\n\n# maxattempt\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n * minimum: &gt;= 1\n\n# maxduration\n\n * type: string\n * dynamic: ❓\n * required: ❌\n * format: duration\n\n# maxinterval\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n * format: duration\n\n# warningonretry\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: false\n\n\n# constant-2',charsets:{}},{title:"Query",frontmatter:{title:"Query",editLink:!1,description:"Execute BigQuery SQL query in a specific BigQuery database",icon:"PHN2ZyBpZD0iUHJvZHVjdF9JY29ucyIgZGF0YS1uYW1lPSJQcm9kdWN0IEljb25zIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCAyNCAyNCI+PGRlZnM+PHN0eWxlPi5jbHMtMXtmaWxsOiNhZWNiZmE7fS5jbHMtMSwuY2xzLTIsLmNscy0ze2ZpbGwtcnVsZTpldmVub2RkO30uY2xzLTJ7ZmlsbDojNjY5ZGY2O30uY2xzLTN7ZmlsbDojNDI4NWY0O308L3N0eWxlPjwvZGVmcz48dGl0bGU+SWNvbl8yNHB4X0NvbG9yX0JpZ1F1ZXJ5PC90aXRsZT48ZyBpZD0iU2hhcGUiPjxwYXRoIGNsYXNzPSJjbHMtMSIgZD0iTTYuNzMsMTAuODN2Mi42M0E0LjkxLDQuOTEsMCwwLDAsOC40NCwxNS4yVjEwLjgzWiIvPjxwYXRoIGNsYXNzPSJjbHMtMiIgZD0iTTkuODksOC40MXY3LjUzQTcuNjIsNy42MiwwLDAsMCwxMSwxNiw4LDgsMCwwLDAsMTIsMTZWOC40MVoiLz48cGF0aCBjbGFzcz0iY2xzLTEiIGQ9Ik0xMy42NCwxMS44NnYzLjI5YTUsNSwwLDAsMCwxLjctMS44MlYxMS44NloiLz48cGF0aCBjbGFzcz0iY2xzLTMiIGQ9Ik0xNy43NCwxNi4zMmwtMS40MiwxLjQyYS40Mi40MiwwLDAsMCwwLC42bDMuNTQsMy41NGEuNDIuNDIsMCwwLDAsLjU5LDBsMS40My0xLjQzYS40Mi40MiwwLDAsMCwwLS41OWwtMy41NC0zLjU0YS40Mi40MiwwLDAsMC0uNiwwIi8+PHBhdGggY2xhc3M9ImNscy0yIiBkPSJNMTEsMmE5LDksMCwxLDAsOSw5LDksOSwwLDAsMC05LTltMCwxNS42OUE2LjY4LDYuNjgsMCwxLDEsMTcuNjksMTEsNi42OCw2LjY4LDAsMCwxLDExLDE3LjY5Ii8+PC9nPjwvc3ZnPg==",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Query"},{property:"og:description",content:"Execute BigQuery SQL query in a specific BigQuery database | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-gcp/tasks/bigquery/io.kestra.plugin.gcp.bigquery.Query.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Query"},{name:"twitter:description",content:"Execute BigQuery SQL query in a specific BigQuery database | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-gcp/tasks/bigquery/io.kestra.plugin.gcp.bigquery.Query.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-gcp/tasks/bigquery/io.kestra.plugin.gcp.bigquery.Query.html",relativePath:"plugins/plugin-gcp/tasks/bigquery/io.kestra.plugin.gcp.bigquery.Query.md",key:"v-537b77c3",path:"/plugins/plugin-gcp/tasks/bigquery/io.kestra.plugin.gcp.bigquery.Query.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:118},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:1221},{level:3,title:"allowLargeResults",slug:"allowlargeresults",normalizedTitle:"allowlargeresults",charIndex:1236},{level:3,title:"clusteringFields",slug:"clusteringfields",normalizedTitle:"clusteringfields",charIndex:1497},{level:3,title:"createDisposition",slug:"createdisposition",normalizedTitle:"createdisposition",charIndex:1641},{level:3,title:"defaultDataset",slug:"defaultdataset",normalizedTitle:"defaultdataset",charIndex:1823},{level:3,title:"destinationTable",slug:"destinationtable",normalizedTitle:"destinationtable",charIndex:222},{level:3,title:"dryRun",slug:"dryrun",normalizedTitle:"dryrun",charIndex:2140},{level:3,title:"fetch",slug:"fetch",normalizedTitle:"fetch",charIndex:840},{level:3,title:"fetchOne",slug:"fetchone",normalizedTitle:"fetchone",charIndex:2577},{level:3,title:"flattenResults",slug:"flattenresults",normalizedTitle:"flattenresults",charIndex:2734},{level:3,title:"jobTimeout",slug:"jobtimeout",normalizedTitle:"jobtimeout",charIndex:2930},{level:3,title:"labels",slug:"labels",normalizedTitle:"labels",charIndex:3103},{level:3,title:"legacySql",slug:"legacysql",normalizedTitle:"legacysql",charIndex:3547},{level:3,title:"location",slug:"location",normalizedTitle:"location",charIndex:3732},{level:3,title:"maxResults",slug:"maxresults",normalizedTitle:"maxresults",charIndex:3947},{level:3,title:"maximumBillingTier",slug:"maximumbillingtier",normalizedTitle:"maximumbillingtier",charIndex:4408},{level:3,title:"maximumBytesBilled",slug:"maximumbytesbilled",normalizedTitle:"maximumbytesbilled",charIndex:4668},{level:3,title:"priority",slug:"priority",normalizedTitle:"priority",charIndex:4932},{level:3,title:"projectId",slug:"projectid",normalizedTitle:"projectid",charIndex:5105},{level:3,title:"retryAuto",slug:"retryauto",normalizedTitle:"retryauto",charIndex:5187},{level:3,title:"retryMessages",slug:"retrymessages",normalizedTitle:"retrymessages",charIndex:5245},{level:3,title:"retryReasons",slug:"retryreasons",normalizedTitle:"retryreasons",charIndex:5535},{level:3,title:"schemaUpdateOptions",slug:"schemaupdateoptions",normalizedTitle:"schemaupdateoptions",charIndex:5751},{level:3,title:"scopes",slug:"scopes",normalizedTitle:"scopes",charIndex:6253},{level:3,title:"serviceAccount",slug:"serviceaccount",normalizedTitle:"serviceaccount",charIndex:6415},{level:3,title:"sql",slug:"sql",normalizedTitle:"sql",charIndex:304},{level:3,title:"store",slug:"store",normalizedTitle:"store",charIndex:6589},{level:3,title:"timePartitioningField",slug:"timepartitioningfield",normalizedTitle:"timepartitioningfield",charIndex:6748},{level:3,title:"useLegacySql",slug:"uselegacysql",normalizedTitle:"uselegacysql",charIndex:6886},{level:3,title:"useQueryCache",slug:"usequerycache",normalizedTitle:"usequerycache",charIndex:7204},{level:3,title:"writeDisposition",slug:"writedisposition",normalizedTitle:"writedisposition",charIndex:273},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:7730},{level:3,title:"jobId",slug:"jobid",normalizedTitle:"jobid",charIndex:7742},{level:3,title:"row",slug:"row",normalizedTitle:"row",charIndex:1149},{level:3,title:"rows",slug:"rows",normalizedTitle:"rows",charIndex:1149},{level:3,title:"size",slug:"size",normalizedTitle:"size",charIndex:8045},{level:3,title:"uri",slug:"uri",normalizedTitle:"uri",charIndex:8102},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:8197},{level:3,title:"Random-1",slug:"random-1",normalizedTitle:"random-1",charIndex:8213},{level:3,title:"Random-2",slug:"random-2",normalizedTitle:"random-2",charIndex:8635},{level:3,title:"Exponential-2",slug:"exponential-2",normalizedTitle:"exponential-2",charIndex:8648},{level:3,title:"Constant-1",slug:"constant-1",normalizedTitle:"constant-1",charIndex:8666},{level:3,title:"Exponential-1",slug:"exponential-1",normalizedTitle:"exponential-1",charIndex:9005},{level:3,title:"Constant-2",slug:"constant-2",normalizedTitle:"constant-2",charIndex:9490}],headersStr:"Examples Properties allowLargeResults clusteringFields createDisposition defaultDataset destinationTable dryRun fetch fetchOne flattenResults jobTimeout labels legacySql location maxResults maximumBillingTier maximumBytesBilled priority projectId retryAuto retryMessages retryReasons schemaUpdateOptions scopes serviceAccount sql store timePartitioningField useLegacySql useQueryCache writeDisposition Outputs jobId row rows size uri Definitions Random-1 Random-2 Exponential-2 Constant-1 Exponential-1 Constant-2",content:'Query\n\ntype: "io.kestra.plugin.gcp.bigquery.Query"\n\n\n> Execute BigQuery SQL query in a specific BigQuery database\n\n\n# Examples\n\n> Create a table with a custom query\n\nid: "query"\ntype: "io.kestra.plugin.gcp.bigquery.Query"\ndestinationTable: "my_project.my_dataset.my_table"\nwriteDisposition: WRITE_APPEND\nsql: |\n  SELECT \n    "hello" as string,\n    NULL AS `nullable`,\n    1 as int,\n    1.25 AS float,\n    DATE("2008-12-25") AS date,\n    DATETIME "2008-12-25 15:30:00.123456" AS datetime,\n    TIME(DATETIME "2008-12-25 15:30:00.123456") AS time,\n    TIMESTAMP("2008-12-25 15:30:00.123456") AS timestamp,\n    ST_GEOGPOINT(50.6833, 2.9) AS geopoint,\n    ARRAY(SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3) AS `array`,\n    STRUCT(4 AS x, 0 AS y, ARRAY(SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3) AS z) AS `struct`\n\n\n> Execute a query and fetch results sets on another task\n\ntasks:\n- id: fetch\n  type: io.kestra.plugin.gcp.bigquery.Query\n  fetch: true\n  sql: |\n    SELECT 1 as id, "John" as name\n    UNION ALL\n    SELECT 2 as id, "Doe" as name\n- id: use-fetched-data\n  type: io.kestra.core.tasks.debugs.Return\n  format: |\n    {{#each outputs.fetch.rows}}\n    id : {{ this.id }}, name: {{ this.name }}\n    {{/each}}\n\n\n\n# Properties\n\n\n# allowLargeResults\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n\n> Sets whether the job is enabled to create arbitrarily large results.\n\nIf true the query is allowed to create large results at a slight cost in performance. destinationTable must be provide\n\n\n# clusteringFields\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The clustering specification for the destination table\n\n\n# createDisposition\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ❌\n\n * Possible Values:\n   \n   * CREATE_IF_NEEDED\n   * CREATE_NEVER\n\n> Whether the job is allowed to create tables\n\n\n# defaultDataset\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Sets the default dataset.\n\nThis dataset is used for all unqualified table names used in the query.\n\n\n# destinationTable\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The table where to put query results\n\nIf not provided a new table is created.\n\n\n# dryRun\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n * Default: false\n\n> Sets whether the job has to be dry run or no.\n\nA valid query will return a mostly empty response with some processing statistics, while an invalid query will return the same error it would if it wasn\'t a dry run.\n\n\n# fetch\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: false\n\n> Whether to Fetch the data from the query result to the task output\n\n\n# fetchOne\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: false\n\n> Whether to Fetch only one data row from the query result to the task output\n\n\n# flattenResults\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n * Default: true\n\n> Sets whether nested and repeated fields should be flattened.\n\nIf set to false, allowLargeResults must be true\n\n\n# jobTimeout\n\n * Type: string\n * Dynamic: ❌\n * Required: ❌\n * Format: duration\n\n> Job timeout.\n\nIf this time limit is exceeded, BigQuery may attempt to terminate the job.\n\n\n# labels\n\n * Type: object\n * Dynamic: ✔️\n * Required: ❌\n\n> The labels associated with this job.\n\nYou can use these to organize and group your jobs. Label keys and values can be no longer than 63 characters, can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. Label values are optional. Label keys must start with a letter and each label in the list must have a different key.\n\n\n# legacySql\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: false\n\n> Whether to use BigQuery\'s legacy SQL dialect for this query\n\nBy default this property is set to false.\n\n\n# location\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The geographic location where the dataset should reside\n\nThis property is experimental and might be subject to change or removed.\n\nSee Dataset Location\n\n\n# maxResults\n\n * Type: integer\n * Dynamic: ❌\n * Required: ❌\n\n> This is only supported in the fast query path.\n\nThe maximum number of rows of data to return per page of results. Setting this flag to a small value such as 1000 and then paging through results might improve reliability when the query result set is large. In addition to this limit, responses are also limited to 10 MB. By default, there is no maximum row count, and only the byte limit applies.\n\n\n# maximumBillingTier\n\n * Type: integer\n * Dynamic: ❌\n * Required: ❌\n\n> Limits the billing tier for this job.\n\nQueries that have resource usage beyond this tier will fail (without incurring a charge). If unspecified, this will be set to your project default.\n\n\n# maximumBytesBilled\n\n * Type: integer\n * Dynamic: ❌\n * Required: ❌\n\n> Limits the bytes billed for this job.\n\nQueries that will have bytes billed beyond this limit will fail (without incurring a charge). If unspecified, this will be set to your project default.\n\n\n# priority\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ❌\n\n * Default: INTERACTIVE\n\n * Possible Values:\n   \n   * INTERACTIVE\n   * BATCH\n\n> Sets a priority for the query.\n\n\n# projectId\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The GCP project id\n\n\n# retryAuto\n\n * Type: ====\n * Dynamic: ❓\n * Required: ❌\n\n\n# retryMessages\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: [due to concurrent update, Retrying the job may solve the problem]\n\n> The message that are valid for a automatic retry.\n\nMessage is tested as a substring of the full message and case insensitive\n\n\n# retryReasons\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: [rateLimitExceeded, jobBackendError, internalError, jobInternalError]\n\n> The reason that are valid for a automatic retry.\n\n\n# schemaUpdateOptions\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> [Experimental] Options allowing the schema of the destination table to be updated as a side effect of the query job\n\nSchema update options are supported in two cases: * when writeDisposition is WRITE_APPEND;\n\n * when writeDisposition is WRITE_TRUNCATE and the destination table is a partition of a table, specified by partition decorators.\n   For normal tables, WRITE_TRUNCATE will always overwrite the schema.\n\n\n# scopes\n\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n * Default: [https://www.googleapis.com/auth/cloud-platform]\n\n> The GCP scopes to used\n\n\n# serviceAccount\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The GCP service account key\n\n\n# sql\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The sql query to run\n\n\n# store\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: false\n\n> Whether to store the data from the query result into an ion serialized data file\n\n\n# timePartitioningField\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The time partitioning specification for the destination table\n\n\n# useLegacySql\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n * Default: false\n\n> Sets whether to use BigQuery\'s legacy SQL dialect for this query.\n\nA valid query will return a mostly empty response with some processing statistics, while an invalid query will return the same error it would if it wasn\'t a dry run.\n\n\n# useQueryCache\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n\n> Sets whether to look for the result in the query cache.\n\nThe query cache is a best-effort cache that will be flushed whenever tables in the query are modified. Moreover, the query cache is only available when destinationTable is not set\n\n\n# writeDisposition\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ❌\n\n * Possible Values:\n   \n   * WRITE_TRUNCATE\n   * WRITE_APPEND\n   * WRITE_EMPTY\n\n> The action that should occur if the destination table already exists\n\n\n# Outputs\n\n\n# jobId\n\n * Type: string\n\n> The job id\n\n\n# row\n\n * Type: object\n\n> Map containing the first row of fetched data\n\nOnly populated if \'fetchOne\' parameter is set to true.\n\n\n# rows\n\n * Type: array\n * SubType: object\n\n> List containing the fetched data\n\nOnly populated if \'fetch\' parameter is set to true.\n\n\n# size\n\n * Type: integer\n\n> The size of the rows fetch\n\n\n# uri\n\n * Type: string\n\n> The uri of store result\n\nOnly populated if \'store\' is set to true.\n\n\n# Definitions\n\n\n# Random-1\n\n# maxAttempt\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n * Minimum: &gt;= 1\n\n# maxDuration\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Format: duration\n\n# maxInterval\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n * Format: duration\n\n# minInterval\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n * Format: duration\n\n# warningOnRetry\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: false\n\n\n# Random-2\n\n\n# Exponential-2\n\n\n# Constant-1\n\n# interval\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n * Format: duration\n\n# maxAttempt\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n * Minimum: &gt;= 1\n\n# maxDuration\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Format: duration\n\n# warningOnRetry\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: false\n\n\n# Exponential-1\n\n# delayFactor\n\n * Type: number\n * Dynamic: ❓\n * Required: ❌\n\n# interval\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n * Format: duration\n\n# maxAttempt\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n * Minimum: &gt;= 1\n\n# maxDuration\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Format: duration\n\n# maxInterval\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n * Format: duration\n\n# warningOnRetry\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: false\n\n\n# Constant-2',normalizedContent:'query\n\ntype: "io.kestra.plugin.gcp.bigquery.query"\n\n\n> execute bigquery sql query in a specific bigquery database\n\n\n# examples\n\n> create a table with a custom query\n\nid: "query"\ntype: "io.kestra.plugin.gcp.bigquery.query"\ndestinationtable: "my_project.my_dataset.my_table"\nwritedisposition: write_append\nsql: |\n  select \n    "hello" as string,\n    null as `nullable`,\n    1 as int,\n    1.25 as float,\n    date("2008-12-25") as date,\n    datetime "2008-12-25 15:30:00.123456" as datetime,\n    time(datetime "2008-12-25 15:30:00.123456") as time,\n    timestamp("2008-12-25 15:30:00.123456") as timestamp,\n    st_geogpoint(50.6833, 2.9) as geopoint,\n    array(select 1 union all select 2 union all select 3) as `array`,\n    struct(4 as x, 0 as y, array(select 1 union all select 2 union all select 3) as z) as `struct`\n\n\n> execute a query and fetch results sets on another task\n\ntasks:\n- id: fetch\n  type: io.kestra.plugin.gcp.bigquery.query\n  fetch: true\n  sql: |\n    select 1 as id, "john" as name\n    union all\n    select 2 as id, "doe" as name\n- id: use-fetched-data\n  type: io.kestra.core.tasks.debugs.return\n  format: |\n    {{#each outputs.fetch.rows}}\n    id : {{ this.id }}, name: {{ this.name }}\n    {{/each}}\n\n\n\n# properties\n\n\n# allowlargeresults\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n\n> sets whether the job is enabled to create arbitrarily large results.\n\nif true the query is allowed to create large results at a slight cost in performance. destinationtable must be provide\n\n\n# clusteringfields\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> the clustering specification for the destination table\n\n\n# createdisposition\n\n * type: string\n\n * dynamic: ❌\n\n * required: ❌\n\n * possible values:\n   \n   * create_if_needed\n   * create_never\n\n> whether the job is allowed to create tables\n\n\n# defaultdataset\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> sets the default dataset.\n\nthis dataset is used for all unqualified table names used in the query.\n\n\n# destinationtable\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the table where to put query results\n\nif not provided a new table is created.\n\n\n# dryrun\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n * default: false\n\n> sets whether the job has to be dry run or no.\n\na valid query will return a mostly empty response with some processing statistics, while an invalid query will return the same error it would if it wasn\'t a dry run.\n\n\n# fetch\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: false\n\n> whether to fetch the data from the query result to the task output\n\n\n# fetchone\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: false\n\n> whether to fetch only one data row from the query result to the task output\n\n\n# flattenresults\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n * default: true\n\n> sets whether nested and repeated fields should be flattened.\n\nif set to false, allowlargeresults must be true\n\n\n# jobtimeout\n\n * type: string\n * dynamic: ❌\n * required: ❌\n * format: duration\n\n> job timeout.\n\nif this time limit is exceeded, bigquery may attempt to terminate the job.\n\n\n# labels\n\n * type: object\n * dynamic: ✔️\n * required: ❌\n\n> the labels associated with this job.\n\nyou can use these to organize and group your jobs. label keys and values can be no longer than 63 characters, can only contain lowercase letters, numeric characters, underscores and dashes. international characters are allowed. label values are optional. label keys must start with a letter and each label in the list must have a different key.\n\n\n# legacysql\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: false\n\n> whether to use bigquery\'s legacy sql dialect for this query\n\nby default this property is set to false.\n\n\n# location\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the geographic location where the dataset should reside\n\nthis property is experimental and might be subject to change or removed.\n\nsee dataset location\n\n\n# maxresults\n\n * type: integer\n * dynamic: ❌\n * required: ❌\n\n> this is only supported in the fast query path.\n\nthe maximum number of rows of data to return per page of results. setting this flag to a small value such as 1000 and then paging through results might improve reliability when the query result set is large. in addition to this limit, responses are also limited to 10 mb. by default, there is no maximum row count, and only the byte limit applies.\n\n\n# maximumbillingtier\n\n * type: integer\n * dynamic: ❌\n * required: ❌\n\n> limits the billing tier for this job.\n\nqueries that have resource usage beyond this tier will fail (without incurring a charge). if unspecified, this will be set to your project default.\n\n\n# maximumbytesbilled\n\n * type: integer\n * dynamic: ❌\n * required: ❌\n\n> limits the bytes billed for this job.\n\nqueries that will have bytes billed beyond this limit will fail (without incurring a charge). if unspecified, this will be set to your project default.\n\n\n# priority\n\n * type: string\n\n * dynamic: ❌\n\n * required: ❌\n\n * default: interactive\n\n * possible values:\n   \n   * interactive\n   * batch\n\n> sets a priority for the query.\n\n\n# projectid\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the gcp project id\n\n\n# retryauto\n\n * type: ====\n * dynamic: ❓\n * required: ❌\n\n\n# retrymessages\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n * default: [due to concurrent update, retrying the job may solve the problem]\n\n> the message that are valid for a automatic retry.\n\nmessage is tested as a substring of the full message and case insensitive\n\n\n# retryreasons\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n * default: [ratelimitexceeded, jobbackenderror, internalerror, jobinternalerror]\n\n> the reason that are valid for a automatic retry.\n\n\n# schemaupdateoptions\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> [experimental] options allowing the schema of the destination table to be updated as a side effect of the query job\n\nschema update options are supported in two cases: * when writedisposition is write_append;\n\n * when writedisposition is write_truncate and the destination table is a partition of a table, specified by partition decorators.\n   for normal tables, write_truncate will always overwrite the schema.\n\n\n# scopes\n\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n * default: [https://www.googleapis.com/auth/cloud-platform]\n\n> the gcp scopes to used\n\n\n# serviceaccount\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the gcp service account key\n\n\n# sql\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the sql query to run\n\n\n# store\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: false\n\n> whether to store the data from the query result into an ion serialized data file\n\n\n# timepartitioningfield\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the time partitioning specification for the destination table\n\n\n# uselegacysql\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n * default: false\n\n> sets whether to use bigquery\'s legacy sql dialect for this query.\n\na valid query will return a mostly empty response with some processing statistics, while an invalid query will return the same error it would if it wasn\'t a dry run.\n\n\n# usequerycache\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n\n> sets whether to look for the result in the query cache.\n\nthe query cache is a best-effort cache that will be flushed whenever tables in the query are modified. moreover, the query cache is only available when destinationtable is not set\n\n\n# writedisposition\n\n * type: string\n\n * dynamic: ❌\n\n * required: ❌\n\n * possible values:\n   \n   * write_truncate\n   * write_append\n   * write_empty\n\n> the action that should occur if the destination table already exists\n\n\n# outputs\n\n\n# jobid\n\n * type: string\n\n> the job id\n\n\n# row\n\n * type: object\n\n> map containing the first row of fetched data\n\nonly populated if \'fetchone\' parameter is set to true.\n\n\n# rows\n\n * type: array\n * subtype: object\n\n> list containing the fetched data\n\nonly populated if \'fetch\' parameter is set to true.\n\n\n# size\n\n * type: integer\n\n> the size of the rows fetch\n\n\n# uri\n\n * type: string\n\n> the uri of store result\n\nonly populated if \'store\' is set to true.\n\n\n# definitions\n\n\n# random-1\n\n# maxattempt\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n * minimum: &gt;= 1\n\n# maxduration\n\n * type: string\n * dynamic: ❓\n * required: ❌\n * format: duration\n\n# maxinterval\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n * format: duration\n\n# mininterval\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n * format: duration\n\n# warningonretry\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: false\n\n\n# random-2\n\n\n# exponential-2\n\n\n# constant-1\n\n# interval\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n * format: duration\n\n# maxattempt\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n * minimum: &gt;= 1\n\n# maxduration\n\n * type: string\n * dynamic: ❓\n * required: ❌\n * format: duration\n\n# warningonretry\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: false\n\n\n# exponential-1\n\n# delayfactor\n\n * type: number\n * dynamic: ❓\n * required: ❌\n\n# interval\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n * format: duration\n\n# maxattempt\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n * minimum: &gt;= 1\n\n# maxduration\n\n * type: string\n * dynamic: ❓\n * required: ❌\n * format: duration\n\n# maxinterval\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n * format: duration\n\n# warningonretry\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: false\n\n\n# constant-2',charsets:{cjk:!0}},{title:"StorageWrite",frontmatter:{title:"StorageWrite",editLink:!1,description:"Load an kestra internal storage file on bigquery using [BigQuery Storage API](https://cloud.google.com/bigquery/docs/write-api#write_to_a_stream_in_committed_mode)",icon:"PHN2ZyBpZD0iUHJvZHVjdF9JY29ucyIgZGF0YS1uYW1lPSJQcm9kdWN0IEljb25zIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCAyNCAyNCI+PGRlZnM+PHN0eWxlPi5jbHMtMXtmaWxsOiNhZWNiZmE7fS5jbHMtMSwuY2xzLTIsLmNscy0ze2ZpbGwtcnVsZTpldmVub2RkO30uY2xzLTJ7ZmlsbDojNjY5ZGY2O30uY2xzLTN7ZmlsbDojNDI4NWY0O308L3N0eWxlPjwvZGVmcz48dGl0bGU+SWNvbl8yNHB4X0NvbG9yX0JpZ1F1ZXJ5PC90aXRsZT48ZyBpZD0iU2hhcGUiPjxwYXRoIGNsYXNzPSJjbHMtMSIgZD0iTTYuNzMsMTAuODN2Mi42M0E0LjkxLDQuOTEsMCwwLDAsOC40NCwxNS4yVjEwLjgzWiIvPjxwYXRoIGNsYXNzPSJjbHMtMiIgZD0iTTkuODksOC40MXY3LjUzQTcuNjIsNy42MiwwLDAsMCwxMSwxNiw4LDgsMCwwLDAsMTIsMTZWOC40MVoiLz48cGF0aCBjbGFzcz0iY2xzLTEiIGQ9Ik0xMy42NCwxMS44NnYzLjI5YTUsNSwwLDAsMCwxLjctMS44MlYxMS44NloiLz48cGF0aCBjbGFzcz0iY2xzLTMiIGQ9Ik0xNy43NCwxNi4zMmwtMS40MiwxLjQyYS40Mi40MiwwLDAsMCwwLC42bDMuNTQsMy41NGEuNDIuNDIsMCwwLDAsLjU5LDBsMS40My0xLjQzYS40Mi40MiwwLDAsMCwwLS41OWwtMy41NC0zLjU0YS40Mi40MiwwLDAsMC0uNiwwIi8+PHBhdGggY2xhc3M9ImNscy0yIiBkPSJNMTEsMmE5LDksMCwxLDAsOSw5LDksOSwwLDAsMC05LTltMCwxNS42OUE2LjY4LDYuNjgsMCwxLDEsMTcuNjksMTEsNi42OCw2LjY4LDAsMCwxLDExLDE3LjY5Ii8+PC9nPjwvc3ZnPg==",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"StorageWrite"},{property:"og:description",content:"Load an kestra internal storage file on bigquery using [BigQuery Storage API](https://cloud.google.com/bigquery/docs/write-api#write_to_a_stream_in_committed_mode) | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-gcp/tasks/bigquery/io.kestra.plugin.gcp.bigquery.StorageWrite.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"StorageWrite"},{name:"twitter:description",content:"Load an kestra internal storage file on bigquery using [BigQuery Storage API](https://cloud.google.com/bigquery/docs/write-api#write_to_a_stream_in_committed_mode) | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-gcp/tasks/bigquery/io.kestra.plugin.gcp.bigquery.StorageWrite.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-gcp/tasks/bigquery/io.kestra.plugin.gcp.bigquery.StorageWrite.html",relativePath:"plugins/plugin-gcp/tasks/bigquery/io.kestra.plugin.gcp.bigquery.StorageWrite.md",key:"v-70e9faad",path:"/plugins/plugin-gcp/tasks/bigquery/io.kestra.plugin.gcp.bigquery.StorageWrite.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:149},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:342},{level:3,title:"bufferSize",slug:"buffersize",normalizedTitle:"buffersize",charIndex:357},{level:3,title:"destinationTable",slug:"destinationtable",normalizedTitle:"destinationtable",charIndex:261},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:230},{level:3,title:"location",slug:"location",normalizedTitle:"location",charIndex:747},{level:3,title:"projectId",slug:"projectid",normalizedTitle:"projectid",charIndex:962},{level:3,title:"scopes",slug:"scopes",normalizedTitle:"scopes",charIndex:1044},{level:3,title:"serviceAccount",slug:"serviceaccount",normalizedTitle:"serviceaccount",charIndex:1206},{level:3,title:"writeStreamType",slug:"writestreamtype",normalizedTitle:"writestreamtype",charIndex:312},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1493},{level:3,title:"commitTime",slug:"committime",normalizedTitle:"committime",charIndex:1505},{level:3,title:"rows",slug:"rows",normalizedTitle:"rows",charIndex:1606},{level:3,title:"rowsCount",slug:"rowscount",normalizedTitle:"rowscount",charIndex:1647},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:1747}],headersStr:"Examples Properties bufferSize destinationTable from location projectId scopes serviceAccount writeStreamType Outputs commitTime rows rowsCount Definitions",content:'StorageWrite\n\ntype: "io.kestra.plugin.gcp.bigquery.StorageWrite"\n\n\n> Load an kestra internal storage file on bigquery using BigQuery Storage API\n\n\n# Examples\n\nid: "storage_write"\ntype: "io.kestra.plugin.gcp.bigquery.StorageWrite"\nfrom: "{{ outputs.read.uri }}"\ndestinationTable: "my_project.my_dataset.my_table"\nwriteStreamType: DEFAULT\n\n\n\n# Properties\n\n\n# bufferSize\n\n * Type: integer\n * Dynamic: ❌\n * Required: ✔️\n * Default: 1000\n\n> The number of records to send on each query\n\n\n# destinationTable\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n * Min length: 1\n\n> The table where to load data\n\nThe table must be created beefore.\n\n\n# from\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The fully-qualified URIs that point to source data\n\n\n# location\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The geographic location where the dataset should reside\n\nThis property is experimental and might be subject to change or removed.\n\nSee Dataset Location\n\n\n# projectId\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The GCP project id\n\n\n# scopes\n\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n * Default: [https://www.googleapis.com/auth/cloud-platform]\n\n> The GCP scopes to used\n\n\n# serviceAccount\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The GCP service account key\n\n\n# writeStreamType\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ✔️\n\n * Default: DEFAULT\n\n * Possible Values:\n   \n   * DEFAULT\n   * COMMITTED\n   * PENDING\n\n> The type of write stream to use\n\n\n# Outputs\n\n\n# commitTime\n\n * Type: string\n\n> Commit time reported by BigQuery, only on PENDING writeStreamType\n\n\n# rows\n\n * Type: integer\n\n> Rows count\n\n\n# rowsCount\n\n * Type: integer\n\n> Rows count reported by BigQuery, only on PENDING writeStreamType\n\n\n# Definitions',normalizedContent:'storagewrite\n\ntype: "io.kestra.plugin.gcp.bigquery.storagewrite"\n\n\n> load an kestra internal storage file on bigquery using bigquery storage api\n\n\n# examples\n\nid: "storage_write"\ntype: "io.kestra.plugin.gcp.bigquery.storagewrite"\nfrom: "{{ outputs.read.uri }}"\ndestinationtable: "my_project.my_dataset.my_table"\nwritestreamtype: default\n\n\n\n# properties\n\n\n# buffersize\n\n * type: integer\n * dynamic: ❌\n * required: ✔️\n * default: 1000\n\n> the number of records to send on each query\n\n\n# destinationtable\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n * min length: 1\n\n> the table where to load data\n\nthe table must be created beefore.\n\n\n# from\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the fully-qualified uris that point to source data\n\n\n# location\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the geographic location where the dataset should reside\n\nthis property is experimental and might be subject to change or removed.\n\nsee dataset location\n\n\n# projectid\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the gcp project id\n\n\n# scopes\n\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n * default: [https://www.googleapis.com/auth/cloud-platform]\n\n> the gcp scopes to used\n\n\n# serviceaccount\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the gcp service account key\n\n\n# writestreamtype\n\n * type: string\n\n * dynamic: ❓\n\n * required: ✔️\n\n * default: default\n\n * possible values:\n   \n   * default\n   * committed\n   * pending\n\n> the type of write stream to use\n\n\n# outputs\n\n\n# committime\n\n * type: string\n\n> commit time reported by bigquery, only on pending writestreamtype\n\n\n# rows\n\n * type: integer\n\n> rows count\n\n\n# rowscount\n\n * type: integer\n\n> rows count reported by bigquery, only on pending writestreamtype\n\n\n# definitions',charsets:{}},{title:"TableMetadata",frontmatter:{title:"TableMetadata",editLink:!1,description:"Get table metadata",icon:"PHN2ZyBpZD0iUHJvZHVjdF9JY29ucyIgZGF0YS1uYW1lPSJQcm9kdWN0IEljb25zIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCAyNCAyNCI+PGRlZnM+PHN0eWxlPi5jbHMtMXtmaWxsOiNhZWNiZmE7fS5jbHMtMSwuY2xzLTIsLmNscy0ze2ZpbGwtcnVsZTpldmVub2RkO30uY2xzLTJ7ZmlsbDojNjY5ZGY2O30uY2xzLTN7ZmlsbDojNDI4NWY0O308L3N0eWxlPjwvZGVmcz48dGl0bGU+SWNvbl8yNHB4X0NvbG9yX0JpZ1F1ZXJ5PC90aXRsZT48ZyBpZD0iU2hhcGUiPjxwYXRoIGNsYXNzPSJjbHMtMSIgZD0iTTYuNzMsMTAuODN2Mi42M0E0LjkxLDQuOTEsMCwwLDAsOC40NCwxNS4yVjEwLjgzWiIvPjxwYXRoIGNsYXNzPSJjbHMtMiIgZD0iTTkuODksOC40MXY3LjUzQTcuNjIsNy42MiwwLDAsMCwxMSwxNiw4LDgsMCwwLDAsMTIsMTZWOC40MVoiLz48cGF0aCBjbGFzcz0iY2xzLTEiIGQ9Ik0xMy42NCwxMS44NnYzLjI5YTUsNSwwLDAsMCwxLjctMS44MlYxMS44NloiLz48cGF0aCBjbGFzcz0iY2xzLTMiIGQ9Ik0xNy43NCwxNi4zMmwtMS40MiwxLjQyYS40Mi40MiwwLDAsMCwwLC42bDMuNTQsMy41NGEuNDIuNDIsMCwwLDAsLjU5LDBsMS40My0xLjQzYS40Mi40MiwwLDAsMCwwLS41OWwtMy41NC0zLjU0YS40Mi40MiwwLDAsMC0uNiwwIi8+PHBhdGggY2xhc3M9ImNscy0yIiBkPSJNMTEsMmE5LDksMCwxLDAsOSw5LDksOSwwLDAsMC05LTltMCwxNS42OUE2LjY4LDYuNjgsMCwxLDEsMTcuNjksMTEsNi42OCw2LjY4LDAsMCwxLDExLDE3LjY5Ii8+PC9nPjwvc3ZnPg==",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"TableMetadata"},{property:"og:description",content:"Get table metadata | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-gcp/tasks/bigquery/io.kestra.plugin.gcp.bigquery.TableMetadata.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"TableMetadata"},{name:"twitter:description",content:"Get table metadata | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-gcp/tasks/bigquery/io.kestra.plugin.gcp.bigquery.TableMetadata.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-gcp/tasks/bigquery/io.kestra.plugin.gcp.bigquery.TableMetadata.html",relativePath:"plugins/plugin-gcp/tasks/bigquery/io.kestra.plugin.gcp.bigquery.TableMetadata.md",key:"v-3ecdebba",path:"/plugins/plugin-gcp/tasks/bigquery/io.kestra.plugin.gcp.bigquery.TableMetadata.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:94},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:240},{level:3,title:"dataset",slug:"dataset",normalizedTitle:"dataset",charIndex:199},{level:3,title:"ifNotExists",slug:"ifnotexists",normalizedTitle:"ifnotexists",charIndex:348},{level:3,title:"location",slug:"location",normalizedTitle:"location",charIndex:616},{level:3,title:"projectId",slug:"projectid",normalizedTitle:"projectid",charIndex:177},{level:3,title:"retryAuto",slug:"retryauto",normalizedTitle:"retryauto",charIndex:913},{level:3,title:"retryMessages",slug:"retrymessages",normalizedTitle:"retrymessages",charIndex:971},{level:3,title:"retryReasons",slug:"retryreasons",normalizedTitle:"retryreasons",charIndex:1261},{level:3,title:"scopes",slug:"scopes",normalizedTitle:"scopes",charIndex:1477},{level:3,title:"serviceAccount",slug:"serviceaccount",normalizedTitle:"serviceaccount",charIndex:1639},{level:3,title:"table",slug:"table",normalizedTitle:"table",charIndex:75},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1822},{level:3,title:"creationTime",slug:"creationtime",normalizedTitle:"creationtime",charIndex:1834},{level:3,title:"datasetId",slug:"datasetid",normalizedTitle:"datasetid",charIndex:1908},{level:3,title:"definition",slug:"definition",normalizedTitle:"definition",charIndex:1959},{level:3,title:"description",slug:"description",normalizedTitle:"description",charIndex:2024},{level:3,title:"encryptionConfiguration",slug:"encryptionconfiguration",normalizedTitle:"encryptionconfiguration",charIndex:2104},{level:3,title:"etag",slug:"etag",normalizedTitle:"etag",charIndex:2198},{level:3,title:"expirationTime",slug:"expirationtime",normalizedTitle:"expirationtime",charIndex:2258},{level:3,title:"friendlyName",slug:"friendlyname",normalizedTitle:"friendlyname",charIndex:2452},{level:3,title:"generatedId",slug:"generatedid",normalizedTitle:"generatedid",charIndex:2526},{level:3,title:"labels",slug:"labels",normalizedTitle:"labels",charIndex:2601},{level:3,title:"lastModifiedTime",slug:"lastmodifiedtime",normalizedTitle:"lastmodifiedtime",charIndex:2677},{level:3,title:"numBytes",slug:"numbytes",normalizedTitle:"numbytes",charIndex:2761},{level:3,title:"numLongTermBytes",slug:"numlongtermbytes",normalizedTitle:"numlongtermbytes",charIndex:2827},{level:3,title:"numRows",slug:"numrows",normalizedTitle:"numrows",charIndex:2950},{level:3,title:"projectId",slug:"projectid-2",normalizedTitle:"projectid",charIndex:177},{level:3,title:"requirePartitionFilter",slug:"requirepartitionfilter",normalizedTitle:"requirepartitionfilter",charIndex:3075},{level:3,title:"selfLink",slug:"selflink",normalizedTitle:"selflink",charIndex:3243},{level:3,title:"table",slug:"table-2",normalizedTitle:"table",charIndex:75},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:3433},{level:3,title:"MaterializedViewDefinition",slug:"materializedviewdefinition",normalizedTitle:"materializedviewdefinition",charIndex:3449},{level:3,title:"TableDefinition",slug:"tabledefinition",normalizedTitle:"tabledefinition",charIndex:1980},{level:3,title:"TimePartitioning",slug:"timepartitioning",normalizedTitle:"timepartitioning",charIndex:4666},{level:3,title:"StandardTableDefinition",slug:"standardtabledefinition-2",normalizedTitle:"standardtabledefinition",charIndex:4449},{level:3,title:"Random-1",slug:"random-1",normalizedTitle:"random-1",charIndex:6113},{level:3,title:"Random-2",slug:"random-2",normalizedTitle:"random-2",charIndex:6535},{level:3,title:"Constant-1",slug:"constant-1",normalizedTitle:"constant-1",charIndex:6548},{level:3,title:"Field",slug:"field-2",normalizedTitle:"field",charIndex:6887},{level:3,title:"UserDefinedFunction",slug:"userdefinedfunction",normalizedTitle:"userdefinedfunction",charIndex:7504},{level:3,title:"Constant-2",slug:"constant-2",normalizedTitle:"constant-2",charIndex:7935},{level:3,title:"ExternalTableDefinition",slug:"externaltabledefinition-2",normalizedTitle:"externaltabledefinition",charIndex:4058},{level:3,title:"StreamingBuffer",slug:"streamingbuffer-2",normalizedTitle:"streamingbuffer",charIndex:5751},{level:3,title:"Range",slug:"range",normalizedTitle:"range",charIndex:5558},{level:3,title:"PolicyTags",slug:"policytags-2",normalizedTitle:"policytags",charIndex:7263},{level:3,title:"RangePartitioning",slug:"rangepartitioning-2",normalizedTitle:"rangepartitioning",charIndex:5558},{level:3,title:"Exponential-2",slug:"exponential-2",normalizedTitle:"exponential-2",charIndex:10235},{level:3,title:"Exponential-1",slug:"exponential-1",normalizedTitle:"exponential-1",charIndex:10253},{level:3,title:"Schema",slug:"schema-2",normalizedTitle:"schema",charIndex:4353},{level:3,title:"ViewDefinition",slug:"viewdefinition-2",normalizedTitle:"viewdefinition",charIndex:3461},{level:3,title:"EncryptionConfiguration",slug:"encryptionconfiguration-2",normalizedTitle:"encryptionconfiguration",charIndex:2138}],headersStr:"Examples Properties dataset ifNotExists location projectId retryAuto retryMessages retryReasons scopes serviceAccount table Outputs creationTime datasetId definition description encryptionConfiguration etag expirationTime friendlyName generatedId labels lastModifiedTime numBytes numLongTermBytes numRows projectId requirePartitionFilter selfLink table Definitions MaterializedViewDefinition TableDefinition TimePartitioning StandardTableDefinition Random-1 Random-2 Constant-1 Field UserDefinedFunction Constant-2 ExternalTableDefinition StreamingBuffer Range PolicyTags RangePartitioning Exponential-2 Exponential-1 Schema ViewDefinition EncryptionConfiguration",content:"TableMetadata\n\ntype: \"io.kestra.plugin.gcp.bigquery.TableMetadata\"\n\n\n> Get table metadata\n\n\n# Examples\n\nid: \"table_metadata\"\ntype: \"io.kestra.plugin.gcp.bigquery.TableMetadata\"\nprojectId: my-project\ndataset: my-dataset\ntable: my-table\n\n\n\n# Properties\n\n\n# dataset\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The dataset's user-defined id\n\n\n# ifNotExists\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Default: ERROR\n\n * Possible Values:\n   \n   * ERROR\n   * SKIP\n\n> Policy to apply if a table don't exists.\n\nIf the policy is SKIP, the output will contain only null value, otherwize an error is raised.\n\n\n# location\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The geographic location where the dataset should reside\n\nThis property is experimental and might be subject to change or removed.\n\nSee Dataset Location\n\n\n# projectId\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The GCP project id\n\n\n# retryAuto\n\n * Type: ====\n * Dynamic: ❓\n * Required: ❌\n\n\n# retryMessages\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: [due to concurrent update, Retrying the job may solve the problem]\n\n> The message that are valid for a automatic retry.\n\nMessage is tested as a substring of the full message and case insensitive\n\n\n# retryReasons\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: [rateLimitExceeded, jobBackendError, internalError, jobInternalError]\n\n> The reason that are valid for a automatic retry.\n\n\n# scopes\n\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n * Default: [https://www.googleapis.com/auth/cloud-platform]\n\n> The GCP scopes to used\n\n\n# serviceAccount\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The GCP service account key\n\n\n# table\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The table user-defined id\n\n\n# Outputs\n\n\n# creationTime\n\n * Type: string\n\n> The time when this table was created\n\n\n# datasetId\n\n * Type: string\n\n> The dataset's id\n\n\n# definition\n\n * Type: TableDefinition\n\n> The table definition\n\n\n# description\n\n * Type: string\n\n> The user-friendly description for the table\n\n\n# encryptionConfiguration\n\n * Type: EncryptionConfiguration\n\n> The encryption configuration\n\n\n# etag\n\n * Type: string\n\n> The hash of the table resource\n\n\n# expirationTime\n\n * Type: string\n\n> Returns the time when this table expires\n\nIf not present, the table will persist indefinitely. Expired tables will be deleted and their storage reclaimed.\n\n\n# friendlyName\n\n * Type: string\n\n> The user-friendly name for the table\n\n\n# generatedId\n\n * Type: string\n\n> The service-generated id for the table\n\n\n# labels\n\n * Type: object\n\n> Return a map for labels applied to the table\n\n\n# lastModifiedTime\n\n * Type: string\n\n> The time when this table was last modified\n\n\n# numBytes\n\n * Type: integer\n\n> The size of this table in bytes\n\n\n# numLongTermBytes\n\n * Type: integer\n\n> The number of bytes considered \"long-term storage\" for reduced billing purposes.\n\n\n# numRows\n\n * Type: integer\n\n> The number of rows of data in this table\n\n\n# projectId\n\n * Type: string\n\n> The project's id\n\n\n# requirePartitionFilter\n\n * Type: boolean\n\n> Return true if a partition filter (that can be used for partition elimination) is required for queries over this table.\n\n\n# selfLink\n\n * Type: string\n\n> The URL that can be used to access the resource again. The returned URL can be used for get or update requests.\n\n\n# table\n\n * Type: string\n\n> The table name\n\n\n# Definitions\n\n\n# MaterializedViewDefinition\n\n# enableRefresh\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n\n> is enable automatic refresh of the materialized view when the base table is updated\n\n# lastRefreshDate\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Date when this materialized view was last modified\n\n# query\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> the query whose result is persisted\n\n# refreshInterval\n\n * Type: string\n * Dynamic: ❌\n * Required: ❌\n * Format: duration\n\n> the maximum frequency at which this materialized view will be refreshed\n\n\n# TableDefinition\n\n# externalTableDefinition\n\n * Type: ExternalTableDefinition\n * Dynamic: ❓\n * Required: ❌\n\n> the external table definition if the type is EXTERNAL\n\n# materializedViewDefinition\n\n * Type: MaterializedViewDefinition\n * Dynamic: ❓\n * Required: ❌\n\n> the materialized view definition if the type is MATERIALIZED_VIEW\n\n# schema\n\n * Type: Schema\n * Dynamic: ❓\n * Required: ❌\n\n> the table's schema.\n\n# standardTableDefinition\n\n * Type: StandardTableDefinition\n * Dynamic: ❓\n * Required: ❌\n\n> the table definition if the type is TABLE\n\n# viewDefinition\n\n * Type: ViewDefinition\n * Dynamic: ❓\n * Required: ❌\n\n> the view definition if the type is VIEW\n\n\n# TimePartitioning\n\n# expiration\n\n * Type: string\n * Dynamic: ❌\n * Required: ❌\n * Format: duration\n\n> the number of milliseconds for which to keep the storage for a partition. When expired, the storage for the partition is reclaimed. If null, the partion does not expire.\n\n# field\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> if not set, the table is partitioned by pseudo column '_PARTITIONTIME'; if set, the table is partitioned by this field.\n\n# requirePartitionFilter\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n\n> If set to true, queries over this table require a partition filter (that can be used for partition elimination) to be specified.\n\n\n# StandardTableDefinition\n\n# clustering\n\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n\n> Returns the clustering configuration for this table. If {@code null}, the table is not clustered.\n\n# rangePartitioning\n\n * Type: RangePartitioning\n * Dynamic: ❓\n * Required: ❌\n\n> Returns the range partitioning configuration for this table. If {@code null}, the table is not range-partitioned.\n\n# streamingBuffer\n\n * Type: StreamingBuffer\n * Dynamic: ❓\n * Required: ❌\n\n> Returns information on the table's streaming buffer if any exists. Returns {@code null} if no streaming buffer exists.\n\n# timePartitioning\n\n * Type: TimePartitioning\n * Dynamic: ❓\n * Required: ❌\n\n> Returns the time partitioning configuration for this table. If {@code null}, the table is not time-partitioned.\n\n\n# Random-1\n\n# maxAttempt\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n * Minimum: &gt;= 1\n\n# maxDuration\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Format: duration\n\n# maxInterval\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n * Format: duration\n\n# minInterval\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n * Format: duration\n\n# warningOnRetry\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: false\n\n\n# Random-2\n\n\n# Constant-1\n\n# interval\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n * Format: duration\n\n# maxAttempt\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n * Minimum: &gt;= 1\n\n# maxDuration\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Format: duration\n\n# warningOnRetry\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: false\n\n\n# Field\n\n# description\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> the field description.\n\n# mode\n\n * Type: string\n\n * Dynamic: ✔️\n\n * Required: ❌\n\n * Possible Values:\n   \n   * NULLABLE\n   * REQUIRED\n   * REPEATED\n\n> the field mode.\n\nBy default Field.Mode.NULLABLE is used.\n\n# name\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> the field name.\n\n# policyTags\n\n * Type: PolicyTags\n * Dynamic: ✔️\n * Required: ❌\n\n> the policy tags for the field.\n\n# subFields\n\n * Type: array\n * SubType: Field\n * Dynamic: ✔️\n * Required: ❌\n\n> the list of sub-fields if type is a LegacySQLType.RECORD. Returns null otherwise.\n\n\n# UserDefinedFunction\n\n# Type of UserDefinedFunction\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\nIf type is UserDefinedFunction.Type.INLINE this method returns a code blob.\nIf type is UserDefinedFunction.Type.FROM_URI the method returns a Google Cloud Storage URI (e.g. gs://bucket/path)\n\n# the type of user defined function.\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ❌\n\n * Possible Values:\n   \n   * INLINE\n   * FROM_URI\n\n\n# Constant-2\n\n\n# ExternalTableDefinition\n\n# autodetect\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n> whether automatic detection of schema and format options should be performed.\n\n# compression\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> the compression type of the data source.\n\n# formatType\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Possible Values:\n   \n   * CSV\n   * JSON\n   * BIGTABLE\n   * DATASTORE_BACKUP\n   * AVRO\n   * GOOGLE_SHEETS\n   * PARQUET\n   * ORC\n\n> the source format, and possibly some parsing options, of the external data.\n\n# ignoreUnknownValues\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n> whether BigQuery should allow extra values that are not represented in the table schema.\n\nIf true, the extra values are ignored. If false, records with extra columns are treated as bad records, and if there are too many bad records, an invalid error is returned in the job result.\n\n# maxBadRecords\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n> the maximum number of bad records that BigQuery can ignore when reading data.\n\nIf the number of bad records exceeds this value, an invalid error is returned in the job result.\n\n# sourceUris\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> the fully-qualified URIs that point to your data in Google Cloud Storage.\n\nEach URI can\n\n * contain one '*' wildcard character that must come after the bucket's name. Size limits related\n * to load jobs apply to external data sources, plus an additional limit of 10 GB maximum size\n * across all URIs.\n\n\n# StreamingBuffer\n\n# estimatedBytes\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n# estimatedRows\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n# oldestEntryTime\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n\n# Range\n\n# the end of range partitioning.\n\n * Type: integer\n * Dynamic: ❌\n * Required: ❌\n\n# the start of range partitioning.\n\n * Type: integer\n * Dynamic: ❌\n * Required: ❌\n\n# the width of each interval.\n\n * Type: integer\n * Dynamic: ❌\n * Required: ❌\n\n\n# PolicyTags\n\n# the policy tags names.\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n\n# RangePartitioning\n\n# the range of range partitioning.\n\n * Type: Range\n * Dynamic: ❓\n * Required: ❌\n\n# the range partitioning field.\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n\n# Exponential-2\n\n\n# Exponential-1\n\n# delayFactor\n\n * Type: number\n * Dynamic: ❓\n * Required: ❌\n\n# interval\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n * Format: duration\n\n# maxAttempt\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n * Minimum: &gt;= 1\n\n# maxDuration\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Format: duration\n\n# maxInterval\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n * Format: duration\n\n# warningOnRetry\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: false\n\n\n# Schema\n\n# the fields associated to this schema.\n\n * Type: array\n * SubType: Field\n * Dynamic: ❓\n * Required: ❌\n\n\n# ViewDefinition\n\n# query\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The query whose result is persisted\n\n# viewUserDefinedFunctions\n\n * Type: array\n * SubType: UserDefinedFunction\n * Dynamic: ❓\n * Required: ❌\n\n> User defined functions that can be used by query. Returns null if not set.\n\n\n# EncryptionConfiguration\n\n# the Kms key name\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌",normalizedContent:"tablemetadata\n\ntype: \"io.kestra.plugin.gcp.bigquery.tablemetadata\"\n\n\n> get table metadata\n\n\n# examples\n\nid: \"table_metadata\"\ntype: \"io.kestra.plugin.gcp.bigquery.tablemetadata\"\nprojectid: my-project\ndataset: my-dataset\ntable: my-table\n\n\n\n# properties\n\n\n# dataset\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the dataset's user-defined id\n\n\n# ifnotexists\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * default: error\n\n * possible values:\n   \n   * error\n   * skip\n\n> policy to apply if a table don't exists.\n\nif the policy is skip, the output will contain only null value, otherwize an error is raised.\n\n\n# location\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the geographic location where the dataset should reside\n\nthis property is experimental and might be subject to change or removed.\n\nsee dataset location\n\n\n# projectid\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the gcp project id\n\n\n# retryauto\n\n * type: ====\n * dynamic: ❓\n * required: ❌\n\n\n# retrymessages\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n * default: [due to concurrent update, retrying the job may solve the problem]\n\n> the message that are valid for a automatic retry.\n\nmessage is tested as a substring of the full message and case insensitive\n\n\n# retryreasons\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n * default: [ratelimitexceeded, jobbackenderror, internalerror, jobinternalerror]\n\n> the reason that are valid for a automatic retry.\n\n\n# scopes\n\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n * default: [https://www.googleapis.com/auth/cloud-platform]\n\n> the gcp scopes to used\n\n\n# serviceaccount\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the gcp service account key\n\n\n# table\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the table user-defined id\n\n\n# outputs\n\n\n# creationtime\n\n * type: string\n\n> the time when this table was created\n\n\n# datasetid\n\n * type: string\n\n> the dataset's id\n\n\n# definition\n\n * type: tabledefinition\n\n> the table definition\n\n\n# description\n\n * type: string\n\n> the user-friendly description for the table\n\n\n# encryptionconfiguration\n\n * type: encryptionconfiguration\n\n> the encryption configuration\n\n\n# etag\n\n * type: string\n\n> the hash of the table resource\n\n\n# expirationtime\n\n * type: string\n\n> returns the time when this table expires\n\nif not present, the table will persist indefinitely. expired tables will be deleted and their storage reclaimed.\n\n\n# friendlyname\n\n * type: string\n\n> the user-friendly name for the table\n\n\n# generatedid\n\n * type: string\n\n> the service-generated id for the table\n\n\n# labels\n\n * type: object\n\n> return a map for labels applied to the table\n\n\n# lastmodifiedtime\n\n * type: string\n\n> the time when this table was last modified\n\n\n# numbytes\n\n * type: integer\n\n> the size of this table in bytes\n\n\n# numlongtermbytes\n\n * type: integer\n\n> the number of bytes considered \"long-term storage\" for reduced billing purposes.\n\n\n# numrows\n\n * type: integer\n\n> the number of rows of data in this table\n\n\n# projectid\n\n * type: string\n\n> the project's id\n\n\n# requirepartitionfilter\n\n * type: boolean\n\n> return true if a partition filter (that can be used for partition elimination) is required for queries over this table.\n\n\n# selflink\n\n * type: string\n\n> the url that can be used to access the resource again. the returned url can be used for get or update requests.\n\n\n# table\n\n * type: string\n\n> the table name\n\n\n# definitions\n\n\n# materializedviewdefinition\n\n# enablerefresh\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n\n> is enable automatic refresh of the materialized view when the base table is updated\n\n# lastrefreshdate\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> date when this materialized view was last modified\n\n# query\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the query whose result is persisted\n\n# refreshinterval\n\n * type: string\n * dynamic: ❌\n * required: ❌\n * format: duration\n\n> the maximum frequency at which this materialized view will be refreshed\n\n\n# tabledefinition\n\n# externaltabledefinition\n\n * type: externaltabledefinition\n * dynamic: ❓\n * required: ❌\n\n> the external table definition if the type is external\n\n# materializedviewdefinition\n\n * type: materializedviewdefinition\n * dynamic: ❓\n * required: ❌\n\n> the materialized view definition if the type is materialized_view\n\n# schema\n\n * type: schema\n * dynamic: ❓\n * required: ❌\n\n> the table's schema.\n\n# standardtabledefinition\n\n * type: standardtabledefinition\n * dynamic: ❓\n * required: ❌\n\n> the table definition if the type is table\n\n# viewdefinition\n\n * type: viewdefinition\n * dynamic: ❓\n * required: ❌\n\n> the view definition if the type is view\n\n\n# timepartitioning\n\n# expiration\n\n * type: string\n * dynamic: ❌\n * required: ❌\n * format: duration\n\n> the number of milliseconds for which to keep the storage for a partition. when expired, the storage for the partition is reclaimed. if null, the partion does not expire.\n\n# field\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> if not set, the table is partitioned by pseudo column '_partitiontime'; if set, the table is partitioned by this field.\n\n# requirepartitionfilter\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n\n> if set to true, queries over this table require a partition filter (that can be used for partition elimination) to be specified.\n\n\n# standardtabledefinition\n\n# clustering\n\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n\n> returns the clustering configuration for this table. if {@code null}, the table is not clustered.\n\n# rangepartitioning\n\n * type: rangepartitioning\n * dynamic: ❓\n * required: ❌\n\n> returns the range partitioning configuration for this table. if {@code null}, the table is not range-partitioned.\n\n# streamingbuffer\n\n * type: streamingbuffer\n * dynamic: ❓\n * required: ❌\n\n> returns information on the table's streaming buffer if any exists. returns {@code null} if no streaming buffer exists.\n\n# timepartitioning\n\n * type: timepartitioning\n * dynamic: ❓\n * required: ❌\n\n> returns the time partitioning configuration for this table. if {@code null}, the table is not time-partitioned.\n\n\n# random-1\n\n# maxattempt\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n * minimum: &gt;= 1\n\n# maxduration\n\n * type: string\n * dynamic: ❓\n * required: ❌\n * format: duration\n\n# maxinterval\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n * format: duration\n\n# mininterval\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n * format: duration\n\n# warningonretry\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: false\n\n\n# random-2\n\n\n# constant-1\n\n# interval\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n * format: duration\n\n# maxattempt\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n * minimum: &gt;= 1\n\n# maxduration\n\n * type: string\n * dynamic: ❓\n * required: ❌\n * format: duration\n\n# warningonretry\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: false\n\n\n# field\n\n# description\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the field description.\n\n# mode\n\n * type: string\n\n * dynamic: ✔️\n\n * required: ❌\n\n * possible values:\n   \n   * nullable\n   * required\n   * repeated\n\n> the field mode.\n\nby default field.mode.nullable is used.\n\n# name\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the field name.\n\n# policytags\n\n * type: policytags\n * dynamic: ✔️\n * required: ❌\n\n> the policy tags for the field.\n\n# subfields\n\n * type: array\n * subtype: field\n * dynamic: ✔️\n * required: ❌\n\n> the list of sub-fields if type is a legacysqltype.record. returns null otherwise.\n\n\n# userdefinedfunction\n\n# type of userdefinedfunction\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\nif type is userdefinedfunction.type.inline this method returns a code blob.\nif type is userdefinedfunction.type.from_uri the method returns a google cloud storage uri (e.g. gs://bucket/path)\n\n# the type of user defined function.\n\n * type: string\n\n * dynamic: ❌\n\n * required: ❌\n\n * possible values:\n   \n   * inline\n   * from_uri\n\n\n# constant-2\n\n\n# externaltabledefinition\n\n# autodetect\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n> whether automatic detection of schema and format options should be performed.\n\n# compression\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the compression type of the data source.\n\n# formattype\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * possible values:\n   \n   * csv\n   * json\n   * bigtable\n   * datastore_backup\n   * avro\n   * google_sheets\n   * parquet\n   * orc\n\n> the source format, and possibly some parsing options, of the external data.\n\n# ignoreunknownvalues\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n> whether bigquery should allow extra values that are not represented in the table schema.\n\nif true, the extra values are ignored. if false, records with extra columns are treated as bad records, and if there are too many bad records, an invalid error is returned in the job result.\n\n# maxbadrecords\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n> the maximum number of bad records that bigquery can ignore when reading data.\n\nif the number of bad records exceeds this value, an invalid error is returned in the job result.\n\n# sourceuris\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> the fully-qualified uris that point to your data in google cloud storage.\n\neach uri can\n\n * contain one '*' wildcard character that must come after the bucket's name. size limits related\n * to load jobs apply to external data sources, plus an additional limit of 10 gb maximum size\n * across all uris.\n\n\n# streamingbuffer\n\n# estimatedbytes\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n# estimatedrows\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n# oldestentrytime\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n\n# range\n\n# the end of range partitioning.\n\n * type: integer\n * dynamic: ❌\n * required: ❌\n\n# the start of range partitioning.\n\n * type: integer\n * dynamic: ❌\n * required: ❌\n\n# the width of each interval.\n\n * type: integer\n * dynamic: ❌\n * required: ❌\n\n\n# policytags\n\n# the policy tags names.\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n\n# rangepartitioning\n\n# the range of range partitioning.\n\n * type: range\n * dynamic: ❓\n * required: ❌\n\n# the range partitioning field.\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n\n# exponential-2\n\n\n# exponential-1\n\n# delayfactor\n\n * type: number\n * dynamic: ❓\n * required: ❌\n\n# interval\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n * format: duration\n\n# maxattempt\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n * minimum: &gt;= 1\n\n# maxduration\n\n * type: string\n * dynamic: ❓\n * required: ❌\n * format: duration\n\n# maxinterval\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n * format: duration\n\n# warningonretry\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: false\n\n\n# schema\n\n# the fields associated to this schema.\n\n * type: array\n * subtype: field\n * dynamic: ❓\n * required: ❌\n\n\n# viewdefinition\n\n# query\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the query whose result is persisted\n\n# viewuserdefinedfunctions\n\n * type: array\n * subtype: userdefinedfunction\n * dynamic: ❓\n * required: ❌\n\n> user defined functions that can be used by query. returns null if not set.\n\n\n# encryptionconfiguration\n\n# the kms key name\n\n * type: string\n * dynamic: ✔️\n * required: ❌",charsets:{}},{title:"UpdateDataset",frontmatter:{title:"UpdateDataset",editLink:!1,description:"Update a dataset.",icon:"PHN2ZyBpZD0iUHJvZHVjdF9JY29ucyIgZGF0YS1uYW1lPSJQcm9kdWN0IEljb25zIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCAyNCAyNCI+PGRlZnM+PHN0eWxlPi5jbHMtMXtmaWxsOiNhZWNiZmE7fS5jbHMtMSwuY2xzLTIsLmNscy0ze2ZpbGwtcnVsZTpldmVub2RkO30uY2xzLTJ7ZmlsbDojNjY5ZGY2O30uY2xzLTN7ZmlsbDojNDI4NWY0O308L3N0eWxlPjwvZGVmcz48dGl0bGU+SWNvbl8yNHB4X0NvbG9yX0JpZ1F1ZXJ5PC90aXRsZT48ZyBpZD0iU2hhcGUiPjxwYXRoIGNsYXNzPSJjbHMtMSIgZD0iTTYuNzMsMTAuODN2Mi42M0E0LjkxLDQuOTEsMCwwLDAsOC40NCwxNS4yVjEwLjgzWiIvPjxwYXRoIGNsYXNzPSJjbHMtMiIgZD0iTTkuODksOC40MXY3LjUzQTcuNjIsNy42MiwwLDAsMCwxMSwxNiw4LDgsMCwwLDAsMTIsMTZWOC40MVoiLz48cGF0aCBjbGFzcz0iY2xzLTEiIGQ9Ik0xMy42NCwxMS44NnYzLjI5YTUsNSwwLDAsMCwxLjctMS44MlYxMS44NloiLz48cGF0aCBjbGFzcz0iY2xzLTMiIGQ9Ik0xNy43NCwxNi4zMmwtMS40MiwxLjQyYS40Mi40MiwwLDAsMCwwLC42bDMuNTQsMy41NGEuNDIuNDIsMCwwLDAsLjU5LDBsMS40My0xLjQzYS40Mi40MiwwLDAsMCwwLS41OWwtMy41NC0zLjU0YS40Mi40MiwwLDAsMC0uNiwwIi8+PHBhdGggY2xhc3M9ImNscy0yIiBkPSJNMTEsMmE5LDksMCwxLDAsOSw5LDksOSwwLDAsMC05LTltMCwxNS42OUE2LjY4LDYuNjgsMCwxLDEsMTcuNjksMTEsNi42OCw2LjY4LDAsMCwxLDExLDE3LjY5Ii8+PC9nPjwvc3ZnPg==",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"UpdateDataset"},{property:"og:description",content:"Update a dataset. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-gcp/tasks/bigquery/io.kestra.plugin.gcp.bigquery.UpdateDataset.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"UpdateDataset"},{name:"twitter:description",content:"Update a dataset. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-gcp/tasks/bigquery/io.kestra.plugin.gcp.bigquery.UpdateDataset.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-gcp/tasks/bigquery/io.kestra.plugin.gcp.bigquery.UpdateDataset.html",relativePath:"plugins/plugin-gcp/tasks/bigquery/io.kestra.plugin.gcp.bigquery.UpdateDataset.md",key:"v-3cc1b3e3",path:"/plugins/plugin-gcp/tasks/bigquery/io.kestra.plugin.gcp.bigquery.UpdateDataset.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:93},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:249},{level:3,title:"acl",slug:"acl",normalizedTitle:"acl",charIndex:264},{level:3,title:"defaultEncryptionConfiguration",slug:"defaultencryptionconfiguration",normalizedTitle:"defaultencryptionconfiguration",charIndex:389},{level:3,title:"defaultPartitionExpirationMs",slug:"defaultpartitionexpirationms",normalizedTitle:"defaultpartitionexpirationms",charIndex:731},{level:3,title:"defaultTableLifetime",slug:"defaulttablelifetime",normalizedTitle:"defaulttablelifetime",charIndex:1677},{level:3,title:"description",slug:"description",normalizedTitle:"description",charIndex:2510},{level:3,title:"friendlyName",slug:"friendlyname",normalizedTitle:"friendlyname",charIndex:210},{level:3,title:"labels",slug:"labels",normalizedTitle:"labels",charIndex:2738},{level:3,title:"location",slug:"location",normalizedTitle:"location",charIndex:195},{level:3,title:"name",slug:"name",normalizedTitle:"name",charIndex:176},{level:3,title:"projectId",slug:"projectid",normalizedTitle:"projectid",charIndex:3124},{level:3,title:"retryAuto",slug:"retryauto",normalizedTitle:"retryauto",charIndex:3206},{level:3,title:"retryMessages",slug:"retrymessages",normalizedTitle:"retrymessages",charIndex:3264},{level:3,title:"retryReasons",slug:"retryreasons",normalizedTitle:"retryreasons",charIndex:3554},{level:3,title:"scopes",slug:"scopes",normalizedTitle:"scopes",charIndex:3770},{level:3,title:"serviceAccount",slug:"serviceaccount",normalizedTitle:"serviceaccount",charIndex:3932},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:4028},{level:3,title:"dataset",slug:"dataset",normalizedTitle:"dataset",charIndex:80},{level:3,title:"description",slug:"description-2",normalizedTitle:"description",charIndex:2510},{level:3,title:"friendlyName",slug:"friendlyname-2",normalizedTitle:"friendlyname",charIndex:210},{level:3,title:"location",slug:"location-2",normalizedTitle:"location",charIndex:195},{level:3,title:"project",slug:"project",normalizedTitle:"project",charIndex:3124},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:4491},{level:3,title:"Entity",slug:"entity",normalizedTitle:"entity",charIndex:4507},{level:3,title:"Random-1",slug:"random-1",normalizedTitle:"random-1",charIndex:4645},{level:3,title:"Random-2",slug:"random-2",normalizedTitle:"random-2",charIndex:5067},{level:3,title:"EncryptionConfiguration",slug:"encryptionconfiguration",normalizedTitle:"encryptionconfiguration",charIndex:396},{level:3,title:"Exponential-2",slug:"exponential-2",normalizedTitle:"exponential-2",charIndex:5168},{level:3,title:"Constant-1",slug:"constant-1",normalizedTitle:"constant-1",charIndex:5186},{level:3,title:"Exponential-1",slug:"exponential-1",normalizedTitle:"exponential-1",charIndex:5525},{level:3,title:"Constant-2",slug:"constant-2",normalizedTitle:"constant-2",charIndex:6010},{level:3,title:"AccessControl",slug:"accesscontrol",normalizedTitle:"accesscontrol",charIndex:296}],headersStr:"Examples Properties acl defaultEncryptionConfiguration defaultPartitionExpirationMs defaultTableLifetime description friendlyName labels location name projectId retryAuto retryMessages retryReasons scopes serviceAccount Outputs dataset description friendlyName location project Definitions Entity Random-1 Random-2 EncryptionConfiguration Exponential-2 Constant-1 Exponential-1 Constant-2 AccessControl",content:'UpdateDataset\n\ntype: "io.kestra.plugin.gcp.bigquery.UpdateDataset"\n\n\n> Update a dataset.\n\n\n# Examples\n\nid: "update_dataset"\ntype: "io.kestra.plugin.gcp.bigquery.UpdateDataset"\nname: "my_dataset"\nlocation: "EU"\nfriendlyName: "new Friendly Name"\n\n\n\n# Properties\n\n\n# acl\n\n * Type: array\n * SubType: AccessControl\n * Dynamic: ❓\n * Required: ❌\n\n> The dataset\'s access control configuration\n\n\n# defaultEncryptionConfiguration\n\n * Type: EncryptionConfiguration\n * Dynamic: ❓\n * Required: ❌\n\n> The default encryption key for all tables in the dataset\n\nOnce this property is set, all newly-created partitioned tables in the dataset will have encryption key set to this value, unless table creation request (or query) overrides the key.\n\n\n# defaultPartitionExpirationMs\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n> [Optional] The default partition expiration time for all partitioned tables in the dataset, in milliseconds\n\nOnce this property is set, all newly-created partitioned tables in the dataset will has an expirationMs property in the timePartitioning settings set to this value. Changing the value only affect new tables, not existing ones. The storage in a partition will have an expiration time of its partition time plus this value. Setting this property overrides the use of defaultTableExpirationMs for partitioned tables: only one of defaultTableExpirationMs and defaultPartitionExpirationMs will be used for any new partitioned table. If you provide an explicit timePartitioning.expirationMs when creating or updating a partitioned table, that value takes precedence over the default partition expiration time indicated by this property. The value may be null.\n\n\n# defaultTableLifetime\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n> The default lifetime of all tables in the dataset, in milliseconds\n\nThe minimum value is 3600000 milliseconds (one hour). Once this property is set, all newly-created tables in the dataset will have an expirationTime property set to the creation time plus the value in this property, and changing the value will only affect new tables, not existing ones. When the expirationTime for a given table is reached, that table will be deleted automatically. If a table\'s expirationTime is modified or removed before the table expires, or if you provide an explicit expirationTime when creating a table, that value takes precedence over the default expiration time indicated by this property. This property is experimental and might be subject to change or removed.\n\n\n# description\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Description\n\nA user-friendly description for the dataset.\n\n\n# friendlyName\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> A user-friendly name for the dataset\n\n\n# labels\n\n * Type: object\n * Dynamic: ✔️\n * Required: ❌\n\n> The dataset\'s labels\n\n\n# location\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The geographic location where the dataset should reside\n\nThis property is experimental and might be subject to change or removed.\nSee Dataset Location\n\n\n# name\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The dataset\'s user-defined id\n\n\n# projectId\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The GCP project id\n\n\n# retryAuto\n\n * Type: ====\n * Dynamic: ❓\n * Required: ❌\n\n\n# retryMessages\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: [due to concurrent update, Retrying the job may solve the problem]\n\n> The message that are valid for a automatic retry.\n\nMessage is tested as a substring of the full message and case insensitive\n\n\n# retryReasons\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: [rateLimitExceeded, jobBackendError, internalError, jobInternalError]\n\n> The reason that are valid for a automatic retry.\n\n\n# scopes\n\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n * Default: [https://www.googleapis.com/auth/cloud-platform]\n\n> The GCP scopes to used\n\n\n# serviceAccount\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The GCP service account key\n\n\n# Outputs\n\n\n# dataset\n\n * Type: string\n\n> The dataset\'s user-defined id\n\n\n# description\n\n * Type: string\n\n> A user-friendly description for the dataset\n\n\n# friendlyName\n\n * Type: string\n\n> A user-friendly name for the dataset\n\n\n# location\n\n * Type: string\n\n> The geographic location where the dataset should reside\n\nThis property is experimental and might be subject to change or removed.\nSee Dataset Location\n\n\n# project\n\n * Type: string\n\n> The GCP project id\n\n\n# Definitions\n\n\n# Entity\n\n# value\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The value for the entity (ex : user email if the type is USER ...)\n\n\n# Random-1\n\n# maxAttempt\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n * Minimum: &gt;= 1\n\n# maxDuration\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Format: duration\n\n# maxInterval\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n * Format: duration\n\n# minInterval\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n * Format: duration\n\n# warningOnRetry\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: false\n\n\n# Random-2\n\n\n# EncryptionConfiguration\n\n# kmsKeyName\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n\n# Exponential-2\n\n\n# Constant-1\n\n# interval\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n * Format: duration\n\n# maxAttempt\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n * Minimum: &gt;= 1\n\n# maxDuration\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Format: duration\n\n# warningOnRetry\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: false\n\n\n# Exponential-1\n\n# delayFactor\n\n * Type: number\n * Dynamic: ❓\n * Required: ❌\n\n# interval\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n * Format: duration\n\n# maxAttempt\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n * Minimum: &gt;= 1\n\n# maxDuration\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Format: duration\n\n# maxInterval\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n * Format: duration\n\n# warningOnRetry\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: false\n\n\n# Constant-2\n\n\n# AccessControl\n\n# entity\n\n * Type: Entity\n * Dynamic: ✔️\n * Required: ✔️\n\n> The entity\n\n# role\n\n * Type: string\n\n * Dynamic: ✔️\n\n * Required: ✔️\n\n * Possible Values:\n   \n   * READER\n   * WRITER\n   * OWNER\n\n> The role to assign to the entity',normalizedContent:'updatedataset\n\ntype: "io.kestra.plugin.gcp.bigquery.updatedataset"\n\n\n> update a dataset.\n\n\n# examples\n\nid: "update_dataset"\ntype: "io.kestra.plugin.gcp.bigquery.updatedataset"\nname: "my_dataset"\nlocation: "eu"\nfriendlyname: "new friendly name"\n\n\n\n# properties\n\n\n# acl\n\n * type: array\n * subtype: accesscontrol\n * dynamic: ❓\n * required: ❌\n\n> the dataset\'s access control configuration\n\n\n# defaultencryptionconfiguration\n\n * type: encryptionconfiguration\n * dynamic: ❓\n * required: ❌\n\n> the default encryption key for all tables in the dataset\n\nonce this property is set, all newly-created partitioned tables in the dataset will have encryption key set to this value, unless table creation request (or query) overrides the key.\n\n\n# defaultpartitionexpirationms\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n> [optional] the default partition expiration time for all partitioned tables in the dataset, in milliseconds\n\nonce this property is set, all newly-created partitioned tables in the dataset will has an expirationms property in the timepartitioning settings set to this value. changing the value only affect new tables, not existing ones. the storage in a partition will have an expiration time of its partition time plus this value. setting this property overrides the use of defaulttableexpirationms for partitioned tables: only one of defaulttableexpirationms and defaultpartitionexpirationms will be used for any new partitioned table. if you provide an explicit timepartitioning.expirationms when creating or updating a partitioned table, that value takes precedence over the default partition expiration time indicated by this property. the value may be null.\n\n\n# defaulttablelifetime\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n> the default lifetime of all tables in the dataset, in milliseconds\n\nthe minimum value is 3600000 milliseconds (one hour). once this property is set, all newly-created tables in the dataset will have an expirationtime property set to the creation time plus the value in this property, and changing the value will only affect new tables, not existing ones. when the expirationtime for a given table is reached, that table will be deleted automatically. if a table\'s expirationtime is modified or removed before the table expires, or if you provide an explicit expirationtime when creating a table, that value takes precedence over the default expiration time indicated by this property. this property is experimental and might be subject to change or removed.\n\n\n# description\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> description\n\na user-friendly description for the dataset.\n\n\n# friendlyname\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> a user-friendly name for the dataset\n\n\n# labels\n\n * type: object\n * dynamic: ✔️\n * required: ❌\n\n> the dataset\'s labels\n\n\n# location\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the geographic location where the dataset should reside\n\nthis property is experimental and might be subject to change or removed.\nsee dataset location\n\n\n# name\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the dataset\'s user-defined id\n\n\n# projectid\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the gcp project id\n\n\n# retryauto\n\n * type: ====\n * dynamic: ❓\n * required: ❌\n\n\n# retrymessages\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n * default: [due to concurrent update, retrying the job may solve the problem]\n\n> the message that are valid for a automatic retry.\n\nmessage is tested as a substring of the full message and case insensitive\n\n\n# retryreasons\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n * default: [ratelimitexceeded, jobbackenderror, internalerror, jobinternalerror]\n\n> the reason that are valid for a automatic retry.\n\n\n# scopes\n\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n * default: [https://www.googleapis.com/auth/cloud-platform]\n\n> the gcp scopes to used\n\n\n# serviceaccount\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the gcp service account key\n\n\n# outputs\n\n\n# dataset\n\n * type: string\n\n> the dataset\'s user-defined id\n\n\n# description\n\n * type: string\n\n> a user-friendly description for the dataset\n\n\n# friendlyname\n\n * type: string\n\n> a user-friendly name for the dataset\n\n\n# location\n\n * type: string\n\n> the geographic location where the dataset should reside\n\nthis property is experimental and might be subject to change or removed.\nsee dataset location\n\n\n# project\n\n * type: string\n\n> the gcp project id\n\n\n# definitions\n\n\n# entity\n\n# value\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the value for the entity (ex : user email if the type is user ...)\n\n\n# random-1\n\n# maxattempt\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n * minimum: &gt;= 1\n\n# maxduration\n\n * type: string\n * dynamic: ❓\n * required: ❌\n * format: duration\n\n# maxinterval\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n * format: duration\n\n# mininterval\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n * format: duration\n\n# warningonretry\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: false\n\n\n# random-2\n\n\n# encryptionconfiguration\n\n# kmskeyname\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n\n# exponential-2\n\n\n# constant-1\n\n# interval\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n * format: duration\n\n# maxattempt\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n * minimum: &gt;= 1\n\n# maxduration\n\n * type: string\n * dynamic: ❓\n * required: ❌\n * format: duration\n\n# warningonretry\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: false\n\n\n# exponential-1\n\n# delayfactor\n\n * type: number\n * dynamic: ❓\n * required: ❌\n\n# interval\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n * format: duration\n\n# maxattempt\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n * minimum: &gt;= 1\n\n# maxduration\n\n * type: string\n * dynamic: ❓\n * required: ❌\n * format: duration\n\n# maxinterval\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n * format: duration\n\n# warningonretry\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: false\n\n\n# constant-2\n\n\n# accesscontrol\n\n# entity\n\n * type: entity\n * dynamic: ✔️\n * required: ✔️\n\n> the entity\n\n# role\n\n * type: string\n\n * dynamic: ✔️\n\n * required: ✔️\n\n * possible values:\n   \n   * reader\n   * writer\n   * owner\n\n> the role to assign to the entity',charsets:{}},{title:"UpdateTable",frontmatter:{title:"UpdateTable",editLink:!1,description:"Update table metadata",icon:"PHN2ZyBpZD0iUHJvZHVjdF9JY29ucyIgZGF0YS1uYW1lPSJQcm9kdWN0IEljb25zIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCAyNCAyNCI+PGRlZnM+PHN0eWxlPi5jbHMtMXtmaWxsOiNhZWNiZmE7fS5jbHMtMSwuY2xzLTIsLmNscy0ze2ZpbGwtcnVsZTpldmVub2RkO30uY2xzLTJ7ZmlsbDojNjY5ZGY2O30uY2xzLTN7ZmlsbDojNDI4NWY0O308L3N0eWxlPjwvZGVmcz48dGl0bGU+SWNvbl8yNHB4X0NvbG9yX0JpZ1F1ZXJ5PC90aXRsZT48ZyBpZD0iU2hhcGUiPjxwYXRoIGNsYXNzPSJjbHMtMSIgZD0iTTYuNzMsMTAuODN2Mi42M0E0LjkxLDQuOTEsMCwwLDAsOC40NCwxNS4yVjEwLjgzWiIvPjxwYXRoIGNsYXNzPSJjbHMtMiIgZD0iTTkuODksOC40MXY3LjUzQTcuNjIsNy42MiwwLDAsMCwxMSwxNiw4LDgsMCwwLDAsMTIsMTZWOC40MVoiLz48cGF0aCBjbGFzcz0iY2xzLTEiIGQ9Ik0xMy42NCwxMS44NnYzLjI5YTUsNSwwLDAsMCwxLjctMS44MlYxMS44NloiLz48cGF0aCBjbGFzcz0iY2xzLTMiIGQ9Ik0xNy43NCwxNi4zMmwtMS40MiwxLjQyYS40Mi40MiwwLDAsMCwwLC42bDMuNTQsMy41NGEuNDIuNDIsMCwwLDAsLjU5LDBsMS40My0xLjQzYS40Mi40MiwwLDAsMCwwLS41OWwtMy41NC0zLjU0YS40Mi40MiwwLDAsMC0uNiwwIi8+PHBhdGggY2xhc3M9ImNscy0yIiBkPSJNMTEsMmE5LDksMCwxLDAsOSw5LDksOSwwLDAsMC05LTltMCwxNS42OUE2LjY4LDYuNjgsMCwxLDEsMTcuNjksMTEsNi42OCw2LjY4LDAsMCwxLDExLDE3LjY5Ii8+PC9nPjwvc3ZnPg==",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"UpdateTable"},{property:"og:description",content:"Update table metadata | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-gcp/tasks/bigquery/io.kestra.plugin.gcp.bigquery.UpdateTable.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"UpdateTable"},{name:"twitter:description",content:"Update table metadata | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-gcp/tasks/bigquery/io.kestra.plugin.gcp.bigquery.UpdateTable.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-gcp/tasks/bigquery/io.kestra.plugin.gcp.bigquery.UpdateTable.html",relativePath:"plugins/plugin-gcp/tasks/bigquery/io.kestra.plugin.gcp.bigquery.UpdateTable.md",key:"v-5a70b4ba",path:"/plugins/plugin-gcp/tasks/bigquery/io.kestra.plugin.gcp.bigquery.UpdateTable.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:93},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:260},{level:3,title:"dataset",slug:"dataset",normalizedTitle:"dataset",charIndex:194},{level:3,title:"description",slug:"description",normalizedTitle:"description",charIndex:368},{level:3,title:"encryptionConfiguration",slug:"encryptionconfiguration",normalizedTitle:"encryptionconfiguration",charIndex:478},{level:3,title:"expirationDuration",slug:"expirationduration",normalizedTitle:"expirationduration",charIndex:230},{level:3,title:"friendlyName",slug:"friendlyname",normalizedTitle:"friendlyname",charIndex:860},{level:3,title:"labels",slug:"labels",normalizedTitle:"labels",charIndex:964},{level:3,title:"location",slug:"location",normalizedTitle:"location",charIndex:1070},{level:3,title:"projectId",slug:"projectid",normalizedTitle:"projectid",charIndex:172},{level:3,title:"requirePartitionFilter",slug:"requirepartitionfilter",normalizedTitle:"requirepartitionfilter",charIndex:1367},{level:3,title:"retryAuto",slug:"retryauto",normalizedTitle:"retryauto",charIndex:1564},{level:3,title:"retryMessages",slug:"retrymessages",normalizedTitle:"retrymessages",charIndex:1622},{level:3,title:"retryReasons",slug:"retryreasons",normalizedTitle:"retryreasons",charIndex:1912},{level:3,title:"scopes",slug:"scopes",normalizedTitle:"scopes",charIndex:2128},{level:3,title:"serviceAccount",slug:"serviceaccount",normalizedTitle:"serviceaccount",charIndex:2290},{level:3,title:"table",slug:"table",normalizedTitle:"table",charIndex:74},{level:3,title:"tableDefinition",slug:"tabledefinition",normalizedTitle:"tabledefinition",charIndex:2473},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:2572},{level:3,title:"creationTime",slug:"creationtime",normalizedTitle:"creationtime",charIndex:2584},{level:3,title:"datasetId",slug:"datasetid",normalizedTitle:"datasetid",charIndex:2658},{level:3,title:"definition",slug:"definition",normalizedTitle:"definition",charIndex:2557},{level:3,title:"description",slug:"description-2",normalizedTitle:"description",charIndex:368},{level:3,title:"encryptionConfiguration",slug:"encryptionconfiguration-2",normalizedTitle:"encryptionconfiguration",charIndex:478},{level:3,title:"etag",slug:"etag",normalizedTitle:"etag",charIndex:2948},{level:3,title:"expirationTime",slug:"expirationtime",normalizedTitle:"expirationtime",charIndex:3008},{level:3,title:"friendlyName",slug:"friendlyname-2",normalizedTitle:"friendlyname",charIndex:860},{level:3,title:"generatedId",slug:"generatedid",normalizedTitle:"generatedid",charIndex:3276},{level:3,title:"labels",slug:"labels-2",normalizedTitle:"labels",charIndex:964},{level:3,title:"lastModifiedTime",slug:"lastmodifiedtime",normalizedTitle:"lastmodifiedtime",charIndex:3427},{level:3,title:"numBytes",slug:"numbytes",normalizedTitle:"numbytes",charIndex:3511},{level:3,title:"numLongTermBytes",slug:"numlongtermbytes",normalizedTitle:"numlongtermbytes",charIndex:3577},{level:3,title:"numRows",slug:"numrows",normalizedTitle:"numrows",charIndex:3700},{level:3,title:"projectId",slug:"projectid-2",normalizedTitle:"projectid",charIndex:172},{level:3,title:"requirePartitionFilter",slug:"requirepartitionfilter-2",normalizedTitle:"requirepartitionfilter",charIndex:1367},{level:3,title:"selfLink",slug:"selflink",normalizedTitle:"selflink",charIndex:3993},{level:3,title:"table",slug:"table-2",normalizedTitle:"table",charIndex:74},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:4183},{level:3,title:"MaterializedViewDefinition",slug:"materializedviewdefinition",normalizedTitle:"materializedviewdefinition",charIndex:4199},{level:3,title:"TableDefinition",slug:"tabledefinition-2",normalizedTitle:"tabledefinition",charIndex:2499},{level:3,title:"TimePartitioning",slug:"timepartitioning",normalizedTitle:"timepartitioning",charIndex:5416},{level:3,title:"StandardTableDefinition",slug:"standardtabledefinition-2",normalizedTitle:"standardtabledefinition",charIndex:5199},{level:3,title:"Random-1",slug:"random-1",normalizedTitle:"random-1",charIndex:6863},{level:3,title:"Random-2",slug:"random-2",normalizedTitle:"random-2",charIndex:7285},{level:3,title:"Constant-1",slug:"constant-1",normalizedTitle:"constant-1",charIndex:7298},{level:3,title:"Field",slug:"field-2",normalizedTitle:"field",charIndex:7637},{level:3,title:"UserDefinedFunction",slug:"userdefinedfunction",normalizedTitle:"userdefinedfunction",charIndex:8254},{level:3,title:"Constant-2",slug:"constant-2",normalizedTitle:"constant-2",charIndex:8685},{level:3,title:"ExternalTableDefinition",slug:"externaltabledefinition-2",normalizedTitle:"externaltabledefinition",charIndex:4808},{level:3,title:"StreamingBuffer",slug:"streamingbuffer-2",normalizedTitle:"streamingbuffer",charIndex:6501},{level:3,title:"Range",slug:"range",normalizedTitle:"range",charIndex:6308},{level:3,title:"PolicyTags",slug:"policytags-2",normalizedTitle:"policytags",charIndex:8013},{level:3,title:"RangePartitioning",slug:"rangepartitioning-2",normalizedTitle:"rangepartitioning",charIndex:6308},{level:3,title:"Exponential-2",slug:"exponential-2",normalizedTitle:"exponential-2",charIndex:10985},{level:3,title:"Exponential-1",slug:"exponential-1",normalizedTitle:"exponential-1",charIndex:11003},{level:3,title:"Schema",slug:"schema-2",normalizedTitle:"schema",charIndex:5103},{level:3,title:"ViewDefinition",slug:"viewdefinition-2",normalizedTitle:"viewdefinition",charIndex:4211},{level:3,title:"EncryptionConfiguration",slug:"encryptionconfiguration-3",normalizedTitle:"encryptionconfiguration",charIndex:512}],headersStr:"Examples Properties dataset description encryptionConfiguration expirationDuration friendlyName labels location projectId requirePartitionFilter retryAuto retryMessages retryReasons scopes serviceAccount table tableDefinition Outputs creationTime datasetId definition description encryptionConfiguration etag expirationTime friendlyName generatedId labels lastModifiedTime numBytes numLongTermBytes numRows projectId requirePartitionFilter selfLink table Definitions MaterializedViewDefinition TableDefinition TimePartitioning StandardTableDefinition Random-1 Random-2 Constant-1 Field UserDefinedFunction Constant-2 ExternalTableDefinition StreamingBuffer Range PolicyTags RangePartitioning Exponential-2 Exponential-1 Schema ViewDefinition EncryptionConfiguration",content:"UpdateTable\n\ntype: \"io.kestra.plugin.gcp.bigquery.UpdateTable\"\n\n\n> Update table metadata\n\n\n# Examples\n\nid: \"update_table\"\ntype: \"io.kestra.plugin.gcp.bigquery.UpdateTable\"\nprojectId: my-project\ndataset: my-dataset\ntable: my-table\nexpirationDuration: PT2D\n\n\n\n# Properties\n\n\n# dataset\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The dataset's user-defined id\n\n\n# description\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The user-friendly description for the table\n\n\n# encryptionConfiguration\n\n * Type: EncryptionConfiguration\n * Dynamic: ❓\n * Required: ❌\n\n> The encryption configuration\n\n\n# expirationDuration\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Format: duration\n\n> Sets the duration since now when this table expires.\n\nIf not present, the table will persist indefinitely. Expired tables will be deleted and their storage reclaimed.\n\n\n# friendlyName\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The user-friendly name for the table\n\n\n# labels\n\n * Type: object\n * Dynamic: ✔️\n * Required: ❌\n\n> Return a map for labels applied to the table\n\n\n# location\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The geographic location where the dataset should reside\n\nThis property is experimental and might be subject to change or removed.\n\nSee Dataset Location\n\n\n# projectId\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The GCP project id\n\n\n# requirePartitionFilter\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n> Return true if a partition filter (that can be used for partition elimination) is required for queries over this table.\n\n\n# retryAuto\n\n * Type: ====\n * Dynamic: ❓\n * Required: ❌\n\n\n# retryMessages\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: [due to concurrent update, Retrying the job may solve the problem]\n\n> The message that are valid for a automatic retry.\n\nMessage is tested as a substring of the full message and case insensitive\n\n\n# retryReasons\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: [rateLimitExceeded, jobBackendError, internalError, jobInternalError]\n\n> The reason that are valid for a automatic retry.\n\n\n# scopes\n\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n * Default: [https://www.googleapis.com/auth/cloud-platform]\n\n> The GCP scopes to used\n\n\n# serviceAccount\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The GCP service account key\n\n\n# table\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The table user-defined id\n\n\n# tableDefinition\n\n * Type: TableDefinition\n * Dynamic: ❓\n * Required: ❌\n\n> The table definition\n\n\n# Outputs\n\n\n# creationTime\n\n * Type: string\n\n> The time when this table was created\n\n\n# datasetId\n\n * Type: string\n\n> The dataset's id\n\n\n# definition\n\n * Type: TableDefinition\n\n> The table definition\n\n\n# description\n\n * Type: string\n\n> The user-friendly description for the table\n\n\n# encryptionConfiguration\n\n * Type: EncryptionConfiguration\n\n> The encryption configuration\n\n\n# etag\n\n * Type: string\n\n> The hash of the table resource\n\n\n# expirationTime\n\n * Type: string\n\n> Returns the time when this table expires\n\nIf not present, the table will persist indefinitely. Expired tables will be deleted and their storage reclaimed.\n\n\n# friendlyName\n\n * Type: string\n\n> The user-friendly name for the table\n\n\n# generatedId\n\n * Type: string\n\n> The service-generated id for the table\n\n\n# labels\n\n * Type: object\n\n> Return a map for labels applied to the table\n\n\n# lastModifiedTime\n\n * Type: string\n\n> The time when this table was last modified\n\n\n# numBytes\n\n * Type: integer\n\n> The size of this table in bytes\n\n\n# numLongTermBytes\n\n * Type: integer\n\n> The number of bytes considered \"long-term storage\" for reduced billing purposes.\n\n\n# numRows\n\n * Type: integer\n\n> The number of rows of data in this table\n\n\n# projectId\n\n * Type: string\n\n> The project's id\n\n\n# requirePartitionFilter\n\n * Type: boolean\n\n> Return true if a partition filter (that can be used for partition elimination) is required for queries over this table.\n\n\n# selfLink\n\n * Type: string\n\n> The URL that can be used to access the resource again. The returned URL can be used for get or update requests.\n\n\n# table\n\n * Type: string\n\n> The table name\n\n\n# Definitions\n\n\n# MaterializedViewDefinition\n\n# enableRefresh\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n\n> is enable automatic refresh of the materialized view when the base table is updated\n\n# lastRefreshDate\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Date when this materialized view was last modified\n\n# query\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> the query whose result is persisted\n\n# refreshInterval\n\n * Type: string\n * Dynamic: ❌\n * Required: ❌\n * Format: duration\n\n> the maximum frequency at which this materialized view will be refreshed\n\n\n# TableDefinition\n\n# externalTableDefinition\n\n * Type: ExternalTableDefinition\n * Dynamic: ❓\n * Required: ❌\n\n> the external table definition if the type is EXTERNAL\n\n# materializedViewDefinition\n\n * Type: MaterializedViewDefinition\n * Dynamic: ❓\n * Required: ❌\n\n> the materialized view definition if the type is MATERIALIZED_VIEW\n\n# schema\n\n * Type: Schema\n * Dynamic: ❓\n * Required: ❌\n\n> the table's schema.\n\n# standardTableDefinition\n\n * Type: StandardTableDefinition\n * Dynamic: ❓\n * Required: ❌\n\n> the table definition if the type is TABLE\n\n# viewDefinition\n\n * Type: ViewDefinition\n * Dynamic: ❓\n * Required: ❌\n\n> the view definition if the type is VIEW\n\n\n# TimePartitioning\n\n# expiration\n\n * Type: string\n * Dynamic: ❌\n * Required: ❌\n * Format: duration\n\n> the number of milliseconds for which to keep the storage for a partition. When expired, the storage for the partition is reclaimed. If null, the partion does not expire.\n\n# field\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> if not set, the table is partitioned by pseudo column '_PARTITIONTIME'; if set, the table is partitioned by this field.\n\n# requirePartitionFilter\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n\n> If set to true, queries over this table require a partition filter (that can be used for partition elimination) to be specified.\n\n\n# StandardTableDefinition\n\n# clustering\n\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n\n> Returns the clustering configuration for this table. If {@code null}, the table is not clustered.\n\n# rangePartitioning\n\n * Type: RangePartitioning\n * Dynamic: ❓\n * Required: ❌\n\n> Returns the range partitioning configuration for this table. If {@code null}, the table is not range-partitioned.\n\n# streamingBuffer\n\n * Type: StreamingBuffer\n * Dynamic: ❓\n * Required: ❌\n\n> Returns information on the table's streaming buffer if any exists. Returns {@code null} if no streaming buffer exists.\n\n# timePartitioning\n\n * Type: TimePartitioning\n * Dynamic: ❓\n * Required: ❌\n\n> Returns the time partitioning configuration for this table. If {@code null}, the table is not time-partitioned.\n\n\n# Random-1\n\n# maxAttempt\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n * Minimum: &gt;= 1\n\n# maxDuration\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Format: duration\n\n# maxInterval\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n * Format: duration\n\n# minInterval\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n * Format: duration\n\n# warningOnRetry\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: false\n\n\n# Random-2\n\n\n# Constant-1\n\n# interval\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n * Format: duration\n\n# maxAttempt\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n * Minimum: &gt;= 1\n\n# maxDuration\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Format: duration\n\n# warningOnRetry\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: false\n\n\n# Field\n\n# description\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> the field description.\n\n# mode\n\n * Type: string\n\n * Dynamic: ✔️\n\n * Required: ❌\n\n * Possible Values:\n   \n   * NULLABLE\n   * REQUIRED\n   * REPEATED\n\n> the field mode.\n\nBy default Field.Mode.NULLABLE is used.\n\n# name\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> the field name.\n\n# policyTags\n\n * Type: PolicyTags\n * Dynamic: ✔️\n * Required: ❌\n\n> the policy tags for the field.\n\n# subFields\n\n * Type: array\n * SubType: Field\n * Dynamic: ✔️\n * Required: ❌\n\n> the list of sub-fields if type is a LegacySQLType.RECORD. Returns null otherwise.\n\n\n# UserDefinedFunction\n\n# Type of UserDefinedFunction\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\nIf type is UserDefinedFunction.Type.INLINE this method returns a code blob.\nIf type is UserDefinedFunction.Type.FROM_URI the method returns a Google Cloud Storage URI (e.g. gs://bucket/path)\n\n# the type of user defined function.\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ❌\n\n * Possible Values:\n   \n   * INLINE\n   * FROM_URI\n\n\n# Constant-2\n\n\n# ExternalTableDefinition\n\n# autodetect\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n> whether automatic detection of schema and format options should be performed.\n\n# compression\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> the compression type of the data source.\n\n# formatType\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Possible Values:\n   \n   * CSV\n   * JSON\n   * BIGTABLE\n   * DATASTORE_BACKUP\n   * AVRO\n   * GOOGLE_SHEETS\n   * PARQUET\n   * ORC\n\n> the source format, and possibly some parsing options, of the external data.\n\n# ignoreUnknownValues\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n> whether BigQuery should allow extra values that are not represented in the table schema.\n\nIf true, the extra values are ignored. If false, records with extra columns are treated as bad records, and if there are too many bad records, an invalid error is returned in the job result.\n\n# maxBadRecords\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n> the maximum number of bad records that BigQuery can ignore when reading data.\n\nIf the number of bad records exceeds this value, an invalid error is returned in the job result.\n\n# sourceUris\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> the fully-qualified URIs that point to your data in Google Cloud Storage.\n\nEach URI can\n\n * contain one '*' wildcard character that must come after the bucket's name. Size limits related\n * to load jobs apply to external data sources, plus an additional limit of 10 GB maximum size\n * across all URIs.\n\n\n# StreamingBuffer\n\n# estimatedBytes\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n# estimatedRows\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n# oldestEntryTime\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n\n# Range\n\n# the end of range partitioning.\n\n * Type: integer\n * Dynamic: ❌\n * Required: ❌\n\n# the start of range partitioning.\n\n * Type: integer\n * Dynamic: ❌\n * Required: ❌\n\n# the width of each interval.\n\n * Type: integer\n * Dynamic: ❌\n * Required: ❌\n\n\n# PolicyTags\n\n# the policy tags names.\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n\n# RangePartitioning\n\n# the range of range partitioning.\n\n * Type: Range\n * Dynamic: ❓\n * Required: ❌\n\n# the range partitioning field.\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n\n# Exponential-2\n\n\n# Exponential-1\n\n# delayFactor\n\n * Type: number\n * Dynamic: ❓\n * Required: ❌\n\n# interval\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n * Format: duration\n\n# maxAttempt\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n * Minimum: &gt;= 1\n\n# maxDuration\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Format: duration\n\n# maxInterval\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n * Format: duration\n\n# warningOnRetry\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: false\n\n\n# Schema\n\n# the fields associated to this schema.\n\n * Type: array\n * SubType: Field\n * Dynamic: ❓\n * Required: ❌\n\n\n# ViewDefinition\n\n# query\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The query whose result is persisted\n\n# viewUserDefinedFunctions\n\n * Type: array\n * SubType: UserDefinedFunction\n * Dynamic: ❓\n * Required: ❌\n\n> User defined functions that can be used by query. Returns null if not set.\n\n\n# EncryptionConfiguration\n\n# the Kms key name\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌",normalizedContent:"updatetable\n\ntype: \"io.kestra.plugin.gcp.bigquery.updatetable\"\n\n\n> update table metadata\n\n\n# examples\n\nid: \"update_table\"\ntype: \"io.kestra.plugin.gcp.bigquery.updatetable\"\nprojectid: my-project\ndataset: my-dataset\ntable: my-table\nexpirationduration: pt2d\n\n\n\n# properties\n\n\n# dataset\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the dataset's user-defined id\n\n\n# description\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the user-friendly description for the table\n\n\n# encryptionconfiguration\n\n * type: encryptionconfiguration\n * dynamic: ❓\n * required: ❌\n\n> the encryption configuration\n\n\n# expirationduration\n\n * type: string\n * dynamic: ❓\n * required: ❌\n * format: duration\n\n> sets the duration since now when this table expires.\n\nif not present, the table will persist indefinitely. expired tables will be deleted and their storage reclaimed.\n\n\n# friendlyname\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the user-friendly name for the table\n\n\n# labels\n\n * type: object\n * dynamic: ✔️\n * required: ❌\n\n> return a map for labels applied to the table\n\n\n# location\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the geographic location where the dataset should reside\n\nthis property is experimental and might be subject to change or removed.\n\nsee dataset location\n\n\n# projectid\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the gcp project id\n\n\n# requirepartitionfilter\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n> return true if a partition filter (that can be used for partition elimination) is required for queries over this table.\n\n\n# retryauto\n\n * type: ====\n * dynamic: ❓\n * required: ❌\n\n\n# retrymessages\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n * default: [due to concurrent update, retrying the job may solve the problem]\n\n> the message that are valid for a automatic retry.\n\nmessage is tested as a substring of the full message and case insensitive\n\n\n# retryreasons\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n * default: [ratelimitexceeded, jobbackenderror, internalerror, jobinternalerror]\n\n> the reason that are valid for a automatic retry.\n\n\n# scopes\n\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n * default: [https://www.googleapis.com/auth/cloud-platform]\n\n> the gcp scopes to used\n\n\n# serviceaccount\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the gcp service account key\n\n\n# table\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the table user-defined id\n\n\n# tabledefinition\n\n * type: tabledefinition\n * dynamic: ❓\n * required: ❌\n\n> the table definition\n\n\n# outputs\n\n\n# creationtime\n\n * type: string\n\n> the time when this table was created\n\n\n# datasetid\n\n * type: string\n\n> the dataset's id\n\n\n# definition\n\n * type: tabledefinition\n\n> the table definition\n\n\n# description\n\n * type: string\n\n> the user-friendly description for the table\n\n\n# encryptionconfiguration\n\n * type: encryptionconfiguration\n\n> the encryption configuration\n\n\n# etag\n\n * type: string\n\n> the hash of the table resource\n\n\n# expirationtime\n\n * type: string\n\n> returns the time when this table expires\n\nif not present, the table will persist indefinitely. expired tables will be deleted and their storage reclaimed.\n\n\n# friendlyname\n\n * type: string\n\n> the user-friendly name for the table\n\n\n# generatedid\n\n * type: string\n\n> the service-generated id for the table\n\n\n# labels\n\n * type: object\n\n> return a map for labels applied to the table\n\n\n# lastmodifiedtime\n\n * type: string\n\n> the time when this table was last modified\n\n\n# numbytes\n\n * type: integer\n\n> the size of this table in bytes\n\n\n# numlongtermbytes\n\n * type: integer\n\n> the number of bytes considered \"long-term storage\" for reduced billing purposes.\n\n\n# numrows\n\n * type: integer\n\n> the number of rows of data in this table\n\n\n# projectid\n\n * type: string\n\n> the project's id\n\n\n# requirepartitionfilter\n\n * type: boolean\n\n> return true if a partition filter (that can be used for partition elimination) is required for queries over this table.\n\n\n# selflink\n\n * type: string\n\n> the url that can be used to access the resource again. the returned url can be used for get or update requests.\n\n\n# table\n\n * type: string\n\n> the table name\n\n\n# definitions\n\n\n# materializedviewdefinition\n\n# enablerefresh\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n\n> is enable automatic refresh of the materialized view when the base table is updated\n\n# lastrefreshdate\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> date when this materialized view was last modified\n\n# query\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the query whose result is persisted\n\n# refreshinterval\n\n * type: string\n * dynamic: ❌\n * required: ❌\n * format: duration\n\n> the maximum frequency at which this materialized view will be refreshed\n\n\n# tabledefinition\n\n# externaltabledefinition\n\n * type: externaltabledefinition\n * dynamic: ❓\n * required: ❌\n\n> the external table definition if the type is external\n\n# materializedviewdefinition\n\n * type: materializedviewdefinition\n * dynamic: ❓\n * required: ❌\n\n> the materialized view definition if the type is materialized_view\n\n# schema\n\n * type: schema\n * dynamic: ❓\n * required: ❌\n\n> the table's schema.\n\n# standardtabledefinition\n\n * type: standardtabledefinition\n * dynamic: ❓\n * required: ❌\n\n> the table definition if the type is table\n\n# viewdefinition\n\n * type: viewdefinition\n * dynamic: ❓\n * required: ❌\n\n> the view definition if the type is view\n\n\n# timepartitioning\n\n# expiration\n\n * type: string\n * dynamic: ❌\n * required: ❌\n * format: duration\n\n> the number of milliseconds for which to keep the storage for a partition. when expired, the storage for the partition is reclaimed. if null, the partion does not expire.\n\n# field\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> if not set, the table is partitioned by pseudo column '_partitiontime'; if set, the table is partitioned by this field.\n\n# requirepartitionfilter\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n\n> if set to true, queries over this table require a partition filter (that can be used for partition elimination) to be specified.\n\n\n# standardtabledefinition\n\n# clustering\n\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n\n> returns the clustering configuration for this table. if {@code null}, the table is not clustered.\n\n# rangepartitioning\n\n * type: rangepartitioning\n * dynamic: ❓\n * required: ❌\n\n> returns the range partitioning configuration for this table. if {@code null}, the table is not range-partitioned.\n\n# streamingbuffer\n\n * type: streamingbuffer\n * dynamic: ❓\n * required: ❌\n\n> returns information on the table's streaming buffer if any exists. returns {@code null} if no streaming buffer exists.\n\n# timepartitioning\n\n * type: timepartitioning\n * dynamic: ❓\n * required: ❌\n\n> returns the time partitioning configuration for this table. if {@code null}, the table is not time-partitioned.\n\n\n# random-1\n\n# maxattempt\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n * minimum: &gt;= 1\n\n# maxduration\n\n * type: string\n * dynamic: ❓\n * required: ❌\n * format: duration\n\n# maxinterval\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n * format: duration\n\n# mininterval\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n * format: duration\n\n# warningonretry\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: false\n\n\n# random-2\n\n\n# constant-1\n\n# interval\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n * format: duration\n\n# maxattempt\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n * minimum: &gt;= 1\n\n# maxduration\n\n * type: string\n * dynamic: ❓\n * required: ❌\n * format: duration\n\n# warningonretry\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: false\n\n\n# field\n\n# description\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the field description.\n\n# mode\n\n * type: string\n\n * dynamic: ✔️\n\n * required: ❌\n\n * possible values:\n   \n   * nullable\n   * required\n   * repeated\n\n> the field mode.\n\nby default field.mode.nullable is used.\n\n# name\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the field name.\n\n# policytags\n\n * type: policytags\n * dynamic: ✔️\n * required: ❌\n\n> the policy tags for the field.\n\n# subfields\n\n * type: array\n * subtype: field\n * dynamic: ✔️\n * required: ❌\n\n> the list of sub-fields if type is a legacysqltype.record. returns null otherwise.\n\n\n# userdefinedfunction\n\n# type of userdefinedfunction\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\nif type is userdefinedfunction.type.inline this method returns a code blob.\nif type is userdefinedfunction.type.from_uri the method returns a google cloud storage uri (e.g. gs://bucket/path)\n\n# the type of user defined function.\n\n * type: string\n\n * dynamic: ❌\n\n * required: ❌\n\n * possible values:\n   \n   * inline\n   * from_uri\n\n\n# constant-2\n\n\n# externaltabledefinition\n\n# autodetect\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n> whether automatic detection of schema and format options should be performed.\n\n# compression\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the compression type of the data source.\n\n# formattype\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * possible values:\n   \n   * csv\n   * json\n   * bigtable\n   * datastore_backup\n   * avro\n   * google_sheets\n   * parquet\n   * orc\n\n> the source format, and possibly some parsing options, of the external data.\n\n# ignoreunknownvalues\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n> whether bigquery should allow extra values that are not represented in the table schema.\n\nif true, the extra values are ignored. if false, records with extra columns are treated as bad records, and if there are too many bad records, an invalid error is returned in the job result.\n\n# maxbadrecords\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n> the maximum number of bad records that bigquery can ignore when reading data.\n\nif the number of bad records exceeds this value, an invalid error is returned in the job result.\n\n# sourceuris\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> the fully-qualified uris that point to your data in google cloud storage.\n\neach uri can\n\n * contain one '*' wildcard character that must come after the bucket's name. size limits related\n * to load jobs apply to external data sources, plus an additional limit of 10 gb maximum size\n * across all uris.\n\n\n# streamingbuffer\n\n# estimatedbytes\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n# estimatedrows\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n# oldestentrytime\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n\n# range\n\n# the end of range partitioning.\n\n * type: integer\n * dynamic: ❌\n * required: ❌\n\n# the start of range partitioning.\n\n * type: integer\n * dynamic: ❌\n * required: ❌\n\n# the width of each interval.\n\n * type: integer\n * dynamic: ❌\n * required: ❌\n\n\n# policytags\n\n# the policy tags names.\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n\n# rangepartitioning\n\n# the range of range partitioning.\n\n * type: range\n * dynamic: ❓\n * required: ❌\n\n# the range partitioning field.\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n\n# exponential-2\n\n\n# exponential-1\n\n# delayfactor\n\n * type: number\n * dynamic: ❓\n * required: ❌\n\n# interval\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n * format: duration\n\n# maxattempt\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n * minimum: &gt;= 1\n\n# maxduration\n\n * type: string\n * dynamic: ❓\n * required: ❌\n * format: duration\n\n# maxinterval\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n * format: duration\n\n# warningonretry\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: false\n\n\n# schema\n\n# the fields associated to this schema.\n\n * type: array\n * subtype: field\n * dynamic: ❓\n * required: ❌\n\n\n# viewdefinition\n\n# query\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the query whose result is persisted\n\n# viewuserdefinedfunctions\n\n * type: array\n * subtype: userdefinedfunction\n * dynamic: ❓\n * required: ❌\n\n> user defined functions that can be used by query. returns null if not set.\n\n\n# encryptionconfiguration\n\n# the kms key name\n\n * type: string\n * dynamic: ✔️\n * required: ❌",charsets:{}},{title:"Compose",frontmatter:{title:"Compose",editLink:!1,description:"List file on a GCS bucket.",icon:"PHN2ZyBpZD0iUHJvZHVjdF9JY29ucyIgZGF0YS1uYW1lPSJQcm9kdWN0IEljb25zIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCAyNCAyNCI+PGRlZnM+PHN0eWxlPi5jbHMtMXtmaWxsOiNhZWNiZmE7fS5jbHMtMntmaWxsOiM2NjlkZjY7fS5jbHMtM3tmaWxsOiM0Mjg1ZjQ7fS5jbHMtNHtmaWxsOiNmZmY7fTwvc3R5bGU+PC9kZWZzPjx0aXRsZT5JY29uXzI0cHhfQ29sb3JfQ2xvdWRTdG9yYWdlPC90aXRsZT48cmVjdCBjbGFzcz0iY2xzLTEiIHg9IjIiIHk9IjQiIHdpZHRoPSIyMCIgaGVpZ2h0PSI3Ii8+PHJlY3QgY2xhc3M9ImNscy0yIiB4PSIyMCIgeT0iNCIgd2lkdGg9IjIiIGhlaWdodD0iNyIvPjxwb2x5Z29uIGNsYXNzPSJjbHMtMyIgcG9pbnRzPSIyMiA0IDIwIDQgMjAgMTEgMjIgNCIvPjxyZWN0IGNsYXNzPSJjbHMtMiIgeD0iMiIgeT0iNCIgd2lkdGg9IjIiIGhlaWdodD0iNyIvPjxyZWN0IGNsYXNzPSJjbHMtNCIgeD0iNiIgeT0iNyIgd2lkdGg9IjYiIGhlaWdodD0iMSIvPjxyZWN0IGNsYXNzPSJjbHMtNCIgeD0iMTUiIHk9IjYiIHdpZHRoPSIzIiBoZWlnaHQ9IjMiIHJ4PSIxLjUiLz48cmVjdCBjbGFzcz0iY2xzLTEiIHg9IjIiIHk9IjEzIiB3aWR0aD0iMjAiIGhlaWdodD0iNyIvPjxyZWN0IGNsYXNzPSJjbHMtMiIgeD0iMjAiIHk9IjEzIiB3aWR0aD0iMiIgaGVpZ2h0PSI3Ii8+PHBvbHlnb24gY2xhc3M9ImNscy0zIiBwb2ludHM9IjIyIDEzIDIwIDEzIDIwIDIwIDIyIDEzIi8+PHJlY3QgY2xhc3M9ImNscy0yIiB4PSIyIiB5PSIxMyIgd2lkdGg9IjIiIGhlaWdodD0iNyIvPjxyZWN0IGNsYXNzPSJjbHMtNCIgeD0iNiIgeT0iMTYiIHdpZHRoPSI2IiBoZWlnaHQ9IjEiLz48cmVjdCBjbGFzcz0iY2xzLTQiIHg9IjE1IiB5PSIxNSIgd2lkdGg9IjMiIGhlaWdodD0iMyIgcng9IjEuNSIvPjwvc3ZnPg==",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Compose"},{property:"og:description",content:"List file on a GCS bucket. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-gcp/tasks/gcs/io.kestra.plugin.gcp.gcs.Compose.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Compose"},{name:"twitter:description",content:"List file on a GCS bucket. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-gcp/tasks/gcs/io.kestra.plugin.gcp.gcs.Compose.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-gcp/tasks/gcs/io.kestra.plugin.gcp.gcs.Compose.html",relativePath:"plugins/plugin-gcp/tasks/gcs/io.kestra.plugin.gcp.gcs.Compose.md",key:"v-6ac937fa",path:"/plugins/plugin-gcp/tasks/gcs/io.kestra.plugin.gcp.gcs.Compose.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:85},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:273},{level:3,title:"allowEmpty",slug:"allowempty",normalizedTitle:"allowempty",charIndex:288},{level:3,title:"list",slug:"list",normalizedTitle:"list",charIndex:178},{level:3,title:"projectId",slug:"projectid",normalizedTitle:"projectid",charIndex:486},{level:3,title:"scopes",slug:"scopes",normalizedTitle:"scopes",charIndex:568},{level:3,title:"serviceAccount",slug:"serviceaccount",normalizedTitle:"serviceaccount",charIndex:730},{level:3,title:"to",slug:"to",normalizedTitle:"to",charIndex:215},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:904},{level:3,title:"uri",slug:"uri",normalizedTitle:"uri",charIndex:916},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:941},{level:3,title:"List",slug:"list-2",normalizedTitle:"list",charIndex:54}],headersStr:"Examples Properties allowEmpty list projectId scopes serviceAccount to Outputs uri Definitions List",content:'Compose\n\ntype: "io.kestra.plugin.gcp.gcs.Compose"\n\n\n> List file on a GCS bucket.\n\n\n# Examples\n\n> Concat files in a bucket\n\nid: "compose"\ntype: "io.kestra.plugin.gcp.gcs.Compose"\nlist: \n  from: "gs://my_bucket/dir/"\nto: "gs://my_bucket/destination/my-compose-file.txt"\n\n\n\n# Properties\n\n\n# allowEmpty\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n * Default: false\n\n> if true, don\'t failed if no result\n\n\n# list\n\n * Type: List\n * Dynamic: ✔️\n * Required: ✔️\n\n> The directory to list\n\n\n# projectId\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The GCP project id\n\n\n# scopes\n\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n * Default: [https://www.googleapis.com/auth/cloud-platform]\n\n> The GCP scopes to used\n\n\n# serviceAccount\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The GCP service account key\n\n\n# to\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The destination path\n\n\n# Outputs\n\n\n# uri\n\n * Type: string\n\n\n# Definitions\n\n\n# List\n\n# filter\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Default: BOTH\n\n * Possible Values:\n   \n   * FILES\n   * DIRECTORY\n   * BOTH\n\n# from\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n\n> The directory to list\n\n# listingType\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Default: DIRECTORY\n\n * Possible Values:\n   \n   * RECURSIVE\n   * DIRECTORY\n\n> The listing type you want (like directory or recursive)\n\nif DIRECTORY, will only list objects in the specified directory\nif RECURSIVE, will list objects in the specified directory recursively\nDefault value is DIRECTORY\nWhen using RECURSIVE value, be carefull to move your files to a location not in the from scope\n\n# regExp\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> A regexp to filter on full path\n\nex:\nregExp: .* to match all files\nregExp: .*2020-01-0.\\\\.csv to match files between 01 and 09 of january ending with .csv',normalizedContent:'compose\n\ntype: "io.kestra.plugin.gcp.gcs.compose"\n\n\n> list file on a gcs bucket.\n\n\n# examples\n\n> concat files in a bucket\n\nid: "compose"\ntype: "io.kestra.plugin.gcp.gcs.compose"\nlist: \n  from: "gs://my_bucket/dir/"\nto: "gs://my_bucket/destination/my-compose-file.txt"\n\n\n\n# properties\n\n\n# allowempty\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n * default: false\n\n> if true, don\'t failed if no result\n\n\n# list\n\n * type: list\n * dynamic: ✔️\n * required: ✔️\n\n> the directory to list\n\n\n# projectid\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the gcp project id\n\n\n# scopes\n\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n * default: [https://www.googleapis.com/auth/cloud-platform]\n\n> the gcp scopes to used\n\n\n# serviceaccount\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the gcp service account key\n\n\n# to\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the destination path\n\n\n# outputs\n\n\n# uri\n\n * type: string\n\n\n# definitions\n\n\n# list\n\n# filter\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * default: both\n\n * possible values:\n   \n   * files\n   * directory\n   * both\n\n# from\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n\n> the directory to list\n\n# listingtype\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * default: directory\n\n * possible values:\n   \n   * recursive\n   * directory\n\n> the listing type you want (like directory or recursive)\n\nif directory, will only list objects in the specified directory\nif recursive, will list objects in the specified directory recursively\ndefault value is directory\nwhen using recursive value, be carefull to move your files to a location not in the from scope\n\n# regexp\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> a regexp to filter on full path\n\nex:\nregexp: .* to match all files\nregexp: .*2020-01-0.\\\\.csv to match files between 01 and 09 of january ending with .csv',charsets:{}},{title:"Copy",frontmatter:{title:"Copy",editLink:!1,description:"Copy a file between bucket",icon:"PHN2ZyBpZD0iUHJvZHVjdF9JY29ucyIgZGF0YS1uYW1lPSJQcm9kdWN0IEljb25zIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCAyNCAyNCI+PGRlZnM+PHN0eWxlPi5jbHMtMXtmaWxsOiNhZWNiZmE7fS5jbHMtMntmaWxsOiM2NjlkZjY7fS5jbHMtM3tmaWxsOiM0Mjg1ZjQ7fS5jbHMtNHtmaWxsOiNmZmY7fTwvc3R5bGU+PC9kZWZzPjx0aXRsZT5JY29uXzI0cHhfQ29sb3JfQ2xvdWRTdG9yYWdlPC90aXRsZT48cmVjdCBjbGFzcz0iY2xzLTEiIHg9IjIiIHk9IjQiIHdpZHRoPSIyMCIgaGVpZ2h0PSI3Ii8+PHJlY3QgY2xhc3M9ImNscy0yIiB4PSIyMCIgeT0iNCIgd2lkdGg9IjIiIGhlaWdodD0iNyIvPjxwb2x5Z29uIGNsYXNzPSJjbHMtMyIgcG9pbnRzPSIyMiA0IDIwIDQgMjAgMTEgMjIgNCIvPjxyZWN0IGNsYXNzPSJjbHMtMiIgeD0iMiIgeT0iNCIgd2lkdGg9IjIiIGhlaWdodD0iNyIvPjxyZWN0IGNsYXNzPSJjbHMtNCIgeD0iNiIgeT0iNyIgd2lkdGg9IjYiIGhlaWdodD0iMSIvPjxyZWN0IGNsYXNzPSJjbHMtNCIgeD0iMTUiIHk9IjYiIHdpZHRoPSIzIiBoZWlnaHQ9IjMiIHJ4PSIxLjUiLz48cmVjdCBjbGFzcz0iY2xzLTEiIHg9IjIiIHk9IjEzIiB3aWR0aD0iMjAiIGhlaWdodD0iNyIvPjxyZWN0IGNsYXNzPSJjbHMtMiIgeD0iMjAiIHk9IjEzIiB3aWR0aD0iMiIgaGVpZ2h0PSI3Ii8+PHBvbHlnb24gY2xhc3M9ImNscy0zIiBwb2ludHM9IjIyIDEzIDIwIDEzIDIwIDIwIDIyIDEzIi8+PHJlY3QgY2xhc3M9ImNscy0yIiB4PSIyIiB5PSIxMyIgd2lkdGg9IjIiIGhlaWdodD0iNyIvPjxyZWN0IGNsYXNzPSJjbHMtNCIgeD0iNiIgeT0iMTYiIHdpZHRoPSI2IiBoZWlnaHQ9IjEiLz48cmVjdCBjbGFzcz0iY2xzLTQiIHg9IjE1IiB5PSIxNSIgd2lkdGg9IjMiIGhlaWdodD0iMyIgcng9IjEuNSIvPjwvc3ZnPg==",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Copy"},{property:"og:description",content:"Copy a file between bucket | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-gcp/tasks/gcs/io.kestra.plugin.gcp.gcs.Copy.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Copy"},{name:"twitter:description",content:"Copy a file between bucket | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-gcp/tasks/gcs/io.kestra.plugin.gcp.gcs.Copy.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-gcp/tasks/gcs/io.kestra.plugin.gcp.gcs.Copy.html",relativePath:"plugins/plugin-gcp/tasks/gcs/io.kestra.plugin.gcp.gcs.Copy.md",key:"v-f84f1f7a",path:"/plugins/plugin-gcp/tasks/gcs/io.kestra.plugin.gcp.gcs.Copy.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:148},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:286},{level:3,title:"delete",slug:"delete",normalizedTitle:"delete",charIndex:268},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:242},{level:3,title:"projectId",slug:"projectid",normalizedTitle:"projectid",charIndex:524},{level:3,title:"scopes",slug:"scopes",normalizedTitle:"scopes",charIndex:606},{level:3,title:"serviceAccount",slug:"serviceaccount",normalizedTitle:"serviceaccount",charIndex:768},{level:3,title:"to",slug:"to",normalizedTitle:"to",charIndex:108},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:942},{level:3,title:"uri",slug:"uri",normalizedTitle:"uri",charIndex:954},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:1062}],headersStr:"Examples Properties delete from projectId scopes serviceAccount to Outputs uri Definitions",content:'Copy\n\ntype: "io.kestra.plugin.gcp.gcs.Copy"\n\n\n> Copy a file between bucket\n\nCopy the file between Internal Storage or Google Cloud Storage file\n\n\n# Examples\n\n> Move a file between bucket path\n\nid: "copy"\ntype: "io.kestra.plugin.gcp.gcs.Copy"\nfrom: "{{ inputs.file }}"\ndelete: true\n\n\n\n# Properties\n\n\n# delete\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: false\n\n> Whether to delete the source files (from parameter) on success copy\n\n\n# from\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The file to copy\n\n\n# projectId\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The GCP project id\n\n\n# scopes\n\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n * Default: [https://www.googleapis.com/auth/cloud-platform]\n\n> The GCP scopes to used\n\n\n# serviceAccount\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The GCP service account key\n\n\n# to\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The destination path\n\n\n# Outputs\n\n\n# uri\n\n * Type: string\n\n> The destination full uri\n\nThe full url will be like gs://{bucket}/{path}/{file}\n\n\n# Definitions',normalizedContent:'copy\n\ntype: "io.kestra.plugin.gcp.gcs.copy"\n\n\n> copy a file between bucket\n\ncopy the file between internal storage or google cloud storage file\n\n\n# examples\n\n> move a file between bucket path\n\nid: "copy"\ntype: "io.kestra.plugin.gcp.gcs.copy"\nfrom: "{{ inputs.file }}"\ndelete: true\n\n\n\n# properties\n\n\n# delete\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: false\n\n> whether to delete the source files (from parameter) on success copy\n\n\n# from\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the file to copy\n\n\n# projectid\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the gcp project id\n\n\n# scopes\n\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n * default: [https://www.googleapis.com/auth/cloud-platform]\n\n> the gcp scopes to used\n\n\n# serviceaccount\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the gcp service account key\n\n\n# to\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the destination path\n\n\n# outputs\n\n\n# uri\n\n * type: string\n\n> the destination full uri\n\nthe full url will be like gs://{bucket}/{path}/{file}\n\n\n# definitions',charsets:{}},{title:"CreateBucket",frontmatter:{title:"CreateBucket",editLink:!1,description:"Create a bucket or update if it already exists.",icon:"PHN2ZyBpZD0iUHJvZHVjdF9JY29ucyIgZGF0YS1uYW1lPSJQcm9kdWN0IEljb25zIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCAyNCAyNCI+PGRlZnM+PHN0eWxlPi5jbHMtMXtmaWxsOiNhZWNiZmE7fS5jbHMtMntmaWxsOiM2NjlkZjY7fS5jbHMtM3tmaWxsOiM0Mjg1ZjQ7fS5jbHMtNHtmaWxsOiNmZmY7fTwvc3R5bGU+PC9kZWZzPjx0aXRsZT5JY29uXzI0cHhfQ29sb3JfQ2xvdWRTdG9yYWdlPC90aXRsZT48cmVjdCBjbGFzcz0iY2xzLTEiIHg9IjIiIHk9IjQiIHdpZHRoPSIyMCIgaGVpZ2h0PSI3Ii8+PHJlY3QgY2xhc3M9ImNscy0yIiB4PSIyMCIgeT0iNCIgd2lkdGg9IjIiIGhlaWdodD0iNyIvPjxwb2x5Z29uIGNsYXNzPSJjbHMtMyIgcG9pbnRzPSIyMiA0IDIwIDQgMjAgMTEgMjIgNCIvPjxyZWN0IGNsYXNzPSJjbHMtMiIgeD0iMiIgeT0iNCIgd2lkdGg9IjIiIGhlaWdodD0iNyIvPjxyZWN0IGNsYXNzPSJjbHMtNCIgeD0iNiIgeT0iNyIgd2lkdGg9IjYiIGhlaWdodD0iMSIvPjxyZWN0IGNsYXNzPSJjbHMtNCIgeD0iMTUiIHk9IjYiIHdpZHRoPSIzIiBoZWlnaHQ9IjMiIHJ4PSIxLjUiLz48cmVjdCBjbGFzcz0iY2xzLTEiIHg9IjIiIHk9IjEzIiB3aWR0aD0iMjAiIGhlaWdodD0iNyIvPjxyZWN0IGNsYXNzPSJjbHMtMiIgeD0iMjAiIHk9IjEzIiB3aWR0aD0iMiIgaGVpZ2h0PSI3Ii8+PHBvbHlnb24gY2xhc3M9ImNscy0zIiBwb2ludHM9IjIyIDEzIDIwIDEzIDIwIDIwIDIyIDEzIi8+PHJlY3QgY2xhc3M9ImNscy0yIiB4PSIyIiB5PSIxMyIgd2lkdGg9IjIiIGhlaWdodD0iNyIvPjxyZWN0IGNsYXNzPSJjbHMtNCIgeD0iNiIgeT0iMTYiIHdpZHRoPSI2IiBoZWlnaHQ9IjEiLz48cmVjdCBjbGFzcz0iY2xzLTQiIHg9IjE1IiB5PSIxNSIgd2lkdGg9IjMiIGhlaWdodD0iMyIgcng9IjEuNSIvPjwvc3ZnPg==",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"CreateBucket"},{property:"og:description",content:"Create a bucket or update if it already exists. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-gcp/tasks/gcs/io.kestra.plugin.gcp.gcs.CreateBucket.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"CreateBucket"},{name:"twitter:description",content:"Create a bucket or update if it already exists. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-gcp/tasks/gcs/io.kestra.plugin.gcp.gcs.CreateBucket.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-gcp/tasks/gcs/io.kestra.plugin.gcp.gcs.CreateBucket.html",relativePath:"plugins/plugin-gcp/tasks/gcs/io.kestra.plugin.gcp.gcs.CreateBucket.md",key:"v-71f83321",path:"/plugins/plugin-gcp/tasks/gcs/io.kestra.plugin.gcp.gcs.CreateBucket.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:116},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:310},{level:3,title:"acl",slug:"acl",normalizedTitle:"acl",charIndex:325},{level:3,title:"cors",slug:"cors",normalizedTitle:"cors",charIndex:481},{level:3,title:"defaultAcl",slug:"defaultacl",normalizedTitle:"defaultacl",charIndex:660},{level:3,title:"defaultEventBasedHold",slug:"defaulteventbasedhold",normalizedTitle:"defaulteventbasedhold",charIndex:924},{level:3,title:"defaultKmsKeyName",slug:"defaultkmskeyname",normalizedTitle:"defaultkmskeyname",charIndex:1045},{level:3,title:"iamConfiguration",slug:"iamconfiguration",normalizedTitle:"iamconfiguration",charIndex:1163},{level:3,title:"ifExists",slug:"ifexists",normalizedTitle:"ifexists",charIndex:1307},{level:3,title:"indexPage",slug:"indexpage",normalizedTitle:"indexpage",charIndex:1492},{level:3,title:"labels",slug:"labels",normalizedTitle:"labels",charIndex:275},{level:3,title:"lifecycleRules",slug:"lifecyclerules",normalizedTitle:"lifecyclerules",charIndex:1773},{level:3,title:"location",slug:"location",normalizedTitle:"location",charIndex:2142},{level:3,title:"logging",slug:"logging",normalizedTitle:"logging",charIndex:2351},{level:3,title:"name",slug:"name",normalizedTitle:"name",charIndex:233},{level:3,title:"notFoundPage",slug:"notfoundpage",normalizedTitle:"notfoundpage",charIndex:2636},{level:3,title:"projectId",slug:"projectid",normalizedTitle:"projectid",charIndex:2769},{level:3,title:"requesterPays",slug:"requesterpays",normalizedTitle:"requesterpays",charIndex:2851},{level:3,title:"retentionPeriod",slug:"retentionperiod",normalizedTitle:"retentionperiod",charIndex:3071},{level:3,title:"scopes",slug:"scopes",normalizedTitle:"scopes",charIndex:3300},{level:3,title:"serviceAccount",slug:"serviceaccount",normalizedTitle:"serviceaccount",charIndex:3462},{level:3,title:"storageClass",slug:"storageclass",normalizedTitle:"storageclass",charIndex:3558},{level:3,title:"versioningEnabled",slug:"versioningenabled",normalizedTitle:"versioningenabled",charIndex:251},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:4117},{level:3,title:"bucket",slug:"bucket",normalizedTitle:"bucket",charIndex:73},{level:3,title:"created",slug:"created",normalizedTitle:"created",charIndex:4178},{level:3,title:"updated",slug:"updated",normalizedTitle:"updated",charIndex:4256},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:4334},{level:3,title:"Condition",slug:"condition",normalizedTitle:"condition",charIndex:4350},{level:3,title:"IamConfiguration",slug:"iamconfiguration-2",normalizedTitle:"iamconfiguration",charIndex:1190},{level:3,title:"Entity",slug:"entity",normalizedTitle:"entity",charIndex:4816},{level:3,title:"Origin",slug:"origin",normalizedTitle:"origin",charIndex:570},{level:3,title:"Cors",slug:"cors-2",normalizedTitle:"cors",charIndex:514},{level:3,title:"AccessControl",slug:"accesscontrol",normalizedTitle:"accesscontrol",charIndex:357},{level:3,title:"BucketLifecycleRule",slug:"bucketlifecyclerule",normalizedTitle:"bucketlifecyclerule",charIndex:1816},{level:3,title:"Action",slug:"action-2",normalizedTitle:"action",charIndex:5610},{level:3,title:"Bucket",slug:"bucket-2",normalizedTitle:"bucket",charIndex:6},{level:3,title:"Logging",slug:"logging-2",normalizedTitle:"logging",charIndex:2369}],headersStr:"Examples Properties acl cors defaultAcl defaultEventBasedHold defaultKmsKeyName iamConfiguration ifExists indexPage labels lifecycleRules location logging name notFoundPage projectId requesterPays retentionPeriod scopes serviceAccount storageClass versioningEnabled Outputs bucket created updated Definitions Condition IamConfiguration Entity Origin Cors AccessControl BucketLifecycleRule Action Bucket Logging",content:"CreateBucket\n\ntype: \"io.kestra.plugin.gcp.gcs.CreateBucket\"\n\n\n> Create a bucket or update if it already exists.\n\n\n# Examples\n\n> Create a new bucket with some options\n\nid: \"create_bucket\"\ntype: \"io.kestra.plugin.gcp.gcs.CreateBucket\"\nname: \"my-bucket\"\nversioningEnabled: true\nlabels: \n  my-label: my-value\n\n\n\n# Properties\n\n\n# acl\n\n * Type: array\n * SubType: AccessControl\n * Dynamic: ❓\n * Required: ❌\n\n> The bucket's access control configuration\n\nSee About Access Control Lists\n\n\n# cors\n\n * Type: array\n * SubType: Cors\n * Dynamic: ❓\n * Required: ❌\n\n> The bucket's Cross-Origin Resource Sharing (CORS) configuration\n\nSee Cross-Origin ResourceSharing (CORS)\n\n\n# defaultAcl\n\n * Type: array\n * SubType: AccessControl\n * Dynamic: ❓\n * Required: ❌\n\n> The default access control configuration\n\nThe access control configuration to apply to bucket's blobs when no other configuration is specified.\nSee About Access Control Lists\n\n\n# defaultEventBasedHold\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n> The default event-based hold for this bucket\n\n\n# defaultKmsKeyName\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The default Cloud KMS key name for this bucket\n\n\n# iamConfiguration\n\n * Type: IamConfiguration\n * Dynamic: ❓\n * Required: ❌\n\n> The Bucket's IAM Configuration\n\nSee uniform bucket-level access\n\n\n# ifExists\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Default: ERROR\n\n * Possible Values:\n   \n   * ERROR\n   * UPDATE\n   * SKIP\n\n> Policy to apply if a bucket already exists.\n\n\n# indexPage\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The bucket's website index page\n\nBehaves as the bucket's directory index where missing blobs are treated as potential directories.\n\n\n# labels\n\n * Type: object\n * Dynamic: ✔️\n * Required: ❌\n\n> The labels of this bucket\n\n\n# lifecycleRules\n\n * Type: array\n * SubType: BucketLifecycleRule\n * Dynamic: ❓\n * Required: ❌\n\n> The bucket's lifecycle configuration\n\nThis configuration is expressed as a number of lifecycle rules, consisting of an action and a condition.\nSee Object Lifecycle Management\nOnly the age condition is supported. Only the delete and SetStorageClass actions are supported\n\n\n# location\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The bucket's location\n\nData for blobs in the bucket resides in physical storage within this region. A list of supported values is available here.\n\n\n# logging\n\n * Type: Logging\n * Dynamic: ❓\n * Required: ❌\n\n> The bucket's logging configuration\n\nThis configuration defines the destination bucket and optional name prefix for the current bucket's logs.\n\n\n# name\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> Bucket's unique name\n\n\n# notFoundPage\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The custom object to return when a requested resource is not found\n\n\n# projectId\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The GCP project id\n\n\n# requesterPays\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n> Whether the requester pays or not.\n\nWhether a user accessing the bucket or an object it contains should assume the transit costs related to the access.\n\n\n# retentionPeriod\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n> Retention period\n\nIf policy is not locked this value can be cleared, increased, and decreased. If policy is locked the retention period can only be increased.\n\n\n# scopes\n\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n * Default: [https://www.googleapis.com/auth/cloud-platform]\n\n> The GCP scopes to used\n\n\n# serviceAccount\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The GCP service account key\n\n\n# storageClass\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Possible Values:\n   \n   * REGIONAL\n   * MULTI_REGIONAL\n   * NEARLINE\n   * COLDLINE\n   * STANDARD\n   * ARCHIVE\n   * DURABLE_REDUCED_AVAILABILITY\n\n> The bucket's storage class\n\nThis defines how blobs in the bucket are stored and determines the SLA and the cost of storage. A list of supported values is available here.\n\n\n# versioningEnabled\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n> Whether versioning should be enabled for this bucket\n\nWhen set to true, versioning is fully enabled.\n\n\n# Outputs\n\n\n# bucket\n\n * Type: Bucket\n\n> The bucket's info\n\n\n# created\n\n * Type: boolean\n * Default: false\n\n> If the bucket was created.\n\n\n# updated\n\n * Type: boolean\n * Default: false\n\n> If the bucket was updated.\n\n\n# Definitions\n\n\n# Condition\n\n# age\n\n * Type: integer\n * Dynamic: ✔️\n * Required: ✔️\n\n> The Age condition is satisfied when an object reaches the specified age (in days). Age is measured from the object's creation time.\n\n\n# IamConfiguration\n\n# publicAccessPrevention\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Possible Values:\n   \n   * ENFORCED\n   * UNSPECIFIED\n   * UNKNOWN\n   * INHERITED\n\n# uniformBucketLevelAccessEnabled\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n\n# Entity\n\n# value\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The value for the entity (ex : user email if the type is USER ...)\n\n\n# Origin\n\n# value\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n\n# Cors\n\n# maxAgeSeconds\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n# methods\n\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n\n# origins\n\n * Type: array\n * SubType: Origin\n * Dynamic: ❓\n * Required: ❌\n\n# responseHeaders\n\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n\n\n# AccessControl\n\n# entity\n\n * Type: Entity\n * Dynamic: ✔️\n * Required: ✔️\n\n> The entity\n\n# role\n\n * Type: string\n\n * Dynamic: ✔️\n\n * Required: ✔️\n\n * Possible Values:\n   \n   * READER\n   * WRITER\n   * OWNER\n\n> The role to assign to the entity\n\n\n# BucketLifecycleRule\n\n# action\n\n * Type: Action\n * Dynamic: ✔️\n * Required: ✔️\n\n> The action to take when a lifecycle condition is met\n\n# condition\n\n * Type: Condition\n * Dynamic: ✔️\n * Required: ✔️\n\n> The condition\n\n\n# Action\n\n# value\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The value for the action (if any)\n\n\n# Bucket\n\n# indexPage\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The bucket's website index page.\n\n# location\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The bucket's location\n\n# name\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The bucket's unique name\n\n# notFoundPage\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The custom object to return when a requested resource is not found.\n\n# uri\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The bucket's URI.\n\n\n# Logging\n\n# logBucket\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# logObjectPrefix\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌",normalizedContent:"createbucket\n\ntype: \"io.kestra.plugin.gcp.gcs.createbucket\"\n\n\n> create a bucket or update if it already exists.\n\n\n# examples\n\n> create a new bucket with some options\n\nid: \"create_bucket\"\ntype: \"io.kestra.plugin.gcp.gcs.createbucket\"\nname: \"my-bucket\"\nversioningenabled: true\nlabels: \n  my-label: my-value\n\n\n\n# properties\n\n\n# acl\n\n * type: array\n * subtype: accesscontrol\n * dynamic: ❓\n * required: ❌\n\n> the bucket's access control configuration\n\nsee about access control lists\n\n\n# cors\n\n * type: array\n * subtype: cors\n * dynamic: ❓\n * required: ❌\n\n> the bucket's cross-origin resource sharing (cors) configuration\n\nsee cross-origin resourcesharing (cors)\n\n\n# defaultacl\n\n * type: array\n * subtype: accesscontrol\n * dynamic: ❓\n * required: ❌\n\n> the default access control configuration\n\nthe access control configuration to apply to bucket's blobs when no other configuration is specified.\nsee about access control lists\n\n\n# defaulteventbasedhold\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n> the default event-based hold for this bucket\n\n\n# defaultkmskeyname\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the default cloud kms key name for this bucket\n\n\n# iamconfiguration\n\n * type: iamconfiguration\n * dynamic: ❓\n * required: ❌\n\n> the bucket's iam configuration\n\nsee uniform bucket-level access\n\n\n# ifexists\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * default: error\n\n * possible values:\n   \n   * error\n   * update\n   * skip\n\n> policy to apply if a bucket already exists.\n\n\n# indexpage\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the bucket's website index page\n\nbehaves as the bucket's directory index where missing blobs are treated as potential directories.\n\n\n# labels\n\n * type: object\n * dynamic: ✔️\n * required: ❌\n\n> the labels of this bucket\n\n\n# lifecyclerules\n\n * type: array\n * subtype: bucketlifecyclerule\n * dynamic: ❓\n * required: ❌\n\n> the bucket's lifecycle configuration\n\nthis configuration is expressed as a number of lifecycle rules, consisting of an action and a condition.\nsee object lifecycle management\nonly the age condition is supported. only the delete and setstorageclass actions are supported\n\n\n# location\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the bucket's location\n\ndata for blobs in the bucket resides in physical storage within this region. a list of supported values is available here.\n\n\n# logging\n\n * type: logging\n * dynamic: ❓\n * required: ❌\n\n> the bucket's logging configuration\n\nthis configuration defines the destination bucket and optional name prefix for the current bucket's logs.\n\n\n# name\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> bucket's unique name\n\n\n# notfoundpage\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the custom object to return when a requested resource is not found\n\n\n# projectid\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the gcp project id\n\n\n# requesterpays\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n> whether the requester pays or not.\n\nwhether a user accessing the bucket or an object it contains should assume the transit costs related to the access.\n\n\n# retentionperiod\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n> retention period\n\nif policy is not locked this value can be cleared, increased, and decreased. if policy is locked the retention period can only be increased.\n\n\n# scopes\n\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n * default: [https://www.googleapis.com/auth/cloud-platform]\n\n> the gcp scopes to used\n\n\n# serviceaccount\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the gcp service account key\n\n\n# storageclass\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * possible values:\n   \n   * regional\n   * multi_regional\n   * nearline\n   * coldline\n   * standard\n   * archive\n   * durable_reduced_availability\n\n> the bucket's storage class\n\nthis defines how blobs in the bucket are stored and determines the sla and the cost of storage. a list of supported values is available here.\n\n\n# versioningenabled\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n> whether versioning should be enabled for this bucket\n\nwhen set to true, versioning is fully enabled.\n\n\n# outputs\n\n\n# bucket\n\n * type: bucket\n\n> the bucket's info\n\n\n# created\n\n * type: boolean\n * default: false\n\n> if the bucket was created.\n\n\n# updated\n\n * type: boolean\n * default: false\n\n> if the bucket was updated.\n\n\n# definitions\n\n\n# condition\n\n# age\n\n * type: integer\n * dynamic: ✔️\n * required: ✔️\n\n> the age condition is satisfied when an object reaches the specified age (in days). age is measured from the object's creation time.\n\n\n# iamconfiguration\n\n# publicaccessprevention\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * possible values:\n   \n   * enforced\n   * unspecified\n   * unknown\n   * inherited\n\n# uniformbucketlevelaccessenabled\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n\n# entity\n\n# value\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the value for the entity (ex : user email if the type is user ...)\n\n\n# origin\n\n# value\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n\n# cors\n\n# maxageseconds\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n# methods\n\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n\n# origins\n\n * type: array\n * subtype: origin\n * dynamic: ❓\n * required: ❌\n\n# responseheaders\n\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n\n\n# accesscontrol\n\n# entity\n\n * type: entity\n * dynamic: ✔️\n * required: ✔️\n\n> the entity\n\n# role\n\n * type: string\n\n * dynamic: ✔️\n\n * required: ✔️\n\n * possible values:\n   \n   * reader\n   * writer\n   * owner\n\n> the role to assign to the entity\n\n\n# bucketlifecyclerule\n\n# action\n\n * type: action\n * dynamic: ✔️\n * required: ✔️\n\n> the action to take when a lifecycle condition is met\n\n# condition\n\n * type: condition\n * dynamic: ✔️\n * required: ✔️\n\n> the condition\n\n\n# action\n\n# value\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the value for the action (if any)\n\n\n# bucket\n\n# indexpage\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the bucket's website index page.\n\n# location\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the bucket's location\n\n# name\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the bucket's unique name\n\n# notfoundpage\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the custom object to return when a requested resource is not found.\n\n# uri\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the bucket's uri.\n\n\n# logging\n\n# logbucket\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# logobjectprefix\n\n * type: string\n * dynamic: ❓\n * required: ❌",charsets:{}},{title:"CreateBucketIamPolicy",frontmatter:{title:"CreateBucketIamPolicy",editLink:!1,description:"Add role on an existing bucket.",icon:"PHN2ZyBpZD0iUHJvZHVjdF9JY29ucyIgZGF0YS1uYW1lPSJQcm9kdWN0IEljb25zIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCAyNCAyNCI+PGRlZnM+PHN0eWxlPi5jbHMtMXtmaWxsOiNhZWNiZmE7fS5jbHMtMntmaWxsOiM2NjlkZjY7fS5jbHMtM3tmaWxsOiM0Mjg1ZjQ7fS5jbHMtNHtmaWxsOiNmZmY7fTwvc3R5bGU+PC9kZWZzPjx0aXRsZT5JY29uXzI0cHhfQ29sb3JfQ2xvdWRTdG9yYWdlPC90aXRsZT48cmVjdCBjbGFzcz0iY2xzLTEiIHg9IjIiIHk9IjQiIHdpZHRoPSIyMCIgaGVpZ2h0PSI3Ii8+PHJlY3QgY2xhc3M9ImNscy0yIiB4PSIyMCIgeT0iNCIgd2lkdGg9IjIiIGhlaWdodD0iNyIvPjxwb2x5Z29uIGNsYXNzPSJjbHMtMyIgcG9pbnRzPSIyMiA0IDIwIDQgMjAgMTEgMjIgNCIvPjxyZWN0IGNsYXNzPSJjbHMtMiIgeD0iMiIgeT0iNCIgd2lkdGg9IjIiIGhlaWdodD0iNyIvPjxyZWN0IGNsYXNzPSJjbHMtNCIgeD0iNiIgeT0iNyIgd2lkdGg9IjYiIGhlaWdodD0iMSIvPjxyZWN0IGNsYXNzPSJjbHMtNCIgeD0iMTUiIHk9IjYiIHdpZHRoPSIzIiBoZWlnaHQ9IjMiIHJ4PSIxLjUiLz48cmVjdCBjbGFzcz0iY2xzLTEiIHg9IjIiIHk9IjEzIiB3aWR0aD0iMjAiIGhlaWdodD0iNyIvPjxyZWN0IGNsYXNzPSJjbHMtMiIgeD0iMjAiIHk9IjEzIiB3aWR0aD0iMiIgaGVpZ2h0PSI3Ii8+PHBvbHlnb24gY2xhc3M9ImNscy0zIiBwb2ludHM9IjIyIDEzIDIwIDEzIDIwIDIwIDIyIDEzIi8+PHJlY3QgY2xhc3M9ImNscy0yIiB4PSIyIiB5PSIxMyIgd2lkdGg9IjIiIGhlaWdodD0iNyIvPjxyZWN0IGNsYXNzPSJjbHMtNCIgeD0iNiIgeT0iMTYiIHdpZHRoPSI2IiBoZWlnaHQ9IjEiLz48cmVjdCBjbGFzcz0iY2xzLTQiIHg9IjE1IiB5PSIxNSIgd2lkdGg9IjMiIGhlaWdodD0iMyIgcng9IjEuNSIvPjwvc3ZnPg==",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"CreateBucketIamPolicy"},{property:"og:description",content:"Add role on an existing bucket. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-gcp/tasks/gcs/io.kestra.plugin.gcp.gcs.CreateBucketIamPolicy.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"CreateBucketIamPolicy"},{name:"twitter:description",content:"Add role on an existing bucket. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-gcp/tasks/gcs/io.kestra.plugin.gcp.gcs.CreateBucketIamPolicy.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-gcp/tasks/gcs/io.kestra.plugin.gcp.gcs.CreateBucketIamPolicy.html",relativePath:"plugins/plugin-gcp/tasks/gcs/io.kestra.plugin.gcp.gcs.CreateBucketIamPolicy.md",key:"v-0098a6ba",path:"/plugins/plugin-gcp/tasks/gcs/io.kestra.plugin.gcp.gcs.CreateBucketIamPolicy.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:118},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:355},{level:3,title:"ifExists",slug:"ifexists",normalizedTitle:"ifexists",charIndex:370},{level:3,title:"member",slug:"member",normalizedTitle:"member",charIndex:277},{level:3,title:"name",slug:"name",normalizedTitle:"name",charIndex:259},{level:3,title:"projectId",slug:"projectid",normalizedTitle:"projectid",charIndex:706},{level:3,title:"role",slug:"role",normalizedTitle:"role",charIndex:86},{level:3,title:"scopes",slug:"scopes",normalizedTitle:"scopes",charIndex:869},{level:3,title:"serviceAccount",slug:"serviceaccount",normalizedTitle:"serviceaccount",charIndex:1031},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1127},{level:3,title:"bucket",slug:"bucket",normalizedTitle:"bucket",charIndex:106},{level:3,title:"created",slug:"created",normalizedTitle:"created",charIndex:1185},{level:3,title:"member",slug:"member-2",normalizedTitle:"member",charIndex:277},{level:3,title:"role",slug:"role-2",normalizedTitle:"role",charIndex:86},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:1351}],headersStr:"Examples Properties ifExists member name projectId role scopes serviceAccount Outputs bucket created member role Definitions",content:'CreateBucketIamPolicy\n\ntype: "io.kestra.plugin.gcp.gcs.CreateBucketIamPolicy"\n\n\n> Add role on an existing bucket.\n\n\n# Examples\n\n> Add role to a service account on a bucket\n\nid: "create_bucket_iam_policy"\ntype: "io.kestra.plugin.gcp.gcs.CreateBucketIamPolicy"\nname: "my-bucket"\nmember: "sa@project.iam.gserviceaccount.com"\nrole: "roles/storage.admin"\n\n\n\n# Properties\n\n\n# ifExists\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Default: SKIP\n\n * Possible Values:\n   \n   * ERROR\n   * SKIP\n\n> Policy to apply if a policy already exists.\n\n\n# member\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> Bucket\'s unique name\n\n\n# name\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> Bucket\'s unique name\n\n\n# projectId\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The GCP project id\n\n\n# role\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> Bucket\'s unique name\n\n\n# scopes\n\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n * Default: [https://www.googleapis.com/auth/cloud-platform]\n\n> The GCP scopes to used\n\n\n# serviceAccount\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The GCP service account key\n\n\n# Outputs\n\n\n# bucket\n\n * Type: string\n\n> The bucket uri\n\n\n# created\n\n * Type: boolean\n\n> If the binding was added, or already exist\n\n\n# member\n\n * Type: string\n\n> The bucket uri\n\n\n# role\n\n * Type: string\n\n> The bucket uri\n\n\n# Definitions',normalizedContent:'createbucketiampolicy\n\ntype: "io.kestra.plugin.gcp.gcs.createbucketiampolicy"\n\n\n> add role on an existing bucket.\n\n\n# examples\n\n> add role to a service account on a bucket\n\nid: "create_bucket_iam_policy"\ntype: "io.kestra.plugin.gcp.gcs.createbucketiampolicy"\nname: "my-bucket"\nmember: "sa@project.iam.gserviceaccount.com"\nrole: "roles/storage.admin"\n\n\n\n# properties\n\n\n# ifexists\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * default: skip\n\n * possible values:\n   \n   * error\n   * skip\n\n> policy to apply if a policy already exists.\n\n\n# member\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> bucket\'s unique name\n\n\n# name\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> bucket\'s unique name\n\n\n# projectid\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the gcp project id\n\n\n# role\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> bucket\'s unique name\n\n\n# scopes\n\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n * default: [https://www.googleapis.com/auth/cloud-platform]\n\n> the gcp scopes to used\n\n\n# serviceaccount\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the gcp service account key\n\n\n# outputs\n\n\n# bucket\n\n * type: string\n\n> the bucket uri\n\n\n# created\n\n * type: boolean\n\n> if the binding was added, or already exist\n\n\n# member\n\n * type: string\n\n> the bucket uri\n\n\n# role\n\n * type: string\n\n> the bucket uri\n\n\n# definitions',charsets:{}},{title:"Delete",frontmatter:{title:"Delete",editLink:!1,description:"Delete a file to a GCS bucket.",icon:"PHN2ZyBpZD0iUHJvZHVjdF9JY29ucyIgZGF0YS1uYW1lPSJQcm9kdWN0IEljb25zIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCAyNCAyNCI+PGRlZnM+PHN0eWxlPi5jbHMtMXtmaWxsOiNhZWNiZmE7fS5jbHMtMntmaWxsOiM2NjlkZjY7fS5jbHMtM3tmaWxsOiM0Mjg1ZjQ7fS5jbHMtNHtmaWxsOiNmZmY7fTwvc3R5bGU+PC9kZWZzPjx0aXRsZT5JY29uXzI0cHhfQ29sb3JfQ2xvdWRTdG9yYWdlPC90aXRsZT48cmVjdCBjbGFzcz0iY2xzLTEiIHg9IjIiIHk9IjQiIHdpZHRoPSIyMCIgaGVpZ2h0PSI3Ii8+PHJlY3QgY2xhc3M9ImNscy0yIiB4PSIyMCIgeT0iNCIgd2lkdGg9IjIiIGhlaWdodD0iNyIvPjxwb2x5Z29uIGNsYXNzPSJjbHMtMyIgcG9pbnRzPSIyMiA0IDIwIDQgMjAgMTEgMjIgNCIvPjxyZWN0IGNsYXNzPSJjbHMtMiIgeD0iMiIgeT0iNCIgd2lkdGg9IjIiIGhlaWdodD0iNyIvPjxyZWN0IGNsYXNzPSJjbHMtNCIgeD0iNiIgeT0iNyIgd2lkdGg9IjYiIGhlaWdodD0iMSIvPjxyZWN0IGNsYXNzPSJjbHMtNCIgeD0iMTUiIHk9IjYiIHdpZHRoPSIzIiBoZWlnaHQ9IjMiIHJ4PSIxLjUiLz48cmVjdCBjbGFzcz0iY2xzLTEiIHg9IjIiIHk9IjEzIiB3aWR0aD0iMjAiIGhlaWdodD0iNyIvPjxyZWN0IGNsYXNzPSJjbHMtMiIgeD0iMjAiIHk9IjEzIiB3aWR0aD0iMiIgaGVpZ2h0PSI3Ii8+PHBvbHlnb24gY2xhc3M9ImNscy0zIiBwb2ludHM9IjIyIDEzIDIwIDEzIDIwIDIwIDIyIDEzIi8+PHJlY3QgY2xhc3M9ImNscy0yIiB4PSIyIiB5PSIxMyIgd2lkdGg9IjIiIGhlaWdodD0iNyIvPjxyZWN0IGNsYXNzPSJjbHMtNCIgeD0iNiIgeT0iMTYiIHdpZHRoPSI2IiBoZWlnaHQ9IjEiLz48cmVjdCBjbGFzcz0iY2xzLTQiIHg9IjE1IiB5PSIxNSIgd2lkdGg9IjMiIGhlaWdodD0iMyIgcng9IjEuNSIvPjwvc3ZnPg==",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Delete"},{property:"og:description",content:"Delete a file to a GCS bucket. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-gcp/tasks/gcs/io.kestra.plugin.gcp.gcs.Delete.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Delete"},{name:"twitter:description",content:"Delete a file to a GCS bucket. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-gcp/tasks/gcs/io.kestra.plugin.gcp.gcs.Delete.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-gcp/tasks/gcs/io.kestra.plugin.gcp.gcs.Delete.html",relativePath:"plugins/plugin-gcp/tasks/gcs/io.kestra.plugin.gcp.gcs.Delete.md",key:"v-5d6ce852",path:"/plugins/plugin-gcp/tasks/gcs/io.kestra.plugin.gcp.gcs.Delete.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:87},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:190},{level:3,title:"errorOnMissing",slug:"erroronmissing",normalizedTitle:"erroronmissing",charIndex:205},{level:3,title:"projectId",slug:"projectid",normalizedTitle:"projectid",charIndex:333},{level:3,title:"scopes",slug:"scopes",normalizedTitle:"scopes",charIndex:415},{level:3,title:"serviceAccount",slug:"serviceaccount",normalizedTitle:"serviceaccount",charIndex:577},{level:3,title:"uri",slug:"uri",normalizedTitle:"uri",charIndex:150},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:750},{level:3,title:"deleted",slug:"deleted",normalizedTitle:"deleted",charIndex:762},{level:3,title:"uri",slug:"uri-2",normalizedTitle:"uri",charIndex:150},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:871}],headersStr:"Examples Properties errorOnMissing projectId scopes serviceAccount uri Outputs deleted uri Definitions",content:'Delete\n\ntype: "io.kestra.plugin.gcp.gcs.Delete"\n\n\n> Delete a file to a GCS bucket.\n\n\n# Examples\n\nid: "delete"\ntype: "io.kestra.plugin.gcp.gcs.Delete"\nuri: "gs://my_bucket/dir/file.csv"\n\n\n\n# Properties\n\n\n# errorOnMissing\n\n * Type: boolean\n * Dynamic: ✔️\n * Required: ❌\n * Default: false\n\n> raise an error if the file is not found\n\n\n# projectId\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The GCP project id\n\n\n# scopes\n\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n * Default: [https://www.googleapis.com/auth/cloud-platform]\n\n> The GCP scopes to used\n\n\n# serviceAccount\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The GCP service account key\n\n\n# uri\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The file to delete\n\n\n# Outputs\n\n\n# deleted\n\n * Type: boolean\n\n> If the files was really deleted\n\n\n# uri\n\n * Type: string\n\n> The deleted uri\n\n\n# Definitions',normalizedContent:'delete\n\ntype: "io.kestra.plugin.gcp.gcs.delete"\n\n\n> delete a file to a gcs bucket.\n\n\n# examples\n\nid: "delete"\ntype: "io.kestra.plugin.gcp.gcs.delete"\nuri: "gs://my_bucket/dir/file.csv"\n\n\n\n# properties\n\n\n# erroronmissing\n\n * type: boolean\n * dynamic: ✔️\n * required: ❌\n * default: false\n\n> raise an error if the file is not found\n\n\n# projectid\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the gcp project id\n\n\n# scopes\n\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n * default: [https://www.googleapis.com/auth/cloud-platform]\n\n> the gcp scopes to used\n\n\n# serviceaccount\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the gcp service account key\n\n\n# uri\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the file to delete\n\n\n# outputs\n\n\n# deleted\n\n * type: boolean\n\n> if the files was really deleted\n\n\n# uri\n\n * type: string\n\n> the deleted uri\n\n\n# definitions',charsets:{}},{title:"DeleteBucket",frontmatter:{title:"DeleteBucket",editLink:!1,description:"Delete a bucket.",icon:"PHN2ZyBpZD0iUHJvZHVjdF9JY29ucyIgZGF0YS1uYW1lPSJQcm9kdWN0IEljb25zIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCAyNCAyNCI+PGRlZnM+PHN0eWxlPi5jbHMtMXtmaWxsOiNhZWNiZmE7fS5jbHMtMntmaWxsOiM2NjlkZjY7fS5jbHMtM3tmaWxsOiM0Mjg1ZjQ7fS5jbHMtNHtmaWxsOiNmZmY7fTwvc3R5bGU+PC9kZWZzPjx0aXRsZT5JY29uXzI0cHhfQ29sb3JfQ2xvdWRTdG9yYWdlPC90aXRsZT48cmVjdCBjbGFzcz0iY2xzLTEiIHg9IjIiIHk9IjQiIHdpZHRoPSIyMCIgaGVpZ2h0PSI3Ii8+PHJlY3QgY2xhc3M9ImNscy0yIiB4PSIyMCIgeT0iNCIgd2lkdGg9IjIiIGhlaWdodD0iNyIvPjxwb2x5Z29uIGNsYXNzPSJjbHMtMyIgcG9pbnRzPSIyMiA0IDIwIDQgMjAgMTEgMjIgNCIvPjxyZWN0IGNsYXNzPSJjbHMtMiIgeD0iMiIgeT0iNCIgd2lkdGg9IjIiIGhlaWdodD0iNyIvPjxyZWN0IGNsYXNzPSJjbHMtNCIgeD0iNiIgeT0iNyIgd2lkdGg9IjYiIGhlaWdodD0iMSIvPjxyZWN0IGNsYXNzPSJjbHMtNCIgeD0iMTUiIHk9IjYiIHdpZHRoPSIzIiBoZWlnaHQ9IjMiIHJ4PSIxLjUiLz48cmVjdCBjbGFzcz0iY2xzLTEiIHg9IjIiIHk9IjEzIiB3aWR0aD0iMjAiIGhlaWdodD0iNyIvPjxyZWN0IGNsYXNzPSJjbHMtMiIgeD0iMjAiIHk9IjEzIiB3aWR0aD0iMiIgaGVpZ2h0PSI3Ii8+PHBvbHlnb24gY2xhc3M9ImNscy0zIiBwb2ludHM9IjIyIDEzIDIwIDEzIDIwIDIwIDIyIDEzIi8+PHJlY3QgY2xhc3M9ImNscy0yIiB4PSIyIiB5PSIxMyIgd2lkdGg9IjIiIGhlaWdodD0iNyIvPjxyZWN0IGNsYXNzPSJjbHMtNCIgeD0iNiIgeT0iMTYiIHdpZHRoPSI2IiBoZWlnaHQ9IjEiLz48cmVjdCBjbGFzcz0iY2xzLTQiIHg9IjE1IiB5PSIxNSIgd2lkdGg9IjMiIGhlaWdodD0iMyIgcng9IjEuNSIvPjwvc3ZnPg==",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"DeleteBucket"},{property:"og:description",content:"Delete a bucket. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-gcp/tasks/gcs/io.kestra.plugin.gcp.gcs.DeleteBucket.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"DeleteBucket"},{name:"twitter:description",content:"Delete a bucket. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-gcp/tasks/gcs/io.kestra.plugin.gcp.gcs.DeleteBucket.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-gcp/tasks/gcs/io.kestra.plugin.gcp.gcs.DeleteBucket.html",relativePath:"plugins/plugin-gcp/tasks/gcs/io.kestra.plugin.gcp.gcs.DeleteBucket.md",key:"v-577c0243",path:"/plugins/plugin-gcp/tasks/gcs/io.kestra.plugin.gcp.gcs.DeleteBucket.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:85},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:203},{level:3,title:"name",slug:"name",normalizedTitle:"name",charIndex:180},{level:3,title:"projectId",slug:"projectid",normalizedTitle:"projectid",charIndex:299},{level:3,title:"scopes",slug:"scopes",normalizedTitle:"scopes",charIndex:382},{level:3,title:"serviceAccount",slug:"serviceaccount",normalizedTitle:"serviceaccount",charIndex:544},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:640},{level:3,title:"bucket",slug:"bucket",normalizedTitle:"bucket",charIndex:73},{level:3,title:"bucketUri",slug:"bucketuri",normalizedTitle:"bucketuri",charIndex:708},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:759}],headersStr:"Examples Properties name projectId scopes serviceAccount Outputs bucket bucketUri Definitions",content:'DeleteBucket\n\ntype: "io.kestra.plugin.gcp.gcs.DeleteBucket"\n\n\n> Delete a bucket.\n\n\n# Examples\n\n> Delete a bucket\n\nid: "delete_bucket"\ntype: "io.kestra.plugin.gcp.gcs.DeleteBucket"\nname: "my-bucket"\n\n\n\n# Properties\n\n\n# name\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> Bucket\'s unique name\n\n\n# projectId\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The GCP project id\n\n\n# scopes\n\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n * Default: [https://www.googleapis.com/auth/cloud-platform]\n\n> The GCP scopes to used\n\n\n# serviceAccount\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The GCP service account key\n\n\n# Outputs\n\n\n# bucket\n\n * Type: string\n\n> The bucket\'s unique name\n\n\n# bucketUri\n\n * Type: string\n\n> The bucket\'s URI\n\n\n# Definitions',normalizedContent:'deletebucket\n\ntype: "io.kestra.plugin.gcp.gcs.deletebucket"\n\n\n> delete a bucket.\n\n\n# examples\n\n> delete a bucket\n\nid: "delete_bucket"\ntype: "io.kestra.plugin.gcp.gcs.deletebucket"\nname: "my-bucket"\n\n\n\n# properties\n\n\n# name\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> bucket\'s unique name\n\n\n# projectid\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the gcp project id\n\n\n# scopes\n\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n * default: [https://www.googleapis.com/auth/cloud-platform]\n\n> the gcp scopes to used\n\n\n# serviceaccount\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the gcp service account key\n\n\n# outputs\n\n\n# bucket\n\n * type: string\n\n> the bucket\'s unique name\n\n\n# bucketuri\n\n * type: string\n\n> the bucket\'s uri\n\n\n# definitions',charsets:{}},{title:"DeleteList",frontmatter:{title:"DeleteList",editLink:!1,description:"Delete all file to a GCS bucket.",icon:"PHN2ZyBpZD0iUHJvZHVjdF9JY29ucyIgZGF0YS1uYW1lPSJQcm9kdWN0IEljb25zIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCAyNCAyNCI+PGRlZnM+PHN0eWxlPi5jbHMtMXtmaWxsOiNhZWNiZmE7fS5jbHMtMntmaWxsOiM2NjlkZjY7fS5jbHMtM3tmaWxsOiM0Mjg1ZjQ7fS5jbHMtNHtmaWxsOiNmZmY7fTwvc3R5bGU+PC9kZWZzPjx0aXRsZT5JY29uXzI0cHhfQ29sb3JfQ2xvdWRTdG9yYWdlPC90aXRsZT48cmVjdCBjbGFzcz0iY2xzLTEiIHg9IjIiIHk9IjQiIHdpZHRoPSIyMCIgaGVpZ2h0PSI3Ii8+PHJlY3QgY2xhc3M9ImNscy0yIiB4PSIyMCIgeT0iNCIgd2lkdGg9IjIiIGhlaWdodD0iNyIvPjxwb2x5Z29uIGNsYXNzPSJjbHMtMyIgcG9pbnRzPSIyMiA0IDIwIDQgMjAgMTEgMjIgNCIvPjxyZWN0IGNsYXNzPSJjbHMtMiIgeD0iMiIgeT0iNCIgd2lkdGg9IjIiIGhlaWdodD0iNyIvPjxyZWN0IGNsYXNzPSJjbHMtNCIgeD0iNiIgeT0iNyIgd2lkdGg9IjYiIGhlaWdodD0iMSIvPjxyZWN0IGNsYXNzPSJjbHMtNCIgeD0iMTUiIHk9IjYiIHdpZHRoPSIzIiBoZWlnaHQ9IjMiIHJ4PSIxLjUiLz48cmVjdCBjbGFzcz0iY2xzLTEiIHg9IjIiIHk9IjEzIiB3aWR0aD0iMjAiIGhlaWdodD0iNyIvPjxyZWN0IGNsYXNzPSJjbHMtMiIgeD0iMjAiIHk9IjEzIiB3aWR0aD0iMiIgaGVpZ2h0PSI3Ii8+PHBvbHlnb24gY2xhc3M9ImNscy0zIiBwb2ludHM9IjIyIDEzIDIwIDEzIDIwIDIwIDIyIDEzIi8+PHJlY3QgY2xhc3M9ImNscy0yIiB4PSIyIiB5PSIxMyIgd2lkdGg9IjIiIGhlaWdodD0iNyIvPjxyZWN0IGNsYXNzPSJjbHMtNCIgeD0iNiIgeT0iMTYiIHdpZHRoPSI2IiBoZWlnaHQ9IjEiLz48cmVjdCBjbGFzcz0iY2xzLTQiIHg9IjE1IiB5PSIxNSIgd2lkdGg9IjMiIGhlaWdodD0iMyIgcng9IjEuNSIvPjwvc3ZnPg==",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"DeleteList"},{property:"og:description",content:"Delete all file to a GCS bucket. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-gcp/tasks/gcs/io.kestra.plugin.gcp.gcs.DeleteList.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"DeleteList"},{name:"twitter:description",content:"Delete all file to a GCS bucket. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-gcp/tasks/gcs/io.kestra.plugin.gcp.gcs.DeleteList.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-gcp/tasks/gcs/io.kestra.plugin.gcp.gcs.DeleteList.html",relativePath:"plugins/plugin-gcp/tasks/gcs/io.kestra.plugin.gcp.gcs.DeleteList.md",key:"v-4b49bddb",path:"/plugins/plugin-gcp/tasks/gcs/io.kestra.plugin.gcp.gcs.DeleteList.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:97},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:202},{level:3,title:"allVersions",slug:"allversions",normalizedTitle:"allversions",charIndex:217},{level:3,title:"concurrent",slug:"concurrent",normalizedTitle:"concurrent",charIndex:352},{level:3,title:"errorOnEmpty",slug:"erroronempty",normalizedTitle:"erroronempty",charIndex:478},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:169},{level:3,title:"listingType",slug:"listingtype",normalizedTitle:"listingtype",charIndex:685},{level:3,title:"projectId",slug:"projectid",normalizedTitle:"projectid",charIndex:1144},{level:3,title:"regExp",slug:"regexp",normalizedTitle:"regexp",charIndex:1226},{level:3,title:"scopes",slug:"scopes",normalizedTitle:"scopes",charIndex:1441},{level:3,title:"serviceAccount",slug:"serviceaccount",normalizedTitle:"serviceaccount",charIndex:1603},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1699},{level:3,title:"count",slug:"count",normalizedTitle:"count",charIndex:1612},{level:3,title:"size",slug:"size",normalizedTitle:"size",charIndex:1783},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:1857}],headersStr:"Examples Properties allVersions concurrent errorOnEmpty from listingType projectId regExp scopes serviceAccount Outputs count size Definitions",content:'DeleteList\n\ntype: "io.kestra.plugin.gcp.gcs.DeleteList"\n\n\n> Delete all file to a GCS bucket.\n\n\n# Examples\n\nid: "delete_list"\ntype: "io.kestra.plugin.gcp.gcs.DeleteList"\nfrom: "gs://my_bucket/dir/"\n\n\n\n# Properties\n\n\n# allVersions\n\n * Type: boolean\n * Dynamic: ✔️\n * Required: ❌\n\n> If set to true, lists all versions of a blob. The default is false.\n\n\n# concurrent\n\n * Type: integer\n * Dynamic: ❌\n * Required: ❌\n * Minimum: &gt;= 2\n\n> Number of concurrent parrallels deletion\n\n\n# errorOnEmpty\n\n * Type: boolean\n * Dynamic: ✔️\n * Required: ❌\n * Default: false\n\n> raise an error if the file is not found\n\n\n# from\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n\n> The directory to list\n\n\n# listingType\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Default: DIRECTORY\n\n * Possible Values:\n   \n   * RECURSIVE\n   * DIRECTORY\n\n> The listing type you want (like directory or recursive)\n\nif DIRECTORY, will only list objects in the specified directory\nif RECURSIVE, will list objects in the specified directory recursively\nDefault value is DIRECTORY\nWhen using RECURSIVE value, be carefull to move your files to a location not in the from scope\n\n\n# projectId\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The GCP project id\n\n\n# regExp\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> A regexp to filter on full path\n\nex:\nregExp: .* to match all files\nregExp: .*2020-01-0.\\\\.csv to match files between 01 and 09 of january ending with .csv\n\n\n# scopes\n\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n * Default: [https://www.googleapis.com/auth/cloud-platform]\n\n> The GCP scopes to used\n\n\n# serviceAccount\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The GCP service account key\n\n\n# Outputs\n\n\n# count\n\n * Type: integer\n * Default: 0\n\n> The count of blobs deleted\n\n\n# size\n\n * Type: integer\n * Default: 0\n\n> The size of all blobs deleted\n\n\n# Definitions',normalizedContent:'deletelist\n\ntype: "io.kestra.plugin.gcp.gcs.deletelist"\n\n\n> delete all file to a gcs bucket.\n\n\n# examples\n\nid: "delete_list"\ntype: "io.kestra.plugin.gcp.gcs.deletelist"\nfrom: "gs://my_bucket/dir/"\n\n\n\n# properties\n\n\n# allversions\n\n * type: boolean\n * dynamic: ✔️\n * required: ❌\n\n> if set to true, lists all versions of a blob. the default is false.\n\n\n# concurrent\n\n * type: integer\n * dynamic: ❌\n * required: ❌\n * minimum: &gt;= 2\n\n> number of concurrent parrallels deletion\n\n\n# erroronempty\n\n * type: boolean\n * dynamic: ✔️\n * required: ❌\n * default: false\n\n> raise an error if the file is not found\n\n\n# from\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n\n> the directory to list\n\n\n# listingtype\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * default: directory\n\n * possible values:\n   \n   * recursive\n   * directory\n\n> the listing type you want (like directory or recursive)\n\nif directory, will only list objects in the specified directory\nif recursive, will list objects in the specified directory recursively\ndefault value is directory\nwhen using recursive value, be carefull to move your files to a location not in the from scope\n\n\n# projectid\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the gcp project id\n\n\n# regexp\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> a regexp to filter on full path\n\nex:\nregexp: .* to match all files\nregexp: .*2020-01-0.\\\\.csv to match files between 01 and 09 of january ending with .csv\n\n\n# scopes\n\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n * default: [https://www.googleapis.com/auth/cloud-platform]\n\n> the gcp scopes to used\n\n\n# serviceaccount\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the gcp service account key\n\n\n# outputs\n\n\n# count\n\n * type: integer\n * default: 0\n\n> the count of blobs deleted\n\n\n# size\n\n * type: integer\n * default: 0\n\n> the size of all blobs deleted\n\n\n# definitions',charsets:{}},{title:"Download",frontmatter:{title:"Download",editLink:!1,description:"Download a file from a GCS bucket.",icon:"PHN2ZyBpZD0iUHJvZHVjdF9JY29ucyIgZGF0YS1uYW1lPSJQcm9kdWN0IEljb25zIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCAyNCAyNCI+PGRlZnM+PHN0eWxlPi5jbHMtMXtmaWxsOiNhZWNiZmE7fS5jbHMtMntmaWxsOiM2NjlkZjY7fS5jbHMtM3tmaWxsOiM0Mjg1ZjQ7fS5jbHMtNHtmaWxsOiNmZmY7fTwvc3R5bGU+PC9kZWZzPjx0aXRsZT5JY29uXzI0cHhfQ29sb3JfQ2xvdWRTdG9yYWdlPC90aXRsZT48cmVjdCBjbGFzcz0iY2xzLTEiIHg9IjIiIHk9IjQiIHdpZHRoPSIyMCIgaGVpZ2h0PSI3Ii8+PHJlY3QgY2xhc3M9ImNscy0yIiB4PSIyMCIgeT0iNCIgd2lkdGg9IjIiIGhlaWdodD0iNyIvPjxwb2x5Z29uIGNsYXNzPSJjbHMtMyIgcG9pbnRzPSIyMiA0IDIwIDQgMjAgMTEgMjIgNCIvPjxyZWN0IGNsYXNzPSJjbHMtMiIgeD0iMiIgeT0iNCIgd2lkdGg9IjIiIGhlaWdodD0iNyIvPjxyZWN0IGNsYXNzPSJjbHMtNCIgeD0iNiIgeT0iNyIgd2lkdGg9IjYiIGhlaWdodD0iMSIvPjxyZWN0IGNsYXNzPSJjbHMtNCIgeD0iMTUiIHk9IjYiIHdpZHRoPSIzIiBoZWlnaHQ9IjMiIHJ4PSIxLjUiLz48cmVjdCBjbGFzcz0iY2xzLTEiIHg9IjIiIHk9IjEzIiB3aWR0aD0iMjAiIGhlaWdodD0iNyIvPjxyZWN0IGNsYXNzPSJjbHMtMiIgeD0iMjAiIHk9IjEzIiB3aWR0aD0iMiIgaGVpZ2h0PSI3Ii8+PHBvbHlnb24gY2xhc3M9ImNscy0zIiBwb2ludHM9IjIyIDEzIDIwIDEzIDIwIDIwIDIyIDEzIi8+PHJlY3QgY2xhc3M9ImNscy0yIiB4PSIyIiB5PSIxMyIgd2lkdGg9IjIiIGhlaWdodD0iNyIvPjxyZWN0IGNsYXNzPSJjbHMtNCIgeD0iNiIgeT0iMTYiIHdpZHRoPSI2IiBoZWlnaHQ9IjEiLz48cmVjdCBjbGFzcz0iY2xzLTQiIHg9IjE1IiB5PSIxNSIgd2lkdGg9IjMiIGhlaWdodD0iMyIgcng9IjEuNSIvPjwvc3ZnPg==",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Download"},{property:"og:description",content:"Download a file from a GCS bucket. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-gcp/tasks/gcs/io.kestra.plugin.gcp.gcs.Download.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Download"},{name:"twitter:description",content:"Download a file from a GCS bucket. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-gcp/tasks/gcs/io.kestra.plugin.gcp.gcs.Download.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-gcp/tasks/gcs/io.kestra.plugin.gcp.gcs.Download.html",relativePath:"plugins/plugin-gcp/tasks/gcs/io.kestra.plugin.gcp.gcs.Download.md",key:"v-705330c6",path:"/plugins/plugin-gcp/tasks/gcs/io.kestra.plugin.gcp.gcs.Download.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:95},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:203},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:72},{level:3,title:"projectId",slug:"projectid",normalizedTitle:"projectid",charIndex:294},{level:3,title:"scopes",slug:"scopes",normalizedTitle:"scopes",charIndex:376},{level:3,title:"serviceAccount",slug:"serviceaccount",normalizedTitle:"serviceaccount",charIndex:538},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:634},{level:3,title:"bucket",slug:"bucket",normalizedTitle:"bucket",charIndex:83},{level:3,title:"path",slug:"path",normalizedTitle:"path",charIndex:711},{level:3,title:"uri",slug:"uri",normalizedTitle:"uri",charIndex:786},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:863}],headersStr:"Examples Properties from projectId scopes serviceAccount Outputs bucket path uri Definitions",content:'Download\n\ntype: "io.kestra.plugin.gcp.gcs.Download"\n\n\n> Download a file from a GCS bucket.\n\n\n# Examples\n\nid: "download"\ntype: "io.kestra.plugin.gcp.gcs.Download"\nfrom: "gs://my_bucket/dir/file.csv"\n\n\n\n# Properties\n\n\n# from\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The file to copy\n\n\n# projectId\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The GCP project id\n\n\n# scopes\n\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n * Default: [https://www.googleapis.com/auth/cloud-platform]\n\n> The GCP scopes to used\n\n\n# serviceAccount\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The GCP service account key\n\n\n# Outputs\n\n\n# bucket\n\n * Type: string\n\n> The bucket of the downloaded file\n\n\n# path\n\n * Type: string\n\n> The path on the bucket of the downloaded file\n\n\n# uri\n\n * Type: string\n\n> The url of the downloaded file on kestra storage\n\n\n# Definitions',normalizedContent:'download\n\ntype: "io.kestra.plugin.gcp.gcs.download"\n\n\n> download a file from a gcs bucket.\n\n\n# examples\n\nid: "download"\ntype: "io.kestra.plugin.gcp.gcs.download"\nfrom: "gs://my_bucket/dir/file.csv"\n\n\n\n# properties\n\n\n# from\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the file to copy\n\n\n# projectid\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the gcp project id\n\n\n# scopes\n\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n * default: [https://www.googleapis.com/auth/cloud-platform]\n\n> the gcp scopes to used\n\n\n# serviceaccount\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the gcp service account key\n\n\n# outputs\n\n\n# bucket\n\n * type: string\n\n> the bucket of the downloaded file\n\n\n# path\n\n * type: string\n\n> the path on the bucket of the downloaded file\n\n\n# uri\n\n * type: string\n\n> the url of the downloaded file on kestra storage\n\n\n# definitions',charsets:{}},{title:"Downloads",frontmatter:{title:"Downloads",editLink:!1,description:"Download multiple files from a GCS bucket.",icon:"PHN2ZyBpZD0iUHJvZHVjdF9JY29ucyIgZGF0YS1uYW1lPSJQcm9kdWN0IEljb25zIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCAyNCAyNCI+PGRlZnM+PHN0eWxlPi5jbHMtMXtmaWxsOiNhZWNiZmE7fS5jbHMtMntmaWxsOiM2NjlkZjY7fS5jbHMtM3tmaWxsOiM0Mjg1ZjQ7fS5jbHMtNHtmaWxsOiNmZmY7fTwvc3R5bGU+PC9kZWZzPjx0aXRsZT5JY29uXzI0cHhfQ29sb3JfQ2xvdWRTdG9yYWdlPC90aXRsZT48cmVjdCBjbGFzcz0iY2xzLTEiIHg9IjIiIHk9IjQiIHdpZHRoPSIyMCIgaGVpZ2h0PSI3Ii8+PHJlY3QgY2xhc3M9ImNscy0yIiB4PSIyMCIgeT0iNCIgd2lkdGg9IjIiIGhlaWdodD0iNyIvPjxwb2x5Z29uIGNsYXNzPSJjbHMtMyIgcG9pbnRzPSIyMiA0IDIwIDQgMjAgMTEgMjIgNCIvPjxyZWN0IGNsYXNzPSJjbHMtMiIgeD0iMiIgeT0iNCIgd2lkdGg9IjIiIGhlaWdodD0iNyIvPjxyZWN0IGNsYXNzPSJjbHMtNCIgeD0iNiIgeT0iNyIgd2lkdGg9IjYiIGhlaWdodD0iMSIvPjxyZWN0IGNsYXNzPSJjbHMtNCIgeD0iMTUiIHk9IjYiIHdpZHRoPSIzIiBoZWlnaHQ9IjMiIHJ4PSIxLjUiLz48cmVjdCBjbGFzcz0iY2xzLTEiIHg9IjIiIHk9IjEzIiB3aWR0aD0iMjAiIGhlaWdodD0iNyIvPjxyZWN0IGNsYXNzPSJjbHMtMiIgeD0iMjAiIHk9IjEzIiB3aWR0aD0iMiIgaGVpZ2h0PSI3Ii8+PHBvbHlnb24gY2xhc3M9ImNscy0zIiBwb2ludHM9IjIyIDEzIDIwIDEzIDIwIDIwIDIyIDEzIi8+PHJlY3QgY2xhc3M9ImNscy0yIiB4PSIyIiB5PSIxMyIgd2lkdGg9IjIiIGhlaWdodD0iNyIvPjxyZWN0IGNsYXNzPSJjbHMtNCIgeD0iNiIgeT0iMTYiIHdpZHRoPSI2IiBoZWlnaHQ9IjEiLz48cmVjdCBjbGFzcz0iY2xzLTQiIHg9IjE1IiB5PSIxNSIgd2lkdGg9IjMiIGhlaWdodD0iMyIgcng9IjEuNSIvPjwvc3ZnPg==",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Downloads"},{property:"og:description",content:"Download multiple files from a GCS bucket. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-gcp/tasks/gcs/io.kestra.plugin.gcp.gcs.Downloads.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Downloads"},{name:"twitter:description",content:"Download multiple files from a GCS bucket. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-gcp/tasks/gcs/io.kestra.plugin.gcp.gcs.Downloads.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-gcp/tasks/gcs/io.kestra.plugin.gcp.gcs.Downloads.html",relativePath:"plugins/plugin-gcp/tasks/gcs/io.kestra.plugin.gcp.gcs.Downloads.md",key:"v-767d6be3",path:"/plugins/plugin-gcp/tasks/gcs/io.kestra.plugin.gcp.gcs.Downloads.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:105},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:335},{level:3,title:"action",slug:"action",normalizedTitle:"action",charIndex:271},{level:3,title:"allVersions",slug:"allversions",normalizedTitle:"allversions",charIndex:490},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:82},{level:3,title:"listingType",slug:"listingtype",normalizedTitle:"listingtype",charIndex:705},{level:3,title:"moveDirectory",slug:"movedirectory",normalizedTitle:"movedirectory",charIndex:284},{level:3,title:"projectId",slug:"projectid",normalizedTitle:"projectid",charIndex:1274},{level:3,title:"regExp",slug:"regexp",normalizedTitle:"regexp",charIndex:1356},{level:3,title:"scopes",slug:"scopes",normalizedTitle:"scopes",charIndex:1571},{level:3,title:"serviceAccount",slug:"serviceaccount",normalizedTitle:"serviceaccount",charIndex:1733},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1829},{level:3,title:"blobs",slug:"blobs",normalizedTitle:"blobs",charIndex:1841},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:1938},{level:3,title:"Blob",slug:"blob",normalizedTitle:"blob",charIndex:1875}],headersStr:"Examples Properties action allVersions from listingType moveDirectory projectId regExp scopes serviceAccount Outputs blobs Definitions Blob",content:'Downloads\n\ntype: "io.kestra.plugin.gcp.gcs.Downloads"\n\n\n> Download multiple files from a GCS bucket.\n\n\n# Examples\n\n> Download a list of files and move it to an archive folders\n\nid: "downloads"\ntype: "io.kestra.plugin.gcp.gcs.Downloads"\nfrom: gs://my-bucket/kestra/files/\naction: MOVE\nmoveDirectory: gs://my-bucket/kestra/archive/\n\n\n\n# Properties\n\n\n# action\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Possible Values:\n   \n   * MOVE\n   * DELETE\n\n> The action to do on find files\n\n\n# allVersions\n\n * Type: boolean\n * Dynamic: ✔️\n * Required: ❌\n\n> If set to true, lists all versions of a blob. The default is false.\n\n\n# from\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The directory to list\n\n\n# listingType\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Default: DIRECTORY\n\n * Possible Values:\n   \n   * RECURSIVE\n   * DIRECTORY\n\n> The listing type you want (like directory or recursive)\n\nif DIRECTORY, will only list objects in the specified directory\nif RECURSIVE, will list objects in the specified directory recursively\nDefault value is DIRECTORY\nWhen using RECURSIVE value, be carefull to move your files to a location not in the from scope\n\n\n# moveDirectory\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The destination directory in case off MOVE\n\n\n# projectId\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The GCP project id\n\n\n# regExp\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> A regexp to filter on full path\n\nex:\nregExp: .* to match all files\nregExp: .*2020-01-0.\\\\.csv to match files between 01 and 09 of january ending with .csv\n\n\n# scopes\n\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n * Default: [https://www.googleapis.com/auth/cloud-platform]\n\n> The GCP scopes to used\n\n\n# serviceAccount\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The GCP service account key\n\n\n# Outputs\n\n\n# blobs\n\n * Type: array\n * SubType: Blob\n * SubType: ====\n\n> The bucket of the downloaded file\n\n\n# Definitions\n\n\n# Blob\n\n# bucket\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# cacheControl\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# componentCount\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n# contentDisposition\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# contentEncoding\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# contentLanguage\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# contentType\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# crc32c\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# createTime\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# customTime\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# deleteTime\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# etag\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# eventBasedHold\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n# generatedId\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# isDirectory\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n# kmsKeyName\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# md5\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# mediaLink\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# metaGeneration\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n# metadata\n\n * Type: object\n * Dynamic: ❓\n * Required: ❌\n\n# name\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# retentionExpirationTime\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n# selfLink\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# size\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n# temporaryHold\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n# timeStorageClassUpdated\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# updateTime\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# uri\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌',normalizedContent:'downloads\n\ntype: "io.kestra.plugin.gcp.gcs.downloads"\n\n\n> download multiple files from a gcs bucket.\n\n\n# examples\n\n> download a list of files and move it to an archive folders\n\nid: "downloads"\ntype: "io.kestra.plugin.gcp.gcs.downloads"\nfrom: gs://my-bucket/kestra/files/\naction: move\nmovedirectory: gs://my-bucket/kestra/archive/\n\n\n\n# properties\n\n\n# action\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * possible values:\n   \n   * move\n   * delete\n\n> the action to do on find files\n\n\n# allversions\n\n * type: boolean\n * dynamic: ✔️\n * required: ❌\n\n> if set to true, lists all versions of a blob. the default is false.\n\n\n# from\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the directory to list\n\n\n# listingtype\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * default: directory\n\n * possible values:\n   \n   * recursive\n   * directory\n\n> the listing type you want (like directory or recursive)\n\nif directory, will only list objects in the specified directory\nif recursive, will list objects in the specified directory recursively\ndefault value is directory\nwhen using recursive value, be carefull to move your files to a location not in the from scope\n\n\n# movedirectory\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the destination directory in case off move\n\n\n# projectid\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the gcp project id\n\n\n# regexp\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> a regexp to filter on full path\n\nex:\nregexp: .* to match all files\nregexp: .*2020-01-0.\\\\.csv to match files between 01 and 09 of january ending with .csv\n\n\n# scopes\n\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n * default: [https://www.googleapis.com/auth/cloud-platform]\n\n> the gcp scopes to used\n\n\n# serviceaccount\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the gcp service account key\n\n\n# outputs\n\n\n# blobs\n\n * type: array\n * subtype: blob\n * subtype: ====\n\n> the bucket of the downloaded file\n\n\n# definitions\n\n\n# blob\n\n# bucket\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# cachecontrol\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# componentcount\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n# contentdisposition\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# contentencoding\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# contentlanguage\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# contenttype\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# crc32c\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# createtime\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# customtime\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# deletetime\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# etag\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# eventbasedhold\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n# generatedid\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# isdirectory\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n# kmskeyname\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# md5\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# medialink\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# metageneration\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n# metadata\n\n * type: object\n * dynamic: ❓\n * required: ❌\n\n# name\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# retentionexpirationtime\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n# selflink\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# size\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n# temporaryhold\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n# timestorageclassupdated\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# updatetime\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# uri\n\n * type: string\n * dynamic: ❓\n * required: ❌',charsets:{}},{title:"List",frontmatter:{title:"List",editLink:!1,description:"List file on a GCS bucket.",icon:"PHN2ZyBpZD0iUHJvZHVjdF9JY29ucyIgZGF0YS1uYW1lPSJQcm9kdWN0IEljb25zIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCAyNCAyNCI+PGRlZnM+PHN0eWxlPi5jbHMtMXtmaWxsOiNhZWNiZmE7fS5jbHMtMntmaWxsOiM2NjlkZjY7fS5jbHMtM3tmaWxsOiM0Mjg1ZjQ7fS5jbHMtNHtmaWxsOiNmZmY7fTwvc3R5bGU+PC9kZWZzPjx0aXRsZT5JY29uXzI0cHhfQ29sb3JfQ2xvdWRTdG9yYWdlPC90aXRsZT48cmVjdCBjbGFzcz0iY2xzLTEiIHg9IjIiIHk9IjQiIHdpZHRoPSIyMCIgaGVpZ2h0PSI3Ii8+PHJlY3QgY2xhc3M9ImNscy0yIiB4PSIyMCIgeT0iNCIgd2lkdGg9IjIiIGhlaWdodD0iNyIvPjxwb2x5Z29uIGNsYXNzPSJjbHMtMyIgcG9pbnRzPSIyMiA0IDIwIDQgMjAgMTEgMjIgNCIvPjxyZWN0IGNsYXNzPSJjbHMtMiIgeD0iMiIgeT0iNCIgd2lkdGg9IjIiIGhlaWdodD0iNyIvPjxyZWN0IGNsYXNzPSJjbHMtNCIgeD0iNiIgeT0iNyIgd2lkdGg9IjYiIGhlaWdodD0iMSIvPjxyZWN0IGNsYXNzPSJjbHMtNCIgeD0iMTUiIHk9IjYiIHdpZHRoPSIzIiBoZWlnaHQ9IjMiIHJ4PSIxLjUiLz48cmVjdCBjbGFzcz0iY2xzLTEiIHg9IjIiIHk9IjEzIiB3aWR0aD0iMjAiIGhlaWdodD0iNyIvPjxyZWN0IGNsYXNzPSJjbHMtMiIgeD0iMjAiIHk9IjEzIiB3aWR0aD0iMiIgaGVpZ2h0PSI3Ii8+PHBvbHlnb24gY2xhc3M9ImNscy0zIiBwb2ludHM9IjIyIDEzIDIwIDEzIDIwIDIwIDIyIDEzIi8+PHJlY3QgY2xhc3M9ImNscy0yIiB4PSIyIiB5PSIxMyIgd2lkdGg9IjIiIGhlaWdodD0iNyIvPjxyZWN0IGNsYXNzPSJjbHMtNCIgeD0iNiIgeT0iMTYiIHdpZHRoPSI2IiBoZWlnaHQ9IjEiLz48cmVjdCBjbGFzcz0iY2xzLTQiIHg9IjE1IiB5PSIxNSIgd2lkdGg9IjMiIGhlaWdodD0iMyIgcng9IjEuNSIvPjwvc3ZnPg==",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"List"},{property:"og:description",content:"List file on a GCS bucket. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-gcp/tasks/gcs/io.kestra.plugin.gcp.gcs.List.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"List"},{name:"twitter:description",content:"List file on a GCS bucket. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-gcp/tasks/gcs/io.kestra.plugin.gcp.gcs.List.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-gcp/tasks/gcs/io.kestra.plugin.gcp.gcs.List.html",relativePath:"plugins/plugin-gcp/tasks/gcs/io.kestra.plugin.gcp.gcs.List.md",key:"v-4e398af1",path:"/plugins/plugin-gcp/tasks/gcs/io.kestra.plugin.gcp.gcs.List.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:79},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:197},{level:3,title:"allVersions",slug:"allversions",normalizedTitle:"allversions",charIndex:212},{level:3,title:"filter",slug:"filter",normalizedTitle:"filter",charIndex:347},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:164},{level:3,title:"listingType",slug:"listingtype",normalizedTitle:"listingtype",charIndex:599},{level:3,title:"projectId",slug:"projectid",normalizedTitle:"projectid",charIndex:1058},{level:3,title:"regExp",slug:"regexp",normalizedTitle:"regexp",charIndex:1140},{level:3,title:"scopes",slug:"scopes",normalizedTitle:"scopes",charIndex:1355},{level:3,title:"serviceAccount",slug:"serviceaccount",normalizedTitle:"serviceaccount",charIndex:1517},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1613},{level:3,title:"blobs",slug:"blobs",normalizedTitle:"blobs",charIndex:1625},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:1689},{level:3,title:"Blob",slug:"blob",normalizedTitle:"blob",charIndex:1659}],headersStr:"Examples Properties allVersions filter from listingType projectId regExp scopes serviceAccount Outputs blobs Definitions Blob",content:'List\n\ntype: "io.kestra.plugin.gcp.gcs.List"\n\n\n> List file on a GCS bucket.\n\n\n# Examples\n\n> List files in a bucket\n\nid: "list"\ntype: "io.kestra.plugin.gcp.gcs.List"\nfrom: "gs://my_bucket/dir/"\n\n\n\n# Properties\n\n\n# allVersions\n\n * Type: boolean\n * Dynamic: ✔️\n * Required: ❌\n\n> If set to true, lists all versions of a blob. The default is false.\n\n\n# filter\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Default: BOTH\n\n * Possible Values:\n   \n   * FILES\n   * DIRECTORY\n   * BOTH\n\n> The filter files or directory\n\n\n# from\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n\n> The directory to list\n\n\n# listingType\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Default: DIRECTORY\n\n * Possible Values:\n   \n   * RECURSIVE\n   * DIRECTORY\n\n> The listing type you want (like directory or recursive)\n\nif DIRECTORY, will only list objects in the specified directory\nif RECURSIVE, will list objects in the specified directory recursively\nDefault value is DIRECTORY\nWhen using RECURSIVE value, be carefull to move your files to a location not in the from scope\n\n\n# projectId\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The GCP project id\n\n\n# regExp\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> A regexp to filter on full path\n\nex:\nregExp: .* to match all files\nregExp: .*2020-01-0.\\\\.csv to match files between 01 and 09 of january ending with .csv\n\n\n# scopes\n\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n * Default: [https://www.googleapis.com/auth/cloud-platform]\n\n> The GCP scopes to used\n\n\n# serviceAccount\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The GCP service account key\n\n\n# Outputs\n\n\n# blobs\n\n * Type: array\n * SubType: Blob\n\n> The list of blobs\n\n\n# Definitions\n\n\n# Blob\n\n# bucket\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# cacheControl\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# componentCount\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n# contentDisposition\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# contentEncoding\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# contentLanguage\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# contentType\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# crc32c\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# createTime\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# customTime\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# deleteTime\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# etag\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# eventBasedHold\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n# generatedId\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# isDirectory\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n# kmsKeyName\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# md5\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# mediaLink\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# metaGeneration\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n# metadata\n\n * Type: object\n * Dynamic: ❓\n * Required: ❌\n\n# name\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# retentionExpirationTime\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n# selfLink\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# size\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n# temporaryHold\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n# timeStorageClassUpdated\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# updateTime\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# uri\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌',normalizedContent:'list\n\ntype: "io.kestra.plugin.gcp.gcs.list"\n\n\n> list file on a gcs bucket.\n\n\n# examples\n\n> list files in a bucket\n\nid: "list"\ntype: "io.kestra.plugin.gcp.gcs.list"\nfrom: "gs://my_bucket/dir/"\n\n\n\n# properties\n\n\n# allversions\n\n * type: boolean\n * dynamic: ✔️\n * required: ❌\n\n> if set to true, lists all versions of a blob. the default is false.\n\n\n# filter\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * default: both\n\n * possible values:\n   \n   * files\n   * directory\n   * both\n\n> the filter files or directory\n\n\n# from\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n\n> the directory to list\n\n\n# listingtype\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * default: directory\n\n * possible values:\n   \n   * recursive\n   * directory\n\n> the listing type you want (like directory or recursive)\n\nif directory, will only list objects in the specified directory\nif recursive, will list objects in the specified directory recursively\ndefault value is directory\nwhen using recursive value, be carefull to move your files to a location not in the from scope\n\n\n# projectid\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the gcp project id\n\n\n# regexp\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> a regexp to filter on full path\n\nex:\nregexp: .* to match all files\nregexp: .*2020-01-0.\\\\.csv to match files between 01 and 09 of january ending with .csv\n\n\n# scopes\n\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n * default: [https://www.googleapis.com/auth/cloud-platform]\n\n> the gcp scopes to used\n\n\n# serviceaccount\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the gcp service account key\n\n\n# outputs\n\n\n# blobs\n\n * type: array\n * subtype: blob\n\n> the list of blobs\n\n\n# definitions\n\n\n# blob\n\n# bucket\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# cachecontrol\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# componentcount\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n# contentdisposition\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# contentencoding\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# contentlanguage\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# contenttype\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# crc32c\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# createtime\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# customtime\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# deletetime\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# etag\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# eventbasedhold\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n# generatedid\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# isdirectory\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n# kmskeyname\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# md5\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# medialink\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# metageneration\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n# metadata\n\n * type: object\n * dynamic: ❓\n * required: ❌\n\n# name\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# retentionexpirationtime\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n# selflink\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# size\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n# temporaryhold\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n# timestorageclassupdated\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# updatetime\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# uri\n\n * type: string\n * dynamic: ❓\n * required: ❌',charsets:{}},{title:"UpdateBucket",frontmatter:{title:"UpdateBucket",editLink:!1,description:"Update a bucket.",icon:"PHN2ZyBpZD0iUHJvZHVjdF9JY29ucyIgZGF0YS1uYW1lPSJQcm9kdWN0IEljb25zIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCAyNCAyNCI+PGRlZnM+PHN0eWxlPi5jbHMtMXtmaWxsOiNhZWNiZmE7fS5jbHMtMntmaWxsOiM2NjlkZjY7fS5jbHMtM3tmaWxsOiM0Mjg1ZjQ7fS5jbHMtNHtmaWxsOiNmZmY7fTwvc3R5bGU+PC9kZWZzPjx0aXRsZT5JY29uXzI0cHhfQ29sb3JfQ2xvdWRTdG9yYWdlPC90aXRsZT48cmVjdCBjbGFzcz0iY2xzLTEiIHg9IjIiIHk9IjQiIHdpZHRoPSIyMCIgaGVpZ2h0PSI3Ii8+PHJlY3QgY2xhc3M9ImNscy0yIiB4PSIyMCIgeT0iNCIgd2lkdGg9IjIiIGhlaWdodD0iNyIvPjxwb2x5Z29uIGNsYXNzPSJjbHMtMyIgcG9pbnRzPSIyMiA0IDIwIDQgMjAgMTEgMjIgNCIvPjxyZWN0IGNsYXNzPSJjbHMtMiIgeD0iMiIgeT0iNCIgd2lkdGg9IjIiIGhlaWdodD0iNyIvPjxyZWN0IGNsYXNzPSJjbHMtNCIgeD0iNiIgeT0iNyIgd2lkdGg9IjYiIGhlaWdodD0iMSIvPjxyZWN0IGNsYXNzPSJjbHMtNCIgeD0iMTUiIHk9IjYiIHdpZHRoPSIzIiBoZWlnaHQ9IjMiIHJ4PSIxLjUiLz48cmVjdCBjbGFzcz0iY2xzLTEiIHg9IjIiIHk9IjEzIiB3aWR0aD0iMjAiIGhlaWdodD0iNyIvPjxyZWN0IGNsYXNzPSJjbHMtMiIgeD0iMjAiIHk9IjEzIiB3aWR0aD0iMiIgaGVpZ2h0PSI3Ii8+PHBvbHlnb24gY2xhc3M9ImNscy0zIiBwb2ludHM9IjIyIDEzIDIwIDEzIDIwIDIwIDIyIDEzIi8+PHJlY3QgY2xhc3M9ImNscy0yIiB4PSIyIiB5PSIxMyIgd2lkdGg9IjIiIGhlaWdodD0iNyIvPjxyZWN0IGNsYXNzPSJjbHMtNCIgeD0iNiIgeT0iMTYiIHdpZHRoPSI2IiBoZWlnaHQ9IjEiLz48cmVjdCBjbGFzcz0iY2xzLTQiIHg9IjE1IiB5PSIxNSIgd2lkdGg9IjMiIGhlaWdodD0iMyIgcng9IjEuNSIvPjwvc3ZnPg==",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"UpdateBucket"},{property:"og:description",content:"Update a bucket. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-gcp/tasks/gcs/io.kestra.plugin.gcp.gcs.UpdateBucket.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"UpdateBucket"},{name:"twitter:description",content:"Update a bucket. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-gcp/tasks/gcs/io.kestra.plugin.gcp.gcs.UpdateBucket.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-gcp/tasks/gcs/io.kestra.plugin.gcp.gcs.UpdateBucket.html",relativePath:"plugins/plugin-gcp/tasks/gcs/io.kestra.plugin.gcp.gcs.UpdateBucket.md",key:"v-f98a25f2",path:"/plugins/plugin-gcp/tasks/gcs/io.kestra.plugin.gcp.gcs.UpdateBucket.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:85},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:242},{level:3,title:"acl",slug:"acl",normalizedTitle:"acl",charIndex:257},{level:3,title:"cors",slug:"cors",normalizedTitle:"cors",charIndex:413},{level:3,title:"defaultAcl",slug:"defaultacl",normalizedTitle:"defaultacl",charIndex:592},{level:3,title:"defaultEventBasedHold",slug:"defaulteventbasedhold",normalizedTitle:"defaulteventbasedhold",charIndex:856},{level:3,title:"defaultKmsKeyName",slug:"defaultkmskeyname",normalizedTitle:"defaultkmskeyname",charIndex:977},{level:3,title:"iamConfiguration",slug:"iamconfiguration",normalizedTitle:"iamconfiguration",charIndex:1095},{level:3,title:"indexPage",slug:"indexpage",normalizedTitle:"indexpage",charIndex:1239},{level:3,title:"labels",slug:"labels",normalizedTitle:"labels",charIndex:116},{level:3,title:"lifecycleRules",slug:"lifecyclerules",normalizedTitle:"lifecyclerules",charIndex:1520},{level:3,title:"location",slug:"location",normalizedTitle:"location",charIndex:1889},{level:3,title:"logging",slug:"logging",normalizedTitle:"logging",charIndex:2098},{level:3,title:"name",slug:"name",normalizedTitle:"name",charIndex:190},{level:3,title:"notFoundPage",slug:"notfoundpage",normalizedTitle:"notfoundpage",charIndex:2383},{level:3,title:"projectId",slug:"projectid",normalizedTitle:"projectid",charIndex:2516},{level:3,title:"requesterPays",slug:"requesterpays",normalizedTitle:"requesterpays",charIndex:2598},{level:3,title:"retentionPeriod",slug:"retentionperiod",normalizedTitle:"retentionperiod",charIndex:2818},{level:3,title:"scopes",slug:"scopes",normalizedTitle:"scopes",charIndex:3047},{level:3,title:"serviceAccount",slug:"serviceaccount",normalizedTitle:"serviceaccount",charIndex:3209},{level:3,title:"storageClass",slug:"storageclass",normalizedTitle:"storageclass",charIndex:3305},{level:3,title:"versioningEnabled",slug:"versioningenabled",normalizedTitle:"versioningenabled",charIndex:3691},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:3864},{level:3,title:"bucket",slug:"bucket",normalizedTitle:"bucket",charIndex:73},{level:3,title:"created",slug:"created",normalizedTitle:"created",charIndex:3925},{level:3,title:"updated",slug:"updated",normalizedTitle:"updated",charIndex:4003},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:4081},{level:3,title:"Condition",slug:"condition",normalizedTitle:"condition",charIndex:4097},{level:3,title:"IamConfiguration",slug:"iamconfiguration-2",normalizedTitle:"iamconfiguration",charIndex:1122},{level:3,title:"Entity",slug:"entity",normalizedTitle:"entity",charIndex:4563},{level:3,title:"Origin",slug:"origin",normalizedTitle:"origin",charIndex:502},{level:3,title:"Cors",slug:"cors-2",normalizedTitle:"cors",charIndex:446},{level:3,title:"AccessControl",slug:"accesscontrol",normalizedTitle:"accesscontrol",charIndex:289},{level:3,title:"BucketLifecycleRule",slug:"bucketlifecyclerule",normalizedTitle:"bucketlifecyclerule",charIndex:1563},{level:3,title:"Action",slug:"action-2",normalizedTitle:"action",charIndex:5357},{level:3,title:"Bucket",slug:"bucket-2",normalizedTitle:"bucket",charIndex:6},{level:3,title:"Logging",slug:"logging-2",normalizedTitle:"logging",charIndex:2116}],headersStr:"Examples Properties acl cors defaultAcl defaultEventBasedHold defaultKmsKeyName iamConfiguration indexPage labels lifecycleRules location logging name notFoundPage projectId requesterPays retentionPeriod scopes serviceAccount storageClass versioningEnabled Outputs bucket created updated Definitions Condition IamConfiguration Entity Origin Cors AccessControl BucketLifecycleRule Action Bucket Logging",content:"UpdateBucket\n\ntype: \"io.kestra.plugin.gcp.gcs.UpdateBucket\"\n\n\n> Update a bucket.\n\n\n# Examples\n\n> Update some bucket labels\n\nid: \"update_bucket\"\ntype: \"io.kestra.plugin.gcp.gcs.UpdateBucket\"\nname: \"my-bucket\"\nlabels:\n  my-label: my-value\n\n\n\n# Properties\n\n\n# acl\n\n * Type: array\n * SubType: AccessControl\n * Dynamic: ❓\n * Required: ❌\n\n> The bucket's access control configuration\n\nSee About Access Control Lists\n\n\n# cors\n\n * Type: array\n * SubType: Cors\n * Dynamic: ❓\n * Required: ❌\n\n> The bucket's Cross-Origin Resource Sharing (CORS) configuration\n\nSee Cross-Origin ResourceSharing (CORS)\n\n\n# defaultAcl\n\n * Type: array\n * SubType: AccessControl\n * Dynamic: ❓\n * Required: ❌\n\n> The default access control configuration\n\nThe access control configuration to apply to bucket's blobs when no other configuration is specified.\nSee About Access Control Lists\n\n\n# defaultEventBasedHold\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n> The default event-based hold for this bucket\n\n\n# defaultKmsKeyName\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The default Cloud KMS key name for this bucket\n\n\n# iamConfiguration\n\n * Type: IamConfiguration\n * Dynamic: ❓\n * Required: ❌\n\n> The Bucket's IAM Configuration\n\nSee uniform bucket-level access\n\n\n# indexPage\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The bucket's website index page\n\nBehaves as the bucket's directory index where missing blobs are treated as potential directories.\n\n\n# labels\n\n * Type: object\n * Dynamic: ✔️\n * Required: ❌\n\n> The labels of this bucket\n\n\n# lifecycleRules\n\n * Type: array\n * SubType: BucketLifecycleRule\n * Dynamic: ❓\n * Required: ❌\n\n> The bucket's lifecycle configuration\n\nThis configuration is expressed as a number of lifecycle rules, consisting of an action and a condition.\nSee Object Lifecycle Management\nOnly the age condition is supported. Only the delete and SetStorageClass actions are supported\n\n\n# location\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The bucket's location\n\nData for blobs in the bucket resides in physical storage within this region. A list of supported values is available here.\n\n\n# logging\n\n * Type: Logging\n * Dynamic: ❓\n * Required: ❌\n\n> The bucket's logging configuration\n\nThis configuration defines the destination bucket and optional name prefix for the current bucket's logs.\n\n\n# name\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> Bucket's unique name\n\n\n# notFoundPage\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The custom object to return when a requested resource is not found\n\n\n# projectId\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The GCP project id\n\n\n# requesterPays\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n> Whether the requester pays or not.\n\nWhether a user accessing the bucket or an object it contains should assume the transit costs related to the access.\n\n\n# retentionPeriod\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n> Retention period\n\nIf policy is not locked this value can be cleared, increased, and decreased. If policy is locked the retention period can only be increased.\n\n\n# scopes\n\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n * Default: [https://www.googleapis.com/auth/cloud-platform]\n\n> The GCP scopes to used\n\n\n# serviceAccount\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The GCP service account key\n\n\n# storageClass\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Possible Values:\n   \n   * REGIONAL\n   * MULTI_REGIONAL\n   * NEARLINE\n   * COLDLINE\n   * STANDARD\n   * ARCHIVE\n   * DURABLE_REDUCED_AVAILABILITY\n\n> The bucket's storage class\n\nThis defines how blobs in the bucket are stored and determines the SLA and the cost of storage. A list of supported values is available here.\n\n\n# versioningEnabled\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n> Whether versioning should be enabled for this bucket\n\nWhen set to true, versioning is fully enabled.\n\n\n# Outputs\n\n\n# bucket\n\n * Type: Bucket\n\n> The bucket's info\n\n\n# created\n\n * Type: boolean\n * Default: false\n\n> If the bucket was created.\n\n\n# updated\n\n * Type: boolean\n * Default: false\n\n> If the bucket was updated.\n\n\n# Definitions\n\n\n# Condition\n\n# age\n\n * Type: integer\n * Dynamic: ✔️\n * Required: ✔️\n\n> The Age condition is satisfied when an object reaches the specified age (in days). Age is measured from the object's creation time.\n\n\n# IamConfiguration\n\n# publicAccessPrevention\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Possible Values:\n   \n   * ENFORCED\n   * UNSPECIFIED\n   * UNKNOWN\n   * INHERITED\n\n# uniformBucketLevelAccessEnabled\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n\n# Entity\n\n# value\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The value for the entity (ex : user email if the type is USER ...)\n\n\n# Origin\n\n# value\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n\n# Cors\n\n# maxAgeSeconds\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n# methods\n\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n\n# origins\n\n * Type: array\n * SubType: Origin\n * Dynamic: ❓\n * Required: ❌\n\n# responseHeaders\n\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n\n\n# AccessControl\n\n# entity\n\n * Type: Entity\n * Dynamic: ✔️\n * Required: ✔️\n\n> The entity\n\n# role\n\n * Type: string\n\n * Dynamic: ✔️\n\n * Required: ✔️\n\n * Possible Values:\n   \n   * READER\n   * WRITER\n   * OWNER\n\n> The role to assign to the entity\n\n\n# BucketLifecycleRule\n\n# action\n\n * Type: Action\n * Dynamic: ✔️\n * Required: ✔️\n\n> The action to take when a lifecycle condition is met\n\n# condition\n\n * Type: Condition\n * Dynamic: ✔️\n * Required: ✔️\n\n> The condition\n\n\n# Action\n\n# value\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The value for the action (if any)\n\n\n# Bucket\n\n# indexPage\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The bucket's website index page.\n\n# location\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The bucket's location\n\n# name\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The bucket's unique name\n\n# notFoundPage\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The custom object to return when a requested resource is not found.\n\n# uri\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The bucket's URI.\n\n\n# Logging\n\n# logBucket\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# logObjectPrefix\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌",normalizedContent:"updatebucket\n\ntype: \"io.kestra.plugin.gcp.gcs.updatebucket\"\n\n\n> update a bucket.\n\n\n# examples\n\n> update some bucket labels\n\nid: \"update_bucket\"\ntype: \"io.kestra.plugin.gcp.gcs.updatebucket\"\nname: \"my-bucket\"\nlabels:\n  my-label: my-value\n\n\n\n# properties\n\n\n# acl\n\n * type: array\n * subtype: accesscontrol\n * dynamic: ❓\n * required: ❌\n\n> the bucket's access control configuration\n\nsee about access control lists\n\n\n# cors\n\n * type: array\n * subtype: cors\n * dynamic: ❓\n * required: ❌\n\n> the bucket's cross-origin resource sharing (cors) configuration\n\nsee cross-origin resourcesharing (cors)\n\n\n# defaultacl\n\n * type: array\n * subtype: accesscontrol\n * dynamic: ❓\n * required: ❌\n\n> the default access control configuration\n\nthe access control configuration to apply to bucket's blobs when no other configuration is specified.\nsee about access control lists\n\n\n# defaulteventbasedhold\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n> the default event-based hold for this bucket\n\n\n# defaultkmskeyname\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the default cloud kms key name for this bucket\n\n\n# iamconfiguration\n\n * type: iamconfiguration\n * dynamic: ❓\n * required: ❌\n\n> the bucket's iam configuration\n\nsee uniform bucket-level access\n\n\n# indexpage\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the bucket's website index page\n\nbehaves as the bucket's directory index where missing blobs are treated as potential directories.\n\n\n# labels\n\n * type: object\n * dynamic: ✔️\n * required: ❌\n\n> the labels of this bucket\n\n\n# lifecyclerules\n\n * type: array\n * subtype: bucketlifecyclerule\n * dynamic: ❓\n * required: ❌\n\n> the bucket's lifecycle configuration\n\nthis configuration is expressed as a number of lifecycle rules, consisting of an action and a condition.\nsee object lifecycle management\nonly the age condition is supported. only the delete and setstorageclass actions are supported\n\n\n# location\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the bucket's location\n\ndata for blobs in the bucket resides in physical storage within this region. a list of supported values is available here.\n\n\n# logging\n\n * type: logging\n * dynamic: ❓\n * required: ❌\n\n> the bucket's logging configuration\n\nthis configuration defines the destination bucket and optional name prefix for the current bucket's logs.\n\n\n# name\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> bucket's unique name\n\n\n# notfoundpage\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the custom object to return when a requested resource is not found\n\n\n# projectid\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the gcp project id\n\n\n# requesterpays\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n> whether the requester pays or not.\n\nwhether a user accessing the bucket or an object it contains should assume the transit costs related to the access.\n\n\n# retentionperiod\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n> retention period\n\nif policy is not locked this value can be cleared, increased, and decreased. if policy is locked the retention period can only be increased.\n\n\n# scopes\n\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n * default: [https://www.googleapis.com/auth/cloud-platform]\n\n> the gcp scopes to used\n\n\n# serviceaccount\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the gcp service account key\n\n\n# storageclass\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * possible values:\n   \n   * regional\n   * multi_regional\n   * nearline\n   * coldline\n   * standard\n   * archive\n   * durable_reduced_availability\n\n> the bucket's storage class\n\nthis defines how blobs in the bucket are stored and determines the sla and the cost of storage. a list of supported values is available here.\n\n\n# versioningenabled\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n> whether versioning should be enabled for this bucket\n\nwhen set to true, versioning is fully enabled.\n\n\n# outputs\n\n\n# bucket\n\n * type: bucket\n\n> the bucket's info\n\n\n# created\n\n * type: boolean\n * default: false\n\n> if the bucket was created.\n\n\n# updated\n\n * type: boolean\n * default: false\n\n> if the bucket was updated.\n\n\n# definitions\n\n\n# condition\n\n# age\n\n * type: integer\n * dynamic: ✔️\n * required: ✔️\n\n> the age condition is satisfied when an object reaches the specified age (in days). age is measured from the object's creation time.\n\n\n# iamconfiguration\n\n# publicaccessprevention\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * possible values:\n   \n   * enforced\n   * unspecified\n   * unknown\n   * inherited\n\n# uniformbucketlevelaccessenabled\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n\n# entity\n\n# value\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the value for the entity (ex : user email if the type is user ...)\n\n\n# origin\n\n# value\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n\n# cors\n\n# maxageseconds\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n# methods\n\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n\n# origins\n\n * type: array\n * subtype: origin\n * dynamic: ❓\n * required: ❌\n\n# responseheaders\n\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n\n\n# accesscontrol\n\n# entity\n\n * type: entity\n * dynamic: ✔️\n * required: ✔️\n\n> the entity\n\n# role\n\n * type: string\n\n * dynamic: ✔️\n\n * required: ✔️\n\n * possible values:\n   \n   * reader\n   * writer\n   * owner\n\n> the role to assign to the entity\n\n\n# bucketlifecyclerule\n\n# action\n\n * type: action\n * dynamic: ✔️\n * required: ✔️\n\n> the action to take when a lifecycle condition is met\n\n# condition\n\n * type: condition\n * dynamic: ✔️\n * required: ✔️\n\n> the condition\n\n\n# action\n\n# value\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the value for the action (if any)\n\n\n# bucket\n\n# indexpage\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the bucket's website index page.\n\n# location\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the bucket's location\n\n# name\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the bucket's unique name\n\n# notfoundpage\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the custom object to return when a requested resource is not found.\n\n# uri\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the bucket's uri.\n\n\n# logging\n\n# logbucket\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# logobjectprefix\n\n * type: string\n * dynamic: ❓\n * required: ❌",charsets:{}},{title:"Upload",frontmatter:{title:"Upload",editLink:!1,description:"Upload a file to a GCS bucket.",icon:"PHN2ZyBpZD0iUHJvZHVjdF9JY29ucyIgZGF0YS1uYW1lPSJQcm9kdWN0IEljb25zIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCAyNCAyNCI+PGRlZnM+PHN0eWxlPi5jbHMtMXtmaWxsOiNhZWNiZmE7fS5jbHMtMntmaWxsOiM2NjlkZjY7fS5jbHMtM3tmaWxsOiM0Mjg1ZjQ7fS5jbHMtNHtmaWxsOiNmZmY7fTwvc3R5bGU+PC9kZWZzPjx0aXRsZT5JY29uXzI0cHhfQ29sb3JfQ2xvdWRTdG9yYWdlPC90aXRsZT48cmVjdCBjbGFzcz0iY2xzLTEiIHg9IjIiIHk9IjQiIHdpZHRoPSIyMCIgaGVpZ2h0PSI3Ii8+PHJlY3QgY2xhc3M9ImNscy0yIiB4PSIyMCIgeT0iNCIgd2lkdGg9IjIiIGhlaWdodD0iNyIvPjxwb2x5Z29uIGNsYXNzPSJjbHMtMyIgcG9pbnRzPSIyMiA0IDIwIDQgMjAgMTEgMjIgNCIvPjxyZWN0IGNsYXNzPSJjbHMtMiIgeD0iMiIgeT0iNCIgd2lkdGg9IjIiIGhlaWdodD0iNyIvPjxyZWN0IGNsYXNzPSJjbHMtNCIgeD0iNiIgeT0iNyIgd2lkdGg9IjYiIGhlaWdodD0iMSIvPjxyZWN0IGNsYXNzPSJjbHMtNCIgeD0iMTUiIHk9IjYiIHdpZHRoPSIzIiBoZWlnaHQ9IjMiIHJ4PSIxLjUiLz48cmVjdCBjbGFzcz0iY2xzLTEiIHg9IjIiIHk9IjEzIiB3aWR0aD0iMjAiIGhlaWdodD0iNyIvPjxyZWN0IGNsYXNzPSJjbHMtMiIgeD0iMjAiIHk9IjEzIiB3aWR0aD0iMiIgaGVpZ2h0PSI3Ii8+PHBvbHlnb24gY2xhc3M9ImNscy0zIiBwb2ludHM9IjIyIDEzIDIwIDEzIDIwIDIwIDIyIDEzIi8+PHJlY3QgY2xhc3M9ImNscy0yIiB4PSIyIiB5PSIxMyIgd2lkdGg9IjIiIGhlaWdodD0iNyIvPjxyZWN0IGNsYXNzPSJjbHMtNCIgeD0iNiIgeT0iMTYiIHdpZHRoPSI2IiBoZWlnaHQ9IjEiLz48cmVjdCBjbGFzcz0iY2xzLTQiIHg9IjE1IiB5PSIxNSIgd2lkdGg9IjMiIGhlaWdodD0iMyIgcng9IjEuNSIvPjwvc3ZnPg==",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Upload"},{property:"og:description",content:"Upload a file to a GCS bucket. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-gcp/tasks/gcs/io.kestra.plugin.gcp.gcs.Upload.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Upload"},{name:"twitter:description",content:"Upload a file to a GCS bucket. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-gcp/tasks/gcs/io.kestra.plugin.gcp.gcs.Upload.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-gcp/tasks/gcs/io.kestra.plugin.gcp.gcs.Upload.html",relativePath:"plugins/plugin-gcp/tasks/gcs/io.kestra.plugin.gcp.gcs.Upload.md",key:"v-324c92aa",path:"/plugins/plugin-gcp/tasks/gcs/io.kestra.plugin.gcp.gcs.Upload.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:87},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:215},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:150},{level:3,title:"projectId",slug:"projectid",normalizedTitle:"projectid",charIndex:306},{level:3,title:"scopes",slug:"scopes",normalizedTitle:"scopes",charIndex:388},{level:3,title:"serviceAccount",slug:"serviceaccount",normalizedTitle:"serviceaccount",charIndex:550},{level:3,title:"to",slug:"to",normalizedTitle:"to",charIndex:66},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:724},{level:3,title:"uri",slug:"uri",normalizedTitle:"uri",charIndex:736},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:761}],headersStr:"Examples Properties from projectId scopes serviceAccount to Outputs uri Definitions",content:'Upload\n\ntype: "io.kestra.plugin.gcp.gcs.Upload"\n\n\n> Upload a file to a GCS bucket.\n\n\n# Examples\n\nid: "upload"\ntype: "io.kestra.plugin.gcp.gcs.Upload"\nfrom: "{{ inputs.file }}"\nto: "gs://my_bucket/dir/file.csv"\n\n\n\n# Properties\n\n\n# from\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The file to copy\n\n\n# projectId\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The GCP project id\n\n\n# scopes\n\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n * Default: [https://www.googleapis.com/auth/cloud-platform]\n\n> The GCP scopes to used\n\n\n# serviceAccount\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The GCP service account key\n\n\n# to\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The destination path\n\n\n# Outputs\n\n\n# uri\n\n * Type: string\n\n\n# Definitions',normalizedContent:'upload\n\ntype: "io.kestra.plugin.gcp.gcs.upload"\n\n\n> upload a file to a gcs bucket.\n\n\n# examples\n\nid: "upload"\ntype: "io.kestra.plugin.gcp.gcs.upload"\nfrom: "{{ inputs.file }}"\nto: "gs://my_bucket/dir/file.csv"\n\n\n\n# properties\n\n\n# from\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the file to copy\n\n\n# projectid\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the gcp project id\n\n\n# scopes\n\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n * default: [https://www.googleapis.com/auth/cloud-platform]\n\n> the gcp scopes to used\n\n\n# serviceaccount\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the gcp service account key\n\n\n# to\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the destination path\n\n\n# outputs\n\n\n# uri\n\n * type: string\n\n\n# definitions',charsets:{}},{title:"ClusterMetadata",frontmatter:{title:"ClusterMetadata",editLink:!1,description:"Get cluster metadata.",icon:"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4gPHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGlkPSJMYXllcl8xIiBkYXRhLW5hbWU9IkxheWVyIDEiIHZpZXdCb3g9IjAgMCAxMjAgMTM1Ij48ZGVmcz48c3R5bGU+LmNscy0xe2ZpbGw6IzMyNmRlYTt9LmNscy0ye2ZpbGw6I2ZmZjt9PC9zdHlsZT48L2RlZnM+PHRpdGxlPjAxX0lOU1RBTkFfSWNvblNldDwvdGl0bGU+PHBhdGggY2xhc3M9ImNscy0xIiBkPSJNNTIsNC42NCw5LjU2LDI5LjE1QTE2LDE2LDAsMCwwLDEuNTcsNDNWOTJhMTYsMTYsMCwwLDAsOCwxMy44NEw1MiwxMzAuMzZhMTYsMTYsMCwwLDAsMTYsMGw0Mi40NS0yNC41MWExNiwxNiwwLDAsMCw4LTEzLjg0VjQzYTE2LDE2LDAsMCwwLTgtMTMuODRMNjgsNC42NEExNiwxNiwwLDAsMCw1Miw0LjY0WiI+PC9wYXRoPjxwYXRoIGNsYXNzPSJjbHMtMiIgZD0iTTg1Ljg0LDUwLjMybC0yMy45LTEzLjhhMy45MSwzLjkxLDAsMCwwLTMuODksMEwzNC4xNCw1MC4zMmEzLjkzLDMuOTMsMCwwLDAtMiwzLjM4VjgxLjNhMy44OSwzLjg5LDAsMCwwLDIsMy4zOGwyMy45MSwxMy44YTMuOTIsMy45MiwwLDAsMCwzLjksMGwyMy45MS0xMy44YTMuOTMsMy45MywwLDAsMCwyLTMuMzhWNTMuN0E0LDQsMCwwLDAsODUuODQsNTAuMzJaTTYwLDkzLjQ5LDM5LDgxLjM5bDkuMzUtNS41NSwxMC4zMiw2VjY4LjYxTDQ3LjMsNjJWNzNsLTkuODEsNS44NFY1NC41MWwyMS0xMi4xM3YxMS43TDQ4LjU4LDU5LjgsNjAsNjYuMzksNzEuNCw1OS44bC05LjktNS43MlY0Mi4zOGwyMSwxMi4xM1Y3OC43M0w3Mi42OSw3Mi45VjYyTDYxLjI3LDY4LjYxVjgxLjc5bDEwLjM4LTZMODEsODEuMzZaIj48L3BhdGg+PC9zdmc+IA==",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"ClusterMetadata"},{property:"og:description",content:"Get cluster metadata. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-gcp/tasks/gke/io.kestra.plugin.gcp.gke.ClusterMetadata.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"ClusterMetadata"},{name:"twitter:description",content:"Get cluster metadata. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-gcp/tasks/gke/io.kestra.plugin.gcp.gke.ClusterMetadata.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-gcp/tasks/gke/io.kestra.plugin.gcp.gke.ClusterMetadata.html",relativePath:"plugins/plugin-gcp/tasks/gke/io.kestra.plugin.gcp.gke.ClusterMetadata.md",key:"v-245a3723",path:"/plugins/plugin-gcp/tasks/gke/io.kestra.plugin.gcp.gke.ClusterMetadata.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:96},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:300},{level:3,title:"clusterId",slug:"clusterid",normalizedTitle:"clusterid",charIndex:270},{level:3,title:"clusterProjectId",slug:"clusterprojectid",normalizedTitle:"clusterprojectid",charIndex:417},{level:3,title:"clusterZone",slug:"clusterzone",normalizedTitle:"clusterzone",charIndex:530},{level:3,title:"projectId",slug:"projectid",normalizedTitle:"projectid",charIndex:228},{level:3,title:"scopes",slug:"scopes",normalizedTitle:"scopes",charIndex:698},{level:3,title:"serviceAccount",slug:"serviceaccount",normalizedTitle:"serviceaccount",charIndex:860},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:956},{level:3,title:"clusterIpv4Cidr",slug:"clusteripv4cidr",normalizedTitle:"clusteripv4cidr",charIndex:968},{level:3,title:"createTime",slug:"createtime",normalizedTitle:"createtime",charIndex:1005},{level:3,title:"description",slug:"description",normalizedTitle:"description",charIndex:1037},{level:3,title:"endpoint",slug:"endpoint",normalizedTitle:"endpoint",charIndex:1070},{level:3,title:"link",slug:"link",normalizedTitle:"link",charIndex:1100},{level:3,title:"location",slug:"location",normalizedTitle:"location",charIndex:1126},{level:3,title:"loggingService",slug:"loggingservice",normalizedTitle:"loggingservice",charIndex:1156},{level:3,title:"masterAuth",slug:"masterauth",normalizedTitle:"masterauth",charIndex:1192},{level:3,title:"monitoringService",slug:"monitoringservice",normalizedTitle:"monitoringservice",charIndex:1228},{level:3,title:"name",slug:"name",normalizedTitle:"name",charIndex:210},{level:3,title:"network",slug:"network",normalizedTitle:"network",charIndex:1293},{level:3,title:"nodePools",slug:"nodepools",normalizedTitle:"nodepools",charIndex:1322},{level:3,title:"nodePoolsCount",slug:"nodepoolscount",normalizedTitle:"nodepoolscount",charIndex:1373},{level:3,title:"project",slug:"project",normalizedTitle:"project",charIndex:228},{level:3,title:"subNetwork",slug:"subnetwork",normalizedTitle:"subnetwork",charIndex:1453},{level:3,title:"zone",slug:"zone",normalizedTitle:"zone",charIndex:253},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:1511},{level:3,title:"MasterAuth",slug:"masterauth-2",normalizedTitle:"masterauth",charIndex:1213},{level:3,title:"NodePool",slug:"nodepool",normalizedTitle:"nodepool",charIndex:1360}],headersStr:"Examples Properties clusterId clusterProjectId clusterZone projectId scopes serviceAccount Outputs clusterIpv4Cidr createTime description endpoint link location loggingService masterAuth monitoringService name network nodePools nodePoolsCount project subNetwork zone Definitions MasterAuth NodePool",content:'ClusterMetadata\n\ntype: "io.kestra.plugin.gcp.gke.ClusterMetadata"\n\n\n> Get cluster metadata.\n\n\n# Examples\n\n> Fetch a gke cluster metadata\n\nid: "cluster_metadata"\ntype: "io.kestra.plugin.gcp.gke.ClusterMetadata"\nname: "gke-metas"\nprojectId: my-project-id\nzone: eu-west-1c\nclusterId: my-cluster-id\n\n\n\n# Properties\n\n\n# clusterId\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> Cluster id where meta data are fetch\n\n\n# clusterProjectId\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Project ID in GCP were is located cluster\n\n\n# clusterZone\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Cluster zone in GCP\n\n\n# projectId\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The GCP project id\n\n\n# scopes\n\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n * Default: [https://www.googleapis.com/auth/cloud-platform]\n\n> The GCP scopes to used\n\n\n# serviceAccount\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The GCP service account key\n\n\n# Outputs\n\n\n# clusterIpv4Cidr\n\n * Type: string\n\n\n# createTime\n\n * Type: string\n\n\n# description\n\n * Type: string\n\n\n# endpoint\n\n * Type: string\n\n\n# link\n\n * Type: string\n\n\n# location\n\n * Type: string\n\n\n# loggingService\n\n * Type: string\n\n\n# masterAuth\n\n * Type: MasterAuth\n\n\n# monitoringService\n\n * Type: string\n\n\n# name\n\n * Type: string\n\n\n# network\n\n * Type: string\n\n\n# nodePools\n\n * Type: array\n * SubType: NodePool\n\n\n# nodePoolsCount\n\n * Type: integer\n * Default: 0\n\n\n# project\n\n * Type: string\n\n\n# subNetwork\n\n * Type: string\n\n\n# zone\n\n * Type: string\n\n\n# Definitions\n\n\n# MasterAuth\n\n# clientCertificat\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# clientKey\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# clusterCertificat\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# password\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# username\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The username to use for HTTP basic authentication to the master endpoint.\n\nFor clusters v1.6.0 and later, basic authentication can be disabled byleaving username unspecified (or setting it to the empty string).\n\n\n# NodePool\n\n# name\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# status\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Possible Values:\n   \n   * STATUS_UNSPECIFIED\n   * PROVISIONING\n   * RUNNING\n   * RUNNING_WITH_ERROR\n   * RECONCILING\n   * STOPPING\n   * ERROR\n   * UNRECOGNIZED',normalizedContent:'clustermetadata\n\ntype: "io.kestra.plugin.gcp.gke.clustermetadata"\n\n\n> get cluster metadata.\n\n\n# examples\n\n> fetch a gke cluster metadata\n\nid: "cluster_metadata"\ntype: "io.kestra.plugin.gcp.gke.clustermetadata"\nname: "gke-metas"\nprojectid: my-project-id\nzone: eu-west-1c\nclusterid: my-cluster-id\n\n\n\n# properties\n\n\n# clusterid\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> cluster id where meta data are fetch\n\n\n# clusterprojectid\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> project id in gcp were is located cluster\n\n\n# clusterzone\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> cluster zone in gcp\n\n\n# projectid\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the gcp project id\n\n\n# scopes\n\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n * default: [https://www.googleapis.com/auth/cloud-platform]\n\n> the gcp scopes to used\n\n\n# serviceaccount\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the gcp service account key\n\n\n# outputs\n\n\n# clusteripv4cidr\n\n * type: string\n\n\n# createtime\n\n * type: string\n\n\n# description\n\n * type: string\n\n\n# endpoint\n\n * type: string\n\n\n# link\n\n * type: string\n\n\n# location\n\n * type: string\n\n\n# loggingservice\n\n * type: string\n\n\n# masterauth\n\n * type: masterauth\n\n\n# monitoringservice\n\n * type: string\n\n\n# name\n\n * type: string\n\n\n# network\n\n * type: string\n\n\n# nodepools\n\n * type: array\n * subtype: nodepool\n\n\n# nodepoolscount\n\n * type: integer\n * default: 0\n\n\n# project\n\n * type: string\n\n\n# subnetwork\n\n * type: string\n\n\n# zone\n\n * type: string\n\n\n# definitions\n\n\n# masterauth\n\n# clientcertificat\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# clientkey\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# clustercertificat\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# password\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# username\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the username to use for http basic authentication to the master endpoint.\n\nfor clusters v1.6.0 and later, basic authentication can be disabled byleaving username unspecified (or setting it to the empty string).\n\n\n# nodepool\n\n# name\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# status\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * possible values:\n   \n   * status_unspecified\n   * provisioning\n   * running\n   * running_with_error\n   * reconciling\n   * stopping\n   * error\n   * unrecognized',charsets:{}},{title:"CustomJob",frontmatter:{title:"CustomJob",editLink:!1,description:"Start a Vertex AI [custom job](https://cloud.google.com/vertex-ai/docs/training/create-custom-job).",icon:"",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"CustomJob"},{property:"og:description",content:"Start a Vertex AI [custom job](https://cloud.google.com/vertex-ai/docs/training/create-custom-job). | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-gcp/tasks/vertexai/io.kestra.plugin.gcp.vertexai.CustomJob.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"CustomJob"},{name:"twitter:description",content:"Start a Vertex AI [custom job](https://cloud.google.com/vertex-ai/docs/training/create-custom-job). | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-gcp/tasks/vertexai/io.kestra.plugin.gcp.vertexai.CustomJob.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-gcp/tasks/vertexai/io.kestra.plugin.gcp.vertexai.CustomJob.html",relativePath:"plugins/plugin-gcp/tasks/vertexai/io.kestra.plugin.gcp.vertexai.CustomJob.md",key:"v-c4879c7a",path:"/plugins/plugin-gcp/tasks/vertexai/io.kestra.plugin.gcp.vertexai.CustomJob.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:97},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:429},{level:3,title:"delete",slug:"delete",normalizedTitle:"delete",charIndex:444},{level:3,title:"displayName",slug:"displayname",normalizedTitle:"displayname",charIndex:219},{level:3,title:"projectId",slug:"projectid",normalizedTitle:"projectid",charIndex:172},{level:3,title:"region",slug:"region",normalizedTitle:"region",charIndex:198},{level:3,title:"scopes",slug:"scopes",normalizedTitle:"scopes",charIndex:794},{level:3,title:"serviceAccount",slug:"serviceaccount",normalizedTitle:"serviceaccount",charIndex:956},{level:3,title:"spec",slug:"spec",normalizedTitle:"spec",charIndex:249},{level:3,title:"wait",slug:"wait",normalizedTitle:"wait",charIndex:1140},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1286},{level:3,title:"createDate",slug:"createdate",normalizedTitle:"createdate",charIndex:1298},{level:3,title:"endDate",slug:"enddate",normalizedTitle:"enddate",charIndex:1370},{level:3,title:"name",slug:"name",normalizedTitle:"name",charIndex:630},{level:3,title:"state",slug:"state",normalizedTitle:"state",charIndex:1496},{level:3,title:"updateDate",slug:"updatedate",normalizedTitle:"updatedate",charIndex:1838},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:1910},{level:3,title:"ContainerSpec",slug:"containerspec",normalizedTitle:"containerspec",charIndex:1926},{level:3,title:"CustomJobSpec",slug:"customjobspec",normalizedTitle:"customjobspec",charIndex:1067},{level:3,title:"GcsDestination",slug:"gcsdestination",normalizedTitle:"gcsdestination",charIndex:2591},{level:3,title:"WorkerPoolSpec",slug:"workerpoolspec",normalizedTitle:"workerpoolspec",charIndex:4140},{level:3,title:"PythonPackageSpec",slug:"pythonpackagespec-2",normalizedTitle:"pythonpackagespec",charIndex:4952},{level:3,title:"DiscSpec",slug:"discspec-2",normalizedTitle:"discspec",charIndex:4740},{level:3,title:"MachineSpec",slug:"machinespec-2",normalizedTitle:"machinespec",charIndex:4837},{level:3,title:"Scheduling",slug:"scheduling-2",normalizedTitle:"scheduling",charIndex:3386}],headersStr:"Examples Properties delete displayName projectId region scopes serviceAccount spec wait Outputs createDate endDate name state updateDate Definitions ContainerSpec CustomJobSpec GcsDestination WorkerPoolSpec PythonPackageSpec DiscSpec MachineSpec Scheduling",content:"CustomJob\n\ntype: \"io.kestra.plugin.gcp.vertexai.CustomJob\"\n\n\n> Start a Vertex AI custom job.\n\n\n# Examples\n\nid: \"custom_job\"\ntype: \"io.kestra.plugin.gcp.vertexai.CustomJob\"\nprojectId: my-gcp-project\nregion: europe-west1\ndisplayName: Start Custom Job\nspec:\n  workerPoolSpecs:\n  - containerSpec:\n      imageUri: gcr.io/my-gcp-project/my-dir/my-image:latest\n    machineSpec:\n      machineType: n1-standard-4\n    replicaCount: 1\n\n\n\n# Properties\n\n\n# delete\n\n * Type: boolean\n * Dynamic: ✔️\n * Required: ✔️\n * Default: true\n\n> Delete the job at the end.\n\n\n# displayName\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The job display name\n\n\n# projectId\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The GCP project id\n\n\n# region\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The region\n\n\n# scopes\n\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n * Default: [https://www.googleapis.com/auth/cloud-platform]\n\n> The GCP scopes to used\n\n\n# serviceAccount\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The GCP service account key\n\n\n# spec\n\n * Type: CustomJobSpec\n * Dynamic: ❌\n * Required: ✔️\n\n> The job specification\n\n\n# wait\n\n * Type: boolean\n * Dynamic: ✔️\n * Required: ✔️\n * Default: true\n\n> Wait for the end of the job.\n\nAllowing to capture job status & logs\n\n\n# Outputs\n\n\n# createDate\n\n * Type: string\n\n> Time when the CustomJob was created.\n\n\n# endDate\n\n * Type: string\n\n> Time when the CustomJob was ended.\n\n\n# name\n\n * Type: string\n\n> Resource name of a CustomJob.\n\n\n# state\n\n * Type: string\n\n * Possible Values:\n   \n   * JOB_STATE_UNSPECIFIED\n   * JOB_STATE_QUEUED\n   * JOB_STATE_PENDING\n   * JOB_STATE_RUNNING\n   * JOB_STATE_SUCCEEDED\n   * JOB_STATE_FAILED\n   * JOB_STATE_CANCELLING\n   * JOB_STATE_CANCELLED\n   * JOB_STATE_PAUSED\n   * JOB_STATE_EXPIRED\n   * UNRECOGNIZED\n\n> The detailed state of the job.\n\n\n# updateDate\n\n * Type: string\n\n> Time when the CustomJob was created.\n\n\n# Definitions\n\n\n# ContainerSpec\n\n# args\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The arguments to be passed when starting the container.\n\n# commands\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The command to be invoked when the container is started.\n\nIt overrides the entrypoint instruction in Dockerfile when provided.\n\n# imageUri\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The URI of a container image in the Container Registry that is to be run on each worker replica.\n\nMust be on google container registry, example: gcr.io/{{ project }}/{{ dir }}/{{ image }}:{{ tag }}\n\n\n# CustomJobSpec\n\n# baseOutputDirectory\n\n * Type: GcsDestination\n * Dynamic: ❌\n * Required: ❌\n\n> The Cloud Storage location to store the output of this job.\n\n# enableWebAccess\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n\n> Whether you want Vertex AI to enable interactive shell access to training containers.\n\n# network\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The full name of the Compute Engine network to which the Job should be peered.\n\nFor example, projects/12345/global/networks/myVPC.\nFormat is of the form projects/{project}/global/networks/{network}. Where {project} is a project number, as in 12345, and {network} is a network name.\nTo specify this field, you must have already configured VPC Network Peering for Vertex AI.\nIf this field is left unspecified, the job is not peered with any network.\n\n# scheduling\n\n * Type: Scheduling\n * Dynamic: ❌\n * Required: ❌\n\n> Scheduling options for a CustomJob.\n\n# serviceAccount\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Specifies the service account for workload run-as account.\n\n   Users submitting jobs must have act-as permission on this run-as account.\n   If unspecified, the [Vertex AI Custom Code Service\n   Agent](https://cloud.google.com/vertex-ai/docs/general/access-control#service-agents)\n   for the CustomJob's project is used.\n\n\n# tensorboard\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The name of a Vertex AI Tensorboard resource to which this CustomJob\n\nwill upload Tensorboard logs. Format:projects/{project}/locations/{location}/tensorboards/{tensorboard}\n\n# workerPoolSpecs\n\n * Type: array\n * SubType: WorkerPoolSpec\n * Dynamic: ✔️\n * Required: ✔️\n * Min items: 1\n\n> The spec of the worker pools including machine type and Docker image.\n\nAll worker pools except the first one are optional and can be skipped\n\n\n# GcsDestination\n\n# outputUriPrefix\n\n * Type: string\n * Dynamic: ❌\n * Required: ✔️\n\n> Google Cloud Storage URI to output directory.\n\nIf the uri doesn't end with '/', a '/' will be automatically appended. The directory is created if it doesn't exist.\n\n\n# WorkerPoolSpec\n\n# containerSpec\n\n * Type: ContainerSpec\n * Dynamic: ❌\n * Required: ✔️\n\n> The custom container task.\n\n# discSpec\n\n * Type: DiscSpec\n * Dynamic: ❌\n * Required: ❌\n\n> The specification of the disk.\n\n# machineSpec\n\n * Type: MachineSpec\n * Dynamic: ❌\n * Required: ✔️\n\n> The specification of a single machine.\n\n# pythonPackageSpec\n\n * Type: PythonPackageSpec\n * Dynamic: ❌\n * Required: ❌\n\n> The python package specs.\n\n# replicaCount\n\n * Type: integer\n * Dynamic: ❌\n * Required: ❌\n\n> The specification of the disk.\n\n\n# PythonPackageSpec\n\n# args\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The Google Cloud Storage location of the Python package files which are the training program and its dependent packages.\n\nThe maximum number of package URIs is 100.\n\n# envs\n\n * Type: object\n * Dynamic: ✔️\n * Required: ✔️\n\n> Environment variables to be passed to the python module.\n\nMaximum limit is 100.\n\n# packageUris\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The Google Cloud Storage location of the Python package files which are the training program and its dependent packages.\n\nThe maximum number of package URIs is 100.\n\n\n# DiscSpec\n\n# bootDiskSizeGb\n\n * Type: integer\n * Dynamic: ❌\n * Required: ❌\n * Default: 100\n\n> Size in GB of the boot disk.\n\n# bootDiskType\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ❌\n\n * Default: PD_SSD\n\n * Possible Values:\n   \n   * PD_SSD\n   * PD_STANDARD\n\n> Type of the boot disk.\n\n\n# MachineSpec\n\n# acceleratorCount\n\n * Type: integer\n * Dynamic: ❌\n * Required: ❌\n\n> The number of accelerators to attach to the machine.\n\n# acceleratorType\n\n * Type: string\n\n * Dynamic: ✔️\n\n * Required: ❌\n\n * Possible Values:\n   \n   * ACCELERATOR_TYPE_UNSPECIFIED\n   * NVIDIA_TESLA_K80\n   * NVIDIA_TESLA_P100\n   * NVIDIA_TESLA_V100\n   * NVIDIA_TESLA_P4\n   * NVIDIA_TESLA_T4\n   * NVIDIA_TESLA_A100\n   * UNRECOGNIZED\n\n> The type of accelerator(s) that may be attached to the machine.\n\n# machineType\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The type of the machine.\n\nSee the list of machine types supported forprediction\nSee the list of machine types supported for custom training.\n\n\n# Scheduling\n\n# restartJobOnWorkerRestart\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n\n> Restarts the entire CustomJob if a worker gets restarted.\n\nThis feature can be used by distributed training jobs that are not resilient to workers leaving and joining a job.\n\n# timeOut\n\n * Type: string\n * Dynamic: ❌\n * Required: ✔️\n * Format: duration\n\n> The maximum job running time. The default is 7 days.",normalizedContent:"customjob\n\ntype: \"io.kestra.plugin.gcp.vertexai.customjob\"\n\n\n> start a vertex ai custom job.\n\n\n# examples\n\nid: \"custom_job\"\ntype: \"io.kestra.plugin.gcp.vertexai.customjob\"\nprojectid: my-gcp-project\nregion: europe-west1\ndisplayname: start custom job\nspec:\n  workerpoolspecs:\n  - containerspec:\n      imageuri: gcr.io/my-gcp-project/my-dir/my-image:latest\n    machinespec:\n      machinetype: n1-standard-4\n    replicacount: 1\n\n\n\n# properties\n\n\n# delete\n\n * type: boolean\n * dynamic: ✔️\n * required: ✔️\n * default: true\n\n> delete the job at the end.\n\n\n# displayname\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the job display name\n\n\n# projectid\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the gcp project id\n\n\n# region\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the region\n\n\n# scopes\n\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n * default: [https://www.googleapis.com/auth/cloud-platform]\n\n> the gcp scopes to used\n\n\n# serviceaccount\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the gcp service account key\n\n\n# spec\n\n * type: customjobspec\n * dynamic: ❌\n * required: ✔️\n\n> the job specification\n\n\n# wait\n\n * type: boolean\n * dynamic: ✔️\n * required: ✔️\n * default: true\n\n> wait for the end of the job.\n\nallowing to capture job status & logs\n\n\n# outputs\n\n\n# createdate\n\n * type: string\n\n> time when the customjob was created.\n\n\n# enddate\n\n * type: string\n\n> time when the customjob was ended.\n\n\n# name\n\n * type: string\n\n> resource name of a customjob.\n\n\n# state\n\n * type: string\n\n * possible values:\n   \n   * job_state_unspecified\n   * job_state_queued\n   * job_state_pending\n   * job_state_running\n   * job_state_succeeded\n   * job_state_failed\n   * job_state_cancelling\n   * job_state_cancelled\n   * job_state_paused\n   * job_state_expired\n   * unrecognized\n\n> the detailed state of the job.\n\n\n# updatedate\n\n * type: string\n\n> time when the customjob was created.\n\n\n# definitions\n\n\n# containerspec\n\n# args\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> the arguments to be passed when starting the container.\n\n# commands\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> the command to be invoked when the container is started.\n\nit overrides the entrypoint instruction in dockerfile when provided.\n\n# imageuri\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the uri of a container image in the container registry that is to be run on each worker replica.\n\nmust be on google container registry, example: gcr.io/{{ project }}/{{ dir }}/{{ image }}:{{ tag }}\n\n\n# customjobspec\n\n# baseoutputdirectory\n\n * type: gcsdestination\n * dynamic: ❌\n * required: ❌\n\n> the cloud storage location to store the output of this job.\n\n# enablewebaccess\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n\n> whether you want vertex ai to enable interactive shell access to training containers.\n\n# network\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the full name of the compute engine network to which the job should be peered.\n\nfor example, projects/12345/global/networks/myvpc.\nformat is of the form projects/{project}/global/networks/{network}. where {project} is a project number, as in 12345, and {network} is a network name.\nto specify this field, you must have already configured vpc network peering for vertex ai.\nif this field is left unspecified, the job is not peered with any network.\n\n# scheduling\n\n * type: scheduling\n * dynamic: ❌\n * required: ❌\n\n> scheduling options for a customjob.\n\n# serviceaccount\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> specifies the service account for workload run-as account.\n\n   users submitting jobs must have act-as permission on this run-as account.\n   if unspecified, the [vertex ai custom code service\n   agent](https://cloud.google.com/vertex-ai/docs/general/access-control#service-agents)\n   for the customjob's project is used.\n\n\n# tensorboard\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the name of a vertex ai tensorboard resource to which this customjob\n\nwill upload tensorboard logs. format:projects/{project}/locations/{location}/tensorboards/{tensorboard}\n\n# workerpoolspecs\n\n * type: array\n * subtype: workerpoolspec\n * dynamic: ✔️\n * required: ✔️\n * min items: 1\n\n> the spec of the worker pools including machine type and docker image.\n\nall worker pools except the first one are optional and can be skipped\n\n\n# gcsdestination\n\n# outputuriprefix\n\n * type: string\n * dynamic: ❌\n * required: ✔️\n\n> google cloud storage uri to output directory.\n\nif the uri doesn't end with '/', a '/' will be automatically appended. the directory is created if it doesn't exist.\n\n\n# workerpoolspec\n\n# containerspec\n\n * type: containerspec\n * dynamic: ❌\n * required: ✔️\n\n> the custom container task.\n\n# discspec\n\n * type: discspec\n * dynamic: ❌\n * required: ❌\n\n> the specification of the disk.\n\n# machinespec\n\n * type: machinespec\n * dynamic: ❌\n * required: ✔️\n\n> the specification of a single machine.\n\n# pythonpackagespec\n\n * type: pythonpackagespec\n * dynamic: ❌\n * required: ❌\n\n> the python package specs.\n\n# replicacount\n\n * type: integer\n * dynamic: ❌\n * required: ❌\n\n> the specification of the disk.\n\n\n# pythonpackagespec\n\n# args\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ✔️\n\n> the google cloud storage location of the python package files which are the training program and its dependent packages.\n\nthe maximum number of package uris is 100.\n\n# envs\n\n * type: object\n * dynamic: ✔️\n * required: ✔️\n\n> environment variables to be passed to the python module.\n\nmaximum limit is 100.\n\n# packageuris\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ✔️\n\n> the google cloud storage location of the python package files which are the training program and its dependent packages.\n\nthe maximum number of package uris is 100.\n\n\n# discspec\n\n# bootdisksizegb\n\n * type: integer\n * dynamic: ❌\n * required: ❌\n * default: 100\n\n> size in gb of the boot disk.\n\n# bootdisktype\n\n * type: string\n\n * dynamic: ❌\n\n * required: ❌\n\n * default: pd_ssd\n\n * possible values:\n   \n   * pd_ssd\n   * pd_standard\n\n> type of the boot disk.\n\n\n# machinespec\n\n# acceleratorcount\n\n * type: integer\n * dynamic: ❌\n * required: ❌\n\n> the number of accelerators to attach to the machine.\n\n# acceleratortype\n\n * type: string\n\n * dynamic: ✔️\n\n * required: ❌\n\n * possible values:\n   \n   * accelerator_type_unspecified\n   * nvidia_tesla_k80\n   * nvidia_tesla_p100\n   * nvidia_tesla_v100\n   * nvidia_tesla_p4\n   * nvidia_tesla_t4\n   * nvidia_tesla_a100\n   * unrecognized\n\n> the type of accelerator(s) that may be attached to the machine.\n\n# machinetype\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the type of the machine.\n\nsee the list of machine types supported forprediction\nsee the list of machine types supported for custom training.\n\n\n# scheduling\n\n# restartjobonworkerrestart\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n\n> restarts the entire customjob if a worker gets restarted.\n\nthis feature can be used by distributed training jobs that are not resilient to workers leaving and joining a job.\n\n# timeout\n\n * type: string\n * dynamic: ❌\n * required: ✔️\n * format: duration\n\n> the maximum job running time. the default is 7 days.",charsets:{}},{title:"Trigger",frontmatter:{title:"Trigger",editLink:!1,description:"Wait for query on BigQuery",icon:"PHN2ZyBpZD0iUHJvZHVjdF9JY29ucyIgZGF0YS1uYW1lPSJQcm9kdWN0IEljb25zIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCAyNCAyNCI+PGRlZnM+PHN0eWxlPi5jbHMtMXtmaWxsOiNhZWNiZmE7fS5jbHMtMSwuY2xzLTIsLmNscy0ze2ZpbGwtcnVsZTpldmVub2RkO30uY2xzLTJ7ZmlsbDojNjY5ZGY2O30uY2xzLTN7ZmlsbDojNDI4NWY0O308L3N0eWxlPjwvZGVmcz48dGl0bGU+SWNvbl8yNHB4X0NvbG9yX0JpZ1F1ZXJ5PC90aXRsZT48ZyBpZD0iU2hhcGUiPjxwYXRoIGNsYXNzPSJjbHMtMSIgZD0iTTYuNzMsMTAuODN2Mi42M0E0LjkxLDQuOTEsMCwwLDAsOC40NCwxNS4yVjEwLjgzWiIvPjxwYXRoIGNsYXNzPSJjbHMtMiIgZD0iTTkuODksOC40MXY3LjUzQTcuNjIsNy42MiwwLDAsMCwxMSwxNiw4LDgsMCwwLDAsMTIsMTZWOC40MVoiLz48cGF0aCBjbGFzcz0iY2xzLTEiIGQ9Ik0xMy42NCwxMS44NnYzLjI5YTUsNSwwLDAsMCwxLjctMS44MlYxMS44NloiLz48cGF0aCBjbGFzcz0iY2xzLTMiIGQ9Ik0xNy43NCwxNi4zMmwtMS40MiwxLjQyYS40Mi40MiwwLDAsMCwwLC42bDMuNTQsMy41NGEuNDIuNDIsMCwwLDAsLjU5LDBsMS40My0xLjQzYS40Mi40MiwwLDAsMCwwLS41OWwtMy41NC0zLjU0YS40Mi40MiwwLDAsMC0uNiwwIi8+PHBhdGggY2xhc3M9ImNscy0yIiBkPSJNMTEsMmE5LDksMCwxLDAsOSw5LDksOSwwLDAsMC05LTltMCwxNS42OUE2LjY4LDYuNjgsMCwxLDEsMTcuNjksMTEsNi42OCw2LjY4LDAsMCwxLDExLDE3LjY5Ii8+PC9nPjwvc3ZnPg==",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Trigger"},{property:"og:description",content:"Wait for query on BigQuery | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-gcp/triggers/bigquery/io.kestra.plugin.gcp.bigquery.Trigger.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Trigger"},{name:"twitter:description",content:"Wait for query on BigQuery | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-gcp/triggers/bigquery/io.kestra.plugin.gcp.bigquery.Trigger.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-gcp/triggers/bigquery/io.kestra.plugin.gcp.bigquery.Trigger.html",relativePath:"plugins/plugin-gcp/triggers/bigquery/io.kestra.plugin.gcp.bigquery.Trigger.md",key:"v-4e1bbd2a",path:"/plugins/plugin-gcp/triggers/bigquery/io.kestra.plugin.gcp.bigquery.Trigger.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:90},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:593},{level:3,title:"fetch",slug:"fetch",normalizedTitle:"fetch",charIndex:608},{level:3,title:"fetchOne",slug:"fetchone",normalizedTitle:"fetchone",charIndex:753},{level:3,title:"interval",slug:"interval",normalizedTitle:"interval",charIndex:516},{level:3,title:"legacySql",slug:"legacysql",normalizedTitle:"legacysql",charIndex:1318},{level:3,title:"projectId",slug:"projectid",normalizedTitle:"projectid",charIndex:1503},{level:3,title:"scopes",slug:"scopes",normalizedTitle:"scopes",charIndex:1563},{level:3,title:"serviceAccount",slug:"serviceaccount",normalizedTitle:"serviceaccount",charIndex:1699},{level:3,title:"sql",slug:"sql",normalizedTitle:"sql",charIndex:113},{level:3,title:"store",slug:"store",normalizedTitle:"store",charIndex:1842},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:2001},{level:3,title:"jobId",slug:"jobid",normalizedTitle:"jobid",charIndex:2013},{level:3,title:"row",slug:"row",normalizedTitle:"row",charIndex:161},{level:3,title:"rows",slug:"rows",normalizedTitle:"rows",charIndex:161},{level:3,title:"size",slug:"size",normalizedTitle:"size",charIndex:2316},{level:3,title:"uri",slug:"uri",normalizedTitle:"uri",charIndex:2373},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:2468}],headersStr:"Examples Properties fetch fetchOne interval legacySql projectId scopes serviceAccount sql store Outputs jobId row rows size uri Definitions",content:'Trigger\n\ntype: "io.kestra.plugin.gcp.bigquery.Trigger"\n\n\n> Wait for query on BigQuery\n\n\n# Examples\n\n> Wait for a sql query to return results and iterate through rows\n\nid: bigquery-listen\nnamespace: io.kestra.tests\n\ntasks:\n  - id: each\n    type: io.kestra.core.tasks.flows.EachSequential\n    tasks:\n      - id: return\n        type: io.kestra.core.tasks.debugs.Return\n        format: "{{json taskrun.value}}"\n    value: "{{ trigger.rows }}"\n\ntriggers:\n  - id: watch\n    type: io.kestra.plugin.gcp.bigquery.Trigger\n    interval: "PT5M"\n    sql: "SELECT * FROM `myproject.mydataset.mytable`"\n\n\n\n# Properties\n\n\n# fetch\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: false\n\n> Whether to Fetch the data from the query result to the task output\n\n\n# fetchOne\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: false\n\n> Whether to Fetch only one data row from the query result to the task output\n\n\n# interval\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Default: PT1S\n * Format: duration\n\n> Interval between polling\n\nThe interval between 2 different test of schedule, this can avoid to overload the remote system with too many call. For most of trigger that depend on external system, a minimal interval must be at least PT30S.\nSee ISO_8601 Durations for more information of available interval value\n\n\n# legacySql\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: false\n\n> Whether to use BigQuery\'s legacy SQL dialect for this query\n\nBy default this property is set to false.\n\n\n# projectId\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n\n# scopes\n\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n * Default: [https://www.googleapis.com/auth/cloud-platform]\n\n\n# serviceAccount\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n\n# sql\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The sql query to run\n\n\n# store\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: false\n\n> Whether to store the data from the query result into an ion serialized data file\n\n\n# Outputs\n\n\n# jobId\n\n * Type: string\n\n> The job id\n\n\n# row\n\n * Type: object\n\n> Map containing the first row of fetched data\n\nOnly populated if \'fetchOne\' parameter is set to true.\n\n\n# rows\n\n * Type: array\n * SubType: object\n\n> List containing the fetched data\n\nOnly populated if \'fetch\' parameter is set to true.\n\n\n# size\n\n * Type: integer\n\n> The size of the rows fetch\n\n\n# uri\n\n * Type: string\n\n> The uri of store result\n\nOnly populated if \'store\' is set to true.\n\n\n# Definitions',normalizedContent:'trigger\n\ntype: "io.kestra.plugin.gcp.bigquery.trigger"\n\n\n> wait for query on bigquery\n\n\n# examples\n\n> wait for a sql query to return results and iterate through rows\n\nid: bigquery-listen\nnamespace: io.kestra.tests\n\ntasks:\n  - id: each\n    type: io.kestra.core.tasks.flows.eachsequential\n    tasks:\n      - id: return\n        type: io.kestra.core.tasks.debugs.return\n        format: "{{json taskrun.value}}"\n    value: "{{ trigger.rows }}"\n\ntriggers:\n  - id: watch\n    type: io.kestra.plugin.gcp.bigquery.trigger\n    interval: "pt5m"\n    sql: "select * from `myproject.mydataset.mytable`"\n\n\n\n# properties\n\n\n# fetch\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: false\n\n> whether to fetch the data from the query result to the task output\n\n\n# fetchone\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: false\n\n> whether to fetch only one data row from the query result to the task output\n\n\n# interval\n\n * type: string\n * dynamic: ❓\n * required: ❌\n * default: pt1s\n * format: duration\n\n> interval between polling\n\nthe interval between 2 different test of schedule, this can avoid to overload the remote system with too many call. for most of trigger that depend on external system, a minimal interval must be at least pt30s.\nsee iso_8601 durations for more information of available interval value\n\n\n# legacysql\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: false\n\n> whether to use bigquery\'s legacy sql dialect for this query\n\nby default this property is set to false.\n\n\n# projectid\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n\n# scopes\n\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n * default: [https://www.googleapis.com/auth/cloud-platform]\n\n\n# serviceaccount\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n\n# sql\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the sql query to run\n\n\n# store\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: false\n\n> whether to store the data from the query result into an ion serialized data file\n\n\n# outputs\n\n\n# jobid\n\n * type: string\n\n> the job id\n\n\n# row\n\n * type: object\n\n> map containing the first row of fetched data\n\nonly populated if \'fetchone\' parameter is set to true.\n\n\n# rows\n\n * type: array\n * subtype: object\n\n> list containing the fetched data\n\nonly populated if \'fetch\' parameter is set to true.\n\n\n# size\n\n * type: integer\n\n> the size of the rows fetch\n\n\n# uri\n\n * type: string\n\n> the uri of store result\n\nonly populated if \'store\' is set to true.\n\n\n# definitions',charsets:{}},{title:"Trigger",frontmatter:{title:"Trigger",editLink:!1,description:"Wait for files on Google cloud storage",icon:"PHN2ZyBpZD0iUHJvZHVjdF9JY29ucyIgZGF0YS1uYW1lPSJQcm9kdWN0IEljb25zIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCAyNCAyNCI+PGRlZnM+PHN0eWxlPi5jbHMtMXtmaWxsOiNhZWNiZmE7fS5jbHMtMntmaWxsOiM2NjlkZjY7fS5jbHMtM3tmaWxsOiM0Mjg1ZjQ7fS5jbHMtNHtmaWxsOiNmZmY7fTwvc3R5bGU+PC9kZWZzPjx0aXRsZT5JY29uXzI0cHhfQ29sb3JfQ2xvdWRTdG9yYWdlPC90aXRsZT48cmVjdCBjbGFzcz0iY2xzLTEiIHg9IjIiIHk9IjQiIHdpZHRoPSIyMCIgaGVpZ2h0PSI3Ii8+PHJlY3QgY2xhc3M9ImNscy0yIiB4PSIyMCIgeT0iNCIgd2lkdGg9IjIiIGhlaWdodD0iNyIvPjxwb2x5Z29uIGNsYXNzPSJjbHMtMyIgcG9pbnRzPSIyMiA0IDIwIDQgMjAgMTEgMjIgNCIvPjxyZWN0IGNsYXNzPSJjbHMtMiIgeD0iMiIgeT0iNCIgd2lkdGg9IjIiIGhlaWdodD0iNyIvPjxyZWN0IGNsYXNzPSJjbHMtNCIgeD0iNiIgeT0iNyIgd2lkdGg9IjYiIGhlaWdodD0iMSIvPjxyZWN0IGNsYXNzPSJjbHMtNCIgeD0iMTUiIHk9IjYiIHdpZHRoPSIzIiBoZWlnaHQ9IjMiIHJ4PSIxLjUiLz48cmVjdCBjbGFzcz0iY2xzLTEiIHg9IjIiIHk9IjEzIiB3aWR0aD0iMjAiIGhlaWdodD0iNyIvPjxyZWN0IGNsYXNzPSJjbHMtMiIgeD0iMjAiIHk9IjEzIiB3aWR0aD0iMiIgaGVpZ2h0PSI3Ii8+PHBvbHlnb24gY2xhc3M9ImNscy0zIiBwb2ludHM9IjIyIDEzIDIwIDEzIDIwIDIwIDIyIDEzIi8+PHJlY3QgY2xhc3M9ImNscy0yIiB4PSIyIiB5PSIxMyIgd2lkdGg9IjIiIGhlaWdodD0iNyIvPjxyZWN0IGNsYXNzPSJjbHMtNCIgeD0iNiIgeT0iMTYiIHdpZHRoPSI2IiBoZWlnaHQ9IjEiLz48cmVjdCBjbGFzcz0iY2xzLTQiIHg9IjE1IiB5PSIxNSIgd2lkdGg9IjMiIGhlaWdodD0iMyIgcng9IjEuNSIvPjwvc3ZnPg==",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Trigger"},{property:"og:description",content:"Wait for files on Google cloud storage | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-gcp/triggers/gcs/io.kestra.plugin.gcp.gcs.Trigger.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Trigger"},{name:"twitter:description",content:"Wait for files on Google cloud storage | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-gcp/triggers/gcs/io.kestra.plugin.gcp.gcs.Trigger.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-gcp/triggers/gcs/io.kestra.plugin.gcp.gcs.Trigger.html",relativePath:"plugins/plugin-gcp/triggers/gcs/io.kestra.plugin.gcp.gcs.Trigger.md",key:"v-501aa0f3",path:"/plugins/plugin-gcp/triggers/gcs/io.kestra.plugin.gcp.gcs.Trigger.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:534},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:1095},{level:3,title:"action",slug:"action",normalizedTitle:"action",charIndex:430},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:203},{level:3,title:"interval",slug:"interval",normalizedTitle:"interval",charIndex:123},{level:3,title:"listingType",slug:"listingtype",normalizedTitle:"listingtype",charIndex:1738},{level:3,title:"moveDirectory",slug:"movedirectory",normalizedTitle:"movedirectory",charIndex:1044},{level:3,title:"projectId",slug:"projectid",normalizedTitle:"projectid",charIndex:2307},{level:3,title:"regExp",slug:"regexp",normalizedTitle:"regexp",charIndex:243},{level:3,title:"scopes",slug:"scopes",normalizedTitle:"scopes",charIndex:2605},{level:3,title:"serviceAccount",slug:"serviceaccount",normalizedTitle:"serviceaccount",charIndex:2767},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:2863},{level:3,title:"blobs",slug:"blobs",normalizedTitle:"blobs",charIndex:870},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:2972},{level:3,title:"Blob",slug:"blob",normalizedTitle:"blob",charIndex:2909}],headersStr:"Examples Properties action from interval listingType moveDirectory projectId regExp scopes serviceAccount Outputs blobs Definitions Blob",content:'Trigger\n\ntype: "io.kestra.plugin.gcp.gcs.Trigger"\n\n\n> Wait for files on Google cloud storage\n\nThis trigger will poll every interval a GCS bucket. You can search for all files in a bucket or directory in from or you can filter the files with a regExp.The detection is atomic, internally we do a list and interact only with files listed.\nOnce a file is detected, we download the file on internal storage and processed with declared action in order to move or delete the files from the bucket (to avoid double detection on new poll)\n\n\n# Examples\n\n> Wait for a list of file on a GCS bucket and iterate through the files\n\nid: gcs-listen\nnamespace: io.kestra.tests\n\ntasks:\n  - id: each\n    type: io.kestra.core.tasks.flows.EachSequential\n    tasks:\n      - id: return\n        type: io.kestra.core.tasks.debugs.Return\n        format: "{{taskrun.value}}"\n    value: "{{ trigger.blobs | jq \'[].uri\' }}"\n\ntriggers:\n  - id: watch\n    type: io.kestra.plugin.gcp.gcs.Trigger\n    interval: "PT5M"\n    from: gs://my-bucket/kestra/listen/\n    action: MOVE\n    moveDirectory: gs://my-bucket/kestra/archive/\n\n\n\n# Properties\n\n\n# action\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Possible Values:\n   \n   * MOVE\n   * DELETE\n\n> The action to do on find files\n\n\n# from\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The directory to list\n\n\n# interval\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Default: PT1S\n * Format: duration\n\n> Interval between polling\n\nThe interval between 2 different test of schedule, this can avoid to overload the remote system with too many call. For most of trigger that depend on external system, a minimal interval must be at least PT30S.\nSee ISO_8601 Durations for more information of available interval value\n\n\n# listingType\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Default: DIRECTORY\n\n * Possible Values:\n   \n   * RECURSIVE\n   * DIRECTORY\n\n> The listing type you want (like directory or recursive)\n\nif DIRECTORY, will only list objects in the specified directory\nif RECURSIVE, will list objects in the specified directory recursively\nDefault value is DIRECTORY\nWhen using RECURSIVE value, be carefull to move your files to a location not in the from scope\n\n\n# moveDirectory\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The destination directory in case off MOVE\n\n\n# projectId\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The GCP project id\n\n\n# regExp\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> A regexp to filter on full path\n\nex:\nregExp: .* to match all files\nregExp: .*2020-01-0.\\\\.csv to match files between 01 and 09 of january ending with .csv\n\n\n# scopes\n\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n * Default: [https://www.googleapis.com/auth/cloud-platform]\n\n> The GCP scopes to used\n\n\n# serviceAccount\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The GCP service account key\n\n\n# Outputs\n\n\n# blobs\n\n * Type: array\n * SubType: Blob\n * SubType: ====\n\n> The bucket of the downloaded file\n\n\n# Definitions\n\n\n# Blob\n\n# bucket\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# cacheControl\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# componentCount\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n# contentDisposition\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# contentEncoding\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# contentLanguage\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# contentType\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# crc32c\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# createTime\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# customTime\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# deleteTime\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# etag\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# eventBasedHold\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n# generatedId\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# isDirectory\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n# kmsKeyName\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# md5\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# mediaLink\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# metaGeneration\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n# metadata\n\n * Type: object\n * Dynamic: ❓\n * Required: ❌\n\n# name\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# retentionExpirationTime\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n# selfLink\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# size\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n# temporaryHold\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n# timeStorageClassUpdated\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# updateTime\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# uri\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌',normalizedContent:'trigger\n\ntype: "io.kestra.plugin.gcp.gcs.trigger"\n\n\n> wait for files on google cloud storage\n\nthis trigger will poll every interval a gcs bucket. you can search for all files in a bucket or directory in from or you can filter the files with a regexp.the detection is atomic, internally we do a list and interact only with files listed.\nonce a file is detected, we download the file on internal storage and processed with declared action in order to move or delete the files from the bucket (to avoid double detection on new poll)\n\n\n# examples\n\n> wait for a list of file on a gcs bucket and iterate through the files\n\nid: gcs-listen\nnamespace: io.kestra.tests\n\ntasks:\n  - id: each\n    type: io.kestra.core.tasks.flows.eachsequential\n    tasks:\n      - id: return\n        type: io.kestra.core.tasks.debugs.return\n        format: "{{taskrun.value}}"\n    value: "{{ trigger.blobs | jq \'[].uri\' }}"\n\ntriggers:\n  - id: watch\n    type: io.kestra.plugin.gcp.gcs.trigger\n    interval: "pt5m"\n    from: gs://my-bucket/kestra/listen/\n    action: move\n    movedirectory: gs://my-bucket/kestra/archive/\n\n\n\n# properties\n\n\n# action\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * possible values:\n   \n   * move\n   * delete\n\n> the action to do on find files\n\n\n# from\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the directory to list\n\n\n# interval\n\n * type: string\n * dynamic: ❓\n * required: ❌\n * default: pt1s\n * format: duration\n\n> interval between polling\n\nthe interval between 2 different test of schedule, this can avoid to overload the remote system with too many call. for most of trigger that depend on external system, a minimal interval must be at least pt30s.\nsee iso_8601 durations for more information of available interval value\n\n\n# listingtype\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * default: directory\n\n * possible values:\n   \n   * recursive\n   * directory\n\n> the listing type you want (like directory or recursive)\n\nif directory, will only list objects in the specified directory\nif recursive, will list objects in the specified directory recursively\ndefault value is directory\nwhen using recursive value, be carefull to move your files to a location not in the from scope\n\n\n# movedirectory\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the destination directory in case off move\n\n\n# projectid\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the gcp project id\n\n\n# regexp\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> a regexp to filter on full path\n\nex:\nregexp: .* to match all files\nregexp: .*2020-01-0.\\\\.csv to match files between 01 and 09 of january ending with .csv\n\n\n# scopes\n\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n * default: [https://www.googleapis.com/auth/cloud-platform]\n\n> the gcp scopes to used\n\n\n# serviceaccount\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the gcp service account key\n\n\n# outputs\n\n\n# blobs\n\n * type: array\n * subtype: blob\n * subtype: ====\n\n> the bucket of the downloaded file\n\n\n# definitions\n\n\n# blob\n\n# bucket\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# cachecontrol\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# componentcount\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n# contentdisposition\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# contentencoding\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# contentlanguage\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# contenttype\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# crc32c\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# createtime\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# customtime\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# deletetime\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# etag\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# eventbasedhold\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n# generatedid\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# isdirectory\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n# kmskeyname\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# md5\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# medialink\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# metageneration\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n# metadata\n\n * type: object\n * dynamic: ❓\n * required: ❌\n\n# name\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# retentionexpirationtime\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n# selflink\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# size\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n# temporaryhold\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n# timestorageclassupdated\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# updatetime\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# uri\n\n * type: string\n * dynamic: ❓\n * required: ❌',charsets:{cjk:!0}},{title:"Plugin googleworkspace",frontmatter:{title:"Plugin googleworkspace",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Plugin googleworkspace"},{property:"og:description",content:"Plugin googleworkspace | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-googleworkspace/"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Plugin googleworkspace"},{name:"twitter:description",content:"Plugin googleworkspace | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-googleworkspace/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-googleworkspace/",relativePath:"plugins/plugin-googleworkspace/README.md",key:"v-21037370",path:"/plugins/plugin-googleworkspace/",headers:[{level:2,title:"Sheets",slug:"sheets",normalizedTitle:"sheets",charIndex:29},{level:3,title:"Tasks",slug:"tasks",normalizedTitle:"tasks",charIndex:40},{level:2,title:"Drive",slug:"drive",normalizedTitle:"drive",charIndex:72},{level:3,title:"Tasks",slug:"tasks-2",normalizedTitle:"tasks",charIndex:40}],headersStr:"Sheets Tasks Drive Tasks",content:"# Plugin googleworkspace\n\n\n# Sheets\n\n\n# Tasks\n\n * Read\n * ReadRange\n\n\n# Drive\n\n\n# Tasks\n\n * Create\n * Delete\n * Download\n * Export\n * List\n * Upload",normalizedContent:"# plugin googleworkspace\n\n\n# sheets\n\n\n# tasks\n\n * read\n * readrange\n\n\n# drive\n\n\n# tasks\n\n * create\n * delete\n * download\n * export\n * list\n * upload",charsets:{}},{title:"Create",frontmatter:{title:"Create",editLink:!1,description:"Create a file or a folder.",icon:"PHN2ZyB2aWV3Qm94PSIwIDAgODcuMyA3OCIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj4KCTxwYXRoIGQ9Im02LjYgNjYuODUgMy44NSA2LjY1Yy44IDEuNCAxLjk1IDIuNSAzLjMgMy4zbDEzLjc1LTIzLjhoLTI3LjVjMCAxLjU1LjQgMy4xIDEuMiA0LjV6IiBmaWxsPSIjMDA2NmRhIi8+Cgk8cGF0aCBkPSJtNDMuNjUgMjUtMTMuNzUtMjMuOGMtMS4zNS44LTIuNSAxLjktMy4zIDMuM2wtMjUuNCA0NGE5LjA2IDkuMDYgMCAwIDAgLTEuMiA0LjVoMjcuNXoiIGZpbGw9IiMwMGFjNDciLz4KCTxwYXRoIGQ9Im03My41NSA3Ni44YzEuMzUtLjggMi41LTEuOSAzLjMtMy4zbDEuNi0yLjc1IDcuNjUtMTMuMjVjLjgtMS40IDEuMi0yLjk1IDEuMi00LjVoLTI3LjUwMmw1Ljg1MiAxMS41eiIgZmlsbD0iI2VhNDMzNSIvPgoJPHBhdGggZD0ibTQzLjY1IDI1IDEzLjc1LTIzLjhjLTEuMzUtLjgtMi45LTEuMi00LjUtMS4yaC0xOC41Yy0xLjYgMC0zLjE1LjQ1LTQuNSAxLjJ6IiBmaWxsPSIjMDA4MzJkIi8+Cgk8cGF0aCBkPSJtNTkuOCA1M2gtMzIuM2wtMTMuNzUgMjMuOGMxLjM1LjggMi45IDEuMiA0LjUgMS4yaDUwLjhjMS42IDAgMy4xNS0uNDUgNC41LTEuMnoiIGZpbGw9IiMyNjg0ZmMiLz4KCTxwYXRoIGQ9Im03My40IDI2LjUtMTIuNy0yMmMtLjgtMS40LTEuOTUtMi41LTMuMy0zLjNsLTEzLjc1IDIzLjggMTYuMTUgMjhoMjcuNDVjMC0xLjU1LS40LTMuMS0xLjItNC41eiIgZmlsbD0iI2ZmYmEwMCIvPgo8L3N2Zz4=",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Create"},{property:"og:description",content:"Create a file or a folder. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-googleworkspace/tasks/drive/io.kestra.plugin.googleworkspace.drive.Create.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Create"},{name:"twitter:description",content:"Create a file or a folder. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-googleworkspace/tasks/drive/io.kestra.plugin.googleworkspace.drive.Create.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-googleworkspace/tasks/drive/io.kestra.plugin.googleworkspace.drive.Create.html",relativePath:"plugins/plugin-googleworkspace/tasks/drive/io.kestra.plugin.googleworkspace.drive.Create.md",key:"v-5a6906b5",path:"/plugins/plugin-googleworkspace/tasks/drive/io.kestra.plugin.googleworkspace.drive.Create.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:97},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:240},{level:3,title:"description",slug:"description",normalizedTitle:"description",charIndex:255},{level:3,title:"mimeType",slug:"mimetype",normalizedTitle:"mimetype",charIndex:354},{level:3,title:"name",slug:"name",normalizedTitle:"name",charIndex:174},{level:3,title:"parents",slug:"parents",normalizedTitle:"parents",charIndex:897},{level:3,title:"scopes",slug:"scopes",normalizedTitle:"scopes",charIndex:998},{level:3,title:"serviceAccount",slug:"serviceaccount",normalizedTitle:"serviceaccount",charIndex:1100},{level:3,title:"teamDriveId",slug:"teamdriveid",normalizedTitle:"teamdriveid",charIndex:1196},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1304},{level:3,title:"file",slug:"file",normalizedTitle:"file",charIndex:75},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:1369},{level:3,title:"File",slug:"file-2",normalizedTitle:"file",charIndex:1331}],headersStr:"Examples Properties description mimeType name parents scopes serviceAccount teamDriveId Outputs file Definitions File",content:'Create\n\ntype: "io.kestra.plugin.googleworkspace.drive.Create"\n\n\n> Create a file or a folder.\n\n\n# Examples\n\nid: "create"\ntype: "io.kestra.plugin.googleworkspace.drive.Create"\nname: "My Folder"\nname: "application/vnd.google-apps.folder"\n\n\n\n# Properties\n\n\n# description\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> A short description of the file.\n\n\n# mimeType\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The MIME type of the file.\n\nDrive will attempt to automatically detect an appropriate value from uploaded content if no value is provided. The value cannot be changed unless a new revision is uploaded. If a file is created with a Google Doc MIME type, the uploaded content will be imported if possible. The supported import formats are published here.\n\n\n# name\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The name of the file\n\nThis is not necessarily unique within a folder\n\n\n# parents\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The destination path\n\n\n# scopes\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The GCP scopes to used\n\n\n# serviceAccount\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The GCP service account key\n\n\n# teamDriveId\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> ID of the Team Drive the file resides in.\n\n\n# Outputs\n\n\n# file\n\n * Type: File\n\n> The file metadata created\n\n\n# Definitions\n\n\n# File\n\n# createdTime\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# id\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# mimeType\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# name\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# parents\n\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n\n# size\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n# trashed\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n# version\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌',normalizedContent:'create\n\ntype: "io.kestra.plugin.googleworkspace.drive.create"\n\n\n> create a file or a folder.\n\n\n# examples\n\nid: "create"\ntype: "io.kestra.plugin.googleworkspace.drive.create"\nname: "my folder"\nname: "application/vnd.google-apps.folder"\n\n\n\n# properties\n\n\n# description\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> a short description of the file.\n\n\n# mimetype\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the mime type of the file.\n\ndrive will attempt to automatically detect an appropriate value from uploaded content if no value is provided. the value cannot be changed unless a new revision is uploaded. if a file is created with a google doc mime type, the uploaded content will be imported if possible. the supported import formats are published here.\n\n\n# name\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the name of the file\n\nthis is not necessarily unique within a folder\n\n\n# parents\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> the destination path\n\n\n# scopes\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> the gcp scopes to used\n\n\n# serviceaccount\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the gcp service account key\n\n\n# teamdriveid\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> id of the team drive the file resides in.\n\n\n# outputs\n\n\n# file\n\n * type: file\n\n> the file metadata created\n\n\n# definitions\n\n\n# file\n\n# createdtime\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# id\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# mimetype\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# name\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# parents\n\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n\n# size\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n# trashed\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n# version\n\n * type: integer\n * dynamic: ❓\n * required: ❌',charsets:{}},{title:"Delete",frontmatter:{title:"Delete",editLink:!1,description:"Delete a file on a Drive folder.",icon:"PHN2ZyB2aWV3Qm94PSIwIDAgODcuMyA3OCIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj4KCTxwYXRoIGQ9Im02LjYgNjYuODUgMy44NSA2LjY1Yy44IDEuNCAxLjk1IDIuNSAzLjMgMy4zbDEzLjc1LTIzLjhoLTI3LjVjMCAxLjU1LjQgMy4xIDEuMiA0LjV6IiBmaWxsPSIjMDA2NmRhIi8+Cgk8cGF0aCBkPSJtNDMuNjUgMjUtMTMuNzUtMjMuOGMtMS4zNS44LTIuNSAxLjktMy4zIDMuM2wtMjUuNCA0NGE5LjA2IDkuMDYgMCAwIDAgLTEuMiA0LjVoMjcuNXoiIGZpbGw9IiMwMGFjNDciLz4KCTxwYXRoIGQ9Im03My41NSA3Ni44YzEuMzUtLjggMi41LTEuOSAzLjMtMy4zbDEuNi0yLjc1IDcuNjUtMTMuMjVjLjgtMS40IDEuMi0yLjk1IDEuMi00LjVoLTI3LjUwMmw1Ljg1MiAxMS41eiIgZmlsbD0iI2VhNDMzNSIvPgoJPHBhdGggZD0ibTQzLjY1IDI1IDEzLjc1LTIzLjhjLTEuMzUtLjgtMi45LTEuMi00LjUtMS4yaC0xOC41Yy0xLjYgMC0zLjE1LjQ1LTQuNSAxLjJ6IiBmaWxsPSIjMDA4MzJkIi8+Cgk8cGF0aCBkPSJtNTkuOCA1M2gtMzIuM2wtMTMuNzUgMjMuOGMxLjM1LjggMi45IDEuMiA0LjUgMS4yaDUwLjhjMS42IDAgMy4xNS0uNDUgNC41LTEuMnoiIGZpbGw9IiMyNjg0ZmMiLz4KCTxwYXRoIGQ9Im03My40IDI2LjUtMTIuNy0yMmMtLjgtMS40LTEuOTUtMi41LTMuMy0zLjNsLTEzLjc1IDIzLjggMTYuMTUgMjhoMjcuNDVjMC0xLjU1LS40LTMuMS0xLjItNC41eiIgZmlsbD0iI2ZmYmEwMCIvPgo8L3N2Zz4=",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Delete"},{property:"og:description",content:"Delete a file on a Drive folder. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-googleworkspace/tasks/drive/io.kestra.plugin.googleworkspace.drive.Delete.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Delete"},{name:"twitter:description",content:"Delete a file on a Drive folder. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-googleworkspace/tasks/drive/io.kestra.plugin.googleworkspace.drive.Delete.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-googleworkspace/tasks/drive/io.kestra.plugin.googleworkspace.drive.Delete.html",relativePath:"plugins/plugin-googleworkspace/tasks/drive/io.kestra.plugin.googleworkspace.drive.Delete.md",key:"v-c5d146d2",path:"/plugins/plugin-googleworkspace/tasks/drive/io.kestra.plugin.googleworkspace.drive.Delete.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:103},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:240},{level:3,title:"fileId",slug:"fileid",normalizedTitle:"fileid",charIndex:180},{level:3,title:"scopes",slug:"scopes",normalizedTitle:"scopes",charIndex:338},{level:3,title:"serviceAccount",slug:"serviceaccount",normalizedTitle:"serviceaccount",charIndex:492},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:588},{level:3,title:"fileId",slug:"fileid-2",normalizedTitle:"fileid",charIndex:180},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:651}],headersStr:"Examples Properties fileId scopes serviceAccount Outputs fileId Definitions",content:'Delete\n\ntype: "io.kestra.plugin.googleworkspace.drive.Delete"\n\n\n> Delete a file on a Drive folder.\n\n\n# Examples\n\nid: "delete"\ntype: "io.kestra.plugin.googleworkspace.drive.Delete"\nfileId: "1Dkd3W0OQo-wxz1rrORLP7YGSj6EBLEg74fiTdbJUIQE"\n\n\n\n# Properties\n\n\n# fileId\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The file id to delete\n\n\n# scopes\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: [https://www.googleapis.com/auth/drive]\n\n> The GCP scopes to used\n\n\n# serviceAccount\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The GCP service account key\n\n\n# Outputs\n\n\n# fileId\n\n * Type: string\n\n> The file id deleted\n\n\n# Definitions',normalizedContent:'delete\n\ntype: "io.kestra.plugin.googleworkspace.drive.delete"\n\n\n> delete a file on a drive folder.\n\n\n# examples\n\nid: "delete"\ntype: "io.kestra.plugin.googleworkspace.drive.delete"\nfileid: "1dkd3w0oqo-wxz1rrorlp7ygsj6ebleg74fitdbjuiqe"\n\n\n\n# properties\n\n\n# fileid\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the file id to delete\n\n\n# scopes\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n * default: [https://www.googleapis.com/auth/drive]\n\n> the gcp scopes to used\n\n\n# serviceaccount\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the gcp service account key\n\n\n# outputs\n\n\n# fileid\n\n * type: string\n\n> the file id deleted\n\n\n# definitions',charsets:{}},{title:"Download",frontmatter:{title:"Download",editLink:!1,description:"Download a file in a Drive folder.",icon:"PHN2ZyB2aWV3Qm94PSIwIDAgODcuMyA3OCIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj4KCTxwYXRoIGQ9Im02LjYgNjYuODUgMy44NSA2LjY1Yy44IDEuNCAxLjk1IDIuNSAzLjMgMy4zbDEzLjc1LTIzLjhoLTI3LjVjMCAxLjU1LjQgMy4xIDEuMiA0LjV6IiBmaWxsPSIjMDA2NmRhIi8+Cgk8cGF0aCBkPSJtNDMuNjUgMjUtMTMuNzUtMjMuOGMtMS4zNS44LTIuNSAxLjktMy4zIDMuM2wtMjUuNCA0NGE5LjA2IDkuMDYgMCAwIDAgLTEuMiA0LjVoMjcuNXoiIGZpbGw9IiMwMGFjNDciLz4KCTxwYXRoIGQ9Im03My41NSA3Ni44YzEuMzUtLjggMi41LTEuOSAzLjMtMy4zbDEuNi0yLjc1IDcuNjUtMTMuMjVjLjgtMS40IDEuMi0yLjk1IDEuMi00LjVoLTI3LjUwMmw1Ljg1MiAxMS41eiIgZmlsbD0iI2VhNDMzNSIvPgoJPHBhdGggZD0ibTQzLjY1IDI1IDEzLjc1LTIzLjhjLTEuMzUtLjgtMi45LTEuMi00LjUtMS4yaC0xOC41Yy0xLjYgMC0zLjE1LjQ1LTQuNSAxLjJ6IiBmaWxsPSIjMDA4MzJkIi8+Cgk8cGF0aCBkPSJtNTkuOCA1M2gtMzIuM2wtMTMuNzUgMjMuOGMxLjM1LjggMi45IDEuMiA0LjUgMS4yaDUwLjhjMS42IDAgMy4xNS0uNDUgNC41LTEuMnoiIGZpbGw9IiMyNjg0ZmMiLz4KCTxwYXRoIGQ9Im03My40IDI2LjUtMTIuNy0yMmMtLjgtMS40LTEuOTUtMi41LTMuMy0zLjNsLTEzLjc1IDIzLjggMTYuMTUgMjhoMjcuNDVjMC0xLjU1LS40LTMuMS0xLjItNC41eiIgZmlsbD0iI2ZmYmEwMCIvPgo8L3N2Zz4=",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Download"},{property:"og:description",content:"Download a file in a Drive folder. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-googleworkspace/tasks/drive/io.kestra.plugin.googleworkspace.drive.Download.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Download"},{name:"twitter:description",content:"Download a file in a Drive folder. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-googleworkspace/tasks/drive/io.kestra.plugin.googleworkspace.drive.Download.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-googleworkspace/tasks/drive/io.kestra.plugin.googleworkspace.drive.Download.html",relativePath:"plugins/plugin-googleworkspace/tasks/drive/io.kestra.plugin.googleworkspace.drive.Download.md",key:"v-ab3dc446",path:"/plugins/plugin-googleworkspace/tasks/drive/io.kestra.plugin.googleworkspace.drive.Download.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:109},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:250},{level:3,title:"fileId",slug:"fileid",normalizedTitle:"fileid",charIndex:190},{level:3,title:"scopes",slug:"scopes",normalizedTitle:"scopes",charIndex:347},{level:3,title:"serviceAccount",slug:"serviceaccount",normalizedTitle:"serviceaccount",charIndex:501},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:597},{level:3,title:"file",slug:"file",normalizedTitle:"file",charIndex:81},{level:3,title:"uri",slug:"uri",normalizedTitle:"uri",charIndex:663},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:740},{level:3,title:"File",slug:"file-2",normalizedTitle:"file",charIndex:624}],headersStr:"Examples Properties fileId scopes serviceAccount Outputs file uri Definitions File",content:'Download\n\ntype: "io.kestra.plugin.googleworkspace.drive.Download"\n\n\n> Download a file in a Drive folder.\n\n\n# Examples\n\nid: "download"\ntype: "io.kestra.plugin.googleworkspace.drive.Download"\nfileId: "1Dkd3W0OQo-wxz1rrORLP7YGSj6EBLEg74fiTdbJUIQE"\n\n\n\n# Properties\n\n\n# fileId\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The file id to copy\n\n\n# scopes\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: [https://www.googleapis.com/auth/drive]\n\n> The GCP scopes to used\n\n\n# serviceAccount\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The GCP service account key\n\n\n# Outputs\n\n\n# file\n\n * Type: File\n\n> The file metadata uploaded\n\n\n# uri\n\n * Type: string\n\n> The url of the downloaded file on kestra storage\n\n\n# Definitions\n\n\n# File\n\n# createdTime\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# id\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# mimeType\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# name\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# parents\n\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n\n# size\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n# trashed\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n# version\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌',normalizedContent:'download\n\ntype: "io.kestra.plugin.googleworkspace.drive.download"\n\n\n> download a file in a drive folder.\n\n\n# examples\n\nid: "download"\ntype: "io.kestra.plugin.googleworkspace.drive.download"\nfileid: "1dkd3w0oqo-wxz1rrorlp7ygsj6ebleg74fitdbjuiqe"\n\n\n\n# properties\n\n\n# fileid\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the file id to copy\n\n\n# scopes\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n * default: [https://www.googleapis.com/auth/drive]\n\n> the gcp scopes to used\n\n\n# serviceaccount\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the gcp service account key\n\n\n# outputs\n\n\n# file\n\n * type: file\n\n> the file metadata uploaded\n\n\n# uri\n\n * type: string\n\n> the url of the downloaded file on kestra storage\n\n\n# definitions\n\n\n# file\n\n# createdtime\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# id\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# mimetype\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# name\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# parents\n\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n\n# size\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n# trashed\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n# version\n\n * type: integer\n * dynamic: ❓\n * required: ❌',charsets:{}},{title:"Export",frontmatter:{title:"Export",editLink:!1,description:"Export a file in a Drive folder.",icon:"PHN2ZyB2aWV3Qm94PSIwIDAgODcuMyA3OCIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj4KCTxwYXRoIGQ9Im02LjYgNjYuODUgMy44NSA2LjY1Yy44IDEuNCAxLjk1IDIuNSAzLjMgMy4zbDEzLjc1LTIzLjhoLTI3LjVjMCAxLjU1LjQgMy4xIDEuMiA0LjV6IiBmaWxsPSIjMDA2NmRhIi8+Cgk8cGF0aCBkPSJtNDMuNjUgMjUtMTMuNzUtMjMuOGMtMS4zNS44LTIuNSAxLjktMy4zIDMuM2wtMjUuNCA0NGE5LjA2IDkuMDYgMCAwIDAgLTEuMiA0LjVoMjcuNXoiIGZpbGw9IiMwMGFjNDciLz4KCTxwYXRoIGQ9Im03My41NSA3Ni44YzEuMzUtLjggMi41LTEuOSAzLjMtMy4zbDEuNi0yLjc1IDcuNjUtMTMuMjVjLjgtMS40IDEuMi0yLjk1IDEuMi00LjVoLTI3LjUwMmw1Ljg1MiAxMS41eiIgZmlsbD0iI2VhNDMzNSIvPgoJPHBhdGggZD0ibTQzLjY1IDI1IDEzLjc1LTIzLjhjLTEuMzUtLjgtMi45LTEuMi00LjUtMS4yaC0xOC41Yy0xLjYgMC0zLjE1LjQ1LTQuNSAxLjJ6IiBmaWxsPSIjMDA4MzJkIi8+Cgk8cGF0aCBkPSJtNTkuOCA1M2gtMzIuM2wtMTMuNzUgMjMuOGMxLjM1LjggMi45IDEuMiA0LjUgMS4yaDUwLjhjMS42IDAgMy4xNS0uNDUgNC41LTEuMnoiIGZpbGw9IiMyNjg0ZmMiLz4KCTxwYXRoIGQ9Im03My40IDI2LjUtMTIuNy0yMmMtLjgtMS40LTEuOTUtMi41LTMuMy0zLjNsLTEzLjc1IDIzLjggMTYuMTUgMjhoMjcuNDVjMC0xLjU1LS40LTMuMS0xLjItNC41eiIgZmlsbD0iI2ZmYmEwMCIvPgo8L3N2Zz4=",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Export"},{property:"og:description",content:"Export a file in a Drive folder. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-googleworkspace/tasks/drive/io.kestra.plugin.googleworkspace.drive.Export.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Export"},{name:"twitter:description",content:"Export a file in a Drive folder. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-googleworkspace/tasks/drive/io.kestra.plugin.googleworkspace.drive.Export.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-googleworkspace/tasks/drive/io.kestra.plugin.googleworkspace.drive.Export.html",relativePath:"plugins/plugin-googleworkspace/tasks/drive/io.kestra.plugin.googleworkspace.drive.Export.md",key:"v-e50be976",path:"/plugins/plugin-googleworkspace/tasks/drive/io.kestra.plugin.googleworkspace.drive.Export.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:103},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:240},{level:3,title:"contentType",slug:"contenttype",normalizedTitle:"contenttype",charIndex:255},{level:3,title:"fileId",slug:"fileid",normalizedTitle:"fileid",charIndex:180},{level:3,title:"scopes",slug:"scopes",normalizedTitle:"scopes",charIndex:490},{level:3,title:"serviceAccount",slug:"serviceaccount",normalizedTitle:"serviceaccount",charIndex:644},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:740},{level:3,title:"file",slug:"file",normalizedTitle:"file",charIndex:75},{level:3,title:"uri",slug:"uri",normalizedTitle:"uri",charIndex:806},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:883},{level:3,title:"File",slug:"file-2",normalizedTitle:"file",charIndex:767}],headersStr:"Examples Properties contentType fileId scopes serviceAccount Outputs file uri Definitions File",content:'Export\n\ntype: "io.kestra.plugin.googleworkspace.drive.Export"\n\n\n> Export a file in a Drive folder.\n\n\n# Examples\n\nid: "export"\ntype: "io.kestra.plugin.googleworkspace.drive.Export"\nfileId: "1Dkd3W0OQo-wxz1rrORLP7YGSj6EBLEg74fiTdbJUIQE"\n\n\n\n# Properties\n\n\n# contentType\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The content-type of the file.\n\na valid RFC2045 like text/csv, application/msword, ...\n\n\n# fileId\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The file id to copy\n\n\n# scopes\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: [https://www.googleapis.com/auth/drive]\n\n> The GCP scopes to used\n\n\n# serviceAccount\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The GCP service account key\n\n\n# Outputs\n\n\n# file\n\n * Type: File\n\n> The file metadata uploaded\n\n\n# uri\n\n * Type: string\n\n> The url of the downloaded file on kestra storage\n\n\n# Definitions\n\n\n# File\n\n# createdTime\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# id\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# mimeType\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# name\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# parents\n\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n\n# size\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n# trashed\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n# version\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌',normalizedContent:'export\n\ntype: "io.kestra.plugin.googleworkspace.drive.export"\n\n\n> export a file in a drive folder.\n\n\n# examples\n\nid: "export"\ntype: "io.kestra.plugin.googleworkspace.drive.export"\nfileid: "1dkd3w0oqo-wxz1rrorlp7ygsj6ebleg74fitdbjuiqe"\n\n\n\n# properties\n\n\n# contenttype\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the content-type of the file.\n\na valid rfc2045 like text/csv, application/msword, ...\n\n\n# fileid\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the file id to copy\n\n\n# scopes\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n * default: [https://www.googleapis.com/auth/drive]\n\n> the gcp scopes to used\n\n\n# serviceaccount\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the gcp service account key\n\n\n# outputs\n\n\n# file\n\n * type: file\n\n> the file metadata uploaded\n\n\n# uri\n\n * type: string\n\n> the url of the downloaded file on kestra storage\n\n\n# definitions\n\n\n# file\n\n# createdtime\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# id\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# mimetype\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# name\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# parents\n\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n\n# size\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n# trashed\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n# version\n\n * type: integer\n * dynamic: ❓\n * required: ❌',charsets:{}},{title:"List",frontmatter:{title:"List",editLink:!1,description:"List file on a Drive folder.",icon:"PHN2ZyB2aWV3Qm94PSIwIDAgODcuMyA3OCIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj4KCTxwYXRoIGQ9Im02LjYgNjYuODUgMy44NSA2LjY1Yy44IDEuNCAxLjk1IDIuNSAzLjMgMy4zbDEzLjc1LTIzLjhoLTI3LjVjMCAxLjU1LjQgMy4xIDEuMiA0LjV6IiBmaWxsPSIjMDA2NmRhIi8+Cgk8cGF0aCBkPSJtNDMuNjUgMjUtMTMuNzUtMjMuOGMtMS4zNS44LTIuNSAxLjktMy4zIDMuM2wtMjUuNCA0NGE5LjA2IDkuMDYgMCAwIDAgLTEuMiA0LjVoMjcuNXoiIGZpbGw9IiMwMGFjNDciLz4KCTxwYXRoIGQ9Im03My41NSA3Ni44YzEuMzUtLjggMi41LTEuOSAzLjMtMy4zbDEuNi0yLjc1IDcuNjUtMTMuMjVjLjgtMS40IDEuMi0yLjk1IDEuMi00LjVoLTI3LjUwMmw1Ljg1MiAxMS41eiIgZmlsbD0iI2VhNDMzNSIvPgoJPHBhdGggZD0ibTQzLjY1IDI1IDEzLjc1LTIzLjhjLTEuMzUtLjgtMi45LTEuMi00LjUtMS4yaC0xOC41Yy0xLjYgMC0zLjE1LjQ1LTQuNSAxLjJ6IiBmaWxsPSIjMDA4MzJkIi8+Cgk8cGF0aCBkPSJtNTkuOCA1M2gtMzIuM2wtMTMuNzUgMjMuOGMxLjM1LjggMi45IDEuMiA0LjUgMS4yaDUwLjhjMS42IDAgMy4xNS0uNDUgNC41LTEuMnoiIGZpbGw9IiMyNjg0ZmMiLz4KCTxwYXRoIGQ9Im03My40IDI2LjUtMTIuNy0yMmMtLjgtMS40LTEuOTUtMi41LTMuMy0zLjNsLTEzLjc1IDIzLjggMTYuMTUgMjhoMjcuNDVjMC0xLjU1LS40LTMuMS0xLjItNC41eiIgZmlsbD0iI2ZmYmEwMCIvPgo8L3N2Zz4=",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"List"},{property:"og:description",content:"List file on a Drive folder. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-googleworkspace/tasks/drive/io.kestra.plugin.googleworkspace.drive.List.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"List"},{name:"twitter:description",content:"List file on a Drive folder. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-googleworkspace/tasks/drive/io.kestra.plugin.googleworkspace.drive.List.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-googleworkspace/tasks/drive/io.kestra.plugin.googleworkspace.drive.List.html",relativePath:"plugins/plugin-googleworkspace/tasks/drive/io.kestra.plugin.googleworkspace.drive.List.md",key:"v-4afee39e",path:"/plugins/plugin-googleworkspace/tasks/drive/io.kestra.plugin.googleworkspace.drive.List.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:95},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:322},{level:3,title:"corpora",slug:"corpora",normalizedTitle:"corpora",charIndex:337},{level:3,title:"query",slug:"query",normalizedTitle:"query",charIndex:204},{level:3,title:"scopes",slug:"scopes",normalizedTitle:"scopes",charIndex:826},{level:3,title:"serviceAccount",slug:"serviceaccount",normalizedTitle:"serviceaccount",charIndex:980},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1076},{level:3,title:"files",slug:"files",normalizedTitle:"files",charIndex:437},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:1152},{level:3,title:"File",slug:"file",normalizedTitle:"file",charIndex:1122}],headersStr:"Examples Properties corpora query scopes serviceAccount Outputs files Definitions File",content:"List\n\ntype: \"io.kestra.plugin.googleworkspace.drive.List\"\n\n\n> List file on a Drive folder.\n\n\n# Examples\n\n> List subfolder in a Drive folder\n\nid: \"list\"\ntype: \"io.kestra.plugin.googleworkspace.drive.List\"\nquery: |\n  mimeType = 'application/vnd.google-apps.folder' \n  and '1z2GZgLEX12BN9zbVE6TodrCHyTRMj_ka' in parents\n\n\n\n# Properties\n\n\n# corpora\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> list of bodies of items (files/documents) to which the query applies.\n\n'allTeamDrives' must be combined with 'user'; all other values must be used in isolation. Prefer 'user' or 'teamDrive' to 'allTeamDrives' for efficiency.\n\n\n# query\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Query operators to filter results\n\nsee details here\nif not defined, will list all files that the service account have access\n\n\n# scopes\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: [https://www.googleapis.com/auth/drive]\n\n> The GCP scopes to used\n\n\n# serviceAccount\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The GCP service account key\n\n\n# Outputs\n\n\n# files\n\n * Type: array\n * SubType: File\n\n> The list of files\n\n\n# Definitions\n\n\n# File\n\n# createdTime\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# id\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# mimeType\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# name\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# parents\n\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n\n# size\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n# trashed\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n# version\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌",normalizedContent:"list\n\ntype: \"io.kestra.plugin.googleworkspace.drive.list\"\n\n\n> list file on a drive folder.\n\n\n# examples\n\n> list subfolder in a drive folder\n\nid: \"list\"\ntype: \"io.kestra.plugin.googleworkspace.drive.list\"\nquery: |\n  mimetype = 'application/vnd.google-apps.folder' \n  and '1z2gzglex12bn9zbve6todrchytrmj_ka' in parents\n\n\n\n# properties\n\n\n# corpora\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> list of bodies of items (files/documents) to which the query applies.\n\n'allteamdrives' must be combined with 'user'; all other values must be used in isolation. prefer 'user' or 'teamdrive' to 'allteamdrives' for efficiency.\n\n\n# query\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> query operators to filter results\n\nsee details here\nif not defined, will list all files that the service account have access\n\n\n# scopes\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n * default: [https://www.googleapis.com/auth/drive]\n\n> the gcp scopes to used\n\n\n# serviceaccount\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the gcp service account key\n\n\n# outputs\n\n\n# files\n\n * type: array\n * subtype: file\n\n> the list of files\n\n\n# definitions\n\n\n# file\n\n# createdtime\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# id\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# mimetype\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# name\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# parents\n\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n\n# size\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n# trashed\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n# version\n\n * type: integer\n * dynamic: ❓\n * required: ❌",charsets:{cjk:!0}},{title:"Upload",frontmatter:{title:"Upload",editLink:!1,description:"Upload a file in a Drive folder.",icon:"PHN2ZyB2aWV3Qm94PSIwIDAgODcuMyA3OCIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj4KCTxwYXRoIGQ9Im02LjYgNjYuODUgMy44NSA2LjY1Yy44IDEuNCAxLjk1IDIuNSAzLjMgMy4zbDEzLjc1LTIzLjhoLTI3LjVjMCAxLjU1LjQgMy4xIDEuMiA0LjV6IiBmaWxsPSIjMDA2NmRhIi8+Cgk8cGF0aCBkPSJtNDMuNjUgMjUtMTMuNzUtMjMuOGMtMS4zNS44LTIuNSAxLjktMy4zIDMuM2wtMjUuNCA0NGE5LjA2IDkuMDYgMCAwIDAgLTEuMiA0LjVoMjcuNXoiIGZpbGw9IiMwMGFjNDciLz4KCTxwYXRoIGQ9Im03My41NSA3Ni44YzEuMzUtLjggMi41LTEuOSAzLjMtMy4zbDEuNi0yLjc1IDcuNjUtMTMuMjVjLjgtMS40IDEuMi0yLjk1IDEuMi00LjVoLTI3LjUwMmw1Ljg1MiAxMS41eiIgZmlsbD0iI2VhNDMzNSIvPgoJPHBhdGggZD0ibTQzLjY1IDI1IDEzLjc1LTIzLjhjLTEuMzUtLjgtMi45LTEuMi00LjUtMS4yaC0xOC41Yy0xLjYgMC0zLjE1LjQ1LTQuNSAxLjJ6IiBmaWxsPSIjMDA4MzJkIi8+Cgk8cGF0aCBkPSJtNTkuOCA1M2gtMzIuM2wtMTMuNzUgMjMuOGMxLjM1LjggMi45IDEuMiA0LjUgMS4yaDUwLjhjMS42IDAgMy4xNS0uNDUgNC41LTEuMnoiIGZpbGw9IiMyNjg0ZmMiLz4KCTxwYXRoIGQ9Im03My40IDI2LjUtMTIuNy0yMmMtLjgtMS40LTEuOTUtMi41LTMuMy0zLjNsLTEzLjc1IDIzLjggMTYuMTUgMjhoMjcuNDVjMC0xLjU1LS40LTMuMS0xLjItNC41eiIgZmlsbD0iI2ZmYmEwMCIvPgo8L3N2Zz4=",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Upload"},{property:"og:description",content:"Upload a file in a Drive folder. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-googleworkspace/tasks/drive/io.kestra.plugin.googleworkspace.drive.Upload.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Upload"},{name:"twitter:description",content:"Upload a file in a Drive folder. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-googleworkspace/tasks/drive/io.kestra.plugin.googleworkspace.drive.Upload.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-googleworkspace/tasks/drive/io.kestra.plugin.googleworkspace.drive.Upload.html",relativePath:"plugins/plugin-googleworkspace/tasks/drive/io.kestra.plugin.googleworkspace.drive.Upload.md",key:"v-5bc6a46b",path:"/plugins/plugin-googleworkspace/tasks/drive/io.kestra.plugin.googleworkspace.drive.Upload.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:103},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:405},{level:3,title:"contentType",slug:"contenttype",normalizedTitle:"contenttype",charIndex:324},{level:3,title:"description",slug:"description",normalizedTitle:"description",charIndex:573},{level:3,title:"fileId",slug:"fileid",normalizedTitle:"fileid",charIndex:672},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:227},{level:3,title:"mimeType",slug:"mimetype",normalizedTitle:"mimetype",charIndex:348},{level:3,title:"name",slug:"name",normalizedTitle:"name",charIndex:301},{level:3,title:"parents",slug:"parents",normalizedTitle:"parents",charIndex:253},{level:3,title:"scopes",slug:"scopes",normalizedTitle:"scopes",charIndex:1520},{level:3,title:"serviceAccount",slug:"serviceaccount",normalizedTitle:"serviceaccount",charIndex:1674},{level:3,title:"teamDriveId",slug:"teamdriveid",normalizedTitle:"teamdriveid",charIndex:1770},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1878},{level:3,title:"file",slug:"file",normalizedTitle:"file",charIndex:75},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:1944},{level:3,title:"File",slug:"file-2",normalizedTitle:"file",charIndex:1905}],headersStr:"Examples Properties contentType description fileId from mimeType name parents scopes serviceAccount teamDriveId Outputs file Definitions File",content:'Upload\n\ntype: "io.kestra.plugin.googleworkspace.drive.Upload"\n\n\n> Upload a file in a Drive folder.\n\n\n# Examples\n\n> Upload a csv and convert it to sheet format\n\nid: "upload"\ntype: "io.kestra.plugin.googleworkspace.drive.Upload"\nfrom: "{{ inputs.file }}"\nparents:\n - "1HuxzpLt1b0111MuKMgy8wAv-m9Myc1E_"\nname: "My awesome CSV"\ncontentType: "text/csv"\nmimeType: "application/vnd.google-apps.spreadsheet"\n\n\n\n# Properties\n\n\n# contentType\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The content-type of the file.\n\na valid RFC2045 like text/csv, application/msword, ...\n\n\n# description\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> A short description of the file.\n\n\n# fileId\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The file id to update\n\nIf not provided, it will create a new file\n\n\n# from\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The file to copy\n\n\n# mimeType\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The MIME type of the file.\n\nDrive will attempt to automatically detect an appropriate value from uploaded content if no value is provided. The value cannot be changed unless a new revision is uploaded. If a file is created with a Google Doc MIME type, the uploaded content will be imported if possible. The supported import formats are published here.\n\n\n# name\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The name of the file\n\nThis is not necessarily unique within a folder\n\n\n# parents\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The destination path\n\n\n# scopes\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: [https://www.googleapis.com/auth/drive]\n\n> The GCP scopes to used\n\n\n# serviceAccount\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The GCP service account key\n\n\n# teamDriveId\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> ID of the Team Drive the file resides in.\n\n\n# Outputs\n\n\n# file\n\n * Type: File\n\n> The file metadata uploaded\n\n\n# Definitions\n\n\n# File\n\n# createdTime\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# id\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# mimeType\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# name\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# parents\n\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n\n# size\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n# trashed\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n# version\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌',normalizedContent:'upload\n\ntype: "io.kestra.plugin.googleworkspace.drive.upload"\n\n\n> upload a file in a drive folder.\n\n\n# examples\n\n> upload a csv and convert it to sheet format\n\nid: "upload"\ntype: "io.kestra.plugin.googleworkspace.drive.upload"\nfrom: "{{ inputs.file }}"\nparents:\n - "1huxzplt1b0111mukmgy8wav-m9myc1e_"\nname: "my awesome csv"\ncontenttype: "text/csv"\nmimetype: "application/vnd.google-apps.spreadsheet"\n\n\n\n# properties\n\n\n# contenttype\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the content-type of the file.\n\na valid rfc2045 like text/csv, application/msword, ...\n\n\n# description\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> a short description of the file.\n\n\n# fileid\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the file id to update\n\nif not provided, it will create a new file\n\n\n# from\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the file to copy\n\n\n# mimetype\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the mime type of the file.\n\ndrive will attempt to automatically detect an appropriate value from uploaded content if no value is provided. the value cannot be changed unless a new revision is uploaded. if a file is created with a google doc mime type, the uploaded content will be imported if possible. the supported import formats are published here.\n\n\n# name\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the name of the file\n\nthis is not necessarily unique within a folder\n\n\n# parents\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> the destination path\n\n\n# scopes\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n * default: [https://www.googleapis.com/auth/drive]\n\n> the gcp scopes to used\n\n\n# serviceaccount\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the gcp service account key\n\n\n# teamdriveid\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> id of the team drive the file resides in.\n\n\n# outputs\n\n\n# file\n\n * type: file\n\n> the file metadata uploaded\n\n\n# definitions\n\n\n# file\n\n# createdtime\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# id\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# mimetype\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# name\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# parents\n\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n\n# size\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n# trashed\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n# version\n\n * type: integer\n * dynamic: ❓\n * required: ❌',charsets:{}},{title:"Read",frontmatter:{title:"Read",editLink:!1,description:"Read all sheets from a google Sheets",icon:"",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Read"},{property:"og:description",content:"Read all sheets from a google Sheets | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-googleworkspace/tasks/sheets/io.kestra.plugin.googleworkspace.sheets.Read.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Read"},{name:"twitter:description",content:"Read all sheets from a google Sheets | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-googleworkspace/tasks/sheets/io.kestra.plugin.googleworkspace.sheets.Read.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-googleworkspace/tasks/sheets/io.kestra.plugin.googleworkspace.sheets.Read.html",relativePath:"plugins/plugin-googleworkspace/tasks/sheets/io.kestra.plugin.googleworkspace.sheets.Read.md",key:"v-54c3f0d9",path:"/plugins/plugin-googleworkspace/tasks/sheets/io.kestra.plugin.googleworkspace.sheets.Read.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:104},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:286},{level:3,title:"dateTimeRender",slug:"datetimerender",normalizedTitle:"datetimerender",charIndex:301},{level:3,title:"fetch",slug:"fetch",normalizedTitle:"fetch",charIndex:576},{level:3,title:"header",slug:"header",normalizedTitle:"header",charIndex:703},{level:3,title:"scopes",slug:"scopes",normalizedTitle:"scopes",charIndex:830},{level:3,title:"selectedSheetsTitle",slug:"selectedsheetstitle",normalizedTitle:"selectedsheetstitle",charIndex:932},{level:3,title:"serviceAccount",slug:"serviceaccount",normalizedTitle:"serviceaccount",charIndex:1104},{level:3,title:"spreadsheetId",slug:"spreadsheetid",normalizedTitle:"spreadsheetid",charIndex:178},{level:3,title:"store",slug:"store",normalizedTitle:"store",charIndex:240},{level:3,title:"valueRender",slug:"valuerender",normalizedTitle:"valuerender",charIndex:252},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1709},{level:3,title:"rows",slug:"rows",normalizedTitle:"rows",charIndex:1721},{level:3,title:"size",slug:"size",normalizedTitle:"size",charIndex:1887},{level:3,title:"uris",slug:"uris",normalizedTitle:"uris",charIndex:1958},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:2113}],headersStr:"Examples Properties dateTimeRender fetch header scopes selectedSheetsTitle serviceAccount spreadsheetId store valueRender Outputs rows size uris Definitions",content:'Read\n\ntype: "io.kestra.plugin.googleworkspace.sheets.Read"\n\n\n> Read all sheets from a google Sheets\n\n\n# Examples\n\nid: "read"\ntype: "io.kestra.plugin.googleworkspace.sheets.Read"\nspreadsheetId: "1Dkd3W0OQo-wxz1rrORLP7YGSj6EBLEg74fiTdbJUIQE"\nstore: true\nvalueRender: FORMATTED_VALUE\n\n\n\n# Properties\n\n\n# dateTimeRender\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ✔️\n\n * Possible Values:\n   \n   * SERIAL_NUMBER\n   * FORMATTED_STRING\n\n> How dates, times, and durations should be represented in the output.\n\nhis is ignored if valueRender is FORMATTED_VALUE.\nMore details here\n\n\n# fetch\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n\n> Whether to Fetch the data from the query result to the task output\n\n\n# header\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n> Specifies if the first line should be the header (default: false)\n\n\n# scopes\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The GCP scopes to used\n\n\n# selectedSheetsTitle\n\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n\n> The sheet title to be included\n\nIf not provided all the sheets will be included.\n\n\n# serviceAccount\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The GCP service account key\n\n\n# spreadsheetId\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The spreadsheet unique id\n\n\n# store\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n * Default: true\n\n> Whether to store the data from the query result into an ion serialized data file\n\n\n# valueRender\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ✔️\n\n * Default: UNFORMATTED_VALUE\n\n * Possible Values:\n   \n   * FORMATTED_VALUE\n   * UNFORMATTED_VALUE\n   * FORMULA\n\n> Determines how values should be rendered in the output.\n\nMore details here\n\n\n# Outputs\n\n\n# rows\n\n * Type: object\n * SubType: array\n\n> List containing the fetched data\n\nOnly populated if \'fetch\' parameter is set to true.\nThe key is the name of the sheet\n\n\n# size\n\n * Type: integer\n * Default: 0\n\n> The size of the rows fetch\n\n\n# uris\n\n * Type: object\n * SubType: string\n\n> The uri of store result\n\nThe keyOnly populated if \'store\' is set to true.\nThe key is the name of the sheet\n\n\n# Definitions',normalizedContent:'read\n\ntype: "io.kestra.plugin.googleworkspace.sheets.read"\n\n\n> read all sheets from a google sheets\n\n\n# examples\n\nid: "read"\ntype: "io.kestra.plugin.googleworkspace.sheets.read"\nspreadsheetid: "1dkd3w0oqo-wxz1rrorlp7ygsj6ebleg74fitdbjuiqe"\nstore: true\nvaluerender: formatted_value\n\n\n\n# properties\n\n\n# datetimerender\n\n * type: string\n\n * dynamic: ❌\n\n * required: ✔️\n\n * possible values:\n   \n   * serial_number\n   * formatted_string\n\n> how dates, times, and durations should be represented in the output.\n\nhis is ignored if valuerender is formatted_value.\nmore details here\n\n\n# fetch\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n\n> whether to fetch the data from the query result to the task output\n\n\n# header\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n> specifies if the first line should be the header (default: false)\n\n\n# scopes\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> the gcp scopes to used\n\n\n# selectedsheetstitle\n\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n\n> the sheet title to be included\n\nif not provided all the sheets will be included.\n\n\n# serviceaccount\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the gcp service account key\n\n\n# spreadsheetid\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the spreadsheet unique id\n\n\n# store\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n * default: true\n\n> whether to store the data from the query result into an ion serialized data file\n\n\n# valuerender\n\n * type: string\n\n * dynamic: ❌\n\n * required: ✔️\n\n * default: unformatted_value\n\n * possible values:\n   \n   * formatted_value\n   * unformatted_value\n   * formula\n\n> determines how values should be rendered in the output.\n\nmore details here\n\n\n# outputs\n\n\n# rows\n\n * type: object\n * subtype: array\n\n> list containing the fetched data\n\nonly populated if \'fetch\' parameter is set to true.\nthe key is the name of the sheet\n\n\n# size\n\n * type: integer\n * default: 0\n\n> the size of the rows fetch\n\n\n# uris\n\n * type: object\n * subtype: string\n\n> the uri of store result\n\nthe keyonly populated if \'store\' is set to true.\nthe key is the name of the sheet\n\n\n# definitions',charsets:{}},{title:"ReadRange",frontmatter:{title:"ReadRange",editLink:!1,description:"Read a range from a google Sheets",icon:"",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"ReadRange"},{property:"og:description",content:"Read a range from a google Sheets | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-googleworkspace/tasks/sheets/io.kestra.plugin.googleworkspace.sheets.ReadRange.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"ReadRange"},{name:"twitter:description",content:"Read a range from a google Sheets | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-googleworkspace/tasks/sheets/io.kestra.plugin.googleworkspace.sheets.ReadRange.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-googleworkspace/tasks/sheets/io.kestra.plugin.googleworkspace.sheets.ReadRange.html",relativePath:"plugins/plugin-googleworkspace/tasks/sheets/io.kestra.plugin.googleworkspace.sheets.ReadRange.md",key:"v-06f7403a",path:"/plugins/plugin-googleworkspace/tasks/sheets/io.kestra.plugin.googleworkspace.sheets.ReadRange.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:111},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:329},{level:3,title:"dateTimeRender",slug:"datetimerender",normalizedTitle:"datetimerender",charIndex:344},{level:3,title:"fetch",slug:"fetch",normalizedTitle:"fetch",charIndex:649},{level:3,title:"header",slug:"header",normalizedTitle:"header",charIndex:794},{level:3,title:"range",slug:"range",normalizedTitle:"range",charIndex:80},{level:3,title:"scopes",slug:"scopes",normalizedTitle:"scopes",charIndex:1017},{level:3,title:"serviceAccount",slug:"serviceaccount",normalizedTitle:"serviceaccount",charIndex:1178},{level:3,title:"spreadsheetId",slug:"spreadsheetid",normalizedTitle:"spreadsheetid",charIndex:196},{level:3,title:"store",slug:"store",normalizedTitle:"store",charIndex:283},{level:3,title:"valueRender",slug:"valuerender",normalizedTitle:"valuerender",charIndex:295},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1783},{level:3,title:"rows",slug:"rows",normalizedTitle:"rows",charIndex:1795},{level:3,title:"size",slug:"size",normalizedTitle:"size",charIndex:1927},{level:3,title:"uri",slug:"uri",normalizedTitle:"uri",charIndex:1998},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:2093}],headersStr:"Examples Properties dateTimeRender fetch header range scopes serviceAccount spreadsheetId store valueRender Outputs rows size uri Definitions",content:'ReadRange\n\ntype: "io.kestra.plugin.googleworkspace.sheets.ReadRange"\n\n\n> Read a range from a google Sheets\n\n\n# Examples\n\nid: "read_range"\ntype: "io.kestra.plugin.googleworkspace.sheets.ReadRange"\nspreadsheetId: "1Dkd3W0OQo-wxz1rrORLP7YGSj6EBLEg74fiTdbJUIQE"\nrange: "Second One!A1:I"\nstore: true\nvalueRender: FORMATTED_VALUE\n\n\n\n# Properties\n\n\n# dateTimeRender\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ✔️\n\n * Default: FORMATTED_STRING\n\n * Possible Values:\n   \n   * SERIAL_NUMBER\n   * FORMATTED_STRING\n\n> How dates, times, and durations should be represented in the output.\n\nhis is ignored if valueRender is FORMATTED_VALUE.\nMore details here\n\n\n# fetch\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n * Default: false\n\n> Whether to Fetch the data from the query result to the task output\n\n\n# header\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: true\n\n> Specifies if the first line should be the header (default: false)\n\n\n# range\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The range to select\n\n\n# scopes\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: [https://www.googleapis.com/auth/spreadsheets]\n\n> The GCP scopes to used\n\n\n# serviceAccount\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The GCP service account key\n\n\n# spreadsheetId\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The spreadsheet unique id\n\n\n# store\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n * Default: true\n\n> Whether to store the data from the query result into an ion serialized data file\n\n\n# valueRender\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ✔️\n\n * Default: UNFORMATTED_VALUE\n\n * Possible Values:\n   \n   * FORMATTED_VALUE\n   * UNFORMATTED_VALUE\n   * FORMULA\n\n> Determines how values should be rendered in the output.\n\nMore details here\n\n\n# Outputs\n\n\n# rows\n\n * Type: array\n * SubType: array\n\n> List containing the fetched data\n\nOnly populated if \'fetch\' parameter is set to true.\n\n\n# size\n\n * Type: integer\n * Default: 0\n\n> The size of the rows fetch\n\n\n# uri\n\n * Type: string\n\n> The uri of store result\n\nOnly populated if \'store\' is set to true.\n\n\n# Definitions',normalizedContent:'readrange\n\ntype: "io.kestra.plugin.googleworkspace.sheets.readrange"\n\n\n> read a range from a google sheets\n\n\n# examples\n\nid: "read_range"\ntype: "io.kestra.plugin.googleworkspace.sheets.readrange"\nspreadsheetid: "1dkd3w0oqo-wxz1rrorlp7ygsj6ebleg74fitdbjuiqe"\nrange: "second one!a1:i"\nstore: true\nvaluerender: formatted_value\n\n\n\n# properties\n\n\n# datetimerender\n\n * type: string\n\n * dynamic: ❌\n\n * required: ✔️\n\n * default: formatted_string\n\n * possible values:\n   \n   * serial_number\n   * formatted_string\n\n> how dates, times, and durations should be represented in the output.\n\nhis is ignored if valuerender is formatted_value.\nmore details here\n\n\n# fetch\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n * default: false\n\n> whether to fetch the data from the query result to the task output\n\n\n# header\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: true\n\n> specifies if the first line should be the header (default: false)\n\n\n# range\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the range to select\n\n\n# scopes\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n * default: [https://www.googleapis.com/auth/spreadsheets]\n\n> the gcp scopes to used\n\n\n# serviceaccount\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the gcp service account key\n\n\n# spreadsheetid\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the spreadsheet unique id\n\n\n# store\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n * default: true\n\n> whether to store the data from the query result into an ion serialized data file\n\n\n# valuerender\n\n * type: string\n\n * dynamic: ❌\n\n * required: ✔️\n\n * default: unformatted_value\n\n * possible values:\n   \n   * formatted_value\n   * unformatted_value\n   * formula\n\n> determines how values should be rendered in the output.\n\nmore details here\n\n\n# outputs\n\n\n# rows\n\n * type: array\n * subtype: array\n\n> list containing the fetched data\n\nonly populated if \'fetch\' parameter is set to true.\n\n\n# size\n\n * type: integer\n * default: 0\n\n> the size of the rows fetch\n\n\n# uri\n\n * type: string\n\n> the uri of store result\n\nonly populated if \'store\' is set to true.\n\n\n# definitions',charsets:{}},{title:"Plugin jdbc clickhouse",frontmatter:{title:"Plugin jdbc clickhouse",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Plugin jdbc clickhouse"},{property:"og:description",content:"Plugin jdbc clickhouse | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-jdbc-clickhouse/"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Plugin jdbc clickhouse"},{name:"twitter:description",content:"Plugin jdbc clickhouse | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-jdbc-clickhouse/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-jdbc-clickhouse/",relativePath:"plugins/plugin-jdbc-clickhouse/README.md",key:"v-0d5f7288",path:"/plugins/plugin-jdbc-clickhouse/",headers:[{level:2,title:"Common",slug:"common",normalizedTitle:"common",charIndex:29},{level:3,title:"Tasks",slug:"tasks",normalizedTitle:"tasks",charIndex:40}],headersStr:"Common Tasks",content:"# Plugin jdbc clickhouse\n\n\n# Common\n\n\n# Tasks\n\n * Query",normalizedContent:"# plugin jdbc clickhouse\n\n\n# common\n\n\n# tasks\n\n * query",charsets:{}},{title:"Query",frontmatter:{title:"Query",editLink:!1,description:"Clickhouse Query Task.",icon:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSI1NCIgaGVpZ2h0PSI0OCIgdmlld0JveD0iMCAwIDkgOCI+PHN0eWxlPi5ve2ZpbGw6I2ZjMH0ucntmaWxsOnJlZH08L3N0eWxlPjxwYXRoIGQ9Ik0wLDcgaDEgdjEgaC0xIHoiIGNsYXNzPSJyIi8+PHBhdGggZD0iTTAsMCBoMSB2NyBoLTEgeiIgY2xhc3M9Im8iLz48cGF0aCBkPSJNMiwwIGgxIHY4IGgtMSB6IiBjbGFzcz0ibyIvPjxwYXRoIGQ9Ik00LDAgaDEgdjggaC0xIHoiIGNsYXNzPSJvIi8+PHBhdGggZD0iTTYsMCBoMSB2OCBoLTEgeiIgY2xhc3M9Im8iLz48cGF0aCBkPSJNOCwzLjI1IGgxIHYxLjUgaC0xIHoiIGNsYXNzPSJvIi8+PC9zdmc+",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Query"},{property:"og:description",content:"Clickhouse Query Task. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-jdbc-clickhouse/tasks/io.kestra.plugin.jdbc.clickhouse.Query.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Query"},{name:"twitter:description",content:"Clickhouse Query Task. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-jdbc-clickhouse/tasks/io.kestra.plugin.jdbc.clickhouse.Query.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-jdbc-clickhouse/tasks/io.kestra.plugin.jdbc.clickhouse.Query.html",relativePath:"plugins/plugin-jdbc-clickhouse/tasks/io.kestra.plugin.jdbc.clickhouse.Query.md",key:"v-14e1fb83",path:"/plugins/plugin-jdbc-clickhouse/tasks/io.kestra.plugin.jdbc.clickhouse.Query.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:380},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:646},{level:3,title:"autoCommit",slug:"autocommit",normalizedTitle:"autocommit",charIndex:661},{level:3,title:"fetch",slug:"fetch",normalizedTitle:"fetch",charIndex:426},{level:3,title:"fetchOne",slug:"fetchone",normalizedTitle:"fetchone",charIndex:626},{level:3,title:"fetchSize",slug:"fetchsize",normalizedTitle:"fetchsize",charIndex:1619},{level:3,title:"password",slug:"password",normalizedTitle:"password",charIndex:570},{level:3,title:"sql",slug:"sql",normalizedTitle:"sql",charIndex:590},{level:3,title:"store",slug:"store",normalizedTitle:"store",charIndex:1154},{level:3,title:"timeZoneId",slug:"timezoneid",normalizedTitle:"timezoneid",charIndex:2504},{level:3,title:"url",slug:"url",normalizedTitle:"url",charIndex:509},{level:3,title:"username",slug:"username",normalizedTitle:"username",charIndex:549},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:2844},{level:3,title:"row",slug:"row",normalizedTitle:"row",charIndex:434},{level:3,title:"rows",slug:"rows",normalizedTitle:"rows",charIndex:1689},{level:3,title:"size",slug:"size",normalizedTitle:"size",charIndex:1879},{level:3,title:"uri",slug:"uri",normalizedTitle:"uri",charIndex:3251},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:3404}],headersStr:"Examples Properties autoCommit fetch fetchOne fetchSize password sql store timeZoneId url username Outputs row rows size uri Definitions",content:"Query\n\ntype: \"io.kestra.plugin.jdbc.clickhouse.Query\"\n\n\n> Clickhouse Query Task.\n\nCurrently supported types are the following ones :\n\n * Int8,\n * Float32,\n * Float64,\n * Decimal(n, m),\n * String,\n * FixedString(n),\n * UUID,\n * Date,\n * DateTime(n),\n * DateTime64(n, m),\n * Enum,\n * LowCardinality(n),\n * Array(n),\n * Nested(),\n * Tuple(n, m),\n * Nullable(n),\n * Ipv4,\n * Ipv6\n\n\n# Examples\n\n> Request a Clickhouse Database and fetch a row as outputs\n\nid: \"query\"\ntype: \"io.kestra.plugin.jdbc.clickhouse.Query\"\nurl: jdbc:clickhouse://127.0.0.1:56982/\nusername: clickhouse\npassword: ch_passwd\nsql: select * from clickhouse_types\nfetchOne: true\n\n\n\n# Properties\n\n\n# autoCommit\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n\n> If autocommit is enabled\n\nSets this connection's auto-commit mode to the given state. If a connection is in auto-commit mode, then all its SQL statements will be executed and committed as individual transactions. Otherwise, its SQL statements are grouped into transactions that are terminated by a call to either the method commitor the method rollback. By default, new connections are in auto-commit mode except if you are using a store properties that will disabled autocommit whenever this properties values.\n\n\n# fetch\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n> Whether to fetch the data from the query result to the task output This parameter is evaluated after 'fetchOne' and 'store'.\n\n\n# fetchOne\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n> Whether to fetch only one data row from the query result to the task output. This parameter is evaluated before 'store' and 'fetch'.\n\n\n# fetchSize\n\n * Type: integer\n * Dynamic: ❌\n * Required: ❌\n\n> Number of rows that should be fetched\n\nGives the JDBC driver a hint as to the number of rows that should be fetched from the database when more rows are needed for this ResultSet object. If the fetch size specified is zero, the JDBC driver ignores the value and is free to make its own best guess as to what the fetch size should be. Ignored if autoCommit is false.\n\n\n# password\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The database user's password\n\n\n# sql\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The sql query to run\n\n\n# store\n\n * Type: boolean\n * Dynamic: ✔️\n * Required: ❌\n\n> Whether to fetch data row from the query result to a file in internal storage. File will be saved as Amazon Ion (text format).\n> See Amazon Ion documentation This parameter is evaluated after 'fetchOne' but before 'fetch'.\n\n\n# timeZoneId\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The time zone id to use for date/time manipulation. Default value is the worker default zone id.\n\n\n# url\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The jdbc url to connect to the database\n\n\n# username\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The database user\n\n\n# Outputs\n\n\n# row\n\n * Type: object\n\n> Map containing the first row of fetched data\n\nOnly populated if 'fetchOne' parameter is set to true.\n\n\n# rows\n\n * Type: array\n * SubType: object\n\n> Lit of map containing rows of fetched data\n\nOnly populated if 'fetch' parameter is set to true.\n\n\n# size\n\n * Type: integer\n\n> The size of the fetched rows\n\nOnly populated if 'store' or 'fetch' parameter is set to true.\n\n\n# uri\n\n * Type: string\n\n> The url of the result file on kestra storage (.ion file / Amazon Ion text format)\n\nOnly populated if 'store' is set to true.\n\n\n# Definitions",normalizedContent:"query\n\ntype: \"io.kestra.plugin.jdbc.clickhouse.query\"\n\n\n> clickhouse query task.\n\ncurrently supported types are the following ones :\n\n * int8,\n * float32,\n * float64,\n * decimal(n, m),\n * string,\n * fixedstring(n),\n * uuid,\n * date,\n * datetime(n),\n * datetime64(n, m),\n * enum,\n * lowcardinality(n),\n * array(n),\n * nested(),\n * tuple(n, m),\n * nullable(n),\n * ipv4,\n * ipv6\n\n\n# examples\n\n> request a clickhouse database and fetch a row as outputs\n\nid: \"query\"\ntype: \"io.kestra.plugin.jdbc.clickhouse.query\"\nurl: jdbc:clickhouse://127.0.0.1:56982/\nusername: clickhouse\npassword: ch_passwd\nsql: select * from clickhouse_types\nfetchone: true\n\n\n\n# properties\n\n\n# autocommit\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n\n> if autocommit is enabled\n\nsets this connection's auto-commit mode to the given state. if a connection is in auto-commit mode, then all its sql statements will be executed and committed as individual transactions. otherwise, its sql statements are grouped into transactions that are terminated by a call to either the method commitor the method rollback. by default, new connections are in auto-commit mode except if you are using a store properties that will disabled autocommit whenever this properties values.\n\n\n# fetch\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n> whether to fetch the data from the query result to the task output this parameter is evaluated after 'fetchone' and 'store'.\n\n\n# fetchone\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n> whether to fetch only one data row from the query result to the task output. this parameter is evaluated before 'store' and 'fetch'.\n\n\n# fetchsize\n\n * type: integer\n * dynamic: ❌\n * required: ❌\n\n> number of rows that should be fetched\n\ngives the jdbc driver a hint as to the number of rows that should be fetched from the database when more rows are needed for this resultset object. if the fetch size specified is zero, the jdbc driver ignores the value and is free to make its own best guess as to what the fetch size should be. ignored if autocommit is false.\n\n\n# password\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the database user's password\n\n\n# sql\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the sql query to run\n\n\n# store\n\n * type: boolean\n * dynamic: ✔️\n * required: ❌\n\n> whether to fetch data row from the query result to a file in internal storage. file will be saved as amazon ion (text format).\n> see amazon ion documentation this parameter is evaluated after 'fetchone' but before 'fetch'.\n\n\n# timezoneid\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the time zone id to use for date/time manipulation. default value is the worker default zone id.\n\n\n# url\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the jdbc url to connect to the database\n\n\n# username\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the database user\n\n\n# outputs\n\n\n# row\n\n * type: object\n\n> map containing the first row of fetched data\n\nonly populated if 'fetchone' parameter is set to true.\n\n\n# rows\n\n * type: array\n * subtype: object\n\n> lit of map containing rows of fetched data\n\nonly populated if 'fetch' parameter is set to true.\n\n\n# size\n\n * type: integer\n\n> the size of the fetched rows\n\nonly populated if 'store' or 'fetch' parameter is set to true.\n\n\n# uri\n\n * type: string\n\n> the url of the result file on kestra storage (.ion file / amazon ion text format)\n\nonly populated if 'store' is set to true.\n\n\n# definitions",charsets:{}},{title:"Plugin jdbc mysql",frontmatter:{title:"Plugin jdbc mysql",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Plugin jdbc mysql"},{property:"og:description",content:"Plugin jdbc mysql | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-jdbc-mysql/"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Plugin jdbc mysql"},{name:"twitter:description",content:"Plugin jdbc mysql | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-jdbc-mysql/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-jdbc-mysql/",relativePath:"plugins/plugin-jdbc-mysql/README.md",key:"v-54b8ba20",path:"/plugins/plugin-jdbc-mysql/",headers:[{level:2,title:"Common",slug:"common",normalizedTitle:"common",charIndex:24},{level:3,title:"Tasks",slug:"tasks",normalizedTitle:"tasks",charIndex:35}],headersStr:"Common Tasks",content:"# Plugin jdbc mysql\n\n\n# Common\n\n\n# Tasks\n\n * Query",normalizedContent:"# plugin jdbc mysql\n\n\n# common\n\n\n# tasks\n\n * query",charsets:{}},{title:"Query",frontmatter:{title:"Query",editLink:!1,description:"MySQL Query Task.",icon:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB2aWV3Qm94PSIwIDAgODEgODAiIGZpbGw9IiNmZmYiIGZpbGwtcnVsZT0iZXZlbm9kZCIgc3Ryb2tlPSIjMDAwIiBzdHJva2UtbGluZWNhcD0icm91bmQiIHN0cm9rZS1saW5lam9pbj0icm91bmQiPjx1c2UgeGxpbms6aHJlZj0iI0EiIHg9Ii41IiB5PSIuNSIvPjxzeW1ib2wgaWQ9IkEiIG92ZXJmbG93PSJ2aXNpYmxlIj48cGF0aCBkPSJNNzMuNjg5IDYwLjczN2MtNC4zNTMtLjEwOS03LjcyNi4zMjctMTAuNTU2IDEuNTI0LS44MTYuMzI2LTIuMTIyLjMyNy0yLjIzMSAxLjM2LjQzNi40MzYuNDkgMS4xNDMuODcxIDEuNzQxLjY1MyAxLjA4OCAxLjc5NSAyLjU1NyAyLjgyOSAzLjMxOSAxLjE0Mi44NyAyLjI4NSAxLjc0MSAzLjQ4MiAyLjUwMyAyLjEyMiAxLjMwNiA0LjUxNiAyLjA2OCA2LjU4NCAzLjM3MyAxLjE5Ny43NjEgMi4zOTQgMS43NDEgMy41OTEgMi41NTcuNTk5LjQzNS45NzkgMS4xNDIgMS43NDEgMS40MTV2LS4xNjNjLS4zODEtLjQ5LS40OS0xLjE5Ny0uODctMS43NDEtLjU0NC0uNTQ0LTEuMDg4LTEuMDM0LTEuNjMyLTEuNTc4LTEuNTc4LTIuMTIyLTMuNTM3LTMuOTcyLTUuNjU5LTUuNDk1LTEuNzQxLTEuMTk3LTUuNTUtMi44MjktNi4yNTctNC44NDNsLS4xMDktLjEwOWMxLjE5Ny0uMTA5IDIuNjEyLS41NDQgMy43NTQtLjg3MSAxLjg1LS40OSAzLjUzNy0uMzgxIDUuNDQxLS44Ny44Ny0uMjE4IDEuNzQxLS40OSAyLjYxMi0uNzYydi0uNDg5Yy0uOTc5LS45OC0xLjY4Ny0yLjI4NS0yLjcyLTMuMjEtMi43NzUtMi4zOTUtNS44MjItNC43MzQtOC45NzgtNi42OTItMS42ODctMS4wODgtMy44NjMtMS43OTYtNS42NTktMi43MjEtLjY1My0uMzI3LTEuNzQxLS40OS0yLjEyMi0xLjAzNC0uOTgtMS4xOTctMS41MjQtMi43NzUtMi4yMzEtNC4xOS0xLjU3Ny0yLjk5My0zLjEwMS02LjMxMS00LjQ2Mi05LjQ2Ny0uOTc5LTIuMTIyLTEuNTc4LTQuMjQ0LTIuNzc1LTYuMjAzLTUuNjA0LTkuMjUtMTEuNjk4LTE0Ljg1NC0yMS4wNTctMjAuMzUtMi4wMTMtMS4xNDItNC40MDctMS42MzItNi45NjQtMi4yMzFsLTQuMDgxLS4yMThjLS44Ny0uMzgxLTEuNzQxLTEuNDE1LTIuNTAzLTEuOTA0QzEwLjYyNyAxLjQzIDIuNjI5LTIuODEzLjM0MyAyLjc5MS0xLjEyNiA2LjMyNyAyLjUyIDkuODA5IDMuNzcxIDExLjYwNWMuOTI1IDEuMjUxIDIuMTIyIDIuNjY2IDIuNzc1IDQuMDgxLjM4MS45MjQuNDg5IDEuOTA0Ljg3IDIuODg0Ljg3MSAyLjM5NCAxLjY4NyA1LjA2IDIuODI5IDcuMjkxLjU5OSAxLjE0MiAxLjI1MSAyLjM0IDIuMDEzIDMuMzczLjQzNS41OTggMS4xOTcuODcxIDEuMzYgMS44NS0uNzYyIDEuMDg4LS44MTYgMi43MjEtMS4yNTIgNC4wODEtMS45NTkgNi4xNDgtMS4xOTcgMTMuNzY2IDEuNTc4IDE4LjI4Mi44NyAxLjM2IDIuOTM4IDQuMzUzIDUuNzEzIDMuMjEgMi40NDgtLjk3OSAxLjkwNC00LjA4MSAyLjYxMi02LjgwMS4xNjQtLjY1My4wNTUtMS4wODguMzgxLTEuNTIzdi4xMDlsMi4yMzEgNC41MTZjMS42ODcgMi42NjYgNC42MjUgNS40NDEgNy4wNzMgNy4yOTEgMS4zMDYuOTc5IDIuMzQgMi42NjYgMy45NzIgMy4yNjV2LS4xNjRoLS4xMDljLS4zMjctLjQ5LS44MTYtLjcwNy0xLjI1MS0xLjA4OC0uOTc5LS45NzktMi4wNjgtMi4xNzYtMi44MjktMy4yNjUtMi4yODUtMy4wNDctNC4yOTktNi40Mi02LjA5NC05LjkwMy0uODctMS42ODctMS42MzItMy41MzctMi4zNC01LjIyMy0uMzI3LS42NTMtLjMyNy0xLjYzMi0uODcxLTEuOTU5LS44MTYgMS4xOTctMi4wMTMgMi4yMzEtMi42MTIgMy43LTEuMDMzIDIuMzQtMS4xNDIgNS4yMjMtMS41MjMgOC4yMTYtLjIxNy4wNTUtLjEwOSAwLS4yMTguMTA5LTEuNzQxLS40MzYtMi4zNC0yLjIzMS0yLjk5My0zLjc1NC0xLjYzMi0zLjg2My0xLjkwNC0xMC4wNjYtLjQ4OS0xNC41MjcuMzgxLTEuMTQzIDIuMDEzLTQuNzM0IDEuMzYtNS44MjItLjMyNi0xLjAzNC0xLjQxNS0xLjYzMi0yLjAxMy0yLjQ0OC0uNzA3LTEuMDM0LTEuNDY5LTIuMzQtMS45NTktMy40ODItMS4zMDYtMy4wNDctMS45NTktNi40Mi0zLjM3My05LjQ2OC0uNjUzLTEuNDE1LTEuNzk1LTIuODg0LTIuNzIxLTQuMTg5LTEuMDMxLTEuNDcxLTIuMTc0LTIuNTA1LTIuOTktNC4yNDYtLjI3Mi0uNTk4LS42NTMtMS41NzgtLjIxOC0yLjIzMS4xMDktLjQzNS4zMjYtLjU5OC43NjItLjcwNy43MDctLjU5OSAyLjcyMS4xNjMgMy40MjguNDg5IDIuMDEzLjgxNiAzLjcgMS41NzggNS4zODcgMi43MjEuNzYyLjU0NCAxLjU3OCAxLjU3OCAyLjU1NyAxLjg1aDEuMTQzYzEuNzQxLjM4MSAzLjcuMTA5IDUuMzMyLjU5OCAyLjg4NC45MjUgNS40OTUgMi4yODUgNy44MzUgMy43NTQgNy4xMjggNC41MTYgMTMuMDA0IDEwLjkzNyAxNi45NzYgMTguNjA4LjY1MyAxLjI1MS45MjUgMi4zOTQgMS41MjMgMy43IDEuMTQzIDIuNjY2IDIuNTU3IDUuMzg3IDMuNyA3Ljk5OCAxLjE0MiAyLjU1NyAyLjIzMSA1LjE2OSAzLjg2MyA3LjI5MS44MTYgMS4xNDIgNC4wODEgMS43NDEgNS41NSAyLjM0IDEuMDg4LjQ4OSAyLjc3NS45MjUgMy43NTQgMS41MjMgMS44NSAxLjE0MiAzLjcgMi40NDggNS40NDEgMy43Ljg3MS42NTMgMy41OTEgMi4wMTMgMy43NTQgMy4xMDFoMHpNMTguMTkgMTMuNDU1YTguNjEgOC42MSAwIDAgMC0yLjIzMS4yNzJ2LjEwOWguMTA5Yy40MzYuODcgMS4xOTcgMS40NjkgMS43NDEgMi4yMzFsMS4yNTIgMi42MTIuMTA5LS4xMDljLjc2Mi0uNTQ0IDEuMTQzLTEuNDE1IDEuMTQzLTIuNzIxLS4zMjctLjM4MS0uMzgxLS43NjItLjY1My0xLjE0My0uMzI2LS41NDQtMS4wMzQtLjgxNi0xLjQ2OS0xLjI1MmgweiIgc3Ryb2tlPSJub25lIiBmaWxsPSIjMDA1NDZiIiBmaWxsLXJ1bGU9Im5vbnplcm8iLz48L3N5bWJvbD48L3N2Zz4=",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Query"},{property:"og:description",content:"MySQL Query Task. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-jdbc-mysql/tasks/io.kestra.plugin.jdbc.mysql.Query.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Query"},{name:"twitter:description",content:"MySQL Query Task. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-jdbc-mysql/tasks/io.kestra.plugin.jdbc.mysql.Query.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-jdbc-mysql/tasks/io.kestra.plugin.jdbc.mysql.Query.html",relativePath:"plugins/plugin-jdbc-mysql/tasks/io.kestra.plugin.jdbc.mysql.Query.md",key:"v-67f4797a",path:"/plugins/plugin-jdbc-mysql/tasks/io.kestra.plugin.jdbc.mysql.Query.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:334},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:982},{level:3,title:"autoCommit",slug:"autocommit",normalizedTitle:"autocommit",charIndex:997},{level:3,title:"fetch",slug:"fetch",normalizedTitle:"fetch",charIndex:375},{level:3,title:"fetchOne",slug:"fetchone",normalizedTitle:"fetchone",charIndex:563},{level:3,title:"fetchSize",slug:"fetchsize",normalizedTitle:"fetchsize",charIndex:1955},{level:3,title:"inputFile",slug:"inputfile",normalizedTitle:"inputfile",charIndex:777},{level:3,title:"password",slug:"password",normalizedTitle:"password",charIndex:509},{level:3,title:"sql",slug:"sql",normalizedTitle:"sql",charIndex:38},{level:3,title:"store",slug:"store",normalizedTitle:"store",charIndex:1490},{level:3,title:"timeZoneId",slug:"timezoneid",normalizedTitle:"timezoneid",charIndex:3019},{level:3,title:"url",slug:"url",normalizedTitle:"url",charIndex:453},{level:3,title:"username",slug:"username",normalizedTitle:"username",charIndex:488},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:3359},{level:3,title:"row",slug:"row",normalizedTitle:"row",charIndex:383},{level:3,title:"rows",slug:"rows",normalizedTitle:"rows",charIndex:2025},{level:3,title:"size",slug:"size",normalizedTitle:"size",charIndex:2215},{level:3,title:"uri",slug:"uri",normalizedTitle:"uri",charIndex:3766},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:3919}],headersStr:"Examples Properties autoCommit fetch fetchOne fetchSize inputFile password sql store timeZoneId url username Outputs row rows size uri Definitions",content:"Query\n\ntype: \"io.kestra.plugin.jdbc.mysql.Query\"\n\n\n> MySQL Query Task.\n\nCurrently supported types are the following ones :\n\n * serial,\n * tinyint,\n * char(n),\n * varchar(n),\n * text,\n * bigint,\n * bit(n),\n * float,\n * double,\n * numeric,\n * decimal,\n * date,\n * datetime(n),\n * time,\n * timestamp(n),\n * year(n),\n * json,\n * blob\n\n\n# Examples\n\n> Request a MySQL Database and fetch a row as outputs\n\nid: \"query\"\ntype: \"io.kestra.plugin.jdbc.mysql.Query\"\nurl: jdbc:mysql://127.0.0.1:56982/\nusername: mysql_user\npassword: mysql_passwd\nsql: select * from mysql_types\nfetchOne: true\n\n\n> Load a csv file into a MySQL table\n\nid: \"query\"\ntype: \"io.kestra.plugin.jdbc.mysql.Query\"\nurl: jdbc:mysql://127.0.0.1:56982/?allowLoadLocalInfile=true\nusername: mysql_user\npassword: mysql_passwd\ninputFile: \"{{ outputs.taskId.file }}\"\nsql: |\n  LOAD DATA LOCAL INFILE '{{ inputFile }}'\n  INTO TABLE discounts  FIELDS TERMINATED BY ','\n  ENCLOSED BY '\"'\n  LINES TERMINATED BY '\\n'\n  IGNORE 1 ROWS;\n\n\n\n# Properties\n\n\n# autoCommit\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n\n> If autocommit is enabled\n\nSets this connection's auto-commit mode to the given state. If a connection is in auto-commit mode, then all its SQL statements will be executed and committed as individual transactions. Otherwise, its SQL statements are grouped into transactions that are terminated by a call to either the method commitor the method rollback. By default, new connections are in auto-commit mode except if you are using a store properties that will disabled autocommit whenever this properties values.\n\n\n# fetch\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n> Whether to fetch the data from the query result to the task output This parameter is evaluated after 'fetchOne' and 'store'.\n\n\n# fetchOne\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n> Whether to fetch only one data row from the query result to the task output. This parameter is evaluated before 'store' and 'fetch'.\n\n\n# fetchSize\n\n * Type: integer\n * Dynamic: ❌\n * Required: ❌\n\n> Number of rows that should be fetched\n\nGives the JDBC driver a hint as to the number of rows that should be fetched from the database when more rows are needed for this ResultSet object. If the fetch size specified is zero, the JDBC driver ignores the value and is free to make its own best guess as to what the fetch size should be. Ignored if autoCommit is false.\n\n\n# inputFile\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Add input file to be loaded with LOAD DATA LOCAL.\n\nThe file must be from Kestra internal storage\n\n\n# password\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The database user's password\n\n\n# sql\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The sql query to run\n\n\n# store\n\n * Type: boolean\n * Dynamic: ✔️\n * Required: ❌\n * Default: false\n\n> Whether to fetch data row from the query result to a file in internal storage. File will be saved as Amazon Ion (text format).\n> See Amazon Ion documentation This parameter is evaluated after 'fetchOne' but before 'fetch'.\n\n\n# timeZoneId\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The time zone id to use for date/time manipulation. Default value is the worker default zone id.\n\n\n# url\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The jdbc url to connect to the database\n\n\n# username\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The database user\n\n\n# Outputs\n\n\n# row\n\n * Type: object\n\n> Map containing the first row of fetched data\n\nOnly populated if 'fetchOne' parameter is set to true.\n\n\n# rows\n\n * Type: array\n * SubType: object\n\n> Lit of map containing rows of fetched data\n\nOnly populated if 'fetch' parameter is set to true.\n\n\n# size\n\n * Type: integer\n\n> The size of the fetched rows\n\nOnly populated if 'store' or 'fetch' parameter is set to true.\n\n\n# uri\n\n * Type: string\n\n> The url of the result file on kestra storage (.ion file / Amazon Ion text format)\n\nOnly populated if 'store' is set to true.\n\n\n# Definitions",normalizedContent:"query\n\ntype: \"io.kestra.plugin.jdbc.mysql.query\"\n\n\n> mysql query task.\n\ncurrently supported types are the following ones :\n\n * serial,\n * tinyint,\n * char(n),\n * varchar(n),\n * text,\n * bigint,\n * bit(n),\n * float,\n * double,\n * numeric,\n * decimal,\n * date,\n * datetime(n),\n * time,\n * timestamp(n),\n * year(n),\n * json,\n * blob\n\n\n# examples\n\n> request a mysql database and fetch a row as outputs\n\nid: \"query\"\ntype: \"io.kestra.plugin.jdbc.mysql.query\"\nurl: jdbc:mysql://127.0.0.1:56982/\nusername: mysql_user\npassword: mysql_passwd\nsql: select * from mysql_types\nfetchone: true\n\n\n> load a csv file into a mysql table\n\nid: \"query\"\ntype: \"io.kestra.plugin.jdbc.mysql.query\"\nurl: jdbc:mysql://127.0.0.1:56982/?allowloadlocalinfile=true\nusername: mysql_user\npassword: mysql_passwd\ninputfile: \"{{ outputs.taskid.file }}\"\nsql: |\n  load data local infile '{{ inputfile }}'\n  into table discounts  fields terminated by ','\n  enclosed by '\"'\n  lines terminated by '\\n'\n  ignore 1 rows;\n\n\n\n# properties\n\n\n# autocommit\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n\n> if autocommit is enabled\n\nsets this connection's auto-commit mode to the given state. if a connection is in auto-commit mode, then all its sql statements will be executed and committed as individual transactions. otherwise, its sql statements are grouped into transactions that are terminated by a call to either the method commitor the method rollback. by default, new connections are in auto-commit mode except if you are using a store properties that will disabled autocommit whenever this properties values.\n\n\n# fetch\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n> whether to fetch the data from the query result to the task output this parameter is evaluated after 'fetchone' and 'store'.\n\n\n# fetchone\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n> whether to fetch only one data row from the query result to the task output. this parameter is evaluated before 'store' and 'fetch'.\n\n\n# fetchsize\n\n * type: integer\n * dynamic: ❌\n * required: ❌\n\n> number of rows that should be fetched\n\ngives the jdbc driver a hint as to the number of rows that should be fetched from the database when more rows are needed for this resultset object. if the fetch size specified is zero, the jdbc driver ignores the value and is free to make its own best guess as to what the fetch size should be. ignored if autocommit is false.\n\n\n# inputfile\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> add input file to be loaded with load data local.\n\nthe file must be from kestra internal storage\n\n\n# password\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the database user's password\n\n\n# sql\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the sql query to run\n\n\n# store\n\n * type: boolean\n * dynamic: ✔️\n * required: ❌\n * default: false\n\n> whether to fetch data row from the query result to a file in internal storage. file will be saved as amazon ion (text format).\n> see amazon ion documentation this parameter is evaluated after 'fetchone' but before 'fetch'.\n\n\n# timezoneid\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the time zone id to use for date/time manipulation. default value is the worker default zone id.\n\n\n# url\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the jdbc url to connect to the database\n\n\n# username\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the database user\n\n\n# outputs\n\n\n# row\n\n * type: object\n\n> map containing the first row of fetched data\n\nonly populated if 'fetchone' parameter is set to true.\n\n\n# rows\n\n * type: array\n * subtype: object\n\n> lit of map containing rows of fetched data\n\nonly populated if 'fetch' parameter is set to true.\n\n\n# size\n\n * type: integer\n\n> the size of the fetched rows\n\nonly populated if 'store' or 'fetch' parameter is set to true.\n\n\n# uri\n\n * type: string\n\n> the url of the result file on kestra storage (.ion file / amazon ion text format)\n\nonly populated if 'store' is set to true.\n\n\n# definitions",charsets:{cjk:!0}},{title:"Plugin jdbc oracle",frontmatter:{title:"Plugin jdbc oracle",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Plugin jdbc oracle"},{property:"og:description",content:"Plugin jdbc oracle | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-jdbc-oracle/"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Plugin jdbc oracle"},{name:"twitter:description",content:"Plugin jdbc oracle | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-jdbc-oracle/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-jdbc-oracle/",relativePath:"plugins/plugin-jdbc-oracle/README.md",key:"v-10ba6270",path:"/plugins/plugin-jdbc-oracle/",headers:[{level:2,title:"Common",slug:"common",normalizedTitle:"common",charIndex:25},{level:3,title:"Tasks",slug:"tasks",normalizedTitle:"tasks",charIndex:36}],headersStr:"Common Tasks",content:"# Plugin jdbc oracle\n\n\n# Common\n\n\n# Tasks\n\n * Query",normalizedContent:"# plugin jdbc oracle\n\n\n# common\n\n\n# tasks\n\n * query",charsets:{}},{title:"Query",frontmatter:{title:"Query",editLink:!1,description:"Oracle Query Task",icon:"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPCFET0NUWVBFIHN2ZyBQVUJMSUMgIi0vL1czQy8vRFREIFNWRyAxLjEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvR3JhcGhpY3MvU1ZHLzEuMS9EVEQvc3ZnMTEuZHRkIj4KPCEtLSBDcmVhdG9yOiBDb3JlbERSQVcgMjAxOCAoNjQtQml0KSAtLT4KPHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbDpzcGFjZT0icHJlc2VydmUiIHdpZHRoPSIxOS4yNTZtbSIgaGVpZ2h0PSI3LjA0MzdtbSIgdmVyc2lvbj0iMS4xIiBzdHlsZT0ic2hhcGUtcmVuZGVyaW5nOmdlb21ldHJpY1ByZWNpc2lvbjsgdGV4dC1yZW5kZXJpbmc6Z2VvbWV0cmljUHJlY2lzaW9uOyBpbWFnZS1yZW5kZXJpbmc6b3B0aW1pemVRdWFsaXR5OyBmaWxsLXJ1bGU6ZXZlbm9kZDsgY2xpcC1ydWxlOmV2ZW5vZGQiCnZpZXdCb3g9IjAgMCA5NC4zMiAzNC41IgogeG1sbnM6eGxpbms9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsiPgogPGRlZnM+CiAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KICAgPCFbQ0RBVEFbCiAgICAuZmlsMSB7ZmlsbDojRkVGRUZFO2ZpbGwtcnVsZTpub256ZXJvfQogICAgLmZpbDAge2ZpbGw6I0UzMjEyNDtmaWxsLXJ1bGU6bm9uemVyb30KICAgXV0+CiAgPC9zdHlsZT4KIDwvZGVmcz4KIDxnIGlkPSJMYXllcl94MDAyMF8xIj4KICA8bWV0YWRhdGEgaWQ9IkNvcmVsQ29ycElEXzBDb3JlbC1MYXllciIvPgogIDxwb2x5Z29uIGNsYXNzPSJmaWwwIiBwb2ludHM9Ii0wLDM0LjUgOTQuMzIsMzQuNSA5NC4zMiwwIC0wLDAgIi8+CiAgPHBhdGggY2xhc3M9ImZpbDEiIGQ9Ik04Mi4xNyAxMy44YzAuMDcsMCAwLjE0LC0wIDAuMTgsLTAuMDcgMC4wMSwtMC4wMyAwLjAyLC0wLjA2IDAuMDIsLTAuMDkgMCwtMC4wNiAtMC4wMywtMC4xMSAtMC4wOCwtMC4xNCAtMC4wNSwtMC4wMiAtMC4xLC0wLjAyIC0wLjIxLC0wLjAybC0wLjA1IDAgMCAwLjMxIDAuMTQgMHptLTAuMDkgLTAuNDljMC4xNSwwIDAuMjIsMCAwLjI4LDAuMDMgMC4yLDAuMDYgMC4yMiwwLjI0IDAuMjIsMC4zIDAsMC4wMSAwLDAuMDUgLTAuMDEsMC4wOSAtMC4wMSwwLjA0IC0wLjAzLDAuMTIgLTAuMTQsMC4xOSAtMC4wMiwwLjAxIC0wLjAyLDAuMDEgLTAuMDUsMC4wMmwwLjI1IDAuNDYgLTAuMjQgMCAtMC4yMiAtMC40MiAtMC4xNCAwIDAgMC40MiAtMC4yMiAwIDAgLTEuMDkgMC4yNyAwem0wLjA5IDEuNTRjMC41NCwwIDAuOTcsLTAuNDQgMC45NywtMC45NyAwLC0wLjU0IC0wLjQzLC0wLjk3IC0wLjk3LC0wLjk3IC0wLjUzLDAgLTAuOTYsMC40MyAtMC45NiwwLjk3IDAsMC41MyAwLjQzLDAuOTcgMC45NiwwLjk3em0tMC43NiAtMC45N2MwLC0wLjQyIDAuMzQsLTAuNzcgMC43NiwtMC43NyAwLjQzLDAgMC43NywwLjM1IDAuNzcsMC43NyAwLDAuNDEgLTAuMzUsMC43NiAtMC43NywwLjc2IC0wLjQxLDAgLTAuNzYsLTAuMzUgLTAuNzYsLTAuNzZ6bS02Ljc0IDYuMTdjLTEuMjgsMCAtMi4zNSwtMC44NiAtMi42OCwtMi4wM2w3LjA4IDAgMC45OCAtMS41MiAtOC4wNyAwYzAuMzIsLTEuMTcgMS40MSwtMi4wNCAyLjY4LC0yLjA0bDQuODggMCAwLjk3IC0xLjUyIC01Ljk2IDBjLTIuMzksMCAtNC4zMiwxLjkzIC00LjMyLDQuMzEgMCwyLjM4IDEuOTMsNC4zMSA0LjMyLDQuMzFsNS4xMiAwIDAuOTcgLTEuNTIgLTUuOTggMHptLTIwLjI5IDEuNTJjLTIuMzgsMCAtNC4zMSwtMS45MyAtNC4zMSwtNC4zMSAwLC0yLjM4IDEuOTMsLTQuMzEgNC4zMSwtNC4zMWw1Ljk2IDAgLTAuOTggMS41MiAtNC44OCAwYy0xLjU0LDAgLTIuNzksMS4yNSAtMi43OSwyLjc5IDAsMS41NCAxLjI1LDIuNzkgMi43OSwyLjc5bDUuOTggMCAtMC45OCAxLjUyIC01LjEyIDB6bS0zMS41IC0xLjUyYzEuNTQsMCAyLjgsLTEuMjUgMi44LC0yLjc5IDAsLTEuNTQgLTEuMjUsLTIuNzkgLTIuOCwtMi43OWwtNC43OSAwYy0xLjU0LDAgLTIuNzksMS4yNSAtMi43OSwyLjc5IDAsMS41NCAxLjI1LDIuNzkgMi43OSwyLjc5bDQuNzkgMHptLTQuOSAxLjUyYy0yLjM5LDAgLTQuMzIsLTEuOTMgLTQuMzIsLTQuMzEgMCwtMi4zOCAxLjkzLC00LjMxIDQuMzIsLTQuMzFsNS4wMSAwYzIuMzgsMCA0LjMxLDEuOTMgNC4zMSw0LjMxIDAsMi4zOCAtMS45Myw0LjMxIC00LjMxLDQuMzFsLTUuMDEgMHptMTcuNDYgLTIuNzljMS42MiwwIDIuOTIsLTEuMzEgMi45MiwtMi45MiAwLC0xLjYxIC0xLjMsLTIuOTIgLTIuOTIsLTIuOTJsLTcuMjYgMCAwIDguNjMgMS42NiAwIDAgLTcuMTEgNS40OSAwYzAuNzYsMCAxLjM5LDAuNjMgMS4zOSwxLjQgMCwwLjc3IC0wLjYzLDEuMzkgLTEuMzksMS4zOWwtNC42OCAtMCA0Ljk0IDQuMzIgMi40MSAwIC0zLjMzIC0yLjc5IDAuNzUgMHptMjcuNDQgMS4yN2wwIC03LjEgLTEuNjUgMCAwIDcuOGMwLDAuMjIgMC4wOCwwLjQyIDAuMjQsMC41OCAwLjE2LDAuMTUgMC4zOCwwLjI1IDAuNjEsMC4yNWw3LjU3IDAgMC45OCAtMS41MiAtNy43NCAwem0tMjAuMyAtMS41Mmw0LjQzIDAgLTIuMzQgLTMuNzcgLTQuMyA2LjgyIC0xLjk1IDAgNS4yMiAtOC4xOGMwLjIzLC0wLjMzIDAuNjEsLTAuNTMgMS4wMywtMC41MyAwLjQsMCAwLjc4LDAuMTkgMS4wMSwwLjUxbDUuMjQgOC4yIC0xLjk2IDAgLTAuOTIgLTEuNTIgLTQuNDggMCAtMC45OCAtMS41MnoiLz4KIDwvZz4KPC9zdmc+Cg==",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Query"},{property:"og:description",content:"Oracle Query Task | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-jdbc-oracle/tasks/io.kestra.plugin.jdbc.oracle.Query.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Query"},{name:"twitter:description",content:"Oracle Query Task | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-jdbc-oracle/tasks/io.kestra.plugin.jdbc.oracle.Query.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-jdbc-oracle/tasks/io.kestra.plugin.jdbc.oracle.Query.html",relativePath:"plugins/plugin-jdbc-oracle/tasks/io.kestra.plugin.jdbc.oracle.Query.md",key:"v-604496fa",path:"/plugins/plugin-jdbc-oracle/tasks/io.kestra.plugin.jdbc.oracle.Query.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:311},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:966},{level:3,title:"autoCommit",slug:"autocommit",normalizedTitle:"autocommit",charIndex:981},{level:3,title:"fetch",slug:"fetch",normalizedTitle:"fetch",charIndex:343},{level:3,title:"fetchOne",slug:"fetchone",normalizedTitle:"fetchone",charIndex:1716},{level:3,title:"fetchSize",slug:"fetchsize",normalizedTitle:"fetchsize",charIndex:1939},{level:3,title:"password",slug:"password",normalizedTitle:"password",charIndex:526},{level:3,title:"sql",slug:"sql",normalizedTitle:"sql",charIndex:552},{level:3,title:"store",slug:"store",normalizedTitle:"store",charIndex:829},{level:3,title:"timeZoneId",slug:"timezoneid",normalizedTitle:"timezoneid",charIndex:2824},{level:3,title:"url",slug:"url",normalizedTitle:"url",charIndex:463},{level:3,title:"username",slug:"username",normalizedTitle:"username",charIndex:507},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:3164},{level:3,title:"row",slug:"row",normalizedTitle:"row",charIndex:762},{level:3,title:"rows",slug:"rows",normalizedTitle:"rows",charIndex:784},{level:3,title:"size",slug:"size",normalizedTitle:"size",charIndex:2199},{level:3,title:"uri",slug:"uri",normalizedTitle:"uri",charIndex:3571},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:3724}],headersStr:"Examples Properties autoCommit fetch fetchOne fetchSize password sql store timeZoneId url username Outputs row rows size uri Definitions",content:"Query\n\ntype: \"io.kestra.plugin.jdbc.oracle.Query\"\n\n\n> Oracle Query Task\n\nCurrently supported types are the following ones :\n\n * VARCHAR2\n * CHAR\n * VARCHAR2\n * VARCHAR\n * NCHAR\n * NVARCHAR2\n * BLOB\n * CLOB\n * NCLOB\n * NUMBER\n * BINARY_FLOAT\n * BINARY_DOUBLE\n * DATE\n * TIMESTAMP\n * TIMESTAMP WITH TIME ZONE\n\n\n# Examples\n\n> Execute a query and fetch results on another task to update another table\n\ntasks:\n- id: select\n  type: io.kestra.plugin.jdbc.oracle.Query\n  url: jdbc:oracle:thin:@localhost:49161:XE\n  username: oracle\n  password: oracle_passwd\n  sql: select * from source\n  fetch: true\n- id: generate-update\n  type: io.kestra.plugin.jdbc.oracle.Query\n  url: jdbc:oracle:thin:@localhost:49161:XE\n  username: oracle\n  password: oracle_passwd\n  sql:  \"{% for row in outputs.update.rows %} INSERT INTO destination (year_month, store_code, update_date) values ({{row.year_month}}, {{row.store_code}}, TO_DATE('{{row.date}}', 'MONTH DD, YYYY') ); {% endfor %}\"\n\n\n\n# Properties\n\n\n# autoCommit\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n\n> If autocommit is enabled\n\nSets this connection's auto-commit mode to the given state. If a connection is in auto-commit mode, then all its SQL statements will be executed and committed as individual transactions. Otherwise, its SQL statements are grouped into transactions that are terminated by a call to either the method commitor the method rollback. By default, new connections are in auto-commit mode except if you are using a store properties that will disabled autocommit whenever this properties values.\n\n\n# fetch\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n> Whether to fetch the data from the query result to the task output This parameter is evaluated after 'fetchOne' and 'store'.\n\n\n# fetchOne\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n> Whether to fetch only one data row from the query result to the task output. This parameter is evaluated before 'store' and 'fetch'.\n\n\n# fetchSize\n\n * Type: integer\n * Dynamic: ❌\n * Required: ❌\n\n> Number of rows that should be fetched\n\nGives the JDBC driver a hint as to the number of rows that should be fetched from the database when more rows are needed for this ResultSet object. If the fetch size specified is zero, the JDBC driver ignores the value and is free to make its own best guess as to what the fetch size should be. Ignored if autoCommit is false.\n\n\n# password\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The database user's password\n\n\n# sql\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The sql query to run\n\n\n# store\n\n * Type: boolean\n * Dynamic: ✔️\n * Required: ❌\n\n> Whether to fetch data row from the query result to a file in internal storage. File will be saved as Amazon Ion (text format).\n> See Amazon Ion documentation This parameter is evaluated after 'fetchOne' but before 'fetch'.\n\n\n# timeZoneId\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The time zone id to use for date/time manipulation. Default value is the worker default zone id.\n\n\n# url\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The jdbc url to connect to the database\n\n\n# username\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The database user\n\n\n# Outputs\n\n\n# row\n\n * Type: object\n\n> Map containing the first row of fetched data\n\nOnly populated if 'fetchOne' parameter is set to true.\n\n\n# rows\n\n * Type: array\n * SubType: object\n\n> Lit of map containing rows of fetched data\n\nOnly populated if 'fetch' parameter is set to true.\n\n\n# size\n\n * Type: integer\n\n> The size of the fetched rows\n\nOnly populated if 'store' or 'fetch' parameter is set to true.\n\n\n# uri\n\n * Type: string\n\n> The url of the result file on kestra storage (.ion file / Amazon Ion text format)\n\nOnly populated if 'store' is set to true.\n\n\n# Definitions",normalizedContent:"query\n\ntype: \"io.kestra.plugin.jdbc.oracle.query\"\n\n\n> oracle query task\n\ncurrently supported types are the following ones :\n\n * varchar2\n * char\n * varchar2\n * varchar\n * nchar\n * nvarchar2\n * blob\n * clob\n * nclob\n * number\n * binary_float\n * binary_double\n * date\n * timestamp\n * timestamp with time zone\n\n\n# examples\n\n> execute a query and fetch results on another task to update another table\n\ntasks:\n- id: select\n  type: io.kestra.plugin.jdbc.oracle.query\n  url: jdbc:oracle:thin:@localhost:49161:xe\n  username: oracle\n  password: oracle_passwd\n  sql: select * from source\n  fetch: true\n- id: generate-update\n  type: io.kestra.plugin.jdbc.oracle.query\n  url: jdbc:oracle:thin:@localhost:49161:xe\n  username: oracle\n  password: oracle_passwd\n  sql:  \"{% for row in outputs.update.rows %} insert into destination (year_month, store_code, update_date) values ({{row.year_month}}, {{row.store_code}}, to_date('{{row.date}}', 'month dd, yyyy') ); {% endfor %}\"\n\n\n\n# properties\n\n\n# autocommit\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n\n> if autocommit is enabled\n\nsets this connection's auto-commit mode to the given state. if a connection is in auto-commit mode, then all its sql statements will be executed and committed as individual transactions. otherwise, its sql statements are grouped into transactions that are terminated by a call to either the method commitor the method rollback. by default, new connections are in auto-commit mode except if you are using a store properties that will disabled autocommit whenever this properties values.\n\n\n# fetch\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n> whether to fetch the data from the query result to the task output this parameter is evaluated after 'fetchone' and 'store'.\n\n\n# fetchone\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n> whether to fetch only one data row from the query result to the task output. this parameter is evaluated before 'store' and 'fetch'.\n\n\n# fetchsize\n\n * type: integer\n * dynamic: ❌\n * required: ❌\n\n> number of rows that should be fetched\n\ngives the jdbc driver a hint as to the number of rows that should be fetched from the database when more rows are needed for this resultset object. if the fetch size specified is zero, the jdbc driver ignores the value and is free to make its own best guess as to what the fetch size should be. ignored if autocommit is false.\n\n\n# password\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the database user's password\n\n\n# sql\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the sql query to run\n\n\n# store\n\n * type: boolean\n * dynamic: ✔️\n * required: ❌\n\n> whether to fetch data row from the query result to a file in internal storage. file will be saved as amazon ion (text format).\n> see amazon ion documentation this parameter is evaluated after 'fetchone' but before 'fetch'.\n\n\n# timezoneid\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the time zone id to use for date/time manipulation. default value is the worker default zone id.\n\n\n# url\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the jdbc url to connect to the database\n\n\n# username\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the database user\n\n\n# outputs\n\n\n# row\n\n * type: object\n\n> map containing the first row of fetched data\n\nonly populated if 'fetchone' parameter is set to true.\n\n\n# rows\n\n * type: array\n * subtype: object\n\n> lit of map containing rows of fetched data\n\nonly populated if 'fetch' parameter is set to true.\n\n\n# size\n\n * type: integer\n\n> the size of the fetched rows\n\nonly populated if 'store' or 'fetch' parameter is set to true.\n\n\n# uri\n\n * type: string\n\n> the url of the result file on kestra storage (.ion file / amazon ion text format)\n\nonly populated if 'store' is set to true.\n\n\n# definitions",charsets:{}},{title:"Plugin jdbc postgres",frontmatter:{title:"Plugin jdbc postgres",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Plugin jdbc postgres"},{property:"og:description",content:"Plugin jdbc postgres | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-jdbc-postgres/"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Plugin jdbc postgres"},{name:"twitter:description",content:"Plugin jdbc postgres | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-jdbc-postgres/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-jdbc-postgres/",relativePath:"plugins/plugin-jdbc-postgres/README.md",key:"v-36f917a8",path:"/plugins/plugin-jdbc-postgres/",headers:[{level:2,title:"L",slug:"l",normalizedTitle:"l",charIndex:27},{level:3,title:"Tasks",slug:"tasks",normalizedTitle:"tasks",charIndex:33}],headersStr:"L Tasks",content:"# Plugin jdbc postgres\n\n\n# L\n\n\n# Tasks\n\n * CopyIn\n * CopyOut\n * Query",normalizedContent:"# plugin jdbc postgres\n\n\n# l\n\n\n# tasks\n\n * copyin\n * copyout\n * query",charsets:{}},{title:"CopyIn",frontmatter:{title:"CopyIn",editLink:!1,description:"Copy a PostgreSQL table or a query to a file",icon:"",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"CopyIn"},{property:"og:description",content:"Copy a PostgreSQL table or a query to a file | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-jdbc-postgres/tasks/l/io.kestra.plugin.jdbc.postgresql.CopyIn.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"CopyIn"},{name:"twitter:description",content:"Copy a PostgreSQL table or a query to a file | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-jdbc-postgres/tasks/l/io.kestra.plugin.jdbc.postgresql.CopyIn.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-jdbc-postgres/tasks/l/io.kestra.plugin.jdbc.postgresql.CopyIn.html",relativePath:"plugins/plugin-jdbc-postgres/tasks/l/io.kestra.plugin.jdbc.postgresql.CopyIn.md",key:"v-acc87596",path:"/plugins/plugin-jdbc-postgres/tasks/l/io.kestra.plugin.jdbc.postgresql.CopyIn.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:166},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:462},{level:3,title:"autoCommit",slug:"autocommit",normalizedTitle:"autocommit",charIndex:477},{level:3,title:"columns",slug:"columns",normalizedTitle:"columns",charIndex:1054},{level:3,title:"delimiter",slug:"delimiter",normalizedTitle:"delimiter",charIndex:442},{level:3,title:"encoding",slug:"encoding",normalizedTitle:"encoding",charIndex:1551},{level:3,title:"escape",slug:"escape",normalizedTitle:"escape",charIndex:1772},{level:3,title:"forceNotNull",slug:"forcenotnull",normalizedTitle:"forcenotnull",charIndex:2136},{level:3,title:"forceNull",slug:"forcenull",normalizedTitle:"forcenull",charIndex:2529},{level:3,title:"forceQuote",slug:"forcequote",normalizedTitle:"forcequote",charIndex:2919},{level:3,title:"format",slug:"format",normalizedTitle:"format",charIndex:358},{level:3,title:"freeze",slug:"freeze",normalizedTitle:"freeze",charIndex:3408},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:370},{level:3,title:"header",slug:"header",normalizedTitle:"header",charIndex:429},{level:3,title:"nullString",slug:"nullstring",normalizedTitle:"nullstring",charIndex:4546},{level:3,title:"oids",slug:"oids",normalizedTitle:"oids",charIndex:4931},{level:3,title:"password",slug:"password",normalizedTitle:"password",charIndex:338},{level:3,title:"quote",slug:"quote",normalizedTitle:"quote",charIndex:2443},{level:3,title:"ssl",slug:"ssl",normalizedTitle:"ssl",charIndex:5488},{level:3,title:"sslCert",slug:"sslcert",normalizedTitle:"sslcert",charIndex:5586},{level:3,title:"sslKey",slug:"sslkey",normalizedTitle:"sslkey",charIndex:5695},{level:3,title:"sslKeyPassword",slug:"sslkeypassword",normalizedTitle:"sslkeypassword",charIndex:5794},{level:3,title:"sslMode",slug:"sslmode",normalizedTitle:"sslmode",charIndex:5883},{level:3,title:"sslRootCert",slug:"sslrootcert",normalizedTitle:"sslrootcert",charIndex:6065},{level:3,title:"table",slug:"table",normalizedTitle:"table",charIndex:78},{level:3,title:"url",slug:"url",normalizedTitle:"url",charIndex:279},{level:3,title:"username",slug:"username",normalizedTitle:"username",charIndex:319},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:6483},{level:3,title:"rowCount",slug:"rowcount",normalizedTitle:"rowcount",charIndex:6495},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:6559}],headersStr:"Examples Properties autoCommit columns delimiter encoding escape forceNotNull forceNull forceQuote format freeze from header nullString oids password quote ssl sslCert sslKey sslKeyPassword sslMode sslRootCert table url username Outputs rowCount Definitions",content:'CopyIn\n\ntype: "io.kestra.plugin.jdbc.postgresql.CopyIn"\n\n\n> Copy a PostgreSQL table or a query to a file\n\nMoves data between PostgreSQL tables or query to a file\n\n\n# Examples\n\n> Load csv or tsv into a postgres table\n\nid: "copy_in"\ntype: "io.kestra.plugin.jdbc.postgresql.CopyIn"\nurl: jdbc:postgresql://127.0.0.1:56982/\nusername: postgres\npassword: pg_passwd\nformat: CSV\nfrom: {{ outputs.export.uri }}\ntable: my_destination_table\nheader: true\ndelimiter: "\t"\n\n\n\n# Properties\n\n\n# autoCommit\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n\n> If autocommit is enabled\n\nSets this connection\'s auto-commit mode to the given state. If a connection is in auto-commit mode, then all its SQL statements will be executed and committed as individual transactions. Otherwise, its SQL statements are grouped into transactions that are terminated by a call to either the method commitor the method rollback. By default, new connections are in auto-commit mode except if you are using a store properties that will disabled autocommit whenever this properties values.\n\n\n# columns\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> An optional list of columns to be copied\n\nIf no column list is specified, all columns of the table will be copied.\n\n\n# delimiter\n\n * Type: string\n * Dynamic: ❌\n * Required: ❌\n\n> Specifies the character that separates columns within each row (line) of the file\n\nThe default is a tab character in text format, a comma in CSV format. This must be a single one-byte character. This option is not allowed when using binary\n\n\n# encoding\n\n * Type: string\n * Dynamic: ❌\n * Required: ❌\n\n> Specifies that the file is encoded in the encoding_name\n\nIf this option is omitted, the current client encoding is used. See the Notes below for more details.\n\n\n# escape\n\n * Type: string\n * Dynamic: ❌\n * Required: ❌\n\n> Specifies the character that should appear before a data character that matches the QUOTE value.\n\nThe default is the same as the QUOTE value (so that the quoting character is doubled if it appears in the data). This must be a single one-byte character. This option is allowed only when using CSV format.\n\n\n# forceNotNull\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Do not match the specified columns\' values against the null string\n\nIn the default case where the null string is empty, this means that empty values will be read as zero-length strings rather than nulls, even when they are not quoted. This option is allowed only in COPY FROM, and only when using CSV format.\n\n\n# forceNull\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Match the specified columns\' values against the null string, even if it has been quoted, and if a match is found set the value to NULL\n\nIn the default case where the null string is empty, this converts a quoted empty string into NULL. This option is allowed only in COPY FROM, and only when using CSV format.\n\n\n# forceQuote\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Forces quoting to be used for all non-NULL values in each specified column\n\nNULL output is never quoted. If * is specified, non-NULL values will be quoted in all columns. This option is allowed only in COPY TO, and only when using CSV format.\n\n\n# format\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ❌\n\n * Possible Values:\n   \n   * TEXT\n   * CSV\n   * BINARY\n\n> Selects the data format to be read or written\n\n\n# freeze\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n\n> Requests copying the data with rows already frozen, just as they would be after running the VACUUM FREEZE command\n\nThis is intended as a performance option for initial data loading. Rows will be frozen only if the table being loaded has been created or truncated in the current subtransaction, there are no cursors open and there are no older snapshots held by this transaction. It is currently not possible to perform a COPY FREEZE on a partitioned table.\n\nNote that all other sessions will immediately be able to see the data once it has been successfully loaded. This violates the normal rules of MVCC visibility and users specifying should be aware of the potential problems this might cause.\n\n\n# from\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> Source file URI\n\n\n# header\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n\n> Specifies that the file contains a header line with the names of each column in the file\n\nOn output, the first line contains the column names from the table, and on input, the first line is ignored. This option is allowed only when using CSV.\n\n\n# nullString\n\n * Type: string\n * Dynamic: ❌\n * Required: ❌\n\n> Specifies the string that represents a null value\n\nThe default is \\N (backslash-N) in text format, and an unquoted empty string in CSV format. You might prefer an empty string even in text format for cases where you don\'t want to distinguish nulls from empty strings. This option is not allowed when using binary format.\n\n\n# oids\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n\n> Specifies copying the OID for each row\n\nAn error is raised if OIDS is specified for a table that does not have OIDs, or in the case of copying a query.\n\n\n# password\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The database user\'s password\n\n\n# quote\n\n * Type: string\n * Dynamic: ❌\n * Required: ❌\n\n> Specifies the quoting character to be used when a data value is quoted.\n\nThe default is double-quote. This must be a single one-byte character. This option is allowed only when using CSV format.\n\n\n# ssl\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: false\n\n> Is the connection ssl\n\n\n# sslCert\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The ssl cert\n\nMust be a PEM encoded certificate\n\n\n# sslKey\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The ssl key\n\nMust be a PEM encoded key\n\n\n# sslKeyPassword\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The ssl key password\n\n\n# sslMode\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Possible Values:\n   \n   * DISABLE\n   * ALLOW\n   * PREFER\n   * REQUIRE\n   * VERIFY_CA\n   * VERIFY_FULL\n\n> The ssl mode\n\n\n# sslRootCert\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The ssl root cert\n\nMust be a PEM encoded certificate\n\n\n# table\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The name (optionally schema-qualified) of an existing table.\n\n\n# url\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The jdbc url to connect to the database\n\n\n# username\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The database user\n\n\n# Outputs\n\n\n# rowCount\n\n * Type: integer\n\n> The rows count from this COPY\n\n\n# Definitions',normalizedContent:'copyin\n\ntype: "io.kestra.plugin.jdbc.postgresql.copyin"\n\n\n> copy a postgresql table or a query to a file\n\nmoves data between postgresql tables or query to a file\n\n\n# examples\n\n> load csv or tsv into a postgres table\n\nid: "copy_in"\ntype: "io.kestra.plugin.jdbc.postgresql.copyin"\nurl: jdbc:postgresql://127.0.0.1:56982/\nusername: postgres\npassword: pg_passwd\nformat: csv\nfrom: {{ outputs.export.uri }}\ntable: my_destination_table\nheader: true\ndelimiter: "\t"\n\n\n\n# properties\n\n\n# autocommit\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n\n> if autocommit is enabled\n\nsets this connection\'s auto-commit mode to the given state. if a connection is in auto-commit mode, then all its sql statements will be executed and committed as individual transactions. otherwise, its sql statements are grouped into transactions that are terminated by a call to either the method commitor the method rollback. by default, new connections are in auto-commit mode except if you are using a store properties that will disabled autocommit whenever this properties values.\n\n\n# columns\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> an optional list of columns to be copied\n\nif no column list is specified, all columns of the table will be copied.\n\n\n# delimiter\n\n * type: string\n * dynamic: ❌\n * required: ❌\n\n> specifies the character that separates columns within each row (line) of the file\n\nthe default is a tab character in text format, a comma in csv format. this must be a single one-byte character. this option is not allowed when using binary\n\n\n# encoding\n\n * type: string\n * dynamic: ❌\n * required: ❌\n\n> specifies that the file is encoded in the encoding_name\n\nif this option is omitted, the current client encoding is used. see the notes below for more details.\n\n\n# escape\n\n * type: string\n * dynamic: ❌\n * required: ❌\n\n> specifies the character that should appear before a data character that matches the quote value.\n\nthe default is the same as the quote value (so that the quoting character is doubled if it appears in the data). this must be a single one-byte character. this option is allowed only when using csv format.\n\n\n# forcenotnull\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> do not match the specified columns\' values against the null string\n\nin the default case where the null string is empty, this means that empty values will be read as zero-length strings rather than nulls, even when they are not quoted. this option is allowed only in copy from, and only when using csv format.\n\n\n# forcenull\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> match the specified columns\' values against the null string, even if it has been quoted, and if a match is found set the value to null\n\nin the default case where the null string is empty, this converts a quoted empty string into null. this option is allowed only in copy from, and only when using csv format.\n\n\n# forcequote\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> forces quoting to be used for all non-null values in each specified column\n\nnull output is never quoted. if * is specified, non-null values will be quoted in all columns. this option is allowed only in copy to, and only when using csv format.\n\n\n# format\n\n * type: string\n\n * dynamic: ❌\n\n * required: ❌\n\n * possible values:\n   \n   * text\n   * csv\n   * binary\n\n> selects the data format to be read or written\n\n\n# freeze\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n\n> requests copying the data with rows already frozen, just as they would be after running the vacuum freeze command\n\nthis is intended as a performance option for initial data loading. rows will be frozen only if the table being loaded has been created or truncated in the current subtransaction, there are no cursors open and there are no older snapshots held by this transaction. it is currently not possible to perform a copy freeze on a partitioned table.\n\nnote that all other sessions will immediately be able to see the data once it has been successfully loaded. this violates the normal rules of mvcc visibility and users specifying should be aware of the potential problems this might cause.\n\n\n# from\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> source file uri\n\n\n# header\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n\n> specifies that the file contains a header line with the names of each column in the file\n\non output, the first line contains the column names from the table, and on input, the first line is ignored. this option is allowed only when using csv.\n\n\n# nullstring\n\n * type: string\n * dynamic: ❌\n * required: ❌\n\n> specifies the string that represents a null value\n\nthe default is \\n (backslash-n) in text format, and an unquoted empty string in csv format. you might prefer an empty string even in text format for cases where you don\'t want to distinguish nulls from empty strings. this option is not allowed when using binary format.\n\n\n# oids\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n\n> specifies copying the oid for each row\n\nan error is raised if oids is specified for a table that does not have oids, or in the case of copying a query.\n\n\n# password\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the database user\'s password\n\n\n# quote\n\n * type: string\n * dynamic: ❌\n * required: ❌\n\n> specifies the quoting character to be used when a data value is quoted.\n\nthe default is double-quote. this must be a single one-byte character. this option is allowed only when using csv format.\n\n\n# ssl\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: false\n\n> is the connection ssl\n\n\n# sslcert\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the ssl cert\n\nmust be a pem encoded certificate\n\n\n# sslkey\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the ssl key\n\nmust be a pem encoded key\n\n\n# sslkeypassword\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the ssl key password\n\n\n# sslmode\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * possible values:\n   \n   * disable\n   * allow\n   * prefer\n   * require\n   * verify_ca\n   * verify_full\n\n> the ssl mode\n\n\n# sslrootcert\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the ssl root cert\n\nmust be a pem encoded certificate\n\n\n# table\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the name (optionally schema-qualified) of an existing table.\n\n\n# url\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the jdbc url to connect to the database\n\n\n# username\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the database user\n\n\n# outputs\n\n\n# rowcount\n\n * type: integer\n\n> the rows count from this copy\n\n\n# definitions',charsets:{}},{title:"CopyOut",frontmatter:{title:"CopyOut",editLink:!1,description:"Copy from a file to PostgreSQL table",icon:"",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"CopyOut"},{property:"og:description",content:"Copy from a file to PostgreSQL table | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-jdbc-postgres/tasks/l/io.kestra.plugin.jdbc.postgresql.CopyOut.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"CopyOut"},{name:"twitter:description",content:"Copy from a file to PostgreSQL table | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-jdbc-postgres/tasks/l/io.kestra.plugin.jdbc.postgresql.CopyOut.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-jdbc-postgres/tasks/l/io.kestra.plugin.jdbc.postgresql.CopyOut.html",relativePath:"plugins/plugin-jdbc-postgres/tasks/l/io.kestra.plugin.jdbc.postgresql.CopyOut.md",key:"v-1fd8c93a",path:"/plugins/plugin-jdbc-postgres/tasks/l/io.kestra.plugin.jdbc.postgresql.CopyOut.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:103},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:436},{level:3,title:"autoCommit",slug:"autocommit",normalizedTitle:"autocommit",charIndex:451},{level:3,title:"columns",slug:"columns",normalizedTitle:"columns",charIndex:1045},{level:3,title:"delimiter",slug:"delimiter",normalizedTitle:"delimiter",charIndex:416},{level:3,title:"encoding",slug:"encoding",normalizedTitle:"encoding",charIndex:1542},{level:3,title:"escape",slug:"escape",normalizedTitle:"escape",charIndex:1763},{level:3,title:"forceNotNull",slug:"forcenotnull",normalizedTitle:"forcenotnull",charIndex:2127},{level:3,title:"forceNull",slug:"forcenull",normalizedTitle:"forcenull",charIndex:2520},{level:3,title:"forceQuote",slug:"forcequote",normalizedTitle:"forcequote",charIndex:2910},{level:3,title:"format",slug:"format",normalizedTitle:"format",charIndex:310},{level:3,title:"freeze",slug:"freeze",normalizedTitle:"freeze",charIndex:3417},{level:3,title:"header",slug:"header",normalizedTitle:"header",charIndex:403},{level:3,title:"nullString",slug:"nullstring",normalizedTitle:"nullstring",charIndex:4479},{level:3,title:"oids",slug:"oids",normalizedTitle:"oids",charIndex:4864},{level:3,title:"password",slug:"password",normalizedTitle:"password",charIndex:290},{level:3,title:"quote",slug:"quote",normalizedTitle:"quote",charIndex:2434},{level:3,title:"sql",slug:"sql",normalizedTitle:"sql",charIndex:45},{level:3,title:"ssl",slug:"ssl",normalizedTitle:"ssl",charIndex:5771},{level:3,title:"sslCert",slug:"sslcert",normalizedTitle:"sslcert",charIndex:5869},{level:3,title:"sslKey",slug:"sslkey",normalizedTitle:"sslkey",charIndex:5978},{level:3,title:"sslKeyPassword",slug:"sslkeypassword",normalizedTitle:"sslkeypassword",charIndex:6077},{level:3,title:"sslMode",slug:"sslmode",normalizedTitle:"sslmode",charIndex:6166},{level:3,title:"sslRootCert",slug:"sslrootcert",normalizedTitle:"sslrootcert",charIndex:6348},{level:3,title:"table",slug:"table",normalizedTitle:"table",charIndex:93},{level:3,title:"url",slug:"url",normalizedTitle:"url",charIndex:231},{level:3,title:"username",slug:"username",normalizedTitle:"username",charIndex:271},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:6766},{level:3,title:"rowCount",slug:"rowcount",normalizedTitle:"rowcount",charIndex:6778},{level:3,title:"uri",slug:"uri",normalizedTitle:"uri",charIndex:6842},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:6915}],headersStr:"Examples Properties autoCommit columns delimiter encoding escape forceNotNull forceNull forceQuote format freeze header nullString oids password quote sql ssl sslCert sslKey sslKeyPassword sslMode sslRootCert table url username Outputs rowCount uri Definitions",content:"CopyOut\n\ntype: \"io.kestra.plugin.jdbc.postgresql.CopyOut\"\n\n\n> Copy from a file to PostgreSQL table\n\n\n# Examples\n\n> Export a csv or tsv from a postgres table or query\n\nid: \"copy_out\"\ntype: \"io.kestra.plugin.jdbc.postgresql.CopyOut\"\nurl: jdbc:postgresql://127.0.0.1:56982/\nusername: postgres\npassword: pg_passwd\nformat: CSV\nsql: SELECT 1 AS int, 't'::bool AS bool UNION SELECT 2 AS int, 'f'::bool AS bool\nheader: true\ndelimiter: \"\t\"\n\n\n\n# Properties\n\n\n# autoCommit\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n * Default: true\n\n> If autocommit is enabled\n\nSets this connection's auto-commit mode to the given state. If a connection is in auto-commit mode, then all its SQL statements will be executed and committed as individual transactions. Otherwise, its SQL statements are grouped into transactions that are terminated by a call to either the method commitor the method rollback. By default, new connections are in auto-commit mode except if you are using a store properties that will disabled autocommit whenever this properties values.\n\n\n# columns\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> An optional list of columns to be copied\n\nIf no column list is specified, all columns of the table will be copied.\n\n\n# delimiter\n\n * Type: string\n * Dynamic: ❌\n * Required: ❌\n\n> Specifies the character that separates columns within each row (line) of the file\n\nThe default is a tab character in text format, a comma in CSV format. This must be a single one-byte character. This option is not allowed when using binary\n\n\n# encoding\n\n * Type: string\n * Dynamic: ❌\n * Required: ❌\n\n> Specifies that the file is encoded in the encoding_name\n\nIf this option is omitted, the current client encoding is used. See the Notes below for more details.\n\n\n# escape\n\n * Type: string\n * Dynamic: ❌\n * Required: ❌\n\n> Specifies the character that should appear before a data character that matches the QUOTE value.\n\nThe default is the same as the QUOTE value (so that the quoting character is doubled if it appears in the data). This must be a single one-byte character. This option is allowed only when using CSV format.\n\n\n# forceNotNull\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Do not match the specified columns' values against the null string\n\nIn the default case where the null string is empty, this means that empty values will be read as zero-length strings rather than nulls, even when they are not quoted. This option is allowed only in COPY FROM, and only when using CSV format.\n\n\n# forceNull\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Match the specified columns' values against the null string, even if it has been quoted, and if a match is found set the value to NULL\n\nIn the default case where the null string is empty, this converts a quoted empty string into NULL. This option is allowed only in COPY FROM, and only when using CSV format.\n\n\n# forceQuote\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Forces quoting to be used for all non-NULL values in each specified column\n\nNULL output is never quoted. If * is specified, non-NULL values will be quoted in all columns. This option is allowed only in COPY TO, and only when using CSV format.\n\n\n# format\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ❌\n\n * Default: TEXT\n\n * Possible Values:\n   \n   * TEXT\n   * CSV\n   * BINARY\n\n> Selects the data format to be read or written\n\n\n# freeze\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n\n> Requests copying the data with rows already frozen, just as they would be after running the VACUUM FREEZE command\n\nThis is intended as a performance option for initial data loading. Rows will be frozen only if the table being loaded has been created or truncated in the current subtransaction, there are no cursors open and there are no older snapshots held by this transaction. It is currently not possible to perform a COPY FREEZE on a partitioned table.\n\nNote that all other sessions will immediately be able to see the data once it has been successfully loaded. This violates the normal rules of MVCC visibility and users specifying should be aware of the potential problems this might cause.\n\n\n# header\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n\n> Specifies that the file contains a header line with the names of each column in the file\n\nOn output, the first line contains the column names from the table, and on input, the first line is ignored. This option is allowed only when using CSV.\n\n\n# nullString\n\n * Type: string\n * Dynamic: ❌\n * Required: ❌\n\n> Specifies the string that represents a null value\n\nThe default is \\N (backslash-N) in text format, and an unquoted empty string in CSV format. You might prefer an empty string even in text format for cases where you don't want to distinguish nulls from empty strings. This option is not allowed when using binary format.\n\n\n# oids\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n\n> Specifies copying the OID for each row\n\nAn error is raised if OIDS is specified for a table that does not have OIDs, or in the case of copying a query.\n\n\n# password\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The database user's password\n\n\n# quote\n\n * Type: string\n * Dynamic: ❌\n * Required: ❌\n\n> Specifies the quoting character to be used when a data value is quoted.\n\nThe default is double-quote. This must be a single one-byte character. This option is allowed only when using CSV format.\n\n\n# sql\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> A SELECT, VALUES, INSERT, UPDATE or DELETE command whose results are to be copied.\n\nFor INSERT, UPDATE and DELETE queries a RETURNING clause must be provided, and the target relation must not have a conditional rule, nor an ALSO rule, nor an INSTEAD rule that expands to multiple statements.\n\n\n# ssl\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: false\n\n> Is the connection ssl\n\n\n# sslCert\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The ssl cert\n\nMust be a PEM encoded certificate\n\n\n# sslKey\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The ssl key\n\nMust be a PEM encoded key\n\n\n# sslKeyPassword\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The ssl key password\n\n\n# sslMode\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Possible Values:\n   \n   * DISABLE\n   * ALLOW\n   * PREFER\n   * REQUIRE\n   * VERIFY_CA\n   * VERIFY_FULL\n\n> The ssl mode\n\n\n# sslRootCert\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The ssl root cert\n\nMust be a PEM encoded certificate\n\n\n# table\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The name (optionally schema-qualified) of an existing table.\n\n\n# url\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The jdbc url to connect to the database\n\n\n# username\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The database user\n\n\n# Outputs\n\n\n# rowCount\n\n * Type: integer\n\n> The rows count from this COPY\n\n\n# uri\n\n * Type: string\n\n> The url of the result file on kestra storage\n\n\n# Definitions",normalizedContent:"copyout\n\ntype: \"io.kestra.plugin.jdbc.postgresql.copyout\"\n\n\n> copy from a file to postgresql table\n\n\n# examples\n\n> export a csv or tsv from a postgres table or query\n\nid: \"copy_out\"\ntype: \"io.kestra.plugin.jdbc.postgresql.copyout\"\nurl: jdbc:postgresql://127.0.0.1:56982/\nusername: postgres\npassword: pg_passwd\nformat: csv\nsql: select 1 as int, 't'::bool as bool union select 2 as int, 'f'::bool as bool\nheader: true\ndelimiter: \"\t\"\n\n\n\n# properties\n\n\n# autocommit\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n * default: true\n\n> if autocommit is enabled\n\nsets this connection's auto-commit mode to the given state. if a connection is in auto-commit mode, then all its sql statements will be executed and committed as individual transactions. otherwise, its sql statements are grouped into transactions that are terminated by a call to either the method commitor the method rollback. by default, new connections are in auto-commit mode except if you are using a store properties that will disabled autocommit whenever this properties values.\n\n\n# columns\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> an optional list of columns to be copied\n\nif no column list is specified, all columns of the table will be copied.\n\n\n# delimiter\n\n * type: string\n * dynamic: ❌\n * required: ❌\n\n> specifies the character that separates columns within each row (line) of the file\n\nthe default is a tab character in text format, a comma in csv format. this must be a single one-byte character. this option is not allowed when using binary\n\n\n# encoding\n\n * type: string\n * dynamic: ❌\n * required: ❌\n\n> specifies that the file is encoded in the encoding_name\n\nif this option is omitted, the current client encoding is used. see the notes below for more details.\n\n\n# escape\n\n * type: string\n * dynamic: ❌\n * required: ❌\n\n> specifies the character that should appear before a data character that matches the quote value.\n\nthe default is the same as the quote value (so that the quoting character is doubled if it appears in the data). this must be a single one-byte character. this option is allowed only when using csv format.\n\n\n# forcenotnull\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> do not match the specified columns' values against the null string\n\nin the default case where the null string is empty, this means that empty values will be read as zero-length strings rather than nulls, even when they are not quoted. this option is allowed only in copy from, and only when using csv format.\n\n\n# forcenull\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> match the specified columns' values against the null string, even if it has been quoted, and if a match is found set the value to null\n\nin the default case where the null string is empty, this converts a quoted empty string into null. this option is allowed only in copy from, and only when using csv format.\n\n\n# forcequote\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> forces quoting to be used for all non-null values in each specified column\n\nnull output is never quoted. if * is specified, non-null values will be quoted in all columns. this option is allowed only in copy to, and only when using csv format.\n\n\n# format\n\n * type: string\n\n * dynamic: ❌\n\n * required: ❌\n\n * default: text\n\n * possible values:\n   \n   * text\n   * csv\n   * binary\n\n> selects the data format to be read or written\n\n\n# freeze\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n\n> requests copying the data with rows already frozen, just as they would be after running the vacuum freeze command\n\nthis is intended as a performance option for initial data loading. rows will be frozen only if the table being loaded has been created or truncated in the current subtransaction, there are no cursors open and there are no older snapshots held by this transaction. it is currently not possible to perform a copy freeze on a partitioned table.\n\nnote that all other sessions will immediately be able to see the data once it has been successfully loaded. this violates the normal rules of mvcc visibility and users specifying should be aware of the potential problems this might cause.\n\n\n# header\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n\n> specifies that the file contains a header line with the names of each column in the file\n\non output, the first line contains the column names from the table, and on input, the first line is ignored. this option is allowed only when using csv.\n\n\n# nullstring\n\n * type: string\n * dynamic: ❌\n * required: ❌\n\n> specifies the string that represents a null value\n\nthe default is \\n (backslash-n) in text format, and an unquoted empty string in csv format. you might prefer an empty string even in text format for cases where you don't want to distinguish nulls from empty strings. this option is not allowed when using binary format.\n\n\n# oids\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n\n> specifies copying the oid for each row\n\nan error is raised if oids is specified for a table that does not have oids, or in the case of copying a query.\n\n\n# password\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the database user's password\n\n\n# quote\n\n * type: string\n * dynamic: ❌\n * required: ❌\n\n> specifies the quoting character to be used when a data value is quoted.\n\nthe default is double-quote. this must be a single one-byte character. this option is allowed only when using csv format.\n\n\n# sql\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> a select, values, insert, update or delete command whose results are to be copied.\n\nfor insert, update and delete queries a returning clause must be provided, and the target relation must not have a conditional rule, nor an also rule, nor an instead rule that expands to multiple statements.\n\n\n# ssl\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: false\n\n> is the connection ssl\n\n\n# sslcert\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the ssl cert\n\nmust be a pem encoded certificate\n\n\n# sslkey\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the ssl key\n\nmust be a pem encoded key\n\n\n# sslkeypassword\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the ssl key password\n\n\n# sslmode\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * possible values:\n   \n   * disable\n   * allow\n   * prefer\n   * require\n   * verify_ca\n   * verify_full\n\n> the ssl mode\n\n\n# sslrootcert\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the ssl root cert\n\nmust be a pem encoded certificate\n\n\n# table\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the name (optionally schema-qualified) of an existing table.\n\n\n# url\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the jdbc url to connect to the database\n\n\n# username\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the database user\n\n\n# outputs\n\n\n# rowcount\n\n * type: integer\n\n> the rows count from this copy\n\n\n# uri\n\n * type: string\n\n> the url of the result file on kestra storage\n\n\n# definitions",charsets:{}},{title:"Query",frontmatter:{title:"Query",editLink:!1,description:"PostgresSQL Query Task",icon:"",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Query"},{property:"og:description",content:"PostgresSQL Query Task | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-jdbc-postgres/tasks/l/io.kestra.plugin.jdbc.postgresql.Query.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Query"},{name:"twitter:description",content:"PostgresSQL Query Task | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-jdbc-postgres/tasks/l/io.kestra.plugin.jdbc.postgresql.Query.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-jdbc-postgres/tasks/l/io.kestra.plugin.jdbc.postgresql.Query.html",relativePath:"plugins/plugin-jdbc-postgres/tasks/l/io.kestra.plugin.jdbc.postgresql.Query.md",key:"v-e377b17a",path:"/plugins/plugin-jdbc-postgres/tasks/l/io.kestra.plugin.jdbc.postgresql.Query.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:553},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:1483},{level:3,title:"autoCommit",slug:"autocommit",normalizedTitle:"autocommit",charIndex:1498},{level:3,title:"fetch",slug:"fetch",normalizedTitle:"fetch",charIndex:585},{level:3,title:"fetchOne",slug:"fetchone",normalizedTitle:"fetchone",charIndex:2250},{level:3,title:"fetchSize",slug:"fetchsize",normalizedTitle:"fetchsize",charIndex:2473},{level:3,title:"password",slug:"password",normalizedTitle:"password",charIndex:772},{level:3,title:"sql",slug:"sql",normalizedTitle:"sql",charIndex:43},{level:3,title:"ssl",slug:"ssl",normalizedTitle:"ssl",charIndex:3074},{level:3,title:"sslCert",slug:"sslcert",normalizedTitle:"sslcert",charIndex:3172},{level:3,title:"sslKey",slug:"sslkey",normalizedTitle:"sslkey",charIndex:3281},{level:3,title:"sslKeyPassword",slug:"sslkeypassword",normalizedTitle:"sslkeypassword",charIndex:3380},{level:3,title:"sslMode",slug:"sslmode",normalizedTitle:"sslmode",charIndex:3469},{level:3,title:"sslRootCert",slug:"sslrootcert",normalizedTitle:"sslrootcert",charIndex:3651},{level:3,title:"store",slug:"store",normalizedTitle:"store",charIndex:1295},{level:3,title:"timeZoneId",slug:"timezoneid",normalizedTitle:"timezoneid",charIndex:4071},{level:3,title:"url",slug:"url",normalizedTitle:"url",charIndex:709},{level:3,title:"username",slug:"username",normalizedTitle:"username",charIndex:751},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:4411},{level:3,title:"row",slug:"row",normalizedTitle:"row",charIndex:1250},{level:3,title:"rows",slug:"rows",normalizedTitle:"rows",charIndex:1272},{level:3,title:"size",slug:"size",normalizedTitle:"size",charIndex:2733},{level:3,title:"uri",slug:"uri",normalizedTitle:"uri",charIndex:4818},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:4971}],headersStr:"Examples Properties autoCommit fetch fetchOne fetchSize password sql ssl sslCert sslKey sslKeyPassword sslMode sslRootCert store timeZoneId url username Outputs row rows size uri Definitions",content:"Query\n\ntype: \"io.kestra.plugin.jdbc.postgresql.Query\"\n\n\n> PostgresSQL Query Task\n\nCurrently supported types are the following ones :\n\n * serial\n * boolean\n * char(4)\n * varchar(n)\n * text\n * smallint\n * bigint\n * float(n)\n * double precision\n * real\n * numeric\n * date\n * time\n * timez / time with time zone (avoid this type as it can lead to some gap. See this PostgreSQL issue)\n * timestamp\n * timestampz / timestamp with time zone\n * interval\n * integer[]\n * text[][] (ie. array of array ... it may be of another supported type)\n * json\n * bytea\n\n\n# Examples\n\n> Execute a query and fetch results on another task to update another table\n\ntasks:\n- id: update\n  type: io.kestra.plugin.jdbc.postgresql.Query\n  url: jdbc:postgresql://127.0.0.1:56982/\n  username: postgres\n  password: pg_passwd\n  sql: select concert_id, available, a, b, c, d, play_time, library_record, floatn_test, double_test, real_test, numeric_test, date_type, time_type, timez_type, timestamp_type, timestampz_type, interval_type, pay_by_quarter, schedule, json_type, blob_type from pgsql_types\n  fetch: true\n- id: use-fetched-data\n  type: io.kestra.plugin.jdbc.postgresql.Query\n  url: jdbc:postgresql://127.0.0.1:56982/\n  username: postgres\n  password: pg_passwd\n  sql:  \"{% for row in outputs.update.rows %} INSERT INTO pl_store_distribute (year_month,store_code, update_date) values ({{row.play_time}}, {{row.concert_id}}, TO_TIMESTAMP('{{row.timestamp_type}}', 'YYYY-MM-DDTHH:MI:SS.US') ); {% endfor %}\"\n\n\n\n# Properties\n\n\n# autoCommit\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n * Default: true\n\n> If autocommit is enabled\n\nSets this connection's auto-commit mode to the given state. If a connection is in auto-commit mode, then all its SQL statements will be executed and committed as individual transactions. Otherwise, its SQL statements are grouped into transactions that are terminated by a call to either the method commitor the method rollback. By default, new connections are in auto-commit mode except if you are using a store properties that will disabled autocommit whenever this properties values.\n\n\n# fetch\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n> Whether to fetch the data from the query result to the task output This parameter is evaluated after 'fetchOne' and 'store'.\n\n\n# fetchOne\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n> Whether to fetch only one data row from the query result to the task output. This parameter is evaluated before 'store' and 'fetch'.\n\n\n# fetchSize\n\n * Type: integer\n * Dynamic: ❌\n * Required: ❌\n\n> Number of rows that should be fetched\n\nGives the JDBC driver a hint as to the number of rows that should be fetched from the database when more rows are needed for this ResultSet object. If the fetch size specified is zero, the JDBC driver ignores the value and is free to make its own best guess as to what the fetch size should be. Ignored if autoCommit is false.\n\n\n# password\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The database user's password\n\n\n# sql\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The sql query to run\n\n\n# ssl\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: false\n\n> Is the connection ssl\n\n\n# sslCert\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The ssl cert\n\nMust be a PEM encoded certificate\n\n\n# sslKey\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The ssl key\n\nMust be a PEM encoded key\n\n\n# sslKeyPassword\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The ssl key password\n\n\n# sslMode\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Possible Values:\n   \n   * DISABLE\n   * ALLOW\n   * PREFER\n   * REQUIRE\n   * VERIFY_CA\n   * VERIFY_FULL\n\n> The ssl mode\n\n\n# sslRootCert\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The ssl root cert\n\nMust be a PEM encoded certificate\n\n\n# store\n\n * Type: boolean\n * Dynamic: ✔️\n * Required: ❌\n * Default: false\n\n> Whether to fetch data row from the query result to a file in internal storage. File will be saved as Amazon Ion (text format).\n> See Amazon Ion documentation This parameter is evaluated after 'fetchOne' but before 'fetch'.\n\n\n# timeZoneId\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The time zone id to use for date/time manipulation. Default value is the worker default zone id.\n\n\n# url\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The jdbc url to connect to the database\n\n\n# username\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The database user\n\n\n# Outputs\n\n\n# row\n\n * Type: object\n\n> Map containing the first row of fetched data\n\nOnly populated if 'fetchOne' parameter is set to true.\n\n\n# rows\n\n * Type: array\n * SubType: object\n\n> Lit of map containing rows of fetched data\n\nOnly populated if 'fetch' parameter is set to true.\n\n\n# size\n\n * Type: integer\n\n> The size of the fetched rows\n\nOnly populated if 'store' or 'fetch' parameter is set to true.\n\n\n# uri\n\n * Type: string\n\n> The url of the result file on kestra storage (.ion file / Amazon Ion text format)\n\nOnly populated if 'store' is set to true.\n\n\n# Definitions",normalizedContent:"query\n\ntype: \"io.kestra.plugin.jdbc.postgresql.query\"\n\n\n> postgressql query task\n\ncurrently supported types are the following ones :\n\n * serial\n * boolean\n * char(4)\n * varchar(n)\n * text\n * smallint\n * bigint\n * float(n)\n * double precision\n * real\n * numeric\n * date\n * time\n * timez / time with time zone (avoid this type as it can lead to some gap. see this postgresql issue)\n * timestamp\n * timestampz / timestamp with time zone\n * interval\n * integer[]\n * text[][] (ie. array of array ... it may be of another supported type)\n * json\n * bytea\n\n\n# examples\n\n> execute a query and fetch results on another task to update another table\n\ntasks:\n- id: update\n  type: io.kestra.plugin.jdbc.postgresql.query\n  url: jdbc:postgresql://127.0.0.1:56982/\n  username: postgres\n  password: pg_passwd\n  sql: select concert_id, available, a, b, c, d, play_time, library_record, floatn_test, double_test, real_test, numeric_test, date_type, time_type, timez_type, timestamp_type, timestampz_type, interval_type, pay_by_quarter, schedule, json_type, blob_type from pgsql_types\n  fetch: true\n- id: use-fetched-data\n  type: io.kestra.plugin.jdbc.postgresql.query\n  url: jdbc:postgresql://127.0.0.1:56982/\n  username: postgres\n  password: pg_passwd\n  sql:  \"{% for row in outputs.update.rows %} insert into pl_store_distribute (year_month,store_code, update_date) values ({{row.play_time}}, {{row.concert_id}}, to_timestamp('{{row.timestamp_type}}', 'yyyy-mm-ddthh:mi:ss.us') ); {% endfor %}\"\n\n\n\n# properties\n\n\n# autocommit\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n * default: true\n\n> if autocommit is enabled\n\nsets this connection's auto-commit mode to the given state. if a connection is in auto-commit mode, then all its sql statements will be executed and committed as individual transactions. otherwise, its sql statements are grouped into transactions that are terminated by a call to either the method commitor the method rollback. by default, new connections are in auto-commit mode except if you are using a store properties that will disabled autocommit whenever this properties values.\n\n\n# fetch\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n> whether to fetch the data from the query result to the task output this parameter is evaluated after 'fetchone' and 'store'.\n\n\n# fetchone\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n> whether to fetch only one data row from the query result to the task output. this parameter is evaluated before 'store' and 'fetch'.\n\n\n# fetchsize\n\n * type: integer\n * dynamic: ❌\n * required: ❌\n\n> number of rows that should be fetched\n\ngives the jdbc driver a hint as to the number of rows that should be fetched from the database when more rows are needed for this resultset object. if the fetch size specified is zero, the jdbc driver ignores the value and is free to make its own best guess as to what the fetch size should be. ignored if autocommit is false.\n\n\n# password\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the database user's password\n\n\n# sql\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the sql query to run\n\n\n# ssl\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: false\n\n> is the connection ssl\n\n\n# sslcert\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the ssl cert\n\nmust be a pem encoded certificate\n\n\n# sslkey\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the ssl key\n\nmust be a pem encoded key\n\n\n# sslkeypassword\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the ssl key password\n\n\n# sslmode\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * possible values:\n   \n   * disable\n   * allow\n   * prefer\n   * require\n   * verify_ca\n   * verify_full\n\n> the ssl mode\n\n\n# sslrootcert\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the ssl root cert\n\nmust be a pem encoded certificate\n\n\n# store\n\n * type: boolean\n * dynamic: ✔️\n * required: ❌\n * default: false\n\n> whether to fetch data row from the query result to a file in internal storage. file will be saved as amazon ion (text format).\n> see amazon ion documentation this parameter is evaluated after 'fetchone' but before 'fetch'.\n\n\n# timezoneid\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the time zone id to use for date/time manipulation. default value is the worker default zone id.\n\n\n# url\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the jdbc url to connect to the database\n\n\n# username\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the database user\n\n\n# outputs\n\n\n# row\n\n * type: object\n\n> map containing the first row of fetched data\n\nonly populated if 'fetchone' parameter is set to true.\n\n\n# rows\n\n * type: array\n * subtype: object\n\n> lit of map containing rows of fetched data\n\nonly populated if 'fetch' parameter is set to true.\n\n\n# size\n\n * type: integer\n\n> the size of the fetched rows\n\nonly populated if 'store' or 'fetch' parameter is set to true.\n\n\n# uri\n\n * type: string\n\n> the url of the result file on kestra storage (.ion file / amazon ion text format)\n\nonly populated if 'store' is set to true.\n\n\n# definitions",charsets:{}},{title:"Plugin jdbc redshift",frontmatter:{title:"Plugin jdbc redshift",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Plugin jdbc redshift"},{property:"og:description",content:"Plugin jdbc redshift | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-jdbc-redshift/"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Plugin jdbc redshift"},{name:"twitter:description",content:"Plugin jdbc redshift | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-jdbc-redshift/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-jdbc-redshift/",relativePath:"plugins/plugin-jdbc-redshift/README.md",key:"v-3d3efab0",path:"/plugins/plugin-jdbc-redshift/",headers:[{level:2,title:"Common",slug:"common",normalizedTitle:"common",charIndex:27},{level:3,title:"Tasks",slug:"tasks",normalizedTitle:"tasks",charIndex:38}],headersStr:"Common Tasks",content:"# Plugin jdbc redshift\n\n\n# Common\n\n\n# Tasks\n\n * Query",normalizedContent:"# plugin jdbc redshift\n\n\n# common\n\n\n# tasks\n\n * query",charsets:{}},{title:"Query",frontmatter:{title:"Query",editLink:!1,description:"Query a Redshift server.",icon:"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4KPHN2ZyB2ZXJzaW9uPSIxLjEiIGlkPSJrYXRtYW5fMSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIgeD0iMHB4IiB5PSIwcHgiCiAgICAgdmlld0JveD0iMCAwIDMwNjUuNyAyMDM5LjciIHN0eWxlPSJlbmFibGUtYmFja2dyb3VuZDpuZXcgMCAwIDMwNjUuNyAyMDM5Ljc7IiB4bWw6c3BhY2U9InByZXNlcnZlIj4KPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KCS5zdDB7ZmlsbDojMjA1Qjk3O30KCS5zdDF7ZmlsbDojNTE5M0NFO30KCS5zdDJ7ZmlsbDojMkU3M0I3O30KPC9zdHlsZT4KICAgIDxwYXRoIGNsYXNzPSJzdDAiIGQ9Ik0xNTMyLjgsMTQ5MS44bDY3OC4zLDE2MS41VjM4Mi44bC02NzguMywxNjEuNVYxNDkxLjh6Ii8+CiAgICA8cGF0aCBjbGFzcz0ic3QxIiBkPSJNMjIxMS4xLDM4Mi44bDEyOS4yLDY0LjZ2MTE0MS4zbC0xMjkuMiw2NC42VjM4Mi44eiBNMTUzMi44LDE0OTEuOGwtNjc4LjMsMTYxLjVWMzgyLjhsNjc4LjMsMTYxLjVWMTQ5MS44eiIvPgogICAgPHBhdGggY2xhc3M9InN0MCIgZD0iTTg1NC41LDM4Mi44bC0xMjkuMiw2NC42djExNDEuM2wxMjkuMiw2NC42VjM4Mi44eiIvPgogICAgPHBhdGggY2xhc3M9InN0MSIgZD0iTTE3MDUuMSwxOTExLjdsMjU4LjQtMTI5LjJWMjU3LjJMMTcwNS4xLDEyOGwtNzksODQ3TDE3MDUuMSwxOTExLjd6Ii8+CiAgICA8cGF0aCBjbGFzcz0ic3QwIiBkPSJNMTM2MC41LDE5MTEuN2wtMjU4LjQtMTI5LjJWMjU3LjJMMTM2MC41LDEyOGw3OSw4NDdMMTM2MC41LDE5MTEuN3oiLz4KICAgIDxwYXRoIGNsYXNzPSJzdDIiIGQ9Ik0xMzYwLjUsMTI4aDM0OC4xdjE3ODAuMWgtMzQ4LjFMMTM2MC41LDEyOHoiLz4KPC9zdmc+Cg==",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Query"},{property:"og:description",content:"Query a Redshift server. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-jdbc-redshift/tasks/io.kestra.plugin.jdbc.redshift.Query.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Query"},{name:"twitter:description",content:"Query a Redshift server. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-jdbc-redshift/tasks/io.kestra.plugin.jdbc.redshift.Query.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-jdbc-redshift/tasks/io.kestra.plugin.jdbc.redshift.Query.html",relativePath:"plugins/plugin-jdbc-redshift/tasks/io.kestra.plugin.jdbc.redshift.Query.md",key:"v-fbc18ffa",path:"/plugins/plugin-jdbc-redshift/tasks/io.kestra.plugin.jdbc.redshift.Query.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:85},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:402},{level:3,title:"autoCommit",slug:"autocommit",normalizedTitle:"autocommit",charIndex:417},{level:3,title:"fetch",slug:"fetch",normalizedTitle:"fetch",charIndex:141},{level:3,title:"fetchOne",slug:"fetchone",normalizedTitle:"fetchone",charIndex:382},{level:3,title:"fetchSize",slug:"fetchsize",normalizedTitle:"fetchsize",charIndex:1375},{level:3,title:"password",slug:"password",normalizedTitle:"password",charIndex:325},{level:3,title:"sql",slug:"sql",normalizedTitle:"sql",charIndex:104},{level:3,title:"store",slug:"store",normalizedTitle:"store",charIndex:910},{level:3,title:"timeZoneId",slug:"timezoneid",normalizedTitle:"timezoneid",charIndex:2260},{level:3,title:"url",slug:"url",normalizedTitle:"url",charIndex:222},{level:3,title:"username",slug:"username",normalizedTitle:"username",charIndex:309},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:2600},{level:3,title:"row",slug:"row",normalizedTitle:"row",charIndex:149},{level:3,title:"rows",slug:"rows",normalizedTitle:"rows",charIndex:1445},{level:3,title:"size",slug:"size",normalizedTitle:"size",charIndex:1635},{level:3,title:"uri",slug:"uri",normalizedTitle:"uri",charIndex:3007},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:3160}],headersStr:"Examples Properties autoCommit fetch fetchOne fetchSize password sql store timeZoneId url username Outputs row rows size uri Definitions",content:"Query\n\ntype: \"io.kestra.plugin.jdbc.redshift.Query\"\n\n\n> Query a Redshift server.\n\n\n# Examples\n\n> Send a sql query to a Redshift database and fetch a row as outputs\n\nid: \"query\"\ntype: \"io.kestra.plugin.jdbc.redshift.Query\"\nurl: jdbc:redshift://123456789.eu-central-1.redshift-serverless.amazonaws.com:5439/dev\nusername: admin\npassword: admin_passwd\nsql: select * from redshift_types\nfetchOne: true\n\n\n\n# Properties\n\n\n# autoCommit\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n\n> If autocommit is enabled\n\nSets this connection's auto-commit mode to the given state. If a connection is in auto-commit mode, then all its SQL statements will be executed and committed as individual transactions. Otherwise, its SQL statements are grouped into transactions that are terminated by a call to either the method commitor the method rollback. By default, new connections are in auto-commit mode except if you are using a store properties that will disabled autocommit whenever this properties values.\n\n\n# fetch\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n> Whether to fetch the data from the query result to the task output This parameter is evaluated after 'fetchOne' and 'store'.\n\n\n# fetchOne\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n> Whether to fetch only one data row from the query result to the task output. This parameter is evaluated before 'store' and 'fetch'.\n\n\n# fetchSize\n\n * Type: integer\n * Dynamic: ❌\n * Required: ❌\n\n> Number of rows that should be fetched\n\nGives the JDBC driver a hint as to the number of rows that should be fetched from the database when more rows are needed for this ResultSet object. If the fetch size specified is zero, the JDBC driver ignores the value and is free to make its own best guess as to what the fetch size should be. Ignored if autoCommit is false.\n\n\n# password\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The database user's password\n\n\n# sql\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The sql query to run\n\n\n# store\n\n * Type: boolean\n * Dynamic: ✔️\n * Required: ❌\n\n> Whether to fetch data row from the query result to a file in internal storage. File will be saved as Amazon Ion (text format).\n> See Amazon Ion documentation This parameter is evaluated after 'fetchOne' but before 'fetch'.\n\n\n# timeZoneId\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The time zone id to use for date/time manipulation. Default value is the worker default zone id.\n\n\n# url\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The jdbc url to connect to the database\n\n\n# username\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The database user\n\n\n# Outputs\n\n\n# row\n\n * Type: object\n\n> Map containing the first row of fetched data\n\nOnly populated if 'fetchOne' parameter is set to true.\n\n\n# rows\n\n * Type: array\n * SubType: object\n\n> Lit of map containing rows of fetched data\n\nOnly populated if 'fetch' parameter is set to true.\n\n\n# size\n\n * Type: integer\n\n> The size of the fetched rows\n\nOnly populated if 'store' or 'fetch' parameter is set to true.\n\n\n# uri\n\n * Type: string\n\n> The url of the result file on kestra storage (.ion file / Amazon Ion text format)\n\nOnly populated if 'store' is set to true.\n\n\n# Definitions",normalizedContent:"query\n\ntype: \"io.kestra.plugin.jdbc.redshift.query\"\n\n\n> query a redshift server.\n\n\n# examples\n\n> send a sql query to a redshift database and fetch a row as outputs\n\nid: \"query\"\ntype: \"io.kestra.plugin.jdbc.redshift.query\"\nurl: jdbc:redshift://123456789.eu-central-1.redshift-serverless.amazonaws.com:5439/dev\nusername: admin\npassword: admin_passwd\nsql: select * from redshift_types\nfetchone: true\n\n\n\n# properties\n\n\n# autocommit\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n\n> if autocommit is enabled\n\nsets this connection's auto-commit mode to the given state. if a connection is in auto-commit mode, then all its sql statements will be executed and committed as individual transactions. otherwise, its sql statements are grouped into transactions that are terminated by a call to either the method commitor the method rollback. by default, new connections are in auto-commit mode except if you are using a store properties that will disabled autocommit whenever this properties values.\n\n\n# fetch\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n> whether to fetch the data from the query result to the task output this parameter is evaluated after 'fetchone' and 'store'.\n\n\n# fetchone\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n> whether to fetch only one data row from the query result to the task output. this parameter is evaluated before 'store' and 'fetch'.\n\n\n# fetchsize\n\n * type: integer\n * dynamic: ❌\n * required: ❌\n\n> number of rows that should be fetched\n\ngives the jdbc driver a hint as to the number of rows that should be fetched from the database when more rows are needed for this resultset object. if the fetch size specified is zero, the jdbc driver ignores the value and is free to make its own best guess as to what the fetch size should be. ignored if autocommit is false.\n\n\n# password\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the database user's password\n\n\n# sql\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the sql query to run\n\n\n# store\n\n * type: boolean\n * dynamic: ✔️\n * required: ❌\n\n> whether to fetch data row from the query result to a file in internal storage. file will be saved as amazon ion (text format).\n> see amazon ion documentation this parameter is evaluated after 'fetchone' but before 'fetch'.\n\n\n# timezoneid\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the time zone id to use for date/time manipulation. default value is the worker default zone id.\n\n\n# url\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the jdbc url to connect to the database\n\n\n# username\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the database user\n\n\n# outputs\n\n\n# row\n\n * type: object\n\n> map containing the first row of fetched data\n\nonly populated if 'fetchone' parameter is set to true.\n\n\n# rows\n\n * type: array\n * subtype: object\n\n> lit of map containing rows of fetched data\n\nonly populated if 'fetch' parameter is set to true.\n\n\n# size\n\n * type: integer\n\n> the size of the fetched rows\n\nonly populated if 'store' or 'fetch' parameter is set to true.\n\n\n# uri\n\n * type: string\n\n> the url of the result file on kestra storage (.ion file / amazon ion text format)\n\nonly populated if 'store' is set to true.\n\n\n# definitions",charsets:{}},{title:"Plugin jdbc vertica",frontmatter:{title:"Plugin jdbc vertica",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Plugin jdbc vertica"},{property:"og:description",content:"Plugin jdbc vertica | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-jdbc-vertica/"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Plugin jdbc vertica"},{name:"twitter:description",content:"Plugin jdbc vertica | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-jdbc-vertica/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-jdbc-vertica/",relativePath:"plugins/plugin-jdbc-vertica/README.md",key:"v-9ad35d10",path:"/plugins/plugin-jdbc-vertica/",headers:[{level:2,title:"Common",slug:"common",normalizedTitle:"common",charIndex:26},{level:3,title:"Tasks",slug:"tasks",normalizedTitle:"tasks",charIndex:37}],headersStr:"Common Tasks",content:"# Plugin jdbc vertica\n\n\n# Common\n\n\n# Tasks\n\n * Query",normalizedContent:"# plugin jdbc vertica\n\n\n# common\n\n\n# tasks\n\n * query",charsets:{}},{title:"Query",frontmatter:{title:"Query",editLink:!1,description:"Vertica Query Task.",icon:"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9Im5vIj8+CjwhLS0gR2VuZXJhdG9yOiBBZG9iZSBJbGx1c3RyYXRvciAxOS4wLjAsIFNWRyBFeHBvcnQgUGx1Zy1JbiAuIFNWRyBWZXJzaW9uOiA2LjAwIEJ1aWxkIDApICAtLT4KCjxzdmcKICAgeG1sbnM6ZGM9Imh0dHA6Ly9wdXJsLm9yZy9kYy9lbGVtZW50cy8xLjEvIgogICB4bWxuczpjYz0iaHR0cDovL2NyZWF0aXZlY29tbW9ucy5vcmcvbnMjIgogICB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiCiAgIHhtbG5zOnN2Zz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciCiAgIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIKICAgeG1sbnM6c29kaXBvZGk9Imh0dHA6Ly9zb2RpcG9kaS5zb3VyY2Vmb3JnZS5uZXQvRFREL3NvZGlwb2RpLTAuZHRkIgogICB4bWxuczppbmtzY2FwZT0iaHR0cDovL3d3dy5pbmtzY2FwZS5vcmcvbmFtZXNwYWNlcy9pbmtzY2FwZSIKICAgdmVyc2lvbj0iMS4xIgogICBpZD0iTGF5ZXJfMSIKICAgeD0iMHB4IgogICB5PSIwcHgiCiAgIHZpZXdCb3g9IjAgMCA0MzIuNzAwMDEgODQuODAwMDAzIgogICB4bWw6c3BhY2U9InByZXNlcnZlIgogICBzb2RpcG9kaTpkb2NuYW1lPSJWZXJ0aWNhX3Bvc19ibGtfcmdiLnN2ZyIKICAgd2lkdGg9IjQzMi43MDAwMSIKICAgaGVpZ2h0PSI4NC44MDAwMDMiCiAgIGlua3NjYXBlOnZlcnNpb249IjAuOTIuNSAoMjA2MGVjMWY5ZiwgMjAyMC0wNC0wOCkiPjxtZXRhZGF0YQogICBpZD0ibWV0YWRhdGExOSI+PHJkZjpSREY+PGNjOldvcmsKICAgICAgIHJkZjphYm91dD0iIj48ZGM6Zm9ybWF0PmltYWdlL3N2Zyt4bWw8L2RjOmZvcm1hdD48ZGM6dHlwZQogICAgICAgICByZGY6cmVzb3VyY2U9Imh0dHA6Ly9wdXJsLm9yZy9kYy9kY21pdHlwZS9TdGlsbEltYWdlIiAvPjwvY2M6V29yaz48L3JkZjpSREY+PC9tZXRhZGF0YT48ZGVmcwogICBpZD0iZGVmczE3IiAvPjxzb2RpcG9kaTpuYW1lZHZpZXcKICAgcGFnZWNvbG9yPSIjZmZmZmZmIgogICBib3JkZXJjb2xvcj0iIzY2NjY2NiIKICAgYm9yZGVyb3BhY2l0eT0iMSIKICAgb2JqZWN0dG9sZXJhbmNlPSIxMCIKICAgZ3JpZHRvbGVyYW5jZT0iMTAiCiAgIGd1aWRldG9sZXJhbmNlPSIxMCIKICAgaW5rc2NhcGU6cGFnZW9wYWNpdHk9IjAiCiAgIGlua3NjYXBlOnBhZ2VzaGFkb3c9IjIiCiAgIGlua3NjYXBlOndpbmRvdy13aWR0aD0iMTkyMCIKICAgaW5rc2NhcGU6d2luZG93LWhlaWdodD0iMTAyMiIKICAgaWQ9Im5hbWVkdmlldzE1IgogICBzaG93Z3JpZD0iZmFsc2UiCiAgIGlua3NjYXBlOnpvb209IjAuMzM1ODU4NTkiCiAgIGlua3NjYXBlOmN4PSIyMTUuOCIKICAgaW5rc2NhcGU6Y3k9IjQyLjkiCiAgIGlua3NjYXBlOndpbmRvdy14PSIyNTYwIgogICBpbmtzY2FwZTp3aW5kb3cteT0iMCIKICAgaW5rc2NhcGU6d2luZG93LW1heGltaXplZD0iMSIKICAgaW5rc2NhcGU6Y3VycmVudC1sYXllcj0iTGF5ZXJfMSIgLz4KPHBvbHlnb24KICAgcG9pbnRzPSIyNTcuOCwyNjcgMjU3LjgsMjY3IDIyNi40LDMyMi41IDE5NS4xLDI2NyAxODAuMiwyNjcgMjI2LjUsMzQ4LjkgMjY1LjQsMjgwIDMxMy42LDI4MCAzMTMuNiwyNjcgMjU3LjgsMjY3ICIKICAgaWQ9InBvbHlnb24yIgogICB0cmFuc2Zvcm09InRyYW5zbGF0ZSgtMTgwLjIsLTI2NC4xKSIgLz4KPHBvbHlnb24KICAgcG9pbnRzPSIyNTguMiwzMDAgMjU4LjIsMzQ1LjMgMzEzLjYsMzQ1LjMgMzEzLjYsMzMyLjMgMjcxLjIsMzMyLjMgMjcxLjIsMzEzIDMxMy42LDMxMyAzMTMuNiwzMDAgIgogICBpZD0icG9seWdvbjQiCiAgIHRyYW5zZm9ybT0idHJhbnNsYXRlKC0xODAuMiwtMjY0LjEpIiAvPgo8cmVjdAogICB4PSIyNzAuNSIKICAgeT0iMi45MDAwMDAxIgogICB3aWR0aD0iMTMiCiAgIGhlaWdodD0iNzguMzAwMDAzIgogICBpZD0icmVjdDYiIC8+CjxwYXRoCiAgIGQ9Ik0gMjY1LjQsMi45IEggMTk5IHYgMC4yIGMgNC4xLDMuMyA3LjIsNy43IDksMTIuOCBoIDE3LjcgdiA2NS4zIGggMTMgViAxNS45IGggMjYuNyB6IgogICBpZD0icGF0aDgiCiAgIGlua3NjYXBlOmNvbm5lY3Rvci1jdXJ2YXR1cmU9IjAiIC8+CjxwYXRoCiAgIGQ9Im0gMTk1LjgsODEuMiBoIDEzIEwgMTg5LjYsNDYgYyA4LjIsLTMuMyAxNCwtMTEuNCAxNCwtMjAuNyAwLC0xMi40IC0xMCwtMjIuNCAtMjIuNCwtMjIuNCBoIC0yOS40IC04LjcgLTQuMyB2IDc4LjMgaCAxMyBWIDQ3LjYgaCAyNS43IHogbSAtNDQsLTY1LjMgaCAyOS40IGMgNS4yLDAgOS40LDQuMiA5LjQsOS40IDAsNS4yIC00LjIsOS40IC05LjQsOS40IGggLTI5LjQgeiIKICAgaWQ9InBhdGgxMCIKICAgaW5rc2NhcGU6Y29ubmVjdG9yLWN1cnZhdHVyZT0iMCIgLz4KPHBhdGgKICAgZD0ibSAzODMuOSwwIHYgMCBsIC0zMy40LDU1LjYgdiAwLjEgMCBjIC00LjcsNy44IC0xMy4yLDEzIC0yMi45LDEzIC0xNC44LDAgLTI2LjgsLTEyIC0yNi44LC0yNi44IDAsLTE0LjggMTIsLTI2LjggMjYuOCwtMjYuOCA5LjEsMCAxNy4xLDQuNSAyMiwxMS41IGwgNywtMTEuNyBDIDM0OS40LDcuMSAzMzkuMSwyLjMgMzI3LjYsMi4zIDMwNS43LDIuMyAyODgsMjAgMjg4LDQxLjkgYyAwLDIxLjkgMTcuNywzOS42IDM5LjYsMzkuNiAxNC40LDAgMjcsLTcuNyAzNCwtMTkuMiB2IDAgbCAyMi4zLC0zNy4yIDMzLjgsNTYuMyAxNSwtMC4yIHoiCiAgIGlkPSJwYXRoMTIiCiAgIGlua3NjYXBlOmNvbm5lY3Rvci1jdXJ2YXR1cmU9IjAiIC8+Cjwvc3ZnPg==",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Query"},{property:"og:description",content:"Vertica Query Task. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-jdbc-vertica/tasks/io.kestra.plugin.jdbc.vertica.Query.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Query"},{name:"twitter:description",content:"Vertica Query Task. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-jdbc-vertica/tasks/io.kestra.plugin.jdbc.vertica.Query.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-jdbc-vertica/tasks/io.kestra.plugin.jdbc.vertica.Query.html",relativePath:"plugins/plugin-jdbc-vertica/tasks/io.kestra.plugin.jdbc.vertica.Query.md",key:"v-02960fc3",path:"/plugins/plugin-jdbc-vertica/tasks/io.kestra.plugin.jdbc.vertica.Query.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:79},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:333},{level:3,title:"autoCommit",slug:"autocommit",normalizedTitle:"autocommit",charIndex:348},{level:3,title:"fetch",slug:"fetch",normalizedTitle:"fetch",charIndex:123},{level:3,title:"fetchOne",slug:"fetchone",normalizedTitle:"fetchone",charIndex:313},{level:3,title:"fetchSize",slug:"fetchsize",normalizedTitle:"fetchsize",charIndex:1306},{level:3,title:"password",slug:"password",normalizedTitle:"password",charIndex:260},{level:3,title:"sql",slug:"sql",normalizedTitle:"sql",charIndex:285},{level:3,title:"store",slug:"store",normalizedTitle:"store",charIndex:841},{level:3,title:"timeZoneId",slug:"timezoneid",normalizedTitle:"timezoneid",charIndex:2191},{level:3,title:"url",slug:"url",normalizedTitle:"url",charIndex:203},{level:3,title:"username",slug:"username",normalizedTitle:"username",charIndex:242},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:2531},{level:3,title:"row",slug:"row",normalizedTitle:"row",charIndex:131},{level:3,title:"rows",slug:"rows",normalizedTitle:"rows",charIndex:1376},{level:3,title:"size",slug:"size",normalizedTitle:"size",charIndex:1566},{level:3,title:"uri",slug:"uri",normalizedTitle:"uri",charIndex:2938},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:3091}],headersStr:"Examples Properties autoCommit fetch fetchOne fetchSize password sql store timeZoneId url username Outputs row rows size uri Definitions",content:"Query\n\ntype: \"io.kestra.plugin.jdbc.vertica.Query\"\n\n\n> Vertica Query Task.\n\n\n# Examples\n\n> Request a Vertical Database and fetch a row as outputs\n\nid: \"query\"\ntype: \"io.kestra.plugin.jdbc.vertica.Query\"\nurl: jdbc:vertica://127.0.0.1:56982/db\nusername: dbadmin\npassword: vertica_passwd\nsql: select * from customer\nfetchOne: true\n\n\n\n# Properties\n\n\n# autoCommit\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n\n> If autocommit is enabled\n\nSets this connection's auto-commit mode to the given state. If a connection is in auto-commit mode, then all its SQL statements will be executed and committed as individual transactions. Otherwise, its SQL statements are grouped into transactions that are terminated by a call to either the method commitor the method rollback. By default, new connections are in auto-commit mode except if you are using a store properties that will disabled autocommit whenever this properties values.\n\n\n# fetch\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n> Whether to fetch the data from the query result to the task output This parameter is evaluated after 'fetchOne' and 'store'.\n\n\n# fetchOne\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n> Whether to fetch only one data row from the query result to the task output. This parameter is evaluated before 'store' and 'fetch'.\n\n\n# fetchSize\n\n * Type: integer\n * Dynamic: ❌\n * Required: ❌\n\n> Number of rows that should be fetched\n\nGives the JDBC driver a hint as to the number of rows that should be fetched from the database when more rows are needed for this ResultSet object. If the fetch size specified is zero, the JDBC driver ignores the value and is free to make its own best guess as to what the fetch size should be. Ignored if autoCommit is false.\n\n\n# password\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The database user's password\n\n\n# sql\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The sql query to run\n\n\n# store\n\n * Type: boolean\n * Dynamic: ✔️\n * Required: ❌\n\n> Whether to fetch data row from the query result to a file in internal storage. File will be saved as Amazon Ion (text format).\n> See Amazon Ion documentation This parameter is evaluated after 'fetchOne' but before 'fetch'.\n\n\n# timeZoneId\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The time zone id to use for date/time manipulation. Default value is the worker default zone id.\n\n\n# url\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The jdbc url to connect to the database\n\n\n# username\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The database user\n\n\n# Outputs\n\n\n# row\n\n * Type: object\n\n> Map containing the first row of fetched data\n\nOnly populated if 'fetchOne' parameter is set to true.\n\n\n# rows\n\n * Type: array\n * SubType: object\n\n> Lit of map containing rows of fetched data\n\nOnly populated if 'fetch' parameter is set to true.\n\n\n# size\n\n * Type: integer\n\n> The size of the fetched rows\n\nOnly populated if 'store' or 'fetch' parameter is set to true.\n\n\n# uri\n\n * Type: string\n\n> The url of the result file on kestra storage (.ion file / Amazon Ion text format)\n\nOnly populated if 'store' is set to true.\n\n\n# Definitions",normalizedContent:"query\n\ntype: \"io.kestra.plugin.jdbc.vertica.query\"\n\n\n> vertica query task.\n\n\n# examples\n\n> request a vertical database and fetch a row as outputs\n\nid: \"query\"\ntype: \"io.kestra.plugin.jdbc.vertica.query\"\nurl: jdbc:vertica://127.0.0.1:56982/db\nusername: dbadmin\npassword: vertica_passwd\nsql: select * from customer\nfetchone: true\n\n\n\n# properties\n\n\n# autocommit\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n\n> if autocommit is enabled\n\nsets this connection's auto-commit mode to the given state. if a connection is in auto-commit mode, then all its sql statements will be executed and committed as individual transactions. otherwise, its sql statements are grouped into transactions that are terminated by a call to either the method commitor the method rollback. by default, new connections are in auto-commit mode except if you are using a store properties that will disabled autocommit whenever this properties values.\n\n\n# fetch\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n> whether to fetch the data from the query result to the task output this parameter is evaluated after 'fetchone' and 'store'.\n\n\n# fetchone\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n> whether to fetch only one data row from the query result to the task output. this parameter is evaluated before 'store' and 'fetch'.\n\n\n# fetchsize\n\n * type: integer\n * dynamic: ❌\n * required: ❌\n\n> number of rows that should be fetched\n\ngives the jdbc driver a hint as to the number of rows that should be fetched from the database when more rows are needed for this resultset object. if the fetch size specified is zero, the jdbc driver ignores the value and is free to make its own best guess as to what the fetch size should be. ignored if autocommit is false.\n\n\n# password\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the database user's password\n\n\n# sql\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the sql query to run\n\n\n# store\n\n * type: boolean\n * dynamic: ✔️\n * required: ❌\n\n> whether to fetch data row from the query result to a file in internal storage. file will be saved as amazon ion (text format).\n> see amazon ion documentation this parameter is evaluated after 'fetchone' but before 'fetch'.\n\n\n# timezoneid\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the time zone id to use for date/time manipulation. default value is the worker default zone id.\n\n\n# url\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the jdbc url to connect to the database\n\n\n# username\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the database user\n\n\n# outputs\n\n\n# row\n\n * type: object\n\n> map containing the first row of fetched data\n\nonly populated if 'fetchone' parameter is set to true.\n\n\n# rows\n\n * type: array\n * subtype: object\n\n> lit of map containing rows of fetched data\n\nonly populated if 'fetch' parameter is set to true.\n\n\n# size\n\n * type: integer\n\n> the size of the fetched rows\n\nonly populated if 'store' or 'fetch' parameter is set to true.\n\n\n# uri\n\n * type: string\n\n> the url of the result file on kestra storage (.ion file / amazon ion text format)\n\nonly populated if 'store' is set to true.\n\n\n# definitions",charsets:{}},{title:"Plugin kubernetes",frontmatter:{title:"Plugin kubernetes",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Plugin kubernetes"},{property:"og:description",content:"Plugin kubernetes | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-kubernetes/"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Plugin kubernetes"},{name:"twitter:description",content:"Plugin kubernetes | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-kubernetes/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-kubernetes/",relativePath:"plugins/plugin-kubernetes/README.md",key:"v-29f37a98",path:"/plugins/plugin-kubernetes/",headers:[{level:2,title:"Common",slug:"common",normalizedTitle:"common",charIndex:24},{level:3,title:"Tasks",slug:"tasks",normalizedTitle:"tasks",charIndex:35}],headersStr:"Common Tasks",content:"# Plugin kubernetes\n\n\n# Common\n\n\n# Tasks\n\n * JobCreate\n * PodCreate",normalizedContent:"# plugin kubernetes\n\n\n# common\n\n\n# tasks\n\n * jobcreate\n * podcreate",charsets:{}},{title:"JobCreate",frontmatter:{title:"JobCreate",editLink:!1,description:"Create a job on a kubernetes cluster.",icon:"",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"JobCreate"},{property:"og:description",content:"Create a job on a kubernetes cluster. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-kubernetes/tasks/io.kestra.plugin.kubernetes.JobCreate.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"JobCreate"},{name:"twitter:description",content:"Create a job on a kubernetes cluster. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-kubernetes/tasks/io.kestra.plugin.kubernetes.JobCreate.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-kubernetes/tasks/io.kestra.plugin.kubernetes.JobCreate.html",relativePath:"plugins/plugin-kubernetes/tasks/io.kestra.plugin.kubernetes.JobCreate.md",key:"v-c01409fa",path:"/plugins/plugin-kubernetes/tasks/io.kestra.plugin.kubernetes.JobCreate.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:103},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:488},{level:3,title:"connection",slug:"connection",normalizedTitle:"connection",charIndex:503},{level:3,title:"delete",slug:"delete",normalizedTitle:"delete",charIndex:894},{level:3,title:"metadata",slug:"metadata",normalizedTitle:"metadata",charIndex:195},{level:3,title:"namespace",slug:"namespace",normalizedTitle:"namespace",charIndex:176},{level:3,title:"spec",slug:"spec",normalizedTitle:"spec",charIndex:238},{level:3,title:"waitRunning",slug:"waitrunning",normalizedTitle:"waitrunning",charIndex:1302},{level:3,title:"waitUntilRunning",slug:"waituntilrunning",normalizedTitle:"waituntilrunning",charIndex:1476},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1791},{level:3,title:"jobMetadata",slug:"jobmetadata",normalizedTitle:"jobmetadata",charIndex:1803},{level:3,title:"jobStatus",slug:"jobstatus",normalizedTitle:"jobstatus",charIndex:1863},{level:3,title:"podMetadata",slug:"podmetadata",normalizedTitle:"podmetadata",charIndex:1920},{level:3,title:"podStatus",slug:"podstatus",normalizedTitle:"podstatus",charIndex:1980},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:2037},{level:3,title:"ContainerState",slug:"containerstate",normalizedTitle:"containerstate",charIndex:2053},{level:3,title:"PodCondition",slug:"podcondition",normalizedTitle:"podcondition",charIndex:2294},{level:3,title:"Connection",slug:"connection-2",normalizedTitle:"connection",charIndex:524},{level:3,title:"Metadata",slug:"metadata-2",normalizedTitle:"metadata",charIndex:1806},{level:3,title:"JobCondition",slug:"jobcondition",normalizedTitle:"jobcondition",charIndex:5982},{level:3,title:"Task-2",slug:"task-2",normalizedTitle:"task-2",charIndex:6299},{level:3,title:"Task-1",slug:"task-1",normalizedTitle:"task-1",charIndex:6310},{level:3,title:"OAuthTokenProvider",slug:"oauthtokenprovider-2",normalizedTitle:"oauthtokenprovider",charIndex:4117},{level:3,title:"OwnerReference",slug:"ownerreference",normalizedTitle:"ownerreference",charIndex:5634},{level:3,title:"FieldsV1",slug:"fieldsv1",normalizedTitle:"fieldsv1",charIndex:6824},{level:3,title:"ContainerStateTerminated",slug:"containerstateterminated",normalizedTitle:"containerstateterminated",charIndex:2164},{level:3,title:"ManagedFieldsEntry",slug:"managedfieldsentry",normalizedTitle:"managedfieldsentry",charIndex:5347},{level:3,title:"PodStatus",slug:"podstatus-2",normalizedTitle:"podstatus",charIndex:2e3},{level:3,title:"JobStatus",slug:"jobstatus-2",normalizedTitle:"jobstatus",charIndex:1883},{level:3,title:"ContainerStateRunning",slug:"containerstaterunning",normalizedTitle:"containerstaterunning",charIndex:2089},{level:3,title:"ContainerStatus",slug:"containerstatus",normalizedTitle:"containerstatus",charIndex:7922},{level:3,title:"ContainerStateWaiting",slug:"containerstatewaiting",normalizedTitle:"containerstatewaiting",charIndex:2239},{level:3,title:"PodIP",slug:"podip-2",normalizedTitle:"podip",charIndex:8496}],headersStr:"Examples Properties connection delete metadata namespace spec waitRunning waitUntilRunning Outputs jobMetadata jobStatus podMetadata podStatus Definitions ContainerState PodCondition Connection Metadata JobCondition Task-2 Task-1 OAuthTokenProvider OwnerReference FieldsV1 ContainerStateTerminated ManagedFieldsEntry PodStatus JobStatus ContainerStateRunning ContainerStatus ContainerStateWaiting PodIP",content:"JobCreate\n\ntype: \"io.kestra.plugin.kubernetes.JobCreate\"\n\n\n> Create a job on a kubernetes cluster.\n\n\n# Examples\n\nid: \"job_create\"\ntype: \"io.kestra.plugin.kubernetes.JobCreate\"\nnamespace: default\nmetadata:\n  labels:\n    my-label: my-value\nspec:\n  template:\n    spec:\n      containers:\n      - name: unittest\n        image: debian:stable-slim\n        command: \n          - 'bash' \n          - '-c'\n          - 'for i in {1..10}; do echo $i; sleep 0.1; done'\n      restartPolicy: Never\n\n\n\n# Properties\n\n\n# connection\n\n * Type: Connection\n * Dynamic: ❓\n * Required: ❌\n\n> The connection parameters to Kubernetes cluster\n\nIf no connection is defined, we try to load connection from current context in order below:\n\n 1. System properties\n 2. Environment variables\n 3. Kube config file\n 4. Service account token & mounted CA certificate\n\nYou can pass a full configuration with all option if needed\n\n\n# delete\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ✔️\n * Default: true\n\n> If the job will be deleted on completion\n\n\n# metadata\n\n * Type: object\n * Dynamic: ✔️\n * Required: ❌\n\n> Full metadata yaml for a job.\n\n\n# namespace\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The namespace where the job will be created\n\n\n# spec\n\n * Type: object\n * Dynamic: ✔️\n * Required: ✔️\n\n> Full spec yaml for a job.\n\n\n# waitRunning\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n * Default: 3600.000000000\n * Format: duration\n\n> The maximum duration we need to wait until the job complete.\n\n\n# waitUntilRunning\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n * Default: 600.000000000\n * Format: duration\n\n> The maximum duration we need to wait until the job & the pod is created.\n\nThis timeout is the maximum time that k8s scheduler take to\n\n * schedule the job\n * pull the pod image\n * and start the pod\n\n\n# Outputs\n\n\n# jobMetadata\n\n * Type: Metadata\n\n> The full job metadata\n\n\n# jobStatus\n\n * Type: JobStatus\n\n> The full job status\n\n\n# podMetadata\n\n * Type: Metadata\n\n> The full pod metadata\n\n\n# podStatus\n\n * Type: PodStatus\n\n> The full pod status\n\n\n# Definitions\n\n\n# ContainerState\n\n# running\n\n * Type: ContainerStateRunning\n * Dynamic: ❓\n * Required: ❌\n\n# terminated\n\n * Type: ContainerStateTerminated\n * Dynamic: ❓\n * Required: ❌\n\n# waiting\n\n * Type: ContainerStateWaiting\n * Dynamic: ❓\n * Required: ❌\n\n\n# PodCondition\n\n# lastProbeTime\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# lastTransitionTime\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# message\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# reason\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# status\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n\n# Connection\n\n# apiVersion\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: v1\n\n> The api version of API to use\n\n# caCertData\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> CA certificate as data (\n\n# caCertFile\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> CA certificate as file path\n\n# clientCertData\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Client certificate as data\n\n# clientCertFile\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Client certificate as file path\n\n# clientKeyAlgo\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: RSA\n\n> Client key encryption algorithm\n\ndefault is RSA\n\n# clientKeyData\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Client Key as data\n\n# clientKeyFile\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Client Key as file path\n\n# clientKeyPassphrase\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Client key passphrase\n\n# disableHostnameVerification\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n> Disable hostname verification\n\n# keyStoreFile\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Key store file\n\n# keyStorePassphrase\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Key store passphrase\n\n# masterUrl\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: https://kubernetes.default.svc\n\n> The url to kubernetes API\n\n# namespace\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The namespace used\n\n# oauthToken\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Oauth token\n\n# oauthTokenProvider\n\n * Type: OAuthTokenProvider\n * Dynamic: ❌\n * Required: ❌\n\n> Oauth token provider\n\n# trustCerts\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n> Trust all certificates\n\n# trustStoreFile\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Truststore file\n\n# trustStorePassphrase\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Truststore passphrase\n\n\n# Metadata\n\n# annotations\n\n * Type: object\n * Dynamic: ❓\n * Required: ❌\n\n> List of all annotations of the resource\n\n# clusterName\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Name of the current cluster\n\n# creationTimestamp\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Creation datetime\n\n# deletionGracePeriodSeconds\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n> Deletetion grace period in seconds\n\n# deletionTimestamp\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Deletetion datetime\n\n# finalizers\n\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n\n> List of finalizers\n\n# generateName\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Generate name of the resource\n\n# generation\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n> Generation\n\n# labels\n\n * Type: object\n * Dynamic: ❓\n * Required: ❌\n\n> List of labels\n\n# managedFields\n\n * Type: array\n * SubType: ManagedFieldsEntry\n * Dynamic: ❓\n * Required: ❌\n\n> List of managed fields\n\n# name\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Name of the resource\n\n# namespace\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Namespace of the resource\n\n# ownerReferences\n\n * Type: array\n * SubType: OwnerReference\n * Dynamic: ❓\n * Required: ❌\n\n> List of owner reference\n\n# resourceVersion\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Resource version\n\n# selfLink\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Direct link on the api of this resource\n\n# uid\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Generated Uid of this resource\n\n\n# JobCondition\n\n# lastProbeTime\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# lastTransitionTime\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# message\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# reason\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# status\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n\n# Task-2\n\n\n# Task-1\n\n\n# OAuthTokenProvider\n\n# output\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# task\n\n * Type: Task-2\n * Dynamic: ❓\n * Required: ❌\n\n\n# OwnerReference\n\n# apiVersion\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# blockOwnerDeletion\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n# controller\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n# kind\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# name\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# uid\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n\n# FieldsV1\n\n\n# ContainerStateTerminated\n\n# containerID\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# exitCode\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n# finishedAt\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# message\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# reason\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# signal\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n# startedAt\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n\n# ManagedFieldsEntry\n\n# apiVersion\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# fieldsType\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# fieldsV1\n\n * Type: FieldsV1\n * Dynamic: ❓\n * Required: ❌\n\n# manager\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# operation\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# subresource\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# time\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n\n# PodStatus\n\n# additionalProperties\n\n * Type: object\n * Dynamic: ❓\n * Required: ❌\n\n# conditions\n\n * Type: array\n * SubType: PodCondition\n * Dynamic: ❓\n * Required: ❌\n\n# containerStatuses\n\n * Type: array\n * SubType: ContainerStatus\n * Dynamic: ❓\n * Required: ❌\n\n# ephemeralContainerStatuses\n\n * Type: array\n * SubType: ContainerStatus\n * Dynamic: ❓\n * Required: ❌\n\n# hostIP\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# initContainerStatuses\n\n * Type: array\n * SubType: ContainerStatus\n * Dynamic: ❓\n * Required: ❌\n\n# message\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# nominatedNodeName\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# phase\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# podIP\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# podIPs\n\n * Type: array\n * SubType: PodIP\n * Dynamic: ❓\n * Required: ❌\n\n# qosClass\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# reason\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# startTime\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n\n# JobStatus\n\n# active\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n# additionalProperties\n\n * Type: object\n * Dynamic: ❓\n * Required: ❌\n\n# completionTime\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# conditions\n\n * Type: array\n * SubType: JobCondition\n * Dynamic: ❓\n * Required: ❌\n\n# failed\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n# startTime\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# succeeded\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n\n# ContainerStateRunning\n\n# startedAt\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n\n# ContainerStatus\n\n# containerID\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# image\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# imageID\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# lastState\n\n * Type: ContainerState\n * Dynamic: ❓\n * Required: ❌\n\n# name\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# ready\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n# restartCount\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n# started\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n# state\n\n * Type: ContainerState\n * Dynamic: ❓\n * Required: ❌\n\n\n# ContainerStateWaiting\n\n# message\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# reason\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n\n# PodIP\n\n# ip\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌",normalizedContent:"jobcreate\n\ntype: \"io.kestra.plugin.kubernetes.jobcreate\"\n\n\n> create a job on a kubernetes cluster.\n\n\n# examples\n\nid: \"job_create\"\ntype: \"io.kestra.plugin.kubernetes.jobcreate\"\nnamespace: default\nmetadata:\n  labels:\n    my-label: my-value\nspec:\n  template:\n    spec:\n      containers:\n      - name: unittest\n        image: debian:stable-slim\n        command: \n          - 'bash' \n          - '-c'\n          - 'for i in {1..10}; do echo $i; sleep 0.1; done'\n      restartpolicy: never\n\n\n\n# properties\n\n\n# connection\n\n * type: connection\n * dynamic: ❓\n * required: ❌\n\n> the connection parameters to kubernetes cluster\n\nif no connection is defined, we try to load connection from current context in order below:\n\n 1. system properties\n 2. environment variables\n 3. kube config file\n 4. service account token & mounted ca certificate\n\nyou can pass a full configuration with all option if needed\n\n\n# delete\n\n * type: boolean\n * dynamic: ❓\n * required: ✔️\n * default: true\n\n> if the job will be deleted on completion\n\n\n# metadata\n\n * type: object\n * dynamic: ✔️\n * required: ❌\n\n> full metadata yaml for a job.\n\n\n# namespace\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the namespace where the job will be created\n\n\n# spec\n\n * type: object\n * dynamic: ✔️\n * required: ✔️\n\n> full spec yaml for a job.\n\n\n# waitrunning\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n * default: 3600.000000000\n * format: duration\n\n> the maximum duration we need to wait until the job complete.\n\n\n# waituntilrunning\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n * default: 600.000000000\n * format: duration\n\n> the maximum duration we need to wait until the job & the pod is created.\n\nthis timeout is the maximum time that k8s scheduler take to\n\n * schedule the job\n * pull the pod image\n * and start the pod\n\n\n# outputs\n\n\n# jobmetadata\n\n * type: metadata\n\n> the full job metadata\n\n\n# jobstatus\n\n * type: jobstatus\n\n> the full job status\n\n\n# podmetadata\n\n * type: metadata\n\n> the full pod metadata\n\n\n# podstatus\n\n * type: podstatus\n\n> the full pod status\n\n\n# definitions\n\n\n# containerstate\n\n# running\n\n * type: containerstaterunning\n * dynamic: ❓\n * required: ❌\n\n# terminated\n\n * type: containerstateterminated\n * dynamic: ❓\n * required: ❌\n\n# waiting\n\n * type: containerstatewaiting\n * dynamic: ❓\n * required: ❌\n\n\n# podcondition\n\n# lastprobetime\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# lasttransitiontime\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# message\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# reason\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# status\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n\n# connection\n\n# apiversion\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n * default: v1\n\n> the api version of api to use\n\n# cacertdata\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> ca certificate as data (\n\n# cacertfile\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> ca certificate as file path\n\n# clientcertdata\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> client certificate as data\n\n# clientcertfile\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> client certificate as file path\n\n# clientkeyalgo\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n * default: rsa\n\n> client key encryption algorithm\n\ndefault is rsa\n\n# clientkeydata\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> client key as data\n\n# clientkeyfile\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> client key as file path\n\n# clientkeypassphrase\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> client key passphrase\n\n# disablehostnameverification\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n> disable hostname verification\n\n# keystorefile\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> key store file\n\n# keystorepassphrase\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> key store passphrase\n\n# masterurl\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n * default: https://kubernetes.default.svc\n\n> the url to kubernetes api\n\n# namespace\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the namespace used\n\n# oauthtoken\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> oauth token\n\n# oauthtokenprovider\n\n * type: oauthtokenprovider\n * dynamic: ❌\n * required: ❌\n\n> oauth token provider\n\n# trustcerts\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n> trust all certificates\n\n# truststorefile\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> truststore file\n\n# truststorepassphrase\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> truststore passphrase\n\n\n# metadata\n\n# annotations\n\n * type: object\n * dynamic: ❓\n * required: ❌\n\n> list of all annotations of the resource\n\n# clustername\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> name of the current cluster\n\n# creationtimestamp\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> creation datetime\n\n# deletiongraceperiodseconds\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n> deletetion grace period in seconds\n\n# deletiontimestamp\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> deletetion datetime\n\n# finalizers\n\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n\n> list of finalizers\n\n# generatename\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> generate name of the resource\n\n# generation\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n> generation\n\n# labels\n\n * type: object\n * dynamic: ❓\n * required: ❌\n\n> list of labels\n\n# managedfields\n\n * type: array\n * subtype: managedfieldsentry\n * dynamic: ❓\n * required: ❌\n\n> list of managed fields\n\n# name\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> name of the resource\n\n# namespace\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> namespace of the resource\n\n# ownerreferences\n\n * type: array\n * subtype: ownerreference\n * dynamic: ❓\n * required: ❌\n\n> list of owner reference\n\n# resourceversion\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> resource version\n\n# selflink\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> direct link on the api of this resource\n\n# uid\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> generated uid of this resource\n\n\n# jobcondition\n\n# lastprobetime\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# lasttransitiontime\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# message\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# reason\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# status\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n\n# task-2\n\n\n# task-1\n\n\n# oauthtokenprovider\n\n# output\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# task\n\n * type: task-2\n * dynamic: ❓\n * required: ❌\n\n\n# ownerreference\n\n# apiversion\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# blockownerdeletion\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n# controller\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n# kind\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# name\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# uid\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n\n# fieldsv1\n\n\n# containerstateterminated\n\n# containerid\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# exitcode\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n# finishedat\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# message\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# reason\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# signal\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n# startedat\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n\n# managedfieldsentry\n\n# apiversion\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# fieldstype\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# fieldsv1\n\n * type: fieldsv1\n * dynamic: ❓\n * required: ❌\n\n# manager\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# operation\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# subresource\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# time\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n\n# podstatus\n\n# additionalproperties\n\n * type: object\n * dynamic: ❓\n * required: ❌\n\n# conditions\n\n * type: array\n * subtype: podcondition\n * dynamic: ❓\n * required: ❌\n\n# containerstatuses\n\n * type: array\n * subtype: containerstatus\n * dynamic: ❓\n * required: ❌\n\n# ephemeralcontainerstatuses\n\n * type: array\n * subtype: containerstatus\n * dynamic: ❓\n * required: ❌\n\n# hostip\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# initcontainerstatuses\n\n * type: array\n * subtype: containerstatus\n * dynamic: ❓\n * required: ❌\n\n# message\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# nominatednodename\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# phase\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# podip\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# podips\n\n * type: array\n * subtype: podip\n * dynamic: ❓\n * required: ❌\n\n# qosclass\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# reason\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# starttime\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n\n# jobstatus\n\n# active\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n# additionalproperties\n\n * type: object\n * dynamic: ❓\n * required: ❌\n\n# completiontime\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# conditions\n\n * type: array\n * subtype: jobcondition\n * dynamic: ❓\n * required: ❌\n\n# failed\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n# starttime\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# succeeded\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n\n# containerstaterunning\n\n# startedat\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n\n# containerstatus\n\n# containerid\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# image\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# imageid\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# laststate\n\n * type: containerstate\n * dynamic: ❓\n * required: ❌\n\n# name\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# ready\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n# restartcount\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n# started\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n# state\n\n * type: containerstate\n * dynamic: ❓\n * required: ❌\n\n\n# containerstatewaiting\n\n# message\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# reason\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n\n# podip\n\n# ip\n\n * type: string\n * dynamic: ❓\n * required: ❌",charsets:{}},{title:"PodCreate",frontmatter:{title:"PodCreate",editLink:!1,description:"Create a pod on a kubernetes cluster.",icon:"",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"PodCreate"},{property:"og:description",content:"Create a pod on a kubernetes cluster. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-kubernetes/tasks/io.kestra.plugin.kubernetes.PodCreate.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"PodCreate"},{name:"twitter:description",content:"Create a pod on a kubernetes cluster. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-kubernetes/tasks/io.kestra.plugin.kubernetes.PodCreate.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-kubernetes/tasks/io.kestra.plugin.kubernetes.PodCreate.html",relativePath:"plugins/plugin-kubernetes/tasks/io.kestra.plugin.kubernetes.PodCreate.md",key:"v-018f4203",path:"/plugins/plugin-kubernetes/tasks/io.kestra.plugin.kubernetes.PodCreate.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:103},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:434},{level:3,title:"connection",slug:"connection",normalizedTitle:"connection",charIndex:449},{level:3,title:"delete",slug:"delete",normalizedTitle:"delete",charIndex:840},{level:3,title:"inputFiles",slug:"inputfiles",normalizedTitle:"inputfiles",charIndex:960},{level:3,title:"metadata",slug:"metadata",normalizedTitle:"metadata",charIndex:195},{level:3,title:"namespace",slug:"namespace",normalizedTitle:"namespace",charIndex:176},{level:3,title:"outputFiles",slug:"outputfiles",normalizedTitle:"outputfiles",charIndex:1557},{level:3,title:"resume",slug:"resume",normalizedTitle:"resume",charIndex:1992},{level:3,title:"spec",slug:"spec",normalizedTitle:"spec",charIndex:238},{level:3,title:"waitRunning",slug:"waitrunning",normalizedTitle:"waitrunning",charIndex:2207},{level:3,title:"waitUntilRunning",slug:"waituntilrunning",normalizedTitle:"waituntilrunning",charIndex:2381},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:2686},{level:3,title:"metadata",slug:"metadata-2",normalizedTitle:"metadata",charIndex:195},{level:3,title:"outputFiles",slug:"outputfiles-2",normalizedTitle:"outputfiles",charIndex:1557},{level:3,title:"status",slug:"status",normalizedTitle:"status",charIndex:2858},{level:3,title:"vars",slug:"vars",normalizedTitle:"vars",charIndex:1877},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:2987},{level:3,title:"ContainerState",slug:"containerstate",normalizedTitle:"containerstate",charIndex:3003},{level:3,title:"PodCondition",slug:"podcondition",normalizedTitle:"podcondition",charIndex:3244},{level:3,title:"Connection",slug:"connection-2",normalizedTitle:"connection",charIndex:470},{level:3,title:"Metadata",slug:"metadata-3",normalizedTitle:"metadata",charIndex:2717},{level:3,title:"Task-2",slug:"task-2",normalizedTitle:"task-2",charIndex:6932},{level:3,title:"Task-1",slug:"task-1",normalizedTitle:"task-1",charIndex:6943},{level:3,title:"OAuthTokenProvider",slug:"oauthtokenprovider-2",normalizedTitle:"oauthtokenprovider",charIndex:5067},{level:3,title:"OwnerReference",slug:"ownerreference",normalizedTitle:"ownerreference",charIndex:6584},{level:3,title:"FieldsV1",slug:"fieldsv1",normalizedTitle:"fieldsv1",charIndex:7457},{level:3,title:"ContainerStateTerminated",slug:"containerstateterminated",normalizedTitle:"containerstateterminated",charIndex:3114},{level:3,title:"ManagedFieldsEntry",slug:"managedfieldsentry",normalizedTitle:"managedfieldsentry",charIndex:6297},{level:3,title:"PodStatus",slug:"podstatus",normalizedTitle:"podstatus",charIndex:2875},{level:3,title:"ContainerStateRunning",slug:"containerstaterunning",normalizedTitle:"containerstaterunning",charIndex:3039},{level:3,title:"ContainerStatus",slug:"containerstatus",normalizedTitle:"containerstatus",charIndex:8555},{level:3,title:"ContainerStateWaiting",slug:"containerstatewaiting",normalizedTitle:"containerstatewaiting",charIndex:3189},{level:3,title:"PodIP",slug:"podip-2",normalizedTitle:"podip",charIndex:9129}],headersStr:"Examples Properties connection delete inputFiles metadata namespace outputFiles resume spec waitRunning waitUntilRunning Outputs metadata outputFiles status vars Definitions ContainerState PodCondition Connection Metadata Task-2 Task-1 OAuthTokenProvider OwnerReference FieldsV1 ContainerStateTerminated ManagedFieldsEntry PodStatus ContainerStateRunning ContainerStatus ContainerStateWaiting PodIP",content:"PodCreate\n\ntype: \"io.kestra.plugin.kubernetes.PodCreate\"\n\n\n> Create a pod on a kubernetes cluster.\n\n\n# Examples\n\nid: \"pod_create\"\ntype: \"io.kestra.plugin.kubernetes.PodCreate\"\nnamespace: default\nmetadata:\n  labels:\n    my-label: my-value\nspec:\n  containers:\n  - name: unittest\n    image: debian:stable-slim\n    command: \n      - 'bash' \n      - '-c'\n      - 'for i in {1..10}; do echo $i; sleep 0.1; done'\n  restartPolicy: Never\n\n\n\n# Properties\n\n\n# connection\n\n * Type: Connection\n * Dynamic: ❓\n * Required: ❌\n\n> The connection parameters to Kubernetes cluster\n\nIf no connection is defined, we try to load connection from current context in order below:\n\n 1. System properties\n 2. Environment variables\n 3. Kube config file\n 4. Service account token & mounted CA certificate\n\nYou can pass a full configuration with all option if needed\n\n\n# delete\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ✔️\n * Default: true\n\n> If the pod will be deleted on completion\n\n\n# inputFiles\n\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Input files are extra files supplied by user that make it simpler organize code.\n\nDescribe a files map that will be written and usable in execution context. In python execution context is in a temp folder, for bash scripts, you can reach files using a workingDir variable like 'source {{workingDir}}/myfile.sh'\n\n\n# metadata\n\n * Type: object\n * Dynamic: ✔️\n * Required: ❌\n\n> Full metadata yaml for a pod.\n\n\n# namespace\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The namespace where the pod will be created\n\n\n# outputFiles\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Output file list that will be uploaded to internal storage\n\nList of key that will generate temporary files.\nOn the command, just can use with special variable named outputFiles.key.\nIf you add a files with [\"first\"], you can use the special vars echo 1 >> {[ outputFiles.first }} and you used on others tasks using {{ outputs['task-id'].files.first }}\n\n\n# resume\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ✔️\n * Default: true\n\n> If we try to reconnect to current pod if it exist\n\n\n# spec\n\n * Type: object\n * Dynamic: ✔️\n * Required: ✔️\n\n> Full spec yaml for a pod.\n\n\n# waitRunning\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n * Default: 3600.000000000\n * Format: duration\n\n> The maximum duration we need to wait until the pod complete.\n\n\n# waitUntilRunning\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n * Default: 600.000000000\n * Format: duration\n\n> The maximum duration we need to wait until the pod is created.\n\nThis timeout is the maximum time that k8s scheduler take to\n\n * schedule the pod\n * pull the pod image\n * and start the pod\n\n\n# Outputs\n\n\n# metadata\n\n * Type: Metadata\n\n> The full pod metadata\n\n\n# outputFiles\n\n * Type: object\n * SubType: string\n\n> The output files uri in Kestra internal storage\n\n\n# status\n\n * Type: PodStatus\n\n> The full pod status\n\n\n# vars\n\n * Type: object\n\n> The value extract from output of the commands\n\n\n# Definitions\n\n\n# ContainerState\n\n# running\n\n * Type: ContainerStateRunning\n * Dynamic: ❓\n * Required: ❌\n\n# terminated\n\n * Type: ContainerStateTerminated\n * Dynamic: ❓\n * Required: ❌\n\n# waiting\n\n * Type: ContainerStateWaiting\n * Dynamic: ❓\n * Required: ❌\n\n\n# PodCondition\n\n# lastProbeTime\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# lastTransitionTime\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# message\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# reason\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# status\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n\n# Connection\n\n# apiVersion\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: v1\n\n> The api version of API to use\n\n# caCertData\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> CA certificate as data (\n\n# caCertFile\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> CA certificate as file path\n\n# clientCertData\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Client certificate as data\n\n# clientCertFile\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Client certificate as file path\n\n# clientKeyAlgo\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: RSA\n\n> Client key encryption algorithm\n\ndefault is RSA\n\n# clientKeyData\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Client Key as data\n\n# clientKeyFile\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Client Key as file path\n\n# clientKeyPassphrase\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Client key passphrase\n\n# disableHostnameVerification\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n> Disable hostname verification\n\n# keyStoreFile\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Key store file\n\n# keyStorePassphrase\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Key store passphrase\n\n# masterUrl\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: https://kubernetes.default.svc\n\n> The url to kubernetes API\n\n# namespace\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The namespace used\n\n# oauthToken\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Oauth token\n\n# oauthTokenProvider\n\n * Type: OAuthTokenProvider\n * Dynamic: ❌\n * Required: ❌\n\n> Oauth token provider\n\n# trustCerts\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n> Trust all certificates\n\n# trustStoreFile\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Truststore file\n\n# trustStorePassphrase\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Truststore passphrase\n\n\n# Metadata\n\n# annotations\n\n * Type: object\n * Dynamic: ❓\n * Required: ❌\n\n> List of all annotations of the resource\n\n# clusterName\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Name of the current cluster\n\n# creationTimestamp\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Creation datetime\n\n# deletionGracePeriodSeconds\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n> Deletetion grace period in seconds\n\n# deletionTimestamp\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Deletetion datetime\n\n# finalizers\n\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n\n> List of finalizers\n\n# generateName\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Generate name of the resource\n\n# generation\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n> Generation\n\n# labels\n\n * Type: object\n * Dynamic: ❓\n * Required: ❌\n\n> List of labels\n\n# managedFields\n\n * Type: array\n * SubType: ManagedFieldsEntry\n * Dynamic: ❓\n * Required: ❌\n\n> List of managed fields\n\n# name\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Name of the resource\n\n# namespace\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Namespace of the resource\n\n# ownerReferences\n\n * Type: array\n * SubType: OwnerReference\n * Dynamic: ❓\n * Required: ❌\n\n> List of owner reference\n\n# resourceVersion\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Resource version\n\n# selfLink\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Direct link on the api of this resource\n\n# uid\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Generated Uid of this resource\n\n\n# Task-2\n\n\n# Task-1\n\n\n# OAuthTokenProvider\n\n# output\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# task\n\n * Type: Task-2\n * Dynamic: ❓\n * Required: ❌\n\n\n# OwnerReference\n\n# apiVersion\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# blockOwnerDeletion\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n# controller\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n# kind\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# name\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# uid\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n\n# FieldsV1\n\n\n# ContainerStateTerminated\n\n# containerID\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# exitCode\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n# finishedAt\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# message\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# reason\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# signal\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n# startedAt\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n\n# ManagedFieldsEntry\n\n# apiVersion\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# fieldsType\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# fieldsV1\n\n * Type: FieldsV1\n * Dynamic: ❓\n * Required: ❌\n\n# manager\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# operation\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# subresource\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# time\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n\n# PodStatus\n\n# additionalProperties\n\n * Type: object\n * Dynamic: ❓\n * Required: ❌\n\n# conditions\n\n * Type: array\n * SubType: PodCondition\n * Dynamic: ❓\n * Required: ❌\n\n# containerStatuses\n\n * Type: array\n * SubType: ContainerStatus\n * Dynamic: ❓\n * Required: ❌\n\n# ephemeralContainerStatuses\n\n * Type: array\n * SubType: ContainerStatus\n * Dynamic: ❓\n * Required: ❌\n\n# hostIP\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# initContainerStatuses\n\n * Type: array\n * SubType: ContainerStatus\n * Dynamic: ❓\n * Required: ❌\n\n# message\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# nominatedNodeName\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# phase\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# podIP\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# podIPs\n\n * Type: array\n * SubType: PodIP\n * Dynamic: ❓\n * Required: ❌\n\n# qosClass\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# reason\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# startTime\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n\n# ContainerStateRunning\n\n# startedAt\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n\n# ContainerStatus\n\n# containerID\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# image\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# imageID\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# lastState\n\n * Type: ContainerState\n * Dynamic: ❓\n * Required: ❌\n\n# name\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# ready\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n# restartCount\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n# started\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n# state\n\n * Type: ContainerState\n * Dynamic: ❓\n * Required: ❌\n\n\n# ContainerStateWaiting\n\n# message\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# reason\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n\n# PodIP\n\n# ip\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌",normalizedContent:"podcreate\n\ntype: \"io.kestra.plugin.kubernetes.podcreate\"\n\n\n> create a pod on a kubernetes cluster.\n\n\n# examples\n\nid: \"pod_create\"\ntype: \"io.kestra.plugin.kubernetes.podcreate\"\nnamespace: default\nmetadata:\n  labels:\n    my-label: my-value\nspec:\n  containers:\n  - name: unittest\n    image: debian:stable-slim\n    command: \n      - 'bash' \n      - '-c'\n      - 'for i in {1..10}; do echo $i; sleep 0.1; done'\n  restartpolicy: never\n\n\n\n# properties\n\n\n# connection\n\n * type: connection\n * dynamic: ❓\n * required: ❌\n\n> the connection parameters to kubernetes cluster\n\nif no connection is defined, we try to load connection from current context in order below:\n\n 1. system properties\n 2. environment variables\n 3. kube config file\n 4. service account token & mounted ca certificate\n\nyou can pass a full configuration with all option if needed\n\n\n# delete\n\n * type: boolean\n * dynamic: ❓\n * required: ✔️\n * default: true\n\n> if the pod will be deleted on completion\n\n\n# inputfiles\n\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> input files are extra files supplied by user that make it simpler organize code.\n\ndescribe a files map that will be written and usable in execution context. in python execution context is in a temp folder, for bash scripts, you can reach files using a workingdir variable like 'source {{workingdir}}/myfile.sh'\n\n\n# metadata\n\n * type: object\n * dynamic: ✔️\n * required: ❌\n\n> full metadata yaml for a pod.\n\n\n# namespace\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the namespace where the pod will be created\n\n\n# outputfiles\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> output file list that will be uploaded to internal storage\n\nlist of key that will generate temporary files.\non the command, just can use with special variable named outputfiles.key.\nif you add a files with [\"first\"], you can use the special vars echo 1 >> {[ outputfiles.first }} and you used on others tasks using {{ outputs['task-id'].files.first }}\n\n\n# resume\n\n * type: boolean\n * dynamic: ❓\n * required: ✔️\n * default: true\n\n> if we try to reconnect to current pod if it exist\n\n\n# spec\n\n * type: object\n * dynamic: ✔️\n * required: ✔️\n\n> full spec yaml for a pod.\n\n\n# waitrunning\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n * default: 3600.000000000\n * format: duration\n\n> the maximum duration we need to wait until the pod complete.\n\n\n# waituntilrunning\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n * default: 600.000000000\n * format: duration\n\n> the maximum duration we need to wait until the pod is created.\n\nthis timeout is the maximum time that k8s scheduler take to\n\n * schedule the pod\n * pull the pod image\n * and start the pod\n\n\n# outputs\n\n\n# metadata\n\n * type: metadata\n\n> the full pod metadata\n\n\n# outputfiles\n\n * type: object\n * subtype: string\n\n> the output files uri in kestra internal storage\n\n\n# status\n\n * type: podstatus\n\n> the full pod status\n\n\n# vars\n\n * type: object\n\n> the value extract from output of the commands\n\n\n# definitions\n\n\n# containerstate\n\n# running\n\n * type: containerstaterunning\n * dynamic: ❓\n * required: ❌\n\n# terminated\n\n * type: containerstateterminated\n * dynamic: ❓\n * required: ❌\n\n# waiting\n\n * type: containerstatewaiting\n * dynamic: ❓\n * required: ❌\n\n\n# podcondition\n\n# lastprobetime\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# lasttransitiontime\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# message\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# reason\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# status\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n\n# connection\n\n# apiversion\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n * default: v1\n\n> the api version of api to use\n\n# cacertdata\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> ca certificate as data (\n\n# cacertfile\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> ca certificate as file path\n\n# clientcertdata\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> client certificate as data\n\n# clientcertfile\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> client certificate as file path\n\n# clientkeyalgo\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n * default: rsa\n\n> client key encryption algorithm\n\ndefault is rsa\n\n# clientkeydata\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> client key as data\n\n# clientkeyfile\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> client key as file path\n\n# clientkeypassphrase\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> client key passphrase\n\n# disablehostnameverification\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n> disable hostname verification\n\n# keystorefile\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> key store file\n\n# keystorepassphrase\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> key store passphrase\n\n# masterurl\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n * default: https://kubernetes.default.svc\n\n> the url to kubernetes api\n\n# namespace\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the namespace used\n\n# oauthtoken\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> oauth token\n\n# oauthtokenprovider\n\n * type: oauthtokenprovider\n * dynamic: ❌\n * required: ❌\n\n> oauth token provider\n\n# trustcerts\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n> trust all certificates\n\n# truststorefile\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> truststore file\n\n# truststorepassphrase\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> truststore passphrase\n\n\n# metadata\n\n# annotations\n\n * type: object\n * dynamic: ❓\n * required: ❌\n\n> list of all annotations of the resource\n\n# clustername\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> name of the current cluster\n\n# creationtimestamp\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> creation datetime\n\n# deletiongraceperiodseconds\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n> deletetion grace period in seconds\n\n# deletiontimestamp\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> deletetion datetime\n\n# finalizers\n\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n\n> list of finalizers\n\n# generatename\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> generate name of the resource\n\n# generation\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n> generation\n\n# labels\n\n * type: object\n * dynamic: ❓\n * required: ❌\n\n> list of labels\n\n# managedfields\n\n * type: array\n * subtype: managedfieldsentry\n * dynamic: ❓\n * required: ❌\n\n> list of managed fields\n\n# name\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> name of the resource\n\n# namespace\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> namespace of the resource\n\n# ownerreferences\n\n * type: array\n * subtype: ownerreference\n * dynamic: ❓\n * required: ❌\n\n> list of owner reference\n\n# resourceversion\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> resource version\n\n# selflink\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> direct link on the api of this resource\n\n# uid\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> generated uid of this resource\n\n\n# task-2\n\n\n# task-1\n\n\n# oauthtokenprovider\n\n# output\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# task\n\n * type: task-2\n * dynamic: ❓\n * required: ❌\n\n\n# ownerreference\n\n# apiversion\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# blockownerdeletion\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n# controller\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n# kind\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# name\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# uid\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n\n# fieldsv1\n\n\n# containerstateterminated\n\n# containerid\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# exitcode\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n# finishedat\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# message\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# reason\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# signal\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n# startedat\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n\n# managedfieldsentry\n\n# apiversion\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# fieldstype\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# fieldsv1\n\n * type: fieldsv1\n * dynamic: ❓\n * required: ❌\n\n# manager\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# operation\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# subresource\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# time\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n\n# podstatus\n\n# additionalproperties\n\n * type: object\n * dynamic: ❓\n * required: ❌\n\n# conditions\n\n * type: array\n * subtype: podcondition\n * dynamic: ❓\n * required: ❌\n\n# containerstatuses\n\n * type: array\n * subtype: containerstatus\n * dynamic: ❓\n * required: ❌\n\n# ephemeralcontainerstatuses\n\n * type: array\n * subtype: containerstatus\n * dynamic: ❓\n * required: ❌\n\n# hostip\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# initcontainerstatuses\n\n * type: array\n * subtype: containerstatus\n * dynamic: ❓\n * required: ❌\n\n# message\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# nominatednodename\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# phase\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# podip\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# podips\n\n * type: array\n * subtype: podip\n * dynamic: ❓\n * required: ❌\n\n# qosclass\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# reason\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# starttime\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n\n# containerstaterunning\n\n# startedat\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n\n# containerstatus\n\n# containerid\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# image\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# imageid\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# laststate\n\n * type: containerstate\n * dynamic: ❓\n * required: ❌\n\n# name\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# ready\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n# restartcount\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n# started\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n# state\n\n * type: containerstate\n * dynamic: ❓\n * required: ❌\n\n\n# containerstatewaiting\n\n# message\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# reason\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n\n# podip\n\n# ip\n\n * type: string\n * dynamic: ❓\n * required: ❌",charsets:{}},{title:"Plugin mongodb",frontmatter:{title:"Plugin mongodb",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Plugin mongodb"},{property:"og:description",content:"Plugin mongodb | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-mongodb/"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Plugin mongodb"},{name:"twitter:description",content:"Plugin mongodb | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-mongodb/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-mongodb/",relativePath:"plugins/plugin-mongodb/README.md",key:"v-52217188",path:"/plugins/plugin-mongodb/",headers:[{level:2,title:"Common",slug:"common",normalizedTitle:"common",charIndex:21},{level:3,title:"Tasks",slug:"tasks",normalizedTitle:"tasks",charIndex:32}],headersStr:"Common Tasks",content:"# Plugin mongodb\n\n\n# Common\n\n\n# Tasks\n\n * Bulk\n * Delete\n * Find\n * InsertOne\n * Load\n * Update",normalizedContent:"# plugin mongodb\n\n\n# common\n\n\n# tasks\n\n * bulk\n * delete\n * find\n * insertone\n * load\n * update",charsets:{}},{title:"Bulk",frontmatter:{title:"Bulk",editLink:!1,description:"Bulk load documents in elasticsearch using Kestra Internal Storage file",icon:"PHN2ZyBoZWlnaHQ9IjI1MDAiIHZpZXdCb3g9IjguNzM4IC01LjAzNjIyODM0IDE3LjQ1OTkyNDIyIDM5LjQwNjE5NDg0IiB3aWR0aD0iMjUwMCIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj48cGF0aCBkPSJtMTUuOS4wODcuODU0IDEuNjA0Yy4xOTIuMjk2LjQuNTU4LjY0NS44MDJhMjIuNDA2IDIyLjQwNiAwIDAgMSAyLjAwNCAyLjI2NmMxLjQ0NyAxLjkgMi40MjMgNC4wMSAzLjEyIDYuMjkyLjQxOCAxLjM5NC42NDUgMi44MjQuNjYyIDQuMjcuMDcgNC4zMjMtMS40MTIgOC4wMzUtNC40IDExLjEyYTEyLjcgMTIuNyAwIDAgMSAtMS41NyAxLjM0MmMtLjI5NiAwLS40MzYtLjIyNy0uNTU4LS40MzZhMy41ODkgMy41ODkgMCAwIDEgLS40MzYtMS4yNTVjLS4xMDUtLjUyMy0uMTc0LTEuMDQ2LS4xNC0xLjU4NnYtLjI0NGMtLjAyNC0uMDUyLS4yODUtMjQuMDUyLS4xODEtMjQuMTc1eiIgZmlsbD0iIzU5OTYzNiIvPjxwYXRoIGQ9Im0xNS45LjAzNGMtLjAzNS0uMDctLjA3LS4wMTctLjEwNS4wMTcuMDE3LjM1LS4xMDUuNjYyLS4yOTYuOTYtLjIxLjI5Ni0uNDg4LjUyMy0uNzY3Ljc2Ny0xLjU1IDEuMzQyLTIuNzcgMi45NjMtMy43NDcgNC43NzYtMS4zIDIuNDQtMS45NyA1LjA1NS0yLjE2IDcuODA4LS4wODcuOTkzLjMxNCA0LjQ5Ny42MjcgNS41MDguODU0IDIuNjg0IDIuMzg4IDQuOTMzIDQuMzc1IDYuODg1LjQ4OC40NyAxLjAxLjkwNiAxLjU1IDEuMzI1LjE1NyAwIC4xNzQtLjE0LjIxLS4yNDRhNC43OCA0Ljc4IDAgMCAwIC4xNTctLjY4bC4zNS0yLjYxNHoiIGZpbGw9IiM2Y2FjNDgiLz48cGF0aCBkPSJtMTYuNzU0IDI4Ljg0NWMuMDM1LS40LjIyNy0uNzMyLjQzNi0xLjA2My0uMjEtLjA4Ny0uMzY2LS4yNi0uNDg4LS40NTNhMy4yMzUgMy4yMzUgMCAwIDEgLS4yNi0uNTc1Yy0uMjQ0LS43MzItLjI5Ni0xLjUtLjM2Ni0yLjI0OHYtLjQ1M2MtLjA4Ny4wNy0uMTA1LjY2Mi0uMTA1Ljc1YTE3LjM3IDE3LjM3IDAgMCAxIC0uMzE0IDIuMzUzYy0uMDUyLjMxNC0uMDg3LjYyNy0uMjguOTA2IDAgLjAzNSAwIC4wNy4wMTcuMTIyLjMxNC45MjQuNCAxLjg2NS40NTMgMi44MjR2LjM1YzAgLjQxOC0uMDE3LjMzLjMzLjQ3LjE0LjA1Mi4yOTYuMDcuNDM2LjE3NC4xMDUgMCAuMTIyLS4wODcuMTIyLS4xNTdsLS4wNTItLjU3NXYtMS42MDRjLS4wMTctLjI4LjAzNS0uNTU4LjA3LS44MnoiIGZpbGw9IiNjMmJmYmYiLz48L3N2Zz4=",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Bulk"},{property:"og:description",content:"Bulk load documents in elasticsearch using Kestra Internal Storage file | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-mongodb/tasks/io.kestra.plugin.mongodb.Bulk.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Bulk"},{name:"twitter:description",content:"Bulk load documents in elasticsearch using Kestra Internal Storage file | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-mongodb/tasks/io.kestra.plugin.mongodb.Bulk.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-mongodb/tasks/io.kestra.plugin.mongodb.Bulk.html",relativePath:"plugins/plugin-mongodb/tasks/io.kestra.plugin.mongodb.Bulk.md",key:"v-2e11c6f2",path:"/plugins/plugin-mongodb/tasks/io.kestra.plugin.mongodb.Bulk.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:124},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:344},{level:3,title:"chunk",slug:"chunk",normalizedTitle:"chunk",charIndex:359},{level:3,title:"collection",slug:"collection",normalizedTitle:"collection",charIndex:285},{level:3,title:"connection",slug:"connection",normalizedTitle:"connection",charIndex:183},{level:3,title:"database",slug:"database",normalizedTitle:"database",charIndex:261},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:313},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:816},{level:3,title:"deletedCount",slug:"deletedcount",normalizedTitle:"deletedcount",charIndex:828},{level:3,title:"insertedCount",slug:"insertedcount",normalizedTitle:"insertedcount",charIndex:936},{level:3,title:"matchedCount",slug:"matchedcount",normalizedTitle:"matchedcount",charIndex:1046},{level:3,title:"modifiedCount",slug:"modifiedcount",normalizedTitle:"modifiedcount",charIndex:1181},{level:3,title:"size",slug:"size",normalizedTitle:"size",charIndex:420},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:1352},{level:3,title:"MongoDbConnection",slug:"mongodbconnection",normalizedTitle:"mongodbconnection",charIndex:572}],headersStr:"Examples Properties chunk collection connection database from Outputs deletedCount insertedCount matchedCount modifiedCount size Definitions MongoDbConnection",content:'Bulk\n\ntype: "io.kestra.plugin.mongodb.Bulk"\n\n\n> Bulk load documents in elasticsearch using Kestra Internal Storage file\n\n\n# Examples\n\nid: "bulk"\ntype: "io.kestra.plugin.mongodb.Bulk"\nconnection:\n  uri: "mongodb://root:example@localhost:27017/?authSource=admin"\ndatabase: "my_database"\ncollection: "my_collection"\nfrom: "{{ inputs.file }}"\n\n\n\n# Properties\n\n\n# chunk\n\n * Type: integer\n * Dynamic: ✔️\n * Required: ❌\n\n> The size of chunk for every bulk request\n\n\n# collection\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The mongodb collection.\n\n\n# connection\n\n * Type: MongoDbConnection\n * Dynamic: ❓\n * Required: ✔️\n\n> The connection properties.\n\n\n# database\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The mongodb database.\n\n\n# from\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The source file\n\n\n# Outputs\n\n\n# deletedCount\n\n * Type: integer\n * Default: 0\n\n> The number of documents deleted by the write operation.\n\n\n# insertedCount\n\n * Type: integer\n * Default: 0\n\n> The number of documents inserted by the write operation.\n\n\n# matchedCount\n\n * Type: integer\n * Default: 0\n\n> The number of documents matched by updates or replacements in the write operation.\n\n\n# modifiedCount\n\n * Type: integer\n * Default: 0\n\n> The number of documents modified by the write operation.\n\n\n# size\n\n * Type: integer\n\n> The size of the rows processed\n\n\n# Definitions\n\n\n# MongoDbConnection\n\n# uri\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> Connection string to mongodb server\n\nurl format like mongodb://mongodb0.example.com:27017',normalizedContent:'bulk\n\ntype: "io.kestra.plugin.mongodb.bulk"\n\n\n> bulk load documents in elasticsearch using kestra internal storage file\n\n\n# examples\n\nid: "bulk"\ntype: "io.kestra.plugin.mongodb.bulk"\nconnection:\n  uri: "mongodb://root:example@localhost:27017/?authsource=admin"\ndatabase: "my_database"\ncollection: "my_collection"\nfrom: "{{ inputs.file }}"\n\n\n\n# properties\n\n\n# chunk\n\n * type: integer\n * dynamic: ✔️\n * required: ❌\n\n> the size of chunk for every bulk request\n\n\n# collection\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the mongodb collection.\n\n\n# connection\n\n * type: mongodbconnection\n * dynamic: ❓\n * required: ✔️\n\n> the connection properties.\n\n\n# database\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the mongodb database.\n\n\n# from\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the source file\n\n\n# outputs\n\n\n# deletedcount\n\n * type: integer\n * default: 0\n\n> the number of documents deleted by the write operation.\n\n\n# insertedcount\n\n * type: integer\n * default: 0\n\n> the number of documents inserted by the write operation.\n\n\n# matchedcount\n\n * type: integer\n * default: 0\n\n> the number of documents matched by updates or replacements in the write operation.\n\n\n# modifiedcount\n\n * type: integer\n * default: 0\n\n> the number of documents modified by the write operation.\n\n\n# size\n\n * type: integer\n\n> the size of the rows processed\n\n\n# definitions\n\n\n# mongodbconnection\n\n# uri\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> connection string to mongodb server\n\nurl format like mongodb://mongodb0.example.com:27017',charsets:{}},{title:"Delete",frontmatter:{title:"Delete",editLink:!1,description:"Delete one or many documents",icon:"PHN2ZyBoZWlnaHQ9IjI1MDAiIHZpZXdCb3g9IjguNzM4IC01LjAzNjIyODM0IDE3LjQ1OTkyNDIyIDM5LjQwNjE5NDg0IiB3aWR0aD0iMjUwMCIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj48cGF0aCBkPSJtMTUuOS4wODcuODU0IDEuNjA0Yy4xOTIuMjk2LjQuNTU4LjY0NS44MDJhMjIuNDA2IDIyLjQwNiAwIDAgMSAyLjAwNCAyLjI2NmMxLjQ0NyAxLjkgMi40MjMgNC4wMSAzLjEyIDYuMjkyLjQxOCAxLjM5NC42NDUgMi44MjQuNjYyIDQuMjcuMDcgNC4zMjMtMS40MTIgOC4wMzUtNC40IDExLjEyYTEyLjcgMTIuNyAwIDAgMSAtMS41NyAxLjM0MmMtLjI5NiAwLS40MzYtLjIyNy0uNTU4LS40MzZhMy41ODkgMy41ODkgMCAwIDEgLS40MzYtMS4yNTVjLS4xMDUtLjUyMy0uMTc0LTEuMDQ2LS4xNC0xLjU4NnYtLjI0NGMtLjAyNC0uMDUyLS4yODUtMjQuMDUyLS4xODEtMjQuMTc1eiIgZmlsbD0iIzU5OTYzNiIvPjxwYXRoIGQ9Im0xNS45LjAzNGMtLjAzNS0uMDctLjA3LS4wMTctLjEwNS4wMTcuMDE3LjM1LS4xMDUuNjYyLS4yOTYuOTYtLjIxLjI5Ni0uNDg4LjUyMy0uNzY3Ljc2Ny0xLjU1IDEuMzQyLTIuNzcgMi45NjMtMy43NDcgNC43NzYtMS4zIDIuNDQtMS45NyA1LjA1NS0yLjE2IDcuODA4LS4wODcuOTkzLjMxNCA0LjQ5Ny42MjcgNS41MDguODU0IDIuNjg0IDIuMzg4IDQuOTMzIDQuMzc1IDYuODg1LjQ4OC40NyAxLjAxLjkwNiAxLjU1IDEuMzI1LjE1NyAwIC4xNzQtLjE0LjIxLS4yNDRhNC43OCA0Ljc4IDAgMCAwIC4xNTctLjY4bC4zNS0yLjYxNHoiIGZpbGw9IiM2Y2FjNDgiLz48cGF0aCBkPSJtMTYuNzU0IDI4Ljg0NWMuMDM1LS40LjIyNy0uNzMyLjQzNi0xLjA2My0uMjEtLjA4Ny0uMzY2LS4yNi0uNDg4LS40NTNhMy4yMzUgMy4yMzUgMCAwIDEgLS4yNi0uNTc1Yy0uMjQ0LS43MzItLjI5Ni0xLjUtLjM2Ni0yLjI0OHYtLjQ1M2MtLjA4Ny4wNy0uMTA1LjY2Mi0uMTA1Ljc1YTE3LjM3IDE3LjM3IDAgMCAxIC0uMzE0IDIuMzUzYy0uMDUyLjMxNC0uMDg3LjYyNy0uMjguOTA2IDAgLjAzNSAwIC4wNy4wMTcuMTIyLjMxNC45MjQuNCAxLjg2NS40NTMgMi44MjR2LjM1YzAgLjQxOC0uMDE3LjMzLjMzLjQ3LjE0LjA1Mi4yOTYuMDcuNDM2LjE3NC4xMDUgMCAuMTIyLS4wODcuMTIyLS4xNTdsLS4wNTItLjU3NXYtMS42MDRjLS4wMTctLjI4LjAzNS0uNTU4LjA3LS44MnoiIGZpbGw9IiNjMmJmYmYiLz48L3N2Zz4=",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Delete"},{property:"og:description",content:"Delete one or many documents | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-mongodb/tasks/io.kestra.plugin.mongodb.Delete.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Delete"},{name:"twitter:description",content:"Delete one or many documents | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-mongodb/tasks/io.kestra.plugin.mongodb.Delete.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-mongodb/tasks/io.kestra.plugin.mongodb.Delete.html",relativePath:"plugins/plugin-mongodb/tasks/io.kestra.plugin.mongodb.Delete.md",key:"v-0bdf51d6",path:"/plugins/plugin-mongodb/tasks/io.kestra.plugin.mongodb.Delete.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:85},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:357},{level:3,title:"collection",slug:"collection",normalizedTitle:"collection",charIndex:250},{level:3,title:"connection",slug:"connection",normalizedTitle:"connection",charIndex:148},{level:3,title:"database",slug:"database",normalizedTitle:"database",charIndex:226},{level:3,title:"filter",slug:"filter",normalizedTitle:"filter",charIndex:302},{level:3,title:"operation",slug:"operation",normalizedTitle:"operation",charIndex:278},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:931},{level:3,title:"deletedCount",slug:"deletedcount",normalizedTitle:"deletedcount",charIndex:943},{level:3,title:"wasAcknowledged",slug:"wasacknowledged",normalizedTitle:"wasacknowledged",charIndex:1028},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:1105},{level:3,title:"MongoDbConnection",slug:"mongodbconnection",normalizedTitle:"mongodbconnection",charIndex:483}],headersStr:"Examples Properties collection connection database filter operation Outputs deletedCount wasAcknowledged Definitions MongoDbConnection",content:'Delete\n\ntype: "io.kestra.plugin.mongodb.Delete"\n\n\n> Delete one or many documents\n\n\n# Examples\n\nid: "delete"\ntype: "io.kestra.plugin.mongodb.Delete"\nconnection:\n  uri: "mongodb://root:example@localhost:27017/?authSource=admin"\ndatabase: "my_database"\ncollection: "my_collection"\noperation: "DELETE_ONE"\nfilter:\n  _id:\n    $oid: 60930c39a982931c20ef6cd6\n\n\n\n# Properties\n\n\n# collection\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The mongodb collection.\n\n\n# connection\n\n * Type: MongoDbConnection\n * Dynamic: ❓\n * Required: ✔️\n\n> The connection properties.\n\n\n# database\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The mongodb database.\n\n\n# filter\n\n * Type: ====\n * Dynamic: ✔️\n * Required: ❌\n\n> The mongodb bson filter\n\nCan be a bson string, or a map\n\n\n# operation\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ✔️\n\n * Default: DELETE_ONE\n\n * Possible Values:\n   \n   * DELETE_ONE\n   * DELETE_MANY\n\n> Operation to use\n\n\n# Outputs\n\n\n# deletedCount\n\n * Type: integer\n * Default: 0\n\n> The number of documents deleted.\n\n\n# wasAcknowledged\n\n * Type: boolean\n\n> true if the write was acknowledged.\n\n\n# Definitions\n\n\n# MongoDbConnection\n\n# uri\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> Connection string to mongodb server\n\nurl format like mongodb://mongodb0.example.com:27017',normalizedContent:'delete\n\ntype: "io.kestra.plugin.mongodb.delete"\n\n\n> delete one or many documents\n\n\n# examples\n\nid: "delete"\ntype: "io.kestra.plugin.mongodb.delete"\nconnection:\n  uri: "mongodb://root:example@localhost:27017/?authsource=admin"\ndatabase: "my_database"\ncollection: "my_collection"\noperation: "delete_one"\nfilter:\n  _id:\n    $oid: 60930c39a982931c20ef6cd6\n\n\n\n# properties\n\n\n# collection\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the mongodb collection.\n\n\n# connection\n\n * type: mongodbconnection\n * dynamic: ❓\n * required: ✔️\n\n> the connection properties.\n\n\n# database\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the mongodb database.\n\n\n# filter\n\n * type: ====\n * dynamic: ✔️\n * required: ❌\n\n> the mongodb bson filter\n\ncan be a bson string, or a map\n\n\n# operation\n\n * type: string\n\n * dynamic: ❌\n\n * required: ✔️\n\n * default: delete_one\n\n * possible values:\n   \n   * delete_one\n   * delete_many\n\n> operation to use\n\n\n# outputs\n\n\n# deletedcount\n\n * type: integer\n * default: 0\n\n> the number of documents deleted.\n\n\n# wasacknowledged\n\n * type: boolean\n\n> true if the write was acknowledged.\n\n\n# definitions\n\n\n# mongodbconnection\n\n# uri\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> connection string to mongodb server\n\nurl format like mongodb://mongodb0.example.com:27017',charsets:{}},{title:"Find",frontmatter:{title:"Find",editLink:!1,description:"Find documents",icon:"PHN2ZyBoZWlnaHQ9IjI1MDAiIHZpZXdCb3g9IjguNzM4IC01LjAzNjIyODM0IDE3LjQ1OTkyNDIyIDM5LjQwNjE5NDg0IiB3aWR0aD0iMjUwMCIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj48cGF0aCBkPSJtMTUuOS4wODcuODU0IDEuNjA0Yy4xOTIuMjk2LjQuNTU4LjY0NS44MDJhMjIuNDA2IDIyLjQwNiAwIDAgMSAyLjAwNCAyLjI2NmMxLjQ0NyAxLjkgMi40MjMgNC4wMSAzLjEyIDYuMjkyLjQxOCAxLjM5NC42NDUgMi44MjQuNjYyIDQuMjcuMDcgNC4zMjMtMS40MTIgOC4wMzUtNC40IDExLjEyYTEyLjcgMTIuNyAwIDAgMSAtMS41NyAxLjM0MmMtLjI5NiAwLS40MzYtLjIyNy0uNTU4LS40MzZhMy41ODkgMy41ODkgMCAwIDEgLS40MzYtMS4yNTVjLS4xMDUtLjUyMy0uMTc0LTEuMDQ2LS4xNC0xLjU4NnYtLjI0NGMtLjAyNC0uMDUyLS4yODUtMjQuMDUyLS4xODEtMjQuMTc1eiIgZmlsbD0iIzU5OTYzNiIvPjxwYXRoIGQ9Im0xNS45LjAzNGMtLjAzNS0uMDctLjA3LS4wMTctLjEwNS4wMTcuMDE3LjM1LS4xMDUuNjYyLS4yOTYuOTYtLjIxLjI5Ni0uNDg4LjUyMy0uNzY3Ljc2Ny0xLjU1IDEuMzQyLTIuNzcgMi45NjMtMy43NDcgNC43NzYtMS4zIDIuNDQtMS45NyA1LjA1NS0yLjE2IDcuODA4LS4wODcuOTkzLjMxNCA0LjQ5Ny42MjcgNS41MDguODU0IDIuNjg0IDIuMzg4IDQuOTMzIDQuMzc1IDYuODg1LjQ4OC40NyAxLjAxLjkwNiAxLjU1IDEuMzI1LjE1NyAwIC4xNzQtLjE0LjIxLS4yNDRhNC43OCA0Ljc4IDAgMCAwIC4xNTctLjY4bC4zNS0yLjYxNHoiIGZpbGw9IiM2Y2FjNDgiLz48cGF0aCBkPSJtMTYuNzU0IDI4Ljg0NWMuMDM1LS40LjIyNy0uNzMyLjQzNi0xLjA2My0uMjEtLjA4Ny0uMzY2LS4yNi0uNDg4LS40NTNhMy4yMzUgMy4yMzUgMCAwIDEgLS4yNi0uNTc1Yy0uMjQ0LS43MzItLjI5Ni0xLjUtLjM2Ni0yLjI0OHYtLjQ1M2MtLjA4Ny4wNy0uMTA1LjY2Mi0uMTA1Ljc1YTE3LjM3IDE3LjM3IDAgMCAxIC0uMzE0IDIuMzUzYy0uMDUyLjMxNC0uMDg3LjYyNy0uMjguOTA2IDAgLjAzNSAwIC4wNy4wMTcuMTIyLjMxNC45MjQuNCAxLjg2NS40NTMgMi44MjR2LjM1YzAgLjQxOC0uMDE3LjMzLjMzLjQ3LjE0LjA1Mi4yOTYuMDcuNDM2LjE3NC4xMDUgMCAuMTIyLS4wODcuMTIyLS4xNTdsLS4wNTItLjU3NXYtMS42MDRjLS4wMTctLjI4LjAzNS0uNTU4LjA3LS44MnoiIGZpbGw9IiNjMmJmYmYiLz48L3N2Zz4=",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Find"},{property:"og:description",content:"Find documents | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-mongodb/tasks/io.kestra.plugin.mongodb.Find.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Find"},{name:"twitter:description",content:"Find documents | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-mongodb/tasks/io.kestra.plugin.mongodb.Find.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-mongodb/tasks/io.kestra.plugin.mongodb.Find.html",relativePath:"plugins/plugin-mongodb/tasks/io.kestra.plugin.mongodb.Find.md",key:"v-3720c639",path:"/plugins/plugin-mongodb/tasks/io.kestra.plugin.mongodb.Find.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:67},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:311},{level:3,title:"collection",slug:"collection",normalizedTitle:"collection",charIndex:228},{level:3,title:"connection",slug:"connection",normalizedTitle:"connection",charIndex:126},{level:3,title:"database",slug:"database",normalizedTitle:"database",charIndex:204},{level:3,title:"filter",slug:"filter",normalizedTitle:"filter",charIndex:256},{level:3,title:"limit",slug:"limit",normalizedTitle:"limit",charIndex:720},{level:3,title:"projection",slug:"projection",normalizedTitle:"projection",charIndex:813},{level:3,title:"skip",slug:"skip",normalizedTitle:"skip",charIndex:936},{level:3,title:"sort",slug:"sort",normalizedTitle:"sort",charIndex:1026},{level:3,title:"store",slug:"store",normalizedTitle:"store",charIndex:1137},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1296},{level:3,title:"rows",slug:"rows",normalizedTitle:"rows",charIndex:1308},{level:3,title:"size",slug:"size",normalizedTitle:"size",charIndex:1439},{level:3,title:"uri",slug:"uri",normalizedTitle:"uri",charIndex:140},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:1589},{level:3,title:"MongoDbConnection",slug:"mongodbconnection",normalizedTitle:"mongodbconnection",charIndex:437}],headersStr:"Examples Properties collection connection database filter limit projection skip sort store Outputs rows size uri Definitions MongoDbConnection",content:'Find\n\ntype: "io.kestra.plugin.mongodb.Find"\n\n\n> Find documents\n\n\n# Examples\n\nid: "find"\ntype: "io.kestra.plugin.mongodb.Find"\nconnection:\n  uri: "mongodb://root:example@localhost:27017/?authSource=admin"\ndatabase: "my_database"\ncollection: "my_collection"\nfilter:\n  _id:\n    $oid: 60930c39a982931c20ef6cd6\n\n\n\n# Properties\n\n\n# collection\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The mongodb collection.\n\n\n# connection\n\n * Type: MongoDbConnection\n * Dynamic: ❓\n * Required: ✔️\n\n> The connection properties.\n\n\n# database\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The mongodb database.\n\n\n# filter\n\n * Type: ====\n * Dynamic: ✔️\n * Required: ❌\n\n> The mongodb bson filter\n\nCan be a bson string, or a map\n\n\n# limit\n\n * Type: integer\n * Dynamic: ✔️\n * Required: ❌\n\n> The number of records to return\n\n\n# projection\n\n * Type: ====\n * Dynamic: ✔️\n * Required: ❌\n\n> The mongodb bson projection\n\nCan be a bson string, or a map\n\n\n# skip\n\n * Type: integer\n * Dynamic: ✔️\n * Required: ❌\n\n> The number of records to skip\n\n\n# sort\n\n * Type: ====\n * Dynamic: ✔️\n * Required: ❌\n\n> The mongodb bson sort\n\nCan be a bson string, or a map\n\n\n# store\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n * Default: false\n\n> Whether to store the data from the query result into an ion serialized data file\n\n\n# Outputs\n\n\n# rows\n\n * Type: array\n * SubType: array\n\n> List containing the fetched data\n\nOnly populated if store parameter is set to false.\n\n\n# size\n\n * Type: integer\n\n> The size of the rows fetch\n\n\n# uri\n\n * Type: string\n\n> The uri of store result\n\nOnly populated if store is set to true.\n\n\n# Definitions\n\n\n# MongoDbConnection\n\n# uri\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> Connection string to mongodb server\n\nurl format like mongodb://mongodb0.example.com:27017',normalizedContent:'find\n\ntype: "io.kestra.plugin.mongodb.find"\n\n\n> find documents\n\n\n# examples\n\nid: "find"\ntype: "io.kestra.plugin.mongodb.find"\nconnection:\n  uri: "mongodb://root:example@localhost:27017/?authsource=admin"\ndatabase: "my_database"\ncollection: "my_collection"\nfilter:\n  _id:\n    $oid: 60930c39a982931c20ef6cd6\n\n\n\n# properties\n\n\n# collection\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the mongodb collection.\n\n\n# connection\n\n * type: mongodbconnection\n * dynamic: ❓\n * required: ✔️\n\n> the connection properties.\n\n\n# database\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the mongodb database.\n\n\n# filter\n\n * type: ====\n * dynamic: ✔️\n * required: ❌\n\n> the mongodb bson filter\n\ncan be a bson string, or a map\n\n\n# limit\n\n * type: integer\n * dynamic: ✔️\n * required: ❌\n\n> the number of records to return\n\n\n# projection\n\n * type: ====\n * dynamic: ✔️\n * required: ❌\n\n> the mongodb bson projection\n\ncan be a bson string, or a map\n\n\n# skip\n\n * type: integer\n * dynamic: ✔️\n * required: ❌\n\n> the number of records to skip\n\n\n# sort\n\n * type: ====\n * dynamic: ✔️\n * required: ❌\n\n> the mongodb bson sort\n\ncan be a bson string, or a map\n\n\n# store\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n * default: false\n\n> whether to store the data from the query result into an ion serialized data file\n\n\n# outputs\n\n\n# rows\n\n * type: array\n * subtype: array\n\n> list containing the fetched data\n\nonly populated if store parameter is set to false.\n\n\n# size\n\n * type: integer\n\n> the size of the rows fetch\n\n\n# uri\n\n * type: string\n\n> the uri of store result\n\nonly populated if store is set to true.\n\n\n# definitions\n\n\n# mongodbconnection\n\n# uri\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> connection string to mongodb server\n\nurl format like mongodb://mongodb0.example.com:27017',charsets:{}},{title:"InsertOne",frontmatter:{title:"InsertOne",editLink:!1,description:"Insert one document",icon:"PHN2ZyBoZWlnaHQ9IjI1MDAiIHZpZXdCb3g9IjguNzM4IC01LjAzNjIyODM0IDE3LjQ1OTkyNDIyIDM5LjQwNjE5NDg0IiB3aWR0aD0iMjUwMCIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj48cGF0aCBkPSJtMTUuOS4wODcuODU0IDEuNjA0Yy4xOTIuMjk2LjQuNTU4LjY0NS44MDJhMjIuNDA2IDIyLjQwNiAwIDAgMSAyLjAwNCAyLjI2NmMxLjQ0NyAxLjkgMi40MjMgNC4wMSAzLjEyIDYuMjkyLjQxOCAxLjM5NC42NDUgMi44MjQuNjYyIDQuMjcuMDcgNC4zMjMtMS40MTIgOC4wMzUtNC40IDExLjEyYTEyLjcgMTIuNyAwIDAgMSAtMS41NyAxLjM0MmMtLjI5NiAwLS40MzYtLjIyNy0uNTU4LS40MzZhMy41ODkgMy41ODkgMCAwIDEgLS40MzYtMS4yNTVjLS4xMDUtLjUyMy0uMTc0LTEuMDQ2LS4xNC0xLjU4NnYtLjI0NGMtLjAyNC0uMDUyLS4yODUtMjQuMDUyLS4xODEtMjQuMTc1eiIgZmlsbD0iIzU5OTYzNiIvPjxwYXRoIGQ9Im0xNS45LjAzNGMtLjAzNS0uMDctLjA3LS4wMTctLjEwNS4wMTcuMDE3LjM1LS4xMDUuNjYyLS4yOTYuOTYtLjIxLjI5Ni0uNDg4LjUyMy0uNzY3Ljc2Ny0xLjU1IDEuMzQyLTIuNzcgMi45NjMtMy43NDcgNC43NzYtMS4zIDIuNDQtMS45NyA1LjA1NS0yLjE2IDcuODA4LS4wODcuOTkzLjMxNCA0LjQ5Ny42MjcgNS41MDguODU0IDIuNjg0IDIuMzg4IDQuOTMzIDQuMzc1IDYuODg1LjQ4OC40NyAxLjAxLjkwNiAxLjU1IDEuMzI1LjE1NyAwIC4xNzQtLjE0LjIxLS4yNDRhNC43OCA0Ljc4IDAgMCAwIC4xNTctLjY4bC4zNS0yLjYxNHoiIGZpbGw9IiM2Y2FjNDgiLz48cGF0aCBkPSJtMTYuNzU0IDI4Ljg0NWMuMDM1LS40LjIyNy0uNzMyLjQzNi0xLjA2My0uMjEtLjA4Ny0uMzY2LS4yNi0uNDg4LS40NTNhMy4yMzUgMy4yMzUgMCAwIDEgLS4yNi0uNTc1Yy0uMjQ0LS43MzItLjI5Ni0xLjUtLjM2Ni0yLjI0OHYtLjQ1M2MtLjA4Ny4wNy0uMTA1LjY2Mi0uMTA1Ljc1YTE3LjM3IDE3LjM3IDAgMCAxIC0uMzE0IDIuMzUzYy0uMDUyLjMxNC0uMDg3LjYyNy0uMjguOTA2IDAgLjAzNSAwIC4wNy4wMTcuMTIyLjMxNC45MjQuNCAxLjg2NS40NTMgMi44MjR2LjM1YzAgLjQxOC0uMDE3LjMzLjMzLjQ3LjE0LjA1Mi4yOTYuMDcuNDM2LjE3NC4xMDUgMCAuMTIyLS4wODcuMTIyLS4xNTdsLS4wNTItLjU3NXYtMS42MDRjLS4wMTctLjI4LjAzNS0uNTU4LjA3LS44MnoiIGZpbGw9IiNjMmJmYmYiLz48L3N2Zz4=",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"InsertOne"},{property:"og:description",content:"Insert one document | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-mongodb/tasks/io.kestra.plugin.mongodb.InsertOne.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"InsertOne"},{name:"twitter:description",content:"Insert one document | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-mongodb/tasks/io.kestra.plugin.mongodb.InsertOne.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-mongodb/tasks/io.kestra.plugin.mongodb.InsertOne.html",relativePath:"plugins/plugin-mongodb/tasks/io.kestra.plugin.mongodb.InsertOne.md",key:"v-6d55a783",path:"/plugins/plugin-mongodb/tasks/io.kestra.plugin.mongodb.InsertOne.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:82},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:684},{level:3,title:"collection",slug:"collection",normalizedTitle:"collection",charIndex:286},{level:3,title:"connection",slug:"connection",normalizedTitle:"connection",charIndex:184},{level:3,title:"database",slug:"database",normalizedTitle:"database",charIndex:262},{level:3,title:"document",slug:"document",normalizedTitle:"document",charIndex:69},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1093},{level:3,title:"insertedId",slug:"insertedid",normalizedTitle:"insertedid",charIndex:1105},{level:3,title:"wasAcknowledged",slug:"wasacknowledged",normalizedTitle:"wasacknowledged",charIndex:1156},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:1233},{level:3,title:"MongoDbConnection",slug:"mongodbconnection",normalizedTitle:"mongodbconnection",charIndex:810}],headersStr:"Examples Properties collection connection database document Outputs insertedId wasAcknowledged Definitions MongoDbConnection",content:'InsertOne\n\ntype: "io.kestra.plugin.mongodb.InsertOne"\n\n\n> Insert one document\n\n\n# Examples\n\n> Insert a document with a map\n\nid: "insert_one"\ntype: "io.kestra.plugin.mongodb.InsertOne"\nconnection:\n  uri: "mongodb://root:example@localhost:27017/?authSource=admin"\ndatabase: "my_database"\ncollection: "my_collection"\ndocument:\n  _id:\n    $oid: 60930c39a982931c20ef6cd6\n  name: "John Doe"\n  city: "Paris"\n\n\n> Insert a document from a json string\n\nid: "insert_one"\ntype: "io.kestra.plugin.mongodb.InsertOne"\nconnection:\n  uri: "mongodb://root:example@localhost:27017/?authSource=admin"\ndatabase: "my_database"\ncollection: "my_collection"\ndocument: "{{ outputs.task_id.data | json }}"\n\n\n\n# Properties\n\n\n# collection\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The mongodb collection.\n\n\n# connection\n\n * Type: MongoDbConnection\n * Dynamic: ❓\n * Required: ✔️\n\n> The connection properties.\n\n\n# database\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The mongodb database.\n\n\n# document\n\n * Type: ====\n * Dynamic: ✔️\n * Required: ✔️\n\n> The mongodb document\n\nCan be a bson string, or a map\n\n\n# Outputs\n\n\n# insertedId\n\n * Type: string\n\n> The inserted Id\n\n\n# wasAcknowledged\n\n * Type: boolean\n\n> true if the write was acknowledged.\n\n\n# Definitions\n\n\n# MongoDbConnection\n\n# uri\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> Connection string to mongodb server\n\nurl format like mongodb://mongodb0.example.com:27017',normalizedContent:'insertone\n\ntype: "io.kestra.plugin.mongodb.insertone"\n\n\n> insert one document\n\n\n# examples\n\n> insert a document with a map\n\nid: "insert_one"\ntype: "io.kestra.plugin.mongodb.insertone"\nconnection:\n  uri: "mongodb://root:example@localhost:27017/?authsource=admin"\ndatabase: "my_database"\ncollection: "my_collection"\ndocument:\n  _id:\n    $oid: 60930c39a982931c20ef6cd6\n  name: "john doe"\n  city: "paris"\n\n\n> insert a document from a json string\n\nid: "insert_one"\ntype: "io.kestra.plugin.mongodb.insertone"\nconnection:\n  uri: "mongodb://root:example@localhost:27017/?authsource=admin"\ndatabase: "my_database"\ncollection: "my_collection"\ndocument: "{{ outputs.task_id.data | json }}"\n\n\n\n# properties\n\n\n# collection\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the mongodb collection.\n\n\n# connection\n\n * type: mongodbconnection\n * dynamic: ❓\n * required: ✔️\n\n> the connection properties.\n\n\n# database\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the mongodb database.\n\n\n# document\n\n * type: ====\n * dynamic: ✔️\n * required: ✔️\n\n> the mongodb document\n\ncan be a bson string, or a map\n\n\n# outputs\n\n\n# insertedid\n\n * type: string\n\n> the inserted id\n\n\n# wasacknowledged\n\n * type: boolean\n\n> true if the write was acknowledged.\n\n\n# definitions\n\n\n# mongodbconnection\n\n# uri\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> connection string to mongodb server\n\nurl format like mongodb://mongodb0.example.com:27017',charsets:{cjk:!0}},{title:"Load",frontmatter:{title:"Load",editLink:!1,description:"Bulk load documents in elasticsearch using Kestra Internal Storage file",icon:"PHN2ZyBoZWlnaHQ9IjI1MDAiIHZpZXdCb3g9IjguNzM4IC01LjAzNjIyODM0IDE3LjQ1OTkyNDIyIDM5LjQwNjE5NDg0IiB3aWR0aD0iMjUwMCIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj48cGF0aCBkPSJtMTUuOS4wODcuODU0IDEuNjA0Yy4xOTIuMjk2LjQuNTU4LjY0NS44MDJhMjIuNDA2IDIyLjQwNiAwIDAgMSAyLjAwNCAyLjI2NmMxLjQ0NyAxLjkgMi40MjMgNC4wMSAzLjEyIDYuMjkyLjQxOCAxLjM5NC42NDUgMi44MjQuNjYyIDQuMjcuMDcgNC4zMjMtMS40MTIgOC4wMzUtNC40IDExLjEyYTEyLjcgMTIuNyAwIDAgMSAtMS41NyAxLjM0MmMtLjI5NiAwLS40MzYtLjIyNy0uNTU4LS40MzZhMy41ODkgMy41ODkgMCAwIDEgLS40MzYtMS4yNTVjLS4xMDUtLjUyMy0uMTc0LTEuMDQ2LS4xNC0xLjU4NnYtLjI0NGMtLjAyNC0uMDUyLS4yODUtMjQuMDUyLS4xODEtMjQuMTc1eiIgZmlsbD0iIzU5OTYzNiIvPjxwYXRoIGQ9Im0xNS45LjAzNGMtLjAzNS0uMDctLjA3LS4wMTctLjEwNS4wMTcuMDE3LjM1LS4xMDUuNjYyLS4yOTYuOTYtLjIxLjI5Ni0uNDg4LjUyMy0uNzY3Ljc2Ny0xLjU1IDEuMzQyLTIuNzcgMi45NjMtMy43NDcgNC43NzYtMS4zIDIuNDQtMS45NyA1LjA1NS0yLjE2IDcuODA4LS4wODcuOTkzLjMxNCA0LjQ5Ny42MjcgNS41MDguODU0IDIuNjg0IDIuMzg4IDQuOTMzIDQuMzc1IDYuODg1LjQ4OC40NyAxLjAxLjkwNiAxLjU1IDEuMzI1LjE1NyAwIC4xNzQtLjE0LjIxLS4yNDRhNC43OCA0Ljc4IDAgMCAwIC4xNTctLjY4bC4zNS0yLjYxNHoiIGZpbGw9IiM2Y2FjNDgiLz48cGF0aCBkPSJtMTYuNzU0IDI4Ljg0NWMuMDM1LS40LjIyNy0uNzMyLjQzNi0xLjA2My0uMjEtLjA4Ny0uMzY2LS4yNi0uNDg4LS40NTNhMy4yMzUgMy4yMzUgMCAwIDEgLS4yNi0uNTc1Yy0uMjQ0LS43MzItLjI5Ni0xLjUtLjM2Ni0yLjI0OHYtLjQ1M2MtLjA4Ny4wNy0uMTA1LjY2Mi0uMTA1Ljc1YTE3LjM3IDE3LjM3IDAgMCAxIC0uMzE0IDIuMzUzYy0uMDUyLjMxNC0uMDg3LjYyNy0uMjguOTA2IDAgLjAzNSAwIC4wNy4wMTcuMTIyLjMxNC45MjQuNCAxLjg2NS40NTMgMi44MjR2LjM1YzAgLjQxOC0uMDE3LjMzLjMzLjQ3LjE0LjA1Mi4yOTYuMDcuNDM2LjE3NC4xMDUgMCAuMTIyLS4wODcuMTIyLS4xNTdsLS4wNTItLjU3NXYtMS42MDRjLS4wMTctLjI4LjAzNS0uNTU4LjA3LS44MnoiIGZpbGw9IiNjMmJmYmYiLz48L3N2Zz4=",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Load"},{property:"og:description",content:"Bulk load documents in elasticsearch using Kestra Internal Storage file | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-mongodb/tasks/io.kestra.plugin.mongodb.Load.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Load"},{name:"twitter:description",content:"Bulk load documents in elasticsearch using Kestra Internal Storage file | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-mongodb/tasks/io.kestra.plugin.mongodb.Load.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-mongodb/tasks/io.kestra.plugin.mongodb.Load.html",relativePath:"plugins/plugin-mongodb/tasks/io.kestra.plugin.mongodb.Load.md",key:"v-5114ce42",path:"/plugins/plugin-mongodb/tasks/io.kestra.plugin.mongodb.Load.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:124},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:344},{level:3,title:"chunk",slug:"chunk",normalizedTitle:"chunk",charIndex:359},{level:3,title:"collection",slug:"collection",normalizedTitle:"collection",charIndex:285},{level:3,title:"connection",slug:"connection",normalizedTitle:"connection",charIndex:183},{level:3,title:"database",slug:"database",normalizedTitle:"database",charIndex:261},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:313},{level:3,title:"idKey",slug:"idkey",normalizedTitle:"idkey",charIndex:816},{level:3,title:"removeIdKey",slug:"removeidkey",normalizedTitle:"removeidkey",charIndex:896},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1017},{level:3,title:"deletedCount",slug:"deletedcount",normalizedTitle:"deletedcount",charIndex:1029},{level:3,title:"insertedCount",slug:"insertedcount",normalizedTitle:"insertedcount",charIndex:1137},{level:3,title:"matchedCount",slug:"matchedcount",normalizedTitle:"matchedcount",charIndex:1247},{level:3,title:"modifiedCount",slug:"modifiedcount",normalizedTitle:"modifiedcount",charIndex:1382},{level:3,title:"size",slug:"size",normalizedTitle:"size",charIndex:420},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:1553},{level:3,title:"MongoDbConnection",slug:"mongodbconnection",normalizedTitle:"mongodbconnection",charIndex:572}],headersStr:"Examples Properties chunk collection connection database from idKey removeIdKey Outputs deletedCount insertedCount matchedCount modifiedCount size Definitions MongoDbConnection",content:'Load\n\ntype: "io.kestra.plugin.mongodb.Load"\n\n\n> Bulk load documents in elasticsearch using Kestra Internal Storage file\n\n\n# Examples\n\nid: "load"\ntype: "io.kestra.plugin.mongodb.Load"\nconnection:\n  uri: "mongodb://root:example@localhost:27017/?authSource=admin"\ndatabase: "my_database"\ncollection: "my_collection"\nfrom: "{{ inputs.file }}"\n\n\n\n# Properties\n\n\n# chunk\n\n * Type: integer\n * Dynamic: ✔️\n * Required: ❌\n\n> The size of chunk for every bulk request\n\n\n# collection\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The mongodb collection.\n\n\n# connection\n\n * Type: MongoDbConnection\n * Dynamic: ❓\n * Required: ✔️\n\n> The connection properties.\n\n\n# database\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The mongodb database.\n\n\n# from\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The source file\n\n\n# idKey\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Use this key as id.\n\n\n# removeIdKey\n\n * Type: boolean\n * Dynamic: ✔️\n * Required: ❌\n * Default: true\n\n> Remove idKey from the final document\n\n\n# Outputs\n\n\n# deletedCount\n\n * Type: integer\n * Default: 0\n\n> The number of documents deleted by the write operation.\n\n\n# insertedCount\n\n * Type: integer\n * Default: 0\n\n> The number of documents inserted by the write operation.\n\n\n# matchedCount\n\n * Type: integer\n * Default: 0\n\n> The number of documents matched by updates or replacements in the write operation.\n\n\n# modifiedCount\n\n * Type: integer\n * Default: 0\n\n> The number of documents modified by the write operation.\n\n\n# size\n\n * Type: integer\n\n> The size of the rows processed\n\n\n# Definitions\n\n\n# MongoDbConnection\n\n# uri\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> Connection string to mongodb server\n\nurl format like mongodb://mongodb0.example.com:27017',normalizedContent:'load\n\ntype: "io.kestra.plugin.mongodb.load"\n\n\n> bulk load documents in elasticsearch using kestra internal storage file\n\n\n# examples\n\nid: "load"\ntype: "io.kestra.plugin.mongodb.load"\nconnection:\n  uri: "mongodb://root:example@localhost:27017/?authsource=admin"\ndatabase: "my_database"\ncollection: "my_collection"\nfrom: "{{ inputs.file }}"\n\n\n\n# properties\n\n\n# chunk\n\n * type: integer\n * dynamic: ✔️\n * required: ❌\n\n> the size of chunk for every bulk request\n\n\n# collection\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the mongodb collection.\n\n\n# connection\n\n * type: mongodbconnection\n * dynamic: ❓\n * required: ✔️\n\n> the connection properties.\n\n\n# database\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the mongodb database.\n\n\n# from\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the source file\n\n\n# idkey\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> use this key as id.\n\n\n# removeidkey\n\n * type: boolean\n * dynamic: ✔️\n * required: ❌\n * default: true\n\n> remove idkey from the final document\n\n\n# outputs\n\n\n# deletedcount\n\n * type: integer\n * default: 0\n\n> the number of documents deleted by the write operation.\n\n\n# insertedcount\n\n * type: integer\n * default: 0\n\n> the number of documents inserted by the write operation.\n\n\n# matchedcount\n\n * type: integer\n * default: 0\n\n> the number of documents matched by updates or replacements in the write operation.\n\n\n# modifiedcount\n\n * type: integer\n * default: 0\n\n> the number of documents modified by the write operation.\n\n\n# size\n\n * type: integer\n\n> the size of the rows processed\n\n\n# definitions\n\n\n# mongodbconnection\n\n# uri\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> connection string to mongodb server\n\nurl format like mongodb://mongodb0.example.com:27017',charsets:{}},{title:"Update",frontmatter:{title:"Update",editLink:!1,description:"Update or Replace one or many documents",icon:"PHN2ZyBoZWlnaHQ9IjI1MDAiIHZpZXdCb3g9IjguNzM4IC01LjAzNjIyODM0IDE3LjQ1OTkyNDIyIDM5LjQwNjE5NDg0IiB3aWR0aD0iMjUwMCIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj48cGF0aCBkPSJtMTUuOS4wODcuODU0IDEuNjA0Yy4xOTIuMjk2LjQuNTU4LjY0NS44MDJhMjIuNDA2IDIyLjQwNiAwIDAgMSAyLjAwNCAyLjI2NmMxLjQ0NyAxLjkgMi40MjMgNC4wMSAzLjEyIDYuMjkyLjQxOCAxLjM5NC42NDUgMi44MjQuNjYyIDQuMjcuMDcgNC4zMjMtMS40MTIgOC4wMzUtNC40IDExLjEyYTEyLjcgMTIuNyAwIDAgMSAtMS41NyAxLjM0MmMtLjI5NiAwLS40MzYtLjIyNy0uNTU4LS40MzZhMy41ODkgMy41ODkgMCAwIDEgLS40MzYtMS4yNTVjLS4xMDUtLjUyMy0uMTc0LTEuMDQ2LS4xNC0xLjU4NnYtLjI0NGMtLjAyNC0uMDUyLS4yODUtMjQuMDUyLS4xODEtMjQuMTc1eiIgZmlsbD0iIzU5OTYzNiIvPjxwYXRoIGQ9Im0xNS45LjAzNGMtLjAzNS0uMDctLjA3LS4wMTctLjEwNS4wMTcuMDE3LjM1LS4xMDUuNjYyLS4yOTYuOTYtLjIxLjI5Ni0uNDg4LjUyMy0uNzY3Ljc2Ny0xLjU1IDEuMzQyLTIuNzcgMi45NjMtMy43NDcgNC43NzYtMS4zIDIuNDQtMS45NyA1LjA1NS0yLjE2IDcuODA4LS4wODcuOTkzLjMxNCA0LjQ5Ny42MjcgNS41MDguODU0IDIuNjg0IDIuMzg4IDQuOTMzIDQuMzc1IDYuODg1LjQ4OC40NyAxLjAxLjkwNiAxLjU1IDEuMzI1LjE1NyAwIC4xNzQtLjE0LjIxLS4yNDRhNC43OCA0Ljc4IDAgMCAwIC4xNTctLjY4bC4zNS0yLjYxNHoiIGZpbGw9IiM2Y2FjNDgiLz48cGF0aCBkPSJtMTYuNzU0IDI4Ljg0NWMuMDM1LS40LjIyNy0uNzMyLjQzNi0xLjA2My0uMjEtLjA4Ny0uMzY2LS4yNi0uNDg4LS40NTNhMy4yMzUgMy4yMzUgMCAwIDEgLS4yNi0uNTc1Yy0uMjQ0LS43MzItLjI5Ni0xLjUtLjM2Ni0yLjI0OHYtLjQ1M2MtLjA4Ny4wNy0uMTA1LjY2Mi0uMTA1Ljc1YTE3LjM3IDE3LjM3IDAgMCAxIC0uMzE0IDIuMzUzYy0uMDUyLjMxNC0uMDg3LjYyNy0uMjguOTA2IDAgLjAzNSAwIC4wNy4wMTcuMTIyLjMxNC45MjQuNCAxLjg2NS40NTMgMi44MjR2LjM1YzAgLjQxOC0uMDE3LjMzLjMzLjQ3LjE0LjA1Mi4yOTYuMDcuNDM2LjE3NC4xMDUgMCAuMTIyLS4wODcuMTIyLS4xNTdsLS4wNTItLjU3NXYtMS42MDRjLS4wMTctLjI4LjAzNS0uNTU4LjA3LS44MnoiIGZpbGw9IiNjMmJmYmYiLz48L3N2Zz4=",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Update"},{property:"og:description",content:"Update or Replace one or many documents | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-mongodb/tasks/io.kestra.plugin.mongodb.Update.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Update"},{name:"twitter:description",content:"Update or Replace one or many documents | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-mongodb/tasks/io.kestra.plugin.mongodb.Update.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-mongodb/tasks/io.kestra.plugin.mongodb.Update.html",relativePath:"plugins/plugin-mongodb/tasks/io.kestra.plugin.mongodb.Update.md",key:"v-6aa16659",path:"/plugins/plugin-mongodb/tasks/io.kestra.plugin.mongodb.Update.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:96},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:792},{level:3,title:"collection",slug:"collection",normalizedTitle:"collection",charIndex:283},{level:3,title:"connection",slug:"connection",normalizedTitle:"connection",charIndex:181},{level:3,title:"database",slug:"database",normalizedTitle:"database",charIndex:259},{level:3,title:"document",slug:"document",normalizedTitle:"document",charIndex:82},{level:3,title:"filter",slug:"filter",normalizedTitle:"filter",charIndex:423},{level:3,title:"operation",slug:"operation",normalizedTitle:"operation",charIndex:311},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1498},{level:3,title:"matchedCount",slug:"matchedcount",normalizedTitle:"matchedcount",charIndex:1510},{level:3,title:"modifiedCount",slug:"modifiedcount",normalizedTitle:"modifiedcount",charIndex:1608},{level:3,title:"upsertedId",slug:"upsertedid",normalizedTitle:"upsertedid",charIndex:1695},{level:3,title:"wasAcknowledged",slug:"wasacknowledged",normalizedTitle:"wasacknowledged",charIndex:1781},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:1858},{level:3,title:"MongoDbConnection",slug:"mongodbconnection",normalizedTitle:"mongodbconnection",charIndex:918}],headersStr:"Examples Properties collection connection database document filter operation Outputs matchedCount modifiedCount upsertedId wasAcknowledged Definitions MongoDbConnection",content:'Update\n\ntype: "io.kestra.plugin.mongodb.Update"\n\n\n> Update or Replace one or many documents\n\n\n# Examples\n\n> Replace a document\n\nid: "update"\ntype: "io.kestra.plugin.mongodb.Update"\nconnection:\n  uri: "mongodb://root:example@localhost:27017/?authSource=admin"\ndatabase: "my_database"\ncollection: "my_collection"\noperation: "REPLACE_ONE"\ndocument:\n  _id:\n    $oid: 60930c39a982931c20ef6cd6\n  name: "John Doe"\n  city: "Paris"\nfilter:\n  _id:\n    $oid: 60930c39a982931c20ef6cd6\n\n\n> Update a document\n\nid: "update"\ntype: "io.kestra.plugin.mongodb.Update"\nconnection:\n  uri: "mongodb://root:example@localhost:27017/?authSource=admin"\ndatabase: "my_database"\ncollection: "my_collection"\nfilter:\n  _id:\n    $oid: 60930c39a982931c20ef6cd6\ndocument: "{"$set": { "tags": ["blue", "green", "red"]}}"\n\n\n\n# Properties\n\n\n# collection\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The mongodb collection.\n\n\n# connection\n\n * Type: MongoDbConnection\n * Dynamic: ❓\n * Required: ✔️\n\n> The connection properties.\n\n\n# database\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The mongodb database.\n\n\n# document\n\n * Type: ====\n * Dynamic: ✔️\n * Required: ✔️\n\n> The mongodb document\n\nCan be a bson string, or a map\n\n\n# filter\n\n * Type: ====\n * Dynamic: ✔️\n * Required: ✔️\n\n> The mongodb bson filter\n\nCan be a bson string, or a map\n\n\n# operation\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ❌\n\n * Default: UPDATE_ONE\n\n * Possible Values:\n   \n   * REPLACE_ONE\n   * UPDATE_ONE\n   * UPDATE_MANY\n\n> Operation to use\n\n\n# Outputs\n\n\n# matchedCount\n\n * Type: integer\n * Default: 0\n\n> The number of documents matched by the query.\n\n\n# modifiedCount\n\n * Type: integer\n\n> The number of documents modified by the update.\n\n\n# upsertedId\n\n * Type: string\n\n> The upserted Id\n\nWill be null if replace operation\n\n\n# wasAcknowledged\n\n * Type: boolean\n\n> true if the write was acknowledged.\n\n\n# Definitions\n\n\n# MongoDbConnection\n\n# uri\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> Connection string to mongodb server\n\nurl format like mongodb://mongodb0.example.com:27017',normalizedContent:'update\n\ntype: "io.kestra.plugin.mongodb.update"\n\n\n> update or replace one or many documents\n\n\n# examples\n\n> replace a document\n\nid: "update"\ntype: "io.kestra.plugin.mongodb.update"\nconnection:\n  uri: "mongodb://root:example@localhost:27017/?authsource=admin"\ndatabase: "my_database"\ncollection: "my_collection"\noperation: "replace_one"\ndocument:\n  _id:\n    $oid: 60930c39a982931c20ef6cd6\n  name: "john doe"\n  city: "paris"\nfilter:\n  _id:\n    $oid: 60930c39a982931c20ef6cd6\n\n\n> update a document\n\nid: "update"\ntype: "io.kestra.plugin.mongodb.update"\nconnection:\n  uri: "mongodb://root:example@localhost:27017/?authsource=admin"\ndatabase: "my_database"\ncollection: "my_collection"\nfilter:\n  _id:\n    $oid: 60930c39a982931c20ef6cd6\ndocument: "{"$set": { "tags": ["blue", "green", "red"]}}"\n\n\n\n# properties\n\n\n# collection\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the mongodb collection.\n\n\n# connection\n\n * type: mongodbconnection\n * dynamic: ❓\n * required: ✔️\n\n> the connection properties.\n\n\n# database\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the mongodb database.\n\n\n# document\n\n * type: ====\n * dynamic: ✔️\n * required: ✔️\n\n> the mongodb document\n\ncan be a bson string, or a map\n\n\n# filter\n\n * type: ====\n * dynamic: ✔️\n * required: ✔️\n\n> the mongodb bson filter\n\ncan be a bson string, or a map\n\n\n# operation\n\n * type: string\n\n * dynamic: ❌\n\n * required: ❌\n\n * default: update_one\n\n * possible values:\n   \n   * replace_one\n   * update_one\n   * update_many\n\n> operation to use\n\n\n# outputs\n\n\n# matchedcount\n\n * type: integer\n * default: 0\n\n> the number of documents matched by the query.\n\n\n# modifiedcount\n\n * type: integer\n\n> the number of documents modified by the update.\n\n\n# upsertedid\n\n * type: string\n\n> the upserted id\n\nwill be null if replace operation\n\n\n# wasacknowledged\n\n * type: boolean\n\n> true if the write was acknowledged.\n\n\n# definitions\n\n\n# mongodbconnection\n\n# uri\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> connection string to mongodb server\n\nurl format like mongodb://mongodb0.example.com:27017',charsets:{}},{title:"Plugin notifications",frontmatter:{title:"Plugin notifications",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Plugin notifications"},{property:"og:description",content:"Plugin notifications | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-notifications/"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Plugin notifications"},{name:"twitter:description",content:"Plugin notifications | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-notifications/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-notifications/",relativePath:"plugins/plugin-notifications/README.md",key:"v-3a591248",path:"/plugins/plugin-notifications/",headers:[{level:2,title:"Mail",slug:"mail",normalizedTitle:"mail",charIndex:27},{level:3,title:"Tasks",slug:"tasks",normalizedTitle:"tasks",charIndex:36},{level:2,title:"Slack",slug:"slack",normalizedTitle:"slack",charIndex:92},{level:3,title:"Tasks",slug:"tasks-2",normalizedTitle:"tasks",charIndex:36}],headersStr:"Mail Tasks Slack Tasks",content:"# Plugin notifications\n\n\n# Mail\n\n\n# Tasks\n\n * MailExecution\n * MailSend\n * MailTemplate\n\n\n# Slack\n\n\n# Tasks\n\n * SlackExecution\n * SlackIncomingWebhook\n * SlackTemplate",normalizedContent:"# plugin notifications\n\n\n# mail\n\n\n# tasks\n\n * mailexecution\n * mailsend\n * mailtemplate\n\n\n# slack\n\n\n# tasks\n\n * slackexecution\n * slackincomingwebhook\n * slacktemplate",charsets:{}},{title:"MailExecution",frontmatter:{title:"MailExecution",editLink:!1,description:"Task to send a mail with execution information",icon:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB3aWR0aD0iMjQiIGhlaWdodD0iMjQiCiAgICAgcHJlc2VydmVBc3BlY3RSYXRpbz0ieE1pZFlNaWQgbWVldCIgdmlld0JveD0iMCAwIDI0IDI0IgogICAgIHN0eWxlPSItbXMtdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTsgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpOyB0cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpOyI+CiAgICA8cGF0aCBkPSJNMjAgNEg0Yy0xLjEgMC0xLjk5LjktMS45OSAyTDIgMThjMCAxLjEuOSAyIDIgMmgxNmMxLjEgMCAyLS45IDItMlY2YzAtMS4xLS45LTItMi0yem0wIDRsLTggNWwtOC01VjZsOCA1bDgtNXYyeiIKICAgICAgICAgIGZpbGw9IiMzMzMiLz4KPC9zdmc+Cg==",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"MailExecution"},{property:"og:description",content:"Task to send a mail with execution information | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-notifications/tasks/mail/io.kestra.plugin.notifications.mail.MailExecution.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"MailExecution"},{name:"twitter:description",content:"Task to send a mail with execution information | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-notifications/tasks/mail/io.kestra.plugin.notifications.mail.MailExecution.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-notifications/tasks/mail/io.kestra.plugin.notifications.mail.MailExecution.html",relativePath:"plugins/plugin-notifications/tasks/mail/io.kestra.plugin.notifications.mail.MailExecution.md",key:"v-4f9eee3a",path:"/plugins/plugin-notifications/tasks/mail/io.kestra.plugin.notifications.mail.MailExecution.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:242},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:925},{level:3,title:"attachments",slug:"attachments",normalizedTitle:"attachments",charIndex:940},{level:3,title:"cc",slug:"cc",normalizedTitle:"cc",charIndex:1260},{level:3,title:"customFields",slug:"customfields",normalizedTitle:"customfields",charIndex:1513},{level:3,title:"customMessage",slug:"custommessage",normalizedTitle:"custommessage",charIndex:1621},{level:3,title:"embeddedImages",slug:"embeddedimages",normalizedTitle:"embeddedimages",charIndex:1731},{level:3,title:"executionId",slug:"executionid",normalizedTitle:"executionid",charIndex:2040},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:592},{level:3,title:"host",slug:"host",normalizedTitle:"host",charIndex:657},{level:3,title:"htmlTextContent",slug:"htmltextcontent",normalizedTitle:"htmltextcontent",charIndex:2373},{level:3,title:"password",slug:"password",normalizedTitle:"password",charIndex:729},{level:3,title:"port",slug:"port",normalizedTitle:"port",charIndex:688},{level:3,title:"sessionTimeout",slug:"sessiontimeout",normalizedTitle:"sessiontimeout",charIndex:752},{level:3,title:"subject",slug:"subject",normalizedTitle:"subject",charIndex:620},{level:3,title:"templateRenderMap",slug:"templaterendermap",normalizedTitle:"templaterendermap",charIndex:3144},{level:3,title:"templateUri",slug:"templateuri",normalizedTitle:"templateuri",charIndex:3247},{level:3,title:"to",slug:"to",normalizedTitle:"to",charIndex:82},{level:3,title:"transportStrategy",slug:"transportstrategy",normalizedTitle:"transportstrategy",charIndex:781},{level:3,title:"username",slug:"username",normalizedTitle:"username",charIndex:706},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:3863},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:3875},{level:3,title:"Attachment",slug:"attachment",normalizedTitle:"attachment",charIndex:980}],headersStr:"Examples Properties attachments cc customFields customMessage embeddedImages executionId from host htmlTextContent password port sessionTimeout subject templateRenderMap templateUri to transportStrategy username Outputs Definitions Attachment",content:"MailExecution\n\ntype: \"io.kestra.plugin.notifications.mail.MailExecution\"\n\n\n> Task to send a mail with execution information\n\nMain execution information are provided in the sent mail (id, namespace, flow, state, duration, start date ...).\n\n\n# Examples\n\n> Send a mail notification on failed flow\n\nid: mail\nnamespace: io.kestra.tests\n\nlisteners:\n  - conditions:\n      - type: io.kestra.core.models.conditions.types.ExecutionStatusCondition\n        in:\n          - FAILED\n    tasks:\n      - id: mail\n        type: io.kestra.plugin.notifications.mail.MailExecution\n        to: to@mail.com\n        from: from@mail.com\n        subject: This is the subject\n        host: nohost-mail.site\n        port: 465\n        username: user\n        password: pass\n        sessionTimeout: 1000\n        transportStrategy: SMTPS\n\ntasks:\n  - id: ok\n    type: io.kestra.core.tasks.debugs.Return\n    format: \"{{task.id}} > {{taskrun.startDate}}\"\n\n\n\n# Properties\n\n\n# attachments\n\n * Type: array\n * SubType: Attachment\n * Dynamic: ✔️\n * Required: ❌\n\n> Adds an attachment to the email message\n\nwhich will be shown in the email client as separate files available for download or inline display if the client supports it (for example, most browsers these days display PDF's in a popup).\n\n\n# cc\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> One or more 'Cc' (carbon copy) optional recipient email address. Use semicolon as delimiter to provide several addresses\n\nNote that each email address must be an RFC2822 format compliant address.\n\n\n# customFields\n\n * Type: object\n * Dynamic: ❓\n * Required: ❌\n\n> Custom fields to be added on notification\n\n\n# customMessage\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Custom message to be added on notification\n\n\n# embeddedImages\n\n * Type: array\n * SubType: Attachment\n * Dynamic: ✔️\n * Required: ❌\n\n> Adds image data to this email that can be referred to from the email HTML body.\n\nThe provided images is assumed to be of mimetype png, jpg or whatever the email client supports as valid image embedded in HTML content.\n\n\n# executionId\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Default: {{ execution.id }}\n\n> The execution id to use\n\nDefault is the current execution\n\n\n# from\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The address of the sender of this email\n\n\n# host\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The mail server host\n\n\n# htmlTextContent\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The optional email message body in HTML text\n\nBoth text and HTML can be provided, which will be offered to the email client as alternative content. Email clients that support it, will favor HTML over plain text and ignore the text body completely\n\n\n# password\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The mail server password\n\n\n# port\n\n * Type: integer\n * Dynamic: ✔️\n * Required: ❌\n\n> The mail server port\n\n\n# sessionTimeout\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n * Default: 1000\n\n> Controls the timeout to use when sending emails\n\nIt affects socket connect-, read- and write timeouts\n\n\n# subject\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The optional subject of this email\n\n\n# templateRenderMap\n\n * Type: object\n * Dynamic: ✔️\n * Required: ❌\n\n> Render map to use for template\n\n\n# templateUri\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Template to use\n\n\n# to\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> One or more recipient email address. Use semicolon as delimiter to provide several addresses\n\nNote that each email address must be an RFC2822 format compliant address\n\n\n# transportStrategy\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Default: SMTPS\n\n * Possible Values:\n   \n   * SMTP\n   * SMTPS\n   * SMTP_TLS\n\n> The optional transport strategy\n\nWill default to SMTPS if left empty.\n\n\n# username\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The mail server username\n\n\n# Outputs\n\n\n# Definitions\n\n\n# Attachment\n\n# contentType\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Default: application/octet-stream\n\n> One or more 'Cc' (carbon copy) optional recipient email address. Use semicolon as delimiter to provide several addresses\n\nNote that each email address must be an RFC2822 format compliant address.\n\n# name\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> name of the attachment (eg. 'filename.ext').\n\n# uri\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> An attachment uri from kestra internal storage",normalizedContent:"mailexecution\n\ntype: \"io.kestra.plugin.notifications.mail.mailexecution\"\n\n\n> task to send a mail with execution information\n\nmain execution information are provided in the sent mail (id, namespace, flow, state, duration, start date ...).\n\n\n# examples\n\n> send a mail notification on failed flow\n\nid: mail\nnamespace: io.kestra.tests\n\nlisteners:\n  - conditions:\n      - type: io.kestra.core.models.conditions.types.executionstatuscondition\n        in:\n          - failed\n    tasks:\n      - id: mail\n        type: io.kestra.plugin.notifications.mail.mailexecution\n        to: to@mail.com\n        from: from@mail.com\n        subject: this is the subject\n        host: nohost-mail.site\n        port: 465\n        username: user\n        password: pass\n        sessiontimeout: 1000\n        transportstrategy: smtps\n\ntasks:\n  - id: ok\n    type: io.kestra.core.tasks.debugs.return\n    format: \"{{task.id}} > {{taskrun.startdate}}\"\n\n\n\n# properties\n\n\n# attachments\n\n * type: array\n * subtype: attachment\n * dynamic: ✔️\n * required: ❌\n\n> adds an attachment to the email message\n\nwhich will be shown in the email client as separate files available for download or inline display if the client supports it (for example, most browsers these days display pdf's in a popup).\n\n\n# cc\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> one or more 'cc' (carbon copy) optional recipient email address. use semicolon as delimiter to provide several addresses\n\nnote that each email address must be an rfc2822 format compliant address.\n\n\n# customfields\n\n * type: object\n * dynamic: ❓\n * required: ❌\n\n> custom fields to be added on notification\n\n\n# custommessage\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> custom message to be added on notification\n\n\n# embeddedimages\n\n * type: array\n * subtype: attachment\n * dynamic: ✔️\n * required: ❌\n\n> adds image data to this email that can be referred to from the email html body.\n\nthe provided images is assumed to be of mimetype png, jpg or whatever the email client supports as valid image embedded in html content.\n\n\n# executionid\n\n * type: string\n * dynamic: ❓\n * required: ❌\n * default: {{ execution.id }}\n\n> the execution id to use\n\ndefault is the current execution\n\n\n# from\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the address of the sender of this email\n\n\n# host\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the mail server host\n\n\n# htmltextcontent\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the optional email message body in html text\n\nboth text and html can be provided, which will be offered to the email client as alternative content. email clients that support it, will favor html over plain text and ignore the text body completely\n\n\n# password\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the mail server password\n\n\n# port\n\n * type: integer\n * dynamic: ✔️\n * required: ❌\n\n> the mail server port\n\n\n# sessiontimeout\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n * default: 1000\n\n> controls the timeout to use when sending emails\n\nit affects socket connect-, read- and write timeouts\n\n\n# subject\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the optional subject of this email\n\n\n# templaterendermap\n\n * type: object\n * dynamic: ✔️\n * required: ❌\n\n> render map to use for template\n\n\n# templateuri\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> template to use\n\n\n# to\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> one or more recipient email address. use semicolon as delimiter to provide several addresses\n\nnote that each email address must be an rfc2822 format compliant address\n\n\n# transportstrategy\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * default: smtps\n\n * possible values:\n   \n   * smtp\n   * smtps\n   * smtp_tls\n\n> the optional transport strategy\n\nwill default to smtps if left empty.\n\n\n# username\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the mail server username\n\n\n# outputs\n\n\n# definitions\n\n\n# attachment\n\n# contenttype\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * default: application/octet-stream\n\n> one or more 'cc' (carbon copy) optional recipient email address. use semicolon as delimiter to provide several addresses\n\nnote that each email address must be an rfc2822 format compliant address.\n\n# name\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> name of the attachment (eg. 'filename.ext').\n\n# uri\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> an attachment uri from kestra internal storage",charsets:{}},{title:"MailSend",frontmatter:{title:"MailSend",editLink:!1,description:"Generic task to send a mail.",icon:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB3aWR0aD0iMjQiIGhlaWdodD0iMjQiCiAgICAgcHJlc2VydmVBc3BlY3RSYXRpbz0ieE1pZFlNaWQgbWVldCIgdmlld0JveD0iMCAwIDI0IDI0IgogICAgIHN0eWxlPSItbXMtdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTsgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpOyB0cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpOyI+CiAgICA8cGF0aCBkPSJNMjAgNEg0Yy0xLjEgMC0xLjk5LjktMS45OSAyTDIgMThjMCAxLjEuOSAyIDIgMmgxNmMxLjEgMCAyLS45IDItMlY2YzAtMS4xLS45LTItMi0yem0wIDRsLTggNWwtOC01VjZsOCA1bDgtNXYyeiIKICAgICAgICAgIGZpbGw9IiMzMzMiLz4KPC9zdmc+Cg==",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"MailSend"},{property:"og:description",content:"Generic task to send a mail. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-notifications/tasks/mail/io.kestra.plugin.notifications.mail.MailSend.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"MailSend"},{name:"twitter:description",content:"Generic task to send a mail. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-notifications/tasks/mail/io.kestra.plugin.notifications.mail.MailSend.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-notifications/tasks/mail/io.kestra.plugin.notifications.mail.MailSend.html",relativePath:"plugins/plugin-notifications/tasks/mail/io.kestra.plugin.notifications.mail.MailSend.md",key:"v-f32cad3a",path:"/plugins/plugin-notifications/tasks/mail/io.kestra.plugin.notifications.mail.MailSend.html",headers:[{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:100},{level:3,title:"attachments",slug:"attachments",normalizedTitle:"attachments",charIndex:115},{level:3,title:"cc",slug:"cc",normalizedTitle:"cc",charIndex:435},{level:3,title:"embeddedImages",slug:"embeddedimages",normalizedTitle:"embeddedimages",charIndex:688},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:829},{level:3,title:"host",slug:"host",normalizedTitle:"host",charIndex:1096},{level:3,title:"htmlTextContent",slug:"htmltextcontent",normalizedTitle:"htmltextcontent",charIndex:1176},{level:3,title:"password",slug:"password",normalizedTitle:"password",charIndex:1493},{level:3,title:"port",slug:"port",normalizedTitle:"port",charIndex:356},{level:3,title:"sessionTimeout",slug:"sessiontimeout",normalizedTitle:"sessiontimeout",charIndex:1662},{level:3,title:"subject",slug:"subject",normalizedTitle:"subject",charIndex:1850},{level:3,title:"to",slug:"to",normalizedTitle:"to",charIndex:80},{level:3,title:"transportStrategy",slug:"transportstrategy",normalizedTitle:"transportstrategy",charIndex:2171},{level:3,title:"username",slug:"username",normalizedTitle:"username",charIndex:2393},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:2481},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:2493},{level:3,title:"Attachment",slug:"attachment",normalizedTitle:"attachment",charIndex:155}],headersStr:"Properties attachments cc embeddedImages from host htmlTextContent password port sessionTimeout subject to transportStrategy username Outputs Definitions Attachment",content:"MailSend\n\ntype: \"io.kestra.plugin.notifications.mail.MailSend\"\n\n\n> Generic task to send a mail.\n\n\n# Properties\n\n\n# attachments\n\n * Type: array\n * SubType: Attachment\n * Dynamic: ✔️\n * Required: ❌\n\n> Adds an attachment to the email message\n\nwhich will be shown in the email client as separate files available for download or inline display if the client supports it (for example, most browsers these days display PDF's in a popup).\n\n\n# cc\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> One or more 'Cc' (carbon copy) optional recipient email address. Use semicolon as delimiter to provide several addresses\n\nNote that each email address must be an RFC2822 format compliant address.\n\n\n# embeddedImages\n\n * Type: array\n * SubType: Attachment\n * Dynamic: ✔️\n * Required: ❌\n\n> Adds image data to this email that can be referred to from the email HTML body.\n\nThe provided images is assumed to be of mimetype png, jpg or whatever the email client supports as valid image embedded in HTML content.\n\n\n# from\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The address of the sender of this email\n\n\n# host\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The mail server host\n\n\n# htmlTextContent\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The optional email message body in HTML text\n\nBoth text and HTML can be provided, which will be offered to the email client as alternative content. Email clients that support it, will favor HTML over plain text and ignore the text body completely\n\n\n# password\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The mail server password\n\n\n# port\n\n * Type: integer\n * Dynamic: ✔️\n * Required: ❌\n\n> The mail server port\n\n\n# sessionTimeout\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n * Default: 1000\n\n> Controls the timeout to use when sending emails\n\nIt affects socket connect-, read- and write timeouts\n\n\n# subject\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The optional subject of this email\n\n\n# to\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> One or more recipient email address. Use semicolon as delimiter to provide several addresses\n\nNote that each email address must be an RFC2822 format compliant address\n\n\n# transportStrategy\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Default: SMTPS\n\n * Possible Values:\n   \n   * SMTP\n   * SMTPS\n   * SMTP_TLS\n\n> The optional transport strategy\n\nWill default to SMTPS if left empty.\n\n\n# username\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The mail server username\n\n\n# Outputs\n\n\n# Definitions\n\n\n# Attachment\n\n# contentType\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Default: application/octet-stream\n\n> One or more 'Cc' (carbon copy) optional recipient email address. Use semicolon as delimiter to provide several addresses\n\nNote that each email address must be an RFC2822 format compliant address.\n\n# name\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> name of the attachment (eg. 'filename.ext').\n\n# uri\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> An attachment uri from kestra internal storage",normalizedContent:"mailsend\n\ntype: \"io.kestra.plugin.notifications.mail.mailsend\"\n\n\n> generic task to send a mail.\n\n\n# properties\n\n\n# attachments\n\n * type: array\n * subtype: attachment\n * dynamic: ✔️\n * required: ❌\n\n> adds an attachment to the email message\n\nwhich will be shown in the email client as separate files available for download or inline display if the client supports it (for example, most browsers these days display pdf's in a popup).\n\n\n# cc\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> one or more 'cc' (carbon copy) optional recipient email address. use semicolon as delimiter to provide several addresses\n\nnote that each email address must be an rfc2822 format compliant address.\n\n\n# embeddedimages\n\n * type: array\n * subtype: attachment\n * dynamic: ✔️\n * required: ❌\n\n> adds image data to this email that can be referred to from the email html body.\n\nthe provided images is assumed to be of mimetype png, jpg or whatever the email client supports as valid image embedded in html content.\n\n\n# from\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the address of the sender of this email\n\n\n# host\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the mail server host\n\n\n# htmltextcontent\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the optional email message body in html text\n\nboth text and html can be provided, which will be offered to the email client as alternative content. email clients that support it, will favor html over plain text and ignore the text body completely\n\n\n# password\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the mail server password\n\n\n# port\n\n * type: integer\n * dynamic: ✔️\n * required: ❌\n\n> the mail server port\n\n\n# sessiontimeout\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n * default: 1000\n\n> controls the timeout to use when sending emails\n\nit affects socket connect-, read- and write timeouts\n\n\n# subject\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the optional subject of this email\n\n\n# to\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> one or more recipient email address. use semicolon as delimiter to provide several addresses\n\nnote that each email address must be an rfc2822 format compliant address\n\n\n# transportstrategy\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * default: smtps\n\n * possible values:\n   \n   * smtp\n   * smtps\n   * smtp_tls\n\n> the optional transport strategy\n\nwill default to smtps if left empty.\n\n\n# username\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the mail server username\n\n\n# outputs\n\n\n# definitions\n\n\n# attachment\n\n# contenttype\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * default: application/octet-stream\n\n> one or more 'cc' (carbon copy) optional recipient email address. use semicolon as delimiter to provide several addresses\n\nnote that each email address must be an rfc2822 format compliant address.\n\n# name\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> name of the attachment (eg. 'filename.ext').\n\n# uri\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> an attachment uri from kestra internal storage",charsets:{}},{title:"MailTemplate",frontmatter:{title:"MailTemplate",editLink:!1,description:"Task to send a mail using provided template information",icon:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB3aWR0aD0iMjQiIGhlaWdodD0iMjQiCiAgICAgcHJlc2VydmVBc3BlY3RSYXRpbz0ieE1pZFlNaWQgbWVldCIgdmlld0JveD0iMCAwIDI0IDI0IgogICAgIHN0eWxlPSItbXMtdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTsgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpOyB0cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpOyI+CiAgICA8cGF0aCBkPSJNMjAgNEg0Yy0xLjEgMC0xLjk5LjktMS45OSAyTDIgMThjMCAxLjEuOSAyIDIgMmgxNmMxLjEgMCAyLS45IDItMlY2YzAtMS4xLS45LTItMi0yem0wIDRsLTggNWwtOC01VjZsOCA1bDgtNXYyeiIKICAgICAgICAgIGZpbGw9IiMzMzMiLz4KPC9zdmc+Cg==",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"MailTemplate"},{property:"og:description",content:"Task to send a mail using provided template information | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-notifications/tasks/mail/io.kestra.plugin.notifications.mail.MailTemplate.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"MailTemplate"},{name:"twitter:description",content:"Task to send a mail using provided template information | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-notifications/tasks/mail/io.kestra.plugin.notifications.mail.MailTemplate.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-notifications/tasks/mail/io.kestra.plugin.notifications.mail.MailTemplate.html",relativePath:"plugins/plugin-notifications/tasks/mail/io.kestra.plugin.notifications.mail.MailTemplate.md",key:"v-45663aff",path:"/plugins/plugin-notifications/tasks/mail/io.kestra.plugin.notifications.mail.MailTemplate.html",headers:[{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:135},{level:3,title:"attachments",slug:"attachments",normalizedTitle:"attachments",charIndex:150},{level:3,title:"cc",slug:"cc",normalizedTitle:"cc",charIndex:470},{level:3,title:"embeddedImages",slug:"embeddedimages",normalizedTitle:"embeddedimages",charIndex:723},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:864},{level:3,title:"host",slug:"host",normalizedTitle:"host",charIndex:1131},{level:3,title:"htmlTextContent",slug:"htmltextcontent",normalizedTitle:"htmltextcontent",charIndex:1211},{level:3,title:"password",slug:"password",normalizedTitle:"password",charIndex:1528},{level:3,title:"port",slug:"port",normalizedTitle:"port",charIndex:391},{level:3,title:"sessionTimeout",slug:"sessiontimeout",normalizedTitle:"sessiontimeout",charIndex:1697},{level:3,title:"subject",slug:"subject",normalizedTitle:"subject",charIndex:1885},{level:3,title:"templateRenderMap",slug:"templaterendermap",normalizedTitle:"templaterendermap",charIndex:1982},{level:3,title:"templateUri",slug:"templateuri",normalizedTitle:"templateuri",charIndex:2085},{level:3,title:"to",slug:"to",normalizedTitle:"to",charIndex:80},{level:3,title:"transportStrategy",slug:"transportstrategy",normalizedTitle:"transportstrategy",charIndex:2391},{level:3,title:"username",slug:"username",normalizedTitle:"username",charIndex:2613},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:2701},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:2713},{level:3,title:"Attachment",slug:"attachment",normalizedTitle:"attachment",charIndex:190}],headersStr:"Properties attachments cc embeddedImages from host htmlTextContent password port sessionTimeout subject templateRenderMap templateUri to transportStrategy username Outputs Definitions Attachment",content:"MailTemplate\n\ntype: \"io.kestra.plugin.notifications.mail.MailTemplate\"\n\n\n> Task to send a mail using provided template information\n\n\n# Properties\n\n\n# attachments\n\n * Type: array\n * SubType: Attachment\n * Dynamic: ✔️\n * Required: ❌\n\n> Adds an attachment to the email message\n\nwhich will be shown in the email client as separate files available for download or inline display if the client supports it (for example, most browsers these days display PDF's in a popup).\n\n\n# cc\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> One or more 'Cc' (carbon copy) optional recipient email address. Use semicolon as delimiter to provide several addresses\n\nNote that each email address must be an RFC2822 format compliant address.\n\n\n# embeddedImages\n\n * Type: array\n * SubType: Attachment\n * Dynamic: ✔️\n * Required: ❌\n\n> Adds image data to this email that can be referred to from the email HTML body.\n\nThe provided images is assumed to be of mimetype png, jpg or whatever the email client supports as valid image embedded in HTML content.\n\n\n# from\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The address of the sender of this email\n\n\n# host\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The mail server host\n\n\n# htmlTextContent\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The optional email message body in HTML text\n\nBoth text and HTML can be provided, which will be offered to the email client as alternative content. Email clients that support it, will favor HTML over plain text and ignore the text body completely\n\n\n# password\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The mail server password\n\n\n# port\n\n * Type: integer\n * Dynamic: ✔️\n * Required: ❌\n\n> The mail server port\n\n\n# sessionTimeout\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n * Default: 1000\n\n> Controls the timeout to use when sending emails\n\nIt affects socket connect-, read- and write timeouts\n\n\n# subject\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The optional subject of this email\n\n\n# templateRenderMap\n\n * Type: object\n * Dynamic: ✔️\n * Required: ❌\n\n> Render map to use for template\n\n\n# templateUri\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Template to use\n\n\n# to\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> One or more recipient email address. Use semicolon as delimiter to provide several addresses\n\nNote that each email address must be an RFC2822 format compliant address\n\n\n# transportStrategy\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Default: SMTPS\n\n * Possible Values:\n   \n   * SMTP\n   * SMTPS\n   * SMTP_TLS\n\n> The optional transport strategy\n\nWill default to SMTPS if left empty.\n\n\n# username\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The mail server username\n\n\n# Outputs\n\n\n# Definitions\n\n\n# Attachment\n\n# contentType\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Default: application/octet-stream\n\n> One or more 'Cc' (carbon copy) optional recipient email address. Use semicolon as delimiter to provide several addresses\n\nNote that each email address must be an RFC2822 format compliant address.\n\n# name\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> name of the attachment (eg. 'filename.ext').\n\n# uri\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> An attachment uri from kestra internal storage",normalizedContent:"mailtemplate\n\ntype: \"io.kestra.plugin.notifications.mail.mailtemplate\"\n\n\n> task to send a mail using provided template information\n\n\n# properties\n\n\n# attachments\n\n * type: array\n * subtype: attachment\n * dynamic: ✔️\n * required: ❌\n\n> adds an attachment to the email message\n\nwhich will be shown in the email client as separate files available for download or inline display if the client supports it (for example, most browsers these days display pdf's in a popup).\n\n\n# cc\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> one or more 'cc' (carbon copy) optional recipient email address. use semicolon as delimiter to provide several addresses\n\nnote that each email address must be an rfc2822 format compliant address.\n\n\n# embeddedimages\n\n * type: array\n * subtype: attachment\n * dynamic: ✔️\n * required: ❌\n\n> adds image data to this email that can be referred to from the email html body.\n\nthe provided images is assumed to be of mimetype png, jpg or whatever the email client supports as valid image embedded in html content.\n\n\n# from\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the address of the sender of this email\n\n\n# host\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the mail server host\n\n\n# htmltextcontent\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the optional email message body in html text\n\nboth text and html can be provided, which will be offered to the email client as alternative content. email clients that support it, will favor html over plain text and ignore the text body completely\n\n\n# password\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the mail server password\n\n\n# port\n\n * type: integer\n * dynamic: ✔️\n * required: ❌\n\n> the mail server port\n\n\n# sessiontimeout\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n * default: 1000\n\n> controls the timeout to use when sending emails\n\nit affects socket connect-, read- and write timeouts\n\n\n# subject\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the optional subject of this email\n\n\n# templaterendermap\n\n * type: object\n * dynamic: ✔️\n * required: ❌\n\n> render map to use for template\n\n\n# templateuri\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> template to use\n\n\n# to\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> one or more recipient email address. use semicolon as delimiter to provide several addresses\n\nnote that each email address must be an rfc2822 format compliant address\n\n\n# transportstrategy\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * default: smtps\n\n * possible values:\n   \n   * smtp\n   * smtps\n   * smtp_tls\n\n> the optional transport strategy\n\nwill default to smtps if left empty.\n\n\n# username\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the mail server username\n\n\n# outputs\n\n\n# definitions\n\n\n# attachment\n\n# contenttype\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * default: application/octet-stream\n\n> one or more 'cc' (carbon copy) optional recipient email address. use semicolon as delimiter to provide several addresses\n\nnote that each email address must be an rfc2822 format compliant address.\n\n# name\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> name of the attachment (eg. 'filename.ext').\n\n# uri\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> an attachment uri from kestra internal storage",charsets:{}},{title:"SlackExecution",frontmatter:{title:"SlackExecution",editLink:!1,description:"Task to send a slack message with execution information",icon:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB2aWV3Qm94PSIwIDAgMTUwLjg1MiAxNTAuODUyIiBmaWxsPSIjZmZmIiBmaWxsLXJ1bGU9ImV2ZW5vZGQiIHN0cm9rZT0iIzAwMCIgc3Ryb2tlLWxpbmVjYXA9InJvdW5kIiBzdHJva2UtbGluZWpvaW49InJvdW5kIj48dXNlIHhsaW5rOmhyZWY9IiNBIiB4PSIuOTI2IiB5PSIuOTI2Ii8+PHN5bWJvbCBpZD0iQSIgb3ZlcmZsb3c9InZpc2libGUiPjxnIHN0cm9rZS13aWR0aD0iMS44NTIiPjxwYXRoIGQ9Ik00MC43NDEgOTMuNTVjMC04LjczNSA2LjYwNy0xNS43NzIgMTQuODE1LTE1Ljc3MnMxNC44MTUgNy4wMzcgMTQuODE1IDE1Ljc3MnYzOC44MjRjMCA4LjczNy02LjYwNyAxNS43NzQtMTQuODE1IDE1Ljc3NHMtMTQuODE1LTcuMDM3LTE0LjgxNS0xNS43NzJ6IiBmaWxsPSIjZTAxZTVhIiBzdHJva2U9IiNlMDFlNWEiLz48cGF0aCBkPSJNOTMuNTUgMTA3LjQwOGMtOC43MzUgMC0xNS43NzItNi42MDctMTUuNzcyLTE0LjgxNXM3LjAzNy0xNC44MTUgMTUuNzcyLTE0LjgxNWgzOC44MjZjOC43MzUgMCAxNS43NzIgNi42MDcgMTUuNzcyIDE0LjgxNXMtNy4wMzcgMTQuODE1LTE1Ljc3MiAxNC44MTV6IiBmaWxsPSIjZWNiMjJkIiBzdHJva2U9IiNlY2IyMmQiLz48cGF0aCBkPSJNNzcuNzc4IDE1Ljc3MkM3Ny43NzggNy4wMzcgODQuMzg1IDAgOTIuNTkzIDBzMTQuODE1IDcuMDM3IDE0LjgxNSAxNS43NzJ2MzguODI2YzAgOC43MzUtNi42MDcgMTUuNzcyLTE0LjgxNSAxNS43NzJzLTE0LjgxNS03LjAzNy0xNC44MTUtMTUuNzcyeiIgZmlsbD0iIzJmYjY3YyIgc3Ryb2tlPSIjMmZiNjdjIi8+PHBhdGggZD0iTTE1Ljc3MiA3MC4zNzFDNy4wMzcgNzAuMzcxIDAgNjMuNzYzIDAgNTUuNTU2czcuMDM3LTE0LjgxNSAxNS43NzItMTQuODE1aDM4LjgyNmM4LjczNSAwIDE1Ljc3MiA2LjYwNyAxNS43NzIgMTQuODE1cy03LjAzNyAxNC44MTUtMTUuNzcyIDE0LjgxNXoiIGZpbGw9IiMzNmM1ZjEiIHN0cm9rZT0iIzM2YzVmMSIvPjxnIHN0cm9rZS1saW5lam9pbj0ibWl0ZXIiPjxwYXRoIGQ9Ik03Ny43NzggMTMzLjMzM2MwIDguMjA4IDYuNjA3IDE0LjgxNSAxNC44MTUgMTQuODE1czE0LjgxNS02LjYwNyAxNC44MTUtMTQuODE1LTYuNjA3LTE0LjgxNS0xNC44MTUtMTQuODE1SDc3Ljc3OHoiIGZpbGw9IiNlY2IyMmQiIHN0cm9rZT0iI2VjYjIyZCIvPjxwYXRoIGQ9Ik0xMzMuMzM0IDcwLjM3MWgtMTQuODE1VjU1LjU1NmMwLTguMjA3IDYuNjA3LTE0LjgxNSAxNC44MTUtMTQuODE1czE0LjgxNSA2LjYwNyAxNC44MTUgMTQuODE1LTYuNjA3IDE0LjgxNS0xNC44MTUgMTQuODE1eiIgZmlsbD0iIzJmYjY3YyIgc3Ryb2tlPSIjMmZiNjdjIi8+PHBhdGggZD0iTTE0LjgxNSA3Ny43NzhIMjkuNjN2MTQuODE1YzAgOC4yMDctNi42MDcgMTQuODE1LTE0LjgxNSAxNC44MTVTMCAxMDAuOCAwIDkyLjU5M3M2LjYwNy0xNC44MTUgMTQuODE1LTE0LjgxNXoiIGZpbGw9IiNlMDFlNWEiIHN0cm9rZT0iI2UwMWU1YSIvPjxwYXRoIGQ9Ik03MC4zNzEgMTQuODE1VjI5LjYzSDU1LjU1NmMtOC4yMDcgMC0xNC44MTUtNi42MDctMTQuODE1LTE0LjgxNVM0Ny4zNDggMCA1NS41NTYgMHMxNC44MTUgNi42MDcgMTQuODE1IDE0LjgxNXoiIGZpbGw9IiMzNmM1ZjEiIHN0cm9rZT0iIzM2YzVmMSIvPjwvZz48L2c+PC9zeW1ib2w+PC9zdmc+",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"SlackExecution"},{property:"og:description",content:"Task to send a slack message with execution information | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-notifications/tasks/slack/io.kestra.plugin.notifications.slack.SlackExecution.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"SlackExecution"},{name:"twitter:description",content:"Task to send a slack message with execution information | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-notifications/tasks/slack/io.kestra.plugin.notifications.slack.SlackExecution.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-notifications/tasks/slack/io.kestra.plugin.notifications.slack.SlackExecution.html",relativePath:"plugins/plugin-notifications/tasks/slack/io.kestra.plugin.notifications.slack.SlackExecution.md",key:"v-386bb2dd",path:"/plugins/plugin-notifications/tasks/slack/io.kestra.plugin.notifications.slack.SlackExecution.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:257},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:819},{level:3,title:"channel",slug:"channel",normalizedTitle:"channel",charIndex:680},{level:3,title:"customFields",slug:"customfields",normalizedTitle:"customfields",charIndex:933},{level:3,title:"customMessage",slug:"custommessage",normalizedTitle:"custommessage",charIndex:1041},{level:3,title:"executionId",slug:"executionid",normalizedTitle:"executionid",charIndex:1151},{level:3,title:"iconEmoji",slug:"iconemoji",normalizedTitle:"iconemoji",charIndex:1305},{level:3,title:"iconUrl",slug:"iconurl",normalizedTitle:"iconurl",charIndex:1387},{level:3,title:"payload",slug:"payload",normalizedTitle:"payload",charIndex:1472},{level:3,title:"templateRenderMap",slug:"templaterendermap",normalizedTitle:"templaterendermap",charIndex:1556},{level:3,title:"templateUri",slug:"templateuri",normalizedTitle:"templateuri",charIndex:1659},{level:3,title:"url",slug:"url",normalizedTitle:"url",charIndex:587},{level:3,title:"username",slug:"username",normalizedTitle:"username",charIndex:1858},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1949},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:1961}],headersStr:"Examples Properties channel customFields customMessage executionId iconEmoji iconUrl payload templateRenderMap templateUri url username Outputs Definitions",content:'SlackExecution\n\ntype: "io.kestra.plugin.notifications.slack.SlackExecution"\n\n\n> Task to send a slack message with execution information\n\nMain execution information are provided in the sent message (id, namespace, flow, state, duration, start date ...).\n\n\n# Examples\n\n> Send a slack notification on failed flow\n\nid: mail\nnamespace: io.kestra.tests\n\nlisteners:\n  - conditions:\n      - type: io.kestra.core.models.conditions.types.ExecutionStatusCondition\n        in:\n          - FAILED\n    tasks:\n      - id: slack\n        type: io.kestra.plugin.notifications.slack.SlackExecution\n        url: "https://hooks.slack.com/services/T00000000/B00000000/XXXXXXXXXXXXXXXXXXXXXXXX"\n        channel: "#random"\n\n\ntasks:\n  - id: ok\n    type: io.kestra.core.tasks.debugs.Return\n    format: "{{task.id}} > {{taskrun.startDate}}"\n\n\n\n# Properties\n\n\n# channel\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Slack channel to send the message to\n\n\n# customFields\n\n * Type: object\n * Dynamic: ❓\n * Required: ❌\n\n> Custom fields to be added on notification\n\n\n# customMessage\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Custom message to be added on notification\n\n\n# executionId\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Default: {{ execution.id }}\n\n> The execution id to use\n\nDefault is the current execution\n\n\n# iconEmoji\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Emoji icon to use\n\n\n# iconUrl\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Url of the icon to use\n\n\n# payload\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Slack message payload\n\n\n# templateRenderMap\n\n * Type: object\n * Dynamic: ✔️\n * Required: ❌\n\n> Render map to use for template\n\n\n# templateUri\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Template to use\n\n\n# url\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Slack incoming webhook url\n\nSee Create an Incoming Webhook\n\n\n# username\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Author of the slack message\n\n\n# Outputs\n\n\n# Definitions',normalizedContent:'slackexecution\n\ntype: "io.kestra.plugin.notifications.slack.slackexecution"\n\n\n> task to send a slack message with execution information\n\nmain execution information are provided in the sent message (id, namespace, flow, state, duration, start date ...).\n\n\n# examples\n\n> send a slack notification on failed flow\n\nid: mail\nnamespace: io.kestra.tests\n\nlisteners:\n  - conditions:\n      - type: io.kestra.core.models.conditions.types.executionstatuscondition\n        in:\n          - failed\n    tasks:\n      - id: slack\n        type: io.kestra.plugin.notifications.slack.slackexecution\n        url: "https://hooks.slack.com/services/t00000000/b00000000/xxxxxxxxxxxxxxxxxxxxxxxx"\n        channel: "#random"\n\n\ntasks:\n  - id: ok\n    type: io.kestra.core.tasks.debugs.return\n    format: "{{task.id}} > {{taskrun.startdate}}"\n\n\n\n# properties\n\n\n# channel\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> slack channel to send the message to\n\n\n# customfields\n\n * type: object\n * dynamic: ❓\n * required: ❌\n\n> custom fields to be added on notification\n\n\n# custommessage\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> custom message to be added on notification\n\n\n# executionid\n\n * type: string\n * dynamic: ❓\n * required: ❌\n * default: {{ execution.id }}\n\n> the execution id to use\n\ndefault is the current execution\n\n\n# iconemoji\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> emoji icon to use\n\n\n# iconurl\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> url of the icon to use\n\n\n# payload\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> slack message payload\n\n\n# templaterendermap\n\n * type: object\n * dynamic: ✔️\n * required: ❌\n\n> render map to use for template\n\n\n# templateuri\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> template to use\n\n\n# url\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> slack incoming webhook url\n\nsee create an incoming webhook\n\n\n# username\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> author of the slack message\n\n\n# outputs\n\n\n# definitions',charsets:{}},{title:"SlackTemplate",frontmatter:{title:"SlackTemplate",editLink:!1,description:"Task to send a slack message using provided template information",icon:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB2aWV3Qm94PSIwIDAgMTUwLjg1MiAxNTAuODUyIiBmaWxsPSIjZmZmIiBmaWxsLXJ1bGU9ImV2ZW5vZGQiIHN0cm9rZT0iIzAwMCIgc3Ryb2tlLWxpbmVjYXA9InJvdW5kIiBzdHJva2UtbGluZWpvaW49InJvdW5kIj48dXNlIHhsaW5rOmhyZWY9IiNBIiB4PSIuOTI2IiB5PSIuOTI2Ii8+PHN5bWJvbCBpZD0iQSIgb3ZlcmZsb3c9InZpc2libGUiPjxnIHN0cm9rZS13aWR0aD0iMS44NTIiPjxwYXRoIGQ9Ik00MC43NDEgOTMuNTVjMC04LjczNSA2LjYwNy0xNS43NzIgMTQuODE1LTE1Ljc3MnMxNC44MTUgNy4wMzcgMTQuODE1IDE1Ljc3MnYzOC44MjRjMCA4LjczNy02LjYwNyAxNS43NzQtMTQuODE1IDE1Ljc3NHMtMTQuODE1LTcuMDM3LTE0LjgxNS0xNS43NzJ6IiBmaWxsPSIjZTAxZTVhIiBzdHJva2U9IiNlMDFlNWEiLz48cGF0aCBkPSJNOTMuNTUgMTA3LjQwOGMtOC43MzUgMC0xNS43NzItNi42MDctMTUuNzcyLTE0LjgxNXM3LjAzNy0xNC44MTUgMTUuNzcyLTE0LjgxNWgzOC44MjZjOC43MzUgMCAxNS43NzIgNi42MDcgMTUuNzcyIDE0LjgxNXMtNy4wMzcgMTQuODE1LTE1Ljc3MiAxNC44MTV6IiBmaWxsPSIjZWNiMjJkIiBzdHJva2U9IiNlY2IyMmQiLz48cGF0aCBkPSJNNzcuNzc4IDE1Ljc3MkM3Ny43NzggNy4wMzcgODQuMzg1IDAgOTIuNTkzIDBzMTQuODE1IDcuMDM3IDE0LjgxNSAxNS43NzJ2MzguODI2YzAgOC43MzUtNi42MDcgMTUuNzcyLTE0LjgxNSAxNS43NzJzLTE0LjgxNS03LjAzNy0xNC44MTUtMTUuNzcyeiIgZmlsbD0iIzJmYjY3YyIgc3Ryb2tlPSIjMmZiNjdjIi8+PHBhdGggZD0iTTE1Ljc3MiA3MC4zNzFDNy4wMzcgNzAuMzcxIDAgNjMuNzYzIDAgNTUuNTU2czcuMDM3LTE0LjgxNSAxNS43NzItMTQuODE1aDM4LjgyNmM4LjczNSAwIDE1Ljc3MiA2LjYwNyAxNS43NzIgMTQuODE1cy03LjAzNyAxNC44MTUtMTUuNzcyIDE0LjgxNXoiIGZpbGw9IiMzNmM1ZjEiIHN0cm9rZT0iIzM2YzVmMSIvPjxnIHN0cm9rZS1saW5lam9pbj0ibWl0ZXIiPjxwYXRoIGQ9Ik03Ny43NzggMTMzLjMzM2MwIDguMjA4IDYuNjA3IDE0LjgxNSAxNC44MTUgMTQuODE1czE0LjgxNS02LjYwNyAxNC44MTUtMTQuODE1LTYuNjA3LTE0LjgxNS0xNC44MTUtMTQuODE1SDc3Ljc3OHoiIGZpbGw9IiNlY2IyMmQiIHN0cm9rZT0iI2VjYjIyZCIvPjxwYXRoIGQ9Ik0xMzMuMzM0IDcwLjM3MWgtMTQuODE1VjU1LjU1NmMwLTguMjA3IDYuNjA3LTE0LjgxNSAxNC44MTUtMTQuODE1czE0LjgxNSA2LjYwNyAxNC44MTUgMTQuODE1LTYuNjA3IDE0LjgxNS0xNC44MTUgMTQuODE1eiIgZmlsbD0iIzJmYjY3YyIgc3Ryb2tlPSIjMmZiNjdjIi8+PHBhdGggZD0iTTE0LjgxNSA3Ny43NzhIMjkuNjN2MTQuODE1YzAgOC4yMDctNi42MDcgMTQuODE1LTE0LjgxNSAxNC44MTVTMCAxMDAuOCAwIDkyLjU5M3M2LjYwNy0xNC44MTUgMTQuODE1LTE0LjgxNXoiIGZpbGw9IiNlMDFlNWEiIHN0cm9rZT0iI2UwMWU1YSIvPjxwYXRoIGQ9Ik03MC4zNzEgMTQuODE1VjI5LjYzSDU1LjU1NmMtOC4yMDcgMC0xNC44MTUtNi42MDctMTQuODE1LTE0LjgxNVM0Ny4zNDggMCA1NS41NTYgMHMxNC44MTUgNi42MDcgMTQuODE1IDE0LjgxNXoiIGZpbGw9IiMzNmM1ZjEiIHN0cm9rZT0iIzM2YzVmMSIvPjwvZz48L2c+PC9zeW1ib2w+PC9zdmc+",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"SlackTemplate"},{property:"og:description",content:"Task to send a slack message using provided template information | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-notifications/tasks/slack/io.kestra.plugin.notifications.slack.SlackTemplate.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"SlackTemplate"},{name:"twitter:description",content:"Task to send a slack message using provided template information | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-notifications/tasks/slack/io.kestra.plugin.notifications.slack.SlackTemplate.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-notifications/tasks/slack/io.kestra.plugin.notifications.slack.SlackTemplate.html",relativePath:"plugins/plugin-notifications/tasks/slack/io.kestra.plugin.notifications.slack.SlackTemplate.md",key:"v-4d8f95c3",path:"/plugins/plugin-notifications/tasks/slack/io.kestra.plugin.notifications.slack.SlackTemplate.html",headers:[{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:147},{level:3,title:"channel",slug:"channel",normalizedTitle:"channel",charIndex:162},{level:3,title:"iconEmoji",slug:"iconemoji",normalizedTitle:"iconemoji",charIndex:261},{level:3,title:"iconUrl",slug:"iconurl",normalizedTitle:"iconurl",charIndex:343},{level:3,title:"payload",slug:"payload",normalizedTitle:"payload",charIndex:428},{level:3,title:"templateRenderMap",slug:"templaterendermap",normalizedTitle:"templaterendermap",charIndex:512},{level:3,title:"templateUri",slug:"templateuri",normalizedTitle:"templateuri",charIndex:615},{level:3,title:"url",slug:"url",normalizedTitle:"url",charIndex:697},{level:3,title:"username",slug:"username",normalizedTitle:"username",charIndex:814},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:905},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:917}],headersStr:"Properties channel iconEmoji iconUrl payload templateRenderMap templateUri url username Outputs Definitions",content:'SlackTemplate\n\ntype: "io.kestra.plugin.notifications.slack.SlackTemplate"\n\n\n> Task to send a slack message using provided template information\n\n\n# Properties\n\n\n# channel\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Slack channel to send the message to\n\n\n# iconEmoji\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Emoji icon to use\n\n\n# iconUrl\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Url of the icon to use\n\n\n# payload\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Slack message payload\n\n\n# templateRenderMap\n\n * Type: object\n * Dynamic: ✔️\n * Required: ❌\n\n> Render map to use for template\n\n\n# templateUri\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Template to use\n\n\n# url\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Slack incoming webhook url\n\nSee Create an Incoming Webhook\n\n\n# username\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Author of the slack message\n\n\n# Outputs\n\n\n# Definitions',normalizedContent:'slacktemplate\n\ntype: "io.kestra.plugin.notifications.slack.slacktemplate"\n\n\n> task to send a slack message using provided template information\n\n\n# properties\n\n\n# channel\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> slack channel to send the message to\n\n\n# iconemoji\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> emoji icon to use\n\n\n# iconurl\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> url of the icon to use\n\n\n# payload\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> slack message payload\n\n\n# templaterendermap\n\n * type: object\n * dynamic: ✔️\n * required: ❌\n\n> render map to use for template\n\n\n# templateuri\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> template to use\n\n\n# url\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> slack incoming webhook url\n\nsee create an incoming webhook\n\n\n# username\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> author of the slack message\n\n\n# outputs\n\n\n# definitions',charsets:{}},{title:"SlackIncomingWebhook",frontmatter:{title:"SlackIncomingWebhook",editLink:!1,description:"Generic task to send a slack message.",icon:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB2aWV3Qm94PSIwIDAgMTUwLjg1MiAxNTAuODUyIiBmaWxsPSIjZmZmIiBmaWxsLXJ1bGU9ImV2ZW5vZGQiIHN0cm9rZT0iIzAwMCIgc3Ryb2tlLWxpbmVjYXA9InJvdW5kIiBzdHJva2UtbGluZWpvaW49InJvdW5kIj48dXNlIHhsaW5rOmhyZWY9IiNBIiB4PSIuOTI2IiB5PSIuOTI2Ii8+PHN5bWJvbCBpZD0iQSIgb3ZlcmZsb3c9InZpc2libGUiPjxnIHN0cm9rZS13aWR0aD0iMS44NTIiPjxwYXRoIGQ9Ik00MC43NDEgOTMuNTVjMC04LjczNSA2LjYwNy0xNS43NzIgMTQuODE1LTE1Ljc3MnMxNC44MTUgNy4wMzcgMTQuODE1IDE1Ljc3MnYzOC44MjRjMCA4LjczNy02LjYwNyAxNS43NzQtMTQuODE1IDE1Ljc3NHMtMTQuODE1LTcuMDM3LTE0LjgxNS0xNS43NzJ6IiBmaWxsPSIjZTAxZTVhIiBzdHJva2U9IiNlMDFlNWEiLz48cGF0aCBkPSJNOTMuNTUgMTA3LjQwOGMtOC43MzUgMC0xNS43NzItNi42MDctMTUuNzcyLTE0LjgxNXM3LjAzNy0xNC44MTUgMTUuNzcyLTE0LjgxNWgzOC44MjZjOC43MzUgMCAxNS43NzIgNi42MDcgMTUuNzcyIDE0LjgxNXMtNy4wMzcgMTQuODE1LTE1Ljc3MiAxNC44MTV6IiBmaWxsPSIjZWNiMjJkIiBzdHJva2U9IiNlY2IyMmQiLz48cGF0aCBkPSJNNzcuNzc4IDE1Ljc3MkM3Ny43NzggNy4wMzcgODQuMzg1IDAgOTIuNTkzIDBzMTQuODE1IDcuMDM3IDE0LjgxNSAxNS43NzJ2MzguODI2YzAgOC43MzUtNi42MDcgMTUuNzcyLTE0LjgxNSAxNS43NzJzLTE0LjgxNS03LjAzNy0xNC44MTUtMTUuNzcyeiIgZmlsbD0iIzJmYjY3YyIgc3Ryb2tlPSIjMmZiNjdjIi8+PHBhdGggZD0iTTE1Ljc3MiA3MC4zNzFDNy4wMzcgNzAuMzcxIDAgNjMuNzYzIDAgNTUuNTU2czcuMDM3LTE0LjgxNSAxNS43NzItMTQuODE1aDM4LjgyNmM4LjczNSAwIDE1Ljc3MiA2LjYwNyAxNS43NzIgMTQuODE1cy03LjAzNyAxNC44MTUtMTUuNzcyIDE0LjgxNXoiIGZpbGw9IiMzNmM1ZjEiIHN0cm9rZT0iIzM2YzVmMSIvPjxnIHN0cm9rZS1saW5lam9pbj0ibWl0ZXIiPjxwYXRoIGQ9Ik03Ny43NzggMTMzLjMzM2MwIDguMjA4IDYuNjA3IDE0LjgxNSAxNC44MTUgMTQuODE1czE0LjgxNS02LjYwNyAxNC44MTUtMTQuODE1LTYuNjA3LTE0LjgxNS0xNC44MTUtMTQuODE1SDc3Ljc3OHoiIGZpbGw9IiNlY2IyMmQiIHN0cm9rZT0iI2VjYjIyZCIvPjxwYXRoIGQ9Ik0xMzMuMzM0IDcwLjM3MWgtMTQuODE1VjU1LjU1NmMwLTguMjA3IDYuNjA3LTE0LjgxNSAxNC44MTUtMTQuODE1czE0LjgxNSA2LjYwNyAxNC44MTUgMTQuODE1LTYuNjA3IDE0LjgxNS0xNC44MTUgMTQuODE1eiIgZmlsbD0iIzJmYjY3YyIgc3Ryb2tlPSIjMmZiNjdjIi8+PHBhdGggZD0iTTE0LjgxNSA3Ny43NzhIMjkuNjN2MTQuODE1YzAgOC4yMDctNi42MDcgMTQuODE1LTE0LjgxNSAxNC44MTVTMCAxMDAuOCAwIDkyLjU5M3M2LjYwNy0xNC44MTUgMTQuODE1LTE0LjgxNXoiIGZpbGw9IiNlMDFlNWEiIHN0cm9rZT0iI2UwMWU1YSIvPjxwYXRoIGQ9Ik03MC4zNzEgMTQuODE1VjI5LjYzSDU1LjU1NmMtOC4yMDcgMC0xNC44MTUtNi42MDctMTQuODE1LTE0LjgxNVM0Ny4zNDggMCA1NS41NTYgMHMxNC44MTUgNi42MDcgMTQuODE1IDE0LjgxNXoiIGZpbGw9IiMzNmM1ZjEiIHN0cm9rZT0iIzM2YzVmMSIvPjwvZz48L2c+PC9zeW1ib2w+PC9zdmc+",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"SlackIncomingWebhook"},{property:"og:description",content:"Generic task to send a slack message. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-notifications/tasks/slack/io.kestra.plugin.notifications.slack.SlackIncomingWebhook.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"SlackIncomingWebhook"},{name:"twitter:description",content:"Generic task to send a slack message. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-notifications/tasks/slack/io.kestra.plugin.notifications.slack.SlackIncomingWebhook.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-notifications/tasks/slack/io.kestra.plugin.notifications.slack.SlackIncomingWebhook.html",relativePath:"plugins/plugin-notifications/tasks/slack/io.kestra.plugin.notifications.slack.SlackIncomingWebhook.md",key:"v-66b72beb",path:"/plugins/plugin-notifications/tasks/slack/io.kestra.plugin.notifications.slack.SlackIncomingWebhook.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:180},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:588},{level:3,title:"payload",slug:"payload",normalizedTitle:"payload",charIndex:399},{level:3,title:"url",slug:"url",normalizedTitle:"url",charIndex:314},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:804},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:816}],headersStr:"Examples Properties payload url Outputs Definitions",content:'SlackIncomingWebhook\n\ntype: "io.kestra.plugin.notifications.slack.SlackIncomingWebhook"\n\n\n> Generic task to send a slack message.\n\nSee Sending messages using Incoming Webhooks\n\n\n# Examples\n\n> Send a slack notification\n\nid: "slack_incoming_webhook"\ntype: "io.kestra.plugin.notifications.slack.SlackIncomingWebhook"\nurl: "https://hooks.slack.com/services/T00000000/B00000000/XXXXXXXXXXXXXXXXXXXXXXXX"\npayload: |\n  {\n    "channel": "#my-chan",\n    "text": "Flow <code v-pre>{{  flow.namespace }}.{{ flow.id  }}</code> started with execution <code v-pre>{{  execution.id  }}</code>"\n  }\n\n\n\n# Properties\n\n\n# payload\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Slack message payload\n\n\n# url\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Slack incoming webhook url\n\nSee Create an Incoming Webhook\n\n\n# Outputs\n\n\n# Definitions',normalizedContent:'slackincomingwebhook\n\ntype: "io.kestra.plugin.notifications.slack.slackincomingwebhook"\n\n\n> generic task to send a slack message.\n\nsee sending messages using incoming webhooks\n\n\n# examples\n\n> send a slack notification\n\nid: "slack_incoming_webhook"\ntype: "io.kestra.plugin.notifications.slack.slackincomingwebhook"\nurl: "https://hooks.slack.com/services/t00000000/b00000000/xxxxxxxxxxxxxxxxxxxxxxxx"\npayload: |\n  {\n    "channel": "#my-chan",\n    "text": "flow <code v-pre>{{  flow.namespace }}.{{ flow.id  }}</code> started with execution <code v-pre>{{  execution.id  }}</code>"\n  }\n\n\n\n# properties\n\n\n# payload\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> slack message payload\n\n\n# url\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> slack incoming webhook url\n\nsee create an incoming webhook\n\n\n# outputs\n\n\n# definitions',charsets:{cjk:!0}},{title:"Plugin script groovy",frontmatter:{title:"Plugin script groovy",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Plugin script groovy"},{property:"og:description",content:"Plugin script groovy | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-script-groovy/"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Plugin script groovy"},{name:"twitter:description",content:"Plugin script groovy | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-script-groovy/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-script-groovy/",relativePath:"plugins/plugin-script-groovy/README.md",key:"v-bdff5170",path:"/plugins/plugin-script-groovy/",headers:[{level:2,title:"Common",slug:"common",normalizedTitle:"common",charIndex:27},{level:3,title:"Tasks",slug:"tasks",normalizedTitle:"tasks",charIndex:38}],headersStr:"Common Tasks",content:"# Plugin script groovy\n\n\n# Common\n\n\n# Tasks\n\n * Eval\n * FileTransform",normalizedContent:"# plugin script groovy\n\n\n# common\n\n\n# tasks\n\n * eval\n * filetransform",charsets:{}},{title:"Eval",frontmatter:{title:"Eval",editLink:!1,description:"Execute a groovy script.",icon:"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9Im5vIj8+CjxzdmcKICAgICAgICB4bWxuczpkYz0iaHR0cDovL3B1cmwub3JnL2RjL2VsZW1lbnRzLzEuMS8iCiAgICAgICAgeG1sbnM6Y2M9Imh0dHA6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL25zIyIKICAgICAgICB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiCiAgICAgICAgeG1sbnM6c3ZnPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIKICAgICAgICB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciCiAgICAgICAgeG1sbnM6c29kaXBvZGk9Imh0dHA6Ly9zb2RpcG9kaS5zb3VyY2Vmb3JnZS5uZXQvRFREL3NvZGlwb2RpLTAuZHRkIgogICAgICAgIHhtbG5zOmlua3NjYXBlPSJodHRwOi8vd3d3Lmlua3NjYXBlLm9yZy9uYW1lc3BhY2VzL2lua3NjYXBlIgogICAgICAgIHZpZXdCb3g9IjAgMCA0NDUgMjIxLjg5Mjc5IgogICAgICAgIGhlaWdodD0iMjIxLjg5Mjc5IgogICAgICAgIHdpZHRoPSI0NDUiCiAgICAgICAgeG1sOnNwYWNlPSJwcmVzZXJ2ZSIKICAgICAgICB2ZXJzaW9uPSIxLjEiCiAgICAgICAgaWQ9InN2ZzIiCiAgICAgICAgaW5rc2NhcGU6dmVyc2lvbj0iMC45Mi40ICg1ZGE2ODljMzEzLCAyMDE5LTAxLTE0KSIKICAgICAgICBzb2RpcG9kaTpkb2NuYW1lPSJncm9vdnkuc3ZnIj48c29kaXBvZGk6bmFtZWR2aWV3CiAgICAgcGFnZWNvbG9yPSIjZmZmZmZmIgogICAgIGJvcmRlcmNvbG9yPSIjNjY2NjY2IgogICAgIGJvcmRlcm9wYWNpdHk9IjEiCiAgICAgb2JqZWN0dG9sZXJhbmNlPSIxMCIKICAgICBncmlkdG9sZXJhbmNlPSIxMCIKICAgICBndWlkZXRvbGVyYW5jZT0iMTAiCiAgICAgaW5rc2NhcGU6cGFnZW9wYWNpdHk9IjAiCiAgICAgaW5rc2NhcGU6cGFnZXNoYWRvdz0iMiIKICAgICBpbmtzY2FwZTp3aW5kb3ctd2lkdGg9IjE2MDAiCiAgICAgaW5rc2NhcGU6d2luZG93LWhlaWdodD0iODc3IgogICAgIGlkPSJuYW1lZHZpZXczNDk1IgogICAgIHNob3dncmlkPSJmYWxzZSIKICAgICBpbmtzY2FwZTp6b29tPSIxLjE4NTI0NTciCiAgICAgaW5rc2NhcGU6Y3g9IjUyMy4xNzU2MyIKICAgICBpbmtzY2FwZTpjeT0iMjI5LjIxNjc3IgogICAgIGlua3NjYXBlOndpbmRvdy14PSItOCIKICAgICBpbmtzY2FwZTp3aW5kb3cteT0iLTgiCiAgICAgaW5rc2NhcGU6d2luZG93LW1heGltaXplZD0iMSIKICAgICBpbmtzY2FwZTpjdXJyZW50LWxheWVyPSJnMTIiCiAgICAgZml0LW1hcmdpbi10b3A9IjAiCiAgICAgZml0LW1hcmdpbi1sZWZ0PSIwIgogICAgIGZpdC1tYXJnaW4tcmlnaHQ9IjAiCiAgICAgZml0LW1hcmdpbi1ib3R0b209IjAiIC8+PG1ldGFkYXRhCiAgICAgICAgaWQ9Im1ldGFkYXRhOCI+PHJkZjpSREY+PGNjOldvcmsKICAgICAgICAgcmRmOmFib3V0PSIiPjxkYzpmb3JtYXQ+aW1hZ2Uvc3ZnK3htbDwvZGM6Zm9ybWF0PjxkYzp0eXBlCiAgICAgICAgcmRmOnJlc291cmNlPSJodHRwOi8vcHVybC5vcmcvZGMvZGNtaXR5cGUvU3RpbGxJbWFnZSIgLz48ZGM6dGl0bGU+PC9kYzp0aXRsZT48L2NjOldvcms+PC9yZGY6UkRGPjwvbWV0YWRhdGE+PGRlZnMKICAgICAgICBpZD0iZGVmczYiIC8+PGcKICAgICAgICB0cmFuc2Zvcm09Im1hdHJpeCgxLjI1LDAsMCwtMS4yNSwwLjEwMjA2ODY5LDIyMS44OTI3OSkiCiAgICAgICAgaWQ9ImcxMCI+PGcKICAgICAgIHRyYW5zZm9ybT0ic2NhbGUoMC4xKSIKICAgICAgIGlkPSJnMTIiPjxwYXRoCiAgICAgICAgIGlkPSJwYXRoMTQiCiAgICAgICAgIHN0eWxlPSJmaWxsOiMwMDAwMDA7ZmlsbC1vcGFjaXR5OjE7ZmlsbC1ydWxlOm5vbnplcm87c3Ryb2tlOm5vbmU7c3Ryb2tlLXdpZHRoOjAuNDQ0Njc0OTEiCiAgICAgICAgIGQ9Ik0gMjg3OS4zMTc0LDEuNzIwMzM5OSAxNzc5LjE5ODMsNDI4LjE0OTM3IDY3OS4xMjUwNCwxLjgyOTAzMTggMTExMy40OTA5LDY4MS40NTY1NyAtMC44MTY1NDk0OSwxMDk3LjYzNzcgMTM2Ny43NDk3LDEwOTEuMjU1OCBsIDQxMS4zOTk0LDY4My41MzM5IDQxMS40Mzg4LC02ODMuNTcxMiAxMzY4LjU5NTYsNi4yNTU0IEwgMjQ0NC44NzYyLDY4MS4zOTMzIDI4NzkuMzE3NCwxLjcyMDMzOTkiCiAgICAgICAgIGlua3NjYXBlOmNvbm5lY3Rvci1jdXJ2YXR1cmU9IjAiIC8+PHBhdGgKICAgICAgICBpZD0icGF0aDE2IgogICAgICAgIHN0eWxlPSJmaWxsOiM2MTljYmM7ZmlsbC1vcGFjaXR5OjE7ZmlsbC1ydWxlOm5vbnplcm87c3Ryb2tlOm5vbmU7c3Ryb2tlLXdpZHRoOjAuNDQ0Njc0OTEiCiAgICAgICAgZD0iTSAyNzMwLjUwNjEsMTIzLjI3Njc4IDE3ODAuMTQ4NSw0OTEuNjM4NDEgODI5Ljg0MDEzLDEyMy4zNTMwMyAxMjA1LjA3Myw3MTAuNDYxMDcgMjQyLjQ2NTQ5LDEwNjkuOTc2NSBsIDExODIuMjQ4MDEsLTUuNTA2IDM1NS40MDIzLDU5MC40ODI0IDM1NS40MjM2LC01OTAuNTE0OSAxMTgyLjI2Niw1LjQxMiAtOTYyLjU5NjEsLTM1OS40MzkyMiAzNzUuMjk2OCwtNTg3LjEzNCIKICAgICAgICBpbmtzY2FwZTpjb25uZWN0b3ItY3VydmF0dXJlPSIwIiAvPjxwYXRoCiAgICAgICAgaWQ9InBhdGgxOCIKICAgICAgICBzdHlsZT0iZmlsbDojMDAwMDAwO2ZpbGwtb3BhY2l0eToxO2ZpbGwtcnVsZTpub256ZXJvO3N0cm9rZTpub25lO3N0cm9rZS13aWR0aDowLjQ0NDY3NDkxIgogICAgICAgIGQ9Im0gMTA1MC42NDU1LDE0MjUuNTE1NyBjIDk0LjkyOTIsMCAzOS42MDIxLC0yMzcuMjA3OCA1Ljg0MzksLTMwOC43MzM2IC0yOC45MDg2LC02MS4yMzQxIC05My45ODg4MiwtMTQ5LjU1MzUgLTE3MS4xMTkwNiwtMTQ5LjU1MzUgLTkyLjU0MDU1LDAgLTg5Ljc4ODEsMTAzLjY0ODMgLTUyLjk1MTQ1LDE4MS42NzQ0IDE5Ljk0MTk4LDQyLjI0MzggNTAuNTkwNTgsODkuNTk3OCA5Mi44MTU4LDEyNC40MTE2IC0xMC44MDgxOCwtMzYuMzM4NyAyNS43MjcwMiwtNjEuMTU5NCAxMC45NTA3NCwtOTIuNDY5MiAtMTAuMDkyMjYsLTIxLjM4MTQgLTMwLjk4MTIyLC00NC43NDIxIC00MS44MzUyOSwtNjcuNzM5MyAtMTcuNTU0OTIsLTM3LjE3OTIgLTEwLjg0NzUzLC0xMDMuMTY2NSAzMS41NjI4MSwtMTAzLjE2NjUgMzcuOTYzODUsMCA3MS42OTc0Nyw0Ny4wMjc5IDg1LjUyNjc1LDc2LjMyMjggMjguMzMyLDYwLjAyODcgOTkuMTcyNiwzMTYuMTE5OCAxOS45ODc5LDMxNi4xMTk4IC05MS4xOTcxLDAgLTI0OC4zNDQzMiwtMjIyLjIzNDQgLTI4MS4yNTIyMiwtMjkxLjk0MzIgLTU4LjczODE0LC0xMjQuNDI3ODIgLTE2LjE2MDY5LC0yNzcuNjkzMDggMTE3LjY3MjgxLC0yNzcuNjkzMDggOTAuNDI4NzMsMCAxNjQuODA4MjEsODYuOTM3MjggMjAwLjczNTUxLDE2My4wNTA3OCAyMS40MDE4LDQ1LjMzNDIgMzMuMDU1NCw5MC40NDE0IDM3LjY0NDQsMTMyLjk3NCBsIDE3LjU1NDksMy4yMTIgYyAzLjg3OCwtMTE3LjA4MDUgMTI3LjczODksLTMxMC45NDc5MiA3NS4wMTE5LC00MjIuNjM2MTIgLTY3LjQ4MDQsLTE0Mi45NTA4OSAtMjY5LjI1MywtMTQxLjY3MDkzIC0zODQuNDYxNzQsLTE5Mi40MDQwNyAtMjQuMjE2NDYsNTYuNjQ2MzMgLTU3LjAyMjgsMTA5LjMxMzE5IC0xMDMuMjE2MDcsMTQ5LjUwODExIDEwMi43NjcxMywzNC41Njg4OSAzNTUuMzA0MDEsOTIuNjE1MiA0MTAuMjE1MDEsMjA4Ljk0MzA5IDIzLjA3NzcsNDguODc3MjUgNy4zNjYsMTI5LjkxNDM5IC0xOS4yOTY1LDE1Ny4zNzkzOSAtNC41MzY2LC0xNy4yNzU2IC0xMC44MTQ4LC0zNC44ODUyOCAtMTkuMTQ3NCwtNTIuNTMzOTMgLTQ3LjAxOSwtOTkuNTk5MDUgLTE0Ny42ODkwNiwtMTc2Ljg0MDA2IC0yNTEuNDczNjEsLTE3Ni44NDAwNiAtMTQ0LjQ5NTkxLDAgLTIwNS43NTM3OSwxMDMuODMxNTkgLTEzNy43NTA4MiwyNDcuOTA4MjkgNDAuODEyOTQsODYuNDUwNiAyNDkuMjIyNTEsMzc0LjIwODMgMzU2Ljk4MTczLDM3NC4yMDgzIgogICAgICAgIGlua3NjYXBlOmNvbm5lY3Rvci1jdXJ2YXR1cmU9IjAiIC8+PHBhdGgKICAgICAgICBpZD0icGF0aDIwIgogICAgICAgIHN0eWxlPSJmaWxsOm5vbmU7c3Ryb2tlOiMwMDAwMDA7c3Ryb2tlLXdpZHRoOjE1OS4wMDg1NDQ5MjtzdHJva2UtbGluZWNhcDpidXR0O3N0cm9rZS1saW5lam9pbjpyb3VuZDtzdHJva2UtbWl0ZXJsaW1pdDozLjg2MzY4OTk7c3Ryb2tlLWRhc2hhcnJheTpub25lO3N0cm9rZS1vcGFjaXR5OjEiCiAgICAgICAgZD0ibSAxMDUwLjY0NTUsMTQyNS41MTU3IGMgOTQuOTI5MiwwIDM5LjYwMjEsLTIzNy4yMDc4IDUuODQzOSwtMzA4LjczMzYgLTI4LjkwODYsLTYxLjIzNDEgLTkzLjk4ODgyLC0xNDkuNTUzNSAtMTcxLjExOTA2LC0xNDkuNTUzNSAtOTIuNTQwNTUsMCAtODkuNzg4MSwxMDMuNjQ4MyAtNTIuOTUxNDUsMTgxLjY3NDQgMTkuOTQxOTgsNDIuMjQzOCA1MC41OTA1OCw4OS41OTc4IDkyLjgxNTgsMTI0LjQxMTYgLTEwLjgwODE4LC0zNi4zMzg3IDI1LjcyNzAyLC02MS4xNTk0IDEwLjk1MDc0LC05Mi40NjkyIC0xMC4wOTIyNiwtMjEuMzgxNCAtMzAuOTgxMjIsLTQ0Ljc0MjEgLTQxLjgzNTI5LC02Ny43MzkzIC0xNy41NTQ5MiwtMzcuMTc5MiAtMTAuODQ3NTMsLTEwMy4xNjY1IDMxLjU2MjgxLC0xMDMuMTY2NSAzNy45NjM4NSwwIDcxLjY5NzQ3LDQ3LjAyNzkgODUuNTI2NzUsNzYuMzIyOCAyOC4zMzIsNjAuMDI4NyA5OS4xNzI2LDMxNi4xMTk4IDE5Ljk4NzksMzE2LjExOTggLTkxLjE5NzEsMCAtMjQ4LjM0NDMyLC0yMjIuMjM0NCAtMjgxLjI1MjIyLC0yOTEuOTQzMiAtNTguNzM4MTQsLTEyNC40Mjc4MiAtMTYuMTYwNjksLTI3Ny42OTMwOCAxMTcuNjcyODEsLTI3Ny42OTMwOCA5MC40Mjg3MywwIDE2NC44MDgyMSw4Ni45MzcyOCAyMDAuNzM1NTEsMTYzLjA1MDc4IDIxLjQwMTgsNDUuMzM0MiAzMy4wNTU0LDkwLjQ0MTQgMzcuNjQ0NCwxMzIuOTc0IGwgMTcuNTU0OSwzLjIxMiBjIDMuODc4LC0xMTcuMDgwNSAxMjcuNzM4OSwtMzEwLjk0NzkyIDc1LjAxMTksLTQyMi42MzYxMiAtNjcuNDgwNCwtMTQyLjk1MDg5IC0yNjkuMjUzLC0xNDEuNjcwOTMgLTM4NC40NjE3NCwtMTkyLjQwNDA3IC0yNC4yMTY0Niw1Ni42NDYzMyAtNTcuMDIyOCwxMDkuMzEzMTkgLTEwMy4yMTYwNywxNDkuNTA4MTEgMTAyLjc2NzEzLDM0LjU2ODg5IDM1NS4zMDQwMSw5Mi42MTUyIDQxMC4yMTUwMSwyMDguOTQzMDkgMjMuMDc3Nyw0OC44NzcyNSA3LjM2NiwxMjkuOTE0MzkgLTE5LjI5NjUsMTU3LjM3OTM5IC00LjUzNjYsLTE3LjI3NTYgLTEwLjgxNDgsLTM0Ljg4NTI4IC0xOS4xNDc0LC01Mi41MzM5MyAtNDcuMDE5LC05OS41OTkwNSAtMTQ3LjY4OTA2LC0xNzYuODQwMDYgLTI1MS40NzM2MSwtMTc2Ljg0MDA2IC0xNDQuNDk1OTEsMCAtMjA1Ljc1Mzc5LDEwMy44MzE1OSAtMTM3Ljc1MDgyLDI0Ny45MDgyOSA0MC44MTI5NCw4Ni40NTA2IDI0OS4yMjI1MSwzNzQuMjA4MyAzNTYuOTgxNzMsMzc0LjIwODMgeiIKICAgICAgICBpbmtzY2FwZTpjb25uZWN0b3ItY3VydmF0dXJlPSIwIiAvPjxwYXRoCiAgICAgICAgaWQ9InBhdGgyMiIKICAgICAgICBzdHlsZT0iZmlsbDojMDAwMDAwO2ZpbGwtb3BhY2l0eToxO2ZpbGwtcnVsZTpub256ZXJvO3N0cm9rZTpub25lO3N0cm9rZS13aWR0aDowLjQ0NDY3NDkxIgogICAgICAgIGQ9Im0gMTI5Ny41MTIsMTA4Mi4yMDAzIGMgNS43NDA4LC0xNC4xMDU2IDIyLjMzNTYsLTkzLjk3NjMzIDM0Ljk0MjcsLTkzLjk3NjMzIDI3LjIxNzksMCA3Ni40MDc4LDc0LjA1OTczIDg5LjYwMyw5My4yODY4MyAyNC4yMDUsLTE1Ljg0OTUgMTAuNzc3MSwtNDkuMTI1NSA1NS42MzM1LC00OS4xMjU1IDIwLjMwNzMsMCAzMC41MjA4LDQzLjc0NDUgNTEuNjUzOCw0NC40NTUgMC43NDg4LC0xNy42ODExIDEuODgwOSwtMzMuNjgxNSAtNy43NTc1LC01NC4xMDU5IC0xNC44NjY0LC0zMS40OTQ2NCAtNTIuNDc4LC03NC4xNjgzNiAtODkuNDQ5LC03NC4xNjgzNiAtMjYuNDgyMywwIC02My4zNjQ4LDMxLjg4MjM5IC03MC42MDk2LDMxLjg4MjM5IC03Ljg3MjMsMCAtMjIuMzE2LC0zLjY4MjUzIC0yNi45MjQ3LC0xMy40MzM5OSAtMTkuMjUwNiwtNDAuNzkxODkgMzIuMjE4MiwtMTc2Ljk2NjU2IDgzLjgzNzcsLTE3Ni45NjY1NiAyNy41ODMyLDAgNjAuNDk3NywyMC4yMzI4OSA4OS4zNDc0LDMyLjcxNzg1IC03LjUxMTksLTQ5LjA2ODY4IC04LjU1NTUsLTkwLjQ0MTM3IDEuMzgyNywtMTMyLjY1OTIxIC0yNi4yOTA2LC0xNi42NTkwNyAtNTcuMDg2NiwtMjMuNjgxODcgLTgxLjgwMTEsLTIzLjY4MTg3IC0xMjYuODM3OCwwIC01Ni44ODg0LDI5NC45OCAtMTczLjg0NTMsMzU3LjgyNTA1IGwgNDMuOTg2NCw1Ny45NTA2IgogICAgICAgIGlua3NjYXBlOmNvbm5lY3Rvci1jdXJ2YXR1cmU9IjAiIC8+PHBhdGgKICAgICAgICBpZD0icGF0aDI0IgogICAgICAgIHN0eWxlPSJmaWxsOm5vbmU7c3Ryb2tlOiMwMDAwMDA7c3Ryb2tlLXdpZHRoOjE1OS4wMDg1NDQ5MjtzdHJva2UtbGluZWNhcDpidXR0O3N0cm9rZS1saW5lam9pbjpyb3VuZDtzdHJva2UtbWl0ZXJsaW1pdDozLjg2MzY4OTk7c3Ryb2tlLWRhc2hhcnJheTpub25lO3N0cm9rZS1vcGFjaXR5OjEiCiAgICAgICAgZD0ibSAxMjk3LjUxMiwxMDgyLjIwMDMgYyA1Ljc0MDgsLTE0LjEwNTYgMjIuMzM1NiwtOTMuOTc2MzMgMzQuOTQyNywtOTMuOTc2MzMgMjcuMjE3OSwwIDc2LjQwNzgsNzQuMDU5NzMgODkuNjAzLDkzLjI4NjgzIDI0LjIwNSwtMTUuODQ5NSAxMC43NzcxLC00OS4xMjU1IDU1LjYzMzUsLTQ5LjEyNTUgMjAuMzA3MywwIDMwLjUyMDgsNDMuNzQ0NSA1MS42NTM4LDQ0LjQ1NSAwLjc0ODgsLTE3LjY4MTEgMS44ODA5LC0zMy42ODE1IC03Ljc1NzUsLTU0LjEwNTkgLTE0Ljg2NjQsLTMxLjQ5NDY0IC01Mi40NzgsLTc0LjE2ODM2IC04OS40NDksLTc0LjE2ODM2IC0yNi40ODIzLDAgLTYzLjM2NDgsMzEuODgyMzkgLTcwLjYwOTYsMzEuODgyMzkgLTcuODcyMywwIC0yMi4zMTYsLTMuNjgyNTMgLTI2LjkyNDcsLTEzLjQzMzk5IC0xOS4yNTA2LC00MC43OTE4OSAzMi4yMTgyLC0xNzYuOTY2NTYgODMuODM3NywtMTc2Ljk2NjU2IDI3LjU4MzIsMCA2MC40OTc3LDIwLjIzMjg5IDg5LjM0NzQsMzIuNzE3ODUgLTcuNTExOSwtNDkuMDY4NjggLTguNTU1NSwtOTAuNDQxMzcgMS4zODI3LC0xMzIuNjU5MjEgLTI2LjI5MDYsLTE2LjY1OTA3IC01Ny4wODY2LC0yMy42ODE4NyAtODEuODAxMSwtMjMuNjgxODcgLTEyNi44Mzc4LDAgLTU2Ljg4ODQsMjk0Ljk4IC0xNzMuODQ1MywzNTcuODI1MDUgeiIKICAgICAgICBpbmtzY2FwZTpjb25uZWN0b3ItY3VydmF0dXJlPSIwIiAvPjxwYXRoCiAgICAgICAgaWQ9InBhdGgyNiIKICAgICAgICBzdHlsZT0iZmlsbDojMDAwMDAwO2ZpbGwtb3BhY2l0eToxO2ZpbGwtcnVsZTpldmVub2RkO3N0cm9rZTpub25lO3N0cm9rZS13aWR0aDowLjQ0NDY3NDkxIgogICAgICAgIGQ9Im0gMTc4NC45OTgsMTEwNS44MzgzIGMgOTUuODU5OSwwIDEzMy43MDU4LC0xNzIuNDQyMDggOTAuNjk5MSwtMjYzLjU1NTA4IC0zMy4zNzMyLC03MC42ODM3NSAtOTIuNTM0LC0xMjEuOTIzMDYgLTE2OC4zMjQxLC0xMjEuOTIzMDYgLTEzMy44NDk5LDAgLTExNy4wNzY0LDE4Mi40NTk1OSAtNjQuODYyMiwyOTMuMDg1MjQgMTQuNDAxMSwzMC40NzQyIDYzLjYwMDcsOTYuODk4IDEwMi4wODU1LDk2Ljg5OCAxNC4xMzksMCAyNS44NTMyLC00LjUwNTEgNDAuNDAxNywtNC41MDUxIHogbSAtMi45NjU0LC0xNi4wOTYxIGMgLTE1LjA4OTIsMCAtMjguMzU5OCwtNy40NTkyIC0zNS4zNTU1LC0yMi4zMDYyIC0xNC42OTYxLC0zMS4xMTUxIDU4LjU3MDksLTYyLjYwMzIgNDguMDUyNywtODQuODcyMTIgLTYuNjE4OSwtMTQuMDE2MzcgLTMxLjgxNjcsLTI3LjEzNDAyIC00NC41MzAzLC0yNy4xMzQwMiAtNjMuNTE4OCwwIC02Mi45NzgyLDgyLjY0NjM0IC0yNS4xMTU5LDEzNi41MTA0NCAtMjMuNTQzMSwtMTQuOTk5NCAtMzguOTc2MywtMzcuOTE0IC00OS4wMDMsLTU5LjE2NzIgLTM3LjIyMzQsLTc4LjgzODk5IC03LjY4MzksLTE4Ny4yOTU2IDc3LjI2NDUsLTE4Ny4yOTU2IDQ2LjkzODgsMCAxMDEuMDA0Myw0Mi4xNzI0MyAxMjIuMDA3OSw4Ni42ODkwNiAyNS44NTMyLDU0LjczODUgLTQwLjI1NDIsMTU3LjU3NTY0IC05My4zMjA0LDE1Ny41NzU2NCIKICAgICAgICBpbmtzY2FwZTpjb25uZWN0b3ItY3VydmF0dXJlPSIwIiAvPjxwYXRoCiAgICAgICAgaWQ9InBhdGgyOCIKICAgICAgICBzdHlsZT0iZmlsbDpub25lO3N0cm9rZTojMDAwMDAwO3N0cm9rZS13aWR0aDoxNTkuMDA4NTQ0OTI7c3Ryb2tlLWxpbmVjYXA6YnV0dDtzdHJva2UtbGluZWpvaW46cm91bmQ7c3Ryb2tlLW1pdGVybGltaXQ6My44NjM2ODk5O3N0cm9rZS1kYXNoYXJyYXk6bm9uZTtzdHJva2Utb3BhY2l0eToxIgogICAgICAgIGQ9Im0gMTc4NC45OTgsMTEwNS44MzgzIGMgOTUuODU5OSwwIDEzMy43MDU4LC0xNzIuNDQyMDggOTAuNjk5MSwtMjYzLjU1NTA4IC0zMy4zNzMyLC03MC42ODM3NSAtOTIuNTM0LC0xMjEuOTIzMDYgLTE2OC4zMjQxLC0xMjEuOTIzMDYgLTEzMy44NDk5LDAgLTExNy4wNzY0LDE4Mi40NTk1OSAtNjQuODYyMiwyOTMuMDg1MjQgMTQuNDAxMSwzMC40NzQyIDYzLjYwMDcsOTYuODk4IDEwMi4wODU1LDk2Ljg5OCAxNC4xMzksMCAyNS44NTMyLC00LjUwNTEgNDAuNDAxNywtNC41MDUxIHoiCiAgICAgICAgaW5rc2NhcGU6Y29ubmVjdG9yLWN1cnZhdHVyZT0iMCIgLz48cGF0aAogICAgICAgIGlkPSJwYXRoMzAiCiAgICAgICAgc3R5bGU9ImZpbGw6bm9uZTtzdHJva2U6IzAwMDAwMDtzdHJva2Utd2lkdGg6MTU5LjAwODU0NDkyO3N0cm9rZS1saW5lY2FwOmJ1dHQ7c3Ryb2tlLWxpbmVqb2luOnJvdW5kO3N0cm9rZS1taXRlcmxpbWl0OjMuODYzNjg5OTtzdHJva2UtZGFzaGFycmF5Om5vbmU7c3Ryb2tlLW9wYWNpdHk6MSIKICAgICAgICBkPSJtIDE3ODIuMDMyNiwxMDg5Ljc0MjIgYyAtMTUuMDg5MiwwIC0yOC4zNTk4LC03LjQ1OTIgLTM1LjM1NTUsLTIyLjMwNjIgLTE0LjY5NjEsLTMxLjExNTEgNTguNTcwOSwtNjIuNjAzMiA0OC4wNTI3LC04NC44NzIxMiAtNi42MTg5LC0xNC4wMTYzNyAtMzEuODE2NywtMjcuMTM0MDIgLTQ0LjUzMDMsLTI3LjEzNDAyIC02My41MTg4LDAgLTYyLjk3ODIsODIuNjQ2MzQgLTI1LjExNTksMTM2LjUxMDQ0IC0yMy41NDMxLC0xNC45OTk0IC0zOC45NzYzLC0zNy45MTQgLTQ5LjAwMywtNTkuMTY3MiAtMzcuMjIzNCwtNzguODM4OTkgLTcuNjgzOSwtMTg3LjI5NTYgNzcuMjY0NSwtMTg3LjI5NTYgNDYuOTM4OCwwIDEwMS4wMDQzLDQyLjE3MjQzIDEyMi4wMDc5LDg2LjY4OTA2IDI1Ljg1MzIsNTQuNzM4NSAtNDAuMjU0MiwxNTcuNTc1NjQgLTkzLjMyMDQsMTU3LjU3NTY0IHoiCiAgICAgICAgaW5rc2NhcGU6Y29ubmVjdG9yLWN1cnZhdHVyZT0iMCIgLz48cGF0aAogICAgICAgIGlkPSJwYXRoMzIiCiAgICAgICAgc3R5bGU9ImZpbGw6IzAwMDAwMDtmaWxsLW9wYWNpdHk6MTtmaWxsLXJ1bGU6ZXZlbm9kZDtzdHJva2U6bm9uZTtzdHJva2Utd2lkdGg6MC40NDQ2NzQ5MSIKICAgICAgICBkPSJtIDIyMjAuNjUxNyw4MjEuOTQ4MSBjIC0yNS4wNTA0LC01My4wNTk0NSAtNzEuNzI3LC04Mi4xOTA1MSAtMTI0LjI4NTMsLTgyLjE5MDUxIC0xNjYuODAwNCwwIC0xOTkuODk1LDE1Mi4wOTg4OCAtMTI3LjYxMSwzMDUuMjM5MjEgMTcuMDcxNiwzNi4xNDU3IDQ1LjA4NzMsNzYuMTMzIDg3Ljg2NDcsNzYuMTMzIDEzNC4wMDA2LDAgMjI3LjM1MzcsLTE2NS4wMjgzNSAxNjQuMDMxNiwtMjk5LjE4MTcgeiBtIC0xMzMuMDgzMiwyNzkuOTY3NiBjIC0xMi4zMDQsMCAtMjMuMTAwNywtNC40NDgzIC0yOC45OTg4LC0xNi45NTExIC0xMi45NzU3LC0yNy40OTc0IDU3LjYyMDcsLTUyLjAxNDcgNTcuNzE5MSwtODAuNDMwNCAtNy4zNzI2LC04LjczMTAxIC0yOC4wMTU4LC0xOC41MDM1NCAtMzcuMDEwNCwtMTguNTAzNTQgLTUwLjgzOCwwIC04OS4yMDgxLDY4LjkyMjA0IC00NS44MDgyLDEyMC4xNDM0NCAtMTcuNjEyMywtMTEuMTg1NSAtMjguMDY1LC0yNy45MjczIC0zNS41MDMxLC00My42NjgyIC00NC4wMDYsLTkzLjIxNzAzIDE4LjcyNjQsLTE4Ny40NjA5OSAxMTAuMTI5OSwtMTg3LjQ2MDk5IDM4LjA0MjUsMCA4Ny4wNzgzLDIxLjE3MjIyIDEwNi44MzY4LDYzLjA0MTMgMjcuOTY2Niw1OS4yNTY1MyAtNzEuNjQ1LDE2My44Mjk0OSAtMTI3LjM2NTMsMTYzLjgyOTQ5IgogICAgICAgIGlua3NjYXBlOmNvbm5lY3Rvci1jdXJ2YXR1cmU9IjAiIC8+PHBhdGgKICAgICAgICBpZD0icGF0aDM0IgogICAgICAgIHN0eWxlPSJmaWxsOm5vbmU7c3Ryb2tlOiMwMDAwMDA7c3Ryb2tlLXdpZHRoOjE1OS4wMDg1NDQ5MjtzdHJva2UtbGluZWNhcDpidXR0O3N0cm9rZS1saW5lam9pbjpyb3VuZDtzdHJva2UtbWl0ZXJsaW1pdDozLjg2MzY4OTk7c3Ryb2tlLWRhc2hhcnJheTpub25lO3N0cm9rZS1vcGFjaXR5OjEiCiAgICAgICAgZD0ibSAyMjIwLjY1MTcsODIxLjk0ODEgYyAtMjUuMDUwNCwtNTMuMDU5NDUgLTcxLjcyNywtODIuMTkwNTEgLTEyNC4yODUzLC04Mi4xOTA1MSAtMTY2LjgwMDQsMCAtMTk5Ljg5NSwxNTIuMDk4ODggLTEyNy42MTEsMzA1LjIzOTIxIDE3LjA3MTYsMzYuMTQ1NyA0NS4wODczLDc2LjEzMyA4Ny44NjQ3LDc2LjEzMyAxMzQuMDAwNiwwIDIyNy4zNTM3LC0xNjUuMDI4MzUgMTY0LjAzMTYsLTI5OS4xODE3IHoiCiAgICAgICAgaW5rc2NhcGU6Y29ubmVjdG9yLWN1cnZhdHVyZT0iMCIgLz48cGF0aAogICAgICAgIGlkPSJwYXRoMzYiCiAgICAgICAgc3R5bGU9ImZpbGw6bm9uZTtzdHJva2U6IzAwMDAwMDtzdHJva2Utd2lkdGg6MTU5LjAwODU0NDkyO3N0cm9rZS1saW5lY2FwOmJ1dHQ7c3Ryb2tlLWxpbmVqb2luOnJvdW5kO3N0cm9rZS1taXRlcmxpbWl0OjMuODYzNjg5OTtzdHJva2UtZGFzaGFycmF5Om5vbmU7c3Ryb2tlLW9wYWNpdHk6MSIKICAgICAgICBkPSJtIDIwODcuNTY4NSwxMTAxLjkxNTcgYyAtMTIuMzA0LDAgLTIzLjEwMDcsLTQuNDQ4MyAtMjguOTk4OCwtMTYuOTUxMSAtMTIuOTc1NywtMjcuNDk3NCA1Ny42MjA3LC01Mi4wMTQ3IDU3LjcxOTEsLTgwLjQzMDQgLTcuMzcyNiwtOC43MzEwMSAtMjguMDE1OCwtMTguNTAzNTQgLTM3LjAxMDQsLTE4LjUwMzU0IC01MC44MzgsMCAtODkuMjA4MSw2OC45MjIwNCAtNDUuODA4MiwxMjAuMTQzNDQgLTE3LjYxMjMsLTExLjE4NTUgLTI4LjA2NSwtMjcuOTI3MyAtMzUuNTAzMSwtNDMuNjY4MiAtNDQuMDA2LC05My4yMTcwMyAxOC43MjY0LC0xODcuNDYwOTkgMTEwLjEyOTksLTE4Ny40NjA5OSAzOC4wNDI1LDAgODcuMDc4MywyMS4xNzIyMiAxMDYuODM2OCw2My4wNDEzIDI3Ljk2NjYsNTkuMjU2NTMgLTcxLjY0NSwxNjMuODI5NDkgLTEyNy4zNjUzLDE2My44Mjk0OSB6IgogICAgICAgIGlua3NjYXBlOmNvbm5lY3Rvci1jdXJ2YXR1cmU9IjAiIC8+PHBhdGgKICAgICAgICBpZD0icGF0aDM4IgogICAgICAgIHN0eWxlPSJmaWxsOiMwMDAwMDA7ZmlsbC1vcGFjaXR5OjE7ZmlsbC1ydWxlOm5vbnplcm87c3Ryb2tlOm5vbmU7c3Ryb2tlLXdpZHRoOjAuNDQ0Njc0OTEiCiAgICAgICAgZD0ibSAyMzkzLjE1MzUsMTEwMi44Mjc0IGMgMTQzLjc0ODgsMCAyMTYuNzg2NSwtMjYzLjc4MjIyIDE1Mi41NDY4LC0zOTkuODM2ODcgLTEyLjI3MTMsLTI2LjAxNDYzIC0zNS4xNTksLTUyLjAxNDczIC02NS4zMzc0LC01Mi4wMTQ3MyAtMTY0LjIyODIsMCAtMTIyLjMwMjksMzI2LjQzNzM3IC0yMTQuNzU0OSw0MTkuMTg1NiA4LjQ1MzksOC45NzkyIDE2LjU0NzMsMTguMzc3MSAyMy45NjksMjcuODM4MSA2Mi40NzAzLC03My4zMTM1IDMxLjQyMzYsLTI2Ni4yNTQ1IDE2NC44NTA4LC0yNjYuMjU0NSAzMC43MzU0LDAgNTMuOTgzNiwyNi45MTM0MiA2Ni4zODU5LDUzLjE3OTUyIDMzLjEyNzQsNzAuMTg5IC0yOC4xNzk2LDE5Mi4wOTI1OCAtOTUuMjg2NCwxOTIuMDkyNTggLTAuNjcxNywwIC0xMC4zMDUyLC0wLjM5OSAtMTAuMDkyMiwtNC4zMDIyIDIuNDczOSwtNDQuNzk3MyAzNy43MTQ4LC0xNi44NjM1IDIuMjI4MSwtOTMuMTAzNTMgLTM2LjI1NjcsNy4yMjM5MiAtNzQuNjU5Niw2NS40MjkyMyAtNTQuODM1NSwxMDcuNDMxMzMgNS44MzI1LDEyLjM0MzkgMjAuNDMwMiwxNS43ODQ3IDMwLjMyNTgsMTUuNzg0NyIKICAgICAgICBpbmtzY2FwZTpjb25uZWN0b3ItY3VydmF0dXJlPSIwIiAvPjxwYXRoCiAgICAgICAgaWQ9InBhdGg0MCIKICAgICAgICBzdHlsZT0iZmlsbDpub25lO3N0cm9rZTojMDAwMDAwO3N0cm9rZS13aWR0aDoxNTkuMDA4NTQ0OTI7c3Ryb2tlLWxpbmVjYXA6YnV0dDtzdHJva2UtbGluZWpvaW46cm91bmQ7c3Ryb2tlLW1pdGVybGltaXQ6My44NjM2ODk5O3N0cm9rZS1kYXNoYXJyYXk6bm9uZTtzdHJva2Utb3BhY2l0eToxIgogICAgICAgIGQ9Im0gMjM5My4xNTM1LDExMDIuODI3NCBjIDE0My43NDg4LDAgMjE2Ljc4NjUsLTI2My43ODIyMiAxNTIuNTQ2OCwtMzk5LjgzNjg3IC0xMi4yNzEzLC0yNi4wMTQ2MyAtMzUuMTU5LC01Mi4wMTQ3MyAtNjUuMzM3NCwtNTIuMDE0NzMgLTE2NC4yMjgyLDAgLTEyMi4zMDI5LDMyNi40MzczNyAtMjE0Ljc1NDksNDE5LjE4NTYgOC40NTM5LDguOTc5MiAxNi41NDczLDE4LjM3NzEgMjMuOTY5LDI3LjgzODEgNjIuNDcwMywtNzMuMzEzNSAzMS40MjM2LC0yNjYuMjU0NSAxNjQuODUwOCwtMjY2LjI1NDUgMzAuNzM1NCwwIDUzLjk4MzYsMjYuOTEzNDIgNjYuMzg1OSw1My4xNzk1MiAzMy4xMjc0LDcwLjE4OSAtMjguMTc5NiwxOTIuMDkyNTggLTk1LjI4NjQsMTkyLjA5MjU4IC0wLjY3MTcsMCAtMTAuMzA1MiwtMC4zOTkgLTEwLjA5MjIsLTQuMzAyMiAyLjQ3MzksLTQ0Ljc5NzMgMzcuNzE0OCwtMTYuODYzNSAyLjIyODEsLTkzLjEwMzUzIC0zNi4yNTY3LDcuMjIzOTIgLTc0LjY1OTYsNjUuNDI5MjMgLTU0LjgzNTUsMTA3LjQzMTMzIDUuODMyNSwxMi4zNDM5IDIwLjQzMDIsMTUuNzg0NyAzMC4zMjU4LDE1Ljc4NDcgeiIKICAgICAgICBpbmtzY2FwZTpjb25uZWN0b3ItY3VydmF0dXJlPSIwIiAvPjxwYXRoCiAgICAgICAgaWQ9InBhdGg0MiIKICAgICAgICBzdHlsZT0iZmlsbDojMDAwMDAwO2ZpbGwtb3BhY2l0eToxO2ZpbGwtcnVsZTpldmVub2RkO3N0cm9rZTpub25lO3N0cm9rZS13aWR0aDowLjQ0NDY3NDkxIgogICAgICAgIGQ9Im0gMjc1MC41OTIzLDExMDUuNzYyIGMgMTMuNTMyOCwtMS4yNzk5IDMzLjg4MSwtMC4wNyA0NS40OTcsLTMuNjA2MiAyLjE3OSwtMC42NTg3IDAuNTI0MiwtMy4zODQxIDAuOTAxMSwtNS41MzIgMy41MjI0LC0xOS45Mjk1IDkuMDc2NCwtMzguODQ1MiAxMy44NzY4LC01OC4xMDMxIDE4LjcyNjMsLTc1LjA0OTI5IDI5Ljk5ODIsLTE1Mi4wODc0OSA1MS40OTMzLC0yMjYuNDcxNjQgMjMuMzc5MiwtODAuOTg2ODIgNDcuNzU3OSwtMTcyLjI1MjMgMTkuNDQ3MiwtMjczLjg3NzU1IC0yLjc2ODgsLTkuOTQyODkgLTYuNDcxNCwtMjAuMDM4MjUgLTExLjI1NTQsLTMwLjE3MDkzIC0zMi4wOTUzLC02OC4wMDIxOCAtMzA4LjQ4NDksLTE0Ni4zNTI3OSAtMzgwLjYzNzgsLTE0Ni4zNTI3OSAtOC43NjUyLDAgLTE4LjIzNDksMi40ODUzMSAtMjIuNDEyNyw4LjE4NzU4IDMwLjQ0MDUsMTkuMzYwMTMgNDkuNTExLDM5LjIwNjk0IDYzLjEyNTYsNjguMDM0NjIgMTYuMzAxNiwzNC41NDk0IDE2LjA1NTksNjYuOTExOTkgMTMuOTA5Niw5Ni43MDgxOSA1Ljc2NywtMy4zNTE2IDIxOC4xMTM1LDEuODgxODIgMjI1LjgxMzgsMS44ODE4MiAzMS4yMTA2LDAgNTguMDE0LDMwLjE4MzkxIDcwLjUzMDksNTYuNzE2MDYgMjMuMDAyNSw0OC43MjQ4MSAxOS4wNzA1LDk4LjQ1MjE0IDE1LjA4OTIsMTM5Ljk0NjQ5IC0xLjk5ODcsMjAuNzcxNDggLTQuODAwMyw0MS4yNjU1NyAtOC42NjY4LDYxLjE3MDc3IGwgLTUuODY1MywyOC44MjYxIC0wLjczNzMsMy4xNTY5MiAtMC43MjA5LDMuMTQ4NzkgYyAzLjQ4OTcsMCAwLjM2MDUsLTYuMTIwNzcgMC40OTE1LC05LjIwMTQ4IDIuMTQ2MywtNTAuMjMzNSAxLjI0NTIsLTEyMC4zNjQwNyAtMjUuNzM4NCwtMTc3LjUzNjAxIC0xMi41NDk4LC0yNi41NjQ2MiAtMzMuMDYxOSwtNTMuOTUzMzUgLTY0LjU1MSwtNTMuOTUzMzUgLTEzOC4wMTQ2LDAgLTY4LjU5NzcsMzkxLjQyODY2IC0xNzkuMjAyNyw0ODQuNDczNzEgNi4xMjc0LDEwLjEyMTQgMTEuNTk5NSwyMC41MzMxIDE2LjE4NjksMzAuNzQyIDY1LjQ1MjEsLTc5LjA0ODIgNjguODc2MiwtMjk2Ljk1NzU2IDE2NS4yMTEyLC0yOTYuOTU3NTYgMjMuMzc5MiwwIDQ3LjU0NDksMjEuOTEzNTggNTcuNDg5Nyw0Mi45NzA2MyA0Mi43OTM3LDkwLjY1NzEyIC0yOC4yOTQzLDE5Ni4yNjk5MyAtNTkuMjc1NSwyNTUuNzk4OTMiCiAgICAgICAgaW5rc2NhcGU6Y29ubmVjdG9yLWN1cnZhdHVyZT0iMCIgLz48cGF0aAogICAgICAgIGlkPSJwYXRoNDQiCiAgICAgICAgc3R5bGU9ImZpbGw6bm9uZTtzdHJva2U6IzAwMDAwMDtzdHJva2Utd2lkdGg6MTU5LjAwODU0NDkyO3N0cm9rZS1saW5lY2FwOmJ1dHQ7c3Ryb2tlLWxpbmVqb2luOnJvdW5kO3N0cm9rZS1taXRlcmxpbWl0OjMuODYzNjg5OTtzdHJva2UtZGFzaGFycmF5Om5vbmU7c3Ryb2tlLW9wYWNpdHk6MSIKICAgICAgICBkPSJtIDI3NTAuNTkyMywxMTA1Ljc2MiBjIDEzLjUzMjgsLTEuMjc5OSAzMy44ODEsLTAuMDcgNDUuNDk3LC0zLjYwNjIgMi4xNzksLTAuNjU4NyAwLjUyNDIsLTMuMzg0MSAwLjkwMTEsLTUuNTMyIDMuNTIyNCwtMTkuOTI5NSA5LjA3NjQsLTM4Ljg0NTIgMTMuODc2OCwtNTguMTAzMSAxOC43MjYzLC03NS4wNDkyOSAyOS45OTgyLC0xNTIuMDg3NDkgNTEuNDkzMywtMjI2LjQ3MTY0IDIzLjM3OTIsLTgwLjk4NjgyIDQ3Ljc1NzksLTE3Mi4yNTIzIDE5LjQ0NzIsLTI3My44Nzc1NSAtMi43Njg4LC05Ljk0Mjg5IC02LjQ3MTQsLTIwLjAzODI1IC0xMS4yNTU0LC0zMC4xNzA5MyAtMzIuMDk1MywtNjguMDAyMTggLTMwOC40ODQ5LC0xNDYuMzUyNzkgLTM4MC42Mzc4LC0xNDYuMzUyNzkgLTguNzY1MiwwIC0xOC4yMzQ5LDIuNDg1MzEgLTIyLjQxMjcsOC4xODc1OCAzMC40NDA1LDE5LjM2MDEzIDQ5LjUxMSwzOS4yMDY5NCA2My4xMjU2LDY4LjAzNDYyIDE2LjMwMTYsMzQuNTQ5NCAxNi4wNTU5LDY2LjkxMTk5IDEzLjkwOTYsOTYuNzA4MTkgNS43NjcsLTMuMzUxNiAyMTguMTEzNSwxLjg4MTgyIDIyNS44MTM4LDEuODgxODIgMzEuMjEwNiwwIDU4LjAxNCwzMC4xODM5MSA3MC41MzA5LDU2LjcxNjA2IDIzLjAwMjUsNDguNzI0ODEgMTkuMDcwNSw5OC40NTIxNCAxNS4wODkyLDEzOS45NDY0OSAtMS45OTg3LDIwLjc3MTQ4IC00LjgwMDMsNDEuMjY1NTcgLTguNjY2OCw2MS4xNzA3NyBsIC01Ljg2NTMsMjguODI2MSAtMC43MzczLDMuMTU2OTIgLTAuNzIwOSwzLjE0ODc5IGMgMy40ODk3LDAgMC4zNjA1LC02LjEyMDc3IDAuNDkxNSwtOS4yMDE0OCAyLjE0NjMsLTUwLjIzMzUgMS4yNDUyLC0xMjAuMzY0MDcgLTI1LjczODQsLTE3Ny41MzYwMSAtMTIuNTQ5OCwtMjYuNTY0NjIgLTMzLjA2MTksLTUzLjk1MzM1IC02NC41NTEsLTUzLjk1MzM1IC0xMzguMDE0NiwwIC02OC41OTc3LDM5MS40Mjg2NiAtMTc5LjIwMjcsNDg0LjQ3MzcxIDYuMTI3NCwxMC4xMjE0IDExLjU5OTUsMjAuNTMzMSAxNi4xODY5LDMwLjc0MiA2NS40NTIxLC03OS4wNDgyIDY4Ljg3NjIsLTI5Ni45NTc1NiAxNjUuMjExMiwtMjk2Ljk1NzU2IDIzLjM3OTIsMCA0Ny41NDQ5LDIxLjkxMzU4IDU3LjQ4OTcsNDIuOTcwNjMgNDIuNzkzNyw5MC42NTcxMiAtMjguMjk0MywxOTYuMjY5OTMgLTU5LjI3NTUsMjU1Ljc5ODkzIHoiCiAgICAgICAgaW5rc2NhcGU6Y29ubmVjdG9yLWN1cnZhdHVyZT0iMCIgLz48cGF0aAogICAgICAgIGlkPSJwYXRoNDYiCiAgICAgICAgc3R5bGU9ImZpbGw6IzAwMDAwMDtmaWxsLW9wYWNpdHk6MTtmaWxsLXJ1bGU6bm9uemVybztzdHJva2U6bm9uZTtzdHJva2Utd2lkdGg6MC40NDQ2NzQ5MSIKICAgICAgICBkPSJtIDEwNTAuNjQ1NSwxNDI1LjUxNTcgYyA5NC45MjkyLDAgMzkuNjAyMSwtMjM3LjIwNzggNS44NDM5LC0zMDguNzMzNiAtMjguOTA4NiwtNjEuMjM0MSAtOTMuOTg4ODIsLTE0OS41NTM1IC0xNzEuMTE5MDYsLTE0OS41NTM1IC05Mi41NDA1NSwwIC04OS43ODgxLDEwMy42NDgzIC01Mi45NTE0NSwxODEuNjc0NCAxOS45NDE5OCw0Mi4yNDM4IDUwLjU5MDU4LDg5LjU5NzggOTIuODE1OCwxMjQuNDExNiAtMTAuODA4MTgsLTM2LjMzODcgMjUuNzI3MDIsLTYxLjE1OTQgMTAuOTUwNzQsLTkyLjQ2OTIgLTEwLjA5MjI2LC0yMS4zODE0IC0zMC45ODEyMiwtNDQuNzQyMSAtNDEuODM1MjksLTY3LjczOTMgLTE3LjU1NDkyLC0zNy4xNzkyIC0xMC44NDc1MywtMTAzLjE2NjUgMzEuNTYyODEsLTEwMy4xNjY1IDM3Ljk2Mzg1LDAgNzEuNjk3NDcsNDcuMDI3OSA4NS41MjY3NSw3Ni4zMjI4IDI4LjMzMiw2MC4wMjg3IDk5LjE3MjYsMzE2LjExOTggMTkuOTg3OSwzMTYuMTE5OCAtOTEuMTk3MSwwIC0yNDguMzQ0MzIsLTIyMi4yMzQ0IC0yODEuMjUyMjIsLTI5MS45NDMyIC01OC43MzgxNCwtMTI0LjQyNzgyIC0xNi4xNjA2OSwtMjc3LjY5MzA4IDExNy42NzI4MSwtMjc3LjY5MzA4IDkwLjQyODczLDAgMTY0LjgwODIxLDg2LjkzNzI4IDIwMC43MzU1MSwxNjMuMDUwNzggMjEuNDAxOCw0NS4zMzQyIDMzLjA1NTQsOTAuNDQxNCAzNy42NDQ0LDEzMi45NzQgbCAxNy41NTQ5LDMuMjEyIGMgMy44NzgsLTExNy4wODA1IDEyNy43Mzg5LC0zMTAuOTQ3OTIgNzUuMDExOSwtNDIyLjYzNjEyIC02Ny40ODA0LC0xNDIuOTUwODkgLTI2OS4yNTMsLTE0MS42NzA5MyAtMzg0LjQ2MTc0LC0xOTIuNDA0MDcgLTI0LjIxNjQ2LDU2LjY0NjMzIC01Ny4wMjI4LDEwOS4zMTMxOSAtMTAzLjIxNjA3LDE0OS41MDgxMSAxMDIuNzY3MTMsMzQuNTY4ODkgMzU1LjMwNDAxLDkyLjYxNTIgNDEwLjIxNTAxLDIwOC45NDMwOSAyMy4wNzc3LDQ4Ljg3NzI1IDcuMzY2LDEyOS45MTQzOSAtMTkuMjk2NSwxNTcuMzc5MzkgLTQuNTM2NiwtMTcuMjc1NiAtMTAuODE0OCwtMzQuODg1MjggLTE5LjE0NzQsLTUyLjUzMzkzIC00Ny4wMTksLTk5LjU5OTA1IC0xNDcuNjg5MDYsLTE3Ni44NDAwNiAtMjUxLjQ3MzYxLC0xNzYuODQwMDYgLTE0NC40OTU5MSwwIC0yMDUuNzUzNzksMTAzLjgzMTU5IC0xMzcuNzUwODIsMjQ3LjkwODI5IDQwLjgxMjk0LDg2LjQ1MDYgMjQ5LjIyMjUxLDM3NC4yMDgzIDM1Ni45ODE3MywzNzQuMjA4MyIKICAgICAgICBpbmtzY2FwZTpjb25uZWN0b3ItY3VydmF0dXJlPSIwIiAvPjxwYXRoCiAgICAgICAgaWQ9InBhdGg0OCIKICAgICAgICBzdHlsZT0iZmlsbDpub25lO3N0cm9rZTojMDAwMDAwO3N0cm9rZS13aWR0aDoxMy4yNTA5ODUxNTtzdHJva2UtbGluZWNhcDpidXR0O3N0cm9rZS1saW5lam9pbjptaXRlcjtzdHJva2UtbWl0ZXJsaW1pdDozLjg2MzcwOTkzO3N0cm9rZS1kYXNoYXJyYXk6bm9uZTtzdHJva2Utb3BhY2l0eToxIgogICAgICAgIGQ9Im0gMTA1MC42NDU1LDE0MjUuNTE1NyBjIDk0LjkyOTIsMCAzOS42MDIxLC0yMzcuMjA3OCA1Ljg0MzksLTMwOC43MzM2IC0yOC45MDg2LC02MS4yMzQxIC05My45ODg4MiwtMTQ5LjU1MzUgLTE3MS4xMTkwNiwtMTQ5LjU1MzUgLTkyLjU0MDU1LDAgLTg5Ljc4ODEsMTAzLjY0ODMgLTUyLjk1MTQ1LDE4MS42NzQ0IDE5Ljk0MTk4LDQyLjI0MzggNTAuNTkwNTgsODkuNTk3OCA5Mi44MTU4LDEyNC40MTE2IC0xMC44MDgxOCwtMzYuMzM4NyAyNS43MjcwMiwtNjEuMTU5NCAxMC45NTA3NCwtOTIuNDY5MiAtMTAuMDkyMjYsLTIxLjM4MTQgLTMwLjk4MTIyLC00NC43NDIxIC00MS44MzUyOSwtNjcuNzM5MyAtMTcuNTU0OTIsLTM3LjE3OTIgLTEwLjg0NzUzLC0xMDMuMTY2NSAzMS41NjI4MSwtMTAzLjE2NjUgMzcuOTYzODUsMCA3MS42OTc0Nyw0Ny4wMjc5IDg1LjUyNjc1LDc2LjMyMjggMjguMzMyLDYwLjAyODcgOTkuMTcyNiwzMTYuMTE5OCAxOS45ODc5LDMxNi4xMTk4IC05MS4xOTcxLDAgLTI0OC4zNDQzMiwtMjIyLjIzNDQgLTI4MS4yNTIyMiwtMjkxLjk0MzIgLTU4LjczODE0LC0xMjQuNDI3ODIgLTE2LjE2MDY5LC0yNzcuNjkzMDggMTE3LjY3MjgxLC0yNzcuNjkzMDggOTAuNDI4NzMsMCAxNjQuODA4MjEsODYuOTM3MjggMjAwLjczNTUxLDE2My4wNTA3OCAyMS40MDE4LDQ1LjMzNDIgMzMuMDU1NCw5MC40NDE0IDM3LjY0NDQsMTMyLjk3NCBsIDE3LjU1NDksMy4yMTIgYyAzLjg3OCwtMTE3LjA4MDUgMTI3LjczODksLTMxMC45NDc5MiA3NS4wMTE5LC00MjIuNjM2MTIgLTY3LjQ4MDQsLTE0Mi45NTA4OSAtMjY5LjI1MywtMTQxLjY3MDkzIC0zODQuNDYxNzQsLTE5Mi40MDQwNyAtMjQuMjE2NDYsNTYuNjQ2MzMgLTU3LjAyMjgsMTA5LjMxMzE5IC0xMDMuMjE2MDcsMTQ5LjUwODExIDEwMi43NjcxMywzNC41Njg4OSAzNTUuMzA0MDEsOTIuNjE1MiA0MTAuMjE1MDEsMjA4Ljk0MzA5IDIzLjA3NzcsNDguODc3MjUgNy4zNjYsMTI5LjkxNDM5IC0xOS4yOTY1LDE1Ny4zNzkzOSAtNC41MzY2LC0xNy4yNzU2IC0xMC44MTQ4LC0zNC44ODUyOCAtMTkuMTQ3NCwtNTIuNTMzOTMgLTQ3LjAxOSwtOTkuNTk5MDUgLTE0Ny42ODkwNiwtMTc2Ljg0MDA2IC0yNTEuNDczNjEsLTE3Ni44NDAwNiAtMTQ0LjQ5NTkxLDAgLTIwNS43NTM3OSwxMDMuODMxNTkgLTEzNy43NTA4MiwyNDcuOTA4MjkgNDAuODEyOTQsODYuNDUwNiAyNDkuMjIyNTEsMzc0LjIwODMgMzU2Ljk4MTczLDM3NC4yMDgzIHoiCiAgICAgICAgaW5rc2NhcGU6Y29ubmVjdG9yLWN1cnZhdHVyZT0iMCIgLz48cGF0aAogICAgICAgIGlkPSJwYXRoNTAiCiAgICAgICAgc3R5bGU9ImZpbGw6IzAwMDAwMDtmaWxsLW9wYWNpdHk6MTtmaWxsLXJ1bGU6bm9uemVybztzdHJva2U6bm9uZTtzdHJva2Utd2lkdGg6MC40NDQ2NzQ5MSIKICAgICAgICBkPSJtIDEyOTcuNTEyLDEwODIuMjAwMyBjIDUuNzQwOCwtMTQuMTA1NiAyMi4zMzU2LC05My45NzYzMyAzNC45NDI3LC05My45NzYzMyAyNy4yMTc5LDAgNzYuNDA3OCw3NC4wNTk3MyA4OS42MDMsOTMuMjg2ODMgMjQuMjA1LC0xNS44NDk1IDEwLjc3NzEsLTQ5LjEyNTUgNTUuNjMzNSwtNDkuMTI1NSAyMC4zMDczLDAgMzAuNTIwOCw0My43NDQ1IDUxLjY1MzgsNDQuNDU1IDAuNzQ4OCwtMTcuNjgxMSAxLjg4MDksLTMzLjY4MTUgLTcuNzU3NSwtNTQuMTA1OSAtMTQuODY2NCwtMzEuNDk0NjQgLTUyLjQ3OCwtNzQuMTY4MzYgLTg5LjQ0OSwtNzQuMTY4MzYgLTI2LjQ4MjMsMCAtNjMuMzY0OCwzMS44ODIzOSAtNzAuNjA5NiwzMS44ODIzOSAtNy44NzIzLDAgLTIyLjMxNiwtMy42ODI1MyAtMjYuOTI0NywtMTMuNDMzOTkgLTE5LjI1MDYsLTQwLjc5MTg5IDMyLjIxODIsLTE3Ni45NjY1NiA4My44Mzc3LC0xNzYuOTY2NTYgMjcuNTgzMiwwIDYwLjQ5NzcsMjAuMjMyODkgODkuMzQ3NCwzMi43MTc4NSAtNy41MTE5LC00OS4wNjg2OCAtOC41NTU1LC05MC40NDEzNyAxLjM4MjcsLTEzMi42NTkyMSAtMjYuMjkwNiwtMTYuNjU5MDcgLTU3LjA4NjYsLTIzLjY4MTg3IC04MS44MDExLC0yMy42ODE4NyAtMTI2LjgzNzgsMCAtNTYuODg4NCwyOTQuOTggLTE3My44NDUzLDM1Ny44MjUwNSBsIDQzLjk4NjQsNTcuOTUwNiIKICAgICAgICBpbmtzY2FwZTpjb25uZWN0b3ItY3VydmF0dXJlPSIwIiAvPjxwYXRoCiAgICAgICAgaWQ9InBhdGg1MiIKICAgICAgICBzdHlsZT0iZmlsbDpub25lO3N0cm9rZTojMDAwMDAwO3N0cm9rZS13aWR0aDoxMy4yNTA5ODUxNTtzdHJva2UtbGluZWNhcDpidXR0O3N0cm9rZS1saW5lam9pbjptaXRlcjtzdHJva2UtbWl0ZXJsaW1pdDozLjg2MzcwOTkzO3N0cm9rZS1kYXNoYXJyYXk6bm9uZTtzdHJva2Utb3BhY2l0eToxIgogICAgICAgIGQ9Im0gMTI5Ny41MTIsMTA4Mi4yMDAzIGMgNS43NDA4LC0xNC4xMDU2IDIyLjMzNTYsLTkzLjk3NjMzIDM0Ljk0MjcsLTkzLjk3NjMzIDI3LjIxNzksMCA3Ni40MDc4LDc0LjA1OTczIDg5LjYwMyw5My4yODY4MyAyNC4yMDUsLTE1Ljg0OTUgMTAuNzc3MSwtNDkuMTI1NSA1NS42MzM1LC00OS4xMjU1IDIwLjMwNzMsMCAzMC41MjA4LDQzLjc0NDUgNTEuNjUzOCw0NC40NTUgMC43NDg4LC0xNy42ODExIDEuODgwOSwtMzMuNjgxNSAtNy43NTc1LC01NC4xMDU5IC0xNC44NjY0LC0zMS40OTQ2NCAtNTIuNDc4LC03NC4xNjgzNiAtODkuNDQ5LC03NC4xNjgzNiAtMjYuNDgyMywwIC02My4zNjQ4LDMxLjg4MjM5IC03MC42MDk2LDMxLjg4MjM5IC03Ljg3MjMsMCAtMjIuMzE2LC0zLjY4MjUzIC0yNi45MjQ3LC0xMy40MzM5OSAtMTkuMjUwNiwtNDAuNzkxODkgMzIuMjE4MiwtMTc2Ljk2NjU2IDgzLjgzNzcsLTE3Ni45NjY1NiAyNy41ODMyLDAgNjAuNDk3NywyMC4yMzI4OSA4OS4zNDc0LDMyLjcxNzg1IC03LjUxMTksLTQ5LjA2ODY4IC04LjU1NTUsLTkwLjQ0MTM3IDEuMzgyNywtMTMyLjY1OTIxIC0yNi4yOTA2LC0xNi42NTkwNyAtNTcuMDg2NiwtMjMuNjgxODcgLTgxLjgwMTEsLTIzLjY4MTg3IC0xMjYuODM3OCwwIC01Ni44ODg0LDI5NC45OCAtMTczLjg0NTMsMzU3LjgyNTA1IHoiCiAgICAgICAgaW5rc2NhcGU6Y29ubmVjdG9yLWN1cnZhdHVyZT0iMCIgLz48cGF0aAogICAgICAgIGlkPSJwYXRoNTQiCiAgICAgICAgc3R5bGU9ImZpbGw6IzAwMDAwMDtmaWxsLW9wYWNpdHk6MTtmaWxsLXJ1bGU6ZXZlbm9kZDtzdHJva2U6bm9uZTtzdHJva2Utd2lkdGg6MC40NDQ2NzQ5MSIKICAgICAgICBkPSJtIDE3ODQuOTk4LDExMDUuODM4MyBjIDk1Ljg1OTksMCAxMzMuNzA1OCwtMTcyLjQ0MjA4IDkwLjY5OTEsLTI2My41NTUwOCAtMzMuMzczMiwtNzAuNjgzNzUgLTkyLjUzNCwtMTIxLjkyMzA2IC0xNjguMzI0MSwtMTIxLjkyMzA2IC0xMzMuODQ5OSwwIC0xMTcuMDc2NCwxODIuNDU5NTkgLTY0Ljg2MjIsMjkzLjA4NTI0IDE0LjQwMTEsMzAuNDc0MiA2My42MDA3LDk2Ljg5OCAxMDIuMDg1NSw5Ni44OTggMTQuMTM5LDAgMjUuODUzMiwtNC41MDUxIDQwLjQwMTcsLTQuNTA1MSB6IG0gLTIuOTY1NCwtMTYuMDk2MSBjIC0xNS4wODkyLDAgLTI4LjM1OTgsLTcuNDU5MiAtMzUuMzU1NSwtMjIuMzA2MiAtMTQuNjk2MSwtMzEuMTE1MSA1OC41NzA5LC02Mi42MDMyIDQ4LjA1MjcsLTg0Ljg3MjEyIC02LjYxODksLTE0LjAxNjM3IC0zMS44MTY3LC0yNy4xMzQwMiAtNDQuNTMwMywtMjcuMTM0MDIgLTYzLjUxODgsMCAtNjIuOTc4Miw4Mi42NDYzNCAtMjUuMTE1OSwxMzYuNTEwNDQgLTIzLjU0MzEsLTE0Ljk5OTQgLTM4Ljk3NjMsLTM3LjkxNCAtNDkuMDAzLC01OS4xNjcyIC0zNy4yMjM0LC03OC44Mzg5OSAtNy42ODM5LC0xODcuMjk1NiA3Ny4yNjQ1LC0xODcuMjk1NiA0Ni45Mzg4LDAgMTAxLjAwNDMsNDIuMTcyNDMgMTIyLjAwNzksODYuNjg5MDYgMjUuODUzMiw1NC43Mzg1IC00MC4yNTQyLDE1Ny41NzU2NCAtOTMuMzIwNCwxNTcuNTc1NjQiCiAgICAgICAgaW5rc2NhcGU6Y29ubmVjdG9yLWN1cnZhdHVyZT0iMCIgLz48cGF0aAogICAgICAgIGlkPSJwYXRoNTYiCiAgICAgICAgc3R5bGU9ImZpbGw6bm9uZTtzdHJva2U6IzAwMDAwMDtzdHJva2Utd2lkdGg6MTMuMjUwOTg1MTU7c3Ryb2tlLWxpbmVjYXA6YnV0dDtzdHJva2UtbGluZWpvaW46bWl0ZXI7c3Ryb2tlLW1pdGVybGltaXQ6My44NjM3MDk5MztzdHJva2UtZGFzaGFycmF5Om5vbmU7c3Ryb2tlLW9wYWNpdHk6MSIKICAgICAgICBkPSJtIDE3ODQuOTk4LDExMDUuODM4MyBjIDk1Ljg1OTksMCAxMzMuNzA1OCwtMTcyLjQ0MjA4IDkwLjY5OTEsLTI2My41NTUwOCAtMzMuMzczMiwtNzAuNjgzNzUgLTkyLjUzNCwtMTIxLjkyMzA2IC0xNjguMzI0MSwtMTIxLjkyMzA2IC0xMzMuODQ5OSwwIC0xMTcuMDc2NCwxODIuNDU5NTkgLTY0Ljg2MjIsMjkzLjA4NTI0IDE0LjQwMTEsMzAuNDc0MiA2My42MDA3LDk2Ljg5OCAxMDIuMDg1NSw5Ni44OTggMTQuMTM5LDAgMjUuODUzMiwtNC41MDUxIDQwLjQwMTcsLTQuNTA1MSB6IgogICAgICAgIGlua3NjYXBlOmNvbm5lY3Rvci1jdXJ2YXR1cmU9IjAiIC8+PHBhdGgKICAgICAgICBpZD0icGF0aDU4IgogICAgICAgIHN0eWxlPSJmaWxsOm5vbmU7c3Ryb2tlOiMwMDAwMDA7c3Ryb2tlLXdpZHRoOjEzLjI1MDk4NTE1O3N0cm9rZS1saW5lY2FwOmJ1dHQ7c3Ryb2tlLWxpbmVqb2luOm1pdGVyO3N0cm9rZS1taXRlcmxpbWl0OjMuODYzNzA5OTM7c3Ryb2tlLWRhc2hhcnJheTpub25lO3N0cm9rZS1vcGFjaXR5OjEiCiAgICAgICAgZD0ibSAxNzgyLjAzMjYsMTA4OS43NDIyIGMgLTE1LjA4OTIsMCAtMjguMzU5OCwtNy40NTkyIC0zNS4zNTU1LC0yMi4zMDYyIC0xNC42OTYxLC0zMS4xMTUxIDU4LjU3MDksLTYyLjYwMzIgNDguMDUyNywtODQuODcyMTIgLTYuNjE4OSwtMTQuMDE2MzcgLTMxLjgxNjcsLTI3LjEzNDAyIC00NC41MzAzLC0yNy4xMzQwMiAtNjMuNTE4OCwwIC02Mi45NzgyLDgyLjY0NjM0IC0yNS4xMTU5LDEzNi41MTA0NCAtMjMuNTQzMSwtMTQuOTk5NCAtMzguOTc2MywtMzcuOTE0IC00OS4wMDMsLTU5LjE2NzIgLTM3LjIyMzQsLTc4LjgzODk5IC03LjY4MzksLTE4Ny4yOTU2IDc3LjI2NDUsLTE4Ny4yOTU2IDQ2LjkzODgsMCAxMDEuMDA0Myw0Mi4xNzI0MyAxMjIuMDA3OSw4Ni42ODkwNiAyNS44NTMyLDU0LjczODUgLTQwLjI1NDIsMTU3LjU3NTY0IC05My4zMjA0LDE1Ny41NzU2NCB6IgogICAgICAgIGlua3NjYXBlOmNvbm5lY3Rvci1jdXJ2YXR1cmU9IjAiIC8+PHBhdGgKICAgICAgICBpZD0icGF0aDYwIgogICAgICAgIHN0eWxlPSJmaWxsOiMwMDAwMDA7ZmlsbC1vcGFjaXR5OjE7ZmlsbC1ydWxlOmV2ZW5vZGQ7c3Ryb2tlOm5vbmU7c3Ryb2tlLXdpZHRoOjAuNDQ0Njc0OTEiCiAgICAgICAgZD0ibSAyMjIwLjY1MTcsODIxLjk0ODEgYyAtMjUuMDUwNCwtNTMuMDU5NDUgLTcxLjcyNywtODIuMTkwNTEgLTEyNC4yODUzLC04Mi4xOTA1MSAtMTY2LjgwMDQsMCAtMTk5Ljg5NSwxNTIuMDk4ODggLTEyNy42MTEsMzA1LjIzOTIxIDE3LjA3MTYsMzYuMTQ1NyA0NS4wODczLDc2LjEzMyA4Ny44NjQ3LDc2LjEzMyAxMzQuMDAwNiwwIDIyNy4zNTM3LC0xNjUuMDI4MzUgMTY0LjAzMTYsLTI5OS4xODE3IHogbSAtMTMzLjA4MzIsMjc5Ljk2NzYgYyAtMTIuMzA0LDAgLTIzLjEwMDcsLTQuNDQ4MyAtMjguOTk4OCwtMTYuOTUxMSAtMTIuOTc1NywtMjcuNDk3NCA1Ny42MjA3LC01Mi4wMTQ3IDU3LjcxOTEsLTgwLjQzMDQgLTcuMzcyNiwtOC43MzEwMSAtMjguMDE1OCwtMTguNTAzNTQgLTM3LjAxMDQsLTE4LjUwMzU0IC01MC44MzgsMCAtODkuMjA4MSw2OC45MjIwNCAtNDUuODA4MiwxMjAuMTQzNDQgLTE3LjYxMjMsLTExLjE4NTUgLTI4LjA2NSwtMjcuOTI3MyAtMzUuNTAzMSwtNDMuNjY4MiAtNDQuMDA2LC05My4yMTcwMyAxOC43MjY0LC0xODcuNDYwOTkgMTEwLjEyOTksLTE4Ny40NjA5OSAzOC4wNDI1LDAgODcuMDc4MywyMS4xNzIyMiAxMDYuODM2OCw2My4wNDEzIDI3Ljk2NjYsNTkuMjU2NTMgLTcxLjY0NSwxNjMuODI5NDkgLTEyNy4zNjUzLDE2My44Mjk0OSIKICAgICAgICBpbmtzY2FwZTpjb25uZWN0b3ItY3VydmF0dXJlPSIwIiAvPjxwYXRoCiAgICAgICAgaWQ9InBhdGg2MiIKICAgICAgICBzdHlsZT0iZmlsbDpub25lO3N0cm9rZTojMDAwMDAwO3N0cm9rZS13aWR0aDoxMy4yNTA5ODUxNTtzdHJva2UtbGluZWNhcDpidXR0O3N0cm9rZS1saW5lam9pbjptaXRlcjtzdHJva2UtbWl0ZXJsaW1pdDozLjg2MzcwOTkzO3N0cm9rZS1kYXNoYXJyYXk6bm9uZTtzdHJva2Utb3BhY2l0eToxIgogICAgICAgIGQ9Im0gMjIyMC42NTE3LDgyMS45NDgxIGMgLTI1LjA1MDQsLTUzLjA1OTQ1IC03MS43MjcsLTgyLjE5MDUxIC0xMjQuMjg1MywtODIuMTkwNTEgLTE2Ni44MDA0LDAgLTE5OS44OTUsMTUyLjA5ODg4IC0xMjcuNjExLDMwNS4yMzkyMSAxNy4wNzE2LDM2LjE0NTcgNDUuMDg3Myw3Ni4xMzMgODcuODY0Nyw3Ni4xMzMgMTM0LjAwMDYsMCAyMjcuMzUzNywtMTY1LjAyODM1IDE2NC4wMzE2LC0yOTkuMTgxNyB6IgogICAgICAgIGlua3NjYXBlOmNvbm5lY3Rvci1jdXJ2YXR1cmU9IjAiIC8+PHBhdGgKICAgICAgICBpZD0icGF0aDY0IgogICAgICAgIHN0eWxlPSJmaWxsOm5vbmU7c3Ryb2tlOiMwMDAwMDA7c3Ryb2tlLXdpZHRoOjEzLjI1MDk4NTE1O3N0cm9rZS1saW5lY2FwOmJ1dHQ7c3Ryb2tlLWxpbmVqb2luOm1pdGVyO3N0cm9rZS1taXRlcmxpbWl0OjMuODYzNzA5OTM7c3Ryb2tlLWRhc2hhcnJheTpub25lO3N0cm9rZS1vcGFjaXR5OjEiCiAgICAgICAgZD0ibSAyMDg3LjU2ODUsMTEwMS45MTU3IGMgLTEyLjMwNCwwIC0yMy4xMDA3LC00LjQ0ODMgLTI4Ljk5ODgsLTE2Ljk1MTEgLTEyLjk3NTcsLTI3LjQ5NzQgNTcuNjIwNywtNTIuMDE0NyA1Ny43MTkxLC04MC40MzA0IC03LjM3MjYsLTguNzMxMDEgLTI4LjAxNTgsLTE4LjUwMzU0IC0zNy4wMTA0LC0xOC41MDM1NCAtNTAuODM4LDAgLTg5LjIwODEsNjguOTIyMDQgLTQ1LjgwODIsMTIwLjE0MzQ0IC0xNy42MTIzLC0xMS4xODU1IC0yOC4wNjUsLTI3LjkyNzMgLTM1LjUwMzEsLTQzLjY2ODIgLTQ0LjAwNiwtOTMuMjE3MDMgMTguNzI2NCwtMTg3LjQ2MDk5IDExMC4xMjk5LC0xODcuNDYwOTkgMzguMDQyNSwwIDg3LjA3ODMsMjEuMTcyMjIgMTA2LjgzNjgsNjMuMDQxMyAyNy45NjY2LDU5LjI1NjUzIC03MS42NDUsMTYzLjgyOTQ5IC0xMjcuMzY1MywxNjMuODI5NDkgeiIKICAgICAgICBpbmtzY2FwZTpjb25uZWN0b3ItY3VydmF0dXJlPSIwIiAvPjxwYXRoCiAgICAgICAgaWQ9InBhdGg2NiIKICAgICAgICBzdHlsZT0iZmlsbDojMDAwMDAwO2ZpbGwtb3BhY2l0eToxO2ZpbGwtcnVsZTpub256ZXJvO3N0cm9rZTpub25lO3N0cm9rZS13aWR0aDowLjQ0NDY3NDkxIgogICAgICAgIGQ9Im0gMjM5My4xNTM1LDExMDIuODI3NCBjIDE0My43NDg4LDAgMjE2Ljc4NjUsLTI2My43ODIyMiAxNTIuNTQ2OCwtMzk5LjgzNjg3IC0xMi4yNzEzLC0yNi4wMTQ2MyAtMzUuMTU5LC01Mi4wMTQ3MyAtNjUuMzM3NCwtNTIuMDE0NzMgLTE2NC4yMjgyLDAgLTEyMi4zMDI5LDMyNi40MzczNyAtMjE0Ljc1NDksNDE5LjE4NTYgOC40NTM5LDguOTc5MiAxNi41NDczLDE4LjM3NzEgMjMuOTY5LDI3LjgzODEgNjIuNDcwMywtNzMuMzEzNSAzMS40MjM2LC0yNjYuMjU0NSAxNjQuODUwOCwtMjY2LjI1NDUgMzAuNzM1NCwwIDUzLjk4MzYsMjYuOTEzNDIgNjYuMzg1OSw1My4xNzk1MiAzMy4xMjc0LDcwLjE4OSAtMjguMTc5NiwxOTIuMDkyNTggLTk1LjI4NjQsMTkyLjA5MjU4IC0wLjY3MTcsMCAtMTAuMzA1MiwtMC4zOTkgLTEwLjA5MjIsLTQuMzAyMiAyLjQ3MzksLTQ0Ljc5NzMgMzcuNzE0OCwtMTYuODYzNSAyLjIyODEsLTkzLjEwMzUzIC0zNi4yNTY3LDcuMjIzOTIgLTc0LjY1OTYsNjUuNDI5MjMgLTU0LjgzNTUsMTA3LjQzMTMzIDUuODMyNSwxMi4zNDM5IDIwLjQzMDIsMTUuNzg0NyAzMC4zMjU4LDE1Ljc4NDciCiAgICAgICAgaW5rc2NhcGU6Y29ubmVjdG9yLWN1cnZhdHVyZT0iMCIgLz48cGF0aAogICAgICAgIGlkPSJwYXRoNjgiCiAgICAgICAgc3R5bGU9ImZpbGw6bm9uZTtzdHJva2U6IzAwMDAwMDtzdHJva2Utd2lkdGg6MTMuMjUwOTg1MTU7c3Ryb2tlLWxpbmVjYXA6YnV0dDtzdHJva2UtbGluZWpvaW46bWl0ZXI7c3Ryb2tlLW1pdGVybGltaXQ6My44NjM3MDk5MztzdHJva2UtZGFzaGFycmF5Om5vbmU7c3Ryb2tlLW9wYWNpdHk6MSIKICAgICAgICBkPSJtIDIzOTMuMTUzNSwxMTAyLjgyNzQgYyAxNDMuNzQ4OCwwIDIxNi43ODY1LC0yNjMuNzgyMjIgMTUyLjU0NjgsLTM5OS44MzY4NyAtMTIuMjcxMywtMjYuMDE0NjMgLTM1LjE1OSwtNTIuMDE0NzMgLTY1LjMzNzQsLTUyLjAxNDczIC0xNjQuMjI4MiwwIC0xMjIuMzAyOSwzMjYuNDM3MzcgLTIxNC43NTQ5LDQxOS4xODU2IDguNDUzOSw4Ljk3OTIgMTYuNTQ3MywxOC4zNzcxIDIzLjk2OSwyNy44MzgxIDYyLjQ3MDMsLTczLjMxMzUgMzEuNDIzNiwtMjY2LjI1NDUgMTY0Ljg1MDgsLTI2Ni4yNTQ1IDMwLjczNTQsMCA1My45ODM2LDI2LjkxMzQyIDY2LjM4NTksNTMuMTc5NTIgMzMuMTI3NCw3MC4xODkgLTI4LjE3OTYsMTkyLjA5MjU4IC05NS4yODY0LDE5Mi4wOTI1OCAtMC42NzE3LDAgLTEwLjMwNTIsLTAuMzk5IC0xMC4wOTIyLC00LjMwMjIgMi40NzM5LC00NC43OTczIDM3LjcxNDgsLTE2Ljg2MzUgMi4yMjgxLC05My4xMDM1MyAtMzYuMjU2Nyw3LjIyMzkyIC03NC42NTk2LDY1LjQyOTIzIC01NC44MzU1LDEwNy40MzEzMyA1LjgzMjUsMTIuMzQzOSAyMC40MzAyLDE1Ljc4NDcgMzAuMzI1OCwxNS43ODQ3IHoiCiAgICAgICAgaW5rc2NhcGU6Y29ubmVjdG9yLWN1cnZhdHVyZT0iMCIgLz48cGF0aAogICAgICAgIGlkPSJwYXRoNzAiCiAgICAgICAgc3R5bGU9ImZpbGw6IzAwMDAwMDtmaWxsLW9wYWNpdHk6MTtmaWxsLXJ1bGU6ZXZlbm9kZDtzdHJva2U6bm9uZTtzdHJva2Utd2lkdGg6MC40NDQ2NzQ5MSIKICAgICAgICBkPSJtIDI3NTAuNTkyMywxMTA1Ljc2MiBjIDEzLjUzMjgsLTEuMjc5OSAzMy44ODEsLTAuMDcgNDUuNDk3LC0zLjYwNjIgMi4xNzksLTAuNjU4NyAwLjUyNDIsLTMuMzg0MSAwLjkwMTEsLTUuNTMyIDMuNTIyNCwtMTkuOTI5NSA5LjA3NjQsLTM4Ljg0NTIgMTMuODc2OCwtNTguMTAzMSAxOC43MjYzLC03NS4wNDkyOSAyOS45OTgyLC0xNTIuMDg3NDkgNTEuNDkzMywtMjI2LjQ3MTY0IDIzLjM3OTIsLTgwLjk4NjgyIDQ3Ljc1NzksLTE3Mi4yNTIzIDE5LjQ0NzIsLTI3My44Nzc1NSAtMi43Njg4LC05Ljk0Mjg5IC02LjQ3MTQsLTIwLjAzODI1IC0xMS4yNTU0LC0zMC4xNzA5MyAtMzIuMDk1MywtNjguMDAyMTggLTExNC42MTksLTEzMi43MzM4NiAtMTg2Ljc4ODMsLTEzMi43MzM4NiAtOC43NjUyLDAgLTE4LjIxODUsMi40NzcyIC0yMi40MTI2LDguMTgxMDkgMzAuNDU2OSwxOS4zNTg1MSA0OS41MTA5LDM5LjIxMzQzIDYzLjEyNTYsNjguMDMyOTkgMTYuMzE4LDM0LjU1NTkxIDE2LjA3MjIsNjYuOTE4NTEgMTMuOTI2LDk2LjcwOTgxIDUuNzY3LC0zLjM1MzIgMjQuMjQ3NSwtMTEuNzMwNjEgMzEuOTQ3OCwtMTEuNzMwNjEgMzEuMjEwNiwwIDU4LjAxNCwzMC4xODM5MSA3MC41MzA5LDU2LjcxNjA2IDIzLjAwMjUsNDguNzI0ODEgMTkuMDcwNSw5OC40NTIxNCAxNS4wODkyLDEzOS45NDY0OSAtMS45OTg3LDIwLjc3MTQ4IC00LjgwMDMsNDEuMjY1NTcgLTguNjY2OCw2MS4xNzA3NyBsIC01Ljg2NTMsMjguODI2MSAtMC43MzczLDMuMTU2OTIgLTAuNzIwOSwzLjE0ODc5IGMgMy40ODk3LDAgMC4zNjA1LC02LjEyMDc3IDAuNDkxNSwtOS4yMDE0OCAyLjE0NjMsLTUwLjIzMzUgMS4yNDUyLC0xMjAuMzY0MDcgLTI1LjczODQsLTE3Ny41MzYwMSAtMTIuNTQ5OCwtMjYuNTY0NjIgLTMzLjA2MTksLTUzLjk1MzM1IC02NC41NTEsLTUzLjk1MzM1IC0xMzguMDE0NiwwIC02OC41OTc3LDM5MS40Mjg2NiAtMTc5LjIwMjcsNDg0LjQ3MzcxIDYuMTI3NCwxMC4xMjE0IDExLjU5OTUsMjAuNTMzMSAxNi4xODY5LDMwLjc0MiA2NS40NTIxLC03OS4wNDgyIDY4Ljg3NjIsLTI5Ni45NTc1NiAxNjUuMjExMiwtMjk2Ljk1NzU2IDIzLjM3OTIsMCA0Ny41NDQ5LDIxLjkxMzU4IDU3LjQ4OTcsNDIuOTcwNjMgNDIuNzkzNyw5MC42NTcxMiAtMjguMjk0MywxOTYuMjY5OTMgLTU5LjI3NTUsMjU1Ljc5ODkzIgogICAgICAgIGlua3NjYXBlOmNvbm5lY3Rvci1jdXJ2YXR1cmU9IjAiIC8+PHBhdGgKICAgICAgICBpZD0icGF0aDcyIgogICAgICAgIHN0eWxlPSJmaWxsOm5vbmU7c3Ryb2tlOiMwMDAwMDA7c3Ryb2tlLXdpZHRoOjEzLjI1MDk4NTE1O3N0cm9rZS1saW5lY2FwOmJ1dHQ7c3Ryb2tlLWxpbmVqb2luOm1pdGVyO3N0cm9rZS1taXRlcmxpbWl0OjMuODYzNzA5OTM7c3Ryb2tlLWRhc2hhcnJheTpub25lO3N0cm9rZS1vcGFjaXR5OjEiCiAgICAgICAgZD0ibSAyNzUwLjU5MjMsMTEwNS43NjIgYyAxMy41MzI4LC0xLjI3OTkgMzMuODgxLC0wLjA3IDQ1LjQ5NywtMy42MDYyIDIuMTc5LC0wLjY1ODcgMC41MjQyLC0zLjM4NDEgMC45MDExLC01LjUzMiAzLjUyMjQsLTE5LjkyOTUgOS4wNzY0LC0zOC44NDUyIDEzLjg3NjgsLTU4LjEwMzEgMTguNzI2MywtNzUuMDQ5MjkgMjkuOTk4MiwtMTUyLjA4NzQ5IDUxLjQ5MzMsLTIyNi40NzE2NCAyMy4zNzkyLC04MC45ODY4MiA0Ny43NTc5LC0xNzIuMjUyMyAxOS40NDcyLC0yNzMuODc3NTUgLTIuNzY4OCwtOS45NDI4OSAtNi40NzE0LC0yMC4wMzgyNSAtMTEuMjU1NCwtMzAuMTcwOTMgLTMyLjA5NTMsLTY4LjAwMjE4IC0xMTQuNjE5LC0xMzIuNzMzODYgLTE4Ni43ODgzLC0xMzIuNzMzODYgLTguNzY1MiwwIC0xOC4yMTg1LDIuNDc3MiAtMjIuNDEyNiw4LjE4MTA5IDMwLjQ1NjksMTkuMzU4NTEgNDkuNTEwOSwzOS4yMTM0MyA2My4xMjU2LDY4LjAzMjk5IDE2LjMxOCwzNC41NTU5MSAxNi4wNzIyLDY2LjkxODUxIDEzLjkyNiw5Ni43MDk4MSA1Ljc2NywtMy4zNTMyIDI0LjI0NzUsLTExLjczMDYxIDMxLjk0NzgsLTExLjczMDYxIDMxLjIxMDYsMCA1OC4wMTQsMzAuMTgzOTEgNzAuNTMwOSw1Ni43MTYwNiAyMy4wMDI1LDQ4LjcyNDgxIDE5LjA3MDUsOTguNDUyMTQgMTUuMDg5MiwxMzkuOTQ2NDkgLTEuOTk4NywyMC43NzE0OCAtNC44MDAzLDQxLjI2NTU3IC04LjY2NjgsNjEuMTcwNzcgbCAtNS44NjUzLDI4LjgyNjEgLTAuNzM3MywzLjE1NjkyIC0wLjcyMDksMy4xNDg3OSBjIDMuNDg5NywwIDAuMzYwNSwtNi4xMjA3NyAwLjQ5MTUsLTkuMjAxNDggMi4xNDYzLC01MC4yMzM1IDEuMjQ1MiwtMTIwLjM2NDA3IC0yNS43Mzg0LC0xNzcuNTM2MDEgLTEyLjU0OTgsLTI2LjU2NDYyIC0zMy4wNjE5LC01My45NTMzNSAtNjQuNTUxLC01My45NTMzNSAtMTM4LjAxNDYsMCAtNjguNTk3NywzOTEuNDI4NjYgLTE3OS4yMDI3LDQ4NC40NzM3MSA2LjEyNzQsMTAuMTIxNCAxMS41OTk1LDIwLjUzMzEgMTYuMTg2OSwzMC43NDIgNjUuNDUyMSwtNzkuMDQ4MiA2OC44NzYyLC0yOTYuOTU3NTYgMTY1LjIxMTIsLTI5Ni45NTc1NiAyMy4zNzkyLDAgNDcuNTQ0OSwyMS45MTM1OCA1Ny40ODk3LDQyLjk3MDYzIDQyLjc5MzcsOTAuNjU3MTIgLTI4LjI5NDMsMTk2LjI2OTkzIC01OS4yNzU1LDI1NS43OTg5MyB6IgogICAgICAgIGlua3NjYXBlOmNvbm5lY3Rvci1jdXJ2YXR1cmU9IjAiIC8+PHBhdGgKICAgICAgICBpZD0icGF0aDc0IgogICAgICAgIHN0eWxlPSJmaWxsOiMwMDAwMDA7ZmlsbC1vcGFjaXR5OjE7ZmlsbC1ydWxlOm5vbnplcm87c3Ryb2tlOm5vbmU7c3Ryb2tlLXdpZHRoOjAuNDQ0Njc0OTEiCiAgICAgICAgZD0ibSAxMDUwLjY0NTUsMTQyNS41MTU3IGMgOTQuOTI5MiwwIDM5LjYwMjEsLTIzNy4yMDc4IDUuODQzOSwtMzA4LjczMzYgLTI4LjkwODYsLTYxLjIzNDEgLTkzLjk4ODgyLC0xNDkuNTUzNSAtMTcxLjExOTA2LC0xNDkuNTUzNSAtOTIuNTQwNTUsMCAtODkuNzg4MSwxMDMuNjQ4MyAtNTIuOTUxNDUsMTgxLjY3NDQgMTkuOTQxOTgsNDIuMjQzOCA1MC41OTA1OCw4OS41OTc4IDkyLjgxNTgsMTI0LjQxMTYgLTEwLjgwODE4LC0zNi4zMzg3IDI1LjcyNzAyLC02MS4xNTk0IDEwLjk1MDc0LC05Mi40NjkyIC0xMC4wOTIyNiwtMjEuMzgxNCAtMzAuOTgxMjIsLTQ0Ljc0MjEgLTQxLjgzNTI5LC02Ny43MzkzIC0xNy41NTQ5MiwtMzcuMTc5MiAtMTAuODQ3NTMsLTEwMy4xNjY1IDMxLjU2MjgxLC0xMDMuMTY2NSAzNy45NjM4NSwwIDcxLjY5NzQ3LDQ3LjAyNzkgODUuNTI2NzUsNzYuMzIyOCAyOC4zMzIsNjAuMDI4NyA5OS4xNzI2LDMxNi4xMTk4IDE5Ljk4NzksMzE2LjExOTggLTkxLjE5NzEsMCAtMjQ4LjM0NDMyLC0yMjIuMjM0NCAtMjgxLjI1MjIyLC0yOTEuOTQzMiAtNTguNzM4MTQsLTEyNC40Mjc4MiAtMTYuMTYwNjksLTI3Ny42OTMwOCAxMTcuNjcyODEsLTI3Ny42OTMwOCA5MC40Mjg3MywwIDE2NC44MDgyMSw4Ni45MzcyOCAyMDAuNzM1NTEsMTYzLjA1MDc4IDIxLjQwMTgsNDUuMzM0MiAzMy4wNTU0LDkwLjQ0MTQgMzcuNjQ0NCwxMzIuOTc0IGwgMTcuNTU0OSwzLjIxMiBjIDMuODc4LC0xMTcuMDgwNSAxMjcuNzM4OSwtMzEwLjk0NzkyIDc1LjAxMTksLTQyMi42MzYxMiAtNjcuNDgwNCwtMTQyLjk1MDg5IC0yNjkuMjUzLC0xNDEuNjcwOTMgLTM4NC40NjE3NCwtMTkyLjQwNDA3IC0yNC4yMTY0Niw1Ni42NDYzMyAtNTcuMDIyOCwxMDkuMzEzMTkgLTEwMy4yMTYwNywxNDkuNTA4MTEgMTAyLjc2NzEzLDM0LjU2ODg5IDM1NS4zMDQwMSw5Mi42MTUyIDQxMC4yMTUwMSwyMDguOTQzMDkgMjMuMDc3Nyw0OC44NzcyNSA3LjM2NiwxMjkuOTE0MzkgLTE5LjI5NjUsMTU3LjM3OTM5IC00LjUzNjYsLTE3LjI3NTYgLTEwLjgxNDgsLTM0Ljg4NTI4IC0xOS4xNDc0LC01Mi41MzM5MyAtNDcuMDE5LC05OS41OTkwNSAtMTQ3LjY4OTA2LC0xNzYuODQwMDYgLTI1MS40NzM2MSwtMTc2Ljg0MDA2IC0xNDQuNDk1OTEsMCAtMjA1Ljc1Mzc5LDEwMy44MzE1OSAtMTM3Ljc1MDgyLDI0Ny45MDgyOSA0MC44MTI5NCw4Ni40NTA2IDI0OS4yMjI1MSwzNzQuMjA4MyAzNTYuOTgxNzMsMzc0LjIwODMiCiAgICAgICAgaW5rc2NhcGU6Y29ubmVjdG9yLWN1cnZhdHVyZT0iMCIgLz48cGF0aAogICAgICAgIGlkPSJwYXRoNzYiCiAgICAgICAgc3R5bGU9ImZpbGw6bm9uZTtzdHJva2U6IzAwMDAwMDtzdHJva2Utd2lkdGg6MTU5LjAwODU0NDkyO3N0cm9rZS1saW5lY2FwOmJ1dHQ7c3Ryb2tlLWxpbmVqb2luOnJvdW5kO3N0cm9rZS1taXRlcmxpbWl0OjMuODYzNjg5OTtzdHJva2UtZGFzaGFycmF5Om5vbmU7c3Ryb2tlLW9wYWNpdHk6MSIKICAgICAgICBkPSJtIDEwNTAuNjQ1NSwxNDI1LjUxNTcgYyA5NC45MjkyLDAgMzkuNjAyMSwtMjM3LjIwNzggNS44NDM5LC0zMDguNzMzNiAtMjguOTA4NiwtNjEuMjM0MSAtOTMuOTg4ODIsLTE0OS41NTM1IC0xNzEuMTE5MDYsLTE0OS41NTM1IC05Mi41NDA1NSwwIC04OS43ODgxLDEwMy42NDgzIC01Mi45NTE0NSwxODEuNjc0NCAxOS45NDE5OCw0Mi4yNDM4IDUwLjU5MDU4LDg5LjU5NzggOTIuODE1OCwxMjQuNDExNiAtMTAuODA4MTgsLTM2LjMzODcgMjUuNzI3MDIsLTYxLjE1OTQgMTAuOTUwNzQsLTkyLjQ2OTIgLTEwLjA5MjI2LC0yMS4zODE0IC0zMC45ODEyMiwtNDQuNzQyMSAtNDEuODM1MjksLTY3LjczOTMgLTE3LjU1NDkyLC0zNy4xNzkyIC0xMC44NDc1MywtMTAzLjE2NjUgMzEuNTYyODEsLTEwMy4xNjY1IDM3Ljk2Mzg1LDAgNzEuNjk3NDcsNDcuMDI3OSA4NS41MjY3NSw3Ni4zMjI4IDI4LjMzMiw2MC4wMjg3IDk5LjE3MjYsMzE2LjExOTggMTkuOTg3OSwzMTYuMTE5OCAtOTEuMTk3MSwwIC0yNDguMzQ0MzIsLTIyMi4yMzQ0IC0yODEuMjUyMjIsLTI5MS45NDMyIC01OC43MzgxNCwtMTI0LjQyNzgyIC0xNi4xNjA2OSwtMjc3LjY5MzA4IDExNy42NzI4MSwtMjc3LjY5MzA4IDkwLjQyODczLDAgMTY0LjgwODIxLDg2LjkzNzI4IDIwMC43MzU1MSwxNjMuMDUwNzggMjEuNDAxOCw0NS4zMzQyIDMzLjA1NTQsOTAuNDQxNCAzNy42NDQ0LDEzMi45NzQgbCAxNy41NTQ5LDMuMjEyIGMgMy44NzgsLTExNy4wODA1IDEyNy43Mzg5LC0zMTAuOTQ3OTIgNzUuMDExOSwtNDIyLjYzNjEyIC02Ny40ODA0LC0xNDIuOTUwODkgLTI2OS4yNTMsLTE0MS42NzA5MyAtMzg0LjQ2MTc0LC0xOTIuNDA0MDcgLTI0LjIxNjQ2LDU2LjY0NjMzIC01Ny4wMjI4LDEwOS4zMTMxOSAtMTAzLjIxNjA3LDE0OS41MDgxMSAxMDIuNzY3MTMsMzQuNTY4ODkgMzU1LjMwNDAxLDkyLjYxNTIgNDEwLjIxNTAxLDIwOC45NDMwOSAyMy4wNzc3LDQ4Ljg3NzI1IDcuMzY2LDEyOS45MTQzOSAtMTkuMjk2NSwxNTcuMzc5MzkgLTQuNTM2NiwtMTcuMjc1NiAtMTAuODE0OCwtMzQuODg1MjggLTE5LjE0NzQsLTUyLjUzMzkzIC00Ny4wMTksLTk5LjU5OTA1IC0xNDcuNjg5MDYsLTE3Ni44NDAwNiAtMjUxLjQ3MzYxLC0xNzYuODQwMDYgLTE0NC40OTU5MSwwIC0yMDUuNzUzNzksMTAzLjgzMTU5IC0xMzcuNzUwODIsMjQ3LjkwODI5IDQwLjgxMjk0LDg2LjQ1MDYgMjQ5LjIyMjUxLDM3NC4yMDgzIDM1Ni45ODE3MywzNzQuMjA4MyB6IgogICAgICAgIGlua3NjYXBlOmNvbm5lY3Rvci1jdXJ2YXR1cmU9IjAiIC8+PHBhdGgKICAgICAgICBpZD0icGF0aDc4IgogICAgICAgIHN0eWxlPSJmaWxsOiMwMDAwMDA7ZmlsbC1vcGFjaXR5OjE7ZmlsbC1ydWxlOm5vbnplcm87c3Ryb2tlOm5vbmU7c3Ryb2tlLXdpZHRoOjAuNDQ0Njc0OTEiCiAgICAgICAgZD0ibSAxMjk3LjUxMiwxMDgyLjIwMDMgYyA1Ljc0MDgsLTE0LjEwNTYgMjIuMzM1NiwtOTMuOTc2MzMgMzQuOTQyNywtOTMuOTc2MzMgMjcuMjE3OSwwIDc2LjQwNzgsNzQuMDU5NzMgODkuNjAzLDkzLjI4NjgzIDI0LjIwNSwtMTUuODQ5NSAxMC43NzcxLC00OS4xMjU1IDU1LjYzMzUsLTQ5LjEyNTUgMjAuMzA3MywwIDMwLjUyMDgsNDMuNzQ0NSA1MS42NTM4LDQ0LjQ1NSAwLjc0ODgsLTE3LjY4MTEgMS44ODA5LC0zMy42ODE1IC03Ljc1NzUsLTU0LjEwNTkgLTE0Ljg2NjQsLTMxLjQ5NDY0IC01Mi40NzgsLTc0LjE2ODM2IC04OS40NDksLTc0LjE2ODM2IC0yNi40ODIzLDAgLTYzLjM2NDgsMzEuODgyMzkgLTcwLjYwOTYsMzEuODgyMzkgLTcuODcyMywwIC0yMi4zMTYsLTMuNjgyNTMgLTI2LjkyNDcsLTEzLjQzMzk5IC0xOS4yNTA2LC00MC43OTE4OSAzMi4yMTgyLC0xNzYuOTY2NTYgODMuODM3NywtMTc2Ljk2NjU2IDI3LjU4MzIsMCA2MC40OTc3LDIwLjIzMjg5IDg5LjM0NzQsMzIuNzE3ODUgLTcuNTExOSwtNDkuMDY4NjggLTguNTU1NSwtOTAuNDQxMzcgMS4zODI3LC0xMzIuNjU5MjEgLTI2LjI5MDYsLTE2LjY1OTA3IC01Ny4wODY2LC0yMy42ODE4NyAtODEuODAxMSwtMjMuNjgxODcgLTEyNi44Mzc4LDAgLTU2Ljg4ODQsMjk0Ljk4IC0xNzMuODQ1MywzNTcuODI1MDUgbCA0My45ODY0LDU3Ljk1MDYiCiAgICAgICAgaW5rc2NhcGU6Y29ubmVjdG9yLWN1cnZhdHVyZT0iMCIgLz48cGF0aAogICAgICAgIGlkPSJwYXRoODAiCiAgICAgICAgc3R5bGU9ImZpbGw6bm9uZTtzdHJva2U6IzAwMDAwMDtzdHJva2Utd2lkdGg6MTU5LjAwODU0NDkyO3N0cm9rZS1saW5lY2FwOmJ1dHQ7c3Ryb2tlLWxpbmVqb2luOnJvdW5kO3N0cm9rZS1taXRlcmxpbWl0OjMuODYzNjg5OTtzdHJva2UtZGFzaGFycmF5Om5vbmU7c3Ryb2tlLW9wYWNpdHk6MSIKICAgICAgICBkPSJtIDEyOTcuNTEyLDEwODIuMjAwMyBjIDUuNzQwOCwtMTQuMTA1NiAyMi4zMzU2LC05My45NzYzMyAzNC45NDI3LC05My45NzYzMyAyNy4yMTc5LDAgNzYuNDA3OCw3NC4wNTk3MyA4OS42MDMsOTMuMjg2ODMgMjQuMjA1LC0xNS44NDk1IDEwLjc3NzEsLTQ5LjEyNTUgNTUuNjMzNSwtNDkuMTI1NSAyMC4zMDczLDAgMzAuNTIwOCw0My43NDQ1IDUxLjY1MzgsNDQuNDU1IDAuNzQ4OCwtMTcuNjgxMSAxLjg4MDksLTMzLjY4MTUgLTcuNzU3NSwtNTQuMTA1OSAtMTQuODY2NCwtMzEuNDk0NjQgLTUyLjQ3OCwtNzQuMTY4MzYgLTg5LjQ0OSwtNzQuMTY4MzYgLTI2LjQ4MjMsMCAtNjMuMzY0OCwzMS44ODIzOSAtNzAuNjA5NiwzMS44ODIzOSAtNy44NzIzLDAgLTIyLjMxNiwtMy42ODI1MyAtMjYuOTI0NywtMTMuNDMzOTkgLTE5LjI1MDYsLTQwLjc5MTg5IDMyLjIxODIsLTE3Ni45NjY1NiA4My44Mzc3LC0xNzYuOTY2NTYgMjcuNTgzMiwwIDYwLjQ5NzcsMjAuMjMyODkgODkuMzQ3NCwzMi43MTc4NSAtNy41MTE5LC00OS4wNjg2OCAtOC41NTU1LC05MC40NDEzNyAxLjM4MjcsLTEzMi42NTkyMSAtMjYuMjkwNiwtMTYuNjU5MDcgLTU3LjA4NjYsLTIzLjY4MTg3IC04MS44MDExLC0yMy42ODE4NyAtMTI2LjgzNzgsMCAtNTYuODg4NCwyOTQuOTggLTE3My44NDUzLDM1Ny44MjUwNSB6IgogICAgICAgIGlua3NjYXBlOmNvbm5lY3Rvci1jdXJ2YXR1cmU9IjAiIC8+PHBhdGgKICAgICAgICBpZD0icGF0aDgyIgogICAgICAgIHN0eWxlPSJmaWxsOiMwMDAwMDA7ZmlsbC1vcGFjaXR5OjE7ZmlsbC1ydWxlOmV2ZW5vZGQ7c3Ryb2tlOm5vbmU7c3Ryb2tlLXdpZHRoOjAuNDQ0Njc0OTEiCiAgICAgICAgZD0ibSAxNzg0Ljk5OCwxMTA1LjgzODMgYyA5NS44NTk5LDAgMTMzLjcwNTgsLTE3Mi40NDIwOCA5MC42OTkxLC0yNjMuNTU1MDggLTMzLjM3MzIsLTcwLjY4Mzc1IC05Mi41MzQsLTEyMS45MjMwNiAtMTY4LjMyNDEsLTEyMS45MjMwNiAtMTMzLjg0OTksMCAtMTE3LjA3NjQsMTgyLjQ1OTU5IC02NC44NjIyLDI5My4wODUyNCAxNC40MDExLDMwLjQ3NDIgNjMuNjAwNyw5Ni44OTggMTAyLjA4NTUsOTYuODk4IDE0LjEzOSwwIDI1Ljg1MzIsLTQuNTA1MSA0MC40MDE3LC00LjUwNTEgeiBtIC0yLjk2NTQsLTE2LjA5NjEgYyAtMTUuMDg5MiwwIC0yOC4zNTk4LC03LjQ1OTIgLTM1LjM1NTUsLTIyLjMwNjIgLTE0LjY5NjEsLTMxLjExNTEgNTguNTcwOSwtNjIuNjAzMiA0OC4wNTI3LC04NC44NzIxMiAtNi42MTg5LC0xNC4wMTYzNyAtMzEuODE2NywtMjcuMTM0MDIgLTQ0LjUzMDMsLTI3LjEzNDAyIC02My41MTg4LDAgLTYyLjk3ODIsODIuNjQ2MzQgLTI1LjExNTksMTM2LjUxMDQ0IC0yMy41NDMxLC0xNC45OTk0IC0zOC45NzYzLC0zNy45MTQgLTQ5LjAwMywtNTkuMTY3MiAtMzcuMjIzNCwtNzguODM4OTkgLTcuNjgzOSwtMTg3LjI5NTYgNzcuMjY0NSwtMTg3LjI5NTYgNDYuOTM4OCwwIDEwMS4wMDQzLDQyLjE3MjQzIDEyMi4wMDc5LDg2LjY4OTA2IDI1Ljg1MzIsNTQuNzM4NSAtNDAuMjU0MiwxNTcuNTc1NjQgLTkzLjMyMDQsMTU3LjU3NTY0IgogICAgICAgIGlua3NjYXBlOmNvbm5lY3Rvci1jdXJ2YXR1cmU9IjAiIC8+PHBhdGgKICAgICAgICBpZD0icGF0aDg0IgogICAgICAgIHN0eWxlPSJmaWxsOm5vbmU7c3Ryb2tlOiMwMDAwMDA7c3Ryb2tlLXdpZHRoOjE1OS4wMDg1NDQ5MjtzdHJva2UtbGluZWNhcDpidXR0O3N0cm9rZS1saW5lam9pbjpyb3VuZDtzdHJva2UtbWl0ZXJsaW1pdDozLjg2MzY4OTk7c3Ryb2tlLWRhc2hhcnJheTpub25lO3N0cm9rZS1vcGFjaXR5OjEiCiAgICAgICAgZD0ibSAxNzg0Ljk5OCwxMTA1LjgzODMgYyA5NS44NTk5LDAgMTMzLjcwNTgsLTE3Mi40NDIwOCA5MC42OTkxLC0yNjMuNTU1MDggLTMzLjM3MzIsLTcwLjY4Mzc1IC05Mi41MzQsLTEyMS45MjMwNiAtMTY4LjMyNDEsLTEyMS45MjMwNiAtMTMzLjg0OTksMCAtMTE3LjA3NjQsMTgyLjQ1OTU5IC02NC44NjIyLDI5My4wODUyNCAxNC40MDExLDMwLjQ3NDIgNjMuNjAwNyw5Ni44OTggMTAyLjA4NTUsOTYuODk4IDE0LjEzOSwwIDI1Ljg1MzIsLTQuNTA1MSA0MC40MDE3LC00LjUwNTEgeiIKICAgICAgICBpbmtzY2FwZTpjb25uZWN0b3ItY3VydmF0dXJlPSIwIiAvPjxwYXRoCiAgICAgICAgaWQ9InBhdGg4NiIKICAgICAgICBzdHlsZT0iZmlsbDpub25lO3N0cm9rZTojMDAwMDAwO3N0cm9rZS13aWR0aDoxNTkuMDA4NTQ0OTI7c3Ryb2tlLWxpbmVjYXA6YnV0dDtzdHJva2UtbGluZWpvaW46cm91bmQ7c3Ryb2tlLW1pdGVybGltaXQ6My44NjM2ODk5O3N0cm9rZS1kYXNoYXJyYXk6bm9uZTtzdHJva2Utb3BhY2l0eToxIgogICAgICAgIGQ9Im0gMTc4Mi4wMzI2LDEwODkuNzQyMiBjIC0xNS4wODkyLDAgLTI4LjM1OTgsLTcuNDU5MiAtMzUuMzU1NSwtMjIuMzA2MiAtMTQuNjk2MSwtMzEuMTE1MSA1OC41NzA5LC02Mi42MDMyIDQ4LjA1MjcsLTg0Ljg3MjEyIC02LjYxODksLTE0LjAxNjM3IC0zMS44MTY3LC0yNy4xMzQwMiAtNDQuNTMwMywtMjcuMTM0MDIgLTYzLjUxODgsMCAtNjIuOTc4Miw4Mi42NDYzNCAtMjUuMTE1OSwxMzYuNTEwNDQgLTIzLjU0MzEsLTE0Ljk5OTQgLTM4Ljk3NjMsLTM3LjkxNCAtNDkuMDAzLC01OS4xNjcyIC0zNy4yMjM0LC03OC44Mzg5OSAtNy42ODM5LC0xODcuMjk1NiA3Ny4yNjQ1LC0xODcuMjk1NiA0Ni45Mzg4LDAgMTAxLjAwNDMsNDIuMTcyNDMgMTIyLjAwNzksODYuNjg5MDYgMjUuODUzMiw1NC43Mzg1IC00MC4yNTQyLDE1Ny41NzU2NCAtOTMuMzIwNCwxNTcuNTc1NjQgeiIKICAgICAgICBpbmtzY2FwZTpjb25uZWN0b3ItY3VydmF0dXJlPSIwIiAvPjxwYXRoCiAgICAgICAgaWQ9InBhdGg4OCIKICAgICAgICBzdHlsZT0iZmlsbDojMDAwMDAwO2ZpbGwtb3BhY2l0eToxO2ZpbGwtcnVsZTpldmVub2RkO3N0cm9rZTpub25lO3N0cm9rZS13aWR0aDowLjQ0NDY3NDkxIgogICAgICAgIGQ9Im0gMjIyMC42NTE3LDgyMS45NDgxIGMgLTI1LjA1MDQsLTUzLjA1OTQ1IC03MS43MjcsLTgyLjE5MDUxIC0xMjQuMjg1MywtODIuMTkwNTEgLTE2Ni44MDA0LDAgLTE5OS44OTUsMTUyLjA5ODg4IC0xMjcuNjExLDMwNS4yMzkyMSAxNy4wNzE2LDM2LjE0NTcgNDUuMDg3Myw3Ni4xMzMgODcuODY0Nyw3Ni4xMzMgMTM0LjAwMDYsMCAyMjcuMzUzNywtMTY1LjAyODM1IDE2NC4wMzE2LC0yOTkuMTgxNyB6IG0gLTEzMy4wODMyLDI3OS45Njc2IGMgLTEyLjMwNCwwIC0yMy4xMDA3LC00LjQ0ODMgLTI4Ljk5ODgsLTE2Ljk1MTEgLTEyLjk3NTcsLTI3LjQ5NzQgNTcuNjIwNywtNTIuMDE0NyA1Ny43MTkxLC04MC40MzA0IC03LjM3MjYsLTguNzMxMDEgLTI4LjAxNTgsLTE4LjUwMzU0IC0zNy4wMTA0LC0xOC41MDM1NCAtNTAuODM4LDAgLTg5LjIwODEsNjguOTIyMDQgLTQ1LjgwODIsMTIwLjE0MzQ0IC0xNy42MTIzLC0xMS4xODU1IC0yOC4wNjUsLTI3LjkyNzMgLTM1LjUwMzEsLTQzLjY2ODIgLTQ0LjAwNiwtOTMuMjE3MDMgMTguNzI2NCwtMTg3LjQ2MDk5IDExMC4xMjk5LC0xODcuNDYwOTkgMzguMDQyNSwwIDg3LjA3ODMsMjEuMTcyMjIgMTA2LjgzNjgsNjMuMDQxMyAyNy45NjY2LDU5LjI1NjUzIC03MS42NDUsMTYzLjgyOTQ5IC0xMjcuMzY1MywxNjMuODI5NDkiCiAgICAgICAgaW5rc2NhcGU6Y29ubmVjdG9yLWN1cnZhdHVyZT0iMCIgLz48cGF0aAogICAgICAgIGlkPSJwYXRoOTAiCiAgICAgICAgc3R5bGU9ImZpbGw6bm9uZTtzdHJva2U6IzAwMDAwMDtzdHJva2Utd2lkdGg6MTU5LjAwODU0NDkyO3N0cm9rZS1saW5lY2FwOmJ1dHQ7c3Ryb2tlLWxpbmVqb2luOnJvdW5kO3N0cm9rZS1taXRlcmxpbWl0OjMuODYzNjg5OTtzdHJva2UtZGFzaGFycmF5Om5vbmU7c3Ryb2tlLW9wYWNpdHk6MSIKICAgICAgICBkPSJtIDIyMjAuNjUxNyw4MjEuOTQ4MSBjIC0yNS4wNTA0LC01My4wNTk0NSAtNzEuNzI3LC04Mi4xOTA1MSAtMTI0LjI4NTMsLTgyLjE5MDUxIC0xNjYuODAwNCwwIC0xOTkuODk1LDE1Mi4wOTg4OCAtMTI3LjYxMSwzMDUuMjM5MjEgMTcuMDcxNiwzNi4xNDU3IDQ1LjA4NzMsNzYuMTMzIDg3Ljg2NDcsNzYuMTMzIDEzNC4wMDA2LDAgMjI3LjM1MzcsLTE2NS4wMjgzNSAxNjQuMDMxNiwtMjk5LjE4MTcgeiIKICAgICAgICBpbmtzY2FwZTpjb25uZWN0b3ItY3VydmF0dXJlPSIwIiAvPjxwYXRoCiAgICAgICAgaWQ9InBhdGg5MiIKICAgICAgICBzdHlsZT0iZmlsbDpub25lO3N0cm9rZTojMDAwMDAwO3N0cm9rZS13aWR0aDoxNTkuMDA4NTQ0OTI7c3Ryb2tlLWxpbmVjYXA6YnV0dDtzdHJva2UtbGluZWpvaW46cm91bmQ7c3Ryb2tlLW1pdGVybGltaXQ6My44NjM2ODk5O3N0cm9rZS1kYXNoYXJyYXk6bm9uZTtzdHJva2Utb3BhY2l0eToxIgogICAgICAgIGQ9Im0gMjA4Ny41Njg1LDExMDEuOTE1NyBjIC0xMi4zMDQsMCAtMjMuMTAwNywtNC40NDgzIC0yOC45OTg4LC0xNi45NTExIC0xMi45NzU3LC0yNy40OTc0IDU3LjYyMDcsLTUyLjAxNDcgNTcuNzE5MSwtODAuNDMwNCAtNy4zNzI2LC04LjczMTAxIC0yOC4wMTU4LC0xOC41MDM1NCAtMzcuMDEwNCwtMTguNTAzNTQgLTUwLjgzOCwwIC04OS4yMDgxLDY4LjkyMjA0IC00NS44MDgyLDEyMC4xNDM0NCAtMTcuNjEyMywtMTEuMTg1NSAtMjguMDY1LC0yNy45MjczIC0zNS41MDMxLC00My42NjgyIC00NC4wMDYsLTkzLjIxNzAzIDE4LjcyNjQsLTE4Ny40NjA5OSAxMTAuMTI5OSwtMTg3LjQ2MDk5IDM4LjA0MjUsMCA4Ny4wNzgzLDIxLjE3MjIyIDEwNi44MzY4LDYzLjA0MTMgMjcuOTY2Niw1OS4yNTY1MyAtNzEuNjQ1LDE2My44Mjk0OSAtMTI3LjM2NTMsMTYzLjgyOTQ5IHoiCiAgICAgICAgaW5rc2NhcGU6Y29ubmVjdG9yLWN1cnZhdHVyZT0iMCIgLz48cGF0aAogICAgICAgIGlkPSJwYXRoOTQiCiAgICAgICAgc3R5bGU9ImZpbGw6IzAwMDAwMDtmaWxsLW9wYWNpdHk6MTtmaWxsLXJ1bGU6bm9uemVybztzdHJva2U6bm9uZTtzdHJva2Utd2lkdGg6MC40NDQ2NzQ5MSIKICAgICAgICBkPSJtIDIzOTMuMTUzNSwxMTAyLjgyNzQgYyAxNDMuNzQ4OCwwIDIxNi43ODY1LC0yNjMuNzgyMjIgMTUyLjU0NjgsLTM5OS44MzY4NyAtMTIuMjcxMywtMjYuMDE0NjMgLTM1LjE1OSwtNTIuMDE0NzMgLTY1LjMzNzQsLTUyLjAxNDczIC0xNjQuMjI4MiwwIC0xMjIuMzAyOSwzMjYuNDM3MzcgLTIxNC43NTQ5LDQxOS4xODU2IDguNDUzOSw4Ljk3OTIgMTYuNTQ3MywxOC4zNzcxIDIzLjk2OSwyNy44MzgxIDYyLjQ3MDMsLTczLjMxMzUgMzEuNDIzNiwtMjY2LjI1NDUgMTY0Ljg1MDgsLTI2Ni4yNTQ1IDMwLjczNTQsMCA1My45ODM2LDI2LjkxMzQyIDY2LjM4NTksNTMuMTc5NTIgMzMuMTI3NCw3MC4xODkgLTI4LjE3OTYsMTkyLjA5MjU4IC05NS4yODY0LDE5Mi4wOTI1OCAtMC42NzE3LDAgLTEwLjMwNTIsLTAuMzk5IC0xMC4wOTIyLC00LjMwMjIgMi40NzM5LC00NC43OTczIDM3LjcxNDgsLTE2Ljg2MzUgMi4yMjgxLC05My4xMDM1MyAtMzYuMjU2Nyw3LjIyMzkyIC03NC42NTk2LDY1LjQyOTIzIC01NC44MzU1LDEwNy40MzEzMyA1LjgzMjUsMTIuMzQzOSAyMC40MzAyLDE1Ljc4NDcgMzAuMzI1OCwxNS43ODQ3IgogICAgICAgIGlua3NjYXBlOmNvbm5lY3Rvci1jdXJ2YXR1cmU9IjAiIC8+PHBhdGgKICAgICAgICBpZD0icGF0aDk2IgogICAgICAgIHN0eWxlPSJmaWxsOm5vbmU7c3Ryb2tlOiMwMDAwMDA7c3Ryb2tlLXdpZHRoOjE1OS4wMDg1NDQ5MjtzdHJva2UtbGluZWNhcDpidXR0O3N0cm9rZS1saW5lam9pbjpyb3VuZDtzdHJva2UtbWl0ZXJsaW1pdDozLjg2MzY4OTk7c3Ryb2tlLWRhc2hhcnJheTpub25lO3N0cm9rZS1vcGFjaXR5OjEiCiAgICAgICAgZD0ibSAyMzkzLjE1MzUsMTEwMi44Mjc0IGMgMTQzLjc0ODgsMCAyMTYuNzg2NSwtMjYzLjc4MjIyIDE1Mi41NDY4LC0zOTkuODM2ODcgLTEyLjI3MTMsLTI2LjAxNDYzIC0zNS4xNTksLTUyLjAxNDczIC02NS4zMzc0LC01Mi4wMTQ3MyAtMTY0LjIyODIsMCAtMTIyLjMwMjksMzI2LjQzNzM3IC0yMTQuNzU0OSw0MTkuMTg1NiA4LjQ1MzksOC45NzkyIDE2LjU0NzMsMTguMzc3MSAyMy45NjksMjcuODM4MSA2Mi40NzAzLC03My4zMTM1IDMxLjQyMzYsLTI2Ni4yNTQ1IDE2NC44NTA4LC0yNjYuMjU0NSAzMC43MzU0LDAgNTMuOTgzNiwyNi45MTM0MiA2Ni4zODU5LDUzLjE3OTUyIDMzLjEyNzQsNzAuMTg5IC0yOC4xNzk2LDE5Mi4wOTI1OCAtOTUuMjg2NCwxOTIuMDkyNTggLTAuNjcxNywwIC0xMC4zMDUyLC0wLjM5OSAtMTAuMDkyMiwtNC4zMDIyIDIuNDczOSwtNDQuNzk3MyAzNy43MTQ4LC0xNi44NjM1IDIuMjI4MSwtOTMuMTAzNTMgLTM2LjI1NjcsNy4yMjM5MiAtNzQuNjU5Niw2NS40MjkyMyAtNTQuODM1NSwxMDcuNDMxMzMgNS44MzI1LDEyLjM0MzkgMjAuNDMwMiwxNS43ODQ3IDMwLjMyNTgsMTUuNzg0NyB6IgogICAgICAgIGlua3NjYXBlOmNvbm5lY3Rvci1jdXJ2YXR1cmU9IjAiIC8+PHBhdGgKICAgICAgICBpZD0icGF0aDk4IgogICAgICAgIHN0eWxlPSJmaWxsOiMwMDAwMDA7ZmlsbC1vcGFjaXR5OjE7ZmlsbC1ydWxlOmV2ZW5vZGQ7c3Ryb2tlOm5vbmU7c3Ryb2tlLXdpZHRoOjAuNDQ0Njc0OTEiCiAgICAgICAgZD0ibSAyNzUwLjU5MjMsMTEwNS43NjIgYyAxMy41MzI4LC0xLjI3OTkgMzMuODgxLC0wLjA3IDQ1LjQ5NywtMy42MDYyIDIuMTc5LC0wLjY1ODcgMC41MjQyLC0zLjM4NDEgMC45MDExLC01LjUzMiAzLjUyMjQsLTE5LjkyOTUgOS4wNzY0LC0zOC44NDUyIDEzLjg3NjgsLTU4LjEwMzEgMTguNzI2MywtNzUuMDQ5MjkgMjkuOTk4MiwtMTUyLjA4NzQ5IDUxLjQ5MzMsLTIyNi40NzE2NCAyMy4zNzkyLC04MC45ODY4MiA0Ny43NTc5LC0xNzIuMjUyMyAxOS40NDcyLC0yNzMuODc3NTUgLTIuNzY4OCwtOS45NDI4OSAtNi40NzE0LC0yMC4wMzgyNSAtMTEuMjU1NCwtMzAuMTcwOTMgLTMyLjA5NTMsLTY4LjAwMjE4IC0xMTQuNjE5LC0xMzIuNzMzODYgLTE4Ni43ODgzLC0xMzIuNzMzODYgLTguNzY1MiwwIC0xOC4yMTg1LDIuNDc3MiAtMjIuNDEyNiw4LjE4MTA5IDMwLjQ1NjksMTkuMzU4NTEgNDkuNTEwOSwzOS4yMTM0MyA2My4xMjU2LDY4LjAzMjk5IDE2LjMxOCwzNC41NTU5MSAxNi4wNzIyLDY2LjkxODUxIDEzLjkyNiw5Ni43MDk4MSA1Ljc2NywtMy4zNTMyIDI0LjI0NzUsLTExLjczMDYxIDMxLjk0NzgsLTExLjczMDYxIDMxLjIxMDYsMCA1OC4wMTQsMzAuMTgzOTEgNzAuNTMwOSw1Ni43MTYwNiAyMy4wMDI1LDQ4LjcyNDgxIDE5LjA3MDUsOTguNDUyMTQgMTUuMDg5MiwxMzkuOTQ2NDkgLTEuOTk4NywyMC43NzE0OCAtNC44MDAzLDQxLjI2NTU3IC04LjY2NjgsNjEuMTcwNzcgbCAtNS44NjUzLDI4LjgyNjEgLTAuNzM3MywzLjE1NjkyIC0wLjcyMDksMy4xNDg3OSBjIDMuNDg5NywwIDAuMzYwNSwtNi4xMjA3NyAwLjQ5MTUsLTkuMjAxNDggMi4xNDYzLC01MC4yMzM1IDEuMjQ1MiwtMTIwLjM2NDA3IC0yNS43Mzg0LC0xNzcuNTM2MDEgLTEyLjU0OTgsLTI2LjU2NDYyIC0zMy4wNjE5LC01My45NTMzNSAtNjQuNTUxLC01My45NTMzNSAtMTM4LjAxNDYsMCAtNjguNTk3NywzOTEuNDI4NjYgLTE3OS4yMDI3LDQ4NC40NzM3MSA2LjEyNzQsMTAuMTIxNCAxMS41OTk1LDIwLjUzMzEgMTYuMTg2OSwzMC43NDIgNjUuNDUyMSwtNzkuMDQ4MiA2OC44NzYyLC0yOTYuOTU3NTYgMTY1LjIxMTIsLTI5Ni45NTc1NiAyMy4zNzkyLDAgNDcuNTQ0OSwyMS45MTM1OCA1Ny40ODk3LDQyLjk3MDYzIDQyLjc5MzcsOTAuNjU3MTIgLTI4LjI5NDMsMTk2LjI2OTkzIC01OS4yNzU1LDI1NS43OTg5MyIKICAgICAgICBpbmtzY2FwZTpjb25uZWN0b3ItY3VydmF0dXJlPSIwIiAvPjxwYXRoCiAgICAgICAgaWQ9InBhdGgxMDAiCiAgICAgICAgc3R5bGU9ImZpbGw6bm9uZTtzdHJva2U6IzAwMDAwMDtzdHJva2Utd2lkdGg6MTU5LjAwODU0NDkyO3N0cm9rZS1saW5lY2FwOmJ1dHQ7c3Ryb2tlLWxpbmVqb2luOnJvdW5kO3N0cm9rZS1taXRlcmxpbWl0OjMuODYzNjg5OTtzdHJva2UtZGFzaGFycmF5Om5vbmU7c3Ryb2tlLW9wYWNpdHk6MSIKICAgICAgICBkPSJtIDI3NTAuNTkyMywxMTA1Ljc2MiBjIDEzLjUzMjgsLTEuMjc5OSAzMy44ODEsLTAuMDcgNDUuNDk3LC0zLjYwNjIgMi4xNzksLTAuNjU4NyAwLjUyNDIsLTMuMzg0MSAwLjkwMTEsLTUuNTMyIDMuNTIyNCwtMTkuOTI5NSA5LjA3NjQsLTM4Ljg0NTIgMTMuODc2OCwtNTguMTAzMSAxOC43MjYzLC03NS4wNDkyOSAyOS45OTgyLC0xNTIuMDg3NDkgNTEuNDkzMywtMjI2LjQ3MTY0IDIzLjM3OTIsLTgwLjk4NjgyIDQ3Ljc1NzksLTE3Mi4yNTIzIDE5LjQ0NzIsLTI3My44Nzc1NSAtMi43Njg4LC05Ljk0Mjg5IC02LjQ3MTQsLTIwLjAzODI1IC0xMS4yNTU0LC0zMC4xNzA5MyAtMzIuMDk1MywtNjguMDAyMTggLTExNC42MTksLTEzMi43MzM4NiAtMTg2Ljc4ODMsLTEzMi43MzM4NiAtOC43NjUyLDAgLTE4LjIxODUsMi40NzcyIC0yMi40MTI2LDguMTgxMDkgMzAuNDU2OSwxOS4zNTg1MSA0OS41MTA5LDM5LjIxMzQzIDYzLjEyNTYsNjguMDMyOTkgMTYuMzE4LDM0LjU1NTkxIDE2LjA3MjIsNjYuOTE4NTEgMTMuOTI2LDk2LjcwOTgxIDUuNzY3LC0zLjM1MzIgMjQuMjQ3NSwtMTEuNzMwNjEgMzEuOTQ3OCwtMTEuNzMwNjEgMzEuMjEwNiwwIDU4LjAxNCwzMC4xODM5MSA3MC41MzA5LDU2LjcxNjA2IDIzLjAwMjUsNDguNzI0ODEgMTkuMDcwNSw5OC40NTIxNCAxNS4wODkyLDEzOS45NDY0OSAtMS45OTg3LDIwLjc3MTQ4IC00LjgwMDMsNDEuMjY1NTcgLTguNjY2OCw2MS4xNzA3NyBsIC01Ljg2NTMsMjguODI2MSAtMC43MzczLDMuMTU2OTIgLTAuNzIwOSwzLjE0ODc5IGMgMy40ODk3LDAgMC4zNjA1LC02LjEyMDc3IDAuNDkxNSwtOS4yMDE0OCAyLjE0NjMsLTUwLjIzMzUgMS4yNDUyLC0xMjAuMzY0MDcgLTI1LjczODQsLTE3Ny41MzYwMSAtMTIuNTQ5OCwtMjYuNTY0NjIgLTMzLjA2MTksLTUzLjk1MzM1IC02NC41NTEsLTUzLjk1MzM1IC0xMzguMDE0NiwwIC02OC41OTc3LDM5MS40Mjg2NiAtMTc5LjIwMjcsNDg0LjQ3MzcxIDYuMTI3NCwxMC4xMjE0IDExLjU5OTUsMjAuNTMzMSAxNi4xODY5LDMwLjc0MiA2NS40NTIxLC03OS4wNDgyIDY4Ljg3NjIsLTI5Ni45NTc1NiAxNjUuMjExMiwtMjk2Ljk1NzU2IDIzLjM3OTIsMCA0Ny41NDQ5LDIxLjkxMzU4IDU3LjQ4OTcsNDIuOTcwNjMgNDIuNzkzNyw5MC42NTcxMiAtMjguMjk0MywxOTYuMjY5OTMgLTU5LjI3NTUsMjU1Ljc5ODkzIHoiCiAgICAgICAgaW5rc2NhcGU6Y29ubmVjdG9yLWN1cnZhdHVyZT0iMCIgLz48cGF0aAogICAgICAgIGlkPSJwYXRoMTAyIgogICAgICAgIHN0eWxlPSJmaWxsOiNmZmZmZmY7ZmlsbC1vcGFjaXR5OjE7ZmlsbC1ydWxlOm5vbnplcm87c3Ryb2tlOm5vbmU7c3Ryb2tlLXdpZHRoOjAuNDQ0Njc0OTEiCiAgICAgICAgZD0ibSAxMDUwLjY0NTUsMTQyNS41MTU3IGMgOTQuOTI5MiwwIDM5LjYwMjEsLTIzNy4yMDc4IDUuODQzOSwtMzA4LjczMzYgLTI4LjkwODYsLTYxLjIzNDEgLTkzLjk4ODgyLC0xNDkuNTUzNSAtMTcxLjExOTA2LC0xNDkuNTUzNSAtOTIuNTQwNTUsMCAtODkuNzg4MSwxMDMuNjQ4MyAtNTIuOTUxNDUsMTgxLjY3NDQgMTkuOTQxOTgsNDIuMjQzOCA1MC41OTA1OCw4OS41OTc4IDkyLjgxNTgsMTI0LjQxMTYgLTEwLjgwODE4LC0zNi4zMzg3IDI1LjcyNzAyLC02MS4xNTk0IDEwLjk1MDc0LC05Mi40NjkyIC0xMC4wOTIyNiwtMjEuMzgxNCAtMzAuOTgxMjIsLTQ0Ljc0MjEgLTQxLjgzNTI5LC02Ny43MzkzIC0xNy41NTQ5MiwtMzcuMTc5MiAtMTAuODQ3NTMsLTEwMy4xNjY1IDMxLjU2MjgxLC0xMDMuMTY2NSAzNy45NjM4NSwwIDcxLjY5NzQ3LDQ3LjAyNzkgODUuNTI2NzUsNzYuMzIyOCAyOC4zMzIsNjAuMDI4NyA5OS4xNzI2LDMxNi4xMTk4IDE5Ljk4NzksMzE2LjExOTggLTkxLjE5NzEsMCAtMjQ4LjM0NDMyLC0yMjIuMjM0NCAtMjgxLjI1MjIyLC0yOTEuOTQzMiAtNTguNzM4MTQsLTEyNC40Mjc4MiAtMTYuMTYwNjksLTI3Ny42OTMwOCAxMTcuNjcyODEsLTI3Ny42OTMwOCA5MC40Mjg3MywwIDE2NC44MDgyMSw4Ni45MzcyOCAyMDAuNzM1NTEsMTYzLjA1MDc4IDIxLjQwMTgsNDUuMzM0MiAzMy4wNTU0LDkwLjQ0MTQgMzcuNjQ0NCwxMzIuOTc0IGwgMTcuNTU0OSwzLjIxMiBjIDMuODc4LC0xMTcuMDgwNSAxMjcuNzM4OSwtMzEwLjk0NzkyIDc1LjAxMTksLTQyMi42MzYxMiAtNjcuNDgwNCwtMTQyLjk1MDg5IC0yNjkuMjUzLC0xNDEuNjcwOTMgLTM4NC40NjE3NCwtMTkyLjQwNDA3IC0yNC4yMTY0Niw1Ni42NDYzMyAtNTcuMDIyOCwxMDkuMzEzMTkgLTEwMy4yMTYwNywxNDkuNTA4MTEgMTAyLjc2NzEzLDM0LjU2ODg5IDM1NS4zMDQwMSw5Mi42MTUyIDQxMC4yMTUwMSwyMDguOTQzMDkgMjMuMDc3Nyw0OC44NzcyNSA3LjM2NiwxMjkuOTE0MzkgLTE5LjI5NjUsMTU3LjM3OTM5IC00LjUzNjYsLTE3LjI3NTYgLTEwLjgxNDgsLTM0Ljg4NTI4IC0xOS4xNDc0LC01Mi41MzM5MyAtNDcuMDE5LC05OS41OTkwNSAtMTQ3LjY4OTA2LC0xNzYuODQwMDYgLTI1MS40NzM2MSwtMTc2Ljg0MDA2IC0xNDQuNDk1OTEsMCAtMjA1Ljc1Mzc5LDEwMy44MzE1OSAtMTM3Ljc1MDgyLDI0Ny45MDgyOSA0MC44MTI5NCw4Ni40NTA2IDI0OS4yMjI1MSwzNzQuMjA4MyAzNTYuOTgxNzMsMzc0LjIwODMiCiAgICAgICAgaW5rc2NhcGU6Y29ubmVjdG9yLWN1cnZhdHVyZT0iMCIgLz48cGF0aAogICAgICAgIGlkPSJwYXRoMTA0IgogICAgICAgIHN0eWxlPSJmaWxsOiNmZmZmZmY7ZmlsbC1vcGFjaXR5OjE7ZmlsbC1ydWxlOm5vbnplcm87c3Ryb2tlOm5vbmU7c3Ryb2tlLXdpZHRoOjAuNDQ0Njc0OTEiCiAgICAgICAgZD0ibSAxMjk3LjUxMiwxMDgyLjIwMDMgYyA1Ljc0MDgsLTE0LjEwNTYgMjIuMzM1NiwtOTMuOTc2MzMgMzQuOTQyNywtOTMuOTc2MzMgMjcuMjE3OSwwIDc2LjQwNzgsNzQuMDU5NzMgODkuNjAzLDkzLjI4NjgzIDI0LjIwNSwtMTUuODQ5NSAxMC43NzcxLC00OS4xMjU1IDU1LjYzMzUsLTQ5LjEyNTUgMjAuMzA3MywwIDMwLjUyMDgsNDMuNzQ0NSA1MS42NTM4LDQ0LjQ1NSAwLjc0ODgsLTE3LjY4MTEgMS44ODA5LC0zMy42ODE1IC03Ljc1NzUsLTU0LjEwNTkgLTE0Ljg2NjQsLTMxLjQ5NDY0IC01Mi40NzgsLTc0LjE2ODM2IC04OS40NDksLTc0LjE2ODM2IC0yNi40ODIzLDAgLTYzLjM2NDgsMzEuODgyMzkgLTcwLjYwOTYsMzEuODgyMzkgLTcuODcyMywwIC0yMi4zMTYsLTMuNjgyNTMgLTI2LjkyNDcsLTEzLjQzMzk5IC0xOS4yNTA2LC00MC43OTE4OSAzMi4yMTgyLC0xNzYuOTY2NTYgODMuODM3NywtMTc2Ljk2NjU2IDI3LjU4MzIsMCA2MC40OTc3LDIwLjIzMjg5IDg5LjM0NzQsMzIuNzE3ODUgLTcuNTExOSwtNDkuMDY4NjggLTguNTU1NSwtOTAuNDQxMzcgMS4zODI3LC0xMzIuNjU5MjEgLTI2LjI5MDYsLTE2LjY1OTA3IC01Ny4wODY2LC0yMy42ODE4NyAtODEuODAxMSwtMjMuNjgxODcgLTEyNi44Mzc4LDAgLTU2Ljg4ODQsMjk0Ljk4IC0xNzMuODQ1MywzNTcuODI1MDUgbCA0My45ODY0LDU3Ljk1MDYiCiAgICAgICAgaW5rc2NhcGU6Y29ubmVjdG9yLWN1cnZhdHVyZT0iMCIgLz48cGF0aAogICAgICAgIGlkPSJwYXRoMTA2IgogICAgICAgIHN0eWxlPSJmaWxsOiNmZmZmZmY7ZmlsbC1vcGFjaXR5OjE7ZmlsbC1ydWxlOmV2ZW5vZGQ7c3Ryb2tlOm5vbmU7c3Ryb2tlLXdpZHRoOjAuNDQ0Njc0OTEiCiAgICAgICAgZD0ibSAxNzg0Ljk5OCwxMTA1LjgzODMgYyA5NS44NTk5LDAgMTMzLjcwNTgsLTE3Mi40NDIwOCA5MC42OTkxLC0yNjMuNTU1MDggLTMzLjM3MzIsLTcwLjY4Mzc1IC05Mi41MzQsLTEyMS45MjMwNiAtMTY4LjMyNDEsLTEyMS45MjMwNiAtMTMzLjg0OTksMCAtMTE3LjA3NjQsMTgyLjQ1OTU5IC02NC44NjIyLDI5My4wODUyNCAxNC40MDExLDMwLjQ3NDIgNjMuNjAwNyw5Ni44OTggMTAyLjA4NTUsOTYuODk4IDE0LjEzOSwwIDI1Ljg1MzIsLTQuNTA1MSA0MC40MDE3LC00LjUwNTEgeiBtIC0yLjk2NTQsLTE2LjA5NjEgYyAtMTUuMDg5MiwwIC0yOC4zNTk4LC03LjQ1OTIgLTM1LjM1NTUsLTIyLjMwNjIgLTE0LjY5NjEsLTMxLjExNTEgNTguNTcwOSwtNjIuNjAzMiA0OC4wNTI3LC04NC44NzIxMiAtNi42MTg5LC0xNC4wMTYzNyAtMzEuODE2NywtMjcuMTM0MDIgLTQ0LjUzMDMsLTI3LjEzNDAyIC02My41MTg4LDAgLTYyLjk3ODIsODIuNjQ2MzQgLTI1LjExNTksMTM2LjUxMDQ0IC0yMy41NDMxLC0xNC45OTk0IC0zOC45NzYzLC0zNy45MTQgLTQ5LjAwMywtNTkuMTY3MiAtMzcuMjIzNCwtNzguODM4OTkgLTcuNjgzOSwtMTg3LjI5NTYgNzcuMjY0NSwtMTg3LjI5NTYgNDYuOTM4OCwwIDEwMS4wMDQzLDQyLjE3MjQzIDEyMi4wMDc5LDg2LjY4OTA2IDI1Ljg1MzIsNTQuNzM4NSAtNDAuMjU0MiwxNTcuNTc1NjQgLTkzLjMyMDQsMTU3LjU3NTY0IgogICAgICAgIGlua3NjYXBlOmNvbm5lY3Rvci1jdXJ2YXR1cmU9IjAiIC8+PHBhdGgKICAgICAgICBpZD0icGF0aDEwOCIKICAgICAgICBzdHlsZT0iZmlsbDojZmZmZmZmO2ZpbGwtb3BhY2l0eToxO2ZpbGwtcnVsZTpldmVub2RkO3N0cm9rZTpub25lO3N0cm9rZS13aWR0aDowLjQ0NDY3NDkxIgogICAgICAgIGQ9Im0gMjIyMC42NTE3LDgyMS45NDgxIGMgLTI1LjA1MDQsLTUzLjA1OTQ1IC03MS43MjcsLTgyLjE5MDUxIC0xMjQuMjg1MywtODIuMTkwNTEgLTE2Ni44MDA0LDAgLTE5OS44OTUsMTUyLjA5ODg4IC0xMjcuNjExLDMwNS4yMzkyMSAxNy4wNzE2LDM2LjE0NTcgNDUuMDg3Myw3Ni4xMzMgODcuODY0Nyw3Ni4xMzMgMTM0LjAwMDYsMCAyMjcuMzUzNywtMTY1LjAyODM1IDE2NC4wMzE2LC0yOTkuMTgxNyB6IG0gLTEzMy4wODMyLDI3OS45Njc2IGMgLTEyLjMwNCwwIC0yMy4xMDA3LC00LjQ0ODMgLTI4Ljk5ODgsLTE2Ljk1MTEgLTEyLjk3NTcsLTI3LjQ5NzQgNTcuNjIwNywtNTIuMDE0NyA1Ny43MTkxLC04MC40MzA0IC03LjM3MjYsLTguNzMxMDEgLTI4LjAxNTgsLTE4LjUwMzU0IC0zNy4wMTA0LC0xOC41MDM1NCAtNTAuODM4LDAgLTg5LjIwODEsNjguOTIyMDQgLTQ1LjgwODIsMTIwLjE0MzQ0IC0xNy42MTIzLC0xMS4xODU1IC0yOC4wNjUsLTI3LjkyNzMgLTM1LjUwMzEsLTQzLjY2ODIgLTQ0LjAwNiwtOTMuMjE3MDMgMTguNzI2NCwtMTg3LjQ2MDk5IDExMC4xMjk5LC0xODcuNDYwOTkgMzguMDQyNSwwIDg3LjA3ODMsMjEuMTcyMjIgMTA2LjgzNjgsNjMuMDQxMyAyNy45NjY2LDU5LjI1NjUzIC03MS42NDUsMTYzLjgyOTQ5IC0xMjcuMzY1MywxNjMuODI5NDkiCiAgICAgICAgaW5rc2NhcGU6Y29ubmVjdG9yLWN1cnZhdHVyZT0iMCIgLz48cGF0aAogICAgICAgIGlkPSJwYXRoMTEwIgogICAgICAgIHN0eWxlPSJmaWxsOiNmZmZmZmY7ZmlsbC1vcGFjaXR5OjE7ZmlsbC1ydWxlOm5vbnplcm87c3Ryb2tlOm5vbmU7c3Ryb2tlLXdpZHRoOjAuNDQ0Njc0OTEiCiAgICAgICAgZD0ibSAyMzkzLjE1MzUsMTEwMi44Mjc0IGMgMTQzLjc0ODgsMCAyMTYuNzg2NSwtMjYzLjc4MjIyIDE1Mi41NDY4LC0zOTkuODM2ODcgLTEyLjI3MTMsLTI2LjAxNDYzIC0zNS4xNTksLTUyLjAxNDczIC02NS4zMzc0LC01Mi4wMTQ3MyAtMTY0LjIyODIsMCAtMTIyLjMwMjksMzI2LjQzNzM3IC0yMTQuNzU0OSw0MTkuMTg1NiA4LjQ1MzksOC45NzkyIDE2LjU0NzMsMTguMzc3MSAyMy45NjksMjcuODM4MSA2Mi40NzAzLC03My4zMTM1IDMxLjQyMzYsLTI2Ni4yNTQ1IDE2NC44NTA4LC0yNjYuMjU0NSAzMC43MzU0LDAgNTMuOTgzNiwyNi45MTM0MiA2Ni4zODU5LDUzLjE3OTUyIDMzLjEyNzQsNzAuMTg5IC0yOC4xNzk2LDE5Mi4wOTI1OCAtOTUuMjg2NCwxOTIuMDkyNTggLTAuNjcxNywwIC0xMC4zMDUyLC0wLjM5OSAtMTAuMDkyMiwtNC4zMDIyIDIuNDczOSwtNDQuNzk3MyAzNy43MTQ4LC0xNi44NjM1IDIuMjI4MSwtOTMuMTAzNTMgLTM2LjI1NjcsNy4yMjM5MiAtNzQuNjU5Niw2NS40MjkyMyAtNTQuODM1NSwxMDcuNDMxMzMgNS44MzI1LDEyLjM0MzkgMjAuNDMwMiwxNS43ODQ3IDMwLjMyNTgsMTUuNzg0NyIKICAgICAgICBpbmtzY2FwZTpjb25uZWN0b3ItY3VydmF0dXJlPSIwIiAvPjxwYXRoCiAgICAgICAgaWQ9InBhdGgxMTIiCiAgICAgICAgc3R5bGU9ImZpbGw6I2ZmZmZmZjtmaWxsLW9wYWNpdHk6MTtmaWxsLXJ1bGU6ZXZlbm9kZDtzdHJva2U6bm9uZTtzdHJva2Utd2lkdGg6MC40NDQ2NzQ5MSIKICAgICAgICBkPSJtIDI3NTAuNTkyMywxMTA1Ljc2MiBjIDEzLjUzMjgsLTEuMjc5OSAzMy44ODEsLTAuMDcgNDUuNDk3LC0zLjYwNjIgMi4xNzksLTAuNjU4NyAwLjUyNDIsLTMuMzg0MSAwLjkwMTEsLTUuNTMyIDMuNTIyNCwtMTkuOTI5NSA5LjA3NjQsLTM4Ljg0NTIgMTMuODc2OCwtNTguMTAzMSAxOC43MjYzLC03NS4wNDkyOSAyOS45OTgyLC0xNTIuMDg3NDkgNTEuNDkzMywtMjI2LjQ3MTY0IDIzLjM3OTIsLTgwLjk4NjgyIDQ3Ljc1NzksLTE3Mi4yNTIzIDE5LjQ0NzIsLTI3My44Nzc1NSAtMi43Njg4LC05Ljk0Mjg5IC02LjQ3MTQsLTIwLjAzODI1IC0xMS4yNTU0LC0zMC4xNzA5MyAtMTA3LjYyMzIsLTIwNi43MzAzMSAtMzM3Ljk1ODgsLTE1MS4wMTAzMiAtNDEwLjExMTgsLTE1MS4wMTAzMiAtOC43NjUyLDAgLTE4LjIzNDgsMi40ODUzMSAtMjIuNDEyNiw4LjE4NzU4IDMwLjQ0MDUsMTkuMzYwMTMgNDkuNTEwOSwzOS4yMDY5NCA2My4xMDkzLDY4LjAyODEzIDE2LjMxNzksMzQuNTU1ODkgMTYuMDcyMiw2Ni45MTg0OSAxMy45MjU5LDk2LjcxNDY5IDUuNzY3LC0zLjM1ODEgMjQuMjY0LC0xMS43MzA2MiAzMS45NDc4LC0xMS43MzA2MiAzMS4yMTA2LDAgMjA1LjE4NywtODkuMzg4NTIgMjkzLjg3MDgsNzQuOTg2MDIgMjMuMDAyNSw0OC43MjQ4MSAxOS4wNzA1LDk4LjQ1MjE0IDE1LjA4OTIsMTM5Ljk0NjQ5IC0xLjk5ODcsMjAuNzcxNDggLTQuODAwMyw0MS4yNjU1NyAtOC42NjY4LDYxLjE3MDc3IGwgLTUuODY1MywyOC44MjYxIC0wLjczNzMsMy4xNTY5MiAtMC43MjA5LDMuMTQ4NzkgYyAzLjQ4OTcsMCAwLjM2MDUsLTYuMTIwNzcgMC40OTE1LC05LjIwMTQ4IDIuMTQ2MywtNTAuMjMzNSAxLjI0NTIsLTEyMC4zNjQwNyAtMjUuNzM4NCwtMTc3LjUzNjAxIC0xMi41NDk4LC0yNi41NjQ2MiAtMzMuMDYxOSwtNTMuOTUzMzUgLTY0LjU1MSwtNTMuOTUzMzUgLTEzOC4wMTQ2LDAgLTY4LjU5NzcsMzkxLjQyODY2IC0xNzkuMjAyNyw0ODQuNDczNzEgNi4xMjc0LDEwLjEyMTQgMTEuNTk5NSwyMC41MzMxIDE2LjE4NjksMzAuNzQyIDY1LjQ1MjEsLTc5LjA0ODIgNjguODc2MiwtMjk2Ljk1NzU2IDE2NS4yMTEyLC0yOTYuOTU3NTYgMjMuMzc5MiwwIDQ3LjU0NDksMjEuOTEzNTggNTcuNDg5Nyw0Mi45NzA2MyA0Mi43OTM3LDkwLjY1NzEyIC0yOC4yOTQzLDE5Ni4yNjk5MyAtNTkuMjc1NSwyNTUuNzk4OTMiCiAgICAgICAgaW5rc2NhcGU6Y29ubmVjdG9yLWN1cnZhdHVyZT0iMCIgLz48cGF0aAogICAgICAgIGlkPSJwYXRoMjEyIgogICAgICAgIHN0eWxlPSJmaWxsOiMwMDAwMDA7ZmlsbC1vcGFjaXR5OjE7ZmlsbC1ydWxlOm5vbnplcm87c3Ryb2tlOm5vbmU7c3Ryb2tlLXdpZHRoOjAuNDQ0Njc0OTEiCiAgICAgICAgZD0iTSAyODc3LjU3NjUsMCAxNzc4LjI2MSw0MjYuOTI3NTYgNjc4Ljk5MTQxLDAuMTA4ODE4OTMgMTExMy4wNCw2ODAuNTMwODkgLTAuNDUzNDUwNDEsMTA5Ny4xOTg2IDEzNjcuMTEzLDEwOTAuODA5MiBsIDQxMS4wOTg5LDY4NC4zMzMxIDQxMS4xMzgyLC02ODQuMzcwNSAxMzY3LjU5NTgsNi4yNjI3IEwgMjQ0My40NTI3LDY4MC40Njc1MyAyODc3LjU3NjUsMCIKICAgICAgICBpbmtzY2FwZTpjb25uZWN0b3ItY3VydmF0dXJlPSIwIiAvPjxwYXRoCiAgICAgICAgaWQ9InBhdGgyMTQiCiAgICAgICAgc3R5bGU9ImZpbGw6IzYxOWNiYztmaWxsLW9wYWNpdHk6MTtmaWxsLXJ1bGU6bm9uemVybztzdHJva2U6bm9uZTtzdHJva2Utd2lkdGg6MC40NDQ2NzQ5MSIKICAgICAgICBkPSJNIDI3MzAuNTA2MSwxMjMuMjc2NzggMTc4MC4xNDg1LDQ5MS42Mzg0MSA4MjkuODQwMTMsMTIzLjM1MzAzIDEyMDUuMDczLDcxMC40NjEwNyAyNDIuNDY1NDksMTA2OS45NzY1IGwgMTE4Mi4yNDgwMSwtNS41MDYgMzU1LjQwMjMsNTkwLjQ4MjQgMzU1LjQyMzYsLTU5MC41MTQ5IDExODIuMjY2LDUuNDEyIC05NjIuNTk2MSwtMzU5LjQzOTIyIDM3NS4yOTY4LC01ODcuMTM0IgogICAgICAgIGlua3NjYXBlOmNvbm5lY3Rvci1jdXJ2YXR1cmU9IjAiIC8+PHBhdGgKICAgICAgICBpZD0icGF0aDIxNiIKICAgICAgICBzdHlsZT0iZmlsbDojMDAwMDAwO2ZpbGwtb3BhY2l0eToxO2ZpbGwtcnVsZTpub256ZXJvO3N0cm9rZTpub25lO3N0cm9rZS13aWR0aDowLjQ0NDY3NDkxIgogICAgICAgIGQ9Im0gMTA1MC42NDU1LDE0MjUuNTE1NyBjIDk0LjkyOTIsMCAzOS42MDIxLC0yMzcuMjA3OCA1Ljg0MzksLTMwOC43MzM2IC0yOC45MDg2LC02MS4yMzQxIC05My45ODg4MiwtMTQ5LjU1MzUgLTE3MS4xMTkwNiwtMTQ5LjU1MzUgLTkyLjU0MDU1LDAgLTg5Ljc4ODEsMTAzLjY0ODMgLTUyLjk1MTQ1LDE4MS42NzQ0IDE5Ljk0MTk4LDQyLjI0MzggNTAuNTkwNTgsODkuNTk3OCA5Mi44MTU4LDEyNC40MTE2IC0xMC44MDgxOCwtMzYuMzM4NyAyNS43MjcwMiwtNjEuMTU5NCAxMC45NTA3NCwtOTIuNDY5MiAtMTAuMDkyMjYsLTIxLjM4MTQgLTMwLjk4MTIyLC00NC43NDIxIC00MS44MzUyOSwtNjcuNzM5MyAtMTcuNTU0OTIsLTM3LjE3OTIgLTEwLjg0NzUzLC0xMDMuMTY2NSAzMS41NjI4MSwtMTAzLjE2NjUgMzcuOTYzODUsMCA3MS42OTc0Nyw0Ny4wMjc5IDg1LjUyNjc1LDc2LjMyMjggMjguMzMyLDYwLjAyODcgOTkuMTcyNiwzMTYuMTE5OCAxOS45ODc5LDMxNi4xMTk4IC05MS4xOTcxLDAgLTI0OC4zNDQzMiwtMjIyLjIzNDQgLTI4MS4yNTIyMiwtMjkxLjk0MzIgLTU4LjczODE0LC0xMjQuNDI3ODIgLTE2LjE2MDY5LC0yNzcuNjkzMDggMTE3LjY3MjgxLC0yNzcuNjkzMDggOTAuNDI4NzMsMCAxNjQuODA4MjEsODYuOTM3MjggMjAwLjczNTUxLDE2My4wNTA3OCAyMS40MDE4LDQ1LjMzNDIgMzMuMDU1NCw5MC40NDE0IDM3LjY0NDQsMTMyLjk3NCBsIDE3LjU1NDksMy4yMTIgYyAzLjg3OCwtMTE3LjA4MDUgMTI3LjczODksLTMxMC45NDc5MiA3NS4wMTE5LC00MjIuNjM2MTIgLTY3LjQ4MDQsLTE0Mi45NTA4OSAtMjY5LjI1MywtMTQxLjY3MDkzIC0zODQuNDYxNzQsLTE5Mi40MDQwNyAtMjQuMjE2NDYsNTYuNjQ2MzMgLTU3LjAyMjgsMTA5LjMxMzE5IC0xMDMuMjE2MDcsMTQ5LjUwODExIDEwMi43NjcxMywzNC41Njg4OSAzNTUuMzA0MDEsOTIuNjE1MiA0MTAuMjE1MDEsMjA4Ljk0MzA5IDIzLjA3NzcsNDguODc3MjUgNy4zNjYsMTI5LjkxNDM5IC0xOS4yOTY1LDE1Ny4zNzkzOSAtNC41MzY2LC0xNy4yNzU2IC0xMC44MTQ4LC0zNC44ODUyOCAtMTkuMTQ3NCwtNTIuNTMzOTMgLTQ3LjAxOSwtOTkuNTk5MDUgLTE0Ny42ODkwNiwtMTc2Ljg0MDA2IC0yNTEuNDczNjEsLTE3Ni44NDAwNiAtMTQ0LjQ5NTkxLDAgLTIwNS43NTM3OSwxMDMuODMxNTkgLTEzNy43NTA4MiwyNDcuOTA4MjkgNDAuODEyOTQsODYuNDUwNiAyNDkuMjIyNTEsMzc0LjIwODMgMzU2Ljk4MTczLDM3NC4yMDgzIgogICAgICAgIGlua3NjYXBlOmNvbm5lY3Rvci1jdXJ2YXR1cmU9IjAiIC8+PHBhdGgKICAgICAgICBpZD0icGF0aDIxOCIKICAgICAgICBzdHlsZT0iZmlsbDpub25lO3N0cm9rZTojMDAwMDAwO3N0cm9rZS13aWR0aDoxNTkuMDA4NTQ0OTI7c3Ryb2tlLWxpbmVjYXA6YnV0dDtzdHJva2UtbGluZWpvaW46cm91bmQ7c3Ryb2tlLW1pdGVybGltaXQ6My44NjM2ODk5O3N0cm9rZS1kYXNoYXJyYXk6bm9uZTtzdHJva2Utb3BhY2l0eToxIgogICAgICAgIGQ9Im0gMTA1MC42NDU1LDE0MjUuNTE1NyBjIDk0LjkyOTIsMCAzOS42MDIxLC0yMzcuMjA3OCA1Ljg0MzksLTMwOC43MzM2IC0yOC45MDg2LC02MS4yMzQxIC05My45ODg4MiwtMTQ5LjU1MzUgLTE3MS4xMTkwNiwtMTQ5LjU1MzUgLTkyLjU0MDU1LDAgLTg5Ljc4ODEsMTAzLjY0ODMgLTUyLjk1MTQ1LDE4MS42NzQ0IDE5Ljk0MTk4LDQyLjI0MzggNTAuNTkwNTgsODkuNTk3OCA5Mi44MTU4LDEyNC40MTE2IC0xMC44MDgxOCwtMzYuMzM4NyAyNS43MjcwMiwtNjEuMTU5NCAxMC45NTA3NCwtOTIuNDY5MiAtMTAuMDkyMjYsLTIxLjM4MTQgLTMwLjk4MTIyLC00NC43NDIxIC00MS44MzUyOSwtNjcuNzM5MyAtMTcuNTU0OTIsLTM3LjE3OTIgLTEwLjg0NzUzLC0xMDMuMTY2NSAzMS41NjI4MSwtMTAzLjE2NjUgMzcuOTYzODUsMCA3MS42OTc0Nyw0Ny4wMjc5IDg1LjUyNjc1LDc2LjMyMjggMjguMzMyLDYwLjAyODcgOTkuMTcyNiwzMTYuMTE5OCAxOS45ODc5LDMxNi4xMTk4IC05MS4xOTcxLDAgLTI0OC4zNDQzMiwtMjIyLjIzNDQgLTI4MS4yNTIyMiwtMjkxLjk0MzIgLTU4LjczODE0LC0xMjQuNDI3ODIgLTE2LjE2MDY5LC0yNzcuNjkzMDggMTE3LjY3MjgxLC0yNzcuNjkzMDggOTAuNDI4NzMsMCAxNjQuODA4MjEsODYuOTM3MjggMjAwLjczNTUxLDE2My4wNTA3OCAyMS40MDE4LDQ1LjMzNDIgMzMuMDU1NCw5MC40NDE0IDM3LjY0NDQsMTMyLjk3NCBsIDE3LjU1NDksMy4yMTIgYyAzLjg3OCwtMTE3LjA4MDUgMTI3LjczODksLTMxMC45NDc5MiA3NS4wMTE5LC00MjIuNjM2MTIgLTY3LjQ4MDQsLTE0Mi45NTA4OSAtMjY5LjI1MywtMTQxLjY3MDkzIC0zODQuNDYxNzQsLTE5Mi40MDQwNyAtMjQuMjE2NDYsNTYuNjQ2MzMgLTU3LjAyMjgsMTA5LjMxMzE5IC0xMDMuMjE2MDcsMTQ5LjUwODExIDEwMi43NjcxMywzNC41Njg4OSAzNTUuMzA0MDEsOTIuNjE1MiA0MTAuMjE1MDEsMjA4Ljk0MzA5IDIzLjA3NzcsNDguODc3MjUgNy4zNjYsMTI5LjkxNDM5IC0xOS4yOTY1LDE1Ny4zNzkzOSAtNC41MzY2LC0xNy4yNzU2IC0xMC44MTQ4LC0zNC44ODUyOCAtMTkuMTQ3NCwtNTIuNTMzOTMgLTQ3LjAxOSwtOTkuNTk5MDUgLTE0Ny42ODkwNiwtMTc2Ljg0MDA2IC0yNTEuNDczNjEsLTE3Ni44NDAwNiAtMTQ0LjQ5NTkxLDAgLTIwNS43NTM3OSwxMDMuODMxNTkgLTEzNy43NTA4MiwyNDcuOTA4MjkgNDAuODEyOTQsODYuNDUwNiAyNDkuMjIyNTEsMzc0LjIwODMgMzU2Ljk4MTczLDM3NC4yMDgzIHoiCiAgICAgICAgaW5rc2NhcGU6Y29ubmVjdG9yLWN1cnZhdHVyZT0iMCIgLz48cGF0aAogICAgICAgIGlkPSJwYXRoMjIwIgogICAgICAgIHN0eWxlPSJmaWxsOiMwMDAwMDA7ZmlsbC1vcGFjaXR5OjE7ZmlsbC1ydWxlOm5vbnplcm87c3Ryb2tlOm5vbmU7c3Ryb2tlLXdpZHRoOjAuNDQ0Njc0OTEiCiAgICAgICAgZD0ibSAxMjk3LjUxMiwxMDgyLjIwMDMgYyA1Ljc0MDgsLTE0LjEwNTYgMjIuMzM1NiwtOTMuOTc2MzMgMzQuOTQyNywtOTMuOTc2MzMgMjcuMjE3OSwwIDc2LjQwNzgsNzQuMDU5NzMgODkuNjAzLDkzLjI4NjgzIDI0LjIwNSwtMTUuODQ5NSAxMC43NzcxLC00OS4xMjU1IDU1LjYzMzUsLTQ5LjEyNTUgMjAuMzA3MywwIDMwLjUyMDgsNDMuNzQ0NSA1MS42NTM4LDQ0LjQ1NSAwLjc0ODgsLTE3LjY4MTEgMS44ODA5LC0zMy42ODE1IC03Ljc1NzUsLTU0LjEwNTkgLTE0Ljg2NjQsLTMxLjQ5NDY0IC01Mi40NzgsLTc0LjE2ODM2IC04OS40NDksLTc0LjE2ODM2IC0yNi40ODIzLDAgLTYzLjM2NDgsMzEuODgyMzkgLTcwLjYwOTYsMzEuODgyMzkgLTcuODcyMywwIC0yMi4zMTYsLTMuNjgyNTMgLTI2LjkyNDcsLTEzLjQzMzk5IC0xOS4yNTA2LC00MC43OTE4OSAzMi4yMTgyLC0xNzYuOTY2NTYgODMuODM3NywtMTc2Ljk2NjU2IDI3LjU4MzIsMCA2MC40OTc3LDIwLjIzMjg5IDg5LjM0NzQsMzIuNzE3ODUgLTcuNTExOSwtNDkuMDY4NjggLTguNTU1NSwtOTAuNDQxMzcgMS4zODI3LC0xMzIuNjU5MjEgLTI2LjI5MDYsLTE2LjY1OTA3IC01Ny4wODY2LC0yMy42ODE4NyAtODEuODAxMSwtMjMuNjgxODcgLTEyNi44Mzc4LDAgLTU2Ljg4ODQsMjk0Ljk4IC0xNzMuODQ1MywzNTcuODI1MDUgbCA0My45ODY0LDU3Ljk1MDYiCiAgICAgICAgaW5rc2NhcGU6Y29ubmVjdG9yLWN1cnZhdHVyZT0iMCIgLz48cGF0aAogICAgICAgIGlkPSJwYXRoMjIyIgogICAgICAgIHN0eWxlPSJmaWxsOm5vbmU7c3Ryb2tlOiMwMDAwMDA7c3Ryb2tlLXdpZHRoOjE1OS4wMDg1NDQ5MjtzdHJva2UtbGluZWNhcDpidXR0O3N0cm9rZS1saW5lam9pbjpyb3VuZDtzdHJva2UtbWl0ZXJsaW1pdDozLjg2MzY4OTk7c3Ryb2tlLWRhc2hhcnJheTpub25lO3N0cm9rZS1vcGFjaXR5OjEiCiAgICAgICAgZD0ibSAxMjk3LjUxMiwxMDgyLjIwMDMgYyA1Ljc0MDgsLTE0LjEwNTYgMjIuMzM1NiwtOTMuOTc2MzMgMzQuOTQyNywtOTMuOTc2MzMgMjcuMjE3OSwwIDc2LjQwNzgsNzQuMDU5NzMgODkuNjAzLDkzLjI4NjgzIDI0LjIwNSwtMTUuODQ5NSAxMC43NzcxLC00OS4xMjU1IDU1LjYzMzUsLTQ5LjEyNTUgMjAuMzA3MywwIDMwLjUyMDgsNDMuNzQ0NSA1MS42NTM4LDQ0LjQ1NSAwLjc0ODgsLTE3LjY4MTEgMS44ODA5LC0zMy42ODE1IC03Ljc1NzUsLTU0LjEwNTkgLTE0Ljg2NjQsLTMxLjQ5NDY0IC01Mi40NzgsLTc0LjE2ODM2IC04OS40NDksLTc0LjE2ODM2IC0yNi40ODIzLDAgLTYzLjM2NDgsMzEuODgyMzkgLTcwLjYwOTYsMzEuODgyMzkgLTcuODcyMywwIC0yMi4zMTYsLTMuNjgyNTMgLTI2LjkyNDcsLTEzLjQzMzk5IC0xOS4yNTA2LC00MC43OTE4OSAzMi4yMTgyLC0xNzYuOTY2NTYgODMuODM3NywtMTc2Ljk2NjU2IDI3LjU4MzIsMCA2MC40OTc3LDIwLjIzMjg5IDg5LjM0NzQsMzIuNzE3ODUgLTcuNTExOSwtNDkuMDY4NjggLTguNTU1NSwtOTAuNDQxMzcgMS4zODI3LC0xMzIuNjU5MjEgLTI2LjI5MDYsLTE2LjY1OTA3IC01Ny4wODY2LC0yMy42ODE4NyAtODEuODAxMSwtMjMuNjgxODcgLTEyNi44Mzc4LDAgLTU2Ljg4ODQsMjk0Ljk4IC0xNzMuODQ1MywzNTcuODI1MDUgeiIKICAgICAgICBpbmtzY2FwZTpjb25uZWN0b3ItY3VydmF0dXJlPSIwIiAvPjxwYXRoCiAgICAgICAgaWQ9InBhdGgyMjQiCiAgICAgICAgc3R5bGU9ImZpbGw6IzAwMDAwMDtmaWxsLW9wYWNpdHk6MTtmaWxsLXJ1bGU6ZXZlbm9kZDtzdHJva2U6bm9uZTtzdHJva2Utd2lkdGg6MC40NDQ2NzQ5MSIKICAgICAgICBkPSJtIDE3ODQuOTk4LDExMDUuODM4MyBjIDk1Ljg1OTksMCAxMzMuNzA1OCwtMTcyLjQ0MjA4IDkwLjY5OTEsLTI2My41NTUwOCAtMzMuMzczMiwtNzAuNjgzNzUgLTkyLjUzNCwtMTIxLjkyMzA2IC0xNjguMzI0MSwtMTIxLjkyMzA2IC0xMzMuODQ5OSwwIC0xMTcuMDc2NCwxODIuNDU5NTkgLTY0Ljg2MjIsMjkzLjA4NTI0IDE0LjQwMTEsMzAuNDc0MiA2My42MDA3LDk2Ljg5OCAxMDIuMDg1NSw5Ni44OTggMTQuMTM5LDAgMjUuODUzMiwtNC41MDUxIDQwLjQwMTcsLTQuNTA1MSB6IG0gLTIuOTY1NCwtMTYuMDk2MSBjIC0xNS4wODkyLDAgLTI4LjM1OTgsLTcuNDU5MiAtMzUuMzU1NSwtMjIuMzA2MiAtMTQuNjk2MSwtMzEuMTE1MSA1OC41NzA5LC02Mi42MDMyIDQ4LjA1MjcsLTg0Ljg3MjEyIC02LjYxODksLTE0LjAxNjM3IC0zMS44MTY3LC0yNy4xMzQwMiAtNDQuNTMwMywtMjcuMTM0MDIgLTYzLjUxODgsMCAtNjIuOTc4Miw4Mi42NDYzNCAtMjUuMTE1OSwxMzYuNTEwNDQgLTIzLjU0MzEsLTE0Ljk5OTQgLTM4Ljk3NjMsLTM3LjkxNCAtNDkuMDAzLC01OS4xNjcyIC0zNy4yMjM0LC03OC44Mzg5OSAtNy42ODM5LC0xODcuMjk1NiA3Ny4yNjQ1LC0xODcuMjk1NiA0Ni45Mzg4LDAgMTAxLjAwNDMsNDIuMTcyNDMgMTIyLjAwNzksODYuNjg5MDYgMjUuODUzMiw1NC43Mzg1IC00MC4yNTQyLDE1Ny41NzU2NCAtOTMuMzIwNCwxNTcuNTc1NjQiCiAgICAgICAgaW5rc2NhcGU6Y29ubmVjdG9yLWN1cnZhdHVyZT0iMCIgLz48cGF0aAogICAgICAgIGlkPSJwYXRoMjI2IgogICAgICAgIHN0eWxlPSJmaWxsOm5vbmU7c3Ryb2tlOiMwMDAwMDA7c3Ryb2tlLXdpZHRoOjE1OS4wMDg1NDQ5MjtzdHJva2UtbGluZWNhcDpidXR0O3N0cm9rZS1saW5lam9pbjpyb3VuZDtzdHJva2UtbWl0ZXJsaW1pdDozLjg2MzY4OTk7c3Ryb2tlLWRhc2hhcnJheTpub25lO3N0cm9rZS1vcGFjaXR5OjEiCiAgICAgICAgZD0ibSAxNzg0Ljk5OCwxMTA1LjgzODMgYyA5NS44NTk5LDAgMTMzLjcwNTgsLTE3Mi40NDIwOCA5MC42OTkxLC0yNjMuNTU1MDggLTMzLjM3MzIsLTcwLjY4Mzc1IC05Mi41MzQsLTEyMS45MjMwNiAtMTY4LjMyNDEsLTEyMS45MjMwNiAtMTMzLjg0OTksMCAtMTE3LjA3NjQsMTgyLjQ1OTU5IC02NC44NjIyLDI5My4wODUyNCAxNC40MDExLDMwLjQ3NDIgNjMuNjAwNyw5Ni44OTggMTAyLjA4NTUsOTYuODk4IDE0LjEzOSwwIDI1Ljg1MzIsLTQuNTA1MSA0MC40MDE3LC00LjUwNTEgeiIKICAgICAgICBpbmtzY2FwZTpjb25uZWN0b3ItY3VydmF0dXJlPSIwIiAvPjxwYXRoCiAgICAgICAgaWQ9InBhdGgyMjgiCiAgICAgICAgc3R5bGU9ImZpbGw6bm9uZTtzdHJva2U6IzAwMDAwMDtzdHJva2Utd2lkdGg6MTU5LjAwODU0NDkyO3N0cm9rZS1saW5lY2FwOmJ1dHQ7c3Ryb2tlLWxpbmVqb2luOnJvdW5kO3N0cm9rZS1taXRlcmxpbWl0OjMuODYzNjg5OTtzdHJva2UtZGFzaGFycmF5Om5vbmU7c3Ryb2tlLW9wYWNpdHk6MSIKICAgICAgICBkPSJtIDE3ODIuMDMyNiwxMDg5Ljc0MjIgYyAtMTUuMDg5MiwwIC0yOC4zNTk4LC03LjQ1OTIgLTM1LjM1NTUsLTIyLjMwNjIgLTE0LjY5NjEsLTMxLjExNTEgNTguNTcwOSwtNjIuNjAzMiA0OC4wNTI3LC04NC44NzIxMiAtNi42MTg5LC0xNC4wMTYzNyAtMzEuODE2NywtMjcuMTM0MDIgLTQ0LjUzMDMsLTI3LjEzNDAyIC02My41MTg4LDAgLTYyLjk3ODIsODIuNjQ2MzQgLTI1LjExNTksMTM2LjUxMDQ0IC0yMy41NDMxLC0xNC45OTk0IC0zOC45NzYzLC0zNy45MTQgLTQ5LjAwMywtNTkuMTY3MiAtMzcuMjIzNCwtNzguODM4OTkgLTcuNjgzOSwtMTg3LjI5NTYgNzcuMjY0NSwtMTg3LjI5NTYgNDYuOTM4OCwwIDEwMS4wMDQzLDQyLjE3MjQzIDEyMi4wMDc5LDg2LjY4OTA2IDI1Ljg1MzIsNTQuNzM4NSAtNDAuMjU0MiwxNTcuNTc1NjQgLTkzLjMyMDQsMTU3LjU3NTY0IHoiCiAgICAgICAgaW5rc2NhcGU6Y29ubmVjdG9yLWN1cnZhdHVyZT0iMCIgLz48cGF0aAogICAgICAgIGlkPSJwYXRoMjMwIgogICAgICAgIHN0eWxlPSJmaWxsOiMwMDAwMDA7ZmlsbC1vcGFjaXR5OjE7ZmlsbC1ydWxlOmV2ZW5vZGQ7c3Ryb2tlOm5vbmU7c3Ryb2tlLXdpZHRoOjAuNDQ0Njc0OTEiCiAgICAgICAgZD0ibSAyMjIwLjY1MTcsODIxLjk0ODEgYyAtMjUuMDUwNCwtNTMuMDU5NDUgLTcxLjcyNywtODIuMTkwNTEgLTEyNC4yODUzLC04Mi4xOTA1MSAtMTY2LjgwMDQsMCAtMTk5Ljg5NSwxNTIuMDk4ODggLTEyNy42MTEsMzA1LjIzOTIxIDE3LjA3MTYsMzYuMTQ1NyA0NS4wODczLDc2LjEzMyA4Ny44NjQ3LDc2LjEzMyAxMzQuMDAwNiwwIDIyNy4zNTM3LC0xNjUuMDI4MzUgMTY0LjAzMTYsLTI5OS4xODE3IHogbSAtMTMzLjA4MzIsMjc5Ljk2NzYgYyAtMTIuMzA0LDAgLTIzLjEwMDcsLTQuNDQ4MyAtMjguOTk4OCwtMTYuOTUxMSAtMTIuOTc1NywtMjcuNDk3NCA1Ny42MjA3LC01Mi4wMTQ3IDU3LjcxOTEsLTgwLjQzMDQgLTcuMzcyNiwtOC43MzEwMSAtMjguMDE1OCwtMTguNTAzNTQgLTM3LjAxMDQsLTE4LjUwMzU0IC01MC44MzgsMCAtODkuMjA4MSw2OC45MjIwNCAtNDUuODA4MiwxMjAuMTQzNDQgLTE3LjYxMjMsLTExLjE4NTUgLTI4LjA2NSwtMjcuOTI3MyAtMzUuNTAzMSwtNDMuNjY4MiAtNDQuMDA2LC05My4yMTcwMyAxOC43MjY0LC0xODcuNDYwOTkgMTEwLjEyOTksLTE4Ny40NjA5OSAzOC4wNDI1LDAgODcuMDc4MywyMS4xNzIyMiAxMDYuODM2OCw2My4wNDEzIDI3Ljk2NjYsNTkuMjU2NTMgLTcxLjY0NSwxNjMuODI5NDkgLTEyNy4zNjUzLDE2My44Mjk0OSIKICAgICAgICBpbmtzY2FwZTpjb25uZWN0b3ItY3VydmF0dXJlPSIwIiAvPjxwYXRoCiAgICAgICAgaWQ9InBhdGgyMzIiCiAgICAgICAgc3R5bGU9ImZpbGw6bm9uZTtzdHJva2U6IzAwMDAwMDtzdHJva2Utd2lkdGg6MTU5LjAwODU0NDkyO3N0cm9rZS1saW5lY2FwOmJ1dHQ7c3Ryb2tlLWxpbmVqb2luOnJvdW5kO3N0cm9rZS1taXRlcmxpbWl0OjMuODYzNjg5OTtzdHJva2UtZGFzaGFycmF5Om5vbmU7c3Ryb2tlLW9wYWNpdHk6MSIKICAgICAgICBkPSJtIDIyMjAuNjUxNyw4MjEuOTQ4MSBjIC0yNS4wNTA0LC01My4wNTk0NSAtNzEuNzI3LC04Mi4xOTA1MSAtMTI0LjI4NTMsLTgyLjE5MDUxIC0xNjYuODAwNCwwIC0xOTkuODk1LDE1Mi4wOTg4OCAtMTI3LjYxMSwzMDUuMjM5MjEgMTcuMDcxNiwzNi4xNDU3IDQ1LjA4NzMsNzYuMTMzIDg3Ljg2NDcsNzYuMTMzIDEzNC4wMDA2LDAgMjI3LjM1MzcsLTE2NS4wMjgzNSAxNjQuMDMxNiwtMjk5LjE4MTcgeiIKICAgICAgICBpbmtzY2FwZTpjb25uZWN0b3ItY3VydmF0dXJlPSIwIiAvPjxwYXRoCiAgICAgICAgaWQ9InBhdGgyMzQiCiAgICAgICAgc3R5bGU9ImZpbGw6bm9uZTtzdHJva2U6IzAwMDAwMDtzdHJva2Utd2lkdGg6MTU5LjAwODU0NDkyO3N0cm9rZS1saW5lY2FwOmJ1dHQ7c3Ryb2tlLWxpbmVqb2luOnJvdW5kO3N0cm9rZS1taXRlcmxpbWl0OjMuODYzNjg5OTtzdHJva2UtZGFzaGFycmF5Om5vbmU7c3Ryb2tlLW9wYWNpdHk6MSIKICAgICAgICBkPSJtIDIwODcuNTY4NSwxMTAxLjkxNTcgYyAtMTIuMzA0LDAgLTIzLjEwMDcsLTQuNDQ4MyAtMjguOTk4OCwtMTYuOTUxMSAtMTIuOTc1NywtMjcuNDk3NCA1Ny42MjA3LC01Mi4wMTQ3IDU3LjcxOTEsLTgwLjQzMDQgLTcuMzcyNiwtOC43MzEwMSAtMjguMDE1OCwtMTguNTAzNTQgLTM3LjAxMDQsLTE4LjUwMzU0IC01MC44MzgsMCAtODkuMjA4MSw2OC45MjIwNCAtNDUuODA4MiwxMjAuMTQzNDQgLTE3LjYxMjMsLTExLjE4NTUgLTI4LjA2NSwtMjcuOTI3MyAtMzUuNTAzMSwtNDMuNjY4MiAtNDQuMDA2LC05My4yMTcwMyAxOC43MjY0LC0xODcuNDYwOTkgMTEwLjEyOTksLTE4Ny40NjA5OSAzOC4wNDI1LDAgODcuMDc4MywyMS4xNzIyMiAxMDYuODM2OCw2My4wNDEzIDI3Ljk2NjYsNTkuMjU2NTMgLTcxLjY0NSwxNjMuODI5NDkgLTEyNy4zNjUzLDE2My44Mjk0OSB6IgogICAgICAgIGlua3NjYXBlOmNvbm5lY3Rvci1jdXJ2YXR1cmU9IjAiIC8+PHBhdGgKICAgICAgICBpZD0icGF0aDIzNiIKICAgICAgICBzdHlsZT0iZmlsbDojMDAwMDAwO2ZpbGwtb3BhY2l0eToxO2ZpbGwtcnVsZTpub256ZXJvO3N0cm9rZTpub25lO3N0cm9rZS13aWR0aDowLjQ0NDY3NDkxIgogICAgICAgIGQ9Im0gMjM5My4xNTM1LDExMDIuODI3NCBjIDE0My43NDg4LDAgMjE2Ljc4NjUsLTI2My43ODIyMiAxNTIuNTQ2OCwtMzk5LjgzNjg3IC0xMi4yNzEzLC0yNi4wMTQ2MyAtMzUuMTU5LC01Mi4wMTQ3MyAtNjUuMzM3NCwtNTIuMDE0NzMgLTE2NC4yMjgyLDAgLTEyMi4zMDI5LDMyNi40MzczNyAtMjE0Ljc1NDksNDE5LjE4NTYgOC40NTM5LDguOTc5MiAxNi41NDczLDE4LjM3NzEgMjMuOTY5LDI3LjgzODEgNjIuNDcwMywtNzMuMzEzNSAzMS40MjM2LC0yNjYuMjU0NSAxNjQuODUwOCwtMjY2LjI1NDUgMzAuNzM1NCwwIDUzLjk4MzYsMjYuOTEzNDIgNjYuMzg1OSw1My4xNzk1MiAzMy4xMjc0LDcwLjE4OSAtMjguMTc5NiwxOTIuMDkyNTggLTk1LjI4NjQsMTkyLjA5MjU4IC0wLjY3MTcsMCAtMTAuMzA1MiwtMC4zOTkgLTEwLjA5MjIsLTQuMzAyMiAyLjQ3MzksLTQ0Ljc5NzMgMzcuNzE0OCwtMTYuODYzNSAyLjIyODEsLTkzLjEwMzUzIC0zNi4yNTY3LDcuMjIzOTIgLTc0LjY1OTYsNjUuNDI5MjMgLTU0LjgzNTUsMTA3LjQzMTMzIDUuODMyNSwxMi4zNDM5IDIwLjQzMDIsMTUuNzg0NyAzMC4zMjU4LDE1Ljc4NDciCiAgICAgICAgaW5rc2NhcGU6Y29ubmVjdG9yLWN1cnZhdHVyZT0iMCIgLz48cGF0aAogICAgICAgIGlkPSJwYXRoMjM4IgogICAgICAgIHN0eWxlPSJmaWxsOm5vbmU7c3Ryb2tlOiMwMDAwMDA7c3Ryb2tlLXdpZHRoOjE1OS4wMDg1NDQ5MjtzdHJva2UtbGluZWNhcDpidXR0O3N0cm9rZS1saW5lam9pbjpyb3VuZDtzdHJva2UtbWl0ZXJsaW1pdDozLjg2MzY4OTk7c3Ryb2tlLWRhc2hhcnJheTpub25lO3N0cm9rZS1vcGFjaXR5OjEiCiAgICAgICAgZD0ibSAyMzkzLjE1MzUsMTEwMi44Mjc0IGMgMTQzLjc0ODgsMCAyMTYuNzg2NSwtMjYzLjc4MjIyIDE1Mi41NDY4LC0zOTkuODM2ODcgLTEyLjI3MTMsLTI2LjAxNDYzIC0zNS4xNTksLTUyLjAxNDczIC02NS4zMzc0LC01Mi4wMTQ3MyAtMTY0LjIyODIsMCAtMTIyLjMwMjksMzI2LjQzNzM3IC0yMTQuNzU0OSw0MTkuMTg1NiA4LjQ1MzksOC45NzkyIDE2LjU0NzMsMTguMzc3MSAyMy45NjksMjcuODM4MSA2Mi40NzAzLC03My4zMTM1IDMxLjQyMzYsLTI2Ni4yNTQ1IDE2NC44NTA4LC0yNjYuMjU0NSAzMC43MzU0LDAgNTMuOTgzNiwyNi45MTM0MiA2Ni4zODU5LDUzLjE3OTUyIDMzLjEyNzQsNzAuMTg5IC0yOC4xNzk2LDE5Mi4wOTI1OCAtOTUuMjg2NCwxOTIuMDkyNTggLTAuNjcxNywwIC0xMC4zMDUyLC0wLjM5OSAtMTAuMDkyMiwtNC4zMDIyIDIuNDczOSwtNDQuNzk3MyAzNy43MTQ4LC0xNi44NjM1IDIuMjI4MSwtOTMuMTAzNTMgLTM2LjI1NjcsNy4yMjM5MiAtNzQuNjU5Niw2NS40MjkyMyAtNTQuODM1NSwxMDcuNDMxMzMgNS44MzI1LDEyLjM0MzkgMjAuNDMwMiwxNS43ODQ3IDMwLjMyNTgsMTUuNzg0NyB6IgogICAgICAgIGlua3NjYXBlOmNvbm5lY3Rvci1jdXJ2YXR1cmU9IjAiIC8+PHBhdGgKICAgICAgICBpZD0icGF0aDI0MCIKICAgICAgICBzdHlsZT0iZmlsbDojMDAwMDAwO2ZpbGwtb3BhY2l0eToxO2ZpbGwtcnVsZTpldmVub2RkO3N0cm9rZTpub25lO3N0cm9rZS13aWR0aDowLjQ0NDY3NDkxIgogICAgICAgIGQ9Im0gMjc1MC41OTIzLDExMDUuNzYyIGMgMTMuNTMyOCwtMS4yNzk5IDMzLjg4MSwtMC4wNyA0NS40OTcsLTMuNjA2MiAyLjE3OSwtMC42NTg3IDAuNTI0MiwtMy4zODQxIDAuOTAxMSwtNS41MzIgMy41MjI0LC0xOS45Mjk1IDkuMDc2NCwtMzguODQ1MiAxMy44NzY4LC01OC4xMDMxIDE4LjcyNjMsLTc1LjA0OTI5IDI5Ljk5ODIsLTE1Mi4wODc0OSA1MS40OTMzLC0yMjYuNDcxNjQgMjMuMzc5MiwtODAuOTg2ODIgNDcuNzU3OSwtMTcyLjI1MjMgMTkuNDQ3MiwtMjczLjg3NzU1IC0yLjc2ODgsLTkuOTQyODkgLTYuNDcxNCwtMjAuMDM4MjUgLTExLjI1NTQsLTMwLjE3MDkzIC0zMi4wOTUzLC02OC4wMDIxOCAtMzA4LjQ4NDksLTE0Ni4zNTI3OSAtMzgwLjYzNzgsLTE0Ni4zNTI3OSAtOC43NjUyLDAgLTE4LjIzNDksMi40ODUzMSAtMjIuNDEyNyw4LjE4NzU4IDMwLjQ0MDUsMTkuMzYwMTMgNDkuNTExLDM5LjIwNjk0IDYzLjEyNTYsNjguMDM0NjIgMTYuMzAxNiwzNC41NDk0IDE2LjA1NTksNjYuOTExOTkgMTMuOTA5Niw5Ni43MDgxOSA1Ljc2NywtMy4zNTE2IDIxOC4xMTM1LDEuODgxODIgMjI1LjgxMzgsMS44ODE4MiAzMS4yMTA2LDAgNTguMDE0LDMwLjE4MzkxIDcwLjUzMDksNTYuNzE2MDYgMjMuMDAyNSw0OC43MjQ4MSAxOS4wNzA1LDk4LjQ1MjE0IDE1LjA4OTIsMTM5Ljk0NjQ5IC0xLjk5ODcsMjAuNzcxNDggLTQuODAwMyw0MS4yNjU1NyAtOC42NjY4LDYxLjE3MDc3IGwgLTUuODY1MywyOC44MjYxIC0wLjczNzMsMy4xNTY5MiAtMC43MjA5LDMuMTQ4NzkgYyAzLjQ4OTcsMCAwLjM2MDUsLTYuMTIwNzcgMC40OTE1LC05LjIwMTQ4IDIuMTQ2MywtNTAuMjMzNSAxLjI0NTIsLTEyMC4zNjQwNyAtMjUuNzM4NCwtMTc3LjUzNjAxIC0xMi41NDk4LC0yNi41NjQ2MiAtMzMuMDYxOSwtNTMuOTUzMzUgLTY0LjU1MSwtNTMuOTUzMzUgLTEzOC4wMTQ2LDAgLTY4LjU5NzcsMzkxLjQyODY2IC0xNzkuMjAyNyw0ODQuNDczNzEgNi4xMjc0LDEwLjEyMTQgMTEuNTk5NSwyMC41MzMxIDE2LjE4NjksMzAuNzQyIDY1LjQ1MjEsLTc5LjA0ODIgNjguODc2MiwtMjk2Ljk1NzU2IDE2NS4yMTEyLC0yOTYuOTU3NTYgMjMuMzc5MiwwIDQ3LjU0NDksMjEuOTEzNTggNTcuNDg5Nyw0Mi45NzA2MyA0Mi43OTM3LDkwLjY1NzEyIC0yOC4yOTQzLDE5Ni4yNjk5MyAtNTkuMjc1NSwyNTUuNzk4OTMiCiAgICAgICAgaW5rc2NhcGU6Y29ubmVjdG9yLWN1cnZhdHVyZT0iMCIgLz48cGF0aAogICAgICAgIGlkPSJwYXRoMjQyIgogICAgICAgIHN0eWxlPSJmaWxsOm5vbmU7c3Ryb2tlOiMwMDAwMDA7c3Ryb2tlLXdpZHRoOjE1OS4wMDg1NDQ5MjtzdHJva2UtbGluZWNhcDpidXR0O3N0cm9rZS1saW5lam9pbjpyb3VuZDtzdHJva2UtbWl0ZXJsaW1pdDozLjg2MzY4OTk7c3Ryb2tlLWRhc2hhcnJheTpub25lO3N0cm9rZS1vcGFjaXR5OjEiCiAgICAgICAgZD0ibSAyNzUwLjU5MjMsMTEwNS43NjIgYyAxMy41MzI4LC0xLjI3OTkgMzMuODgxLC0wLjA3IDQ1LjQ5NywtMy42MDYyIDIuMTc5LC0wLjY1ODcgMC41MjQyLC0zLjM4NDEgMC45MDExLC01LjUzMiAzLjUyMjQsLTE5LjkyOTUgOS4wNzY0LC0zOC44NDUyIDEzLjg3NjgsLTU4LjEwMzEgMTguNzI2MywtNzUuMDQ5MjkgMjkuOTk4MiwtMTUyLjA4NzQ5IDUxLjQ5MzMsLTIyNi40NzE2NCAyMy4zNzkyLC04MC45ODY4MiA0Ny43NTc5LC0xNzIuMjUyMyAxOS40NDcyLC0yNzMuODc3NTUgLTIuNzY4OCwtOS45NDI4OSAtNi40NzE0LC0yMC4wMzgyNSAtMTEuMjU1NCwtMzAuMTcwOTMgLTMyLjA5NTMsLTY4LjAwMjE4IC0zMDguNDg0OSwtMTQ2LjM1Mjc5IC0zODAuNjM3OCwtMTQ2LjM1Mjc5IC04Ljc2NTIsMCAtMTguMjM0OSwyLjQ4NTMxIC0yMi40MTI3LDguMTg3NTggMzAuNDQwNSwxOS4zNjAxMyA0OS41MTEsMzkuMjA2OTQgNjMuMTI1Niw2OC4wMzQ2MiAxNi4zMDE2LDM0LjU0OTQgMTYuMDU1OSw2Ni45MTE5OSAxMy45MDk2LDk2LjcwODE5IDUuNzY3LC0zLjM1MTYgMjE4LjExMzUsMS44ODE4MiAyMjUuODEzOCwxLjg4MTgyIDMxLjIxMDYsMCA1OC4wMTQsMzAuMTgzOTEgNzAuNTMwOSw1Ni43MTYwNiAyMy4wMDI1LDQ4LjcyNDgxIDE5LjA3MDUsOTguNDUyMTQgMTUuMDg5MiwxMzkuOTQ2NDkgLTEuOTk4NywyMC43NzE0OCAtNC44MDAzLDQxLjI2NTU3IC04LjY2NjgsNjEuMTcwNzcgbCAtNS44NjUzLDI4LjgyNjEgLTAuNzM3MywzLjE1NjkyIC0wLjcyMDksMy4xNDg3OSBjIDMuNDg5NywwIDAuMzYwNSwtNi4xMjA3NyAwLjQ5MTUsLTkuMjAxNDggMi4xNDYzLC01MC4yMzM1IDEuMjQ1MiwtMTIwLjM2NDA3IC0yNS43Mzg0LC0xNzcuNTM2MDEgLTEyLjU0OTgsLTI2LjU2NDYyIC0zMy4wNjE5LC01My45NTMzNSAtNjQuNTUxLC01My45NTMzNSAtMTM4LjAxNDYsMCAtNjguNTk3NywzOTEuNDI4NjYgLTE3OS4yMDI3LDQ4NC40NzM3MSA2LjEyNzQsMTAuMTIxNCAxMS41OTk1LDIwLjUzMzEgMTYuMTg2OSwzMC43NDIgNjUuNDUyMSwtNzkuMDQ4MiA2OC44NzYyLC0yOTYuOTU3NTYgMTY1LjIxMTIsLTI5Ni45NTc1NiAyMy4zNzkyLDAgNDcuNTQ0OSwyMS45MTM1OCA1Ny40ODk3LDQyLjk3MDYzIDQyLjc5MzcsOTAuNjU3MTIgLTI4LjI5NDMsMTk2LjI2OTkzIC01OS4yNzU1LDI1NS43OTg5MyB6IgogICAgICAgIGlua3NjYXBlOmNvbm5lY3Rvci1jdXJ2YXR1cmU9IjAiIC8+PHBhdGgKICAgICAgICBpZD0icGF0aDI0NCIKICAgICAgICBzdHlsZT0iZmlsbDojMDAwMDAwO2ZpbGwtb3BhY2l0eToxO2ZpbGwtcnVsZTpub256ZXJvO3N0cm9rZTpub25lO3N0cm9rZS13aWR0aDowLjQ0NDY3NDkxIgogICAgICAgIGQ9Im0gMTA1MC42NDU1LDE0MjUuNTE1NyBjIDk0LjkyOTIsMCAzOS42MDIxLC0yMzcuMjA3OCA1Ljg0MzksLTMwOC43MzM2IC0yOC45MDg2LC02MS4yMzQxIC05My45ODg4MiwtMTQ5LjU1MzUgLTE3MS4xMTkwNiwtMTQ5LjU1MzUgLTkyLjU0MDU1LDAgLTg5Ljc4ODEsMTAzLjY0ODMgLTUyLjk1MTQ1LDE4MS42NzQ0IDE5Ljk0MTk4LDQyLjI0MzggNTAuNTkwNTgsODkuNTk3OCA5Mi44MTU4LDEyNC40MTE2IC0xMC44MDgxOCwtMzYuMzM4NyAyNS43MjcwMiwtNjEuMTU5NCAxMC45NTA3NCwtOTIuNDY5MiAtMTAuMDkyMjYsLTIxLjM4MTQgLTMwLjk4MTIyLC00NC43NDIxIC00MS44MzUyOSwtNjcuNzM5MyAtMTcuNTU0OTIsLTM3LjE3OTIgLTEwLjg0NzUzLC0xMDMuMTY2NSAzMS41NjI4MSwtMTAzLjE2NjUgMzcuOTYzODUsMCA3MS42OTc0Nyw0Ny4wMjc5IDg1LjUyNjc1LDc2LjMyMjggMjguMzMyLDYwLjAyODcgOTkuMTcyNiwzMTYuMTE5OCAxOS45ODc5LDMxNi4xMTk4IC05MS4xOTcxLDAgLTI0OC4zNDQzMiwtMjIyLjIzNDQgLTI4MS4yNTIyMiwtMjkxLjk0MzIgLTU4LjczODE0LC0xMjQuNDI3ODIgLTE2LjE2MDY5LC0yNzcuNjkzMDggMTE3LjY3MjgxLC0yNzcuNjkzMDggOTAuNDI4NzMsMCAxNjQuODA4MjEsODYuOTM3MjggMjAwLjczNTUxLDE2My4wNTA3OCAyMS40MDE4LDQ1LjMzNDIgMzMuMDU1NCw5MC40NDE0IDM3LjY0NDQsMTMyLjk3NCBsIDE3LjU1NDksMy4yMTIgYyAzLjg3OCwtMTE3LjA4MDUgMTI3LjczODksLTMxMC45NDc5MiA3NS4wMTE5LC00MjIuNjM2MTIgLTY3LjQ4MDQsLTE0Mi45NTA4OSAtMjY5LjI1MywtMTQxLjY3MDkzIC0zODQuNDYxNzQsLTE5Mi40MDQwNyAtMjQuMjE2NDYsNTYuNjQ2MzMgLTU3LjAyMjgsMTA5LjMxMzE5IC0xMDMuMjE2MDcsMTQ5LjUwODExIDEwMi43NjcxMywzNC41Njg4OSAzNTUuMzA0MDEsOTIuNjE1MiA0MTAuMjE1MDEsMjA4Ljk0MzA5IDIzLjA3NzcsNDguODc3MjUgNy4zNjYsMTI5LjkxNDM5IC0xOS4yOTY1LDE1Ny4zNzkzOSAtNC41MzY2LC0xNy4yNzU2IC0xMC44MTQ4LC0zNC44ODUyOCAtMTkuMTQ3NCwtNTIuNTMzOTMgLTQ3LjAxOSwtOTkuNTk5MDUgLTE0Ny42ODkwNiwtMTc2Ljg0MDA2IC0yNTEuNDczNjEsLTE3Ni44NDAwNiAtMTQ0LjQ5NTkxLDAgLTIwNS43NTM3OSwxMDMuODMxNTkgLTEzNy43NTA4MiwyNDcuOTA4MjkgNDAuODEyOTQsODYuNDUwNiAyNDkuMjIyNTEsMzc0LjIwODMgMzU2Ljk4MTczLDM3NC4yMDgzIgogICAgICAgIGlua3NjYXBlOmNvbm5lY3Rvci1jdXJ2YXR1cmU9IjAiIC8+PHBhdGgKICAgICAgICBpZD0icGF0aDI0NiIKICAgICAgICBzdHlsZT0iZmlsbDpub25lO3N0cm9rZTojMDAwMDAwO3N0cm9rZS13aWR0aDoxMy4yNTA5ODUxNTtzdHJva2UtbGluZWNhcDpidXR0O3N0cm9rZS1saW5lam9pbjptaXRlcjtzdHJva2UtbWl0ZXJsaW1pdDozLjg2MzcwOTkzO3N0cm9rZS1kYXNoYXJyYXk6bm9uZTtzdHJva2Utb3BhY2l0eToxIgogICAgICAgIGQ9Im0gMTA1MC42NDU1LDE0MjUuNTE1NyBjIDk0LjkyOTIsMCAzOS42MDIxLC0yMzcuMjA3OCA1Ljg0MzksLTMwOC43MzM2IC0yOC45MDg2LC02MS4yMzQxIC05My45ODg4MiwtMTQ5LjU1MzUgLTE3MS4xMTkwNiwtMTQ5LjU1MzUgLTkyLjU0MDU1LDAgLTg5Ljc4ODEsMTAzLjY0ODMgLTUyLjk1MTQ1LDE4MS42NzQ0IDE5Ljk0MTk4LDQyLjI0MzggNTAuNTkwNTgsODkuNTk3OCA5Mi44MTU4LDEyNC40MTE2IC0xMC44MDgxOCwtMzYuMzM4NyAyNS43MjcwMiwtNjEuMTU5NCAxMC45NTA3NCwtOTIuNDY5MiAtMTAuMDkyMjYsLTIxLjM4MTQgLTMwLjk4MTIyLC00NC43NDIxIC00MS44MzUyOSwtNjcuNzM5MyAtMTcuNTU0OTIsLTM3LjE3OTIgLTEwLjg0NzUzLC0xMDMuMTY2NSAzMS41NjI4MSwtMTAzLjE2NjUgMzcuOTYzODUsMCA3MS42OTc0Nyw0Ny4wMjc5IDg1LjUyNjc1LDc2LjMyMjggMjguMzMyLDYwLjAyODcgOTkuMTcyNiwzMTYuMTE5OCAxOS45ODc5LDMxNi4xMTk4IC05MS4xOTcxLDAgLTI0OC4zNDQzMiwtMjIyLjIzNDQgLTI4MS4yNTIyMiwtMjkxLjk0MzIgLTU4LjczODE0LC0xMjQuNDI3ODIgLTE2LjE2MDY5LC0yNzcuNjkzMDggMTE3LjY3MjgxLC0yNzcuNjkzMDggOTAuNDI4NzMsMCAxNjQuODA4MjEsODYuOTM3MjggMjAwLjczNTUxLDE2My4wNTA3OCAyMS40MDE4LDQ1LjMzNDIgMzMuMDU1NCw5MC40NDE0IDM3LjY0NDQsMTMyLjk3NCBsIDE3LjU1NDksMy4yMTIgYyAzLjg3OCwtMTE3LjA4MDUgMTI3LjczODksLTMxMC45NDc5MiA3NS4wMTE5LC00MjIuNjM2MTIgLTY3LjQ4MDQsLTE0Mi45NTA4OSAtMjY5LjI1MywtMTQxLjY3MDkzIC0zODQuNDYxNzQsLTE5Mi40MDQwNyAtMjQuMjE2NDYsNTYuNjQ2MzMgLTU3LjAyMjgsMTA5LjMxMzE5IC0xMDMuMjE2MDcsMTQ5LjUwODExIDEwMi43NjcxMywzNC41Njg4OSAzNTUuMzA0MDEsOTIuNjE1MiA0MTAuMjE1MDEsMjA4Ljk0MzA5IDIzLjA3NzcsNDguODc3MjUgNy4zNjYsMTI5LjkxNDM5IC0xOS4yOTY1LDE1Ny4zNzkzOSAtNC41MzY2LC0xNy4yNzU2IC0xMC44MTQ4LC0zNC44ODUyOCAtMTkuMTQ3NCwtNTIuNTMzOTMgLTQ3LjAxOSwtOTkuNTk5MDUgLTE0Ny42ODkwNiwtMTc2Ljg0MDA2IC0yNTEuNDczNjEsLTE3Ni44NDAwNiAtMTQ0LjQ5NTkxLDAgLTIwNS43NTM3OSwxMDMuODMxNTkgLTEzNy43NTA4MiwyNDcuOTA4MjkgNDAuODEyOTQsODYuNDUwNiAyNDkuMjIyNTEsMzc0LjIwODMgMzU2Ljk4MTczLDM3NC4yMDgzIHoiCiAgICAgICAgaW5rc2NhcGU6Y29ubmVjdG9yLWN1cnZhdHVyZT0iMCIgLz48cGF0aAogICAgICAgIGlkPSJwYXRoMjQ4IgogICAgICAgIHN0eWxlPSJmaWxsOiMwMDAwMDA7ZmlsbC1vcGFjaXR5OjE7ZmlsbC1ydWxlOm5vbnplcm87c3Ryb2tlOm5vbmU7c3Ryb2tlLXdpZHRoOjAuNDQ0Njc0OTEiCiAgICAgICAgZD0ibSAxMjk3LjUxMiwxMDgyLjIwMDMgYyA1Ljc0MDgsLTE0LjEwNTYgMjIuMzM1NiwtOTMuOTc2MzMgMzQuOTQyNywtOTMuOTc2MzMgMjcuMjE3OSwwIDc2LjQwNzgsNzQuMDU5NzMgODkuNjAzLDkzLjI4NjgzIDI0LjIwNSwtMTUuODQ5NSAxMC43NzcxLC00OS4xMjU1IDU1LjYzMzUsLTQ5LjEyNTUgMjAuMzA3MywwIDMwLjUyMDgsNDMuNzQ0NSA1MS42NTM4LDQ0LjQ1NSAwLjc0ODgsLTE3LjY4MTEgMS44ODA5LC0zMy42ODE1IC03Ljc1NzUsLTU0LjEwNTkgLTE0Ljg2NjQsLTMxLjQ5NDY0IC01Mi40NzgsLTc0LjE2ODM2IC04OS40NDksLTc0LjE2ODM2IC0yNi40ODIzLDAgLTYzLjM2NDgsMzEuODgyMzkgLTcwLjYwOTYsMzEuODgyMzkgLTcuODcyMywwIC0yMi4zMTYsLTMuNjgyNTMgLTI2LjkyNDcsLTEzLjQzMzk5IC0xOS4yNTA2LC00MC43OTE4OSAzMi4yMTgyLC0xNzYuOTY2NTYgODMuODM3NywtMTc2Ljk2NjU2IDI3LjU4MzIsMCA2MC40OTc3LDIwLjIzMjg5IDg5LjM0NzQsMzIuNzE3ODUgLTcuNTExOSwtNDkuMDY4NjggLTguNTU1NSwtOTAuNDQxMzcgMS4zODI3LC0xMzIuNjU5MjEgLTI2LjI5MDYsLTE2LjY1OTA3IC01Ny4wODY2LC0yMy42ODE4NyAtODEuODAxMSwtMjMuNjgxODcgLTEyNi44Mzc4LDAgLTU2Ljg4ODQsMjk0Ljk4IC0xNzMuODQ1MywzNTcuODI1MDUgbCA0My45ODY0LDU3Ljk1MDYiCiAgICAgICAgaW5rc2NhcGU6Y29ubmVjdG9yLWN1cnZhdHVyZT0iMCIgLz48cGF0aAogICAgICAgIGlkPSJwYXRoMjUwIgogICAgICAgIHN0eWxlPSJmaWxsOm5vbmU7c3Ryb2tlOiMwMDAwMDA7c3Ryb2tlLXdpZHRoOjEzLjI1MDk4NTE1O3N0cm9rZS1saW5lY2FwOmJ1dHQ7c3Ryb2tlLWxpbmVqb2luOm1pdGVyO3N0cm9rZS1taXRlcmxpbWl0OjMuODYzNzA5OTM7c3Ryb2tlLWRhc2hhcnJheTpub25lO3N0cm9rZS1vcGFjaXR5OjEiCiAgICAgICAgZD0ibSAxMjk3LjUxMiwxMDgyLjIwMDMgYyA1Ljc0MDgsLTE0LjEwNTYgMjIuMzM1NiwtOTMuOTc2MzMgMzQuOTQyNywtOTMuOTc2MzMgMjcuMjE3OSwwIDc2LjQwNzgsNzQuMDU5NzMgODkuNjAzLDkzLjI4NjgzIDI0LjIwNSwtMTUuODQ5NSAxMC43NzcxLC00OS4xMjU1IDU1LjYzMzUsLTQ5LjEyNTUgMjAuMzA3MywwIDMwLjUyMDgsNDMuNzQ0NSA1MS42NTM4LDQ0LjQ1NSAwLjc0ODgsLTE3LjY4MTEgMS44ODA5LC0zMy42ODE1IC03Ljc1NzUsLTU0LjEwNTkgLTE0Ljg2NjQsLTMxLjQ5NDY0IC01Mi40NzgsLTc0LjE2ODM2IC04OS40NDksLTc0LjE2ODM2IC0yNi40ODIzLDAgLTYzLjM2NDgsMzEuODgyMzkgLTcwLjYwOTYsMzEuODgyMzkgLTcuODcyMywwIC0yMi4zMTYsLTMuNjgyNTMgLTI2LjkyNDcsLTEzLjQzMzk5IC0xOS4yNTA2LC00MC43OTE4OSAzMi4yMTgyLC0xNzYuOTY2NTYgODMuODM3NywtMTc2Ljk2NjU2IDI3LjU4MzIsMCA2MC40OTc3LDIwLjIzMjg5IDg5LjM0NzQsMzIuNzE3ODUgLTcuNTExOSwtNDkuMDY4NjggLTguNTU1NSwtOTAuNDQxMzcgMS4zODI3LC0xMzIuNjU5MjEgLTI2LjI5MDYsLTE2LjY1OTA3IC01Ny4wODY2LC0yMy42ODE4NyAtODEuODAxMSwtMjMuNjgxODcgLTEyNi44Mzc4LDAgLTU2Ljg4ODQsMjk0Ljk4IC0xNzMuODQ1MywzNTcuODI1MDUgeiIKICAgICAgICBpbmtzY2FwZTpjb25uZWN0b3ItY3VydmF0dXJlPSIwIiAvPjxwYXRoCiAgICAgICAgaWQ9InBhdGgyNTIiCiAgICAgICAgc3R5bGU9ImZpbGw6IzAwMDAwMDtmaWxsLW9wYWNpdHk6MTtmaWxsLXJ1bGU6ZXZlbm9kZDtzdHJva2U6bm9uZTtzdHJva2Utd2lkdGg6MC40NDQ2NzQ5MSIKICAgICAgICBkPSJtIDE3ODQuOTk4LDExMDUuODM4MyBjIDk1Ljg1OTksMCAxMzMuNzA1OCwtMTcyLjQ0MjA4IDkwLjY5OTEsLTI2My41NTUwOCAtMzMuMzczMiwtNzAuNjgzNzUgLTkyLjUzNCwtMTIxLjkyMzA2IC0xNjguMzI0MSwtMTIxLjkyMzA2IC0xMzMuODQ5OSwwIC0xMTcuMDc2NCwxODIuNDU5NTkgLTY0Ljg2MjIsMjkzLjA4NTI0IDE0LjQwMTEsMzAuNDc0MiA2My42MDA3LDk2Ljg5OCAxMDIuMDg1NSw5Ni44OTggMTQuMTM5LDAgMjUuODUzMiwtNC41MDUxIDQwLjQwMTcsLTQuNTA1MSB6IG0gLTIuOTY1NCwtMTYuMDk2MSBjIC0xNS4wODkyLDAgLTI4LjM1OTgsLTcuNDU5MiAtMzUuMzU1NSwtMjIuMzA2MiAtMTQuNjk2MSwtMzEuMTE1MSA1OC41NzA5LC02Mi42MDMyIDQ4LjA1MjcsLTg0Ljg3MjEyIC02LjYxODksLTE0LjAxNjM3IC0zMS44MTY3LC0yNy4xMzQwMiAtNDQuNTMwMywtMjcuMTM0MDIgLTYzLjUxODgsMCAtNjIuOTc4Miw4Mi42NDYzNCAtMjUuMTE1OSwxMzYuNTEwNDQgLTIzLjU0MzEsLTE0Ljk5OTQgLTM4Ljk3NjMsLTM3LjkxNCAtNDkuMDAzLC01OS4xNjcyIC0zNy4yMjM0LC03OC44Mzg5OSAtNy42ODM5LC0xODcuMjk1NiA3Ny4yNjQ1LC0xODcuMjk1NiA0Ni45Mzg4LDAgMTAxLjAwNDMsNDIuMTcyNDMgMTIyLjAwNzksODYuNjg5MDYgMjUuODUzMiw1NC43Mzg1IC00MC4yNTQyLDE1Ny41NzU2NCAtOTMuMzIwNCwxNTcuNTc1NjQiCiAgICAgICAgaW5rc2NhcGU6Y29ubmVjdG9yLWN1cnZhdHVyZT0iMCIgLz48cGF0aAogICAgICAgIGlkPSJwYXRoMjU0IgogICAgICAgIHN0eWxlPSJmaWxsOm5vbmU7c3Ryb2tlOiMwMDAwMDA7c3Ryb2tlLXdpZHRoOjEzLjI1MDk4NTE1O3N0cm9rZS1saW5lY2FwOmJ1dHQ7c3Ryb2tlLWxpbmVqb2luOm1pdGVyO3N0cm9rZS1taXRlcmxpbWl0OjMuODYzNzA5OTM7c3Ryb2tlLWRhc2hhcnJheTpub25lO3N0cm9rZS1vcGFjaXR5OjEiCiAgICAgICAgZD0ibSAxNzg0Ljk5OCwxMTA1LjgzODMgYyA5NS44NTk5LDAgMTMzLjcwNTgsLTE3Mi40NDIwOCA5MC42OTkxLC0yNjMuNTU1MDggLTMzLjM3MzIsLTcwLjY4Mzc1IC05Mi41MzQsLTEyMS45MjMwNiAtMTY4LjMyNDEsLTEyMS45MjMwNiAtMTMzLjg0OTksMCAtMTE3LjA3NjQsMTgyLjQ1OTU5IC02NC44NjIyLDI5My4wODUyNCAxNC40MDExLDMwLjQ3NDIgNjMuNjAwNyw5Ni44OTggMTAyLjA4NTUsOTYuODk4IDE0LjEzOSwwIDI1Ljg1MzIsLTQuNTA1MSA0MC40MDE3LC00LjUwNTEgeiIKICAgICAgICBpbmtzY2FwZTpjb25uZWN0b3ItY3VydmF0dXJlPSIwIiAvPjxwYXRoCiAgICAgICAgaWQ9InBhdGgyNTYiCiAgICAgICAgc3R5bGU9ImZpbGw6bm9uZTtzdHJva2U6IzAwMDAwMDtzdHJva2Utd2lkdGg6MTMuMjUwOTg1MTU7c3Ryb2tlLWxpbmVjYXA6YnV0dDtzdHJva2UtbGluZWpvaW46bWl0ZXI7c3Ryb2tlLW1pdGVybGltaXQ6My44NjM3MDk5MztzdHJva2UtZGFzaGFycmF5Om5vbmU7c3Ryb2tlLW9wYWNpdHk6MSIKICAgICAgICBkPSJtIDE3ODIuMDMyNiwxMDg5Ljc0MjIgYyAtMTUuMDg5MiwwIC0yOC4zNTk4LC03LjQ1OTIgLTM1LjM1NTUsLTIyLjMwNjIgLTE0LjY5NjEsLTMxLjExNTEgNTguNTcwOSwtNjIuNjAzMiA0OC4wNTI3LC04NC44NzIxMiAtNi42MTg5LC0xNC4wMTYzNyAtMzEuODE2NywtMjcuMTM0MDIgLTQ0LjUzMDMsLTI3LjEzNDAyIC02My41MTg4LDAgLTYyLjk3ODIsODIuNjQ2MzQgLTI1LjExNTksMTM2LjUxMDQ0IC0yMy41NDMxLC0xNC45OTk0IC0zOC45NzYzLC0zNy45MTQgLTQ5LjAwMywtNTkuMTY3MiAtMzcuMjIzNCwtNzguODM4OTkgLTcuNjgzOSwtMTg3LjI5NTYgNzcuMjY0NSwtMTg3LjI5NTYgNDYuOTM4OCwwIDEwMS4wMDQzLDQyLjE3MjQzIDEyMi4wMDc5LDg2LjY4OTA2IDI1Ljg1MzIsNTQuNzM4NSAtNDAuMjU0MiwxNTcuNTc1NjQgLTkzLjMyMDQsMTU3LjU3NTY0IHoiCiAgICAgICAgaW5rc2NhcGU6Y29ubmVjdG9yLWN1cnZhdHVyZT0iMCIgLz48cGF0aAogICAgICAgIGlkPSJwYXRoMjU4IgogICAgICAgIHN0eWxlPSJmaWxsOiMwMDAwMDA7ZmlsbC1vcGFjaXR5OjE7ZmlsbC1ydWxlOmV2ZW5vZGQ7c3Ryb2tlOm5vbmU7c3Ryb2tlLXdpZHRoOjAuNDQ0Njc0OTEiCiAgICAgICAgZD0ibSAyMjIwLjY1MTcsODIxLjk0ODEgYyAtMjUuMDUwNCwtNTMuMDU5NDUgLTcxLjcyNywtODIuMTkwNTEgLTEyNC4yODUzLC04Mi4xOTA1MSAtMTY2LjgwMDQsMCAtMTk5Ljg5NSwxNTIuMDk4ODggLTEyNy42MTEsMzA1LjIzOTIxIDE3LjA3MTYsMzYuMTQ1NyA0NS4wODczLDc2LjEzMyA4Ny44NjQ3LDc2LjEzMyAxMzQuMDAwNiwwIDIyNy4zNTM3LC0xNjUuMDI4MzUgMTY0LjAzMTYsLTI5OS4xODE3IHogbSAtMTMzLjA4MzIsMjc5Ljk2NzYgYyAtMTIuMzA0LDAgLTIzLjEwMDcsLTQuNDQ4MyAtMjguOTk4OCwtMTYuOTUxMSAtMTIuOTc1NywtMjcuNDk3NCA1Ny42MjA3LC01Mi4wMTQ3IDU3LjcxOTEsLTgwLjQzMDQgLTcuMzcyNiwtOC43MzEwMSAtMjguMDE1OCwtMTguNTAzNTQgLTM3LjAxMDQsLTE4LjUwMzU0IC01MC44MzgsMCAtODkuMjA4MSw2OC45MjIwNCAtNDUuODA4MiwxMjAuMTQzNDQgLTE3LjYxMjMsLTExLjE4NTUgLTI4LjA2NSwtMjcuOTI3MyAtMzUuNTAzMSwtNDMuNjY4MiAtNDQuMDA2LC05My4yMTcwMyAxOC43MjY0LC0xODcuNDYwOTkgMTEwLjEyOTksLTE4Ny40NjA5OSAzOC4wNDI1LDAgODcuMDc4MywyMS4xNzIyMiAxMDYuODM2OCw2My4wNDEzIDI3Ljk2NjYsNTkuMjU2NTMgLTcxLjY0NSwxNjMuODI5NDkgLTEyNy4zNjUzLDE2My44Mjk0OSIKICAgICAgICBpbmtzY2FwZTpjb25uZWN0b3ItY3VydmF0dXJlPSIwIiAvPjxwYXRoCiAgICAgICAgaWQ9InBhdGgyNjAiCiAgICAgICAgc3R5bGU9ImZpbGw6bm9uZTtzdHJva2U6IzAwMDAwMDtzdHJva2Utd2lkdGg6MTMuMjUwOTg1MTU7c3Ryb2tlLWxpbmVjYXA6YnV0dDtzdHJva2UtbGluZWpvaW46bWl0ZXI7c3Ryb2tlLW1pdGVybGltaXQ6My44NjM3MDk5MztzdHJva2UtZGFzaGFycmF5Om5vbmU7c3Ryb2tlLW9wYWNpdHk6MSIKICAgICAgICBkPSJtIDIyMjAuNjUxNyw4MjEuOTQ4MSBjIC0yNS4wNTA0LC01My4wNTk0NSAtNzEuNzI3LC04Mi4xOTA1MSAtMTI0LjI4NTMsLTgyLjE5MDUxIC0xNjYuODAwNCwwIC0xOTkuODk1LDE1Mi4wOTg4OCAtMTI3LjYxMSwzMDUuMjM5MjEgMTcuMDcxNiwzNi4xNDU3IDQ1LjA4NzMsNzYuMTMzIDg3Ljg2NDcsNzYuMTMzIDEzNC4wMDA2LDAgMjI3LjM1MzcsLTE2NS4wMjgzNSAxNjQuMDMxNiwtMjk5LjE4MTcgeiIKICAgICAgICBpbmtzY2FwZTpjb25uZWN0b3ItY3VydmF0dXJlPSIwIiAvPjxwYXRoCiAgICAgICAgaWQ9InBhdGgyNjIiCiAgICAgICAgc3R5bGU9ImZpbGw6bm9uZTtzdHJva2U6IzAwMDAwMDtzdHJva2Utd2lkdGg6MTMuMjUwOTg1MTU7c3Ryb2tlLWxpbmVjYXA6YnV0dDtzdHJva2UtbGluZWpvaW46bWl0ZXI7c3Ryb2tlLW1pdGVybGltaXQ6My44NjM3MDk5MztzdHJva2UtZGFzaGFycmF5Om5vbmU7c3Ryb2tlLW9wYWNpdHk6MSIKICAgICAgICBkPSJtIDIwODcuNTY4NSwxMTAxLjkxNTcgYyAtMTIuMzA0LDAgLTIzLjEwMDcsLTQuNDQ4MyAtMjguOTk4OCwtMTYuOTUxMSAtMTIuOTc1NywtMjcuNDk3NCA1Ny42MjA3LC01Mi4wMTQ3IDU3LjcxOTEsLTgwLjQzMDQgLTcuMzcyNiwtOC43MzEwMSAtMjguMDE1OCwtMTguNTAzNTQgLTM3LjAxMDQsLTE4LjUwMzU0IC01MC44MzgsMCAtODkuMjA4MSw2OC45MjIwNCAtNDUuODA4MiwxMjAuMTQzNDQgLTE3LjYxMjMsLTExLjE4NTUgLTI4LjA2NSwtMjcuOTI3MyAtMzUuNTAzMSwtNDMuNjY4MiAtNDQuMDA2LC05My4yMTcwMyAxOC43MjY0LC0xODcuNDYwOTkgMTEwLjEyOTksLTE4Ny40NjA5OSAzOC4wNDI1LDAgODcuMDc4MywyMS4xNzIyMiAxMDYuODM2OCw2My4wNDEzIDI3Ljk2NjYsNTkuMjU2NTMgLTcxLjY0NSwxNjMuODI5NDkgLTEyNy4zNjUzLDE2My44Mjk0OSB6IgogICAgICAgIGlua3NjYXBlOmNvbm5lY3Rvci1jdXJ2YXR1cmU9IjAiIC8+PHBhdGgKICAgICAgICBpZD0icGF0aDI2NCIKICAgICAgICBzdHlsZT0iZmlsbDojMDAwMDAwO2ZpbGwtb3BhY2l0eToxO2ZpbGwtcnVsZTpub256ZXJvO3N0cm9rZTpub25lO3N0cm9rZS13aWR0aDowLjQ0NDY3NDkxIgogICAgICAgIGQ9Im0gMjM5My4xNTM1LDExMDIuODI3NCBjIDE0My43NDg4LDAgMjE2Ljc4NjUsLTI2My43ODIyMiAxNTIuNTQ2OCwtMzk5LjgzNjg3IC0xMi4yNzEzLC0yNi4wMTQ2MyAtMzUuMTU5LC01Mi4wMTQ3MyAtNjUuMzM3NCwtNTIuMDE0NzMgLTE2NC4yMjgyLDAgLTEyMi4zMDI5LDMyNi40MzczNyAtMjE0Ljc1NDksNDE5LjE4NTYgOC40NTM5LDguOTc5MiAxNi41NDczLDE4LjM3NzEgMjMuOTY5LDI3LjgzODEgNjIuNDcwMywtNzMuMzEzNSAzMS40MjM2LC0yNjYuMjU0NSAxNjQuODUwOCwtMjY2LjI1NDUgMzAuNzM1NCwwIDUzLjk4MzYsMjYuOTEzNDIgNjYuMzg1OSw1My4xNzk1MiAzMy4xMjc0LDcwLjE4OSAtMjguMTc5NiwxOTIuMDkyNTggLTk1LjI4NjQsMTkyLjA5MjU4IC0wLjY3MTcsMCAtMTAuMzA1MiwtMC4zOTkgLTEwLjA5MjIsLTQuMzAyMiAyLjQ3MzksLTQ0Ljc5NzMgMzcuNzE0OCwtMTYuODYzNSAyLjIyODEsLTkzLjEwMzUzIC0zNi4yNTY3LDcuMjIzOTIgLTc0LjY1OTYsNjUuNDI5MjMgLTU0LjgzNTUsMTA3LjQzMTMzIDUuODMyNSwxMi4zNDM5IDIwLjQzMDIsMTUuNzg0NyAzMC4zMjU4LDE1Ljc4NDciCiAgICAgICAgaW5rc2NhcGU6Y29ubmVjdG9yLWN1cnZhdHVyZT0iMCIgLz48cGF0aAogICAgICAgIGlkPSJwYXRoMjY2IgogICAgICAgIHN0eWxlPSJmaWxsOm5vbmU7c3Ryb2tlOiMwMDAwMDA7c3Ryb2tlLXdpZHRoOjEzLjI1MDk4NTE1O3N0cm9rZS1saW5lY2FwOmJ1dHQ7c3Ryb2tlLWxpbmVqb2luOm1pdGVyO3N0cm9rZS1taXRlcmxpbWl0OjMuODYzNzA5OTM7c3Ryb2tlLWRhc2hhcnJheTpub25lO3N0cm9rZS1vcGFjaXR5OjEiCiAgICAgICAgZD0ibSAyMzkzLjE1MzUsMTEwMi44Mjc0IGMgMTQzLjc0ODgsMCAyMTYuNzg2NSwtMjYzLjc4MjIyIDE1Mi41NDY4LC0zOTkuODM2ODcgLTEyLjI3MTMsLTI2LjAxNDYzIC0zNS4xNTksLTUyLjAxNDczIC02NS4zMzc0LC01Mi4wMTQ3MyAtMTY0LjIyODIsMCAtMTIyLjMwMjksMzI2LjQzNzM3IC0yMTQuNzU0OSw0MTkuMTg1NiA4LjQ1MzksOC45NzkyIDE2LjU0NzMsMTguMzc3MSAyMy45NjksMjcuODM4MSA2Mi40NzAzLC03My4zMTM1IDMxLjQyMzYsLTI2Ni4yNTQ1IDE2NC44NTA4LC0yNjYuMjU0NSAzMC43MzU0LDAgNTMuOTgzNiwyNi45MTM0MiA2Ni4zODU5LDUzLjE3OTUyIDMzLjEyNzQsNzAuMTg5IC0yOC4xNzk2LDE5Mi4wOTI1OCAtOTUuMjg2NCwxOTIuMDkyNTggLTAuNjcxNywwIC0xMC4zMDUyLC0wLjM5OSAtMTAuMDkyMiwtNC4zMDIyIDIuNDczOSwtNDQuNzk3MyAzNy43MTQ4LC0xNi44NjM1IDIuMjI4MSwtOTMuMTAzNTMgLTM2LjI1NjcsNy4yMjM5MiAtNzQuNjU5Niw2NS40MjkyMyAtNTQuODM1NSwxMDcuNDMxMzMgNS44MzI1LDEyLjM0MzkgMjAuNDMwMiwxNS43ODQ3IDMwLjMyNTgsMTUuNzg0NyB6IgogICAgICAgIGlua3NjYXBlOmNvbm5lY3Rvci1jdXJ2YXR1cmU9IjAiIC8+PHBhdGgKICAgICAgICBpZD0icGF0aDI2OCIKICAgICAgICBzdHlsZT0iZmlsbDojMDAwMDAwO2ZpbGwtb3BhY2l0eToxO2ZpbGwtcnVsZTpldmVub2RkO3N0cm9rZTpub25lO3N0cm9rZS13aWR0aDowLjQ0NDY3NDkxIgogICAgICAgIGQ9Im0gMjc1MC41OTIzLDExMDUuNzYyIGMgMTMuNTMyOCwtMS4yNzk5IDMzLjg4MSwtMC4wNyA0NS40OTcsLTMuNjA2MiAyLjE3OSwtMC42NTg3IDAuNTI0MiwtMy4zODQxIDAuOTAxMSwtNS41MzIgMy41MjI0LC0xOS45Mjk1IDkuMDc2NCwtMzguODQ1MiAxMy44NzY4LC01OC4xMDMxIDE4LjcyNjMsLTc1LjA0OTI5IDI5Ljk5ODIsLTE1Mi4wODc0OSA1MS40OTMzLC0yMjYuNDcxNjQgMjMuMzc5MiwtODAuOTg2ODIgNDcuNzU3OSwtMTcyLjI1MjMgMTkuNDQ3MiwtMjczLjg3NzU1IC0yLjc2ODgsLTkuOTQyODkgLTYuNDcxNCwtMjAuMDM4MjUgLTExLjI1NTQsLTMwLjE3MDkzIC0zMi4wOTUzLC02OC4wMDIxOCAtMTE0LjYxOSwtMTMyLjczMzg2IC0xODYuNzg4MywtMTMyLjczMzg2IC04Ljc2NTIsMCAtMTguMjE4NSwyLjQ3NzIgLTIyLjQxMjYsOC4xODEwOSAzMC40NTY5LDE5LjM1ODUxIDQ5LjUxMDksMzkuMjEzNDMgNjMuMTI1Niw2OC4wMzI5OSAxNi4zMTgsMzQuNTU1OTEgMTYuMDcyMiw2Ni45MTg1MSAxMy45MjYsOTYuNzA5ODEgNS43NjcsLTMuMzUzMiAyNC4yNDc1LC0xMS43MzA2MSAzMS45NDc4LC0xMS43MzA2MSAzMS4yMTA2LDAgNTguMDE0LDMwLjE4MzkxIDcwLjUzMDksNTYuNzE2MDYgMjMuMDAyNSw0OC43MjQ4MSAxOS4wNzA1LDk4LjQ1MjE0IDE1LjA4OTIsMTM5Ljk0NjQ5IC0xLjk5ODcsMjAuNzcxNDggLTQuODAwMyw0MS4yNjU1NyAtOC42NjY4LDYxLjE3MDc3IGwgLTUuODY1MywyOC44MjYxIC0wLjczNzMsMy4xNTY5MiAtMC43MjA5LDMuMTQ4NzkgYyAzLjQ4OTcsMCAwLjM2MDUsLTYuMTIwNzcgMC40OTE1LC05LjIwMTQ4IDIuMTQ2MywtNTAuMjMzNSAxLjI0NTIsLTEyMC4zNjQwNyAtMjUuNzM4NCwtMTc3LjUzNjAxIC0xMi41NDk4LC0yNi41NjQ2MiAtMzMuMDYxOSwtNTMuOTUzMzUgLTY0LjU1MSwtNTMuOTUzMzUgLTEzOC4wMTQ2LDAgLTY4LjU5NzcsMzkxLjQyODY2IC0xNzkuMjAyNyw0ODQuNDczNzEgNi4xMjc0LDEwLjEyMTQgMTEuNTk5NSwyMC41MzMxIDE2LjE4NjksMzAuNzQyIDY1LjQ1MjEsLTc5LjA0ODIgNjguODc2MiwtMjk2Ljk1NzU2IDE2NS4yMTEyLC0yOTYuOTU3NTYgMjMuMzc5MiwwIDQ3LjU0NDksMjEuOTEzNTggNTcuNDg5Nyw0Mi45NzA2MyA0Mi43OTM3LDkwLjY1NzEyIC0yOC4yOTQzLDE5Ni4yNjk5MyAtNTkuMjc1NSwyNTUuNzk4OTMiCiAgICAgICAgaW5rc2NhcGU6Y29ubmVjdG9yLWN1cnZhdHVyZT0iMCIgLz48cGF0aAogICAgICAgIGlkPSJwYXRoMjcwIgogICAgICAgIHN0eWxlPSJmaWxsOm5vbmU7c3Ryb2tlOiMwMDAwMDA7c3Ryb2tlLXdpZHRoOjEzLjI1MDk4NTE1O3N0cm9rZS1saW5lY2FwOmJ1dHQ7c3Ryb2tlLWxpbmVqb2luOm1pdGVyO3N0cm9rZS1taXRlcmxpbWl0OjMuODYzNzA5OTM7c3Ryb2tlLWRhc2hhcnJheTpub25lO3N0cm9rZS1vcGFjaXR5OjEiCiAgICAgICAgZD0ibSAyNzUwLjU5MjMsMTEwNS43NjIgYyAxMy41MzI4LC0xLjI3OTkgMzMuODgxLC0wLjA3IDQ1LjQ5NywtMy42MDYyIDIuMTc5LC0wLjY1ODcgMC41MjQyLC0zLjM4NDEgMC45MDExLC01LjUzMiAzLjUyMjQsLTE5LjkyOTUgOS4wNzY0LC0zOC44NDUyIDEzLjg3NjgsLTU4LjEwMzEgMTguNzI2MywtNzUuMDQ5MjkgMjkuOTk4MiwtMTUyLjA4NzQ5IDUxLjQ5MzMsLTIyNi40NzE2NCAyMy4zNzkyLC04MC45ODY4MiA0Ny43NTc5LC0xNzIuMjUyMyAxOS40NDcyLC0yNzMuODc3NTUgLTIuNzY4OCwtOS45NDI4OSAtNi40NzE0LC0yMC4wMzgyNSAtMTEuMjU1NCwtMzAuMTcwOTMgLTMyLjA5NTMsLTY4LjAwMjE4IC0xMTQuNjE5LC0xMzIuNzMzODYgLTE4Ni43ODgzLC0xMzIuNzMzODYgLTguNzY1MiwwIC0xOC4yMTg1LDIuNDc3MiAtMjIuNDEyNiw4LjE4MTA5IDMwLjQ1NjksMTkuMzU4NTEgNDkuNTEwOSwzOS4yMTM0MyA2My4xMjU2LDY4LjAzMjk5IDE2LjMxOCwzNC41NTU5MSAxNi4wNzIyLDY2LjkxODUxIDEzLjkyNiw5Ni43MDk4MSA1Ljc2NywtMy4zNTMyIDI0LjI0NzUsLTExLjczMDYxIDMxLjk0NzgsLTExLjczMDYxIDMxLjIxMDYsMCA1OC4wMTQsMzAuMTgzOTEgNzAuNTMwOSw1Ni43MTYwNiAyMy4wMDI1LDQ4LjcyNDgxIDE5LjA3MDUsOTguNDUyMTQgMTUuMDg5MiwxMzkuOTQ2NDkgLTEuOTk4NywyMC43NzE0OCAtNC44MDAzLDQxLjI2NTU3IC04LjY2NjgsNjEuMTcwNzcgbCAtNS44NjUzLDI4LjgyNjEgLTAuNzM3MywzLjE1NjkyIC0wLjcyMDksMy4xNDg3OSBjIDMuNDg5NywwIDAuMzYwNSwtNi4xMjA3NyAwLjQ5MTUsLTkuMjAxNDggMi4xNDYzLC01MC4yMzM1IDEuMjQ1MiwtMTIwLjM2NDA3IC0yNS43Mzg0LC0xNzcuNTM2MDEgLTEyLjU0OTgsLTI2LjU2NDYyIC0zMy4wNjE5LC01My45NTMzNSAtNjQuNTUxLC01My45NTMzNSAtMTM4LjAxNDYsMCAtNjguNTk3NywzOTEuNDI4NjYgLTE3OS4yMDI3LDQ4NC40NzM3MSA2LjEyNzQsMTAuMTIxNCAxMS41OTk1LDIwLjUzMzEgMTYuMTg2OSwzMC43NDIgNjUuNDUyMSwtNzkuMDQ4MiA2OC44NzYyLC0yOTYuOTU3NTYgMTY1LjIxMTIsLTI5Ni45NTc1NiAyMy4zNzkyLDAgNDcuNTQ0OSwyMS45MTM1OCA1Ny40ODk3LDQyLjk3MDYzIDQyLjc5MzcsOTAuNjU3MTIgLTI4LjI5NDMsMTk2LjI2OTkzIC01OS4yNzU1LDI1NS43OTg5MyB6IgogICAgICAgIGlua3NjYXBlOmNvbm5lY3Rvci1jdXJ2YXR1cmU9IjAiIC8+PHBhdGgKICAgICAgICBpZD0icGF0aDI3MiIKICAgICAgICBzdHlsZT0iZmlsbDojMDAwMDAwO2ZpbGwtb3BhY2l0eToxO2ZpbGwtcnVsZTpub256ZXJvO3N0cm9rZTpub25lO3N0cm9rZS13aWR0aDowLjQ0NDY3NDkxIgogICAgICAgIGQ9Im0gMTA1MC42NDU1LDE0MjUuNTE1NyBjIDk0LjkyOTIsMCAzOS42MDIxLC0yMzcuMjA3OCA1Ljg0MzksLTMwOC43MzM2IC0yOC45MDg2LC02MS4yMzQxIC05My45ODg4MiwtMTQ5LjU1MzUgLTE3MS4xMTkwNiwtMTQ5LjU1MzUgLTkyLjU0MDU1LDAgLTg5Ljc4ODEsMTAzLjY0ODMgLTUyLjk1MTQ1LDE4MS42NzQ0IDE5Ljk0MTk4LDQyLjI0MzggNTAuNTkwNTgsODkuNTk3OCA5Mi44MTU4LDEyNC40MTE2IC0xMC44MDgxOCwtMzYuMzM4NyAyNS43MjcwMiwtNjEuMTU5NCAxMC45NTA3NCwtOTIuNDY5MiAtMTAuMDkyMjYsLTIxLjM4MTQgLTMwLjk4MTIyLC00NC43NDIxIC00MS44MzUyOSwtNjcuNzM5MyAtMTcuNTU0OTIsLTM3LjE3OTIgLTEwLjg0NzUzLC0xMDMuMTY2NSAzMS41NjI4MSwtMTAzLjE2NjUgMzcuOTYzODUsMCA3MS42OTc0Nyw0Ny4wMjc5IDg1LjUyNjc1LDc2LjMyMjggMjguMzMyLDYwLjAyODcgOTkuMTcyNiwzMTYuMTE5OCAxOS45ODc5LDMxNi4xMTk4IC05MS4xOTcxLDAgLTI0OC4zNDQzMiwtMjIyLjIzNDQgLTI4MS4yNTIyMiwtMjkxLjk0MzIgLTU4LjczODE0LC0xMjQuNDI3ODIgLTE2LjE2MDY5LC0yNzcuNjkzMDggMTE3LjY3MjgxLC0yNzcuNjkzMDggOTAuNDI4NzMsMCAxNjQuODA4MjEsODYuOTM3MjggMjAwLjczNTUxLDE2My4wNTA3OCAyMS40MDE4LDQ1LjMzNDIgMzMuMDU1NCw5MC40NDE0IDM3LjY0NDQsMTMyLjk3NCBsIDE3LjU1NDksMy4yMTIgYyAzLjg3OCwtMTE3LjA4MDUgMTI3LjczODksLTMxMC45NDc5MiA3NS4wMTE5LC00MjIuNjM2MTIgLTY3LjQ4MDQsLTE0Mi45NTA4OSAtMjY5LjI1MywtMTQxLjY3MDkzIC0zODQuNDYxNzQsLTE5Mi40MDQwNyAtMjQuMjE2NDYsNTYuNjQ2MzMgLTU3LjAyMjgsMTA5LjMxMzE5IC0xMDMuMjE2MDcsMTQ5LjUwODExIDEwMi43NjcxMywzNC41Njg4OSAzNTUuMzA0MDEsOTIuNjE1MiA0MTAuMjE1MDEsMjA4Ljk0MzA5IDIzLjA3NzcsNDguODc3MjUgNy4zNjYsMTI5LjkxNDM5IC0xOS4yOTY1LDE1Ny4zNzkzOSAtNC41MzY2LC0xNy4yNzU2IC0xMC44MTQ4LC0zNC44ODUyOCAtMTkuMTQ3NCwtNTIuNTMzOTMgLTQ3LjAxOSwtOTkuNTk5MDUgLTE0Ny42ODkwNiwtMTc2Ljg0MDA2IC0yNTEuNDczNjEsLTE3Ni44NDAwNiAtMTQ0LjQ5NTkxLDAgLTIwNS43NTM3OSwxMDMuODMxNTkgLTEzNy43NTA4MiwyNDcuOTA4MjkgNDAuODEyOTQsODYuNDUwNiAyNDkuMjIyNTEsMzc0LjIwODMgMzU2Ljk4MTczLDM3NC4yMDgzIgogICAgICAgIGlua3NjYXBlOmNvbm5lY3Rvci1jdXJ2YXR1cmU9IjAiIC8+PHBhdGgKICAgICAgICBpZD0icGF0aDI3NCIKICAgICAgICBzdHlsZT0iZmlsbDpub25lO3N0cm9rZTojMDAwMDAwO3N0cm9rZS13aWR0aDoxNTkuMDA4NTQ0OTI7c3Ryb2tlLWxpbmVjYXA6YnV0dDtzdHJva2UtbGluZWpvaW46cm91bmQ7c3Ryb2tlLW1pdGVybGltaXQ6My44NjM2ODk5O3N0cm9rZS1kYXNoYXJyYXk6bm9uZTtzdHJva2Utb3BhY2l0eToxIgogICAgICAgIGQ9Im0gMTA1MC42NDU1LDE0MjUuNTE1NyBjIDk0LjkyOTIsMCAzOS42MDIxLC0yMzcuMjA3OCA1Ljg0MzksLTMwOC43MzM2IC0yOC45MDg2LC02MS4yMzQxIC05My45ODg4MiwtMTQ5LjU1MzUgLTE3MS4xMTkwNiwtMTQ5LjU1MzUgLTkyLjU0MDU1LDAgLTg5Ljc4ODEsMTAzLjY0ODMgLTUyLjk1MTQ1LDE4MS42NzQ0IDE5Ljk0MTk4LDQyLjI0MzggNTAuNTkwNTgsODkuNTk3OCA5Mi44MTU4LDEyNC40MTE2IC0xMC44MDgxOCwtMzYuMzM4NyAyNS43MjcwMiwtNjEuMTU5NCAxMC45NTA3NCwtOTIuNDY5MiAtMTAuMDkyMjYsLTIxLjM4MTQgLTMwLjk4MTIyLC00NC43NDIxIC00MS44MzUyOSwtNjcuNzM5MyAtMTcuNTU0OTIsLTM3LjE3OTIgLTEwLjg0NzUzLC0xMDMuMTY2NSAzMS41NjI4MSwtMTAzLjE2NjUgMzcuOTYzODUsMCA3MS42OTc0Nyw0Ny4wMjc5IDg1LjUyNjc1LDc2LjMyMjggMjguMzMyLDYwLjAyODcgOTkuMTcyNiwzMTYuMTE5OCAxOS45ODc5LDMxNi4xMTk4IC05MS4xOTcxLDAgLTI0OC4zNDQzMiwtMjIyLjIzNDQgLTI4MS4yNTIyMiwtMjkxLjk0MzIgLTU4LjczODE0LC0xMjQuNDI3ODIgLTE2LjE2MDY5LC0yNzcuNjkzMDggMTE3LjY3MjgxLC0yNzcuNjkzMDggOTAuNDI4NzMsMCAxNjQuODA4MjEsODYuOTM3MjggMjAwLjczNTUxLDE2My4wNTA3OCAyMS40MDE4LDQ1LjMzNDIgMzMuMDU1NCw5MC40NDE0IDM3LjY0NDQsMTMyLjk3NCBsIDE3LjU1NDksMy4yMTIgYyAzLjg3OCwtMTE3LjA4MDUgMTI3LjczODksLTMxMC45NDc5MiA3NS4wMTE5LC00MjIuNjM2MTIgLTY3LjQ4MDQsLTE0Mi45NTA4OSAtMjY5LjI1MywtMTQxLjY3MDkzIC0zODQuNDYxNzQsLTE5Mi40MDQwNyAtMjQuMjE2NDYsNTYuNjQ2MzMgLTU3LjAyMjgsMTA5LjMxMzE5IC0xMDMuMjE2MDcsMTQ5LjUwODExIDEwMi43NjcxMywzNC41Njg4OSAzNTUuMzA0MDEsOTIuNjE1MiA0MTAuMjE1MDEsMjA4Ljk0MzA5IDIzLjA3NzcsNDguODc3MjUgNy4zNjYsMTI5LjkxNDM5IC0xOS4yOTY1LDE1Ny4zNzkzOSAtNC41MzY2LC0xNy4yNzU2IC0xMC44MTQ4LC0zNC44ODUyOCAtMTkuMTQ3NCwtNTIuNTMzOTMgLTQ3LjAxOSwtOTkuNTk5MDUgLTE0Ny42ODkwNiwtMTc2Ljg0MDA2IC0yNTEuNDczNjEsLTE3Ni44NDAwNiAtMTQ0LjQ5NTkxLDAgLTIwNS43NTM3OSwxMDMuODMxNTkgLTEzNy43NTA4MiwyNDcuOTA4MjkgNDAuODEyOTQsODYuNDUwNiAyNDkuMjIyNTEsMzc0LjIwODMgMzU2Ljk4MTczLDM3NC4yMDgzIHoiCiAgICAgICAgaW5rc2NhcGU6Y29ubmVjdG9yLWN1cnZhdHVyZT0iMCIgLz48cGF0aAogICAgICAgIGlkPSJwYXRoMjc2IgogICAgICAgIHN0eWxlPSJmaWxsOiMwMDAwMDA7ZmlsbC1vcGFjaXR5OjE7ZmlsbC1ydWxlOm5vbnplcm87c3Ryb2tlOm5vbmU7c3Ryb2tlLXdpZHRoOjAuNDQ0Njc0OTEiCiAgICAgICAgZD0ibSAxMjk3LjUxMiwxMDgyLjIwMDMgYyA1Ljc0MDgsLTE0LjEwNTYgMjIuMzM1NiwtOTMuOTc2MzMgMzQuOTQyNywtOTMuOTc2MzMgMjcuMjE3OSwwIDc2LjQwNzgsNzQuMDU5NzMgODkuNjAzLDkzLjI4NjgzIDI0LjIwNSwtMTUuODQ5NSAxMC43NzcxLC00OS4xMjU1IDU1LjYzMzUsLTQ5LjEyNTUgMjAuMzA3MywwIDMwLjUyMDgsNDMuNzQ0NSA1MS42NTM4LDQ0LjQ1NSAwLjc0ODgsLTE3LjY4MTEgMS44ODA5LC0zMy42ODE1IC03Ljc1NzUsLTU0LjEwNTkgLTE0Ljg2NjQsLTMxLjQ5NDY0IC01Mi40NzgsLTc0LjE2ODM2IC04OS40NDksLTc0LjE2ODM2IC0yNi40ODIzLDAgLTYzLjM2NDgsMzEuODgyMzkgLTcwLjYwOTYsMzEuODgyMzkgLTcuODcyMywwIC0yMi4zMTYsLTMuNjgyNTMgLTI2LjkyNDcsLTEzLjQzMzk5IC0xOS4yNTA2LC00MC43OTE4OSAzMi4yMTgyLC0xNzYuOTY2NTYgODMuODM3NywtMTc2Ljk2NjU2IDI3LjU4MzIsMCA2MC40OTc3LDIwLjIzMjg5IDg5LjM0NzQsMzIuNzE3ODUgLTcuNTExOSwtNDkuMDY4NjggLTguNTU1NSwtOTAuNDQxMzcgMS4zODI3LC0xMzIuNjU5MjEgLTI2LjI5MDYsLTE2LjY1OTA3IC01Ny4wODY2LC0yMy42ODE4NyAtODEuODAxMSwtMjMuNjgxODcgLTEyNi44Mzc4LDAgLTU2Ljg4ODQsMjk0Ljk4IC0xNzMuODQ1MywzNTcuODI1MDUgbCA0My45ODY0LDU3Ljk1MDYiCiAgICAgICAgaW5rc2NhcGU6Y29ubmVjdG9yLWN1cnZhdHVyZT0iMCIgLz48cGF0aAogICAgICAgIGlkPSJwYXRoMjc4IgogICAgICAgIHN0eWxlPSJmaWxsOm5vbmU7c3Ryb2tlOiMwMDAwMDA7c3Ryb2tlLXdpZHRoOjE1OS4wMDg1NDQ5MjtzdHJva2UtbGluZWNhcDpidXR0O3N0cm9rZS1saW5lam9pbjpyb3VuZDtzdHJva2UtbWl0ZXJsaW1pdDozLjg2MzY4OTk7c3Ryb2tlLWRhc2hhcnJheTpub25lO3N0cm9rZS1vcGFjaXR5OjEiCiAgICAgICAgZD0ibSAxMjk3LjUxMiwxMDgyLjIwMDMgYyA1Ljc0MDgsLTE0LjEwNTYgMjIuMzM1NiwtOTMuOTc2MzMgMzQuOTQyNywtOTMuOTc2MzMgMjcuMjE3OSwwIDc2LjQwNzgsNzQuMDU5NzMgODkuNjAzLDkzLjI4NjgzIDI0LjIwNSwtMTUuODQ5NSAxMC43NzcxLC00OS4xMjU1IDU1LjYzMzUsLTQ5LjEyNTUgMjAuMzA3MywwIDMwLjUyMDgsNDMuNzQ0NSA1MS42NTM4LDQ0LjQ1NSAwLjc0ODgsLTE3LjY4MTEgMS44ODA5LC0zMy42ODE1IC03Ljc1NzUsLTU0LjEwNTkgLTE0Ljg2NjQsLTMxLjQ5NDY0IC01Mi40NzgsLTc0LjE2ODM2IC04OS40NDksLTc0LjE2ODM2IC0yNi40ODIzLDAgLTYzLjM2NDgsMzEuODgyMzkgLTcwLjYwOTYsMzEuODgyMzkgLTcuODcyMywwIC0yMi4zMTYsLTMuNjgyNTMgLTI2LjkyNDcsLTEzLjQzMzk5IC0xOS4yNTA2LC00MC43OTE4OSAzMi4yMTgyLC0xNzYuOTY2NTYgODMuODM3NywtMTc2Ljk2NjU2IDI3LjU4MzIsMCA2MC40OTc3LDIwLjIzMjg5IDg5LjM0NzQsMzIuNzE3ODUgLTcuNTExOSwtNDkuMDY4NjggLTguNTU1NSwtOTAuNDQxMzcgMS4zODI3LC0xMzIuNjU5MjEgLTI2LjI5MDYsLTE2LjY1OTA3IC01Ny4wODY2LC0yMy42ODE4NyAtODEuODAxMSwtMjMuNjgxODcgLTEyNi44Mzc4LDAgLTU2Ljg4ODQsMjk0Ljk4IC0xNzMuODQ1MywzNTcuODI1MDUgeiIKICAgICAgICBpbmtzY2FwZTpjb25uZWN0b3ItY3VydmF0dXJlPSIwIiAvPjxwYXRoCiAgICAgICAgaWQ9InBhdGgyODAiCiAgICAgICAgc3R5bGU9ImZpbGw6IzAwMDAwMDtmaWxsLW9wYWNpdHk6MTtmaWxsLXJ1bGU6ZXZlbm9kZDtzdHJva2U6bm9uZTtzdHJva2Utd2lkdGg6MC40NDQ2NzQ5MSIKICAgICAgICBkPSJtIDE3ODQuOTk4LDExMDUuODM4MyBjIDk1Ljg1OTksMCAxMzMuNzA1OCwtMTcyLjQ0MjA4IDkwLjY5OTEsLTI2My41NTUwOCAtMzMuMzczMiwtNzAuNjgzNzUgLTkyLjUzNCwtMTIxLjkyMzA2IC0xNjguMzI0MSwtMTIxLjkyMzA2IC0xMzMuODQ5OSwwIC0xMTcuMDc2NCwxODIuNDU5NTkgLTY0Ljg2MjIsMjkzLjA4NTI0IDE0LjQwMTEsMzAuNDc0MiA2My42MDA3LDk2Ljg5OCAxMDIuMDg1NSw5Ni44OTggMTQuMTM5LDAgMjUuODUzMiwtNC41MDUxIDQwLjQwMTcsLTQuNTA1MSB6IG0gLTIuOTY1NCwtMTYuMDk2MSBjIC0xNS4wODkyLDAgLTI4LjM1OTgsLTcuNDU5MiAtMzUuMzU1NSwtMjIuMzA2MiAtMTQuNjk2MSwtMzEuMTE1MSA1OC41NzA5LC02Mi42MDMyIDQ4LjA1MjcsLTg0Ljg3MjEyIC02LjYxODksLTE0LjAxNjM3IC0zMS44MTY3LC0yNy4xMzQwMiAtNDQuNTMwMywtMjcuMTM0MDIgLTYzLjUxODgsMCAtNjIuOTc4Miw4Mi42NDYzNCAtMjUuMTE1OSwxMzYuNTEwNDQgLTIzLjU0MzEsLTE0Ljk5OTQgLTM4Ljk3NjMsLTM3LjkxNCAtNDkuMDAzLC01OS4xNjcyIC0zNy4yMjM0LC03OC44Mzg5OSAtNy42ODM5LC0xODcuMjk1NiA3Ny4yNjQ1LC0xODcuMjk1NiA0Ni45Mzg4LDAgMTAxLjAwNDMsNDIuMTcyNDMgMTIyLjAwNzksODYuNjg5MDYgMjUuODUzMiw1NC43Mzg1IC00MC4yNTQyLDE1Ny41NzU2NCAtOTMuMzIwNCwxNTcuNTc1NjQiCiAgICAgICAgaW5rc2NhcGU6Y29ubmVjdG9yLWN1cnZhdHVyZT0iMCIgLz48cGF0aAogICAgICAgIGlkPSJwYXRoMjgyIgogICAgICAgIHN0eWxlPSJmaWxsOm5vbmU7c3Ryb2tlOiMwMDAwMDA7c3Ryb2tlLXdpZHRoOjE1OS4wMDg1NDQ5MjtzdHJva2UtbGluZWNhcDpidXR0O3N0cm9rZS1saW5lam9pbjpyb3VuZDtzdHJva2UtbWl0ZXJsaW1pdDozLjg2MzY4OTk7c3Ryb2tlLWRhc2hhcnJheTpub25lO3N0cm9rZS1vcGFjaXR5OjEiCiAgICAgICAgZD0ibSAxNzg0Ljk5OCwxMTA1LjgzODMgYyA5NS44NTk5LDAgMTMzLjcwNTgsLTE3Mi40NDIwOCA5MC42OTkxLC0yNjMuNTU1MDggLTMzLjM3MzIsLTcwLjY4Mzc1IC05Mi41MzQsLTEyMS45MjMwNiAtMTY4LjMyNDEsLTEyMS45MjMwNiAtMTMzLjg0OTksMCAtMTE3LjA3NjQsMTgyLjQ1OTU5IC02NC44NjIyLDI5My4wODUyNCAxNC40MDExLDMwLjQ3NDIgNjMuNjAwNyw5Ni44OTggMTAyLjA4NTUsOTYuODk4IDE0LjEzOSwwIDI1Ljg1MzIsLTQuNTA1MSA0MC40MDE3LC00LjUwNTEgeiIKICAgICAgICBpbmtzY2FwZTpjb25uZWN0b3ItY3VydmF0dXJlPSIwIiAvPjxwYXRoCiAgICAgICAgaWQ9InBhdGgyODQiCiAgICAgICAgc3R5bGU9ImZpbGw6bm9uZTtzdHJva2U6IzAwMDAwMDtzdHJva2Utd2lkdGg6MTU5LjAwODU0NDkyO3N0cm9rZS1saW5lY2FwOmJ1dHQ7c3Ryb2tlLWxpbmVqb2luOnJvdW5kO3N0cm9rZS1taXRlcmxpbWl0OjMuODYzNjg5OTtzdHJva2UtZGFzaGFycmF5Om5vbmU7c3Ryb2tlLW9wYWNpdHk6MSIKICAgICAgICBkPSJtIDE3ODIuMDMyNiwxMDg5Ljc0MjIgYyAtMTUuMDg5MiwwIC0yOC4zNTk4LC03LjQ1OTIgLTM1LjM1NTUsLTIyLjMwNjIgLTE0LjY5NjEsLTMxLjExNTEgNTguNTcwOSwtNjIuNjAzMiA0OC4wNTI3LC04NC44NzIxMiAtNi42MTg5LC0xNC4wMTYzNyAtMzEuODE2NywtMjcuMTM0MDIgLTQ0LjUzMDMsLTI3LjEzNDAyIC02My41MTg4LDAgLTYyLjk3ODIsODIuNjQ2MzQgLTI1LjExNTksMTM2LjUxMDQ0IC0yMy41NDMxLC0xNC45OTk0IC0zOC45NzYzLC0zNy45MTQgLTQ5LjAwMywtNTkuMTY3MiAtMzcuMjIzNCwtNzguODM4OTkgLTcuNjgzOSwtMTg3LjI5NTYgNzcuMjY0NSwtMTg3LjI5NTYgNDYuOTM4OCwwIDEwMS4wMDQzLDQyLjE3MjQzIDEyMi4wMDc5LDg2LjY4OTA2IDI1Ljg1MzIsNTQuNzM4NSAtNDAuMjU0MiwxNTcuNTc1NjQgLTkzLjMyMDQsMTU3LjU3NTY0IHoiCiAgICAgICAgaW5rc2NhcGU6Y29ubmVjdG9yLWN1cnZhdHVyZT0iMCIgLz48cGF0aAogICAgICAgIGlkPSJwYXRoMjg2IgogICAgICAgIHN0eWxlPSJmaWxsOiMwMDAwMDA7ZmlsbC1vcGFjaXR5OjE7ZmlsbC1ydWxlOmV2ZW5vZGQ7c3Ryb2tlOm5vbmU7c3Ryb2tlLXdpZHRoOjAuNDQ0Njc0OTEiCiAgICAgICAgZD0ibSAyMjIwLjY1MTcsODIxLjk0ODEgYyAtMjUuMDUwNCwtNTMuMDU5NDUgLTcxLjcyNywtODIuMTkwNTEgLTEyNC4yODUzLC04Mi4xOTA1MSAtMTY2LjgwMDQsMCAtMTk5Ljg5NSwxNTIuMDk4ODggLTEyNy42MTEsMzA1LjIzOTIxIDE3LjA3MTYsMzYuMTQ1NyA0NS4wODczLDc2LjEzMyA4Ny44NjQ3LDc2LjEzMyAxMzQuMDAwNiwwIDIyNy4zNTM3LC0xNjUuMDI4MzUgMTY0LjAzMTYsLTI5OS4xODE3IHogbSAtMTMzLjA4MzIsMjc5Ljk2NzYgYyAtMTIuMzA0LDAgLTIzLjEwMDcsLTQuNDQ4MyAtMjguOTk4OCwtMTYuOTUxMSAtMTIuOTc1NywtMjcuNDk3NCA1Ny42MjA3LC01Mi4wMTQ3IDU3LjcxOTEsLTgwLjQzMDQgLTcuMzcyNiwtOC43MzEwMSAtMjguMDE1OCwtMTguNTAzNTQgLTM3LjAxMDQsLTE4LjUwMzU0IC01MC44MzgsMCAtODkuMjA4MSw2OC45MjIwNCAtNDUuODA4MiwxMjAuMTQzNDQgLTE3LjYxMjMsLTExLjE4NTUgLTI4LjA2NSwtMjcuOTI3MyAtMzUuNTAzMSwtNDMuNjY4MiAtNDQuMDA2LC05My4yMTcwMyAxOC43MjY0LC0xODcuNDYwOTkgMTEwLjEyOTksLTE4Ny40NjA5OSAzOC4wNDI1LDAgODcuMDc4MywyMS4xNzIyMiAxMDYuODM2OCw2My4wNDEzIDI3Ljk2NjYsNTkuMjU2NTMgLTcxLjY0NSwxNjMuODI5NDkgLTEyNy4zNjUzLDE2My44Mjk0OSIKICAgICAgICBpbmtzY2FwZTpjb25uZWN0b3ItY3VydmF0dXJlPSIwIiAvPjxwYXRoCiAgICAgICAgaWQ9InBhdGgyODgiCiAgICAgICAgc3R5bGU9ImZpbGw6bm9uZTtzdHJva2U6IzAwMDAwMDtzdHJva2Utd2lkdGg6MTU5LjAwODU0NDkyO3N0cm9rZS1saW5lY2FwOmJ1dHQ7c3Ryb2tlLWxpbmVqb2luOnJvdW5kO3N0cm9rZS1taXRlcmxpbWl0OjMuODYzNjg5OTtzdHJva2UtZGFzaGFycmF5Om5vbmU7c3Ryb2tlLW9wYWNpdHk6MSIKICAgICAgICBkPSJtIDIyMjAuNjUxNyw4MjEuOTQ4MSBjIC0yNS4wNTA0LC01My4wNTk0NSAtNzEuNzI3LC04Mi4xOTA1MSAtMTI0LjI4NTMsLTgyLjE5MDUxIC0xNjYuODAwNCwwIC0xOTkuODk1LDE1Mi4wOTg4OCAtMTI3LjYxMSwzMDUuMjM5MjEgMTcuMDcxNiwzNi4xNDU3IDQ1LjA4NzMsNzYuMTMzIDg3Ljg2NDcsNzYuMTMzIDEzNC4wMDA2LDAgMjI3LjM1MzcsLTE2NS4wMjgzNSAxNjQuMDMxNiwtMjk5LjE4MTcgeiIKICAgICAgICBpbmtzY2FwZTpjb25uZWN0b3ItY3VydmF0dXJlPSIwIiAvPjxwYXRoCiAgICAgICAgaWQ9InBhdGgyOTAiCiAgICAgICAgc3R5bGU9ImZpbGw6bm9uZTtzdHJva2U6IzAwMDAwMDtzdHJva2Utd2lkdGg6MTU5LjAwODU0NDkyO3N0cm9rZS1saW5lY2FwOmJ1dHQ7c3Ryb2tlLWxpbmVqb2luOnJvdW5kO3N0cm9rZS1taXRlcmxpbWl0OjMuODYzNjg5OTtzdHJva2UtZGFzaGFycmF5Om5vbmU7c3Ryb2tlLW9wYWNpdHk6MSIKICAgICAgICBkPSJtIDIwODcuNTY4NSwxMTAxLjkxNTcgYyAtMTIuMzA0LDAgLTIzLjEwMDcsLTQuNDQ4MyAtMjguOTk4OCwtMTYuOTUxMSAtMTIuOTc1NywtMjcuNDk3NCA1Ny42MjA3LC01Mi4wMTQ3IDU3LjcxOTEsLTgwLjQzMDQgLTcuMzcyNiwtOC43MzEwMSAtMjguMDE1OCwtMTguNTAzNTQgLTM3LjAxMDQsLTE4LjUwMzU0IC01MC44MzgsMCAtODkuMjA4MSw2OC45MjIwNCAtNDUuODA4MiwxMjAuMTQzNDQgLTE3LjYxMjMsLTExLjE4NTUgLTI4LjA2NSwtMjcuOTI3MyAtMzUuNTAzMSwtNDMuNjY4MiAtNDQuMDA2LC05My4yMTcwMyAxOC43MjY0LC0xODcuNDYwOTkgMTEwLjEyOTksLTE4Ny40NjA5OSAzOC4wNDI1LDAgODcuMDc4MywyMS4xNzIyMiAxMDYuODM2OCw2My4wNDEzIDI3Ljk2NjYsNTkuMjU2NTMgLTcxLjY0NSwxNjMuODI5NDkgLTEyNy4zNjUzLDE2My44Mjk0OSB6IgogICAgICAgIGlua3NjYXBlOmNvbm5lY3Rvci1jdXJ2YXR1cmU9IjAiIC8+PHBhdGgKICAgICAgICBpZD0icGF0aDI5MiIKICAgICAgICBzdHlsZT0iZmlsbDojMDAwMDAwO2ZpbGwtb3BhY2l0eToxO2ZpbGwtcnVsZTpub256ZXJvO3N0cm9rZTpub25lO3N0cm9rZS13aWR0aDowLjQ0NDY3NDkxIgogICAgICAgIGQ9Im0gMjM5My4xNTM1LDExMDIuODI3NCBjIDE0My43NDg4LDAgMjE2Ljc4NjUsLTI2My43ODIyMiAxNTIuNTQ2OCwtMzk5LjgzNjg3IC0xMi4yNzEzLC0yNi4wMTQ2MyAtMzUuMTU5LC01Mi4wMTQ3MyAtNjUuMzM3NCwtNTIuMDE0NzMgLTE2NC4yMjgyLDAgLTEyMi4zMDI5LDMyNi40MzczNyAtMjE0Ljc1NDksNDE5LjE4NTYgOC40NTM5LDguOTc5MiAxNi41NDczLDE4LjM3NzEgMjMuOTY5LDI3LjgzODEgNjIuNDcwMywtNzMuMzEzNSAzMS40MjM2LC0yNjYuMjU0NSAxNjQuODUwOCwtMjY2LjI1NDUgMzAuNzM1NCwwIDUzLjk4MzYsMjYuOTEzNDIgNjYuMzg1OSw1My4xNzk1MiAzMy4xMjc0LDcwLjE4OSAtMjguMTc5NiwxOTIuMDkyNTggLTk1LjI4NjQsMTkyLjA5MjU4IC0wLjY3MTcsMCAtMTAuMzA1MiwtMC4zOTkgLTEwLjA5MjIsLTQuMzAyMiAyLjQ3MzksLTQ0Ljc5NzMgMzcuNzE0OCwtMTYuODYzNSAyLjIyODEsLTkzLjEwMzUzIC0zNi4yNTY3LDcuMjIzOTIgLTc0LjY1OTYsNjUuNDI5MjMgLTU0LjgzNTUsMTA3LjQzMTMzIDUuODMyNSwxMi4zNDM5IDIwLjQzMDIsMTUuNzg0NyAzMC4zMjU4LDE1Ljc4NDciCiAgICAgICAgaW5rc2NhcGU6Y29ubmVjdG9yLWN1cnZhdHVyZT0iMCIgLz48cGF0aAogICAgICAgIGlkPSJwYXRoMjk0IgogICAgICAgIHN0eWxlPSJmaWxsOm5vbmU7c3Ryb2tlOiMwMDAwMDA7c3Ryb2tlLXdpZHRoOjE1OS4wMDg1NDQ5MjtzdHJva2UtbGluZWNhcDpidXR0O3N0cm9rZS1saW5lam9pbjpyb3VuZDtzdHJva2UtbWl0ZXJsaW1pdDozLjg2MzY4OTk7c3Ryb2tlLWRhc2hhcnJheTpub25lO3N0cm9rZS1vcGFjaXR5OjEiCiAgICAgICAgZD0ibSAyMzkzLjE1MzUsMTEwMi44Mjc0IGMgMTQzLjc0ODgsMCAyMTYuNzg2NSwtMjYzLjc4MjIyIDE1Mi41NDY4LC0zOTkuODM2ODcgLTEyLjI3MTMsLTI2LjAxNDYzIC0zNS4xNTksLTUyLjAxNDczIC02NS4zMzc0LC01Mi4wMTQ3MyAtMTY0LjIyODIsMCAtMTIyLjMwMjksMzI2LjQzNzM3IC0yMTQuNzU0OSw0MTkuMTg1NiA4LjQ1MzksOC45NzkyIDE2LjU0NzMsMTguMzc3MSAyMy45NjksMjcuODM4MSA2Mi40NzAzLC03My4zMTM1IDMxLjQyMzYsLTI2Ni4yNTQ1IDE2NC44NTA4LC0yNjYuMjU0NSAzMC43MzU0LDAgNTMuOTgzNiwyNi45MTM0MiA2Ni4zODU5LDUzLjE3OTUyIDMzLjEyNzQsNzAuMTg5IC0yOC4xNzk2LDE5Mi4wOTI1OCAtOTUuMjg2NCwxOTIuMDkyNTggLTAuNjcxNywwIC0xMC4zMDUyLC0wLjM5OSAtMTAuMDkyMiwtNC4zMDIyIDIuNDczOSwtNDQuNzk3MyAzNy43MTQ4LC0xNi44NjM1IDIuMjI4MSwtOTMuMTAzNTMgLTM2LjI1NjcsNy4yMjM5MiAtNzQuNjU5Niw2NS40MjkyMyAtNTQuODM1NSwxMDcuNDMxMzMgNS44MzI1LDEyLjM0MzkgMjAuNDMwMiwxNS43ODQ3IDMwLjMyNTgsMTUuNzg0NyB6IgogICAgICAgIGlua3NjYXBlOmNvbm5lY3Rvci1jdXJ2YXR1cmU9IjAiIC8+PHBhdGgKICAgICAgICBpZD0icGF0aDI5NiIKICAgICAgICBzdHlsZT0iZmlsbDojMDAwMDAwO2ZpbGwtb3BhY2l0eToxO2ZpbGwtcnVsZTpldmVub2RkO3N0cm9rZTpub25lO3N0cm9rZS13aWR0aDowLjQ0NDY3NDkxIgogICAgICAgIGQ9Im0gMjc1MC41OTIzLDExMDUuNzYyIGMgMTMuNTMyOCwtMS4yNzk5IDMzLjg4MSwtMC4wNyA0NS40OTcsLTMuNjA2MiAyLjE3OSwtMC42NTg3IDAuNTI0MiwtMy4zODQxIDAuOTAxMSwtNS41MzIgMy41MjI0LC0xOS45Mjk1IDkuMDc2NCwtMzguODQ1MiAxMy44NzY4LC01OC4xMDMxIDE4LjcyNjMsLTc1LjA0OTI5IDI5Ljk5ODIsLTE1Mi4wODc0OSA1MS40OTMzLC0yMjYuNDcxNjQgMjMuMzc5MiwtODAuOTg2ODIgNDcuNzU3OSwtMTcyLjI1MjMgMTkuNDQ3MiwtMjczLjg3NzU1IC0yLjc2ODgsLTkuOTQyODkgLTYuNDcxNCwtMjAuMDM4MjUgLTExLjI1NTQsLTMwLjE3MDkzIC0zMi4wOTUzLC02OC4wMDIxOCAtMTE0LjYxOSwtMTMyLjczMzg2IC0xODYuNzg4MywtMTMyLjczMzg2IC04Ljc2NTIsMCAtMTguMjE4NSwyLjQ3NzIgLTIyLjQxMjYsOC4xODEwOSAzMC40NTY5LDE5LjM1ODUxIDQ5LjUxMDksMzkuMjEzNDMgNjMuMTI1Niw2OC4wMzI5OSAxNi4zMTgsMzQuNTU1OTEgMTYuMDcyMiw2Ni45MTg1MSAxMy45MjYsOTYuNzA5ODEgNS43NjcsLTMuMzUzMiAyNC4yNDc1LC0xMS43MzA2MSAzMS45NDc4LC0xMS43MzA2MSAzMS4yMTA2LDAgNTguMDE0LDMwLjE4MzkxIDcwLjUzMDksNTYuNzE2MDYgMjMuMDAyNSw0OC43MjQ4MSAxOS4wNzA1LDk4LjQ1MjE0IDE1LjA4OTIsMTM5Ljk0NjQ5IC0xLjk5ODcsMjAuNzcxNDggLTQuODAwMyw0MS4yNjU1NyAtOC42NjY4LDYxLjE3MDc3IGwgLTUuODY1MywyOC44MjYxIC0wLjczNzMsMy4xNTY5MiAtMC43MjA5LDMuMTQ4NzkgYyAzLjQ4OTcsMCAwLjM2MDUsLTYuMTIwNzcgMC40OTE1LC05LjIwMTQ4IDIuMTQ2MywtNTAuMjMzNSAxLjI0NTIsLTEyMC4zNjQwNyAtMjUuNzM4NCwtMTc3LjUzNjAxIC0xMi41NDk4LC0yNi41NjQ2MiAtMzMuMDYxOSwtNTMuOTUzMzUgLTY0LjU1MSwtNTMuOTUzMzUgLTEzOC4wMTQ2LDAgLTY4LjU5NzcsMzkxLjQyODY2IC0xNzkuMjAyNyw0ODQuNDczNzEgNi4xMjc0LDEwLjEyMTQgMTEuNTk5NSwyMC41MzMxIDE2LjE4NjksMzAuNzQyIDY1LjQ1MjEsLTc5LjA0ODIgNjguODc2MiwtMjk2Ljk1NzU2IDE2NS4yMTEyLC0yOTYuOTU3NTYgMjMuMzc5MiwwIDQ3LjU0NDksMjEuOTEzNTggNTcuNDg5Nyw0Mi45NzA2MyA0Mi43OTM3LDkwLjY1NzEyIC0yOC4yOTQzLDE5Ni4yNjk5MyAtNTkuMjc1NSwyNTUuNzk4OTMiCiAgICAgICAgaW5rc2NhcGU6Y29ubmVjdG9yLWN1cnZhdHVyZT0iMCIgLz48cGF0aAogICAgICAgIGlkPSJwYXRoMjk4IgogICAgICAgIHN0eWxlPSJmaWxsOm5vbmU7c3Ryb2tlOiMwMDAwMDA7c3Ryb2tlLXdpZHRoOjE1OS4wMDg1NDQ5MjtzdHJva2UtbGluZWNhcDpidXR0O3N0cm9rZS1saW5lam9pbjpyb3VuZDtzdHJva2UtbWl0ZXJsaW1pdDozLjg2MzY4OTk7c3Ryb2tlLWRhc2hhcnJheTpub25lO3N0cm9rZS1vcGFjaXR5OjEiCiAgICAgICAgZD0ibSAyNzUwLjU5MjMsMTEwNS43NjIgYyAxMy41MzI4LC0xLjI3OTkgMzMuODgxLC0wLjA3IDQ1LjQ5NywtMy42MDYyIDIuMTc5LC0wLjY1ODcgMC41MjQyLC0zLjM4NDEgMC45MDExLC01LjUzMiAzLjUyMjQsLTE5LjkyOTUgOS4wNzY0LC0zOC44NDUyIDEzLjg3NjgsLTU4LjEwMzEgMTguNzI2MywtNzUuMDQ5MjkgMjkuOTk4MiwtMTUyLjA4NzQ5IDUxLjQ5MzMsLTIyNi40NzE2NCAyMy4zNzkyLC04MC45ODY4MiA0Ny43NTc5LC0xNzIuMjUyMyAxOS40NDcyLC0yNzMuODc3NTUgLTIuNzY4OCwtOS45NDI4OSAtNi40NzE0LC0yMC4wMzgyNSAtMTEuMjU1NCwtMzAuMTcwOTMgLTMyLjA5NTMsLTY4LjAwMjE4IC0xMTQuNjE5LC0xMzIuNzMzODYgLTE4Ni43ODgzLC0xMzIuNzMzODYgLTguNzY1MiwwIC0xOC4yMTg1LDIuNDc3MiAtMjIuNDEyNiw4LjE4MTA5IDMwLjQ1NjksMTkuMzU4NTEgNDkuNTEwOSwzOS4yMTM0MyA2My4xMjU2LDY4LjAzMjk5IDE2LjMxOCwzNC41NTU5MSAxNi4wNzIyLDY2LjkxODUxIDEzLjkyNiw5Ni43MDk4MSA1Ljc2NywtMy4zNTMyIDI0LjI0NzUsLTExLjczMDYxIDMxLjk0NzgsLTExLjczMDYxIDMxLjIxMDYsMCA1OC4wMTQsMzAuMTgzOTEgNzAuNTMwOSw1Ni43MTYwNiAyMy4wMDI1LDQ4LjcyNDgxIDE5LjA3MDUsOTguNDUyMTQgMTUuMDg5MiwxMzkuOTQ2NDkgLTEuOTk4NywyMC43NzE0OCAtNC44MDAzLDQxLjI2NTU3IC04LjY2NjgsNjEuMTcwNzcgbCAtNS44NjUzLDI4LjgyNjEgLTAuNzM3MywzLjE1NjkyIC0wLjcyMDksMy4xNDg3OSBjIDMuNDg5NywwIDAuMzYwNSwtNi4xMjA3NyAwLjQ5MTUsLTkuMjAxNDggMi4xNDYzLC01MC4yMzM1IDEuMjQ1MiwtMTIwLjM2NDA3IC0yNS43Mzg0LC0xNzcuNTM2MDEgLTEyLjU0OTgsLTI2LjU2NDYyIC0zMy4wNjE5LC01My45NTMzNSAtNjQuNTUxLC01My45NTMzNSAtMTM4LjAxNDYsMCAtNjguNTk3NywzOTEuNDI4NjYgLTE3OS4yMDI3LDQ4NC40NzM3MSA2LjEyNzQsMTAuMTIxNCAxMS41OTk1LDIwLjUzMzEgMTYuMTg2OSwzMC43NDIgNjUuNDUyMSwtNzkuMDQ4MiA2OC44NzYyLC0yOTYuOTU3NTYgMTY1LjIxMTIsLTI5Ni45NTc1NiAyMy4zNzkyLDAgNDcuNTQ0OSwyMS45MTM1OCA1Ny40ODk3LDQyLjk3MDYzIDQyLjc5MzcsOTAuNjU3MTIgLTI4LjI5NDMsMTk2LjI2OTkzIC01OS4yNzU1LDI1NS43OTg5MyB6IgogICAgICAgIGlua3NjYXBlOmNvbm5lY3Rvci1jdXJ2YXR1cmU9IjAiIC8+PHBhdGgKICAgICAgICBpZD0icGF0aDMwMCIKICAgICAgICBzdHlsZT0iZmlsbDojZmZmZmZmO2ZpbGwtb3BhY2l0eToxO2ZpbGwtcnVsZTpub256ZXJvO3N0cm9rZTpub25lO3N0cm9rZS13aWR0aDowLjQ0NDY3NDkxIgogICAgICAgIGQ9Im0gMTA1MC42NDU1LDE0MjUuNTE1NyBjIDk0LjkyOTIsMCAzOS42MDIxLC0yMzcuMjA3OCA1Ljg0MzksLTMwOC43MzM2IC0yOC45MDg2LC02MS4yMzQxIC05My45ODg4MiwtMTQ5LjU1MzUgLTE3MS4xMTkwNiwtMTQ5LjU1MzUgLTkyLjU0MDU1LDAgLTg5Ljc4ODEsMTAzLjY0ODMgLTUyLjk1MTQ1LDE4MS42NzQ0IDE5Ljk0MTk4LDQyLjI0MzggNTAuNTkwNTgsODkuNTk3OCA5Mi44MTU4LDEyNC40MTE2IC0xMC44MDgxOCwtMzYuMzM4NyAyNS43MjcwMiwtNjEuMTU5NCAxMC45NTA3NCwtOTIuNDY5MiAtMTAuMDkyMjYsLTIxLjM4MTQgLTMwLjk4MTIyLC00NC43NDIxIC00MS44MzUyOSwtNjcuNzM5MyAtMTcuNTU0OTIsLTM3LjE3OTIgLTEwLjg0NzUzLC0xMDMuMTY2NSAzMS41NjI4MSwtMTAzLjE2NjUgMzcuOTYzODUsMCA3MS42OTc0Nyw0Ny4wMjc5IDg1LjUyNjc1LDc2LjMyMjggMjguMzMyLDYwLjAyODcgOTkuMTcyNiwzMTYuMTE5OCAxOS45ODc5LDMxNi4xMTk4IC05MS4xOTcxLDAgLTI0OC4zNDQzMiwtMjIyLjIzNDQgLTI4MS4yNTIyMiwtMjkxLjk0MzIgLTU4LjczODE0LC0xMjQuNDI3ODIgLTE2LjE2MDY5LC0yNzcuNjkzMDggMTE3LjY3MjgxLC0yNzcuNjkzMDggOTAuNDI4NzMsMCAxNjQuODA4MjEsODYuOTM3MjggMjAwLjczNTUxLDE2My4wNTA3OCAyMS40MDE4LDQ1LjMzNDIgMzMuMDU1NCw5MC40NDE0IDM3LjY0NDQsMTMyLjk3NCBsIDE3LjU1NDksMy4yMTIgYyAzLjg3OCwtMTE3LjA4MDUgMTI3LjczODksLTMxMC45NDc5MiA3NS4wMTE5LC00MjIuNjM2MTIgLTY3LjQ4MDQsLTE0Mi45NTA4OSAtMjY5LjI1MywtMTQxLjY3MDkzIC0zODQuNDYxNzQsLTE5Mi40MDQwNyAtMjQuMjE2NDYsNTYuNjQ2MzMgLTU3LjAyMjgsMTA5LjMxMzE5IC0xMDMuMjE2MDcsMTQ5LjUwODExIDEwMi43NjcxMywzNC41Njg4OSAzNTUuMzA0MDEsOTIuNjE1MiA0MTAuMjE1MDEsMjA4Ljk0MzA5IDIzLjA3NzcsNDguODc3MjUgNy4zNjYsMTI5LjkxNDM5IC0xOS4yOTY1LDE1Ny4zNzkzOSAtNC41MzY2LC0xNy4yNzU2IC0xMC44MTQ4LC0zNC44ODUyOCAtMTkuMTQ3NCwtNTIuNTMzOTMgLTQ3LjAxOSwtOTkuNTk5MDUgLTE0Ny42ODkwNiwtMTc2Ljg0MDA2IC0yNTEuNDczNjEsLTE3Ni44NDAwNiAtMTQ0LjQ5NTkxLDAgLTIwNS43NTM3OSwxMDMuODMxNTkgLTEzNy43NTA4MiwyNDcuOTA4MjkgNDAuODEyOTQsODYuNDUwNiAyNDkuMjIyNTEsMzc0LjIwODMgMzU2Ljk4MTczLDM3NC4yMDgzIgogICAgICAgIGlua3NjYXBlOmNvbm5lY3Rvci1jdXJ2YXR1cmU9IjAiIC8+PHBhdGgKICAgICAgICBpZD0icGF0aDMwMiIKICAgICAgICBzdHlsZT0iZmlsbDojZmZmZmZmO2ZpbGwtb3BhY2l0eToxO2ZpbGwtcnVsZTpub256ZXJvO3N0cm9rZTpub25lO3N0cm9rZS13aWR0aDowLjQ0NDY3NDkxIgogICAgICAgIGQ9Im0gMTI5Ny41MTIsMTA4Mi4yMDAzIGMgNS43NDA4LC0xNC4xMDU2IDIyLjMzNTYsLTkzLjk3NjMzIDM0Ljk0MjcsLTkzLjk3NjMzIDI3LjIxNzksMCA3Ni40MDc4LDc0LjA1OTczIDg5LjYwMyw5My4yODY4MyAyNC4yMDUsLTE1Ljg0OTUgMTAuNzc3MSwtNDkuMTI1NSA1NS42MzM1LC00OS4xMjU1IDIwLjMwNzMsMCAzMC41MjA4LDQzLjc0NDUgNTEuNjUzOCw0NC40NTUgMC43NDg4LC0xNy42ODExIDEuODgwOSwtMzMuNjgxNSAtNy43NTc1LC01NC4xMDU5IC0xNC44NjY0LC0zMS40OTQ2NCAtNTIuNDc4LC03NC4xNjgzNiAtODkuNDQ5LC03NC4xNjgzNiAtMjYuNDgyMywwIC02My4zNjQ4LDMxLjg4MjM5IC03MC42MDk2LDMxLjg4MjM5IC03Ljg3MjMsMCAtMjIuMzE2LC0zLjY4MjUzIC0yNi45MjQ3LC0xMy40MzM5OSAtMTkuMjUwNiwtNDAuNzkxODkgMzIuMjE4MiwtMTc2Ljk2NjU2IDgzLjgzNzcsLTE3Ni45NjY1NiAyNy41ODMyLDAgNjAuNDk3NywyMC4yMzI4OSA4OS4zNDc0LDMyLjcxNzg1IC03LjUxMTksLTQ5LjA2ODY4IC04LjU1NTUsLTkwLjQ0MTM3IDEuMzgyNywtMTMyLjY1OTIxIC0yNi4yOTA2LC0xNi42NTkwNyAtNTcuMDg2NiwtMjMuNjgxODcgLTgxLjgwMTEsLTIzLjY4MTg3IC0xMjYuODM3OCwwIC01Ni44ODg0LDI5NC45OCAtMTczLjg0NTMsMzU3LjgyNTA1IGwgNDMuOTg2NCw1Ny45NTA2IgogICAgICAgIGlua3NjYXBlOmNvbm5lY3Rvci1jdXJ2YXR1cmU9IjAiIC8+PHBhdGgKICAgICAgICBpZD0icGF0aDMwNCIKICAgICAgICBzdHlsZT0iZmlsbDojZmZmZmZmO2ZpbGwtb3BhY2l0eToxO2ZpbGwtcnVsZTpldmVub2RkO3N0cm9rZTpub25lO3N0cm9rZS13aWR0aDowLjQ0NDY3NDkxIgogICAgICAgIGQ9Im0gMTc4NC45OTgsMTEwNS44MzgzIGMgOTUuODU5OSwwIDEzMy43MDU4LC0xNzIuNDQyMDggOTAuNjk5MSwtMjYzLjU1NTA4IC0zMy4zNzMyLC03MC42ODM3NSAtOTIuNTM0LC0xMjEuOTIzMDYgLTE2OC4zMjQxLC0xMjEuOTIzMDYgLTEzMy44NDk5LDAgLTExNy4wNzY0LDE4Mi40NTk1OSAtNjQuODYyMiwyOTMuMDg1MjQgMTQuNDAxMSwzMC40NzQyIDYzLjYwMDcsOTYuODk4IDEwMi4wODU1LDk2Ljg5OCAxNC4xMzksMCAyNS44NTMyLC00LjUwNTEgNDAuNDAxNywtNC41MDUxIHogbSAtMi45NjU0LC0xNi4wOTYxIGMgLTE1LjA4OTIsMCAtMjguMzU5OCwtNy40NTkyIC0zNS4zNTU1LC0yMi4zMDYyIC0xNC42OTYxLC0zMS4xMTUxIDU4LjU3MDksLTYyLjYwMzIgNDguMDUyNywtODQuODcyMTIgLTYuNjE4OSwtMTQuMDE2MzcgLTMxLjgxNjcsLTI3LjEzNDAyIC00NC41MzAzLC0yNy4xMzQwMiAtNjMuNTE4OCwwIC02Mi45NzgyLDgyLjY0NjM0IC0yNS4xMTU5LDEzNi41MTA0NCAtMjMuNTQzMSwtMTQuOTk5NCAtMzguOTc2MywtMzcuOTE0IC00OS4wMDMsLTU5LjE2NzIgLTM3LjIyMzQsLTc4LjgzODk5IC03LjY4MzksLTE4Ny4yOTU2IDc3LjI2NDUsLTE4Ny4yOTU2IDQ2LjkzODgsMCAxMDEuMDA0Myw0Mi4xNzI0MyAxMjIuMDA3OSw4Ni42ODkwNiAyNS44NTMyLDU0LjczODUgLTQwLjI1NDIsMTU3LjU3NTY0IC05My4zMjA0LDE1Ny41NzU2NCIKICAgICAgICBpbmtzY2FwZTpjb25uZWN0b3ItY3VydmF0dXJlPSIwIiAvPjxwYXRoCiAgICAgICAgaWQ9InBhdGgzMDYiCiAgICAgICAgc3R5bGU9ImZpbGw6I2ZmZmZmZjtmaWxsLW9wYWNpdHk6MTtmaWxsLXJ1bGU6ZXZlbm9kZDtzdHJva2U6bm9uZTtzdHJva2Utd2lkdGg6MC40NDQ2NzQ5MSIKICAgICAgICBkPSJtIDIyMjAuNjUxNyw4MjEuOTQ4MSBjIC0yNS4wNTA0LC01My4wNTk0NSAtNzEuNzI3LC04Mi4xOTA1MSAtMTI0LjI4NTMsLTgyLjE5MDUxIC0xNjYuODAwNCwwIC0xOTkuODk1LDE1Mi4wOTg4OCAtMTI3LjYxMSwzMDUuMjM5MjEgMTcuMDcxNiwzNi4xNDU3IDQ1LjA4NzMsNzYuMTMzIDg3Ljg2NDcsNzYuMTMzIDEzNC4wMDA2LDAgMjI3LjM1MzcsLTE2NS4wMjgzNSAxNjQuMDMxNiwtMjk5LjE4MTcgeiBtIC0xMzMuMDgzMiwyNzkuOTY3NiBjIC0xMi4zMDQsMCAtMjMuMTAwNywtNC40NDgzIC0yOC45OTg4LC0xNi45NTExIC0xMi45NzU3LC0yNy40OTc0IDU3LjYyMDcsLTUyLjAxNDcgNTcuNzE5MSwtODAuNDMwNCAtNy4zNzI2LC04LjczMTAxIC0yOC4wMTU4LC0xOC41MDM1NCAtMzcuMDEwNCwtMTguNTAzNTQgLTUwLjgzOCwwIC04OS4yMDgxLDY4LjkyMjA0IC00NS44MDgyLDEyMC4xNDM0NCAtMTcuNjEyMywtMTEuMTg1NSAtMjguMDY1LC0yNy45MjczIC0zNS41MDMxLC00My42NjgyIC00NC4wMDYsLTkzLjIxNzAzIDE4LjcyNjQsLTE4Ny40NjA5OSAxMTAuMTI5OSwtMTg3LjQ2MDk5IDM4LjA0MjUsMCA4Ny4wNzgzLDIxLjE3MjIyIDEwNi44MzY4LDYzLjA0MTMgMjcuOTY2Niw1OS4yNTY1MyAtNzEuNjQ1LDE2My44Mjk0OSAtMTI3LjM2NTMsMTYzLjgyOTQ5IgogICAgICAgIGlua3NjYXBlOmNvbm5lY3Rvci1jdXJ2YXR1cmU9IjAiIC8+PHBhdGgKICAgICAgICBpZD0icGF0aDMwOCIKICAgICAgICBzdHlsZT0iZmlsbDojZmZmZmZmO2ZpbGwtb3BhY2l0eToxO2ZpbGwtcnVsZTpub256ZXJvO3N0cm9rZTpub25lO3N0cm9rZS13aWR0aDowLjQ0NDY3NDkxIgogICAgICAgIGQ9Im0gMjM5My4xNTM1LDExMDIuODI3NCBjIDE0My43NDg4LDAgMjE2Ljc4NjUsLTI2My43ODIyMiAxNTIuNTQ2OCwtMzk5LjgzNjg3IC0xMi4yNzEzLC0yNi4wMTQ2MyAtMzUuMTU5LC01Mi4wMTQ3MyAtNjUuMzM3NCwtNTIuMDE0NzMgLTE2NC4yMjgyLDAgLTEyMi4zMDI5LDMyNi40MzczNyAtMjE0Ljc1NDksNDE5LjE4NTYgOC40NTM5LDguOTc5MiAxNi41NDczLDE4LjM3NzEgMjMuOTY5LDI3LjgzODEgNjIuNDcwMywtNzMuMzEzNSAzMS40MjM2LC0yNjYuMjU0NSAxNjQuODUwOCwtMjY2LjI1NDUgMzAuNzM1NCwwIDUzLjk4MzYsMjYuOTEzNDIgNjYuMzg1OSw1My4xNzk1MiAzMy4xMjc0LDcwLjE4OSAtMjguMTc5NiwxOTIuMDkyNTggLTk1LjI4NjQsMTkyLjA5MjU4IC0wLjY3MTcsMCAtMTAuMzA1MiwtMC4zOTkgLTEwLjA5MjIsLTQuMzAyMiAyLjQ3MzksLTQ0Ljc5NzMgMzcuNzE0OCwtMTYuODYzNSAyLjIyODEsLTkzLjEwMzUzIC0zNi4yNTY3LDcuMjIzOTIgLTc0LjY1OTYsNjUuNDI5MjMgLTU0LjgzNTUsMTA3LjQzMTMzIDUuODMyNSwxMi4zNDM5IDIwLjQzMDIsMTUuNzg0NyAzMC4zMjU4LDE1Ljc4NDciCiAgICAgICAgaW5rc2NhcGU6Y29ubmVjdG9yLWN1cnZhdHVyZT0iMCIgLz48cGF0aAogICAgICAgIGlkPSJwYXRoMzEwIgogICAgICAgIHN0eWxlPSJmaWxsOiNmZmZmZmY7ZmlsbC1vcGFjaXR5OjE7ZmlsbC1ydWxlOmV2ZW5vZGQ7c3Ryb2tlOm5vbmU7c3Ryb2tlLXdpZHRoOjAuNDQ0Njc0OTEiCiAgICAgICAgZD0ibSAyNzUwLjU5MjMsMTEwNS43NjIgYyAxMy41MzI4LC0xLjI3OTkgMzMuODgxLC0wLjA3IDQ1LjQ5NywtMy42MDYyIDIuMTc5LC0wLjY1ODcgMC41MjQyLC0zLjM4NDEgMC45MDExLC01LjUzMiAzLjUyMjQsLTE5LjkyOTUgOS4wNzY0LC0zOC44NDUyIDEzLjg3NjgsLTU4LjEwMzEgMTguNzI2MywtNzUuMDQ5MjkgMjkuOTk4MiwtMTUyLjA4NzQ5IDUxLjQ5MzMsLTIyNi40NzE2NCAyMy4zNzkyLC04MC45ODY4MiA0Ny43NTc5LC0xNzIuMjUyMyAxOS40NDcyLC0yNzMuODc3NTUgLTIuNzY4OCwtOS45NDI4OSAtNi40NzE0LC0yMC4wMzgyNSAtMTEuMjU1NCwtMzAuMTcwOTMgLTEwNy42MjMyLC0yMDYuNzMwMzEgLTMzNy45NTg4LC0xNTEuMDEwMzIgLTQxMC4xMTE4LC0xNTEuMDEwMzIgLTguNzY1MiwwIC0xOC4yMzQ4LDIuNDg1MzEgLTIyLjQxMjYsOC4xODc1OCAzMC40NDA1LDE5LjM2MDEzIDQ5LjUxMDksMzkuMjA2OTQgNjMuMTA5Myw2OC4wMjgxMyAxNi4zMTc5LDM0LjU1NTg5IDE2LjA3MjIsNjYuOTE4NDkgMTMuOTI1OSw5Ni43MTQ2OSA1Ljc2NywtMy4zNTgxIDI0LjI2NCwtMTEuNzMwNjIgMzEuOTQ3OCwtMTEuNzMwNjIgMzEuMjEwNiwwIDIwNS4xODcsLTg5LjM4ODUyIDI5My44NzA4LDc0Ljk4NjAyIDIzLjAwMjUsNDguNzI0ODEgMTkuMDcwNSw5OC40NTIxNCAxNS4wODkyLDEzOS45NDY0OSAtMS45OTg3LDIwLjc3MTQ4IC00LjgwMDMsNDEuMjY1NTcgLTguNjY2OCw2MS4xNzA3NyBsIC01Ljg2NTMsMjguODI2MSAtMC43MzczLDMuMTU2OTIgLTAuNzIwOSwzLjE0ODc5IGMgMy40ODk3LDAgMC4zNjA1LC02LjEyMDc3IDAuNDkxNSwtOS4yMDE0OCAyLjE0NjMsLTUwLjIzMzUgMS4yNDUyLC0xMjAuMzY0MDcgLTI1LjczODQsLTE3Ny41MzYwMSAtMTIuNTQ5OCwtMjYuNTY0NjIgLTMzLjA2MTksLTUzLjk1MzM1IC02NC41NTEsLTUzLjk1MzM1IC0xMzguMDE0NiwwIC02OC41OTc3LDM5MS40Mjg2NiAtMTc5LjIwMjcsNDg0LjQ3MzcxIDYuMTI3NCwxMC4xMjE0IDExLjU5OTUsMjAuNTMzMSAxNi4xODY5LDMwLjc0MiA2NS40NTIxLC03OS4wNDgyIDY4Ljg3NjIsLTI5Ni45NTc1NiAxNjUuMjExMiwtMjk2Ljk1NzU2IDIzLjM3OTIsMCA0Ny41NDQ5LDIxLjkxMzU4IDU3LjQ4OTcsNDIuOTcwNjMgNDIuNzkzNyw5MC42NTcxMiAtMjguMjk0MywxOTYuMjY5OTMgLTU5LjI3NTUsMjU1Ljc5ODkzIgogICAgICAgIGlua3NjYXBlOmNvbm5lY3Rvci1jdXJ2YXR1cmU9IjAiIC8+PC9nPjwvZz48L3N2Zz4K",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Eval"},{property:"og:description",content:"Execute a groovy script. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-script-groovy/tasks/io.kestra.plugin.scripts.groovy.Eval.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Eval"},{name:"twitter:description",content:"Execute a groovy script. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-script-groovy/tasks/io.kestra.plugin.scripts.groovy.Eval.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-script-groovy/tasks/io.kestra.plugin.scripts.groovy.Eval.html",relativePath:"plugins/plugin-script-groovy/tasks/io.kestra.plugin.scripts.groovy.Eval.md",key:"v-02cf38e3",path:"/plugins/plugin-script-groovy/tasks/io.kestra.plugin.scripts.groovy.Eval.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:84},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:599},{level:3,title:"outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:150},{level:3,title:"script",slug:"script",normalizedTitle:"script",charIndex:30},{level:2,title:"Outputs",slug:"outputs-2",normalizedTitle:"outputs",charIndex:828},{level:3,title:"outputs",slug:"outputs-3",normalizedTitle:"outputs",charIndex:150},{level:3,title:"result",slug:"result",normalizedTitle:"result",charIndex:923},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:1032}],headersStr:"Examples Properties outputs script Outputs outputs result Definitions",content:"Eval\n\ntype: \"io.kestra.plugin.scripts.groovy.Eval\"\n\n\n> Execute a groovy script.\n\n\n# Examples\n\nid: \"eval\"\ntype: \"io.kestra.plugin.scripts.groovy.Eval\"\noutputs:\n  - out\n  - map\nscript: |\n  import io.kestra.core.models.executions.metrics.Counter\n  \n  logger.info('executionId: {}', runContext.render('{{ execution.id }}'))\n  runContext.metric(Counter.of('total', 666, 'name', 'bla'))\n  \n  map = Map.of('test', 'here')\n  File tempFile = runContext.tempFile().toFile()\n  var output = new FileOutputStream(tempFile)\n  output.write('555\\n666\\n'.getBytes())\n  \n  out = runContext.putTempFile(tempFile)\n\n\n\n# Properties\n\n\n# outputs\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> A List of outputs variables that will be usable in outputs.\n\n\n# script\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> A full script\n\n\n# Outputs\n\n\n# outputs\n\n * Type: object\n\n> The captured outputs as declared on task property.\n\n\n# result\n\n * Type: ====\n\n> The resulting object\n\nMostly the last return of eval (if the language allow it)\n\n\n# Definitions",normalizedContent:"eval\n\ntype: \"io.kestra.plugin.scripts.groovy.eval\"\n\n\n> execute a groovy script.\n\n\n# examples\n\nid: \"eval\"\ntype: \"io.kestra.plugin.scripts.groovy.eval\"\noutputs:\n  - out\n  - map\nscript: |\n  import io.kestra.core.models.executions.metrics.counter\n  \n  logger.info('executionid: {}', runcontext.render('{{ execution.id }}'))\n  runcontext.metric(counter.of('total', 666, 'name', 'bla'))\n  \n  map = map.of('test', 'here')\n  file tempfile = runcontext.tempfile().tofile()\n  var output = new fileoutputstream(tempfile)\n  output.write('555\\n666\\n'.getbytes())\n  \n  out = runcontext.puttempfile(tempfile)\n\n\n\n# properties\n\n\n# outputs\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> a list of outputs variables that will be usable in outputs.\n\n\n# script\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> a full script\n\n\n# outputs\n\n\n# outputs\n\n * type: object\n\n> the captured outputs as declared on task property.\n\n\n# result\n\n * type: ====\n\n> the resulting object\n\nmostly the last return of eval (if the language allow it)\n\n\n# definitions",charsets:{cjk:!0}},{title:"FileTransform",frontmatter:{title:"FileTransform",editLink:!1,description:"Transform ion format file from kestra with a groovy script.",icon:"",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"FileTransform"},{property:"og:description",content:"Transform ion format file from kestra with a groovy script. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-script-groovy/tasks/io.kestra.plugin.scripts.groovy.FileTransform.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"FileTransform"},{name:"twitter:description",content:"Transform ion format file from kestra with a groovy script. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-script-groovy/tasks/io.kestra.plugin.scripts.groovy.FileTransform.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-script-groovy/tasks/io.kestra.plugin.scripts.groovy.FileTransform.html",relativePath:"plugins/plugin-script-groovy/tasks/io.kestra.plugin.scripts.groovy.FileTransform.md",key:"v-59bdfabb",path:"/plugins/plugin-script-groovy/tasks/io.kestra.plugin.scripts.groovy.FileTransform.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:441},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:730},{level:3,title:"concurrent",slug:"concurrent",normalizedTitle:"concurrent",charIndex:745},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:99},{level:3,title:"script",slug:"script",normalizedTitle:"script",charIndex:39},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1136},{level:3,title:"uri",slug:"uri",normalizedTitle:"uri",charIndex:1148},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:1249}],headersStr:"Examples Properties concurrent from script Outputs uri Definitions",content:"FileTransform\n\ntype: \"io.kestra.plugin.scripts.groovy.FileTransform\"\n\n\n> Transform ion format file from kestra with a groovy script.\n\nThis allow you to transform the data previouly loaded by kestra as you need.\n\nTake a ion format file from kestra and iterate row per row.\nEach row will populate a row global variable, you need to alter this variable that will be saved on output file.\nif you set the row to null, the row will be skipped\n\n\n# Examples\n\nid: \"file_transform\"\ntype: \"io.kestra.plugin.scripts.groovy.FileTransform\"\nfrom: \"{{ outputs['avro-to-gcs'] }}\"\nscript: |\n  logger.info('row: {}', row)\n\n  if (row.get('name') == 'richard') {\n    row = null\n  } else {\n    row.put('email', row.get('name') + '@kestra.io')\n  }\n\n\n\n# Properties\n\n\n# concurrent\n\n * Type: integer\n * Dynamic: ❌\n * Required: ❌\n * Minimum: &gt;= 2\n\n> Number of concurrent parrallels transform\n\nTake care that the order is not respected if you use parallelism\n\n\n# from\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> Source file URI\n\nThe file must an ion file generated by kestra\n\n\n# script\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> A full script\n\n\n# Outputs\n\n\n# uri\n\n * Type: string\n\n> URI of a temporary result file\n\nThe file will be serialized as ion file.\n\n\n# Definitions",normalizedContent:"filetransform\n\ntype: \"io.kestra.plugin.scripts.groovy.filetransform\"\n\n\n> transform ion format file from kestra with a groovy script.\n\nthis allow you to transform the data previouly loaded by kestra as you need.\n\ntake a ion format file from kestra and iterate row per row.\neach row will populate a row global variable, you need to alter this variable that will be saved on output file.\nif you set the row to null, the row will be skipped\n\n\n# examples\n\nid: \"file_transform\"\ntype: \"io.kestra.plugin.scripts.groovy.filetransform\"\nfrom: \"{{ outputs['avro-to-gcs'] }}\"\nscript: |\n  logger.info('row: {}', row)\n\n  if (row.get('name') == 'richard') {\n    row = null\n  } else {\n    row.put('email', row.get('name') + '@kestra.io')\n  }\n\n\n\n# properties\n\n\n# concurrent\n\n * type: integer\n * dynamic: ❌\n * required: ❌\n * minimum: &gt;= 2\n\n> number of concurrent parrallels transform\n\ntake care that the order is not respected if you use parallelism\n\n\n# from\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> source file uri\n\nthe file must an ion file generated by kestra\n\n\n# script\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> a full script\n\n\n# outputs\n\n\n# uri\n\n * type: string\n\n> uri of a temporary result file\n\nthe file will be serialized as ion file.\n\n\n# definitions",charsets:{cjk:!0}},{title:"Plugin script jython",frontmatter:{title:"Plugin script jython",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Plugin script jython"},{property:"og:description",content:"Plugin script jython | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-script-jython/"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Plugin script jython"},{name:"twitter:description",content:"Plugin script jython | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-script-jython/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-script-jython/",relativePath:"plugins/plugin-script-jython/README.md",key:"v-043c5470",path:"/plugins/plugin-script-jython/",headers:[{level:2,title:"Common",slug:"common",normalizedTitle:"common",charIndex:27},{level:3,title:"Tasks",slug:"tasks",normalizedTitle:"tasks",charIndex:38}],headersStr:"Common Tasks",content:"# Plugin script jython\n\n\n# Common\n\n\n# Tasks\n\n * Eval\n * FileTransform",normalizedContent:"# plugin script jython\n\n\n# common\n\n\n# tasks\n\n * eval\n * filetransform",charsets:{}},{title:"Eval",frontmatter:{title:"Eval",editLink:!1,description:"Execute a jython script.",icon:"",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Eval"},{property:"og:description",content:"Execute a jython script. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-script-jython/tasks/io.kestra.plugin.scripts.jython.Eval.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Eval"},{name:"twitter:description",content:"Execute a jython script. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-script-jython/tasks/io.kestra.plugin.scripts.jython.Eval.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-script-jython/tasks/io.kestra.plugin.scripts.jython.Eval.html",relativePath:"plugins/plugin-script-jython/tasks/io.kestra.plugin.scripts.jython.Eval.md",key:"v-5f95afe3",path:"/plugins/plugin-script-jython/tasks/io.kestra.plugin.scripts.jython.Eval.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:84},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:593},{level:3,title:"outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:150},{level:3,title:"script",slug:"script",normalizedTitle:"script",charIndex:30},{level:2,title:"Outputs",slug:"outputs-2",normalizedTitle:"outputs",charIndex:822},{level:3,title:"outputs",slug:"outputs-3",normalizedTitle:"outputs",charIndex:150},{level:3,title:"result",slug:"result",normalizedTitle:"result",charIndex:917},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:1026}],headersStr:"Examples Properties outputs script Outputs outputs result Definitions",content:"Eval\n\ntype: \"io.kestra.plugin.scripts.jython.Eval\"\n\n\n> Execute a jython script.\n\n\n# Examples\n\nid: \"eval\"\ntype: \"io.kestra.plugin.scripts.jython.Eval\"\noutputs:\n  - out\n  - map\nscript: |\n  from io.kestra.core.models.executions.metrics import Counter\n  import tempfile\n  from java.io import File\n  \n  logger.info('executionId: {}', runContext.render('{{ execution.id }}'))\n  runContext.metric(Counter.of('total', 666, 'name', 'bla'))\n  \n  map = {'test': 'here'}\n  tempFile = tempfile.NamedTemporaryFile()\n  tempFile.write('555\\n666\\n')\n  \n  out = runContext.putTempFile(File(tempFile.name))\n\n\n\n# Properties\n\n\n# outputs\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> A List of outputs variables that will be usable in outputs.\n\n\n# script\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> A full script\n\n\n# Outputs\n\n\n# outputs\n\n * Type: object\n\n> The captured outputs as declared on task property.\n\n\n# result\n\n * Type: ====\n\n> The resulting object\n\nMostly the last return of eval (if the language allow it)\n\n\n# Definitions",normalizedContent:"eval\n\ntype: \"io.kestra.plugin.scripts.jython.eval\"\n\n\n> execute a jython script.\n\n\n# examples\n\nid: \"eval\"\ntype: \"io.kestra.plugin.scripts.jython.eval\"\noutputs:\n  - out\n  - map\nscript: |\n  from io.kestra.core.models.executions.metrics import counter\n  import tempfile\n  from java.io import file\n  \n  logger.info('executionid: {}', runcontext.render('{{ execution.id }}'))\n  runcontext.metric(counter.of('total', 666, 'name', 'bla'))\n  \n  map = {'test': 'here'}\n  tempfile = tempfile.namedtemporaryfile()\n  tempfile.write('555\\n666\\n')\n  \n  out = runcontext.puttempfile(file(tempfile.name))\n\n\n\n# properties\n\n\n# outputs\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> a list of outputs variables that will be usable in outputs.\n\n\n# script\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> a full script\n\n\n# outputs\n\n\n# outputs\n\n * type: object\n\n> the captured outputs as declared on task property.\n\n\n# result\n\n * type: ====\n\n> the resulting object\n\nmostly the last return of eval (if the language allow it)\n\n\n# definitions",charsets:{cjk:!0}},{title:"FileTransform",frontmatter:{title:"FileTransform",editLink:!1,description:"Transform ion format file from kestra with a groovy script.",icon:"",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"FileTransform"},{property:"og:description",content:"Transform ion format file from kestra with a groovy script. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-script-jython/tasks/io.kestra.plugin.scripts.jython.FileTransform.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"FileTransform"},{name:"twitter:description",content:"Transform ion format file from kestra with a groovy script. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-script-jython/tasks/io.kestra.plugin.scripts.jython.FileTransform.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-script-jython/tasks/io.kestra.plugin.scripts.jython.FileTransform.html",relativePath:"plugins/plugin-script-jython/tasks/io.kestra.plugin.scripts.jython.FileTransform.md",key:"v-5211966b",path:"/plugins/plugin-script-jython/tasks/io.kestra.plugin.scripts.jython.FileTransform.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:441},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:712},{level:3,title:"concurrent",slug:"concurrent",normalizedTitle:"concurrent",charIndex:727},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:99},{level:3,title:"script",slug:"script",normalizedTitle:"script",charIndex:39},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1118},{level:3,title:"uri",slug:"uri",normalizedTitle:"uri",charIndex:1130},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:1231}],headersStr:"Examples Properties concurrent from script Outputs uri Definitions",content:"FileTransform\n\ntype: \"io.kestra.plugin.scripts.jython.FileTransform\"\n\n\n> Transform ion format file from kestra with a groovy script.\n\nThis allow you to transform the data previouly loaded by kestra as you need.\n\nTake a ion format file from kestra and iterate row per row.\nEach row will populate a row global variable, you need to alter this variable that will be saved on output file.\nif you set the row to null, the row will be skipped\n\n\n# Examples\n\nid: \"file_transform\"\ntype: \"io.kestra.plugin.scripts.jython.FileTransform\"\nfrom: \"{{ outputs['avro-to-gcs'] }}\"\nscript: |\n  logger.info('row: {}', row)\n\n  if row['name'] == 'richard': \n    row = None\n  else: \n    row['email'] = row['name'] + '@kestra.io'\n\n\n\n\n# Properties\n\n\n# concurrent\n\n * Type: integer\n * Dynamic: ❌\n * Required: ❌\n * Minimum: &gt;= 2\n\n> Number of concurrent parrallels transform\n\nTake care that the order is not respected if you use parallelism\n\n\n# from\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> Source file URI\n\nThe file must an ion file generated by kestra\n\n\n# script\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> A full script\n\n\n# Outputs\n\n\n# uri\n\n * Type: string\n\n> URI of a temporary result file\n\nThe file will be serialized as ion file.\n\n\n# Definitions",normalizedContent:"filetransform\n\ntype: \"io.kestra.plugin.scripts.jython.filetransform\"\n\n\n> transform ion format file from kestra with a groovy script.\n\nthis allow you to transform the data previouly loaded by kestra as you need.\n\ntake a ion format file from kestra and iterate row per row.\neach row will populate a row global variable, you need to alter this variable that will be saved on output file.\nif you set the row to null, the row will be skipped\n\n\n# examples\n\nid: \"file_transform\"\ntype: \"io.kestra.plugin.scripts.jython.filetransform\"\nfrom: \"{{ outputs['avro-to-gcs'] }}\"\nscript: |\n  logger.info('row: {}', row)\n\n  if row['name'] == 'richard': \n    row = none\n  else: \n    row['email'] = row['name'] + '@kestra.io'\n\n\n\n\n# properties\n\n\n# concurrent\n\n * type: integer\n * dynamic: ❌\n * required: ❌\n * minimum: &gt;= 2\n\n> number of concurrent parrallels transform\n\ntake care that the order is not respected if you use parallelism\n\n\n# from\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> source file uri\n\nthe file must an ion file generated by kestra\n\n\n# script\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> a full script\n\n\n# outputs\n\n\n# uri\n\n * type: string\n\n> uri of a temporary result file\n\nthe file will be serialized as ion file.\n\n\n# definitions",charsets:{cjk:!0}},{title:"Plugin script nashorn",frontmatter:{title:"Plugin script nashorn",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Plugin script nashorn"},{property:"og:description",content:"Plugin script nashorn | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-script-nashorn/"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Plugin script nashorn"},{name:"twitter:description",content:"Plugin script nashorn | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-script-nashorn/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-script-nashorn/",relativePath:"plugins/plugin-script-nashorn/README.md",key:"v-0b5737be",path:"/plugins/plugin-script-nashorn/",headers:[{level:2,title:"Common",slug:"common",normalizedTitle:"common",charIndex:28},{level:3,title:"Tasks",slug:"tasks",normalizedTitle:"tasks",charIndex:39}],headersStr:"Common Tasks",content:"# Plugin script nashorn\n\n\n# Common\n\n\n# Tasks\n\n * Eval\n * FileTransform",normalizedContent:"# plugin script nashorn\n\n\n# common\n\n\n# tasks\n\n * eval\n * filetransform",charsets:{}},{title:"Eval",frontmatter:{title:"Eval",editLink:!1,description:"Execute a nashorn (javascript) script.",icon:"PHN2ZyBpZD0ic3ZnNDUyNSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB2aWV3Qm94PSIwIDAgMjU2LjQgMjkxLjUiIHdpZHRoPSIyMTk5IiBoZWlnaHQ9IjI1MDAiPjxzdHlsZT4uc3Qwe2ZpbGw6I2Q0YjgzMH0uc3QxLC5zdDJ7b3BhY2l0eTouOTg2O2ZpbGw6I2ViZWJlYjtmaWxsLW9wYWNpdHk6MDtlbmFibGUtYmFja2dyb3VuZDpuZXd9LnN0MntmaWxsLW9wYWNpdHk6LjkyMTZ9LnN0M3tmaWxsOiNmZGQ4M2N9PC9zdHlsZT48ZyBpZD0iZzUxOTMiIHRyYW5zZm9ybT0idHJhbnNsYXRlKDQuOTg4IC0xMTMuMzg1KSI+PHBhdGggaWQ9InBhdGg1MTEzIiBjbGFzcz0ic3QwIiBkPSJNMTguOCAzNzUuNEwtNSAxMTMuNGwyNTYuNC4xLTIzLjYgMjYxLjdMMTIzIDQwNC44IDE4LjggMzc1LjR6bTE4OS43LTE0LjNsMTkuOS0yMjQuNGgtMTA1bC44IDI0Ny41IDg0LjMtMjMuMXptLTk0LjktMTkxLjVIODguMWwtLjMgMTM0LjMtNDkuNS0xMy41LjEgMzAuNyA3NS4yIDIwLjNWMTY5LjZ6Ii8+PHBhdGggaWQ9InBhdGg1MTU5IiBjbGFzcz0ic3QxIiBkPSJNMTA1LjIgMzM4LjljLTMuMy0xLTE5LjYtNS40LTM2LjItOS45bC0zMC4xLTguMXYtMTUuMWMwLTE0LjggMC0xNS4xIDEuNS0xNC42LjguMyAxMS44IDMuMyAyNC40IDYuOGwyMi45IDYuMy4yLTY3IC4yLTY3aDI1djg1LjJjMCA2Ny43LS4yIDg1LjItLjkgODUuMi0uNS0uMS0zLjctLjktNy0xLjh6Ii8+PHBhdGggaWQ9InBhdGg1MTU3IiBjbGFzcz0ic3QyIiBkPSJNMzguNCAzMjEuMWwtLjEtMzAuN3MzMS42IDguOSA0OS41IDEzLjVsLjMtMTM0LjJoMjUuNXYxNzEuN2wtNzUuMi0yMC4zeiIvPjxwYXRoIGlkPSJwYXRoNTExNyIgY2xhc3M9InN0MyIgZD0iTTEyMy40IDEzNi42aDEwNUwyMDguNSAzNjFsLTg1LjEgMjMuMVYxMzYuNnptNzkuNyAxODYuOGw2LjktODMuOS01MSA1Ljd2LTQ0LjhsNTQuNC0uMiAyLjItMzAuNi04Mi4xLjQgMS4xIDExMS40IDQ5LjYtOC41LS43IDI0LjgtNTAgMTMuMy41IDMwLjQgNjkuMS0xOHoiLz48L2c+PC9zdmc+Cg==",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Eval"},{property:"og:description",content:"Execute a nashorn (javascript) script. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-script-nashorn/tasks/io.kestra.plugin.scripts.nashorn.Eval.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Eval"},{name:"twitter:description",content:"Execute a nashorn (javascript) script. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-script-nashorn/tasks/io.kestra.plugin.scripts.nashorn.Eval.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-script-nashorn/tasks/io.kestra.plugin.scripts.nashorn.Eval.html",relativePath:"plugins/plugin-script-nashorn/tasks/io.kestra.plugin.scripts.nashorn.Eval.md",key:"v-0511d7ba",path:"/plugins/plugin-script-nashorn/tasks/io.kestra.plugin.scripts.nashorn.Eval.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:99},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:726},{level:3,title:"outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:166},{level:3,title:"script",slug:"script",normalizedTitle:"script",charIndex:30},{level:2,title:"Outputs",slug:"outputs-2",normalizedTitle:"outputs",charIndex:955},{level:3,title:"outputs",slug:"outputs-3",normalizedTitle:"outputs",charIndex:166},{level:3,title:"result",slug:"result",normalizedTitle:"result",charIndex:1050},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:1159}],headersStr:"Examples Properties outputs script Outputs outputs result Definitions",content:"Eval\n\ntype: \"io.kestra.plugin.scripts.nashorn.Eval\"\n\n\n> Execute a nashorn (javascript) script.\n\n\n# Examples\n\nid: \"eval\"\ntype: \"io.kestra.plugin.scripts.nashorn.Eval\"\noutputs:\n  - out\n  - map\nscript: |\n  var Counter = Java.type('io.kestra.core.models.executions.metrics.Counter');\n  var File = Java.type('java.io.File');\n  var FileOutputStream = Java.type('java.io.FileOutputStream');\n  \n  logger.info('executionId: {}', runContext.render('{{ execution.id }}'));\n  runContext.metric(Counter.of('total', 666, 'name', 'bla'));\n  \n  map = {'test': 'here'}\n  var tempFile = runContext.tempFile()\n  var output = new FileOutputStream(tempFile)\n  output.write('555\\n666\\n'.getBytes())\n  \n  out = runContext.putTempFile(tempFile)\n\n\n\n# Properties\n\n\n# outputs\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> A List of outputs variables that will be usable in outputs.\n\n\n# script\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> A full script\n\n\n# Outputs\n\n\n# outputs\n\n * Type: object\n\n> The captured outputs as declared on task property.\n\n\n# result\n\n * Type: ====\n\n> The resulting object\n\nMostly the last return of eval (if the language allow it)\n\n\n# Definitions",normalizedContent:"eval\n\ntype: \"io.kestra.plugin.scripts.nashorn.eval\"\n\n\n> execute a nashorn (javascript) script.\n\n\n# examples\n\nid: \"eval\"\ntype: \"io.kestra.plugin.scripts.nashorn.eval\"\noutputs:\n  - out\n  - map\nscript: |\n  var counter = java.type('io.kestra.core.models.executions.metrics.counter');\n  var file = java.type('java.io.file');\n  var fileoutputstream = java.type('java.io.fileoutputstream');\n  \n  logger.info('executionid: {}', runcontext.render('{{ execution.id }}'));\n  runcontext.metric(counter.of('total', 666, 'name', 'bla'));\n  \n  map = {'test': 'here'}\n  var tempfile = runcontext.tempfile()\n  var output = new fileoutputstream(tempfile)\n  output.write('555\\n666\\n'.getbytes())\n  \n  out = runcontext.puttempfile(tempfile)\n\n\n\n# properties\n\n\n# outputs\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> a list of outputs variables that will be usable in outputs.\n\n\n# script\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> a full script\n\n\n# outputs\n\n\n# outputs\n\n * type: object\n\n> the captured outputs as declared on task property.\n\n\n# result\n\n * type: ====\n\n> the resulting object\n\nmostly the last return of eval (if the language allow it)\n\n\n# definitions",charsets:{cjk:!0}},{title:"FileTransform",frontmatter:{title:"FileTransform",editLink:!1,description:"Transform ion format file from kestra with a nashorn (javascript) script.",icon:"PHN2ZyBpZD0ic3ZnNDUyNSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB2aWV3Qm94PSIwIDAgMjU2LjQgMjkxLjUiIHdpZHRoPSIyMTk5IiBoZWlnaHQ9IjI1MDAiPjxzdHlsZT4uc3Qwe2ZpbGw6I2Q0YjgzMH0uc3QxLC5zdDJ7b3BhY2l0eTouOTg2O2ZpbGw6I2ViZWJlYjtmaWxsLW9wYWNpdHk6MDtlbmFibGUtYmFja2dyb3VuZDpuZXd9LnN0MntmaWxsLW9wYWNpdHk6LjkyMTZ9LnN0M3tmaWxsOiNmZGQ4M2N9PC9zdHlsZT48ZyBpZD0iZzUxOTMiIHRyYW5zZm9ybT0idHJhbnNsYXRlKDQuOTg4IC0xMTMuMzg1KSI+PHBhdGggaWQ9InBhdGg1MTEzIiBjbGFzcz0ic3QwIiBkPSJNMTguOCAzNzUuNEwtNSAxMTMuNGwyNTYuNC4xLTIzLjYgMjYxLjdMMTIzIDQwNC44IDE4LjggMzc1LjR6bTE4OS43LTE0LjNsMTkuOS0yMjQuNGgtMTA1bC44IDI0Ny41IDg0LjMtMjMuMXptLTk0LjktMTkxLjVIODguMWwtLjMgMTM0LjMtNDkuNS0xMy41LjEgMzAuNyA3NS4yIDIwLjNWMTY5LjZ6Ii8+PHBhdGggaWQ9InBhdGg1MTU5IiBjbGFzcz0ic3QxIiBkPSJNMTA1LjIgMzM4LjljLTMuMy0xLTE5LjYtNS40LTM2LjItOS45bC0zMC4xLTguMXYtMTUuMWMwLTE0LjggMC0xNS4xIDEuNS0xNC42LjguMyAxMS44IDMuMyAyNC40IDYuOGwyMi45IDYuMy4yLTY3IC4yLTY3aDI1djg1LjJjMCA2Ny43LS4yIDg1LjItLjkgODUuMi0uNS0uMS0zLjctLjktNy0xLjh6Ii8+PHBhdGggaWQ9InBhdGg1MTU3IiBjbGFzcz0ic3QyIiBkPSJNMzguNCAzMjEuMWwtLjEtMzAuN3MzMS42IDguOSA0OS41IDEzLjVsLjMtMTM0LjJoMjUuNXYxNzEuN2wtNzUuMi0yMC4zeiIvPjxwYXRoIGlkPSJwYXRoNTExNyIgY2xhc3M9InN0MyIgZD0iTTEyMy40IDEzNi42aDEwNUwyMDguNSAzNjFsLTg1LjEgMjMuMVYxMzYuNnptNzkuNyAxODYuOGw2LjktODMuOS01MSA1Ljd2LTQ0LjhsNTQuNC0uMiAyLjItMzAuNi04Mi4xLjQgMS4xIDExMS40IDQ5LjYtOC41LS43IDI0LjgtNTAgMTMuMy41IDMwLjQgNjkuMS0xOHoiLz48L2c+PC9zdmc+Cg==",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"FileTransform"},{property:"og:description",content:"Transform ion format file from kestra with a nashorn (javascript) script. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-script-nashorn/tasks/io.kestra.plugin.scripts.nashorn.FileTransform.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"FileTransform"},{name:"twitter:description",content:"Transform ion format file from kestra with a nashorn (javascript) script. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-script-nashorn/tasks/io.kestra.plugin.scripts.nashorn.FileTransform.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-script-nashorn/tasks/io.kestra.plugin.scripts.nashorn.FileTransform.html",relativePath:"plugins/plugin-script-nashorn/tasks/io.kestra.plugin.scripts.nashorn.FileTransform.md",key:"v-5faa4ec7",path:"/plugins/plugin-script-nashorn/tasks/io.kestra.plugin.scripts.nashorn.FileTransform.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:152},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:433},{level:3,title:"concurrent",slug:"concurrent",normalizedTitle:"concurrent",charIndex:448},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:100},{level:3,title:"script",slug:"script",normalizedTitle:"script",charIndex:39},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:839},{level:3,title:"uri",slug:"uri",normalizedTitle:"uri",charIndex:851},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:952}],headersStr:"Examples Properties concurrent from script Outputs uri Definitions",content:"FileTransform\n\ntype: \"io.kestra.plugin.scripts.nashorn.FileTransform\"\n\n\n> Transform ion format file from kestra with a nashorn (javascript) script.\n\n\n# Examples\n\nid: \"file_transform\"\ntype: \"io.kestra.plugin.scripts.nashorn.FileTransform\"\nfrom: \"{{ outputs['avro-to-gcs'] }}\"\nscript: |\n  logger.info('row: {}', row)\n\n  if (row['name'] === 'richard') {\n    row = null\n  } else {\n    row['email'] = row['name'] + '@kestra.io')\n  }\n\n\n\n# Properties\n\n\n# concurrent\n\n * Type: integer\n * Dynamic: ❌\n * Required: ❌\n * Minimum: &gt;= 2\n\n> Number of concurrent parrallels transform\n\nTake care that the order is not respected if you use parallelism\n\n\n# from\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> Source file URI\n\nThe file must an ion file generated by kestra\n\n\n# script\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> A full script\n\n\n# Outputs\n\n\n# uri\n\n * Type: string\n\n> URI of a temporary result file\n\nThe file will be serialized as ion file.\n\n\n# Definitions",normalizedContent:"filetransform\n\ntype: \"io.kestra.plugin.scripts.nashorn.filetransform\"\n\n\n> transform ion format file from kestra with a nashorn (javascript) script.\n\n\n# examples\n\nid: \"file_transform\"\ntype: \"io.kestra.plugin.scripts.nashorn.filetransform\"\nfrom: \"{{ outputs['avro-to-gcs'] }}\"\nscript: |\n  logger.info('row: {}', row)\n\n  if (row['name'] === 'richard') {\n    row = null\n  } else {\n    row['email'] = row['name'] + '@kestra.io')\n  }\n\n\n\n# properties\n\n\n# concurrent\n\n * type: integer\n * dynamic: ❌\n * required: ❌\n * minimum: &gt;= 2\n\n> number of concurrent parrallels transform\n\ntake care that the order is not respected if you use parallelism\n\n\n# from\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> source file uri\n\nthe file must an ion file generated by kestra\n\n\n# script\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> a full script\n\n\n# outputs\n\n\n# uri\n\n * type: string\n\n> uri of a temporary result file\n\nthe file will be serialized as ion file.\n\n\n# definitions",charsets:{cjk:!0}},{title:"Plugin serdes",frontmatter:{title:"Plugin serdes",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Plugin serdes"},{property:"og:description",content:"Plugin serdes | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-serdes/"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Plugin serdes"},{name:"twitter:description",content:"Plugin serdes | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-serdes/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-serdes/",relativePath:"plugins/plugin-serdes/README.md",key:"v-3bbf4cdc",path:"/plugins/plugin-serdes/",headers:[{level:2,title:"Xml",slug:"xml",normalizedTitle:"xml",charIndex:20},{level:3,title:"Tasks",slug:"tasks",normalizedTitle:"tasks",charIndex:28},{level:2,title:"Csv",slug:"csv",normalizedTitle:"csv",charIndex:65},{level:3,title:"Tasks",slug:"tasks-2",normalizedTitle:"tasks",charIndex:28},{level:2,title:"Json",slug:"json",normalizedTitle:"json",charIndex:110},{level:3,title:"Tasks",slug:"tasks-3",normalizedTitle:"tasks",charIndex:28},{level:2,title:"Avro",slug:"avro",normalizedTitle:"avro",charIndex:158},{level:3,title:"Tasks",slug:"tasks-4",normalizedTitle:"tasks",charIndex:28}],headersStr:"Xml Tasks Csv Tasks Json Tasks Avro Tasks",content:"# Plugin serdes\n\n\n# Xml\n\n\n# Tasks\n\n * XmlReader\n * XmlWriter\n\n\n# Csv\n\n\n# Tasks\n\n * CsvReader\n * CsvWriter\n\n\n# Json\n\n\n# Tasks\n\n * JsonReader\n * JsonWriter\n\n\n# Avro\n\n\n# Tasks\n\n * AvroReader\n * AvroWriter",normalizedContent:"# plugin serdes\n\n\n# xml\n\n\n# tasks\n\n * xmlreader\n * xmlwriter\n\n\n# csv\n\n\n# tasks\n\n * csvreader\n * csvwriter\n\n\n# json\n\n\n# tasks\n\n * jsonreader\n * jsonwriter\n\n\n# avro\n\n\n# tasks\n\n * avroreader\n * avrowriter",charsets:{}},{title:"AvroReader",frontmatter:{title:"AvroReader",editLink:!1,description:"Read a provided avro file and convert it to ion serialized data file.",icon:"",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"AvroReader"},{property:"og:description",content:"Read a provided avro file and convert it to ion serialized data file. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-serdes/tasks/avro/io.kestra.plugin.serdes.avro.AvroReader.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"AvroReader"},{name:"twitter:description",content:"Read a provided avro file and convert it to ion serialized data file. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-serdes/tasks/avro/io.kestra.plugin.serdes.avro.AvroReader.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-serdes/tasks/avro/io.kestra.plugin.serdes.avro.AvroReader.html",relativePath:"plugins/plugin-serdes/tasks/avro/io.kestra.plugin.serdes.avro.AvroReader.md",key:"v-18af94bb",path:"/plugins/plugin-serdes/tasks/avro/io.kestra.plugin.serdes.avro.AvroReader.html",headers:[{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:138},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:153},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:229},{level:3,title:"uri",slug:"uri",normalizedTitle:"uri",charIndex:241},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:300}],headersStr:"Properties from Outputs uri Definitions",content:'AvroReader\n\ntype: "io.kestra.plugin.serdes.avro.AvroReader"\n\n\n> Read a provided avro file and convert it to ion serialized data file.\n\n\n# Properties\n\n\n# from\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> Source file URI\n\n\n# Outputs\n\n\n# uri\n\n * Type: string\n\n> URI of a temporary result file\n\n\n# Definitions',normalizedContent:'avroreader\n\ntype: "io.kestra.plugin.serdes.avro.avroreader"\n\n\n> read a provided avro file and convert it to ion serialized data file.\n\n\n# properties\n\n\n# from\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> source file uri\n\n\n# outputs\n\n\n# uri\n\n * type: string\n\n> uri of a temporary result file\n\n\n# definitions',charsets:{}},{title:"AvroWriter",frontmatter:{title:"AvroWriter",editLink:!1,description:"Read a provided file containing ion serialized data and convert it to avro.",icon:"",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"AvroWriter"},{property:"og:description",content:"Read a provided file containing ion serialized data and convert it to avro. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-serdes/tasks/avro/io.kestra.plugin.serdes.avro.AvroWriter.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"AvroWriter"},{name:"twitter:description",content:"Read a provided file containing ion serialized data and convert it to avro. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-serdes/tasks/avro/io.kestra.plugin.serdes.avro.AvroWriter.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-serdes/tasks/avro/io.kestra.plugin.serdes.avro.AvroWriter.html",relativePath:"plugins/plugin-serdes/tasks/avro/io.kestra.plugin.serdes.avro.AvroWriter.md",key:"v-7a45215b",path:"/plugins/plugin-serdes/tasks/avro/io.kestra.plugin.serdes.avro.AvroWriter.html",headers:[{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:144},{level:3,title:"dateFormat",slug:"dateformat",normalizedTitle:"dateformat",charIndex:159},{level:3,title:"datetimeFormat",slug:"datetimeformat",normalizedTitle:"datetimeformat",charIndex:284},{level:3,title:"decimalSeparator",slug:"decimalseparator",normalizedTitle:"decimalseparator",charIndex:495},{level:3,title:"falseValues",slug:"falsevalues",normalizedTitle:"falsevalues",charIndex:676},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:835},{level:3,title:"nullValues",slug:"nullvalues",normalizedTitle:"nullvalues",charIndex:911},{level:3,title:"schema",slug:"schema",normalizedTitle:"schema",charIndex:1119},{level:3,title:"strictSchema",slug:"strictschema",normalizedTitle:"strictschema",charIndex:1220},{level:3,title:"timeFormat",slug:"timeformat",normalizedTitle:"timeformat",charIndex:288},{level:3,title:"timeZoneId",slug:"timezoneid",normalizedTitle:"timezoneid",charIndex:1554},{level:3,title:"trueValues",slug:"truevalues",normalizedTitle:"truevalues",charIndex:1768},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1921},{level:3,title:"uri",slug:"uri",normalizedTitle:"uri",charIndex:1933},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:1992}],headersStr:"Properties dateFormat datetimeFormat decimalSeparator falseValues from nullValues schema strictSchema timeFormat timeZoneId trueValues Outputs uri Definitions",content:"AvroWriter\n\ntype: \"io.kestra.plugin.serdes.avro.AvroWriter\"\n\n\n> Read a provided file containing ion serialized data and convert it to avro.\n\n\n# Properties\n\n\n# dateFormat\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: yyyy-MM-dd[XXX]\n\n> Format to use when parsing date\n\n\n# datetimeFormat\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: yyyy-MM-dd'T'HH:mm[:ss][.SSSSSS][XXX]\n\n> Format to use when parsing datetime\n\nDefault value is yyyy-MM-dd'T'HH:mm[:ss][.SSSSSS][XXX]\n\n\n# decimalSeparator\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: .\n\n> Character to recognize as decimal point (e.g. use ‘,’ for European data).\n\nDefault value is '.'\n\n\n# falseValues\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: [f, false, disabled, 0, off, no, ]\n\n> Values to consider as False\n\n\n# from\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> Source file URI\n\n\n# nullValues\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: [, #N/A, #N/A N/A, #NA, -1.#IND, -1.#QNAN, -NaN, 1.#IND, 1.#QNAN, NA, n/a, nan, null]\n\n> Values to consider as null\n\n\n# schema\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The avro schema associated to the data\n\n\n# strictSchema\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n * Default: false\n\n> Whether to consider a field present in the data but not declared in the schema as an error\n\nDefault value is false\n\n\n# timeFormat\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: HH:mm[:ss][.SSSSSS][XXX]\n\n> Format to use when parsing time\n\n\n# timeZoneId\n\n * Type: string\n * Dynamic: ❌\n * Required: ❌\n * Default: Etc/UTC\n\n> Timezone to use when no timezone can be parsed on the source.\n\nIf null, the timezone will be UTC Default value is system timezone\n\n\n# trueValues\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: [t, true, enabled, 1, on, yes]\n\n> Values to consider as True\n\n\n# Outputs\n\n\n# uri\n\n * Type: string\n\n> URI of a temporary result file\n\n\n# Definitions",normalizedContent:"avrowriter\n\ntype: \"io.kestra.plugin.serdes.avro.avrowriter\"\n\n\n> read a provided file containing ion serialized data and convert it to avro.\n\n\n# properties\n\n\n# dateformat\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n * default: yyyy-mm-dd[xxx]\n\n> format to use when parsing date\n\n\n# datetimeformat\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n * default: yyyy-mm-dd't'hh:mm[:ss][.ssssss][xxx]\n\n> format to use when parsing datetime\n\ndefault value is yyyy-mm-dd't'hh:mm[:ss][.ssssss][xxx]\n\n\n# decimalseparator\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n * default: .\n\n> character to recognize as decimal point (e.g. use ‘,’ for european data).\n\ndefault value is '.'\n\n\n# falsevalues\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n * default: [f, false, disabled, 0, off, no, ]\n\n> values to consider as false\n\n\n# from\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> source file uri\n\n\n# nullvalues\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n * default: [, #n/a, #n/a n/a, #na, -1.#ind, -1.#qnan, -nan, 1.#ind, 1.#qnan, na, n/a, nan, null]\n\n> values to consider as null\n\n\n# schema\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the avro schema associated to the data\n\n\n# strictschema\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n * default: false\n\n> whether to consider a field present in the data but not declared in the schema as an error\n\ndefault value is false\n\n\n# timeformat\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n * default: hh:mm[:ss][.ssssss][xxx]\n\n> format to use when parsing time\n\n\n# timezoneid\n\n * type: string\n * dynamic: ❌\n * required: ❌\n * default: etc/utc\n\n> timezone to use when no timezone can be parsed on the source.\n\nif null, the timezone will be utc default value is system timezone\n\n\n# truevalues\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n * default: [t, true, enabled, 1, on, yes]\n\n> values to consider as true\n\n\n# outputs\n\n\n# uri\n\n * type: string\n\n> uri of a temporary result file\n\n\n# definitions",charsets:{}},{title:"CsvWriter",frontmatter:{title:"CsvWriter",editLink:!1,description:"Read an ion serialized data file and write it to a csv file.",icon:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB3aWR0aD0iMzg0IiBoZWlnaHQ9IjUxMiIKICAgICBwcmVzZXJ2ZUFzcGVjdFJhdGlvPSJ4TWlkWU1pZCBtZWV0IiB2aWV3Qm94PSIwIDAgMzg0IDUxMiIKICAgICBzdHlsZT0iLW1zLXRyYW5zZm9ybTogcm90YXRlKDM2MGRlZyk7IC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTsgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTsiPgogICAgPHBhdGggZD0iTTIyNCAxMzZWMEgyNEMxMC43IDAgMCAxMC43IDAgMjR2NDY0YzAgMTMuMyAxMC43IDI0IDI0IDI0aDMzNmMxMy4zIDAgMjQtMTAuNyAyNC0yNFYxNjBIMjQ4Yy0xMy4yIDAtMjQtMTAuOC0yNC0yNHptLTk2IDE0NGMwIDQuNDItMy41OCA4LTggOGgtOGMtOC44NCAwLTE2IDcuMTYtMTYgMTZ2MzJjMCA4Ljg0IDcuMTYgMTYgMTYgMTZoOGM0LjQyIDAgOCAzLjU4IDggOHYxNmMwIDQuNDItMy41OCA4LTggOGgtOGMtMjYuNTEgMC00OC0yMS40OS00OC00OHYtMzJjMC0yNi41MSAyMS40OS00OCA0OC00OGg4YzQuNDIgMCA4IDMuNTggOCA4djE2em00NC4yNyAxMDRIMTYwYy00LjQyIDAtOC0zLjU4LTgtOHYtMTZjMC00LjQyIDMuNTgtOCA4LThoMTIuMjdjNS45NSAwIDEwLjQxLTMuNSAxMC40MS02LjYyYzAtMS4zLS43NS0yLjY2LTIuMTItMy44NGwtMjEuODktMTguNzdjLTguNDctNy4yMi0xMy4zMy0xNy40OC0xMy4zMy0yOC4xNGMwLTIxLjMgMTkuMDItMzguNjIgNDIuNDEtMzguNjJIMjAwYzQuNDIgMCA4IDMuNTggOCA4djE2YzAgNC40Mi0zLjU4IDgtOCA4aC0xMi4yN2MtNS45NSAwLTEwLjQxIDMuNS0xMC40MSA2LjYyYzAgMS4zLjc1IDIuNjYgMi4xMiAzLjg0bDIxLjg5IDE4Ljc3YzguNDcgNy4yMiAxMy4zMyAxNy40OCAxMy4zMyAyOC4xNGMuMDEgMjEuMjktMTkgMzguNjItNDIuMzkgMzguNjJ6TTI1NiAyNjR2MjAuOGMwIDIwLjI3IDUuNyA0MC4xNyAxNiA1Ni44OGMxMC4zLTE2LjcgMTYtMzYuNjEgMTYtNTYuODhWMjY0YzAtNC40MiAzLjU4LTggOC04aDE2YzQuNDIgMCA4IDMuNTggOCA4djIwLjhjMCAzNS40OC0xMi44OCA2OC44OS0zNi4yOCA5NC4wOWMtMy4wMiAzLjI1LTcuMjcgNS4xMS0xMS43MiA1LjExcy04LjctMS44Ni0xMS43Mi01LjExYy0yMy40LTI1LjItMzYuMjgtNTguNjEtMzYuMjgtOTQuMDlWMjY0YzAtNC40MiAzLjU4LTggOC04aDE2YzQuNDIgMCA4IDMuNTggOCA4em0xMjEtMTU5TDI3OS4xIDdjLTQuNS00LjUtMTAuNi03LTE3LTdIMjU2djEyOGgxMjh2LTYuMWMwLTYuMy0yLjUtMTIuNC03LTE2Ljl6IgogICAgICAgICAgZmlsbD0iIzMzMyIvPgo8L3N2Zz4K",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"CsvWriter"},{property:"og:description",content:"Read an ion serialized data file and write it to a csv file. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-serdes/tasks/csv/io.kestra.plugin.serdes.csv.CsvWriter.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"CsvWriter"},{name:"twitter:description",content:"Read an ion serialized data file and write it to a csv file. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-serdes/tasks/csv/io.kestra.plugin.serdes.csv.CsvWriter.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-serdes/tasks/csv/io.kestra.plugin.serdes.csv.CsvWriter.html",relativePath:"plugins/plugin-serdes/tasks/csv/io.kestra.plugin.serdes.csv.CsvWriter.md",key:"v-40cfe323",path:"/plugins/plugin-serdes/tasks/csv/io.kestra.plugin.serdes.csv.CsvWriter.html",headers:[{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:126},{level:3,title:"alwaysDelimitText",slug:"alwaysdelimittext",normalizedTitle:"alwaysdelimittext",charIndex:141},{level:3,title:"charset",slug:"charset",normalizedTitle:"charset",charIndex:305},{level:3,title:"dateFormat",slug:"dateformat",normalizedTitle:"dateformat",charIndex:416},{level:3,title:"dateTimeFormat",slug:"datetimeformat",normalizedTitle:"datetimeformat",charIndex:527},{level:3,title:"fieldSeparator",slug:"fieldseparator",normalizedTitle:"fieldseparator",charIndex:672},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:784},{level:3,title:"header",slug:"header",normalizedTitle:"header",charIndex:860},{level:3,title:"lineDelimiter",slug:"linedelimiter",normalizedTitle:"linedelimiter",charIndex:987},{level:3,title:"textDelimiter",slug:"textdelimiter",normalizedTitle:"textdelimiter",charIndex:279},{level:3,title:"timeFormat",slug:"timeformat",normalizedTitle:"timeformat",charIndex:1234},{level:3,title:"timeZoneId",slug:"timezoneid",normalizedTitle:"timezoneid",charIndex:1348},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1495},{level:3,title:"uri",slug:"uri",normalizedTitle:"uri",charIndex:1507},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:1566}],headersStr:"Properties alwaysDelimitText charset dateFormat dateTimeFormat fieldSeparator from header lineDelimiter textDelimiter timeFormat timeZoneId Outputs uri Definitions",content:'CsvWriter\n\ntype: "io.kestra.plugin.serdes.csv.CsvWriter"\n\n\n> Read an ion serialized data file and write it to a csv file.\n\n\n# Properties\n\n\n# alwaysDelimitText\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: false\n\n> Whether fields should always be delimited using the textDelimiter option.\n\n\n# charset\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Default: UTF-8\n\n> The name of a supported charset\n\n\n# dateFormat\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: yyyy-MM-dd\n\n> Format to use for date\n\n\n# dateTimeFormat\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: yyyy-MM-dd\'T\'HH:mm:ss.SSS[XXX]\n\n> Format to use for zoned datetime\n\n\n# fieldSeparator\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Default: ,\n\n> The field separator character\n\n\n# from\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> Source file URI\n\n\n# header\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: true\n\n> Specifies if the first line should be the header\n\n\n# lineDelimiter\n\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n * Default: [ ]\n\n> The character used to separate rows\n\n\n# textDelimiter\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Default: "\n\n> The text delimiter character\n\n\n# timeFormat\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: HH:mm:ss[XXX]\n\n> Format to use for time\n\n\n# timeZoneId\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: Etc/UTC\n\n> Timezone to use when no timezone can be parsed on the source.\n\n\n# Outputs\n\n\n# uri\n\n * Type: string\n\n> URI of a temporary result file\n\n\n# Definitions',normalizedContent:'csvwriter\n\ntype: "io.kestra.plugin.serdes.csv.csvwriter"\n\n\n> read an ion serialized data file and write it to a csv file.\n\n\n# properties\n\n\n# alwaysdelimittext\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: false\n\n> whether fields should always be delimited using the textdelimiter option.\n\n\n# charset\n\n * type: string\n * dynamic: ❓\n * required: ❌\n * default: utf-8\n\n> the name of a supported charset\n\n\n# dateformat\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n * default: yyyy-mm-dd\n\n> format to use for date\n\n\n# datetimeformat\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n * default: yyyy-mm-dd\'t\'hh:mm:ss.sss[xxx]\n\n> format to use for zoned datetime\n\n\n# fieldseparator\n\n * type: string\n * dynamic: ❓\n * required: ❌\n * default: ,\n\n> the field separator character\n\n\n# from\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> source file uri\n\n\n# header\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: true\n\n> specifies if the first line should be the header\n\n\n# linedelimiter\n\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n * default: [ ]\n\n> the character used to separate rows\n\n\n# textdelimiter\n\n * type: string\n * dynamic: ❓\n * required: ❌\n * default: "\n\n> the text delimiter character\n\n\n# timeformat\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n * default: hh:mm:ss[xxx]\n\n> format to use for time\n\n\n# timezoneid\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n * default: etc/utc\n\n> timezone to use when no timezone can be parsed on the source.\n\n\n# outputs\n\n\n# uri\n\n * type: string\n\n> uri of a temporary result file\n\n\n# definitions',charsets:{}},{title:"CsvReader",frontmatter:{title:"CsvReader",editLink:!1,description:"Read a csv file and write it to an ion serialized data file.",icon:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB3aWR0aD0iMzg0IiBoZWlnaHQ9IjUxMiIKICAgICBwcmVzZXJ2ZUFzcGVjdFJhdGlvPSJ4TWlkWU1pZCBtZWV0IiB2aWV3Qm94PSIwIDAgMzg0IDUxMiIKICAgICBzdHlsZT0iLW1zLXRyYW5zZm9ybTogcm90YXRlKDM2MGRlZyk7IC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTsgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTsiPgogICAgPHBhdGggZD0iTTIyNCAxMzZWMEgyNEMxMC43IDAgMCAxMC43IDAgMjR2NDY0YzAgMTMuMyAxMC43IDI0IDI0IDI0aDMzNmMxMy4zIDAgMjQtMTAuNyAyNC0yNFYxNjBIMjQ4Yy0xMy4yIDAtMjQtMTAuOC0yNC0yNHptLTk2IDE0NGMwIDQuNDItMy41OCA4LTggOGgtOGMtOC44NCAwLTE2IDcuMTYtMTYgMTZ2MzJjMCA4Ljg0IDcuMTYgMTYgMTYgMTZoOGM0LjQyIDAgOCAzLjU4IDggOHYxNmMwIDQuNDItMy41OCA4LTggOGgtOGMtMjYuNTEgMC00OC0yMS40OS00OC00OHYtMzJjMC0yNi41MSAyMS40OS00OCA0OC00OGg4YzQuNDIgMCA4IDMuNTggOCA4djE2em00NC4yNyAxMDRIMTYwYy00LjQyIDAtOC0zLjU4LTgtOHYtMTZjMC00LjQyIDMuNTgtOCA4LThoMTIuMjdjNS45NSAwIDEwLjQxLTMuNSAxMC40MS02LjYyYzAtMS4zLS43NS0yLjY2LTIuMTItMy44NGwtMjEuODktMTguNzdjLTguNDctNy4yMi0xMy4zMy0xNy40OC0xMy4zMy0yOC4xNGMwLTIxLjMgMTkuMDItMzguNjIgNDIuNDEtMzguNjJIMjAwYzQuNDIgMCA4IDMuNTggOCA4djE2YzAgNC40Mi0zLjU4IDgtOCA4aC0xMi4yN2MtNS45NSAwLTEwLjQxIDMuNS0xMC40MSA2LjYyYzAgMS4zLjc1IDIuNjYgMi4xMiAzLjg0bDIxLjg5IDE4Ljc3YzguNDcgNy4yMiAxMy4zMyAxNy40OCAxMy4zMyAyOC4xNGMuMDEgMjEuMjktMTkgMzguNjItNDIuMzkgMzguNjJ6TTI1NiAyNjR2MjAuOGMwIDIwLjI3IDUuNyA0MC4xNyAxNiA1Ni44OGMxMC4zLTE2LjcgMTYtMzYuNjEgMTYtNTYuODhWMjY0YzAtNC40MiAzLjU4LTggOC04aDE2YzQuNDIgMCA4IDMuNTggOCA4djIwLjhjMCAzNS40OC0xMi44OCA2OC44OS0zNi4yOCA5NC4wOWMtMy4wMiAzLjI1LTcuMjcgNS4xMS0xMS43MiA1LjExcy04LjctMS44Ni0xMS43Mi01LjExYy0yMy40LTI1LjItMzYuMjgtNTguNjEtMzYuMjgtOTQuMDlWMjY0YzAtNC40MiAzLjU4LTggOC04aDE2YzQuNDIgMCA4IDMuNTggOCA4em0xMjEtMTU5TDI3OS4xIDdjLTQuNS00LjUtMTAuNi03LTE3LTdIMjU2djEyOGgxMjh2LTYuMWMwLTYuMy0yLjUtMTIuNC03LTE2Ljl6IgogICAgICAgICAgZmlsbD0iIzMzMyIvPgo8L3N2Zz4K",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"CsvReader"},{property:"og:description",content:"Read a csv file and write it to an ion serialized data file. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-serdes/tasks/csv/io.kestra.plugin.serdes.csv.CsvReader.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"CsvReader"},{name:"twitter:description",content:"Read a csv file and write it to an ion serialized data file. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-serdes/tasks/csv/io.kestra.plugin.serdes.csv.CsvReader.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-serdes/tasks/csv/io.kestra.plugin.serdes.csv.CsvReader.html",relativePath:"plugins/plugin-serdes/tasks/csv/io.kestra.plugin.serdes.csv.CsvReader.md",key:"v-69ffc923",path:"/plugins/plugin-serdes/tasks/csv/io.kestra.plugin.serdes.csv.CsvReader.html",headers:[{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:126},{level:3,title:"charset",slug:"charset",normalizedTitle:"charset",charIndex:141},{level:3,title:"errorOnDifferentFieldCount",slug:"errorondifferentfieldcount",normalizedTitle:"errorondifferentfieldcount",charIndex:252},{level:3,title:"fieldSeparator",slug:"fieldseparator",normalizedTitle:"fieldseparator",charIndex:438},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:550},{level:3,title:"header",slug:"header",normalizedTitle:"header",charIndex:626},{level:3,title:"skipEmptyRows",slug:"skipemptyrows",normalizedTitle:"skipemptyrows",charIndex:753},{level:3,title:"skipRows",slug:"skiprows",normalizedTitle:"skiprows",charIndex:881},{level:3,title:"textDelimiter",slug:"textdelimiter",normalizedTitle:"textdelimiter",charIndex:1007},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1117},{level:3,title:"uri",slug:"uri",normalizedTitle:"uri",charIndex:1129},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:1188}],headersStr:"Properties charset errorOnDifferentFieldCount fieldSeparator from header skipEmptyRows skipRows textDelimiter Outputs uri Definitions",content:'CsvReader\n\ntype: "io.kestra.plugin.serdes.csv.CsvReader"\n\n\n> Read a csv file and write it to an ion serialized data file.\n\n\n# Properties\n\n\n# charset\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Default: UTF-8\n\n> The name of a supported charset\n\n\n# errorOnDifferentFieldCount\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: false\n\n> Specifies if an exception should be thrown, if CSV data contains different field count\n\n\n# fieldSeparator\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Default: ,\n\n> The field separator character\n\n\n# from\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> Source file URI\n\n\n# header\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: true\n\n> Specifies if the first line should be the header\n\n\n# skipEmptyRows\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: false\n\n> Specifies if empty rows should be skipped\n\n\n# skipRows\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n * Default: 0\n\n> Number of lines to skip at the start of the file\n\n\n# textDelimiter\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Default: "\n\n> The text delimiter character\n\n\n# Outputs\n\n\n# uri\n\n * Type: string\n\n> URI of a temporary result file\n\n\n# Definitions',normalizedContent:'csvreader\n\ntype: "io.kestra.plugin.serdes.csv.csvreader"\n\n\n> read a csv file and write it to an ion serialized data file.\n\n\n# properties\n\n\n# charset\n\n * type: string\n * dynamic: ❓\n * required: ❌\n * default: utf-8\n\n> the name of a supported charset\n\n\n# errorondifferentfieldcount\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: false\n\n> specifies if an exception should be thrown, if csv data contains different field count\n\n\n# fieldseparator\n\n * type: string\n * dynamic: ❓\n * required: ❌\n * default: ,\n\n> the field separator character\n\n\n# from\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> source file uri\n\n\n# header\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: true\n\n> specifies if the first line should be the header\n\n\n# skipemptyrows\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: false\n\n> specifies if empty rows should be skipped\n\n\n# skiprows\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n * default: 0\n\n> number of lines to skip at the start of the file\n\n\n# textdelimiter\n\n * type: string\n * dynamic: ❓\n * required: ❌\n * default: "\n\n> the text delimiter character\n\n\n# outputs\n\n\n# uri\n\n * type: string\n\n> uri of a temporary result file\n\n\n# definitions',charsets:{}},{title:"JsonReader",frontmatter:{title:"JsonReader",editLink:!1,description:"Read a json file and write it to an ion serialized data file.",icon:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB3aWR0aD0iMjQiIGhlaWdodD0iMjQiCiAgICAgcHJlc2VydmVBc3BlY3RSYXRpbz0ieE1pZFlNaWQgbWVldCIgdmlld0JveD0iMCAwIDI0IDI0IgogICAgIHN0eWxlPSItbXMtdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTsgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpOyB0cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpOyI+CiAgICA8cGF0aCBkPSJNMTIuODIzIDE1LjEyMmMtLjUxNyAwLS44MTYuNDkxLS44MTYgMS4xNDZjMCAuNjYxLjMxMSAxLjEyNi44MiAxLjEyNmMuNTE3IDAgLjgxMi0uNDkuODEyLTEuMTQ2YzAtLjYwNC0uMjkxLTEuMTI2LS44MTYtMS4xMjZ6IgogICAgICAgICAgZmlsbD0iIzMzMyIvPgogICAgPHBhdGggZD0iTTE0IDJINmEyIDIgMCAwIDAtMiAydjE2YTIgMiAwIDAgMCAyIDJoMTJhMiAyIDAgMCAwIDItMlY4bC02LTZ6TTguMDIyIDE2LjcwNGMwIC45NjEtLjQ2MSAxLjI5Ni0xLjIgMS4yOTZjLS4xNzYgMC0uNDA2LS4wMjktLjU1Ny0uMDhsLjA4Ni0uNjE1Yy4xMDQuMDM1LjIzOS4wNi4zOTEuMDZjLjMxOSAwIC41Mi0uMTQ1LjUyLS42N3YtMi4xMjJoLjc2MXYyLjEzMXptMS40NTkgMS4yOTFjLS4zODUgMC0uNzY2LS4xLS45NTUtLjIwNWwuMTU1LS42MzFjLjIwNC4xMDUuNTIxLjIxMS44NDYuMjExYy4zNSAwIC41MzQtLjE0Ni41MzQtLjM2NWMwLS4yMTEtLjE1OS0uMzMxLS41NjQtLjQ3NmMtLjU2Mi0uMTk1LS45MjctLjUwNi0uOTI3LS45OTZjMC0uNTc2LjQ4MS0xLjAxNyAxLjI3Ny0xLjAxN2MuMzggMCAuNjU5LjA4Ljg2MS4xNzFsLS4xNzIuNjE1Yy0uMTM1LS4wNjUtLjM3NS0uMTYtLjcwNS0uMTZzLS40OTEuMTUtLjQ5MS4zMjVjMCAuMjE1LjE5LjMxMS42MjcuNDc2Yy41OTYuMjIuODc2LjUzLjg3NiAxLjAwNmMuMDAxLjU2Ni0uNDM2IDEuMDQ2LTEuMzYyIDEuMDQ2em0zLjMwNi4wMDVjLTEuMDAxIDAtMS41ODYtLjc1NS0xLjU4Ni0xLjcxNmMwLTEuMDEyLjY0Ni0xLjc2OCAxLjY0Mi0xLjc2OGMxLjAzNSAwIDEuNjAxLjc3NiAxLjYwMSAxLjcwN0MxNC40NDMgMTcuMzMgMTMuNzczIDE4IDEyLjc4NyAxOHptNC45NDctLjA1NWgtLjgwMmwtLjcyMS0xLjMwMmExMi42NCAxMi42NCAwIDAgMS0uNTg1LTEuMTlsLS4wMTYuMDA1Yy4wMjEuNDQ1LjAzMS45MjEuMDMxIDEuNDcydjEuMDE2aC0uNzAxdi0zLjM3M2guODkxbC43MDEgMS4yMzZjLjIuMzU0LjQuNzc1LjU1MiAxLjE1NWguMDE0Yy0uMDUtLjQ0NS0uMDY1LS45LS4wNjUtMS40MDZ2LS45ODVoLjcwMnYzLjM3MnpNMTQgOWgtMVY0bDUgNWgtNHoiCiAgICAgICAgICBmaWxsPSIjMzMzIi8+Cjwvc3ZnPgo=",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"JsonReader"},{property:"og:description",content:"Read a json file and write it to an ion serialized data file. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-serdes/tasks/json/io.kestra.plugin.serdes.json.JsonReader.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"JsonReader"},{name:"twitter:description",content:"Read a json file and write it to an ion serialized data file. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-serdes/tasks/json/io.kestra.plugin.serdes.json.JsonReader.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-serdes/tasks/json/io.kestra.plugin.serdes.json.JsonReader.html",relativePath:"plugins/plugin-serdes/tasks/json/io.kestra.plugin.serdes.json.JsonReader.md",key:"v-415b3a4f",path:"/plugins/plugin-serdes/tasks/json/io.kestra.plugin.serdes.json.JsonReader.html",headers:[{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:130},{level:3,title:"charset",slug:"charset",normalizedTitle:"charset",charIndex:145},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:281},{level:3,title:"newLine",slug:"newline",normalizedTitle:"newline",charIndex:357},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:609},{level:3,title:"uri",slug:"uri",normalizedTitle:"uri",charIndex:621},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:680}],headersStr:"Properties charset from newLine Outputs uri Definitions",content:'JsonReader\n\ntype: "io.kestra.plugin.serdes.json.JsonReader"\n\n\n> Read a json file and write it to an ion serialized data file.\n\n\n# Properties\n\n\n# charset\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Default: UTF-8\n\n> The name of a supported charset\n\nDefault value is UTF-8.\n\n\n# from\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> Source file URI\n\n\n# newLine\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: true\n\n> Is the file is a json new line (JSON-NL)\n\nIs the file is a json with new line separator\nWarning, if not, the whole file will loaded in memory and can lead to out of memory!\n\n\n# Outputs\n\n\n# uri\n\n * Type: string\n\n> URI of a temporary result file\n\n\n# Definitions',normalizedContent:'jsonreader\n\ntype: "io.kestra.plugin.serdes.json.jsonreader"\n\n\n> read a json file and write it to an ion serialized data file.\n\n\n# properties\n\n\n# charset\n\n * type: string\n * dynamic: ❓\n * required: ❌\n * default: utf-8\n\n> the name of a supported charset\n\ndefault value is utf-8.\n\n\n# from\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> source file uri\n\n\n# newline\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: true\n\n> is the file is a json new line (json-nl)\n\nis the file is a json with new line separator\nwarning, if not, the whole file will loaded in memory and can lead to out of memory!\n\n\n# outputs\n\n\n# uri\n\n * type: string\n\n> uri of a temporary result file\n\n\n# definitions',charsets:{}},{title:"JsonWriter",frontmatter:{title:"JsonWriter",editLink:!1,description:"Read an ion serialized data file and write it to a new line delimited json file.",icon:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB3aWR0aD0iMjQiIGhlaWdodD0iMjQiCiAgICAgcHJlc2VydmVBc3BlY3RSYXRpbz0ieE1pZFlNaWQgbWVldCIgdmlld0JveD0iMCAwIDI0IDI0IgogICAgIHN0eWxlPSItbXMtdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTsgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpOyB0cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpOyI+CiAgICA8cGF0aCBkPSJNMTIuODIzIDE1LjEyMmMtLjUxNyAwLS44MTYuNDkxLS44MTYgMS4xNDZjMCAuNjYxLjMxMSAxLjEyNi44MiAxLjEyNmMuNTE3IDAgLjgxMi0uNDkuODEyLTEuMTQ2YzAtLjYwNC0uMjkxLTEuMTI2LS44MTYtMS4xMjZ6IgogICAgICAgICAgZmlsbD0iIzMzMyIvPgogICAgPHBhdGggZD0iTTE0IDJINmEyIDIgMCAwIDAtMiAydjE2YTIgMiAwIDAgMCAyIDJoMTJhMiAyIDAgMCAwIDItMlY4bC02LTZ6TTguMDIyIDE2LjcwNGMwIC45NjEtLjQ2MSAxLjI5Ni0xLjIgMS4yOTZjLS4xNzYgMC0uNDA2LS4wMjktLjU1Ny0uMDhsLjA4Ni0uNjE1Yy4xMDQuMDM1LjIzOS4wNi4zOTEuMDZjLjMxOSAwIC41Mi0uMTQ1LjUyLS42N3YtMi4xMjJoLjc2MXYyLjEzMXptMS40NTkgMS4yOTFjLS4zODUgMC0uNzY2LS4xLS45NTUtLjIwNWwuMTU1LS42MzFjLjIwNC4xMDUuNTIxLjIxMS44NDYuMjExYy4zNSAwIC41MzQtLjE0Ni41MzQtLjM2NWMwLS4yMTEtLjE1OS0uMzMxLS41NjQtLjQ3NmMtLjU2Mi0uMTk1LS45MjctLjUwNi0uOTI3LS45OTZjMC0uNTc2LjQ4MS0xLjAxNyAxLjI3Ny0xLjAxN2MuMzggMCAuNjU5LjA4Ljg2MS4xNzFsLS4xNzIuNjE1Yy0uMTM1LS4wNjUtLjM3NS0uMTYtLjcwNS0uMTZzLS40OTEuMTUtLjQ5MS4zMjVjMCAuMjE1LjE5LjMxMS42MjcuNDc2Yy41OTYuMjIuODc2LjUzLjg3NiAxLjAwNmMuMDAxLjU2Ni0uNDM2IDEuMDQ2LTEuMzYyIDEuMDQ2em0zLjMwNi4wMDVjLTEuMDAxIDAtMS41ODYtLjc1NS0xLjU4Ni0xLjcxNmMwLTEuMDEyLjY0Ni0xLjc2OCAxLjY0Mi0xLjc2OGMxLjAzNSAwIDEuNjAxLjc3NiAxLjYwMSAxLjcwN0MxNC40NDMgMTcuMzMgMTMuNzczIDE4IDEyLjc4NyAxOHptNC45NDctLjA1NWgtLjgwMmwtLjcyMS0xLjMwMmExMi42NCAxMi42NCAwIDAgMS0uNTg1LTEuMTlsLS4wMTYuMDA1Yy4wMjEuNDQ1LjAzMS45MjEuMDMxIDEuNDcydjEuMDE2aC0uNzAxdi0zLjM3M2guODkxbC43MDEgMS4yMzZjLjIuMzU0LjQuNzc1LjU1MiAxLjE1NWguMDE0Yy0uMDUtLjQ0NS0uMDY1LS45LS4wNjUtMS40MDZ2LS45ODVoLjcwMnYzLjM3MnpNMTQgOWgtMVY0bDUgNWgtNHoiCiAgICAgICAgICBmaWxsPSIjMzMzIi8+Cjwvc3ZnPgo=",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"JsonWriter"},{property:"og:description",content:"Read an ion serialized data file and write it to a new line delimited json file. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-serdes/tasks/json/io.kestra.plugin.serdes.json.JsonWriter.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"JsonWriter"},{name:"twitter:description",content:"Read an ion serialized data file and write it to a new line delimited json file. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-serdes/tasks/json/io.kestra.plugin.serdes.json.JsonWriter.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-serdes/tasks/json/io.kestra.plugin.serdes.json.JsonWriter.html",relativePath:"plugins/plugin-serdes/tasks/json/io.kestra.plugin.serdes.json.JsonWriter.md",key:"v-ba1e7222",path:"/plugins/plugin-serdes/tasks/json/io.kestra.plugin.serdes.json.JsonWriter.html",headers:[{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:149},{level:3,title:"charset",slug:"charset",normalizedTitle:"charset",charIndex:164},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:301},{level:3,title:"newLine",slug:"newline",normalizedTitle:"newline",charIndex:377},{level:3,title:"timeZoneId",slug:"timezoneid",normalizedTitle:"timezoneid",charIndex:629},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:776},{level:3,title:"uri",slug:"uri",normalizedTitle:"uri",charIndex:788},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:847}],headersStr:"Properties charset from newLine timeZoneId Outputs uri Definitions",content:'JsonWriter\n\ntype: "io.kestra.plugin.serdes.json.JsonWriter"\n\n\n> Read an ion serialized data file and write it to a new line delimited json file.\n\n\n# Properties\n\n\n# charset\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: UTF-8\n\n> The name of a supported charset\n\nDefault value is UTF-8.\n\n\n# from\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> Source file URI\n\n\n# newLine\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n * Default: true\n\n> Is the file is a json new line (JSON-NL)\n\nIs the file is a json with new line separator\nWarning, if not, the whole file will loaded in memory and can lead to out of memory!\n\n\n# timeZoneId\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: Etc/UTC\n\n> Timezone to use when no timezone can be parsed on the source.\n\n\n# Outputs\n\n\n# uri\n\n * Type: string\n\n> URI of a temporary result file\n\n\n# Definitions',normalizedContent:'jsonwriter\n\ntype: "io.kestra.plugin.serdes.json.jsonwriter"\n\n\n> read an ion serialized data file and write it to a new line delimited json file.\n\n\n# properties\n\n\n# charset\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n * default: utf-8\n\n> the name of a supported charset\n\ndefault value is utf-8.\n\n\n# from\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> source file uri\n\n\n# newline\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n * default: true\n\n> is the file is a json new line (json-nl)\n\nis the file is a json with new line separator\nwarning, if not, the whole file will loaded in memory and can lead to out of memory!\n\n\n# timezoneid\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n * default: etc/utc\n\n> timezone to use when no timezone can be parsed on the source.\n\n\n# outputs\n\n\n# uri\n\n * type: string\n\n> uri of a temporary result file\n\n\n# definitions',charsets:{}},{title:"XmlReader",frontmatter:{title:"XmlReader",editLink:!1,description:"Read a xml file and write it to an ion serialized data file.",icon:"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9Im5vIj8+CjxzdmcKICAgICAgICB4bWxuczpkYz0iaHR0cDovL3B1cmwub3JnL2RjL2VsZW1lbnRzLzEuMS8iCiAgICAgICAgeG1sbnM6Y2M9Imh0dHA6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL25zIyIKICAgICAgICB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiCiAgICAgICAgeG1sbnM6c3ZnPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIKICAgICAgICB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciCiAgICAgICAgeG1sbnM6c29kaXBvZGk9Imh0dHA6Ly9zb2RpcG9kaS5zb3VyY2Vmb3JnZS5uZXQvRFREL3NvZGlwb2RpLTAuZHRkIgogICAgICAgIHhtbG5zOmlua3NjYXBlPSJodHRwOi8vd3d3Lmlua3NjYXBlLm9yZy9uYW1lc3BhY2VzL2lua3NjYXBlIgogICAgICAgIHdpZHRoPSIyNCIKICAgICAgICBoZWlnaHQ9IjI0IgogICAgICAgIHByZXNlcnZlQXNwZWN0UmF0aW89InhNaWRZTWlkIG1lZXQiCiAgICAgICAgdmlld0JveD0iMCAwIDI0IDI0IgogICAgICAgIHN0eWxlPSItbXMtdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTsgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpOyB0cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpOyIKICAgICAgICB2ZXJzaW9uPSIxLjEiCiAgICAgICAgaWQ9InN2ZzgiCiAgICAgICAgc29kaXBvZGk6ZG9jbmFtZT0iYnhzLWZpbGUtanNvbi5zdmciCiAgICAgICAgaW5rc2NhcGU6dmVyc2lvbj0iMC45Mi41ICgyMDYwZWMxZjlmLCAyMDIwLTA0LTA4KSI+CiAgPG1ldGFkYXRhCiAgICAgICAgICBpZD0ibWV0YWRhdGExNCI+CiAgICA8cmRmOlJERj4KICAgICAgPGNjOldvcmsKICAgICAgICAgICAgICByZGY6YWJvdXQ9IiI+CiAgICAgICAgPGRjOmZvcm1hdD5pbWFnZS9zdmcreG1sPC9kYzpmb3JtYXQ+CiAgICAgICAgPGRjOnR5cGUKICAgICAgICAgICAgICAgIHJkZjpyZXNvdXJjZT0iaHR0cDovL3B1cmwub3JnL2RjL2RjbWl0eXBlL1N0aWxsSW1hZ2UiIC8+CiAgICAgIDwvY2M6V29yaz4KICAgIDwvcmRmOlJERj4KICA8L21ldGFkYXRhPgogIDxkZWZzCiAgICAgICAgICBpZD0iZGVmczEyIiAvPgogIDxzb2RpcG9kaTpuYW1lZHZpZXcKICAgICAgICAgIHBhZ2Vjb2xvcj0iI2ZmZmZmZiIKICAgICAgICAgIGJvcmRlcmNvbG9yPSIjNjY2NjY2IgogICAgICAgICAgYm9yZGVyb3BhY2l0eT0iMSIKICAgICAgICAgIG9iamVjdHRvbGVyYW5jZT0iMTAiCiAgICAgICAgICBncmlkdG9sZXJhbmNlPSIxMCIKICAgICAgICAgIGd1aWRldG9sZXJhbmNlPSIxMCIKICAgICAgICAgIGlua3NjYXBlOnBhZ2VvcGFjaXR5PSIwIgogICAgICAgICAgaW5rc2NhcGU6cGFnZXNoYWRvdz0iMiIKICAgICAgICAgIGlua3NjYXBlOndpbmRvdy13aWR0aD0iMTkyMCIKICAgICAgICAgIGlua3NjYXBlOndpbmRvdy1oZWlnaHQ9IjEwMjIiCiAgICAgICAgICBpZD0ibmFtZWR2aWV3MTAiCiAgICAgICAgICBzaG93Z3JpZD0iZmFsc2UiCiAgICAgICAgICBpbmtzY2FwZTp6b29tPSI5LjgzMzMzMzMiCiAgICAgICAgICBpbmtzY2FwZTpjeD0iMTIuMjUwMDY2IgogICAgICAgICAgaW5rc2NhcGU6Y3k9IjI1LjYxMDk2NCIKICAgICAgICAgIGlua3NjYXBlOndpbmRvdy14PSIyNTYwIgogICAgICAgICAgaW5rc2NhcGU6d2luZG93LXk9IjAiCiAgICAgICAgICBpbmtzY2FwZTp3aW5kb3ctbWF4aW1pemVkPSIxIgogICAgICAgICAgaW5rc2NhcGU6Y3VycmVudC1sYXllcj0ic3ZnOCIgLz4KICA8cGF0aAogICAgICAgICAgZD0iTSA2LDIgQSAyLDIgMCAwIDAgNCw0IHYgMTYgYSAyLDIgMCAwIDAgMiwyIGggMTIgYSAyLDIgMCAwIDAgMiwtMiBWIDggTCAxNCwyIFogbSA3LDIgNSw1IGggLTQgLTEgeiBtIC02LjYxMzI4MSw5Ljk5MDIzNCBoIDAuODkwNjI1IGwgMC44MjAzMTIsMS4zNjkxNDEgMC44MDQ2ODgsLTEuMzY5MTQxIGggMC44NjkxNCBsIC0xLjE5NTMxMiwxLjg4NjcxOSAxLjI4NzEwOSwxLjkxOTkyMiBIIDguOTQxNDA2IEwgOC4wNTQ2ODcsMTYuMzU3NDIyIDcuMTY5OTIyLDE3Ljc5Njg3NSBIIDYuMzA0Njg3IGwgMS4yNjM2NzIsLTEuOTYyODkxIHogbSAzLjk1NTA3OCwwIGggMS4wOTk2MDkgbCAwLjkwMDM5MSwyLjkxMDE1NyBoIDAuMDE1NjMgTCAxMy4zMTI1LDEzLjk5MDIzNCBoIDEuMDk5NjA5IHYgMy44MDY2NDEgaCAtMC43NTE5NTMgdiAtMS44MDI3MzQgYyAwLC0wLjA4NTA3IDIuMTdlLTQsLTAuMTgxODU4IDAuMDAyLC0wLjI5Mjk2OSAwLjAwMzUsLTAuMTExMTExIDAuMDE2MjgsLTAuNDA3NTUyIDAuMDM3MTEsLTAuODg2NzE5IGggLTAuMDIzNDQgbCAtMC45ODI0MjIsMi45ODI0MjIgSCAxMS45NTMxNyBsIC0wLjkxNjAxNiwtMi45ODYzMjggaCAtMC4wMjM0NCBjIDAuMDMyOTksMC42MDc2MzkgMC4wNDg4MywxLjAxMTcxOSAwLjA0ODgzLDEuMjE0ODQ0IHYgMS43NzE0ODQgaCAtMC43MjA3MDMgeiBtIDUuMDI5Mjk3LDAgaCAwLjgwNjY0IHYgMy4xNDA2MjUgaCAxLjU0NDkyMiB2IDAuNjY2MDE2IGggLTIuMzUxNTYyIHoiCiAgICAgICAgICBpZD0icGF0aDQiCiAgICAgICAgICBpbmtzY2FwZTpjb25uZWN0b3ItY3VydmF0dXJlPSIwIgogICAgICAgICAgc3R5bGU9ImZpbGw6IzMzMyIgLz4KPC9zdmc+Cg==",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"XmlReader"},{property:"og:description",content:"Read a xml file and write it to an ion serialized data file. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-serdes/tasks/xml/io.kestra.plugin.serdes.xml.XmlReader.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"XmlReader"},{name:"twitter:description",content:"Read a xml file and write it to an ion serialized data file. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-serdes/tasks/xml/io.kestra.plugin.serdes.xml.XmlReader.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-serdes/tasks/xml/io.kestra.plugin.serdes.xml.XmlReader.html",relativePath:"plugins/plugin-serdes/tasks/xml/io.kestra.plugin.serdes.xml.XmlReader.md",key:"v-99d1487a",path:"/plugins/plugin-serdes/tasks/xml/io.kestra.plugin.serdes.xml.XmlReader.html",headers:[{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:126},{level:3,title:"charset",slug:"charset",normalizedTitle:"charset",charIndex:141},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:277},{level:3,title:"query",slug:"query",normalizedTitle:"query",charIndex:353},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:469},{level:3,title:"uri",slug:"uri",normalizedTitle:"uri",charIndex:481},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:540}],headersStr:"Properties charset from query Outputs uri Definitions",content:'XmlReader\n\ntype: "io.kestra.plugin.serdes.xml.XmlReader"\n\n\n> Read a xml file and write it to an ion serialized data file.\n\n\n# Properties\n\n\n# charset\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Default: UTF-8\n\n> The name of a supported charset\n\nDefault value is UTF-8.\n\n\n# from\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> Source file URI\n\n\n# query\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The name of a supported charset\n\nDefault value is UTF-8.\n\n\n# Outputs\n\n\n# uri\n\n * Type: string\n\n> URI of a temporary result file\n\n\n# Definitions',normalizedContent:'xmlreader\n\ntype: "io.kestra.plugin.serdes.xml.xmlreader"\n\n\n> read a xml file and write it to an ion serialized data file.\n\n\n# properties\n\n\n# charset\n\n * type: string\n * dynamic: ❓\n * required: ❌\n * default: utf-8\n\n> the name of a supported charset\n\ndefault value is utf-8.\n\n\n# from\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> source file uri\n\n\n# query\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the name of a supported charset\n\ndefault value is utf-8.\n\n\n# outputs\n\n\n# uri\n\n * type: string\n\n> uri of a temporary result file\n\n\n# definitions',charsets:{}},{title:"XmlWriter",frontmatter:{title:"XmlWriter",editLink:!1,description:"Read an ion serialized data file and write it to a xml file.",icon:"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9Im5vIj8+CjxzdmcKICAgICAgICB4bWxuczpkYz0iaHR0cDovL3B1cmwub3JnL2RjL2VsZW1lbnRzLzEuMS8iCiAgICAgICAgeG1sbnM6Y2M9Imh0dHA6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL25zIyIKICAgICAgICB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiCiAgICAgICAgeG1sbnM6c3ZnPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIKICAgICAgICB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciCiAgICAgICAgeG1sbnM6c29kaXBvZGk9Imh0dHA6Ly9zb2RpcG9kaS5zb3VyY2Vmb3JnZS5uZXQvRFREL3NvZGlwb2RpLTAuZHRkIgogICAgICAgIHhtbG5zOmlua3NjYXBlPSJodHRwOi8vd3d3Lmlua3NjYXBlLm9yZy9uYW1lc3BhY2VzL2lua3NjYXBlIgogICAgICAgIHdpZHRoPSIyNCIKICAgICAgICBoZWlnaHQ9IjI0IgogICAgICAgIHByZXNlcnZlQXNwZWN0UmF0aW89InhNaWRZTWlkIG1lZXQiCiAgICAgICAgdmlld0JveD0iMCAwIDI0IDI0IgogICAgICAgIHN0eWxlPSItbXMtdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTsgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpOyB0cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpOyIKICAgICAgICB2ZXJzaW9uPSIxLjEiCiAgICAgICAgaWQ9InN2ZzgiCiAgICAgICAgc29kaXBvZGk6ZG9jbmFtZT0iYnhzLWZpbGUtanNvbi5zdmciCiAgICAgICAgaW5rc2NhcGU6dmVyc2lvbj0iMC45Mi41ICgyMDYwZWMxZjlmLCAyMDIwLTA0LTA4KSI+CiAgPG1ldGFkYXRhCiAgICAgICAgICBpZD0ibWV0YWRhdGExNCI+CiAgICA8cmRmOlJERj4KICAgICAgPGNjOldvcmsKICAgICAgICAgICAgICByZGY6YWJvdXQ9IiI+CiAgICAgICAgPGRjOmZvcm1hdD5pbWFnZS9zdmcreG1sPC9kYzpmb3JtYXQ+CiAgICAgICAgPGRjOnR5cGUKICAgICAgICAgICAgICAgIHJkZjpyZXNvdXJjZT0iaHR0cDovL3B1cmwub3JnL2RjL2RjbWl0eXBlL1N0aWxsSW1hZ2UiIC8+CiAgICAgIDwvY2M6V29yaz4KICAgIDwvcmRmOlJERj4KICA8L21ldGFkYXRhPgogIDxkZWZzCiAgICAgICAgICBpZD0iZGVmczEyIiAvPgogIDxzb2RpcG9kaTpuYW1lZHZpZXcKICAgICAgICAgIHBhZ2Vjb2xvcj0iI2ZmZmZmZiIKICAgICAgICAgIGJvcmRlcmNvbG9yPSIjNjY2NjY2IgogICAgICAgICAgYm9yZGVyb3BhY2l0eT0iMSIKICAgICAgICAgIG9iamVjdHRvbGVyYW5jZT0iMTAiCiAgICAgICAgICBncmlkdG9sZXJhbmNlPSIxMCIKICAgICAgICAgIGd1aWRldG9sZXJhbmNlPSIxMCIKICAgICAgICAgIGlua3NjYXBlOnBhZ2VvcGFjaXR5PSIwIgogICAgICAgICAgaW5rc2NhcGU6cGFnZXNoYWRvdz0iMiIKICAgICAgICAgIGlua3NjYXBlOndpbmRvdy13aWR0aD0iMTkyMCIKICAgICAgICAgIGlua3NjYXBlOndpbmRvdy1oZWlnaHQ9IjEwMjIiCiAgICAgICAgICBpZD0ibmFtZWR2aWV3MTAiCiAgICAgICAgICBzaG93Z3JpZD0iZmFsc2UiCiAgICAgICAgICBpbmtzY2FwZTp6b29tPSI5LjgzMzMzMzMiCiAgICAgICAgICBpbmtzY2FwZTpjeD0iMTIuMjUwMDY2IgogICAgICAgICAgaW5rc2NhcGU6Y3k9IjI1LjYxMDk2NCIKICAgICAgICAgIGlua3NjYXBlOndpbmRvdy14PSIyNTYwIgogICAgICAgICAgaW5rc2NhcGU6d2luZG93LXk9IjAiCiAgICAgICAgICBpbmtzY2FwZTp3aW5kb3ctbWF4aW1pemVkPSIxIgogICAgICAgICAgaW5rc2NhcGU6Y3VycmVudC1sYXllcj0ic3ZnOCIgLz4KICA8cGF0aAogICAgICAgICAgZD0iTSA2LDIgQSAyLDIgMCAwIDAgNCw0IHYgMTYgYSAyLDIgMCAwIDAgMiwyIGggMTIgYSAyLDIgMCAwIDAgMiwtMiBWIDggTCAxNCwyIFogbSA3LDIgNSw1IGggLTQgLTEgeiBtIC02LjYxMzI4MSw5Ljk5MDIzNCBoIDAuODkwNjI1IGwgMC44MjAzMTIsMS4zNjkxNDEgMC44MDQ2ODgsLTEuMzY5MTQxIGggMC44NjkxNCBsIC0xLjE5NTMxMiwxLjg4NjcxOSAxLjI4NzEwOSwxLjkxOTkyMiBIIDguOTQxNDA2IEwgOC4wNTQ2ODcsMTYuMzU3NDIyIDcuMTY5OTIyLDE3Ljc5Njg3NSBIIDYuMzA0Njg3IGwgMS4yNjM2NzIsLTEuOTYyODkxIHogbSAzLjk1NTA3OCwwIGggMS4wOTk2MDkgbCAwLjkwMDM5MSwyLjkxMDE1NyBoIDAuMDE1NjMgTCAxMy4zMTI1LDEzLjk5MDIzNCBoIDEuMDk5NjA5IHYgMy44MDY2NDEgaCAtMC43NTE5NTMgdiAtMS44MDI3MzQgYyAwLC0wLjA4NTA3IDIuMTdlLTQsLTAuMTgxODU4IDAuMDAyLC0wLjI5Mjk2OSAwLjAwMzUsLTAuMTExMTExIDAuMDE2MjgsLTAuNDA3NTUyIDAuMDM3MTEsLTAuODg2NzE5IGggLTAuMDIzNDQgbCAtMC45ODI0MjIsMi45ODI0MjIgSCAxMS45NTMxNyBsIC0wLjkxNjAxNiwtMi45ODYzMjggaCAtMC4wMjM0NCBjIDAuMDMyOTksMC42MDc2MzkgMC4wNDg4MywxLjAxMTcxOSAwLjA0ODgzLDEuMjE0ODQ0IHYgMS43NzE0ODQgaCAtMC43MjA3MDMgeiBtIDUuMDI5Mjk3LDAgaCAwLjgwNjY0IHYgMy4xNDA2MjUgaCAxLjU0NDkyMiB2IDAuNjY2MDE2IGggLTIuMzUxNTYyIHoiCiAgICAgICAgICBpZD0icGF0aDQiCiAgICAgICAgICBpbmtzY2FwZTpjb25uZWN0b3ItY3VydmF0dXJlPSIwIgogICAgICAgICAgc3R5bGU9ImZpbGw6IzMzMyIgLz4KPC9zdmc+Cg==",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"XmlWriter"},{property:"og:description",content:"Read an ion serialized data file and write it to a xml file. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-serdes/tasks/xml/io.kestra.plugin.serdes.xml.XmlWriter.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"XmlWriter"},{name:"twitter:description",content:"Read an ion serialized data file and write it to a xml file. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-serdes/tasks/xml/io.kestra.plugin.serdes.xml.XmlWriter.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-serdes/tasks/xml/io.kestra.plugin.serdes.xml.XmlWriter.html",relativePath:"plugins/plugin-serdes/tasks/xml/io.kestra.plugin.serdes.xml.XmlWriter.md",key:"v-ec31147a",path:"/plugins/plugin-serdes/tasks/xml/io.kestra.plugin.serdes.xml.XmlWriter.html",headers:[{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:126},{level:3,title:"charset",slug:"charset",normalizedTitle:"charset",charIndex:141},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:278},{level:3,title:"rootName",slug:"rootname",normalizedTitle:"rootname",charIndex:354},{level:3,title:"timeZoneId",slug:"timezoneid",normalizedTitle:"timezoneid",charIndex:450},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:597},{level:3,title:"uri",slug:"uri",normalizedTitle:"uri",charIndex:609},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:668}],headersStr:"Properties charset from rootName timeZoneId Outputs uri Definitions",content:'XmlWriter\n\ntype: "io.kestra.plugin.serdes.xml.XmlWriter"\n\n\n> Read an ion serialized data file and write it to a xml file.\n\n\n# Properties\n\n\n# charset\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: UTF-8\n\n> The name of a supported charset\n\nDefault value is UTF-8.\n\n\n# from\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> Source file URI\n\n\n# rootName\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Default: items\n\n> Xml root name\n\n\n# timeZoneId\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: Etc/UTC\n\n> Timezone to use when no timezone can be parsed on the source.\n\n\n# Outputs\n\n\n# uri\n\n * Type: string\n\n> URI of a temporary result file\n\n\n# Definitions',normalizedContent:'xmlwriter\n\ntype: "io.kestra.plugin.serdes.xml.xmlwriter"\n\n\n> read an ion serialized data file and write it to a xml file.\n\n\n# properties\n\n\n# charset\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n * default: utf-8\n\n> the name of a supported charset\n\ndefault value is utf-8.\n\n\n# from\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> source file uri\n\n\n# rootname\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * default: items\n\n> xml root name\n\n\n# timezoneid\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n * default: etc/utc\n\n> timezone to use when no timezone can be parsed on the source.\n\n\n# outputs\n\n\n# uri\n\n * type: string\n\n> uri of a temporary result file\n\n\n# definitions',charsets:{}},{title:"Plugin singer",frontmatter:{title:"Plugin singer",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Plugin singer"},{property:"og:description",content:"Plugin singer | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-singer/"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Plugin singer"},{name:"twitter:description",content:"Plugin singer | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-singer/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-singer/",relativePath:"plugins/plugin-singer/README.md",key:"v-ceb69070",path:"/plugins/plugin-singer/",headers:[{level:2,title:"Taps",slug:"taps",normalizedTitle:"taps",charIndex:20},{level:3,title:"Tasks",slug:"tasks",normalizedTitle:"tasks",charIndex:29},{level:2,title:"Targets",slug:"targets",normalizedTitle:"targets",charIndex:383},{level:3,title:"Tasks",slug:"tasks-2",normalizedTitle:"tasks",charIndex:29}],headersStr:"Taps Tasks Targets Tasks",content:"# Plugin singer\n\n\n# Taps\n\n\n# Tasks\n\n * BigQuery\n * BingAds\n * ChargeBee\n * ExchangeRateHost\n * FacebookAds\n * Fastly\n * GitHub\n * Gitlab\n * GoogleAdwords\n * GoogleAnalytics\n * GoogleSearchConsole\n * Marketo\n * PipelinewiseMongoDb\n * PipelinewiseMysql\n * PipelinewisePostgres\n * Quickbooks\n * Recharge\n * SageIntacct\n * Salesforce\n * Shopify\n * Slack\n * Stripe\n * Zendesk\n * Zoom\n\n\n# Targets\n\n\n# Tasks\n\n * AdswerveBigQuery\n * Csv\n * DatamillCoPostgres\n * Json\n * MeltanoSnowflake\n * PipelinewisePostgres\n * PipelinewiseRedshift",normalizedContent:"# plugin singer\n\n\n# taps\n\n\n# tasks\n\n * bigquery\n * bingads\n * chargebee\n * exchangeratehost\n * facebookads\n * fastly\n * github\n * gitlab\n * googleadwords\n * googleanalytics\n * googlesearchconsole\n * marketo\n * pipelinewisemongodb\n * pipelinewisemysql\n * pipelinewisepostgres\n * quickbooks\n * recharge\n * sageintacct\n * salesforce\n * shopify\n * slack\n * stripe\n * zendesk\n * zoom\n\n\n# targets\n\n\n# tasks\n\n * adswervebigquery\n * csv\n * datamillcopostgres\n * json\n * meltanosnowflake\n * pipelinewisepostgres\n * pipelinewiseredshift",charsets:{}},{title:"BigQuery",frontmatter:{title:"BigQuery",editLink:!1,description:"A Singer tap to fetch data from a BigQuery.",icon:"PHN2ZyBpZD0iUHJvZHVjdF9JY29ucyIgZGF0YS1uYW1lPSJQcm9kdWN0IEljb25zIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCAyNCAyNCI+PGRlZnM+PHN0eWxlPi5jbHMtMXtmaWxsOiNhZWNiZmE7fS5jbHMtMSwuY2xzLTIsLmNscy0ze2ZpbGwtcnVsZTpldmVub2RkO30uY2xzLTJ7ZmlsbDojNjY5ZGY2O30uY2xzLTN7ZmlsbDojNDI4NWY0O308L3N0eWxlPjwvZGVmcz48dGl0bGU+SWNvbl8yNHB4X0NvbG9yX0JpZ1F1ZXJ5PC90aXRsZT48ZyBpZD0iU2hhcGUiPjxwYXRoIGNsYXNzPSJjbHMtMSIgZD0iTTYuNzMsMTAuODN2Mi42M0E0LjkxLDQuOTEsMCwwLDAsOC40NCwxNS4yVjEwLjgzWiIvPjxwYXRoIGNsYXNzPSJjbHMtMiIgZD0iTTkuODksOC40MXY3LjUzQTcuNjIsNy42MiwwLDAsMCwxMSwxNiw4LDgsMCwwLDAsMTIsMTZWOC40MVoiLz48cGF0aCBjbGFzcz0iY2xzLTEiIGQ9Ik0xMy42NCwxMS44NnYzLjI5YTUsNSwwLDAsMCwxLjctMS44MlYxMS44NloiLz48cGF0aCBjbGFzcz0iY2xzLTMiIGQ9Ik0xNy43NCwxNi4zMmwtMS40MiwxLjQyYS40Mi40MiwwLDAsMCwwLC42bDMuNTQsMy41NGEuNDIuNDIsMCwwLDAsLjU5LDBsMS40My0xLjQzYS40Mi40MiwwLDAsMCwwLS41OWwtMy41NC0zLjU0YS40Mi40MiwwLDAsMC0uNiwwIi8+PHBhdGggY2xhc3M9ImNscy0yIiBkPSJNMTEsMmE5LDksMCwxLDAsOSw5LDksOSwwLDAsMC05LTltMCwxNS42OUE2LjY4LDYuNjgsMCwxLDEsMTcuNjksMTEsNi42OCw2LjY4LDAsMCwxLDExLDE3LjY5Ii8+PC9nPjwvc3ZnPg==",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"BigQuery"},{property:"og:description",content:"A Singer tap to fetch data from a BigQuery. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.BigQuery.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"BigQuery"},{name:"twitter:description",content:"A Singer tap to fetch data from a BigQuery. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.BigQuery.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.BigQuery.html",relativePath:"plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.BigQuery.md",key:"v-caee76d6",path:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.BigQuery.html",headers:[{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:146},{level:3,title:"args",slug:"args",normalizedTitle:"args",charIndex:161},{level:3,title:"dockerOptions",slug:"dockeroptions",normalizedTitle:"dockeroptions",charIndex:304},{level:3,title:"endDateTime",slug:"enddatetime",normalizedTitle:"enddatetime",charIndex:418},{level:3,title:"env",slug:"env",normalizedTitle:"env",charIndex:535},{level:3,title:"exitOnFailed",slug:"exitonfailed",normalizedTitle:"exitonfailed",charIndex:675},{level:3,title:"files",slug:"files",normalizedTitle:"files",charIndex:1017},{level:3,title:"inputFiles",slug:"inputfiles",normalizedTitle:"inputfiles",charIndex:1205},{level:3,title:"interpreter",slug:"interpreter",normalizedTitle:"interpreter",charIndex:1600},{level:3,title:"interpreterArgs",slug:"interpreterargs",normalizedTitle:"interpreterargs",charIndex:1723},{level:3,title:"limit",slug:"limit",normalizedTitle:"limit",charIndex:1849},{level:3,title:"outputFiles",slug:"outputfiles",normalizedTitle:"outputfiles",charIndex:1172},{level:3,title:"outputsFiles",slug:"outputsfiles",normalizedTitle:"outputsfiles",charIndex:2429},{level:3,title:"pythonPath",slug:"pythonpath",normalizedTitle:"pythonpath",charIndex:2568},{level:3,title:"requirements",slug:"requirements",normalizedTitle:"requirements",charIndex:2740},{level:3,title:"runner",slug:"runner",normalizedTitle:"runner",charIndex:400},{level:3,title:"serviceAccount",slug:"serviceaccount",normalizedTitle:"serviceaccount",charIndex:3144},{level:3,title:"startAlwaysInclusive",slug:"startalwaysinclusive",normalizedTitle:"startalwaysinclusive",charIndex:3252},{level:3,title:"startDateTime",slug:"startdatetime",normalizedTitle:"startdatetime",charIndex:3684},{level:3,title:"streams",slug:"streams",normalizedTitle:"streams",charIndex:3936},{level:3,title:"streamsConfigurations",slug:"streamsconfigurations",normalizedTitle:"streamsconfigurations",charIndex:4153},{level:3,title:"warningOnStdErr",slug:"warningonstderr",normalizedTitle:"warningonstderr",charIndex:4311},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:4439},{level:3,title:"count",slug:"count",normalizedTitle:"count",charIndex:3153},{level:3,title:"schemas",slug:"schemas",normalizedTitle:"schemas",charIndex:4500},{level:3,title:"state",slug:"state",normalizedTitle:"state",charIndex:845},{level:3,title:"streams",slug:"streams-2",normalizedTitle:"streams",charIndex:3936},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:4851},{level:3,title:"Stream",slug:"stream",normalizedTitle:"stream",charIndex:3972},{level:3,title:"DockerOptions",slug:"dockeroptions-2",normalizedTitle:"dockeroptions",charIndex:328},{level:3,title:"StreamsConfiguration",slug:"streamsconfiguration",normalizedTitle:"streamsconfiguration",charIndex:4203}],headersStr:"Properties args dockerOptions endDateTime env exitOnFailed files inputFiles interpreter interpreterArgs limit outputFiles outputsFiles pythonPath requirements runner serviceAccount startAlwaysInclusive startDateTime streams streamsConfigurations warningOnStdErr Outputs count schemas state streams Definitions Stream DockerOptions StreamsConfiguration",content:'BigQuery\n\ntype: "io.kestra.plugin.singer.taps.BigQuery"\n\n\n> A Singer tap to fetch data from a BigQuery.\n\nFull documentation can be found here\n\n\n# Properties\n\n\n# args\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Python command args\n\nArguments list to pass to main python script\n\n\n# dockerOptions\n\n * Type: DockerOptions\n * Dynamic: ❓\n * Required: ❌\n\n> Docker options when using runner DOCKER\n\n\n# endDateTime\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Date up to when historical data will be extracted.\n\n\n# env\n\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Additional environnements variable to add for current process.\n\n\n# exitOnFailed\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Exit if any non true return value\n\nThis tells bash that it should exit the script if any statement returns a non-true return value.\nThe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n\n# files\n\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The list of files that will be uploaded to internal storage,\n\nuse outputFiles property instead\n\n\n# inputFiles\n\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Input files are extra files supplied by user that make it simpler organize code.\n\nDescribe a files map that will be written and usable in execution context. In python execution context is in a temp folder, for bash scripts, you can reach files using a workingDir variable like \'source {{workingDir}}/myfile.sh\'\n\n\n# interpreter\n\n * Type: string\n * Dynamic: ❌\n * Required: ✔️\n * Default: /bin/sh\n * Min length: 1\n\n> Interpreter to used\n\n\n# interpreterArgs\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n * Default: [-c]\n\n> Interpreter args used\n\n\n# limit\n\n * Type: integer\n * Dynamic: ❌\n * Required: ✔️\n\n> Limits the number of records returned in each stream, applied as a limit in the query.\n\n\n# outputFiles\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Output file list that will be uploaded to internal storage\n\nList of key that will generate temporary files.\nOn the command, just can use with special variable named outputFiles.key.\nIf you add a files with ["first"], you can use the special vars echo 1 >> {[ outputFiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n\n# outputsFiles\n\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Deprecated Output file\n\nuse outputFiles\n\n\n# pythonPath\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Default: python\n * Min length: 1\n\n> The python interpreter to use\n\nSet the python interpreter path to use\n\n\n# requirements\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Requirements are python dependencies to add to the python execution process\n\nPython dependencies list to setup in the virtualenv, in the same format than requirements.txt\n\n\n# runner\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ✔️\n\n * Default: PROCESS\n\n * Possible Values:\n   \n   * PROCESS\n   * DOCKER\n\n> Runner to use\n\n\n# serviceAccount\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The json service account key as string\n\n\n# startAlwaysInclusive\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> When replicating incrementally, disable to only select records whose datetime_key is greater than the maximum value replicated in the last run, by excluding records whose timestamps match exactly.\n\nThis could cause records to be missed that were created after the last run finished, but during the same second and with the same timestamp.\n\n\n# startDateTime\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> Determines how much historical data will be extracted.\n\nPlease be aware that the larger the time period and amount of data, the longer the initial extraction can be expected to take.\n\n\n# streams\n\n * Type: array\n * SubType: Stream\n * Dynamic: ❌\n * Required: ✔️\n * Min items: 1\n\n> Array holding objects describing streams (tables) to extract, with name, table, columns, datetime_key, and filters keys.\n\n\n# streamsConfigurations\n\n * Type: array\n * SubType: StreamsConfiguration\n * Dynamic: ❌\n * Required: ✔️\n * Min items: 1\n\n> The list of stream configurations\n\n\n# warningOnStdErr\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Use WARNING state if any stdErr is sent\n\n\n# Outputs\n\n\n# count\n\n * Type: object\n\n> Counter of streams\n\n\n# schemas\n\n * Type: object\n * SubType: string\n\n> Map of schemas captured\n\nKey is stream name, value is uri of the schema file on ion kestra storage\n\n\n# state\n\n * Type: string\n\n> Uri of the state file\n\n\n# streams\n\n * Type: object\n * SubType: string\n\n> Map of stream captured\n\nKey is stream name, value is uri of the stream file on ion kestra storage\n\n\n# Definitions\n\n\n# Stream\n\n# columns\n\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n\n# datetime_key\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# filters\n\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n\n> these are parsed in WHERE clause\n\nfilters are optional but we strongly recommend using this over a large partitioned table to control the cost.\n\n# name\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# table\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n\n# DockerOptions\n\n# dockerConfig\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker config file\n\nFull file that can be used to configure private registries, ...\n\n# dockerHost\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: unix:///var/run/docker.sock\n\n> Docker api uri\n\n# entryPoint\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker entrypoint to use\n\n# extraHosts\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker extra host to use\n\n# image\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> Docker image to use\n\n# user\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker user to use\n\n\n# StreamsConfiguration\n\n# propertiesPattern\n\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n\n# replicationKeys\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# replicationMethod\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Possible Values:\n   \n   * FULL_TABLE\n   * INCREMENTAL\n   * LOG_BASED\n\n# selected\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: true\n\n# stream\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌',normalizedContent:'bigquery\n\ntype: "io.kestra.plugin.singer.taps.bigquery"\n\n\n> a singer tap to fetch data from a bigquery.\n\nfull documentation can be found here\n\n\n# properties\n\n\n# args\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> python command args\n\narguments list to pass to main python script\n\n\n# dockeroptions\n\n * type: dockeroptions\n * dynamic: ❓\n * required: ❌\n\n> docker options when using runner docker\n\n\n# enddatetime\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> date up to when historical data will be extracted.\n\n\n# env\n\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> additional environnements variable to add for current process.\n\n\n# exitonfailed\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> exit if any non true return value\n\nthis tells bash that it should exit the script if any statement returns a non-true return value.\nthe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n\n# files\n\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> the list of files that will be uploaded to internal storage,\n\nuse outputfiles property instead\n\n\n# inputfiles\n\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> input files are extra files supplied by user that make it simpler organize code.\n\ndescribe a files map that will be written and usable in execution context. in python execution context is in a temp folder, for bash scripts, you can reach files using a workingdir variable like \'source {{workingdir}}/myfile.sh\'\n\n\n# interpreter\n\n * type: string\n * dynamic: ❌\n * required: ✔️\n * default: /bin/sh\n * min length: 1\n\n> interpreter to used\n\n\n# interpreterargs\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n * default: [-c]\n\n> interpreter args used\n\n\n# limit\n\n * type: integer\n * dynamic: ❌\n * required: ✔️\n\n> limits the number of records returned in each stream, applied as a limit in the query.\n\n\n# outputfiles\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> output file list that will be uploaded to internal storage\n\nlist of key that will generate temporary files.\non the command, just can use with special variable named outputfiles.key.\nif you add a files with ["first"], you can use the special vars echo 1 >> {[ outputfiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n\n# outputsfiles\n\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> deprecated output file\n\nuse outputfiles\n\n\n# pythonpath\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * default: python\n * min length: 1\n\n> the python interpreter to use\n\nset the python interpreter path to use\n\n\n# requirements\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> requirements are python dependencies to add to the python execution process\n\npython dependencies list to setup in the virtualenv, in the same format than requirements.txt\n\n\n# runner\n\n * type: string\n\n * dynamic: ❌\n\n * required: ✔️\n\n * default: process\n\n * possible values:\n   \n   * process\n   * docker\n\n> runner to use\n\n\n# serviceaccount\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the json service account key as string\n\n\n# startalwaysinclusive\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> when replicating incrementally, disable to only select records whose datetime_key is greater than the maximum value replicated in the last run, by excluding records whose timestamps match exactly.\n\nthis could cause records to be missed that were created after the last run finished, but during the same second and with the same timestamp.\n\n\n# startdatetime\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> determines how much historical data will be extracted.\n\nplease be aware that the larger the time period and amount of data, the longer the initial extraction can be expected to take.\n\n\n# streams\n\n * type: array\n * subtype: stream\n * dynamic: ❌\n * required: ✔️\n * min items: 1\n\n> array holding objects describing streams (tables) to extract, with name, table, columns, datetime_key, and filters keys.\n\n\n# streamsconfigurations\n\n * type: array\n * subtype: streamsconfiguration\n * dynamic: ❌\n * required: ✔️\n * min items: 1\n\n> the list of stream configurations\n\n\n# warningonstderr\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> use warning state if any stderr is sent\n\n\n# outputs\n\n\n# count\n\n * type: object\n\n> counter of streams\n\n\n# schemas\n\n * type: object\n * subtype: string\n\n> map of schemas captured\n\nkey is stream name, value is uri of the schema file on ion kestra storage\n\n\n# state\n\n * type: string\n\n> uri of the state file\n\n\n# streams\n\n * type: object\n * subtype: string\n\n> map of stream captured\n\nkey is stream name, value is uri of the stream file on ion kestra storage\n\n\n# definitions\n\n\n# stream\n\n# columns\n\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n\n# datetime_key\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# filters\n\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n\n> these are parsed in where clause\n\nfilters are optional but we strongly recommend using this over a large partitioned table to control the cost.\n\n# name\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# table\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n\n# dockeroptions\n\n# dockerconfig\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> docker config file\n\nfull file that can be used to configure private registries, ...\n\n# dockerhost\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n * default: unix:///var/run/docker.sock\n\n> docker api uri\n\n# entrypoint\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> docker entrypoint to use\n\n# extrahosts\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> docker extra host to use\n\n# image\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> docker image to use\n\n# user\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> docker user to use\n\n\n# streamsconfiguration\n\n# propertiespattern\n\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n\n# replicationkeys\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# replicationmethod\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * possible values:\n   \n   * full_table\n   * incremental\n   * log_based\n\n# selected\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: true\n\n# stream\n\n * type: string\n * dynamic: ❓\n * required: ❌',charsets:{}},{title:"BingAds",frontmatter:{title:"BingAds",editLink:!1,description:"A Singer tap to fetch data from a Bing ads.",icon:"PHN2ZyBoZWlnaHQ9IjI1MDAiIHZpZXdCb3g9IjIxMyAxMzguMiA1OTggNzQ3LjYiIHdpZHRoPSIyNTAwIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciPjxwYXRoIGQ9Im00MzUgMzMyIDc2LjIgMTY1LjEgMTEyLjQgNTAuNy00MDUuNyAyMTMuNCAxNjYuMy0xNDh2LTQyMi41bC0xNzEuMi01Mi41djYyOC40bDE3MC4yIDExOS4yIDQyNy44LTI1NXYtMTgzLjd6IiBmaWxsPSIjMDA4OTdiIi8+PC9zdmc+",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"BingAds"},{property:"og:description",content:"A Singer tap to fetch data from a Bing ads. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.BingAds.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"BingAds"},{name:"twitter:description",content:"A Singer tap to fetch data from a Bing ads. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.BingAds.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.BingAds.html",relativePath:"plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.BingAds.md",key:"v-8966c87a",path:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.BingAds.html",headers:[{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:144},{level:3,title:"accountIds",slug:"accountids",normalizedTitle:"accountids",charIndex:159},{level:3,title:"args",slug:"args",normalizedTitle:"args",charIndex:278},{level:3,title:"customerId",slug:"customerid",normalizedTitle:"customerid",charIndex:421},{level:3,title:"developerToken",slug:"developertoken",normalizedTitle:"developertoken",charIndex:522},{level:3,title:"dockerOptions",slug:"dockeroptions",normalizedTitle:"dockeroptions",charIndex:656},{level:3,title:"env",slug:"env",normalizedTitle:"env",charIndex:770},{level:3,title:"exitOnFailed",slug:"exitonfailed",normalizedTitle:"exitonfailed",charIndex:910},{level:3,title:"files",slug:"files",normalizedTitle:"files",charIndex:1252},{level:3,title:"inputFiles",slug:"inputfiles",normalizedTitle:"inputfiles",charIndex:1440},{level:3,title:"interpreter",slug:"interpreter",normalizedTitle:"interpreter",charIndex:1835},{level:3,title:"interpreterArgs",slug:"interpreterargs",normalizedTitle:"interpreterargs",charIndex:1958},{level:3,title:"oauthClientId",slug:"oauthclientid",normalizedTitle:"oauthclientid",charIndex:2084},{level:3,title:"oauthClientSecret",slug:"oauthclientsecret",normalizedTitle:"oauthclientsecret",charIndex:2192},{level:3,title:"outputFiles",slug:"outputfiles",normalizedTitle:"outputfiles",charIndex:1407},{level:3,title:"outputsFiles",slug:"outputsfiles",normalizedTitle:"outputsfiles",charIndex:2740},{level:3,title:"pythonPath",slug:"pythonpath",normalizedTitle:"pythonpath",charIndex:2879},{level:3,title:"refreshToken",slug:"refreshtoken",normalizedTitle:"refreshtoken",charIndex:3051},{level:3,title:"requirements",slug:"requirements",normalizedTitle:"requirements",charIndex:3241},{level:3,title:"runner",slug:"runner",normalizedTitle:"runner",charIndex:752},{level:3,title:"startDate",slug:"startdate",normalizedTitle:"startdate",charIndex:3645},{level:3,title:"streamsConfigurations",slug:"streamsconfigurations",normalizedTitle:"streamsconfigurations",charIndex:3893},{level:3,title:"warningOnStdErr",slug:"warningonstderr",normalizedTitle:"warningonstderr",charIndex:4051},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:4179},{level:3,title:"count",slug:"count",normalizedTitle:"count",charIndex:161},{level:3,title:"schemas",slug:"schemas",normalizedTitle:"schemas",charIndex:4240},{level:3,title:"state",slug:"state",normalizedTitle:"state",charIndex:1080},{level:3,title:"streams",slug:"streams",normalizedTitle:"streams",charIndex:3893},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:4591},{level:3,title:"DockerOptions",slug:"dockeroptions-2",normalizedTitle:"dockeroptions",charIndex:680},{level:3,title:"StreamsConfiguration",slug:"streamsconfiguration",normalizedTitle:"streamsconfiguration",charIndex:3943}],headersStr:"Properties accountIds args customerId developerToken dockerOptions env exitOnFailed files inputFiles interpreter interpreterArgs oauthClientId oauthClientSecret outputFiles outputsFiles pythonPath refreshToken requirements runner startDate streamsConfigurations warningOnStdErr Outputs count schemas state streams Definitions DockerOptions StreamsConfiguration",content:'BingAds\n\ntype: "io.kestra.plugin.singer.taps.BingAds"\n\n\n> A Singer tap to fetch data from a Bing ads.\n\nFull documentation can be found here\n\n\n# Properties\n\n\n# accountIds\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min items: 1\n\n> Your accounts IDs.\n\n\n# args\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Python command args\n\nArguments list to pass to main python script\n\n\n# customerId\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> Your Customer ID.\n\n\n# developerToken\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> Your Developer Token for Bing Ads Application.\n\n\n# dockerOptions\n\n * Type: DockerOptions\n * Dynamic: ❓\n * Required: ❌\n\n> Docker options when using runner DOCKER\n\n\n# env\n\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Additional environnements variable to add for current process.\n\n\n# exitOnFailed\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Exit if any non true return value\n\nThis tells bash that it should exit the script if any statement returns a non-true return value.\nThe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n\n# files\n\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The list of files that will be uploaded to internal storage,\n\nuse outputFiles property instead\n\n\n# inputFiles\n\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Input files are extra files supplied by user that make it simpler organize code.\n\nDescribe a files map that will be written and usable in execution context. In python execution context is in a temp folder, for bash scripts, you can reach files using a workingDir variable like \'source {{workingDir}}/myfile.sh\'\n\n\n# interpreter\n\n * Type: string\n * Dynamic: ❌\n * Required: ✔️\n * Default: /bin/sh\n * Min length: 1\n\n> Interpreter to used\n\n\n# interpreterArgs\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n * Default: [-c]\n\n> Interpreter args used\n\n\n# oauthClientId\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> Your OAuth Client ID.\n\n\n# oauthClientSecret\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> Your OAuth Client Secret.\n\n\n# outputFiles\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Output file list that will be uploaded to internal storage\n\nList of key that will generate temporary files.\nOn the command, just can use with special variable named outputFiles.key.\nIf you add a files with ["first"], you can use the special vars echo 1 >> {[ outputFiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n\n# outputsFiles\n\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Deprecated Output file\n\nuse outputFiles\n\n\n# pythonPath\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Default: python\n * Min length: 1\n\n> The python interpreter to use\n\nSet the python interpreter path to use\n\n\n# refreshToken\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> The Refresh Token generated through the OAuth flow run using your OAuth Client and your Developer Token.\n\n\n# requirements\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Requirements are python dependencies to add to the python execution process\n\nPython dependencies list to setup in the virtualenv, in the same format than requirements.txt\n\n\n# runner\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ✔️\n\n * Default: PROCESS\n\n * Possible Values:\n   \n   * PROCESS\n   * DOCKER\n\n> Runner to use\n\n\n# startDate\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> Determines how much historical data will be extracted.\n\nPlease be aware that the larger the time period and amount of data, the longer the initial extraction can be expected to take.\n\n\n# streamsConfigurations\n\n * Type: array\n * SubType: StreamsConfiguration\n * Dynamic: ❌\n * Required: ✔️\n * Min items: 1\n\n> The list of stream configurations\n\n\n# warningOnStdErr\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Use WARNING state if any stdErr is sent\n\n\n# Outputs\n\n\n# count\n\n * Type: object\n\n> Counter of streams\n\n\n# schemas\n\n * Type: object\n * SubType: string\n\n> Map of schemas captured\n\nKey is stream name, value is uri of the schema file on ion kestra storage\n\n\n# state\n\n * Type: string\n\n> Uri of the state file\n\n\n# streams\n\n * Type: object\n * SubType: string\n\n> Map of stream captured\n\nKey is stream name, value is uri of the stream file on ion kestra storage\n\n\n# Definitions\n\n\n# DockerOptions\n\n# dockerConfig\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker config file\n\nFull file that can be used to configure private registries, ...\n\n# dockerHost\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: unix:///var/run/docker.sock\n\n> Docker api uri\n\n# entryPoint\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker entrypoint to use\n\n# extraHosts\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker extra host to use\n\n# image\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> Docker image to use\n\n# user\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker user to use\n\n\n# StreamsConfiguration\n\n# propertiesPattern\n\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n\n# replicationKeys\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# replicationMethod\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Possible Values:\n   \n   * FULL_TABLE\n   * INCREMENTAL\n   * LOG_BASED\n\n# selected\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: true\n\n# stream\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌',normalizedContent:'bingads\n\ntype: "io.kestra.plugin.singer.taps.bingads"\n\n\n> a singer tap to fetch data from a bing ads.\n\nfull documentation can be found here\n\n\n# properties\n\n\n# accountids\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ✔️\n * min items: 1\n\n> your accounts ids.\n\n\n# args\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> python command args\n\narguments list to pass to main python script\n\n\n# customerid\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> your customer id.\n\n\n# developertoken\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> your developer token for bing ads application.\n\n\n# dockeroptions\n\n * type: dockeroptions\n * dynamic: ❓\n * required: ❌\n\n> docker options when using runner docker\n\n\n# env\n\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> additional environnements variable to add for current process.\n\n\n# exitonfailed\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> exit if any non true return value\n\nthis tells bash that it should exit the script if any statement returns a non-true return value.\nthe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n\n# files\n\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> the list of files that will be uploaded to internal storage,\n\nuse outputfiles property instead\n\n\n# inputfiles\n\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> input files are extra files supplied by user that make it simpler organize code.\n\ndescribe a files map that will be written and usable in execution context. in python execution context is in a temp folder, for bash scripts, you can reach files using a workingdir variable like \'source {{workingdir}}/myfile.sh\'\n\n\n# interpreter\n\n * type: string\n * dynamic: ❌\n * required: ✔️\n * default: /bin/sh\n * min length: 1\n\n> interpreter to used\n\n\n# interpreterargs\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n * default: [-c]\n\n> interpreter args used\n\n\n# oauthclientid\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> your oauth client id.\n\n\n# oauthclientsecret\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> your oauth client secret.\n\n\n# outputfiles\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> output file list that will be uploaded to internal storage\n\nlist of key that will generate temporary files.\non the command, just can use with special variable named outputfiles.key.\nif you add a files with ["first"], you can use the special vars echo 1 >> {[ outputfiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n\n# outputsfiles\n\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> deprecated output file\n\nuse outputfiles\n\n\n# pythonpath\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * default: python\n * min length: 1\n\n> the python interpreter to use\n\nset the python interpreter path to use\n\n\n# refreshtoken\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> the refresh token generated through the oauth flow run using your oauth client and your developer token.\n\n\n# requirements\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> requirements are python dependencies to add to the python execution process\n\npython dependencies list to setup in the virtualenv, in the same format than requirements.txt\n\n\n# runner\n\n * type: string\n\n * dynamic: ❌\n\n * required: ✔️\n\n * default: process\n\n * possible values:\n   \n   * process\n   * docker\n\n> runner to use\n\n\n# startdate\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> determines how much historical data will be extracted.\n\nplease be aware that the larger the time period and amount of data, the longer the initial extraction can be expected to take.\n\n\n# streamsconfigurations\n\n * type: array\n * subtype: streamsconfiguration\n * dynamic: ❌\n * required: ✔️\n * min items: 1\n\n> the list of stream configurations\n\n\n# warningonstderr\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> use warning state if any stderr is sent\n\n\n# outputs\n\n\n# count\n\n * type: object\n\n> counter of streams\n\n\n# schemas\n\n * type: object\n * subtype: string\n\n> map of schemas captured\n\nkey is stream name, value is uri of the schema file on ion kestra storage\n\n\n# state\n\n * type: string\n\n> uri of the state file\n\n\n# streams\n\n * type: object\n * subtype: string\n\n> map of stream captured\n\nkey is stream name, value is uri of the stream file on ion kestra storage\n\n\n# definitions\n\n\n# dockeroptions\n\n# dockerconfig\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> docker config file\n\nfull file that can be used to configure private registries, ...\n\n# dockerhost\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n * default: unix:///var/run/docker.sock\n\n> docker api uri\n\n# entrypoint\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> docker entrypoint to use\n\n# extrahosts\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> docker extra host to use\n\n# image\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> docker image to use\n\n# user\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> docker user to use\n\n\n# streamsconfiguration\n\n# propertiespattern\n\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n\n# replicationkeys\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# replicationmethod\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * possible values:\n   \n   * full_table\n   * incremental\n   * log_based\n\n# selected\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: true\n\n# stream\n\n * type: string\n * dynamic: ❓\n * required: ❌',charsets:{}},{title:"ChargeBee",frontmatter:{title:"ChargeBee",editLink:!1,description:"A Singer tap to fetch data from a ChargeBee account.",icon:"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9Im5vIj8+CjxzdmcgeG1sbnM6c2tldGNoPSJodHRwOi8vd3d3LmJvaGVtaWFuY29kaW5nLmNvbS9za2V0Y2gvbnMiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgaGVpZ2h0PSIyNDBweCIgd2lkdGg9IjIxNHB4IiB2ZXJzaW9uPSIxLjEiIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB2aWV3Qm94PSIwIDAgMjE0IDI0MCI+PCEtLSBHZW5lcmF0b3I6IFNrZXRjaCAzLjQuMiAoMTU4NTUpIC0gaHR0cDovL3d3dy5ib2hlbWlhbmNvZGluZy5jb20vc2tldGNoIC0tPgogPHRpdGxlPlBhZ2UgMTwvdGl0bGU+CiA8ZGVzYz5DcmVhdGVkIHdpdGggU2tldGNoLjwvZGVzYz4KIDxnIGlkPSJQYWdlLTEiIGZpbGwtcnVsZT0iZXZlbm9kZCIgc2tldGNoOnR5cGU9Ik1TUGFnZSIgZmlsbD0ibm9uZSI+CiAgPGcgaWQ9IkRlc2t0b3AtSEQtQ29weS0yNiIgdHJhbnNmb3JtPSJ0cmFuc2xhdGUoLTUzMyAtMjA3NikiIGZpbGw9IiNGRjZDMzYiIHNrZXRjaDp0eXBlPSJNU0FydGJvYXJkR3JvdXAiPgogICA8ZyBpZD0iUGFnZS0xIiB0cmFuc2Zvcm09InRyYW5zbGF0ZSg1MzMgMjA3NikiIHNrZXRjaDp0eXBlPSJNU0xheWVyR3JvdXAiPgogICAgPHBhdGggaWQ9IkZpbGwtMSIgc2tldGNoOnR5cGU9Ik1TU2hhcGVHcm91cCIgZD0ibTEyMCAyMjMuNjRjLTI3LjY4MSAwLTUzLjcwNy0xMC43OC03My4yODEtMzAuMzYtMTkuNTc1LTE5LjU3LTMwLjM1NS00NS42LTMwLjM1NS03My4yOCAwLTI3LjY4MiAxMC43OC01My43MDggMzAuMzU1LTczLjI4MiAxOS41NzQtMTkuNTc0IDQ1LjYtMzAuMzU0IDczLjI4MS0zMC4zNTQgMTQuNDUgMCAyOC40MyAyLjkxOCA0MS41NiA4LjY3MyAxMi42OSA1LjU1OCAyMy45NyAxMy40ODQgMzMuNTUgMjMuNTU4IDIuNDkgMi42MiAyLjM5IDYuNzYzLTAuMjMgOS4yNTQtMi42MiAyLjQ5LTYuNzYgMi4zODctOS4yNS0wLjIzMy04LjM4LTguODA3LTE4LjI0LTE1LjczNC0yOS4zMi0yMC41ODktMTEuNDYtNS4wMjUtMjMuNjgtNy41NzItMzYuMzEtNy41NzItNDkuOTI2IDAtOTAuNTQ1IDQwLjYxOC05MC41NDUgOTAuNTQ1IDAgNDkuOTMgNDAuNjE5IDkwLjU1IDkwLjU0NSA5MC41NSAxMi42MyAwIDI0Ljg1LTIuNTUgMzYuMzItNy41OCAxMS4wOC00Ljg2IDIwLjk0LTExLjc5IDI5LjMyLTIwLjYgMi40OS0yLjYyIDYuNjMtMi43MiA5LjI1LTAuMjNzMi43MiA2LjYzIDAuMjMgOS4yNWMtOS41OCAxMC4wOC0yMC44NiAxOC4wMS0zMy41NSAyMy41Ny0xMy4xMyA1Ljc2LTI3LjEyIDguNjgtNDEuNTcgOC42OCIvPgogICAgPHBhdGggaWQ9IkZpbGwtMyIgc2tldGNoOnR5cGU9Ik1TU2hhcGVHcm91cCIgZD0ibTEyMCAyMDIuOTFjLTQ1LjcxNiAwLTgyLjkwOC0zNy4xOS04Mi45MDgtODIuOTEgMC00NS43MTYgMzcuMTkyLTgyLjkwOSA4Mi45MDgtODIuOTA5IDExLjU2IDAgMjIuNzUgMi4zMzQgMzMuMjUgNi45MzggMTAuMTUgNC40NDcgMTkuMTggMTAuNzg3IDI2Ljg0IDE4Ljg0NyAxLjY2IDEuNzQ2IDEuNTkgNC41MDktMC4xNSA2LjE2OS0xLjc1IDEuNjYxLTQuNTEgMS41OTEtNi4xNy0wLjE1NS0xNC4xNS0xNC44NzgtMzMuMjUtMjMuMDcyLTUzLjc3LTIzLjA3Mi00MC45MDMgMC03NC4xODEgMzMuMjc4LTc0LjE4MSA3NC4xODIgMCA0MC45IDMzLjI3OCA3NC4xOCA3NC4xODEgNzQuMTggMTEuMDUgMCAyMS42Ny0yLjM3IDMxLjU4LTcuMDQgMi4xOC0xLjAyIDQuNzgtMC4wOSA1LjgxIDIuMDlzMC4wOSA0Ljc4LTIuMDkgNS44MWMtMTEuMDggNS4yMi0yMi45NiA3Ljg3LTM1LjMgNy44NyIvPgogICAgPHBhdGggaWQ9IkZpbGwtNSIgc2tldGNoOnR5cGU9Ik1TU2hhcGVHcm91cCIgZD0ibTIwNC4xNSAxNjguODdjMyAyLjAyIDMuNzkgNi4wOSAxLjc3IDkuMDgtMi4wMiAzLTYuMDkgMy43OS05LjA5IDEuNzctMi45OS0yLjAyLTMuNzktNi4wOS0xLjc2LTkuMDkgMi4wMi0yLjk5IDYuMDktMy43OSA5LjA4LTEuNzYiLz4KICAgIDxwYXRoIGlkPSJGaWxsLTciIHNrZXRjaDp0eXBlPSJNU1NoYXBlR3JvdXAiIGQ9Im0xMjAgMjQwYy0zMi4wNTIgMC02Mi4xODctMTIuNDgtODQuODUyLTM1LjE1LTIyLjY2NS0yMi42Ni0zNS4xNDctNTIuOC0zNS4xNDctODQuODUtMC4wMDAxNzA5MS0zMi4wNTMgMTIuNDgyLTYyLjE4NyAzNS4xNDctODQuODUzIDIyLjY2NS0yMi42NjUgNTIuOC0zNS4xNDcgODQuODUyLTM1LjE0NyAxNi43MyAwIDMyLjkyIDMuMzc4OCA0OC4xMyAxMC4wNDIgMTQuNjggNi40MzUgMjcuNzUgMTUuNjEzIDM4Ljg0IDI3LjI3OSAxLjY2IDEuNzQ2IDEuNTkgNC41MDgtMC4xNSA2LjE2OS0xLjc1IDEuNjYxLTQuNTEgMS41OTEtNi4xNy0wLjE1NS0xMC4yOS0xMC44MjEtMjIuNDEtMTkuMzMzLTM2LjAzLTI1LjMtMTQuMDktNi4xNzYtMjkuMS05LjMwNzctNDQuNjItOS4zMDc3LTI5LjcyMSAwLTU3LjY2NCAxMS41NzUtNzguNjgxIDMyLjU5MS0yMS4wMTcgMjEuMDE3LTMyLjU5MSA0OC45Ni0zMi41OTEgNzguNjgyIDAuMDAwMSAyOS43MiAxMS41NzQgNTcuNjcgMzIuNTkxIDc4LjY4IDIxLjAxNyAyMS4wMiA0OC45NiAzMi41OSA3OC42ODEgMzIuNTkgNC4zNiAwIDguNzYtMC4yNSAxMy4wNi0wLjc1IDIuMzktMC4yOCA0LjU2IDEuNDMgNC44NCAzLjgyIDAuMjggMi40LTEuNDMgNC41Ni0zLjgzIDQuODQtNC42MyAwLjU1LTkuMzcgMC44Mi0xNC4wNyAwLjgyIi8+CiAgICA8cGF0aCBpZD0iRmlsbC05IiBza2V0Y2g6dHlwZT0iTVNTaGFwZUdyb3VwIiBkPSJtMTQ2LjUzIDIzNi45NGMtMS45OCAwLTMuNzctMS4zNS00LjI0LTMuMzctMC41NS0yLjM0IDAuOS00LjY5IDMuMjUtNS4yNCAxNC45MS0zLjUgMjguNzEtOS45NSA0MS4wMy0xOS4xNSAxLjkzLTEuNDUgNC42Ni0xLjA1IDYuMSAwLjg4IDEuNDUgMS45MyAxLjA1IDQuNjYtMC44OCA2LjExLTEzLjI4IDkuOTMtMjguMTcgMTYuODgtNDQuMjUgMjAuNjYtMC4zNCAwLjA3LTAuNjggMC4xMS0xLjAxIDAuMTEiLz4KICAgIDxwYXRoIGlkPSJGaWxsLTExIiBza2V0Y2g6dHlwZT0iTVNTaGFwZUdyb3VwIiBkPSJtMTk5LjI1IDIwOC41OGMtMS4xNiAwLTIuMzItMC40Ni0zLjE4LTEuMzgtMS42NS0xLjc1LTEuNTctNC41MSAwLjE5LTYuMTYgMS42My0xLjU1IDMuMjQtMy4xNSA0Ljc4LTQuNzggMS42NS0xLjc2IDQuNDEtMS44NCA2LjE2LTAuMTkgMS43NiAxLjY1IDEuODQgNC40MSAwLjE5IDYuMTctMS42NSAxLjc1LTMuMzkgMy40OS01LjE1IDUuMTUtMC44NCAwLjc5LTEuOTIgMS4xOS0yLjk5IDEuMTkiLz4KICAgIDxwYXRoIGlkPSJGaWxsLTEzIiBza2V0Y2g6dHlwZT0iTVNTaGFwZUdyb3VwIiBkPSJtMTY0Ljc4IDE4OC45MWMtMS4zNyAwLTIuNzEtMC42NC0zLjU2LTEuODQtMS40LTEuOTYtMC45NC00LjY5IDEuMDItNi4wOCA0Ljg2LTMuNDYgNy4zMy01LjQ3IDExLjUzLTkuODggMS42Ni0xLjc1IDQuNDItMS44MiA2LjE3LTAuMTUgMS43NCAxLjY2IDEuODEgNC40MiAwLjE1IDYuMTYtNC43MiA0Ljk3LTcuNzYgNy40LTEyLjc5IDEwLjk4LTAuNzYgMC41NC0xLjY1IDAuODEtMi41MiAwLjgxIi8+CiAgICA8cGF0aCBpZD0iRmlsbC0xNSIgc2tldGNoOnR5cGU9Ik1TU2hhcGVHcm91cCIgZD0ibTIwNi45NyAzNy4zMTljLTUuNDItNS43MDQtMTEuNC0xMC44ODQtMTcuODMtMTUuNDI0LTYuNDItNC41My0xMy4yOC04LjQxNy0yMC40Ni0xMS42MDUtNy43MS0zLjQyNTMtMTUuNzgtNi4wNC0yNC4wNS03Ljc2NTQtOC4yOC0xLjcyOTgtMTYuNzQtMi41NjE5LTI1LjItMi41MjMxLTcuNDggMC4wMzQ1LTE0Ljk2IDAuNzUyNzUtMjIuMzA0IDIuMTYzMS03LjI0MiAxLjM5MDItMTQuMzU0IDMuNDUyMS0yMS4yMTMgNi4xNTg0LTYuODMgMi42OTQtMTMuNDA2IDYuMDI2LTE5LjYyMSA5LjkzNC02LjI5IDMuOTU1LTEyLjIwNyA4LjUtMTcuNjYzIDEzLjU0My01LjUxNiA1LjA5OS0xMC41NjcgMTAuNzAzLTE1LjA1MiAxNi43MjktNC40MTQgNS45MjctOC4yNzggMTIuMjYzLTExLjUxOSAxOC45MDUtMy4yMTcgNi41OTEtNS44MTkgMTMuNDgyLTcuNzYzOSAyMC41NTUtMS45NjE5IDcuMTM1LTMuMjU0IDE0LjQ1MS0zLjg3MDEgMjEuODMxLTAuNjU2NzYgNy44Ni0wLjU1MjAzIDE1Ljc5IDAuMzI0NjMgMjMuNjMgMC45MDY3NyA4LjExIDIuNjQxOCAxNi4xMyA1LjE3NzkgMjMuODkgMi41MDkxIDcuNjcgNS44MDE1IDE1LjA5IDkuODA3NSAyMi4xIDQuMTM0IDcuMjMgOS4wNiAxNC4xIDE0LjYzNiAyMC4zNSA1LjE4IDUuODEgMTAuOTExIDExLjEyIDE3LjEwMSAxNS44NCA1Ljg4NSA0LjQ4IDEyLjE4NCA4LjQyIDE4Ljc5NiAxMS43MyA2LjU3OSAzLjMgMTMuNDY1IDUuOTkgMjAuNTQxIDguMDEgNy4xMTEgMi4wNCAxNC40MTIgMy40IDIxLjc3MiA0LjA5IDMuNjIgMC4zNCA3LjI1IDAuNTIgMTAuODggMC41My0wLjc2LTYuMzgtMi4zNi0xMi42Ny00Ljc2LTE4LjY0LTIuMzItNS43OS01LjM3LTExLjI4LTkuMDctMTYuMzEtMy42OC01LjAxLTcuOTgzLTkuNTUtMTIuNzg1LTEzLjQ5LTQuODI1LTMuOTYtMTAuMTQ4LTcuMzEtMTUuODEtOS45NC0xLjQxNC0wLjY2LTIuODQ5LTEuMjctNC4zMDMtMS44NC0wLjM2OS0wLjE0LTAuNzQtMC4yOC0xLjExMS0wLjQyLTAuMTQ5LTAuMDUtMC4zMzgtMC4wOS0wLjQ3MS0wLjE3LTAuMjA0LTAuMTMtMC4yNS0wLjQyLTAuMzQxLTAuNjYtMC4zMjgtMC44Ny0wLjcwOS0xLjcyLTEuMTQtMi41NC0wLjg3My0xLjY2LTEuOTUzLTMuMjEtMy4yMDUtNC42MS0xLjIyLTEuMzctMi40NzItMi42OS0zLjY0LTQuMS00LjU0NC01LjQ5LTguMjk1LTExLjYzLTExLjA4OC0xOC4xOC0yLjc4OS02LjU0LTQuNjE5LTEzLjQ4LTUuNDI5LTIwLjU0LTAuNzQ2LTYuNS0wLjYzOS0xMy4xIDAuMzI3LTE5LjU2IDAuODgzLTUuOTEgMi40ODYtMTEuNzAyIDQuNzY2LTE3LjIyIDIuMjE4LTUuMzcxIDUuMDczLTEwLjQ3NSA4LjQ4LTE1LjE4MSAzLjM5NS00LjY4OSA3LjMzNi04Ljk3OSAxMS43MTktMTIuNzYxIDQuMzk2LTMuNzkzIDkuMjM1LTcuMDczIDE0LjM5MS05Ljc0NCA1LjIxNy0yLjcwMiAxMC43NTUtNC43NzkgMTYuNDYtNi4xNjkgNS45NS0xLjQ0NyAxMi4wNy0yLjE0NSAxOC4xOS0yLjA5NCA2Ljk5IDAuMDU4IDEzLjk3IDEuMDggMjAuNjggMy4wNzYgNi41OSAxLjk2MSAxMi45IDQuODYxIDE4LjY4IDguNTgzIDIuOTQgMS44OTMgNS43NSAzLjk5NiA4LjQgNi4yODUgMS4zNCAxLjE1OSAyLjYzIDIuMzY1IDMuODkgMy42MTUgMS4yOSAxLjI4NiAyLjUxIDIuNjI5IDMuOTQgMy43NTggNS41NSA0LjM2IDEyLjk4IDUuOTA3IDE5LjgxIDQuMTY2IDYuNjYtMS42OTUgMTIuMzMtNi40NCAxNS4xOC0xMi42ODcgMi41Mi01LjUzNiAyLjczLTExLjk5NiAwLjU2LTE3LjY4LTEuMDgtMi44MjgtMi43Mi01LjQyNi00LjgxLTcuNjE4LTExLjA5LTExLjY1OSA4LjcyIDkuMTY4IDAgMCIvPgogICAgPHBhdGggaWQ9IkZpbGwtMTciIHNrZXRjaDp0eXBlPSJNU1NoYXBlR3JvdXAiIGQ9Im0xNDguMzYgMTIwYzAtMTUuNjYtMTIuNjktMjguMzYzLTI4LjM2LTI4LjM2My0xNS42NiAwLTI4LjM2MyAxMi43MDMtMjguMzYzIDI4LjM2M3MxMi43MDMgMjguMzYgMjguMzYzIDI4LjM2YzE1LjY3IDAgMjguMzYtMTIuNyAyOC4zNi0yOC4zNiIvPgogICA8L2c+CiAgPC9nPgogPC9nPgo8L3N2Zz4K",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"ChargeBee"},{property:"og:description",content:"A Singer tap to fetch data from a ChargeBee account. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.ChargeBee.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"ChargeBee"},{name:"twitter:description",content:"A Singer tap to fetch data from a ChargeBee account. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.ChargeBee.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.ChargeBee.html",relativePath:"plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.ChargeBee.md",key:"v-0593a543",path:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.ChargeBee.html",headers:[{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:157},{level:3,title:"apiKey",slug:"apikey",normalizedTitle:"apikey",charIndex:172},{level:3,title:"args",slug:"args",normalizedTitle:"args",charIndex:265},{level:3,title:"dockerOptions",slug:"dockeroptions",normalizedTitle:"dockeroptions",charIndex:408},{level:3,title:"env",slug:"env",normalizedTitle:"env",charIndex:522},{level:3,title:"exitOnFailed",slug:"exitonfailed",normalizedTitle:"exitonfailed",charIndex:662},{level:3,title:"files",slug:"files",normalizedTitle:"files",charIndex:1004},{level:3,title:"inputFiles",slug:"inputfiles",normalizedTitle:"inputfiles",charIndex:1192},{level:3,title:"interpreter",slug:"interpreter",normalizedTitle:"interpreter",charIndex:1587},{level:3,title:"interpreterArgs",slug:"interpreterargs",normalizedTitle:"interpreterargs",charIndex:1710},{level:3,title:"outputFiles",slug:"outputfiles",normalizedTitle:"outputfiles",charIndex:1159},{level:3,title:"outputsFiles",slug:"outputsfiles",normalizedTitle:"outputsfiles",charIndex:2268},{level:3,title:"productCatalog",slug:"productcatalog",normalizedTitle:"productcatalog",charIndex:2407},{level:3,title:"pythonPath",slug:"pythonpath",normalizedTitle:"pythonpath",charIndex:2549},{level:3,title:"requirements",slug:"requirements",normalizedTitle:"requirements",charIndex:2721},{level:3,title:"runner",slug:"runner",normalizedTitle:"runner",charIndex:504},{level:3,title:"site",slug:"site",normalizedTitle:"site",charIndex:3125},{level:3,title:"startDate",slug:"startdate",normalizedTitle:"startdate",charIndex:3258},{level:3,title:"streamsConfigurations",slug:"streamsconfigurations",normalizedTitle:"streamsconfigurations",charIndex:3506},{level:3,title:"warningOnStdErr",slug:"warningonstderr",normalizedTitle:"warningonstderr",charIndex:3664},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:3792},{level:3,title:"count",slug:"count",normalizedTitle:"count",charIndex:108},{level:3,title:"schemas",slug:"schemas",normalizedTitle:"schemas",charIndex:3853},{level:3,title:"state",slug:"state",normalizedTitle:"state",charIndex:832},{level:3,title:"streams",slug:"streams",normalizedTitle:"streams",charIndex:3506},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:4204},{level:3,title:"DockerOptions",slug:"dockeroptions-2",normalizedTitle:"dockeroptions",charIndex:432},{level:3,title:"StreamsConfiguration",slug:"streamsconfiguration",normalizedTitle:"streamsconfiguration",charIndex:3556}],headersStr:"Properties apiKey args dockerOptions env exitOnFailed files inputFiles interpreter interpreterArgs outputFiles outputsFiles productCatalog pythonPath requirements runner site startDate streamsConfigurations warningOnStdErr Outputs count schemas state streams Definitions DockerOptions StreamsConfiguration",content:'ChargeBee\n\ntype: "io.kestra.plugin.singer.taps.ChargeBee"\n\n\n> A Singer tap to fetch data from a ChargeBee account.\n\nFull documentation can be found here\n\n\n# Properties\n\n\n# apiKey\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> Your Api Key.\n\n\n# args\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Python command args\n\nArguments list to pass to main python script\n\n\n# dockerOptions\n\n * Type: DockerOptions\n * Dynamic: ❓\n * Required: ❌\n\n> Docker options when using runner DOCKER\n\n\n# env\n\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Additional environnements variable to add for current process.\n\n\n# exitOnFailed\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Exit if any non true return value\n\nThis tells bash that it should exit the script if any statement returns a non-true return value.\nThe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n\n# files\n\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The list of files that will be uploaded to internal storage,\n\nuse outputFiles property instead\n\n\n# inputFiles\n\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Input files are extra files supplied by user that make it simpler organize code.\n\nDescribe a files map that will be written and usable in execution context. In python execution context is in a temp folder, for bash scripts, you can reach files using a workingDir variable like \'source {{workingDir}}/myfile.sh\'\n\n\n# interpreter\n\n * Type: string\n * Dynamic: ❌\n * Required: ✔️\n * Default: /bin/sh\n * Min length: 1\n\n> Interpreter to used\n\n\n# interpreterArgs\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n * Default: [-c]\n\n> Interpreter args used\n\n\n# outputFiles\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Output file list that will be uploaded to internal storage\n\nList of key that will generate temporary files.\nOn the command, just can use with special variable named outputFiles.key.\nIf you add a files with ["first"], you can use the special vars echo 1 >> {[ outputFiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n\n# outputsFiles\n\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Deprecated Output file\n\nuse outputFiles\n\n\n# productCatalog\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Default: 1.0\n * Min length: 1\n\n> The version of product catalog wanted.\n\n\n# pythonPath\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Default: python\n * Min length: 1\n\n> The python interpreter to use\n\nSet the python interpreter path to use\n\n\n# requirements\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Requirements are python dependencies to add to the python execution process\n\nPython dependencies list to setup in the virtualenv, in the same format than requirements.txt\n\n\n# runner\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ✔️\n\n * Default: PROCESS\n\n * Possible Values:\n   \n   * PROCESS\n   * DOCKER\n\n> Runner to use\n\n\n# site\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> Your site url.\n\nmostly in the form {site}.chargebee.com\n\n\n# startDate\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> Determines how much historical data will be extracted.\n\nPlease be aware that the larger the time period and amount of data, the longer the initial extraction can be expected to take.\n\n\n# streamsConfigurations\n\n * Type: array\n * SubType: StreamsConfiguration\n * Dynamic: ❌\n * Required: ✔️\n * Min items: 1\n\n> The list of stream configurations\n\n\n# warningOnStdErr\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Use WARNING state if any stdErr is sent\n\n\n# Outputs\n\n\n# count\n\n * Type: object\n\n> Counter of streams\n\n\n# schemas\n\n * Type: object\n * SubType: string\n\n> Map of schemas captured\n\nKey is stream name, value is uri of the schema file on ion kestra storage\n\n\n# state\n\n * Type: string\n\n> Uri of the state file\n\n\n# streams\n\n * Type: object\n * SubType: string\n\n> Map of stream captured\n\nKey is stream name, value is uri of the stream file on ion kestra storage\n\n\n# Definitions\n\n\n# DockerOptions\n\n# dockerConfig\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker config file\n\nFull file that can be used to configure private registries, ...\n\n# dockerHost\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: unix:///var/run/docker.sock\n\n> Docker api uri\n\n# entryPoint\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker entrypoint to use\n\n# extraHosts\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker extra host to use\n\n# image\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> Docker image to use\n\n# user\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker user to use\n\n\n# StreamsConfiguration\n\n# propertiesPattern\n\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n\n# replicationKeys\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# replicationMethod\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Possible Values:\n   \n   * FULL_TABLE\n   * INCREMENTAL\n   * LOG_BASED\n\n# selected\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: true\n\n# stream\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌',normalizedContent:'chargebee\n\ntype: "io.kestra.plugin.singer.taps.chargebee"\n\n\n> a singer tap to fetch data from a chargebee account.\n\nfull documentation can be found here\n\n\n# properties\n\n\n# apikey\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> your api key.\n\n\n# args\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> python command args\n\narguments list to pass to main python script\n\n\n# dockeroptions\n\n * type: dockeroptions\n * dynamic: ❓\n * required: ❌\n\n> docker options when using runner docker\n\n\n# env\n\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> additional environnements variable to add for current process.\n\n\n# exitonfailed\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> exit if any non true return value\n\nthis tells bash that it should exit the script if any statement returns a non-true return value.\nthe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n\n# files\n\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> the list of files that will be uploaded to internal storage,\n\nuse outputfiles property instead\n\n\n# inputfiles\n\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> input files are extra files supplied by user that make it simpler organize code.\n\ndescribe a files map that will be written and usable in execution context. in python execution context is in a temp folder, for bash scripts, you can reach files using a workingdir variable like \'source {{workingdir}}/myfile.sh\'\n\n\n# interpreter\n\n * type: string\n * dynamic: ❌\n * required: ✔️\n * default: /bin/sh\n * min length: 1\n\n> interpreter to used\n\n\n# interpreterargs\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n * default: [-c]\n\n> interpreter args used\n\n\n# outputfiles\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> output file list that will be uploaded to internal storage\n\nlist of key that will generate temporary files.\non the command, just can use with special variable named outputfiles.key.\nif you add a files with ["first"], you can use the special vars echo 1 >> {[ outputfiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n\n# outputsfiles\n\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> deprecated output file\n\nuse outputfiles\n\n\n# productcatalog\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * default: 1.0\n * min length: 1\n\n> the version of product catalog wanted.\n\n\n# pythonpath\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * default: python\n * min length: 1\n\n> the python interpreter to use\n\nset the python interpreter path to use\n\n\n# requirements\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> requirements are python dependencies to add to the python execution process\n\npython dependencies list to setup in the virtualenv, in the same format than requirements.txt\n\n\n# runner\n\n * type: string\n\n * dynamic: ❌\n\n * required: ✔️\n\n * default: process\n\n * possible values:\n   \n   * process\n   * docker\n\n> runner to use\n\n\n# site\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> your site url.\n\nmostly in the form {site}.chargebee.com\n\n\n# startdate\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> determines how much historical data will be extracted.\n\nplease be aware that the larger the time period and amount of data, the longer the initial extraction can be expected to take.\n\n\n# streamsconfigurations\n\n * type: array\n * subtype: streamsconfiguration\n * dynamic: ❌\n * required: ✔️\n * min items: 1\n\n> the list of stream configurations\n\n\n# warningonstderr\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> use warning state if any stderr is sent\n\n\n# outputs\n\n\n# count\n\n * type: object\n\n> counter of streams\n\n\n# schemas\n\n * type: object\n * subtype: string\n\n> map of schemas captured\n\nkey is stream name, value is uri of the schema file on ion kestra storage\n\n\n# state\n\n * type: string\n\n> uri of the state file\n\n\n# streams\n\n * type: object\n * subtype: string\n\n> map of stream captured\n\nkey is stream name, value is uri of the stream file on ion kestra storage\n\n\n# definitions\n\n\n# dockeroptions\n\n# dockerconfig\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> docker config file\n\nfull file that can be used to configure private registries, ...\n\n# dockerhost\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n * default: unix:///var/run/docker.sock\n\n> docker api uri\n\n# entrypoint\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> docker entrypoint to use\n\n# extrahosts\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> docker extra host to use\n\n# image\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> docker image to use\n\n# user\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> docker user to use\n\n\n# streamsconfiguration\n\n# propertiespattern\n\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n\n# replicationkeys\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# replicationmethod\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * possible values:\n   \n   * full_table\n   * incremental\n   * log_based\n\n# selected\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: true\n\n# stream\n\n * type: string\n * dynamic: ❓\n * required: ❌',charsets:{}},{title:"ExchangeRateHost",frontmatter:{title:"ExchangeRateHost",editLink:!1,description:"A Singer tap to fetch data from a exchangerate.host api.",icon:"",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"ExchangeRateHost"},{property:"og:description",content:"A Singer tap to fetch data from a exchangerate.host api. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.ExchangeRateHost.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"ExchangeRateHost"},{name:"twitter:description",content:"A Singer tap to fetch data from a exchangerate.host api. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.ExchangeRateHost.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.ExchangeRateHost.html",relativePath:"plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.ExchangeRateHost.md",key:"v-251abf8f",path:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.ExchangeRateHost.html",headers:[{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:175},{level:3,title:"args",slug:"args",normalizedTitle:"args",charIndex:190},{level:3,title:"base",slug:"base",normalizedTitle:"base",charIndex:333},{level:3,title:"dockerOptions",slug:"dockeroptions",normalizedTitle:"dockeroptions",charIndex:474},{level:3,title:"endDate",slug:"enddate",normalizedTitle:"enddate",charIndex:588},{level:3,title:"env",slug:"env",normalizedTitle:"env",charIndex:701},{level:3,title:"exitOnFailed",slug:"exitonfailed",normalizedTitle:"exitonfailed",charIndex:841},{level:3,title:"files",slug:"files",normalizedTitle:"files",charIndex:1183},{level:3,title:"inputFiles",slug:"inputfiles",normalizedTitle:"inputfiles",charIndex:1371},{level:3,title:"interpreter",slug:"interpreter",normalizedTitle:"interpreter",charIndex:1766},{level:3,title:"interpreterArgs",slug:"interpreterargs",normalizedTitle:"interpreterargs",charIndex:1889},{level:3,title:"outputFiles",slug:"outputfiles",normalizedTitle:"outputfiles",charIndex:1338},{level:3,title:"outputsFiles",slug:"outputsfiles",normalizedTitle:"outputsfiles",charIndex:2447},{level:3,title:"pythonPath",slug:"pythonpath",normalizedTitle:"pythonpath",charIndex:2586},{level:3,title:"requirements",slug:"requirements",normalizedTitle:"requirements",charIndex:2758},{level:3,title:"runner",slug:"runner",normalizedTitle:"runner",charIndex:570},{level:3,title:"startDate",slug:"startdate",normalizedTitle:"startdate",charIndex:3162},{level:3,title:"streamsConfigurations",slug:"streamsconfigurations",normalizedTitle:"streamsconfigurations",charIndex:3410},{level:3,title:"warningOnStdErr",slug:"warningonstderr",normalizedTitle:"warningonstderr",charIndex:3568},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:3696},{level:3,title:"count",slug:"count",normalizedTitle:"count",charIndex:3708},{level:3,title:"schemas",slug:"schemas",normalizedTitle:"schemas",charIndex:3757},{level:3,title:"state",slug:"state",normalizedTitle:"state",charIndex:1011},{level:3,title:"streams",slug:"streams",normalizedTitle:"streams",charIndex:3410},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:4108},{level:3,title:"DockerOptions",slug:"dockeroptions-2",normalizedTitle:"dockeroptions",charIndex:498},{level:3,title:"StreamsConfiguration",slug:"streamsconfiguration",normalizedTitle:"streamsconfiguration",charIndex:3460}],headersStr:"Properties args base dockerOptions endDate env exitOnFailed files inputFiles interpreter interpreterArgs outputFiles outputsFiles pythonPath requirements runner startDate streamsConfigurations warningOnStdErr Outputs count schemas state streams Definitions DockerOptions StreamsConfiguration",content:'ExchangeRateHost\n\ntype: "io.kestra.plugin.singer.taps.ExchangeRateHost"\n\n\n> A Singer tap to fetch data from a exchangerate.host api.\n\nFull documentation can be found here\n\n\n# Properties\n\n\n# args\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Python command args\n\nArguments list to pass to main python script\n\n\n# base\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Default: EUR\n * Min length: 1\n\n> the exchange rates currency used for convertion\n\n\n# dockerOptions\n\n * Type: DockerOptions\n * Dynamic: ❓\n * Required: ❌\n\n> Docker options when using runner DOCKER\n\n\n# endDate\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Date up to when historical data will be extracted.\n\n\n# env\n\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Additional environnements variable to add for current process.\n\n\n# exitOnFailed\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Exit if any non true return value\n\nThis tells bash that it should exit the script if any statement returns a non-true return value.\nThe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n\n# files\n\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The list of files that will be uploaded to internal storage,\n\nuse outputFiles property instead\n\n\n# inputFiles\n\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Input files are extra files supplied by user that make it simpler organize code.\n\nDescribe a files map that will be written and usable in execution context. In python execution context is in a temp folder, for bash scripts, you can reach files using a workingDir variable like \'source {{workingDir}}/myfile.sh\'\n\n\n# interpreter\n\n * Type: string\n * Dynamic: ❌\n * Required: ✔️\n * Default: /bin/sh\n * Min length: 1\n\n> Interpreter to used\n\n\n# interpreterArgs\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n * Default: [-c]\n\n> Interpreter args used\n\n\n# outputFiles\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Output file list that will be uploaded to internal storage\n\nList of key that will generate temporary files.\nOn the command, just can use with special variable named outputFiles.key.\nIf you add a files with ["first"], you can use the special vars echo 1 >> {[ outputFiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n\n# outputsFiles\n\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Deprecated Output file\n\nuse outputFiles\n\n\n# pythonPath\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Default: python\n * Min length: 1\n\n> The python interpreter to use\n\nSet the python interpreter path to use\n\n\n# requirements\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Requirements are python dependencies to add to the python execution process\n\nPython dependencies list to setup in the virtualenv, in the same format than requirements.txt\n\n\n# runner\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ✔️\n\n * Default: PROCESS\n\n * Possible Values:\n   \n   * PROCESS\n   * DOCKER\n\n> Runner to use\n\n\n# startDate\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> Determines how much historical data will be extracted.\n\nPlease be aware that the larger the time period and amount of data, the longer the initial extraction can be expected to take.\n\n\n# streamsConfigurations\n\n * Type: array\n * SubType: StreamsConfiguration\n * Dynamic: ❌\n * Required: ✔️\n * Min items: 1\n\n> The list of stream configurations\n\n\n# warningOnStdErr\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Use WARNING state if any stdErr is sent\n\n\n# Outputs\n\n\n# count\n\n * Type: object\n\n> Counter of streams\n\n\n# schemas\n\n * Type: object\n * SubType: string\n\n> Map of schemas captured\n\nKey is stream name, value is uri of the schema file on ion kestra storage\n\n\n# state\n\n * Type: string\n\n> Uri of the state file\n\n\n# streams\n\n * Type: object\n * SubType: string\n\n> Map of stream captured\n\nKey is stream name, value is uri of the stream file on ion kestra storage\n\n\n# Definitions\n\n\n# DockerOptions\n\n# dockerConfig\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker config file\n\nFull file that can be used to configure private registries, ...\n\n# dockerHost\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: unix:///var/run/docker.sock\n\n> Docker api uri\n\n# entryPoint\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker entrypoint to use\n\n# extraHosts\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker extra host to use\n\n# image\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> Docker image to use\n\n# user\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker user to use\n\n\n# StreamsConfiguration\n\n# propertiesPattern\n\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n\n# replicationKeys\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# replicationMethod\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Possible Values:\n   \n   * FULL_TABLE\n   * INCREMENTAL\n   * LOG_BASED\n\n# selected\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: true\n\n# stream\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌',normalizedContent:'exchangeratehost\n\ntype: "io.kestra.plugin.singer.taps.exchangeratehost"\n\n\n> a singer tap to fetch data from a exchangerate.host api.\n\nfull documentation can be found here\n\n\n# properties\n\n\n# args\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> python command args\n\narguments list to pass to main python script\n\n\n# base\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * default: eur\n * min length: 1\n\n> the exchange rates currency used for convertion\n\n\n# dockeroptions\n\n * type: dockeroptions\n * dynamic: ❓\n * required: ❌\n\n> docker options when using runner docker\n\n\n# enddate\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> date up to when historical data will be extracted.\n\n\n# env\n\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> additional environnements variable to add for current process.\n\n\n# exitonfailed\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> exit if any non true return value\n\nthis tells bash that it should exit the script if any statement returns a non-true return value.\nthe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n\n# files\n\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> the list of files that will be uploaded to internal storage,\n\nuse outputfiles property instead\n\n\n# inputfiles\n\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> input files are extra files supplied by user that make it simpler organize code.\n\ndescribe a files map that will be written and usable in execution context. in python execution context is in a temp folder, for bash scripts, you can reach files using a workingdir variable like \'source {{workingdir}}/myfile.sh\'\n\n\n# interpreter\n\n * type: string\n * dynamic: ❌\n * required: ✔️\n * default: /bin/sh\n * min length: 1\n\n> interpreter to used\n\n\n# interpreterargs\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n * default: [-c]\n\n> interpreter args used\n\n\n# outputfiles\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> output file list that will be uploaded to internal storage\n\nlist of key that will generate temporary files.\non the command, just can use with special variable named outputfiles.key.\nif you add a files with ["first"], you can use the special vars echo 1 >> {[ outputfiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n\n# outputsfiles\n\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> deprecated output file\n\nuse outputfiles\n\n\n# pythonpath\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * default: python\n * min length: 1\n\n> the python interpreter to use\n\nset the python interpreter path to use\n\n\n# requirements\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> requirements are python dependencies to add to the python execution process\n\npython dependencies list to setup in the virtualenv, in the same format than requirements.txt\n\n\n# runner\n\n * type: string\n\n * dynamic: ❌\n\n * required: ✔️\n\n * default: process\n\n * possible values:\n   \n   * process\n   * docker\n\n> runner to use\n\n\n# startdate\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> determines how much historical data will be extracted.\n\nplease be aware that the larger the time period and amount of data, the longer the initial extraction can be expected to take.\n\n\n# streamsconfigurations\n\n * type: array\n * subtype: streamsconfiguration\n * dynamic: ❌\n * required: ✔️\n * min items: 1\n\n> the list of stream configurations\n\n\n# warningonstderr\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> use warning state if any stderr is sent\n\n\n# outputs\n\n\n# count\n\n * type: object\n\n> counter of streams\n\n\n# schemas\n\n * type: object\n * subtype: string\n\n> map of schemas captured\n\nkey is stream name, value is uri of the schema file on ion kestra storage\n\n\n# state\n\n * type: string\n\n> uri of the state file\n\n\n# streams\n\n * type: object\n * subtype: string\n\n> map of stream captured\n\nkey is stream name, value is uri of the stream file on ion kestra storage\n\n\n# definitions\n\n\n# dockeroptions\n\n# dockerconfig\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> docker config file\n\nfull file that can be used to configure private registries, ...\n\n# dockerhost\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n * default: unix:///var/run/docker.sock\n\n> docker api uri\n\n# entrypoint\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> docker entrypoint to use\n\n# extrahosts\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> docker extra host to use\n\n# image\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> docker image to use\n\n# user\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> docker user to use\n\n\n# streamsconfiguration\n\n# propertiespattern\n\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n\n# replicationkeys\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# replicationmethod\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * possible values:\n   \n   * full_table\n   * incremental\n   * log_based\n\n# selected\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: true\n\n# stream\n\n * type: string\n * dynamic: ❓\n * required: ❌',charsets:{}},{title:"FacebookAds",frontmatter:{title:"FacebookAds",editLink:!1,description:"A Singer tap to fetch data from a Facebook ads.",icon:"",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"FacebookAds"},{property:"og:description",content:"A Singer tap to fetch data from a Facebook ads. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.FacebookAds.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"FacebookAds"},{name:"twitter:description",content:"A Singer tap to fetch data from a Facebook ads. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.FacebookAds.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.FacebookAds.html",relativePath:"plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.FacebookAds.md",key:"v-5fde3b03",path:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.FacebookAds.html",headers:[{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:156},{level:3,title:"accessToken",slug:"accesstoken",normalizedTitle:"accesstoken",charIndex:171},{level:3,title:"accountId",slug:"accountid",normalizedTitle:"accountid",charIndex:305},{level:3,title:"args",slug:"args",normalizedTitle:"args",charIndex:417},{level:3,title:"dockerOptions",slug:"dockeroptions",normalizedTitle:"dockeroptions",charIndex:560},{level:3,title:"endDate",slug:"enddate",normalizedTitle:"enddate",charIndex:674},{level:3,title:"env",slug:"env",normalizedTitle:"env",charIndex:787},{level:3,title:"exitOnFailed",slug:"exitonfailed",normalizedTitle:"exitonfailed",charIndex:927},{level:3,title:"files",slug:"files",normalizedTitle:"files",charIndex:1269},{level:3,title:"inputFiles",slug:"inputfiles",normalizedTitle:"inputfiles",charIndex:1457},{level:3,title:"insightsBufferDays",slug:"insightsbufferdays",normalizedTitle:"insightsbufferdays",charIndex:1852},{level:3,title:"interpreter",slug:"interpreter",normalizedTitle:"interpreter",charIndex:2004},{level:3,title:"interpreterArgs",slug:"interpreterargs",normalizedTitle:"interpreterargs",charIndex:2127},{level:3,title:"outputFiles",slug:"outputfiles",normalizedTitle:"outputfiles",charIndex:1424},{level:3,title:"outputsFiles",slug:"outputsfiles",normalizedTitle:"outputsfiles",charIndex:2685},{level:3,title:"pythonPath",slug:"pythonpath",normalizedTitle:"pythonpath",charIndex:2824},{level:3,title:"requirements",slug:"requirements",normalizedTitle:"requirements",charIndex:2996},{level:3,title:"runner",slug:"runner",normalizedTitle:"runner",charIndex:656},{level:3,title:"startDate",slug:"startdate",normalizedTitle:"startdate",charIndex:3400},{level:3,title:"streamsConfigurations",slug:"streamsconfigurations",normalizedTitle:"streamsconfigurations",charIndex:3648},{level:3,title:"warningOnStdErr",slug:"warningonstderr",normalizedTitle:"warningonstderr",charIndex:3806},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:3934},{level:3,title:"count",slug:"count",normalizedTitle:"count",charIndex:307},{level:3,title:"schemas",slug:"schemas",normalizedTitle:"schemas",charIndex:3995},{level:3,title:"state",slug:"state",normalizedTitle:"state",charIndex:1097},{level:3,title:"streams",slug:"streams",normalizedTitle:"streams",charIndex:3648},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:4346},{level:3,title:"DockerOptions",slug:"dockeroptions-2",normalizedTitle:"dockeroptions",charIndex:584},{level:3,title:"StreamsConfiguration",slug:"streamsconfiguration",normalizedTitle:"streamsconfiguration",charIndex:3698}],headersStr:"Properties accessToken accountId args dockerOptions endDate env exitOnFailed files inputFiles insightsBufferDays interpreter interpreterArgs outputFiles outputsFiles pythonPath requirements runner startDate streamsConfigurations warningOnStdErr Outputs count schemas state streams Definitions DockerOptions StreamsConfiguration",content:'FacebookAds\n\ntype: "io.kestra.plugin.singer.taps.FacebookAds"\n\n\n> A Singer tap to fetch data from a Facebook ads.\n\nFull documentation can be found here\n\n\n# Properties\n\n\n# accessToken\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> User Token generated by Facebook OAuth handshake.\n\n\n# accountId\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> Your Facebook Ads Account ID.\n\n\n# args\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Python command args\n\nArguments list to pass to main python script\n\n\n# dockerOptions\n\n * Type: DockerOptions\n * Dynamic: ❓\n * Required: ❌\n\n> Docker options when using runner DOCKER\n\n\n# endDate\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Date up to when historical data will be extracted.\n\n\n# env\n\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Additional environnements variable to add for current process.\n\n\n# exitOnFailed\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Exit if any non true return value\n\nThis tells bash that it should exit the script if any statement returns a non-true return value.\nThe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n\n# files\n\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The list of files that will be uploaded to internal storage,\n\nuse outputFiles property instead\n\n\n# inputFiles\n\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Input files are extra files supplied by user that make it simpler organize code.\n\nDescribe a files map that will be written and usable in execution context. In python execution context is in a temp folder, for bash scripts, you can reach files using a workingDir variable like \'source {{workingDir}}/myfile.sh\'\n\n\n# insightsBufferDays\n\n * Type: integer\n * Dynamic: ✔️\n * Required: ✔️\n * Default: 0\n\n> How many Days before the Start Date to fetch Ads Insights for.\n\n\n# interpreter\n\n * Type: string\n * Dynamic: ❌\n * Required: ✔️\n * Default: /bin/sh\n * Min length: 1\n\n> Interpreter to used\n\n\n# interpreterArgs\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n * Default: [-c]\n\n> Interpreter args used\n\n\n# outputFiles\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Output file list that will be uploaded to internal storage\n\nList of key that will generate temporary files.\nOn the command, just can use with special variable named outputFiles.key.\nIf you add a files with ["first"], you can use the special vars echo 1 >> {[ outputFiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n\n# outputsFiles\n\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Deprecated Output file\n\nuse outputFiles\n\n\n# pythonPath\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Default: python\n * Min length: 1\n\n> The python interpreter to use\n\nSet the python interpreter path to use\n\n\n# requirements\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Requirements are python dependencies to add to the python execution process\n\nPython dependencies list to setup in the virtualenv, in the same format than requirements.txt\n\n\n# runner\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ✔️\n\n * Default: PROCESS\n\n * Possible Values:\n   \n   * PROCESS\n   * DOCKER\n\n> Runner to use\n\n\n# startDate\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> Determines how much historical data will be extracted.\n\nPlease be aware that the larger the time period and amount of data, the longer the initial extraction can be expected to take.\n\n\n# streamsConfigurations\n\n * Type: array\n * SubType: StreamsConfiguration\n * Dynamic: ❌\n * Required: ✔️\n * Min items: 1\n\n> The list of stream configurations\n\n\n# warningOnStdErr\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Use WARNING state if any stdErr is sent\n\n\n# Outputs\n\n\n# count\n\n * Type: object\n\n> Counter of streams\n\n\n# schemas\n\n * Type: object\n * SubType: string\n\n> Map of schemas captured\n\nKey is stream name, value is uri of the schema file on ion kestra storage\n\n\n# state\n\n * Type: string\n\n> Uri of the state file\n\n\n# streams\n\n * Type: object\n * SubType: string\n\n> Map of stream captured\n\nKey is stream name, value is uri of the stream file on ion kestra storage\n\n\n# Definitions\n\n\n# DockerOptions\n\n# dockerConfig\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker config file\n\nFull file that can be used to configure private registries, ...\n\n# dockerHost\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: unix:///var/run/docker.sock\n\n> Docker api uri\n\n# entryPoint\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker entrypoint to use\n\n# extraHosts\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker extra host to use\n\n# image\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> Docker image to use\n\n# user\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker user to use\n\n\n# StreamsConfiguration\n\n# propertiesPattern\n\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n\n# replicationKeys\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# replicationMethod\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Possible Values:\n   \n   * FULL_TABLE\n   * INCREMENTAL\n   * LOG_BASED\n\n# selected\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: true\n\n# stream\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌',normalizedContent:'facebookads\n\ntype: "io.kestra.plugin.singer.taps.facebookads"\n\n\n> a singer tap to fetch data from a facebook ads.\n\nfull documentation can be found here\n\n\n# properties\n\n\n# accesstoken\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> user token generated by facebook oauth handshake.\n\n\n# accountid\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> your facebook ads account id.\n\n\n# args\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> python command args\n\narguments list to pass to main python script\n\n\n# dockeroptions\n\n * type: dockeroptions\n * dynamic: ❓\n * required: ❌\n\n> docker options when using runner docker\n\n\n# enddate\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> date up to when historical data will be extracted.\n\n\n# env\n\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> additional environnements variable to add for current process.\n\n\n# exitonfailed\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> exit if any non true return value\n\nthis tells bash that it should exit the script if any statement returns a non-true return value.\nthe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n\n# files\n\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> the list of files that will be uploaded to internal storage,\n\nuse outputfiles property instead\n\n\n# inputfiles\n\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> input files are extra files supplied by user that make it simpler organize code.\n\ndescribe a files map that will be written and usable in execution context. in python execution context is in a temp folder, for bash scripts, you can reach files using a workingdir variable like \'source {{workingdir}}/myfile.sh\'\n\n\n# insightsbufferdays\n\n * type: integer\n * dynamic: ✔️\n * required: ✔️\n * default: 0\n\n> how many days before the start date to fetch ads insights for.\n\n\n# interpreter\n\n * type: string\n * dynamic: ❌\n * required: ✔️\n * default: /bin/sh\n * min length: 1\n\n> interpreter to used\n\n\n# interpreterargs\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n * default: [-c]\n\n> interpreter args used\n\n\n# outputfiles\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> output file list that will be uploaded to internal storage\n\nlist of key that will generate temporary files.\non the command, just can use with special variable named outputfiles.key.\nif you add a files with ["first"], you can use the special vars echo 1 >> {[ outputfiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n\n# outputsfiles\n\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> deprecated output file\n\nuse outputfiles\n\n\n# pythonpath\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * default: python\n * min length: 1\n\n> the python interpreter to use\n\nset the python interpreter path to use\n\n\n# requirements\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> requirements are python dependencies to add to the python execution process\n\npython dependencies list to setup in the virtualenv, in the same format than requirements.txt\n\n\n# runner\n\n * type: string\n\n * dynamic: ❌\n\n * required: ✔️\n\n * default: process\n\n * possible values:\n   \n   * process\n   * docker\n\n> runner to use\n\n\n# startdate\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> determines how much historical data will be extracted.\n\nplease be aware that the larger the time period and amount of data, the longer the initial extraction can be expected to take.\n\n\n# streamsconfigurations\n\n * type: array\n * subtype: streamsconfiguration\n * dynamic: ❌\n * required: ✔️\n * min items: 1\n\n> the list of stream configurations\n\n\n# warningonstderr\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> use warning state if any stderr is sent\n\n\n# outputs\n\n\n# count\n\n * type: object\n\n> counter of streams\n\n\n# schemas\n\n * type: object\n * subtype: string\n\n> map of schemas captured\n\nkey is stream name, value is uri of the schema file on ion kestra storage\n\n\n# state\n\n * type: string\n\n> uri of the state file\n\n\n# streams\n\n * type: object\n * subtype: string\n\n> map of stream captured\n\nkey is stream name, value is uri of the stream file on ion kestra storage\n\n\n# definitions\n\n\n# dockeroptions\n\n# dockerconfig\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> docker config file\n\nfull file that can be used to configure private registries, ...\n\n# dockerhost\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n * default: unix:///var/run/docker.sock\n\n> docker api uri\n\n# entrypoint\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> docker entrypoint to use\n\n# extrahosts\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> docker extra host to use\n\n# image\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> docker image to use\n\n# user\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> docker user to use\n\n\n# streamsconfiguration\n\n# propertiespattern\n\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n\n# replicationkeys\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# replicationmethod\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * possible values:\n   \n   * full_table\n   * incremental\n   * log_based\n\n# selected\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: true\n\n# stream\n\n * type: string\n * dynamic: ❓\n * required: ❌',charsets:{}},{title:"Fastly",frontmatter:{title:"Fastly",editLink:!1,description:"A Singer tap to fetch data from a Fastly account.",icon:"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9Im5vIj8+Cjxzdmcgd2lkdGg9IjUxMnB4IiBoZWlnaHQ9IjE5OXB4IiB2aWV3Qm94PSIwIDAgNTEyIDE5OSIgdmVyc2lvbj0iMS4xIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiBwcmVzZXJ2ZUFzcGVjdFJhdGlvPSJ4TWlkWU1pZCI+CiAgICA8Zz4KICAgICAgICA8cGF0aCBkPSJNMzQ4LjQ0MzgzMiwyMC4zNDgzMTI0IEwzNDguNDQzODMyLDE1My45MzU5NDUgTDM4OC41NzA2NjEsMTUzLjkzNTk0NSBMMzg4LjU3MDY2MSwxMzMuNTI1MTMyIEwzNzUuMzEyNDM3LDEzMy41MjUxMzIgTDM3NS4zMTI0MzcsMCBMMzQ4LjQ0MDY1OSwwLjAwMzE3MjU4MjkzIEwzNDguNDQzODMyLDIwLjM0ODMxMjQgWiBNMCwxMzMuNTI1MTMyIEwxMy42NDA1MjAzLDEzMy41MjUxMzIgTDEzLjY0MDUyMDMsNjkuMDc1MDYxOSBMMCw2OS4wNzUwNjE5IEwwLDUxLjM1MDQ3NTYgTDEzLjY0MDUyMDMsNDkuMTA3MTQyMiBMMTMuNjQwNTIwMywzMS4xNjQ5MTY3IEMxMy42NDA1MjAzLDkuNDMxNzcxODEgMTguMzcwODQxNSwwLjAwMDMxNzI1ODI5MyA0Ni4wODY1MjYsMC4wMDAzMTcyNTgyOTMgQzUyLjA3MjU1NTUsMC4wMDAzMTcyNTgyOTMgNTkuMTY3NzIsMC44ODQxOTg4NjQgNjUuMzc5NjM3MywyLjAwMzE2ODg3IEw2MS42OTc1Mzc2LDIzLjg1MDIwOTUgQzU3LjQ5MDM3NTQsMjMuMTgzNjQ5OCA1NS40MDQwODQ4LDIzLjA2NTMxMjUgNTIuNzQ0NTA4NiwyMy4wNjUzMTI1IEM0Mi45Nzk5MzI4LDIzLjA2NTMxMjUgNDAuNTExMzQ2LDI0LjAzOTYxMjcgNDAuNTExMzQ2LDMzLjU4MDIwNDEgTDQwLjUxMTM0Niw0OS4xMDcxNDIyIEw2MC43ODU0Miw0OS4xMDcxNDIyIEw2MC43ODU0Miw2OS4wNzUwNjE5IEw0MC41MTEzNDYsNjkuMDc1MDYxOSBMNDAuNTExMzQ2LDEzMy41MjUxMzIgTDU0LjAwOTczNDYsMTMzLjUyNTEzMiBMNTQuMDA5NzM0NiwxNTMuOTMyNzcyIEwwLDE1My45Mzg0ODMgTDAsMTMzLjUyNTEzMiBaIE0zMzQuNzc2MzQ1LDEyNy4wNzQ5NTQgQzMzMC41NzI2NzIsMTI3Ljk2MTY5MSAzMjYuODk1NjQ5LDEyNy44NTUwOTIgMzI0LjIzNzAyNCwxMjcuOTIwNDQ3IEMzMTMuMTgzNzQ1LDEyOC4xOTIzMzggMzE0LjEzODY5MywxMjQuNTU4NDYxIDMxNC4xMzg2OTMsMTE0LjEzNDk0IEwzMTQuMTM4NjkzLDY5LjA3NTA2MTkgTDMzNS4xNzkyNjMsNjkuMDc1MDYxOSBMMzM1LjE3OTI2Myw0OS4xMDcxNDIyIEwzMTQuMTM4NjkzLDQ5LjEwNzE0MjIgTDMxNC4xMzg2OTMsMCBMMjg3LjI2NjU5OCwwIEwyODcuMjY2NTk4LDExOS43MDY2MyBDMjg3LjI2NjU5OCwxNDMuMjA5NDQyIDI5My4wNjcwMzEsMTUzLjkzNTk0NSAzMTguMzQ1NTM4LDE1My45MzU5NDUgQzMyNC4zMzIyMDIsMTUzLjkzNTk0NSAzMzIuNTU4NzA5LDE1Mi4zOTUzMzkgMzM4Ljc3MDYyNywxNTEuMDY1MDc1IEwzMzQuNzc2MzQ1LDEyNy4wNzQ5NTQgWiBNMjUzLjcyNDE0OCw2OS4wMzg1NzcyIEwyNTMuNzI0MTQ4LDY1LjQ2MzcxMDggQzI0NS41OTUwMzgsNjMuOTgxMTYyOCAyMzcuNTIyNzE4LDYzLjk1OTU4OTIgMjMzLjE0MzYwMiw2My45NTk1ODkyIEMyMjAuNjM4ODY2LDYzLjk1OTU4OTIgMjE5LjExNDQ0LDcwLjU5MDkyMjEgMjE5LjExNDQ0LDc0LjE4NTQ1ODUgQzIxOS4xMTQ0NCw3OS4yNzA3OTE3IDIyMC44NDk1MjYsODIuMDIwNDY5NCAyMzQuMzk2NDU1LDg0Ljk4MjM5MjggQzI1NC4xOTg0NDksODkuNDI3ODE2IDI3NC4wODU3ODUsOTQuMDY2MTMyMiAyNzQuMDg1Nzg1LDExOC42MjAwMjEgQzI3NC4wODU3ODUsMTQxLjkwNTgyOCAyNjIuMTAxNjcsMTUzLjkzNTk0NSAyMzYuODc1ODI5LDE1My45MzU5NDUgQzIxOS45OTU0NjcsMTUzLjkzNTk0NSAyMDMuNjE2NjksMTUwLjMxMjIyMSAxOTEuMTE5ODg2LDE0Ny4xNDA5MDcgTDE5MS4xMTk4ODYsMTI3LjA3NDk1NCBMMjExLjQ2Nzg4MSwxMjcuMDc0OTU0IEwyMTEuNDU2MTQyLDEzMC42Mzk2NjggQzIyMC4yMTI0NzEsMTMyLjMzMDk3MiAyMjkuMzkzNjA5LDEzMi4xNjE4NzQgMjM0LjE4Njc0NywxMzIuMTYxODc0IEMyNDcuNTI0OTIxLDEzMi4xNjE4NzQgMjQ5LjY4MjkxMSwxMjQuOTkwNTY3IDI0OS42ODI5MTEsMTIxLjE3ODA3NCBDMjQ5LjY4MjkxMSwxMTUuODg2ODQgMjQ1Ljg1ODA0NiwxMTMuMzQ1NjAxIDIzMy4zNTQ4OTYsMTEwLjgxMDM5IEMyMDkuNzk5NzM3LDEwNi43ODU2NTIgMTkxLjEwNTYwOSw5OC43NDM0NzEzIDE5MS4xMDU2MDksNzQuODE2MTY4IEMxOTEuMTA1NjA5LDUyLjE2ODM2NzUgMjA2LjI1MzEwNiw0My4yODM4NjYyIDIzMS40NzkyNjUsNDMuMjgzODY2MiBDMjQ4LjU2OTAxOCw0My4yODM4NjYyIDI2MS41NjM2LDQ1LjkzNDI0MiAyNzQuMDY3Mzg0LDQ5LjEwNzE0MjIgTDI3NC4wNjczODQsNjkuMDM4NTc3MiBMMjUzLjcyNDE0OCw2OS4wMzg1NzcyIFogTTExNy42MDMyMDgsMTI3LjAxNDA0MSBMMTE3LjYwMzIwOCwxMjMuODU1NDE3IEwxMTQuMzgzOTg4LDEyMy44NTU0MTcgTDExNC4zODM5ODgsMTI3LjAwNTE1NyBDOTkuOTYyNjk0OSwxMjYuMTY0NDIzIDg4LjQyNzE4MzMsMTE0LjU3NzgzMyA4Ny42NzQ2NDY3LDEwMC4xMzMwNjMgTDkwLjg3NDUxMzgsMTAwLjEzMzA2MyBMOTAuODc0NTEzOCw5Ni45MTM4NDI3IEw4Ny42OTE0NjE0LDk2LjkxMzg0MjcgQzg4LjU0NjQ3MjUsODIuNTY5MzI2MiAxMDAuMDM0Mzk1LDcxLjA5MjUwNzQgMTE0LjM4Mzk4OCw3MC4yNTU4OTczIEwxMTQuMzgzOTg4LDczLjQyMjEzNTEgTDExNy42MDMyMDgsNzMuNDIyMTM1MSBMMTE3LjYwMzIwOCw3MC4yNDcwMTQxIEMxMzEuNzQ4MTY5LDcxLjAwMzA0MDYgMTQzLjE0MTU0OSw4Mi4wOTgxOTc2IDE0NC4zNzI4MjgsOTYuMTExODEzNyBMMTQ0LjM3MjgyOCw5Ny4wMzUzNTI2IEwxNDEuMTQ3NTgsOTcuMDM1MzUyNiBMMTQxLjE0NzU4LDEwMC4yNTQyNTUgTDE0NC4zNzM3OCwxMDAuMjU0MjU1IEwxNDQuMzc0NDE0LDEwMS4xMzU5MTYgQzE0My4xNDkxNjMsMTE1LjE1NjE5NSAxMzEuNzUyNjEsMTI2LjI1NzY5NyAxMTcuNjAzMjA4LDEyNy4wMTQwNDEgWiBNMTcxLjI1MzQ4OSwxMjcuMDc0OTU0IEwxNzEuMjM2MDQsNDMuNDU4MzU4MyBMMTQ0LjM2NTg0OCw0My40NTgzNTgzIEwxNDQuMzY1ODQ4LDUxLjI5OTcxNDMgQzEzOC44MzE1OTUsNDcuOTc5Mjg5IDEzMi42NjY5NDksNDUuNjA1MjQ1MiAxMjYuMDk2MjEyLDQ0LjM4ODI0MjQgTDEyNi4yNDgxNzksNDQuMzg4MjQyNCBMMTI2LjI0ODE3OSwzNS4xMDkzODkgTDEyOS41MjY3MjYsMzUuMTA5Mzg5IEwxMjkuNTI2NzI2LDI4LjI4NTE2MzIgTDEwMi40NzA5MzksMjguMjg1MTYzMiBMMTAyLjQ3MDkzOSwzNS4xMDkzODkgTDEwNS43NDg4NTIsMzUuMTA5Mzg5IEwxMDUuNzQ4ODUyLDQ0LjM4ODI0MjQgTDEwNS45MzU0LDQ0LjM4ODI0MjQgQzgwLjIzNTU3NDIsNDkuMTE5NTE1MyA2MC43NTk3MjIxLDcxLjYyMzkxNTEgNjAuNzU5NzIyMSw5OC42OTE3NTgyIEM2MC43NTk3MjIxLDEyOS4xOTY3NzggODUuNDg4NzM3LDE1My45MjU3OTMgMTE1Ljk5MzQzOSwxNTMuOTI1NzkzIEMxMjYuNDA0NTg3LDE1My45MjU3OTMgMTM2LjE0MDYxLDE1MS4wNDEyOCAxNDQuNDUyNzc3LDE0Ni4wMzM5OTIgTDE0OS4yOTM1MDQsMTUzLjkzNTk0NSBMMTc3LjY3NjA2NiwxNTMuOTM1OTQ1IEwxNzcuNjc2MDY2LDEyNy4wNzQ5NTQgTDE3MS4yNTM0ODksMTI3LjA3NDk1NCBaIE00NTYuNTc4MTQ5LDQ5LjEwNzE0MjIgTDUxMiw0OS4xMDcxNDIyIEw1MTIsNjkuMDU1NzA5MiBMNDk4Ljc1MTI5NCw2OS4wNTU3MDkyIEw0NjQuNzYzNDEzLDE1Mi42NzUxNiBDNDU1LjAyMzU4MywxNzYuMTY0NjQ3IDQzOS4wMjEwNzUsMTk4LjI3MzEwOSA0MTQuNjU1NjM4LDE5OC4yNzMxMDkgQzQwOC42NjI2MjksMTk4LjI3MzEwOSA0MDAuNjg2NzU1LDE5Ny42MDkwODcgMzk1LjE1Njk0MywxOTYuMjgwMDkyIEwzOTcuNTg3MTQyLDE3MS44OTIxMyBDNDAxLjEzNzI2MiwxNzIuNTU1ODM0IDQwNS43ODUwOTYsMTcyLjk5MjY5OSA0MDguMjI0ODEyLDE3Mi45OTI2OTkgQzQxOS41MjU1NTMsMTcyLjk5MjY5OSA0MzIuMjY5ODE4LDE2NS45OTA4MDggNDM2LjI1Nzc1NSwxNTMuODAwMTU4IEw0MDEuODE5MzY3LDY5LjA1NTcwOTIgTDM4OC41NzA2NjEsNjkuMDU1NzA5MiBMMzg4LjU3MDY2MSw0OS4xMDcxNDIyIEw0NDQuMDIxMDY1LDQ5LjEwNzE0MjIgTDQ0NC4wMjEwNjUsNjkuMDU1NzA5MiBMNDMwLjc3NTUzMiw2OS4wNTU3MDkyIEw0NTAuMjg2OTE3LDExNy4wNTY1NzIgTDQ2OS43OTUxMjksNjkuMDU1NzA5MiBMNDU2LjU3ODE0OSw2OS4wNTU3MDkyIEw0NTYuNTc4MTQ5LDQ5LjEwNzE0MjIgWiBNMTMwLjA5NjgzOSw4Ni42NzYyMzQ4IEwxMjguMDUxNzkyLDg0LjYzMDg3MDYgTDExNy42NjcyOTQsOTMuNjgwOTgwNyBDMTE3LjE0MzE4Myw5My40OTI4NDY1IDExNi41ODI1ODgsOTMuMzg1NjEzMiAxMTUuOTk2NjEyLDkzLjM4NTYxMzIgQzExMy4xOTQyNjksOTMuMzg1NjEzMiAxMTAuOTI1ODcyLDk1LjcyMDYzNDIgMTEwLjkyNTg3Miw5OC41OTg0ODQyIEMxMTAuOTI1ODcyLDEwMS40Nzk1MDcgMTEzLjE5NDI2OSwxMDMuODE0MjExIDExNS45OTY2MTIsMTAzLjgxNDIxMSBDMTE4Ljc5NzY4NSwxMDMuODE0MjExIDEyMS4wNzE0NzUsMTAxLjQ3OTUwNyAxMjEuMDcxNDc1LDk4LjU5ODQ4NDIgQzEyMS4wNzE0NzUsOTguMDUyMTY1NCAxMjAuOTg4NjcxLDk3LjUyNTUxNjcgMTIwLjgzNjcwNCw5Ny4wMzAyNzY1IEwxMzAuMDk2ODM5LDg2LjY3NjIzNDgiIGZpbGw9IiNENTJGMkYiPjwvcGF0aD4KICAgIDwvZz4KPC9zdmc+",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Fastly"},{property:"og:description",content:"A Singer tap to fetch data from a Fastly account. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.Fastly.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Fastly"},{name:"twitter:description",content:"A Singer tap to fetch data from a Fastly account. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.Fastly.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.Fastly.html",relativePath:"plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.Fastly.md",key:"v-51d3ffda",path:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.Fastly.html",headers:[{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:148},{level:3,title:"apiToken",slug:"apitoken",normalizedTitle:"apitoken",charIndex:163},{level:3,title:"args",slug:"args",normalizedTitle:"args",charIndex:260},{level:3,title:"dockerOptions",slug:"dockeroptions",normalizedTitle:"dockeroptions",charIndex:403},{level:3,title:"env",slug:"env",normalizedTitle:"env",charIndex:517},{level:3,title:"exitOnFailed",slug:"exitonfailed",normalizedTitle:"exitonfailed",charIndex:657},{level:3,title:"files",slug:"files",normalizedTitle:"files",charIndex:999},{level:3,title:"inputFiles",slug:"inputfiles",normalizedTitle:"inputfiles",charIndex:1187},{level:3,title:"interpreter",slug:"interpreter",normalizedTitle:"interpreter",charIndex:1582},{level:3,title:"interpreterArgs",slug:"interpreterargs",normalizedTitle:"interpreterargs",charIndex:1705},{level:3,title:"outputFiles",slug:"outputfiles",normalizedTitle:"outputfiles",charIndex:1154},{level:3,title:"outputsFiles",slug:"outputsfiles",normalizedTitle:"outputsfiles",charIndex:2263},{level:3,title:"pythonPath",slug:"pythonpath",normalizedTitle:"pythonpath",charIndex:2402},{level:3,title:"requirements",slug:"requirements",normalizedTitle:"requirements",charIndex:2574},{level:3,title:"runner",slug:"runner",normalizedTitle:"runner",charIndex:499},{level:3,title:"startDate",slug:"startdate",normalizedTitle:"startdate",charIndex:2978},{level:3,title:"streamsConfigurations",slug:"streamsconfigurations",normalizedTitle:"streamsconfigurations",charIndex:3226},{level:3,title:"warningOnStdErr",slug:"warningonstderr",normalizedTitle:"warningonstderr",charIndex:3384},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:3512},{level:3,title:"count",slug:"count",normalizedTitle:"count",charIndex:99},{level:3,title:"schemas",slug:"schemas",normalizedTitle:"schemas",charIndex:3573},{level:3,title:"state",slug:"state",normalizedTitle:"state",charIndex:827},{level:3,title:"streams",slug:"streams",normalizedTitle:"streams",charIndex:3226},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:3924},{level:3,title:"DockerOptions",slug:"dockeroptions-2",normalizedTitle:"dockeroptions",charIndex:427},{level:3,title:"StreamsConfiguration",slug:"streamsconfiguration",normalizedTitle:"streamsconfiguration",charIndex:3276}],headersStr:"Properties apiToken args dockerOptions env exitOnFailed files inputFiles interpreter interpreterArgs outputFiles outputsFiles pythonPath requirements runner startDate streamsConfigurations warningOnStdErr Outputs count schemas state streams Definitions DockerOptions StreamsConfiguration",content:'Fastly\n\ntype: "io.kestra.plugin.singer.taps.Fastly"\n\n\n> A Singer tap to fetch data from a Fastly account.\n\nFull documentation can be found here\n\n\n# Properties\n\n\n# apiToken\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> Your Api Token.\n\n\n# args\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Python command args\n\nArguments list to pass to main python script\n\n\n# dockerOptions\n\n * Type: DockerOptions\n * Dynamic: ❓\n * Required: ❌\n\n> Docker options when using runner DOCKER\n\n\n# env\n\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Additional environnements variable to add for current process.\n\n\n# exitOnFailed\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Exit if any non true return value\n\nThis tells bash that it should exit the script if any statement returns a non-true return value.\nThe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n\n# files\n\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The list of files that will be uploaded to internal storage,\n\nuse outputFiles property instead\n\n\n# inputFiles\n\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Input files are extra files supplied by user that make it simpler organize code.\n\nDescribe a files map that will be written and usable in execution context. In python execution context is in a temp folder, for bash scripts, you can reach files using a workingDir variable like \'source {{workingDir}}/myfile.sh\'\n\n\n# interpreter\n\n * Type: string\n * Dynamic: ❌\n * Required: ✔️\n * Default: /bin/sh\n * Min length: 1\n\n> Interpreter to used\n\n\n# interpreterArgs\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n * Default: [-c]\n\n> Interpreter args used\n\n\n# outputFiles\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Output file list that will be uploaded to internal storage\n\nList of key that will generate temporary files.\nOn the command, just can use with special variable named outputFiles.key.\nIf you add a files with ["first"], you can use the special vars echo 1 >> {[ outputFiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n\n# outputsFiles\n\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Deprecated Output file\n\nuse outputFiles\n\n\n# pythonPath\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Default: python\n * Min length: 1\n\n> The python interpreter to use\n\nSet the python interpreter path to use\n\n\n# requirements\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Requirements are python dependencies to add to the python execution process\n\nPython dependencies list to setup in the virtualenv, in the same format than requirements.txt\n\n\n# runner\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ✔️\n\n * Default: PROCESS\n\n * Possible Values:\n   \n   * PROCESS\n   * DOCKER\n\n> Runner to use\n\n\n# startDate\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> Determines how much historical data will be extracted.\n\nPlease be aware that the larger the time period and amount of data, the longer the initial extraction can be expected to take.\n\n\n# streamsConfigurations\n\n * Type: array\n * SubType: StreamsConfiguration\n * Dynamic: ❌\n * Required: ✔️\n * Min items: 1\n\n> The list of stream configurations\n\n\n# warningOnStdErr\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Use WARNING state if any stdErr is sent\n\n\n# Outputs\n\n\n# count\n\n * Type: object\n\n> Counter of streams\n\n\n# schemas\n\n * Type: object\n * SubType: string\n\n> Map of schemas captured\n\nKey is stream name, value is uri of the schema file on ion kestra storage\n\n\n# state\n\n * Type: string\n\n> Uri of the state file\n\n\n# streams\n\n * Type: object\n * SubType: string\n\n> Map of stream captured\n\nKey is stream name, value is uri of the stream file on ion kestra storage\n\n\n# Definitions\n\n\n# DockerOptions\n\n# dockerConfig\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker config file\n\nFull file that can be used to configure private registries, ...\n\n# dockerHost\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: unix:///var/run/docker.sock\n\n> Docker api uri\n\n# entryPoint\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker entrypoint to use\n\n# extraHosts\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker extra host to use\n\n# image\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> Docker image to use\n\n# user\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker user to use\n\n\n# StreamsConfiguration\n\n# propertiesPattern\n\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n\n# replicationKeys\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# replicationMethod\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Possible Values:\n   \n   * FULL_TABLE\n   * INCREMENTAL\n   * LOG_BASED\n\n# selected\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: true\n\n# stream\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌',normalizedContent:'fastly\n\ntype: "io.kestra.plugin.singer.taps.fastly"\n\n\n> a singer tap to fetch data from a fastly account.\n\nfull documentation can be found here\n\n\n# properties\n\n\n# apitoken\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> your api token.\n\n\n# args\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> python command args\n\narguments list to pass to main python script\n\n\n# dockeroptions\n\n * type: dockeroptions\n * dynamic: ❓\n * required: ❌\n\n> docker options when using runner docker\n\n\n# env\n\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> additional environnements variable to add for current process.\n\n\n# exitonfailed\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> exit if any non true return value\n\nthis tells bash that it should exit the script if any statement returns a non-true return value.\nthe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n\n# files\n\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> the list of files that will be uploaded to internal storage,\n\nuse outputfiles property instead\n\n\n# inputfiles\n\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> input files are extra files supplied by user that make it simpler organize code.\n\ndescribe a files map that will be written and usable in execution context. in python execution context is in a temp folder, for bash scripts, you can reach files using a workingdir variable like \'source {{workingdir}}/myfile.sh\'\n\n\n# interpreter\n\n * type: string\n * dynamic: ❌\n * required: ✔️\n * default: /bin/sh\n * min length: 1\n\n> interpreter to used\n\n\n# interpreterargs\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n * default: [-c]\n\n> interpreter args used\n\n\n# outputfiles\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> output file list that will be uploaded to internal storage\n\nlist of key that will generate temporary files.\non the command, just can use with special variable named outputfiles.key.\nif you add a files with ["first"], you can use the special vars echo 1 >> {[ outputfiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n\n# outputsfiles\n\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> deprecated output file\n\nuse outputfiles\n\n\n# pythonpath\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * default: python\n * min length: 1\n\n> the python interpreter to use\n\nset the python interpreter path to use\n\n\n# requirements\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> requirements are python dependencies to add to the python execution process\n\npython dependencies list to setup in the virtualenv, in the same format than requirements.txt\n\n\n# runner\n\n * type: string\n\n * dynamic: ❌\n\n * required: ✔️\n\n * default: process\n\n * possible values:\n   \n   * process\n   * docker\n\n> runner to use\n\n\n# startdate\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> determines how much historical data will be extracted.\n\nplease be aware that the larger the time period and amount of data, the longer the initial extraction can be expected to take.\n\n\n# streamsconfigurations\n\n * type: array\n * subtype: streamsconfiguration\n * dynamic: ❌\n * required: ✔️\n * min items: 1\n\n> the list of stream configurations\n\n\n# warningonstderr\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> use warning state if any stderr is sent\n\n\n# outputs\n\n\n# count\n\n * type: object\n\n> counter of streams\n\n\n# schemas\n\n * type: object\n * subtype: string\n\n> map of schemas captured\n\nkey is stream name, value is uri of the schema file on ion kestra storage\n\n\n# state\n\n * type: string\n\n> uri of the state file\n\n\n# streams\n\n * type: object\n * subtype: string\n\n> map of stream captured\n\nkey is stream name, value is uri of the stream file on ion kestra storage\n\n\n# definitions\n\n\n# dockeroptions\n\n# dockerconfig\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> docker config file\n\nfull file that can be used to configure private registries, ...\n\n# dockerhost\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n * default: unix:///var/run/docker.sock\n\n> docker api uri\n\n# entrypoint\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> docker entrypoint to use\n\n# extrahosts\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> docker extra host to use\n\n# image\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> docker image to use\n\n# user\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> docker user to use\n\n\n# streamsconfiguration\n\n# propertiespattern\n\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n\n# replicationkeys\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# replicationmethod\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * possible values:\n   \n   * full_table\n   * incremental\n   * log_based\n\n# selected\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: true\n\n# stream\n\n * type: string\n * dynamic: ❓\n * required: ❌',charsets:{}},{title:"GitHub",frontmatter:{title:"GitHub",editLink:!1,description:"A Singer tap to fetch data from a GitHub api.",icon:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIyNCIgaGVpZ2h0PSIyNCIgdmlld0JveD0iMCAwIDI0IDI0Ij48cGF0aCBkPSJNMTIgMGMtNi42MjYgMC0xMiA1LjM3My0xMiAxMiAwIDUuMzAyIDMuNDM4IDkuOCA4LjIwNyAxMS4zODcuNTk5LjExMS43OTMtLjI2MS43OTMtLjU3N3YtMi4yMzRjLTMuMzM4LjcyNi00LjAzMy0xLjQxNi00LjAzMy0xLjQxNi0uNTQ2LTEuMzg3LTEuMzMzLTEuNzU2LTEuMzMzLTEuNzU2LTEuMDg5LS43NDUuMDgzLS43MjkuMDgzLS43MjkgMS4yMDUuMDg0IDEuODM5IDEuMjM3IDEuODM5IDEuMjM3IDEuMDcgMS44MzQgMi44MDcgMS4zMDQgMy40OTIuOTk3LjEwNy0uNzc1LjQxOC0xLjMwNS43NjItMS42MDQtMi42NjUtLjMwNS01LjQ2Ny0xLjMzNC01LjQ2Ny01LjkzMSAwLTEuMzExLjQ2OS0yLjM4MSAxLjIzNi0zLjIyMS0uMTI0LS4zMDMtLjUzNS0xLjUyNC4xMTctMy4xNzYgMCAwIDEuMDA4LS4zMjIgMy4zMDEgMS4yMy45NTctLjI2NiAxLjk4My0uMzk5IDMuMDAzLS40MDQgMS4wMi4wMDUgMi4wNDcuMTM4IDMuMDA2LjQwNCAyLjI5MS0xLjU1MiAzLjI5Ny0xLjIzIDMuMjk3LTEuMjMuNjUzIDEuNjUzLjI0MiAyLjg3NC4xMTggMy4xNzYuNzcuODQgMS4yMzUgMS45MTEgMS4yMzUgMy4yMjEgMCA0LjYwOS0yLjgwNyA1LjYyNC01LjQ3OSA1LjkyMS40My4zNzIuODIzIDEuMTAyLjgyMyAyLjIyMnYzLjI5M2MwIC4zMTkuMTkyLjY5NC44MDEuNTc2IDQuNzY1LTEuNTg5IDguMTk5LTYuMDg2IDguMTk5LTExLjM4NiAwLTYuNjI3LTUuMzczLTEyLTEyLTEyeiIvPjwvc3ZnPg==",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"GitHub"},{property:"og:description",content:"A Singer tap to fetch data from a GitHub api. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.GitHub.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"GitHub"},{name:"twitter:description",content:"A Singer tap to fetch data from a GitHub api. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.GitHub.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.GitHub.html",relativePath:"plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.GitHub.md",key:"v-55ac30df",path:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.GitHub.html",headers:[{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:144},{level:3,title:"accessToken",slug:"accesstoken",normalizedTitle:"accesstoken",charIndex:159},{level:3,title:"args",slug:"args",normalizedTitle:"args",charIndex:409},{level:3,title:"dockerOptions",slug:"dockeroptions",normalizedTitle:"dockeroptions",charIndex:552},{level:3,title:"env",slug:"env",normalizedTitle:"env",charIndex:666},{level:3,title:"exitOnFailed",slug:"exitonfailed",normalizedTitle:"exitonfailed",charIndex:806},{level:3,title:"files",slug:"files",normalizedTitle:"files",charIndex:1148},{level:3,title:"inputFiles",slug:"inputfiles",normalizedTitle:"inputfiles",charIndex:1336},{level:3,title:"interpreter",slug:"interpreter",normalizedTitle:"interpreter",charIndex:1731},{level:3,title:"interpreterArgs",slug:"interpreterargs",normalizedTitle:"interpreterargs",charIndex:1854},{level:3,title:"outputFiles",slug:"outputfiles",normalizedTitle:"outputfiles",charIndex:1303},{level:3,title:"outputsFiles",slug:"outputsfiles",normalizedTitle:"outputsfiles",charIndex:2412},{level:3,title:"pythonPath",slug:"pythonpath",normalizedTitle:"pythonpath",charIndex:2551},{level:3,title:"repositories",slug:"repositories",normalizedTitle:"repositories",charIndex:2723},{level:3,title:"requestTimeout",slug:"requesttimeout",normalizedTitle:"requesttimeout",charIndex:2967},{level:3,title:"requirements",slug:"requirements",normalizedTitle:"requirements",charIndex:3093},{level:3,title:"runner",slug:"runner",normalizedTitle:"runner",charIndex:648},{level:3,title:"startDate",slug:"startdate",normalizedTitle:"startdate",charIndex:3497},{level:3,title:"streamsConfigurations",slug:"streamsconfigurations",normalizedTitle:"streamsconfigurations",charIndex:3745},{level:3,title:"warningOnStdErr",slug:"warningonstderr",normalizedTitle:"warningonstderr",charIndex:3903},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:4031},{level:3,title:"count",slug:"count",normalizedTitle:"count",charIndex:295},{level:3,title:"schemas",slug:"schemas",normalizedTitle:"schemas",charIndex:4092},{level:3,title:"state",slug:"state",normalizedTitle:"state",charIndex:976},{level:3,title:"streams",slug:"streams",normalizedTitle:"streams",charIndex:3745},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:4443},{level:3,title:"DockerOptions",slug:"dockeroptions-2",normalizedTitle:"dockeroptions",charIndex:576},{level:3,title:"StreamsConfiguration",slug:"streamsconfiguration",normalizedTitle:"streamsconfiguration",charIndex:3795}],headersStr:"Properties accessToken args dockerOptions env exitOnFailed files inputFiles interpreter interpreterArgs outputFiles outputsFiles pythonPath repositories requestTimeout requirements runner startDate streamsConfigurations warningOnStdErr Outputs count schemas state streams Definitions DockerOptions StreamsConfiguration",content:'GitHub\n\ntype: "io.kestra.plugin.singer.taps.GitHub"\n\n\n> A Singer tap to fetch data from a GitHub api.\n\nFull documentation can be found here\n\n\n# Properties\n\n\n# accessToken\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> a GitHub personnal access token\n\nLogin to your GitHub account, go to the Personal Access Tokens settings page, and generate a new token with at least the repo scope.\n\n\n# args\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Python command args\n\nArguments list to pass to main python script\n\n\n# dockerOptions\n\n * Type: DockerOptions\n * Dynamic: ❓\n * Required: ❌\n\n> Docker options when using runner DOCKER\n\n\n# env\n\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Additional environnements variable to add for current process.\n\n\n# exitOnFailed\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Exit if any non true return value\n\nThis tells bash that it should exit the script if any statement returns a non-true return value.\nThe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n\n# files\n\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The list of files that will be uploaded to internal storage,\n\nuse outputFiles property instead\n\n\n# inputFiles\n\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Input files are extra files supplied by user that make it simpler organize code.\n\nDescribe a files map that will be written and usable in execution context. In python execution context is in a temp folder, for bash scripts, you can reach files using a workingDir variable like \'source {{workingDir}}/myfile.sh\'\n\n\n# interpreter\n\n * Type: string\n * Dynamic: ❌\n * Required: ✔️\n * Default: /bin/sh\n * Min length: 1\n\n> Interpreter to used\n\n\n# interpreterArgs\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n * Default: [-c]\n\n> Interpreter args used\n\n\n# outputFiles\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Output file list that will be uploaded to internal storage\n\nList of key that will generate temporary files.\nOn the command, just can use with special variable named outputFiles.key.\nIf you add a files with ["first"], you can use the special vars echo 1 >> {[ outputFiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n\n# outputsFiles\n\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Deprecated Output file\n\nuse outputFiles\n\n\n# pythonPath\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Default: python\n * Min length: 1\n\n> The python interpreter to use\n\nSet the python interpreter path to use\n\n\n# repositories\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min items: 1\n\n> List of GitHub repositories.\n\nThe repo path is relative to https://github.com/.\nFor example the path for this repository is kestra-io/kestra.\n\n\n# requestTimeout\n\n * Type: integer\n * Dynamic: ❌\n * Required: ✔️\n * Default: 300\n\n> Timeout for each request on github api.\n\n\n# requirements\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Requirements are python dependencies to add to the python execution process\n\nPython dependencies list to setup in the virtualenv, in the same format than requirements.txt\n\n\n# runner\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ✔️\n\n * Default: PROCESS\n\n * Possible Values:\n   \n   * PROCESS\n   * DOCKER\n\n> Runner to use\n\n\n# startDate\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> Determines how much historical data will be extracted.\n\nPlease be aware that the larger the time period and amount of data, the longer the initial extraction can be expected to take.\n\n\n# streamsConfigurations\n\n * Type: array\n * SubType: StreamsConfiguration\n * Dynamic: ❌\n * Required: ✔️\n * Min items: 1\n\n> The list of stream configurations\n\n\n# warningOnStdErr\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Use WARNING state if any stdErr is sent\n\n\n# Outputs\n\n\n# count\n\n * Type: object\n\n> Counter of streams\n\n\n# schemas\n\n * Type: object\n * SubType: string\n\n> Map of schemas captured\n\nKey is stream name, value is uri of the schema file on ion kestra storage\n\n\n# state\n\n * Type: string\n\n> Uri of the state file\n\n\n# streams\n\n * Type: object\n * SubType: string\n\n> Map of stream captured\n\nKey is stream name, value is uri of the stream file on ion kestra storage\n\n\n# Definitions\n\n\n# DockerOptions\n\n# dockerConfig\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker config file\n\nFull file that can be used to configure private registries, ...\n\n# dockerHost\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: unix:///var/run/docker.sock\n\n> Docker api uri\n\n# entryPoint\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker entrypoint to use\n\n# extraHosts\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker extra host to use\n\n# image\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> Docker image to use\n\n# user\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker user to use\n\n\n# StreamsConfiguration\n\n# propertiesPattern\n\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n\n# replicationKeys\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# replicationMethod\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Possible Values:\n   \n   * FULL_TABLE\n   * INCREMENTAL\n   * LOG_BASED\n\n# selected\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: true\n\n# stream\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌',normalizedContent:'github\n\ntype: "io.kestra.plugin.singer.taps.github"\n\n\n> a singer tap to fetch data from a github api.\n\nfull documentation can be found here\n\n\n# properties\n\n\n# accesstoken\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> a github personnal access token\n\nlogin to your github account, go to the personal access tokens settings page, and generate a new token with at least the repo scope.\n\n\n# args\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> python command args\n\narguments list to pass to main python script\n\n\n# dockeroptions\n\n * type: dockeroptions\n * dynamic: ❓\n * required: ❌\n\n> docker options when using runner docker\n\n\n# env\n\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> additional environnements variable to add for current process.\n\n\n# exitonfailed\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> exit if any non true return value\n\nthis tells bash that it should exit the script if any statement returns a non-true return value.\nthe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n\n# files\n\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> the list of files that will be uploaded to internal storage,\n\nuse outputfiles property instead\n\n\n# inputfiles\n\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> input files are extra files supplied by user that make it simpler organize code.\n\ndescribe a files map that will be written and usable in execution context. in python execution context is in a temp folder, for bash scripts, you can reach files using a workingdir variable like \'source {{workingdir}}/myfile.sh\'\n\n\n# interpreter\n\n * type: string\n * dynamic: ❌\n * required: ✔️\n * default: /bin/sh\n * min length: 1\n\n> interpreter to used\n\n\n# interpreterargs\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n * default: [-c]\n\n> interpreter args used\n\n\n# outputfiles\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> output file list that will be uploaded to internal storage\n\nlist of key that will generate temporary files.\non the command, just can use with special variable named outputfiles.key.\nif you add a files with ["first"], you can use the special vars echo 1 >> {[ outputfiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n\n# outputsfiles\n\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> deprecated output file\n\nuse outputfiles\n\n\n# pythonpath\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * default: python\n * min length: 1\n\n> the python interpreter to use\n\nset the python interpreter path to use\n\n\n# repositories\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ✔️\n * min items: 1\n\n> list of github repositories.\n\nthe repo path is relative to https://github.com/.\nfor example the path for this repository is kestra-io/kestra.\n\n\n# requesttimeout\n\n * type: integer\n * dynamic: ❌\n * required: ✔️\n * default: 300\n\n> timeout for each request on github api.\n\n\n# requirements\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> requirements are python dependencies to add to the python execution process\n\npython dependencies list to setup in the virtualenv, in the same format than requirements.txt\n\n\n# runner\n\n * type: string\n\n * dynamic: ❌\n\n * required: ✔️\n\n * default: process\n\n * possible values:\n   \n   * process\n   * docker\n\n> runner to use\n\n\n# startdate\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> determines how much historical data will be extracted.\n\nplease be aware that the larger the time period and amount of data, the longer the initial extraction can be expected to take.\n\n\n# streamsconfigurations\n\n * type: array\n * subtype: streamsconfiguration\n * dynamic: ❌\n * required: ✔️\n * min items: 1\n\n> the list of stream configurations\n\n\n# warningonstderr\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> use warning state if any stderr is sent\n\n\n# outputs\n\n\n# count\n\n * type: object\n\n> counter of streams\n\n\n# schemas\n\n * type: object\n * subtype: string\n\n> map of schemas captured\n\nkey is stream name, value is uri of the schema file on ion kestra storage\n\n\n# state\n\n * type: string\n\n> uri of the state file\n\n\n# streams\n\n * type: object\n * subtype: string\n\n> map of stream captured\n\nkey is stream name, value is uri of the stream file on ion kestra storage\n\n\n# definitions\n\n\n# dockeroptions\n\n# dockerconfig\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> docker config file\n\nfull file that can be used to configure private registries, ...\n\n# dockerhost\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n * default: unix:///var/run/docker.sock\n\n> docker api uri\n\n# entrypoint\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> docker entrypoint to use\n\n# extrahosts\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> docker extra host to use\n\n# image\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> docker image to use\n\n# user\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> docker user to use\n\n\n# streamsconfiguration\n\n# propertiespattern\n\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n\n# replicationkeys\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# replicationmethod\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * possible values:\n   \n   * full_table\n   * incremental\n   * log_based\n\n# selected\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: true\n\n# stream\n\n * type: string\n * dynamic: ❓\n * required: ❌',charsets:{}},{title:"GoogleAdwords",frontmatter:{title:"GoogleAdwords",editLink:!1,description:"A Singer tap to fetch data from a google adwords.",icon:"",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"GoogleAdwords"},{property:"og:description",content:"A Singer tap to fetch data from a google adwords. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.GoogleAdwords.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"GoogleAdwords"},{name:"twitter:description",content:"A Singer tap to fetch data from a google adwords. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.GoogleAdwords.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.GoogleAdwords.html",relativePath:"plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.GoogleAdwords.md",key:"v-c76544ba",path:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.GoogleAdwords.html",headers:[{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:162},{level:3,title:"args",slug:"args",normalizedTitle:"args",charIndex:177},{level:3,title:"conversionWindowDays",slug:"conversionwindowdays",normalizedTitle:"conversionwindowdays",charIndex:320},{level:3,title:"customerIds",slug:"customerids",normalizedTitle:"customerids",charIndex:484},{level:3,title:"developerToken",slug:"developertoken",normalizedTitle:"developertoken",charIndex:634},{level:3,title:"dockerOptions",slug:"dockeroptions",normalizedTitle:"dockeroptions",charIndex:773},{level:3,title:"endDate",slug:"enddate",normalizedTitle:"enddate",charIndex:887},{level:3,title:"env",slug:"env",normalizedTitle:"env",charIndex:1e3},{level:3,title:"exitOnFailed",slug:"exitonfailed",normalizedTitle:"exitonfailed",charIndex:1140},{level:3,title:"files",slug:"files",normalizedTitle:"files",charIndex:1482},{level:3,title:"inputFiles",slug:"inputfiles",normalizedTitle:"inputfiles",charIndex:1670},{level:3,title:"interpreter",slug:"interpreter",normalizedTitle:"interpreter",charIndex:2065},{level:3,title:"interpreterArgs",slug:"interpreterargs",normalizedTitle:"interpreterargs",charIndex:2188},{level:3,title:"oauthClientId",slug:"oauthclientid",normalizedTitle:"oauthclientid",charIndex:2314},{level:3,title:"oauthClientSecret",slug:"oauthclientsecret",normalizedTitle:"oauthclientsecret",charIndex:2429},{level:3,title:"outputFiles",slug:"outputfiles",normalizedTitle:"outputfiles",charIndex:1637},{level:3,title:"outputsFiles",slug:"outputsfiles",normalizedTitle:"outputsfiles",charIndex:2984},{level:3,title:"primaryKeys",slug:"primarykeys",normalizedTitle:"primarykeys",charIndex:3123},{level:3,title:"pythonPath",slug:"pythonpath",normalizedTitle:"pythonpath",charIndex:3238},{level:3,title:"refreshToken",slug:"refreshtoken",normalizedTitle:"refreshtoken",charIndex:3410},{level:3,title:"requirements",slug:"requirements",normalizedTitle:"requirements",charIndex:3600},{level:3,title:"runner",slug:"runner",normalizedTitle:"runner",charIndex:869},{level:3,title:"startDate",slug:"startdate",normalizedTitle:"startdate",charIndex:4004},{level:3,title:"streamsConfigurations",slug:"streamsconfigurations",normalizedTitle:"streamsconfigurations",charIndex:4252},{level:3,title:"userAgent",slug:"useragent",normalizedTitle:"useragent",charIndex:4410},{level:3,title:"warningOnStdErr",slug:"warningonstderr",normalizedTitle:"warningonstderr",charIndex:4543},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:4671},{level:3,title:"count",slug:"count",normalizedTitle:"count",charIndex:596},{level:3,title:"schemas",slug:"schemas",normalizedTitle:"schemas",charIndex:4732},{level:3,title:"state",slug:"state",normalizedTitle:"state",charIndex:1310},{level:3,title:"streams",slug:"streams",normalizedTitle:"streams",charIndex:4252},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:5083},{level:3,title:"DockerOptions",slug:"dockeroptions-2",normalizedTitle:"dockeroptions",charIndex:797},{level:3,title:"StreamsConfiguration",slug:"streamsconfiguration",normalizedTitle:"streamsconfiguration",charIndex:4302}],headersStr:"Properties args conversionWindowDays customerIds developerToken dockerOptions endDate env exitOnFailed files inputFiles interpreter interpreterArgs oauthClientId oauthClientSecret outputFiles outputsFiles primaryKeys pythonPath refreshToken requirements runner startDate streamsConfigurations userAgent warningOnStdErr Outputs count schemas state streams Definitions DockerOptions StreamsConfiguration",content:'GoogleAdwords\n\ntype: "io.kestra.plugin.singer.taps.GoogleAdwords"\n\n\n> A Singer tap to fetch data from a google adwords.\n\nFull documentation can be found here\n\n\n# Properties\n\n\n# args\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Python command args\n\nArguments list to pass to main python script\n\n\n# conversionWindowDays\n\n * Type: integer\n * Dynamic: ❌\n * Required: ❌\n * Default: 0\n\n> How many Days before the Start Date to fetch data for Performance Reports.\n\n\n# customerIds\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min items: 1\n\n> A list of Ad Account IDs to replicate data from.\n\n\n# developerToken\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> Your Developer Token for Google AdWord Application.\n\n\n# dockerOptions\n\n * Type: DockerOptions\n * Dynamic: ❓\n * Required: ❌\n\n> Docker options when using runner DOCKER\n\n\n# endDate\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Date up to when historical data will be extracted.\n\n\n# env\n\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Additional environnements variable to add for current process.\n\n\n# exitOnFailed\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Exit if any non true return value\n\nThis tells bash that it should exit the script if any statement returns a non-true return value.\nThe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n\n# files\n\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The list of files that will be uploaded to internal storage,\n\nuse outputFiles property instead\n\n\n# inputFiles\n\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Input files are extra files supplied by user that make it simpler organize code.\n\nDescribe a files map that will be written and usable in execution context. In python execution context is in a temp folder, for bash scripts, you can reach files using a workingDir variable like \'source {{workingDir}}/myfile.sh\'\n\n\n# interpreter\n\n * Type: string\n * Dynamic: ❌\n * Required: ✔️\n * Default: /bin/sh\n * Min length: 1\n\n> Interpreter to used\n\n\n# interpreterArgs\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n * Default: [-c]\n\n> Interpreter args used\n\n\n# oauthClientId\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> Your Google OAuth Client ID.\n\n\n# oauthClientSecret\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> Your Google OAuth Client Secret.\n\n\n# outputFiles\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Output file list that will be uploaded to internal storage\n\nList of key that will generate temporary files.\nOn the command, just can use with special variable named outputFiles.key.\nIf you add a files with ["first"], you can use the special vars echo 1 >> {[ outputFiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n\n# outputsFiles\n\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Deprecated Output file\n\nuse outputFiles\n\n\n# primaryKeys\n\n * Type: object\n * Dynamic: ❌\n * Required: ❌\n\n> Primary Keys for the selected Entities (Streams).\n\n\n# pythonPath\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Default: python\n * Min length: 1\n\n> The python interpreter to use\n\nSet the python interpreter path to use\n\n\n# refreshToken\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> The Refresh Token generated through the OAuth flow run using your OAuth Client and your Developer Token.\n\n\n# requirements\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Requirements are python dependencies to add to the python execution process\n\nPython dependencies list to setup in the virtualenv, in the same format than requirements.txt\n\n\n# runner\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ✔️\n\n * Default: PROCESS\n\n * Possible Values:\n   \n   * PROCESS\n   * DOCKER\n\n> Runner to use\n\n\n# startDate\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> Determines how much historical data will be extracted.\n\nPlease be aware that the larger the time period and amount of data, the longer the initial extraction can be expected to take.\n\n\n# streamsConfigurations\n\n * Type: array\n * SubType: StreamsConfiguration\n * Dynamic: ❌\n * Required: ✔️\n * Min items: 1\n\n> The list of stream configurations\n\n\n# userAgent\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: tap-adwords via Kestra\n\n> User Agent for your OAuth Client.\n\n\n# warningOnStdErr\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Use WARNING state if any stdErr is sent\n\n\n# Outputs\n\n\n# count\n\n * Type: object\n\n> Counter of streams\n\n\n# schemas\n\n * Type: object\n * SubType: string\n\n> Map of schemas captured\n\nKey is stream name, value is uri of the schema file on ion kestra storage\n\n\n# state\n\n * Type: string\n\n> Uri of the state file\n\n\n# streams\n\n * Type: object\n * SubType: string\n\n> Map of stream captured\n\nKey is stream name, value is uri of the stream file on ion kestra storage\n\n\n# Definitions\n\n\n# DockerOptions\n\n# dockerConfig\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker config file\n\nFull file that can be used to configure private registries, ...\n\n# dockerHost\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: unix:///var/run/docker.sock\n\n> Docker api uri\n\n# entryPoint\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker entrypoint to use\n\n# extraHosts\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker extra host to use\n\n# image\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> Docker image to use\n\n# user\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker user to use\n\n\n# StreamsConfiguration\n\n# propertiesPattern\n\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n\n# replicationKeys\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# replicationMethod\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Possible Values:\n   \n   * FULL_TABLE\n   * INCREMENTAL\n   * LOG_BASED\n\n# selected\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: true\n\n# stream\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌',normalizedContent:'googleadwords\n\ntype: "io.kestra.plugin.singer.taps.googleadwords"\n\n\n> a singer tap to fetch data from a google adwords.\n\nfull documentation can be found here\n\n\n# properties\n\n\n# args\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> python command args\n\narguments list to pass to main python script\n\n\n# conversionwindowdays\n\n * type: integer\n * dynamic: ❌\n * required: ❌\n * default: 0\n\n> how many days before the start date to fetch data for performance reports.\n\n\n# customerids\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ✔️\n * min items: 1\n\n> a list of ad account ids to replicate data from.\n\n\n# developertoken\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> your developer token for google adword application.\n\n\n# dockeroptions\n\n * type: dockeroptions\n * dynamic: ❓\n * required: ❌\n\n> docker options when using runner docker\n\n\n# enddate\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> date up to when historical data will be extracted.\n\n\n# env\n\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> additional environnements variable to add for current process.\n\n\n# exitonfailed\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> exit if any non true return value\n\nthis tells bash that it should exit the script if any statement returns a non-true return value.\nthe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n\n# files\n\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> the list of files that will be uploaded to internal storage,\n\nuse outputfiles property instead\n\n\n# inputfiles\n\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> input files are extra files supplied by user that make it simpler organize code.\n\ndescribe a files map that will be written and usable in execution context. in python execution context is in a temp folder, for bash scripts, you can reach files using a workingdir variable like \'source {{workingdir}}/myfile.sh\'\n\n\n# interpreter\n\n * type: string\n * dynamic: ❌\n * required: ✔️\n * default: /bin/sh\n * min length: 1\n\n> interpreter to used\n\n\n# interpreterargs\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n * default: [-c]\n\n> interpreter args used\n\n\n# oauthclientid\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> your google oauth client id.\n\n\n# oauthclientsecret\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> your google oauth client secret.\n\n\n# outputfiles\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> output file list that will be uploaded to internal storage\n\nlist of key that will generate temporary files.\non the command, just can use with special variable named outputfiles.key.\nif you add a files with ["first"], you can use the special vars echo 1 >> {[ outputfiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n\n# outputsfiles\n\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> deprecated output file\n\nuse outputfiles\n\n\n# primarykeys\n\n * type: object\n * dynamic: ❌\n * required: ❌\n\n> primary keys for the selected entities (streams).\n\n\n# pythonpath\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * default: python\n * min length: 1\n\n> the python interpreter to use\n\nset the python interpreter path to use\n\n\n# refreshtoken\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> the refresh token generated through the oauth flow run using your oauth client and your developer token.\n\n\n# requirements\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> requirements are python dependencies to add to the python execution process\n\npython dependencies list to setup in the virtualenv, in the same format than requirements.txt\n\n\n# runner\n\n * type: string\n\n * dynamic: ❌\n\n * required: ✔️\n\n * default: process\n\n * possible values:\n   \n   * process\n   * docker\n\n> runner to use\n\n\n# startdate\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> determines how much historical data will be extracted.\n\nplease be aware that the larger the time period and amount of data, the longer the initial extraction can be expected to take.\n\n\n# streamsconfigurations\n\n * type: array\n * subtype: streamsconfiguration\n * dynamic: ❌\n * required: ✔️\n * min items: 1\n\n> the list of stream configurations\n\n\n# useragent\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n * default: tap-adwords via kestra\n\n> user agent for your oauth client.\n\n\n# warningonstderr\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> use warning state if any stderr is sent\n\n\n# outputs\n\n\n# count\n\n * type: object\n\n> counter of streams\n\n\n# schemas\n\n * type: object\n * subtype: string\n\n> map of schemas captured\n\nkey is stream name, value is uri of the schema file on ion kestra storage\n\n\n# state\n\n * type: string\n\n> uri of the state file\n\n\n# streams\n\n * type: object\n * subtype: string\n\n> map of stream captured\n\nkey is stream name, value is uri of the stream file on ion kestra storage\n\n\n# definitions\n\n\n# dockeroptions\n\n# dockerconfig\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> docker config file\n\nfull file that can be used to configure private registries, ...\n\n# dockerhost\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n * default: unix:///var/run/docker.sock\n\n> docker api uri\n\n# entrypoint\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> docker entrypoint to use\n\n# extrahosts\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> docker extra host to use\n\n# image\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> docker image to use\n\n# user\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> docker user to use\n\n\n# streamsconfiguration\n\n# propertiespattern\n\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n\n# replicationkeys\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# replicationmethod\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * possible values:\n   \n   * full_table\n   * incremental\n   * log_based\n\n# selected\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: true\n\n# stream\n\n * type: string\n * dynamic: ❓\n * required: ❌',charsets:{}},{title:"Gitlab",frontmatter:{title:"Gitlab",editLink:!1,description:"A Singer tap to fetch data from a Gitlab account.",icon:"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4KPCEtLSBHZW5lcmF0b3I6IEFkb2JlIElsbHVzdHJhdG9yIDI0LjIuMSwgU1ZHIEV4cG9ydCBQbHVnLUluIC4gU1ZHIFZlcnNpb246IDYuMDAgQnVpbGQgMCkgIC0tPgo8c3ZnIHZlcnNpb249IjEuMSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIgeD0iMHB4IiB5PSIwcHgiCgkgdmlld0JveD0iMCAwIDU4NiA1NTkiIHN0eWxlPSJlbmFibGUtYmFja2dyb3VuZDpuZXcgMCAwIDU4NiA1NTk7IiB4bWw6c3BhY2U9InByZXNlcnZlIj4KPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KCS5zdDB7ZmlsbDojRkFGQUZBO30KCS5zdDF7ZmlsbDojRjBGMEYwO30KCS5zdDJ7ZmlsbDojRkZGRkZGO30KCS5zdDN7ZmlsbDojRTI0MzI5O30KCS5zdDR7ZmlsbDojRkNBMzI2O30KCS5zdDV7ZmlsbDojRkM2RDI2O30KCS5zdDZ7ZmlsbDojOEM5MjlEO30KCS5zdDd7ZmlsbDojMkUyRTJFO30KCS5zdDh7ZmlsbDpub25lO3N0cm9rZTojRkNBMzI2O3N0cm9rZS13aWR0aDoxNjtzdHJva2UtbGluZWNhcDpyb3VuZDtzdHJva2UtbGluZWpvaW46cm91bmQ7c3Ryb2tlLW1pdGVybGltaXQ6MTA7fQoJLnN0OXtmaWxsOm5vbmU7c3Ryb2tlOiNGQzZEMjY7c3Ryb2tlLXdpZHRoOjE2O3N0cm9rZS1saW5lY2FwOnJvdW5kO3N0cm9rZS1saW5lam9pbjpyb3VuZDtzdHJva2UtbWl0ZXJsaW1pdDoxMDt9Cgkuc3QxMHtmaWxsOm5vbmU7c3Ryb2tlOiNFMjQzMjk7c3Ryb2tlLXdpZHRoOjE2O3N0cm9rZS1saW5lY2FwOnJvdW5kO3N0cm9rZS1saW5lam9pbjpyb3VuZDtzdHJva2UtbWl0ZXJsaW1pdDoxMDt9Cgkuc3QxMXtmaWxsOm5vbmU7c3Ryb2tlOiNGMEYwRjA7c3Ryb2tlLW1pdGVybGltaXQ6MTA7fQoJLnN0MTJ7ZmlsbDojMjMxRjIwO30KCS5zdDEze2ZpbGw6bm9uZTtzdHJva2U6IzIzMUYyMDtzdHJva2Utd2lkdGg6MTY7c3Ryb2tlLWxpbmVjYXA6cm91bmQ7c3Ryb2tlLWxpbmVqb2luOnJvdW5kO3N0cm9rZS1taXRlcmxpbWl0OjEwO30KCS5zdDE0e2Rpc3BsYXk6bm9uZTt9Cgkuc3QxNXtkaXNwbGF5OmlubGluZTtvcGFjaXR5OjAuMTtmaWxsOiNFODI4RTM7fQoJLnN0MTZ7ZGlzcGxheTppbmxpbmU7fQoJLnN0MTd7b3BhY2l0eTowLjE7ZmlsbDojRTgyOEUzO30KCS5zdDE4e2ZvbnQtZmFtaWx5OidTb3VyY2VTYW5zUHJvLVNlbWlib2xkJzt9Cgkuc3QxOXtmb250LXNpemU6MjRweDt9Cgkuc3QyMHtkaXNwbGF5OmlubGluZTtmaWxsOiNEQjNCMjE7fQoJLnN0MjF7ZGlzcGxheTppbmxpbmU7ZmlsbDojRkM2RDI2O30KCS5zdDIye2Rpc3BsYXk6aW5saW5lO2ZpbGw6IzJFMkUyRTt9Cgkuc3QyM3tkaXNwbGF5OmlubGluZTtmaWxsOiM2RTQ5Q0I7fQoJLnN0MjR7ZGlzcGxheTppbmxpbmU7ZmlsbDojMzgwRDc1O30KCS5zdDI1e2Rpc3BsYXk6aW5saW5lO2ZpbGw6I0ZDQTEyMTt9Cgkuc3QyNntvcGFjaXR5OjAuNjtmaWxsOm5vbmU7c3Ryb2tlOiMyMzFGMjA7c3Ryb2tlLXdpZHRoOjI7c3Ryb2tlLW1pdGVybGltaXQ6MTA7c3Ryb2tlLWRhc2hhcnJheToxMiw2O30KCS5zdDI3e2ZpbGw6bm9uZTtzdHJva2U6IzQ0NDQ0NDtzdHJva2Utd2lkdGg6MS41MzM5O3N0cm9rZS1taXRlcmxpbWl0OjEwO30KPC9zdHlsZT4KPGcgaWQ9ImxvZ29fYXJ0Ij4KCTxnPgoJCTxwYXRoIGlkPSJwYXRoNTBfMl8iIGNsYXNzPSJzdDMiIGQ9Ik0yOTMuMDI2LDQzNC45ODNMMjkzLjAyNiw0MzQuOTgzbDYyLjE5OS0xOTEuMzIySDIzMC45MThMMjkzLjAyNiw0MzQuOTgzTDI5My4wMjYsNDM0Ljk4M3oiCgkJCS8+CgkJPHBhdGggaWQ9InBhdGg2Nl82XyIgY2xhc3M9InN0NCIgZD0iTTE0My43OTgsMjQzLjY2MkwxNDMuNzk4LDI0My42NjJsLTE4Ljk0MSw1OC4xMjZjLTEuNzE0LDUuMjc4LDAuMTM3LDExLjEwNCw0LjY2MSwxNC4zOTQKCQkJbDE2My41MDksMTE4LjgwMUwxNDMuNzk4LDI0My42NjJMMTQzLjc5OCwyNDMuNjYyeiIvPgoJCTxwYXRoIGlkPSJwYXRoNzRfMl8iIGNsYXNzPSJzdDMiIGQ9Ik0xNDMuNzk4LDI0My42NjJoODcuMTJsLTM3LjQ5NC0xMTUuMjI0Yy0xLjkxOS01Ljg5NS0xMC4yODItNS44OTUtMTIuMjcsMEwxNDMuNzk4LDI0My42NjIKCQkJTDE0My43OTgsMjQzLjY2MnoiLz4KCQk8cGF0aCBpZD0icGF0aDgyXzZfIiBjbGFzcz0ic3Q0IiBkPSJNNDQyLjM0NiwyNDMuNjYyTDQ0Mi4zNDYsMjQzLjY2MmwxOC44NzMsNTguMTI2YzEuNzE0LDUuMjc4LTAuMTM3LDExLjEwNC00LjY2MSwxNC4zOTQKCQkJTDI5My4wMjYsNDM0Ljk4M0w0NDIuMzQ2LDI0My42NjJMNDQyLjM0NiwyNDMuNjYyeiIvPgoJCTxwYXRoIGlkPSJwYXRoODZfMl8iIGNsYXNzPSJzdDMiIGQ9Ik00NDIuMzQ2LDI0My42NjJoLTg3LjEybDM3LjQyNS0xMTUuMjI0YzEuOTE5LTUuODk1LDEwLjI4Mi01Ljg5NSwxMi4yNywwTDQ0Mi4zNDYsMjQzLjY2MgoJCQlMNDQyLjM0NiwyNDMuNjYyeiIvPgoJCTxwb2x5Z29uIGNsYXNzPSJzdDUiIHBvaW50cz0iMjkzLjAyNiw0MzQuOTgzIDM1NS4yMjUsMjQzLjY2MiA0NDIuMzQ2LDI0My42NjIgCQkiLz4KCQk8cG9seWdvbiBjbGFzcz0ic3Q1IiBwb2ludHM9IjI5My4wMjYsNDM0Ljk4MyAxNDMuNzk4LDI0My42NjIgMjMwLjkxOCwyNDMuNjYyIAkJIi8+Cgk8L2c+CjwvZz4KPGcgaWQ9InNwYWNpbmdfZ3VpZGVzIiB4bWxuczpza2V0Y2g9Imh0dHA6Ly93d3cuYm9oZW1pYW5jb2RpbmcuY29tL3NrZXRjaC9ucyIgY2xhc3M9InN0MTQiPgoJPHBhdGggaWQ9InBhdGg0MF8xOF8iIHNrZXRjaDp0eXBlPSJNU1NoYXBlR3JvdXAiIGNsYXNzPSJzdDE1IiBkPSJNMCwwLjV2MTI0aDU4NlYwLjVIMEwwLDAuNXoiLz4KCTxwYXRoIGlkPSJwYXRoNDBfMTZfIiBza2V0Y2g6dHlwZT0iTVNTaGFwZUdyb3VwIiBjbGFzcz0ic3QxNSIgZD0iTTAsNDM1LjV2MTI0aDU4NnYtMTI0SDBMMCw0MzUuNXoiLz4KCTxwYXRoIGlkPSJwYXRoNDBfMTVfIiBza2V0Y2g6dHlwZT0iTVNTaGFwZUdyb3VwIiBjbGFzcz0ic3QxNSIgZD0iTTQ2Mi4yLDU2MGgxMjRWMGgtMTI0VjU2MEw0NjIuMiw1NjB6Ii8+Cgk8ZyBjbGFzcz0ic3QxNiI+CgkJPHRleHQgdHJhbnNmb3JtPSJtYXRyaXgoMSAwIDAgMSA1MTEuMjg4MSAyODMuMzMxOSkiIGNsYXNzPSJzdDE4IHN0MTkiPjF4PC90ZXh0PgoJPC9nPgoJPGcgY2xhc3M9InN0MTYiPgoJCTx0ZXh0IHRyYW5zZm9ybT0ibWF0cml4KDEgMCAwIDEgMjgxLjI4ODEgNTAwLjk5NzgpIiBjbGFzcz0ic3QxOCBzdDE5Ij4xeDwvdGV4dD4KCTwvZz4KCTxnIGNsYXNzPSJzdDE2Ij4KCQk8dGV4dCB0cmFuc2Zvcm09Im1hdHJpeCgxIDAgMCAxIDI4MS4yODgxIDY1Ljk5OCkiIGNsYXNzPSJzdDE4IHN0MTkiPjF4PC90ZXh0PgoJPC9nPgoJPHBhdGggaWQ9InBhdGg0MF81XyIgc2tldGNoOnR5cGU9Ik1TU2hhcGVHcm91cCIgY2xhc3M9InN0MTUiIGQ9Ik0wLDU2MGgxMjRWMEgwVjU2MEwwLDU2MHoiLz4KCTxnIGNsYXNzPSJzdDE2Ij4KCQk8dGV4dCB0cmFuc2Zvcm09Im1hdHJpeCgxIDAgMCAxIDUxLjI4ODEgMjgzLjMzMTkpIiBjbGFzcz0ic3QxOCBzdDE5Ij4xeDwvdGV4dD4KCTwvZz4KPC9nPgo8L3N2Zz4K",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Gitlab"},{property:"og:description",content:"A Singer tap to fetch data from a Gitlab account. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.Gitlab.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Gitlab"},{name:"twitter:description",content:"A Singer tap to fetch data from a Gitlab account. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.Gitlab.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.Gitlab.html",relativePath:"plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.Gitlab.md",key:"v-7662856f",path:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.Gitlab.html",headers:[{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:148},{level:3,title:"apiUrl",slug:"apiurl",normalizedTitle:"apiurl",charIndex:163},{level:3,title:"args",slug:"args",normalizedTitle:"args",charIndex:349},{level:3,title:"dockerOptions",slug:"dockeroptions",normalizedTitle:"dockeroptions",charIndex:492},{level:3,title:"env",slug:"env",normalizedTitle:"env",charIndex:606},{level:3,title:"exitOnFailed",slug:"exitonfailed",normalizedTitle:"exitonfailed",charIndex:746},{level:3,title:"fetchMergeRequestCommits",slug:"fetchmergerequestcommits",normalizedTitle:"fetchmergerequestcommits",charIndex:1088},{level:3,title:"fetchPipelinesExtended",slug:"fetchpipelinesextended",normalizedTitle:"fetchpipelinesextended",charIndex:1418},{level:3,title:"files",slug:"files",normalizedTitle:"files",charIndex:1675},{level:3,title:"groups",slug:"groups",normalizedTitle:"groups",charIndex:1863},{level:3,title:"inputFiles",slug:"inputfiles",normalizedTitle:"inputfiles",charIndex:2092},{level:3,title:"interpreter",slug:"interpreter",normalizedTitle:"interpreter",charIndex:2487},{level:3,title:"interpreterArgs",slug:"interpreterargs",normalizedTitle:"interpreterargs",charIndex:2610},{level:3,title:"outputFiles",slug:"outputfiles",normalizedTitle:"outputfiles",charIndex:1830},{level:3,title:"outputsFiles",slug:"outputsfiles",normalizedTitle:"outputsfiles",charIndex:3168},{level:3,title:"private_token",slug:"private-token",normalizedTitle:"private_token",charIndex:3307},{level:3,title:"projects",slug:"projects",normalizedTitle:"projects",charIndex:3442},{level:3,title:"pythonPath",slug:"pythonpath",normalizedTitle:"pythonpath",charIndex:3660},{level:3,title:"requirements",slug:"requirements",normalizedTitle:"requirements",charIndex:3832},{level:3,title:"runner",slug:"runner",normalizedTitle:"runner",charIndex:588},{level:3,title:"startDate",slug:"startdate",normalizedTitle:"startdate",charIndex:4236},{level:3,title:"streamsConfigurations",slug:"streamsconfigurations",normalizedTitle:"streamsconfigurations",charIndex:4484},{level:3,title:"ultimateLicense",slug:"ultimatelicense",normalizedTitle:"ultimatelicense",charIndex:4642},{level:3,title:"warningOnStdErr",slug:"warningonstderr",normalizedTitle:"warningonstderr",charIndex:4870},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:4998},{level:3,title:"count",slug:"count",normalizedTitle:"count",charIndex:99},{level:3,title:"schemas",slug:"schemas",normalizedTitle:"schemas",charIndex:5059},{level:3,title:"state",slug:"state",normalizedTitle:"state",charIndex:916},{level:3,title:"streams",slug:"streams",normalizedTitle:"streams",charIndex:4484},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:5410},{level:3,title:"DockerOptions",slug:"dockeroptions-2",normalizedTitle:"dockeroptions",charIndex:516},{level:3,title:"StreamsConfiguration",slug:"streamsconfiguration",normalizedTitle:"streamsconfiguration",charIndex:4534}],headersStr:"Properties apiUrl args dockerOptions env exitOnFailed fetchMergeRequestCommits fetchPipelinesExtended files groups inputFiles interpreter interpreterArgs outputFiles outputsFiles private_token projects pythonPath requirements runner startDate streamsConfigurations ultimateLicense warningOnStdErr Outputs count schemas state streams Definitions DockerOptions StreamsConfiguration",content:"Gitlab\n\ntype: \"io.kestra.plugin.singer.taps.Gitlab\"\n\n\n> A Singer tap to fetch data from a Gitlab account.\n\nFull documentation can be found here\n\n\n# Properties\n\n\n# apiUrl\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Default: https://gitlab.com\n * Min length: 1\n\n> GitLab API/instance URL.\n\nWhen an API path is omitted, /api/v4/ is assumed.\n\n\n# args\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Python command args\n\nArguments list to pass to main python script\n\n\n# dockerOptions\n\n * Type: DockerOptions\n * Dynamic: ❓\n * Required: ❌\n\n> Docker options when using runner DOCKER\n\n\n# env\n\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Additional environnements variable to add for current process.\n\n\n# exitOnFailed\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Exit if any non true return value\n\nThis tells bash that it should exit the script if any statement returns a non-true return value.\nThe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n\n# fetchMergeRequestCommits\n\n * Type: boolean\n * Dynamic: ✔️\n * Required: ✔️\n * Default: false\n\n> For each Merge Request, also fetch the MR's commits and create the join table merge_request_commits with the Merge Request and related Commit IDs.\n\nThis can slow down extraction considerably because of the many API calls required.\n\n\n# fetchPipelinesExtended\n\n * Type: boolean\n * Dynamic: ✔️\n * Required: ✔️\n * Default: false\n\n> For every Pipeline, also fetch extended details of each of these pipelines.\n\nThis can slow down extraction considerably because of the many API calls required.\n\n\n# files\n\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The list of files that will be uploaded to internal storage,\n\nuse outputFiles property instead\n\n\n# groups\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Names of groups to extract data from.\n\nLeave empty and provide a project name if you'd like to pull data from a project in a personal user namespace.\n\n\n# inputFiles\n\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Input files are extra files supplied by user that make it simpler organize code.\n\nDescribe a files map that will be written and usable in execution context. In python execution context is in a temp folder, for bash scripts, you can reach files using a workingDir variable like 'source {{workingDir}}/myfile.sh'\n\n\n# interpreter\n\n * Type: string\n * Dynamic: ❌\n * Required: ✔️\n * Default: /bin/sh\n * Min length: 1\n\n> Interpreter to used\n\n\n# interpreterArgs\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n * Default: [-c]\n\n> Interpreter args used\n\n\n# outputFiles\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Output file list that will be uploaded to internal storage\n\nList of key that will generate temporary files.\nOn the command, just can use with special variable named outputFiles.key.\nIf you add a files with [\"first\"], you can use the special vars echo 1 >> {[ outputFiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n\n# outputsFiles\n\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Deprecated Output file\n\nuse outputFiles\n\n\n# private_token\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> GitLab personal access token or other API token.\n\n\n# projects\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> namespace/project paths of projects to extract data from.\n\nLeave empty and provide a group name to extract data from all group projects.\n\n\n# pythonPath\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Default: python\n * Min length: 1\n\n> The python interpreter to use\n\nSet the python interpreter path to use\n\n\n# requirements\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Requirements are python dependencies to add to the python execution process\n\nPython dependencies list to setup in the virtualenv, in the same format than requirements.txt\n\n\n# runner\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ✔️\n\n * Default: PROCESS\n\n * Possible Values:\n   \n   * PROCESS\n   * DOCKER\n\n> Runner to use\n\n\n# startDate\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> Determines how much historical data will be extracted.\n\nPlease be aware that the larger the time period and amount of data, the longer the initial extraction can be expected to take.\n\n\n# streamsConfigurations\n\n * Type: array\n * SubType: StreamsConfiguration\n * Dynamic: ❌\n * Required: ✔️\n * Min items: 1\n\n> The list of stream configurations\n\n\n# ultimateLicense\n\n * Type: boolean\n * Dynamic: ✔️\n * Required: ✔️\n * Default: false\n\n> Enable to pull in extra data (like Epics, Epic Issues and other entities) only available to GitLab Ultimate and GitLab.com Gold accounts.\n\n\n# warningOnStdErr\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Use WARNING state if any stdErr is sent\n\n\n# Outputs\n\n\n# count\n\n * Type: object\n\n> Counter of streams\n\n\n# schemas\n\n * Type: object\n * SubType: string\n\n> Map of schemas captured\n\nKey is stream name, value is uri of the schema file on ion kestra storage\n\n\n# state\n\n * Type: string\n\n> Uri of the state file\n\n\n# streams\n\n * Type: object\n * SubType: string\n\n> Map of stream captured\n\nKey is stream name, value is uri of the stream file on ion kestra storage\n\n\n# Definitions\n\n\n# DockerOptions\n\n# dockerConfig\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker config file\n\nFull file that can be used to configure private registries, ...\n\n# dockerHost\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: unix:///var/run/docker.sock\n\n> Docker api uri\n\n# entryPoint\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker entrypoint to use\n\n# extraHosts\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker extra host to use\n\n# image\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> Docker image to use\n\n# user\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker user to use\n\n\n# StreamsConfiguration\n\n# propertiesPattern\n\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n\n# replicationKeys\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# replicationMethod\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Possible Values:\n   \n   * FULL_TABLE\n   * INCREMENTAL\n   * LOG_BASED\n\n# selected\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: true\n\n# stream\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌",normalizedContent:"gitlab\n\ntype: \"io.kestra.plugin.singer.taps.gitlab\"\n\n\n> a singer tap to fetch data from a gitlab account.\n\nfull documentation can be found here\n\n\n# properties\n\n\n# apiurl\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * default: https://gitlab.com\n * min length: 1\n\n> gitlab api/instance url.\n\nwhen an api path is omitted, /api/v4/ is assumed.\n\n\n# args\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> python command args\n\narguments list to pass to main python script\n\n\n# dockeroptions\n\n * type: dockeroptions\n * dynamic: ❓\n * required: ❌\n\n> docker options when using runner docker\n\n\n# env\n\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> additional environnements variable to add for current process.\n\n\n# exitonfailed\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> exit if any non true return value\n\nthis tells bash that it should exit the script if any statement returns a non-true return value.\nthe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n\n# fetchmergerequestcommits\n\n * type: boolean\n * dynamic: ✔️\n * required: ✔️\n * default: false\n\n> for each merge request, also fetch the mr's commits and create the join table merge_request_commits with the merge request and related commit ids.\n\nthis can slow down extraction considerably because of the many api calls required.\n\n\n# fetchpipelinesextended\n\n * type: boolean\n * dynamic: ✔️\n * required: ✔️\n * default: false\n\n> for every pipeline, also fetch extended details of each of these pipelines.\n\nthis can slow down extraction considerably because of the many api calls required.\n\n\n# files\n\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> the list of files that will be uploaded to internal storage,\n\nuse outputfiles property instead\n\n\n# groups\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> names of groups to extract data from.\n\nleave empty and provide a project name if you'd like to pull data from a project in a personal user namespace.\n\n\n# inputfiles\n\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> input files are extra files supplied by user that make it simpler organize code.\n\ndescribe a files map that will be written and usable in execution context. in python execution context is in a temp folder, for bash scripts, you can reach files using a workingdir variable like 'source {{workingdir}}/myfile.sh'\n\n\n# interpreter\n\n * type: string\n * dynamic: ❌\n * required: ✔️\n * default: /bin/sh\n * min length: 1\n\n> interpreter to used\n\n\n# interpreterargs\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n * default: [-c]\n\n> interpreter args used\n\n\n# outputfiles\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> output file list that will be uploaded to internal storage\n\nlist of key that will generate temporary files.\non the command, just can use with special variable named outputfiles.key.\nif you add a files with [\"first\"], you can use the special vars echo 1 >> {[ outputfiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n\n# outputsfiles\n\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> deprecated output file\n\nuse outputfiles\n\n\n# private_token\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> gitlab personal access token or other api token.\n\n\n# projects\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> namespace/project paths of projects to extract data from.\n\nleave empty and provide a group name to extract data from all group projects.\n\n\n# pythonpath\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * default: python\n * min length: 1\n\n> the python interpreter to use\n\nset the python interpreter path to use\n\n\n# requirements\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> requirements are python dependencies to add to the python execution process\n\npython dependencies list to setup in the virtualenv, in the same format than requirements.txt\n\n\n# runner\n\n * type: string\n\n * dynamic: ❌\n\n * required: ✔️\n\n * default: process\n\n * possible values:\n   \n   * process\n   * docker\n\n> runner to use\n\n\n# startdate\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> determines how much historical data will be extracted.\n\nplease be aware that the larger the time period and amount of data, the longer the initial extraction can be expected to take.\n\n\n# streamsconfigurations\n\n * type: array\n * subtype: streamsconfiguration\n * dynamic: ❌\n * required: ✔️\n * min items: 1\n\n> the list of stream configurations\n\n\n# ultimatelicense\n\n * type: boolean\n * dynamic: ✔️\n * required: ✔️\n * default: false\n\n> enable to pull in extra data (like epics, epic issues and other entities) only available to gitlab ultimate and gitlab.com gold accounts.\n\n\n# warningonstderr\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> use warning state if any stderr is sent\n\n\n# outputs\n\n\n# count\n\n * type: object\n\n> counter of streams\n\n\n# schemas\n\n * type: object\n * subtype: string\n\n> map of schemas captured\n\nkey is stream name, value is uri of the schema file on ion kestra storage\n\n\n# state\n\n * type: string\n\n> uri of the state file\n\n\n# streams\n\n * type: object\n * subtype: string\n\n> map of stream captured\n\nkey is stream name, value is uri of the stream file on ion kestra storage\n\n\n# definitions\n\n\n# dockeroptions\n\n# dockerconfig\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> docker config file\n\nfull file that can be used to configure private registries, ...\n\n# dockerhost\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n * default: unix:///var/run/docker.sock\n\n> docker api uri\n\n# entrypoint\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> docker entrypoint to use\n\n# extrahosts\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> docker extra host to use\n\n# image\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> docker image to use\n\n# user\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> docker user to use\n\n\n# streamsconfiguration\n\n# propertiespattern\n\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n\n# replicationkeys\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# replicationmethod\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * possible values:\n   \n   * full_table\n   * incremental\n   * log_based\n\n# selected\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: true\n\n# stream\n\n * type: string\n * dynamic: ❓\n * required: ❌",charsets:{}},{title:"GoogleAnalytics",frontmatter:{title:"GoogleAnalytics",editLink:!1,description:"A Singer tap to fetch data from from the Google Analytics Reporting API.",icon:"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4KPHN2ZyB2ZXJzaW9uPSIxLjEiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgeG1sbnM6eGxpbms9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsiIHg9IjBweCIgeT0iMHB4IgoJIHdpZHRoPSIxOTJweCIgaGVpZ2h0PSIxOTJweCIgdmlld0JveD0iMCAwIDE5MiAxOTIiIGVuYWJsZS1iYWNrZ3JvdW5kPSJuZXcgMCAwIDE5MiAxOTIiIHhtbDpzcGFjZT0icHJlc2VydmUiPgo8cmVjdCB4PSIwIiB5PSIwIiBmaWxsPSJub25lIiB3aWR0aD0iMTkyIiBoZWlnaHQ9IjE5MiIvPgo8Zz4KCTxnPgoJCTxwYXRoIGZpbGw9IiNGOUFCMDAiIGQ9Ik0xMzAsMjl2MTMyYzAsMTQuNzcsMTAuMTksMjMsMjEsMjNjMTAsMCwyMS03LDIxLTIzVjMwYzAtMTMuNTQtMTAtMjItMjEtMjJTMTMwLDE3LjMzLDEzMCwyOXoiLz4KCTwvZz4KCTxnPgoJCTxwYXRoIGZpbGw9IiNFMzc0MDAiIGQ9Ik03NSw5NnY2NWMwLDE0Ljc3LDEwLjE5LDIzLDIxLDIzYzEwLDAsMjEtNywyMS0yM1Y5N2MwLTEzLjU0LTEwLTIyLTIxLTIyUzc1LDg0LjMzLDc1LDk2eiIvPgoJPC9nPgoJPGc+CgkJPGNpcmNsZSBmaWxsPSIjRTM3NDAwIiBjeD0iNDEiIGN5PSIxNjMiIHI9IjIxIi8+Cgk8L2c+CjwvZz4KPC9zdmc+Cg==",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"GoogleAnalytics"},{property:"og:description",content:"A Singer tap to fetch data from from the Google Analytics Reporting API. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.GoogleAnalytics.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"GoogleAnalytics"},{name:"twitter:description",content:"A Singer tap to fetch data from from the Google Analytics Reporting API. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.GoogleAnalytics.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.GoogleAnalytics.html",relativePath:"plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.GoogleAnalytics.md",key:"v-9e876dba",path:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.GoogleAnalytics.html",headers:[{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:189},{level:3,title:"args",slug:"args",normalizedTitle:"args",charIndex:204},{level:3,title:"dockerOptions",slug:"dockeroptions",normalizedTitle:"dockeroptions",charIndex:347},{level:3,title:"endDate",slug:"enddate",normalizedTitle:"enddate",charIndex:461},{level:3,title:"env",slug:"env",normalizedTitle:"env",charIndex:574},{level:3,title:"exitOnFailed",slug:"exitonfailed",normalizedTitle:"exitonfailed",charIndex:714},{level:3,title:"files",slug:"files",normalizedTitle:"files",charIndex:1056},{level:3,title:"inputFiles",slug:"inputfiles",normalizedTitle:"inputfiles",charIndex:1244},{level:3,title:"interpreter",slug:"interpreter",normalizedTitle:"interpreter",charIndex:1639},{level:3,title:"interpreterArgs",slug:"interpreterargs",normalizedTitle:"interpreterargs",charIndex:1762},{level:3,title:"oauthAccessToken",slug:"oauthaccesstoken",normalizedTitle:"oauthaccesstoken",charIndex:1888},{level:3,title:"oauthClientId",slug:"oauthclientid",normalizedTitle:"oauthclientid",charIndex:1979},{level:3,title:"oauthClientSecret",slug:"oauthclientsecret",normalizedTitle:"oauthclientsecret",charIndex:2063},{level:3,title:"oauthRefreshToken",slug:"oauthrefreshtoken",normalizedTitle:"oauthrefreshtoken",charIndex:2156},{level:3,title:"outputFiles",slug:"outputfiles",normalizedTitle:"outputfiles",charIndex:1211},{level:3,title:"outputsFiles",slug:"outputsfiles",normalizedTitle:"outputsfiles",charIndex:2681},{level:3,title:"pythonPath",slug:"pythonpath",normalizedTitle:"pythonpath",charIndex:2820},{level:3,title:"reports",slug:"reports",normalizedTitle:"reports",charIndex:2992},{level:3,title:"requirements",slug:"requirements",normalizedTitle:"requirements",charIndex:3081},{level:3,title:"runner",slug:"runner",normalizedTitle:"runner",charIndex:443},{level:3,title:"serviceAccount",slug:"serviceaccount",normalizedTitle:"serviceaccount",charIndex:3485},{level:3,title:"startDate",slug:"startdate",normalizedTitle:"startdate",charIndex:3579},{level:3,title:"streamsConfigurations",slug:"streamsconfigurations",normalizedTitle:"streamsconfigurations",charIndex:3827},{level:3,title:"view_id",slug:"view-id",normalizedTitle:"view_id",charIndex:3985},{level:3,title:"warningOnStdErr",slug:"warningonstderr",normalizedTitle:"warningonstderr",charIndex:4068},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:4196},{level:3,title:"count",slug:"count",normalizedTitle:"count",charIndex:3494},{level:3,title:"schemas",slug:"schemas",normalizedTitle:"schemas",charIndex:4257},{level:3,title:"state",slug:"state",normalizedTitle:"state",charIndex:884},{level:3,title:"streams",slug:"streams",normalizedTitle:"streams",charIndex:3827},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:4608},{level:3,title:"Report",slug:"report",normalizedTitle:"report",charIndex:132},{level:3,title:"DockerOptions",slug:"dockeroptions-2",normalizedTitle:"dockeroptions",charIndex:371},{level:3,title:"StreamsConfiguration",slug:"streamsconfiguration",normalizedTitle:"streamsconfiguration",charIndex:3877}],headersStr:"Properties args dockerOptions endDate env exitOnFailed files inputFiles interpreter interpreterArgs oauthAccessToken oauthClientId oauthClientSecret oauthRefreshToken outputFiles outputsFiles pythonPath reports requirements runner serviceAccount startDate streamsConfigurations view_id warningOnStdErr Outputs count schemas state streams Definitions Report DockerOptions StreamsConfiguration",content:'GoogleAnalytics\n\ntype: "io.kestra.plugin.singer.taps.GoogleAnalytics"\n\n\n> A Singer tap to fetch data from from the Google Analytics Reporting API.\n\nFull documentation can be found here\n\n\n# Properties\n\n\n# args\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Python command args\n\nArguments list to pass to main python script\n\n\n# dockerOptions\n\n * Type: DockerOptions\n * Dynamic: ❓\n * Required: ❌\n\n> Docker options when using runner DOCKER\n\n\n# endDate\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Date up to when historical data will be extracted.\n\n\n# env\n\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Additional environnements variable to add for current process.\n\n\n# exitOnFailed\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Exit if any non true return value\n\nThis tells bash that it should exit the script if any statement returns a non-true return value.\nThe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n\n# files\n\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The list of files that will be uploaded to internal storage,\n\nuse outputFiles property instead\n\n\n# inputFiles\n\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Input files are extra files supplied by user that make it simpler organize code.\n\nDescribe a files map that will be written and usable in execution context. In python execution context is in a temp folder, for bash scripts, you can reach files using a workingDir variable like \'source {{workingDir}}/myfile.sh\'\n\n\n# interpreter\n\n * Type: string\n * Dynamic: ❌\n * Required: ✔️\n * Default: /bin/sh\n * Min length: 1\n\n> Interpreter to used\n\n\n# interpreterArgs\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n * Default: [-c]\n\n> Interpreter args used\n\n\n# oauthAccessToken\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> OAuth Access Token.\n\n\n# oauthClientId\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> OAuth Client ID\n\n\n# oauthClientSecret\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> OAuth Client Secret.\n\n\n# oauthRefreshToken\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> OAuth Refresh Token.\n\n\n# outputFiles\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Output file list that will be uploaded to internal storage\n\nList of key that will generate temporary files.\nOn the command, just can use with special variable named outputFiles.key.\nIf you add a files with ["first"], you can use the special vars echo 1 >> {[ outputFiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n\n# outputsFiles\n\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Deprecated Output file\n\nuse outputFiles\n\n\n# pythonPath\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Default: python\n * Min length: 1\n\n> The python interpreter to use\n\nSet the python interpreter path to use\n\n\n# reports\n\n * Type: array\n * SubType: Report\n * Dynamic: ✔️\n * Required: ❌\n\n> Reports.\n\n\n# requirements\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Requirements are python dependencies to add to the python execution process\n\nPython dependencies list to setup in the virtualenv, in the same format than requirements.txt\n\n\n# runner\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ✔️\n\n * Default: PROCESS\n\n * Possible Values:\n   \n   * PROCESS\n   * DOCKER\n\n> Runner to use\n\n\n# serviceAccount\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Service account as json.\n\n\n# startDate\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> Determines how much historical data will be extracted.\n\nPlease be aware that the larger the time period and amount of data, the longer the initial extraction can be expected to take.\n\n\n# streamsConfigurations\n\n * Type: array\n * SubType: StreamsConfiguration\n * Dynamic: ❌\n * Required: ✔️\n * Min items: 1\n\n> The list of stream configurations\n\n\n# view_id\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> OAuth Refresh Token.\n\n\n# warningOnStdErr\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Use WARNING state if any stdErr is sent\n\n\n# Outputs\n\n\n# count\n\n * Type: object\n\n> Counter of streams\n\n\n# schemas\n\n * Type: object\n * SubType: string\n\n> Map of schemas captured\n\nKey is stream name, value is uri of the schema file on ion kestra storage\n\n\n# state\n\n * Type: string\n\n> Uri of the state file\n\n\n# streams\n\n * Type: object\n * SubType: string\n\n> Map of stream captured\n\nKey is stream name, value is uri of the stream file on ion kestra storage\n\n\n# Definitions\n\n\n# Report\n\n# dimensions\n\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n\n# metrics\n\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n\n# name\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n\n# DockerOptions\n\n# dockerConfig\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker config file\n\nFull file that can be used to configure private registries, ...\n\n# dockerHost\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: unix:///var/run/docker.sock\n\n> Docker api uri\n\n# entryPoint\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker entrypoint to use\n\n# extraHosts\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker extra host to use\n\n# image\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> Docker image to use\n\n# user\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker user to use\n\n\n# StreamsConfiguration\n\n# propertiesPattern\n\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n\n# replicationKeys\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# replicationMethod\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Possible Values:\n   \n   * FULL_TABLE\n   * INCREMENTAL\n   * LOG_BASED\n\n# selected\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: true\n\n# stream\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌',normalizedContent:'googleanalytics\n\ntype: "io.kestra.plugin.singer.taps.googleanalytics"\n\n\n> a singer tap to fetch data from from the google analytics reporting api.\n\nfull documentation can be found here\n\n\n# properties\n\n\n# args\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> python command args\n\narguments list to pass to main python script\n\n\n# dockeroptions\n\n * type: dockeroptions\n * dynamic: ❓\n * required: ❌\n\n> docker options when using runner docker\n\n\n# enddate\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> date up to when historical data will be extracted.\n\n\n# env\n\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> additional environnements variable to add for current process.\n\n\n# exitonfailed\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> exit if any non true return value\n\nthis tells bash that it should exit the script if any statement returns a non-true return value.\nthe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n\n# files\n\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> the list of files that will be uploaded to internal storage,\n\nuse outputfiles property instead\n\n\n# inputfiles\n\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> input files are extra files supplied by user that make it simpler organize code.\n\ndescribe a files map that will be written and usable in execution context. in python execution context is in a temp folder, for bash scripts, you can reach files using a workingdir variable like \'source {{workingdir}}/myfile.sh\'\n\n\n# interpreter\n\n * type: string\n * dynamic: ❌\n * required: ✔️\n * default: /bin/sh\n * min length: 1\n\n> interpreter to used\n\n\n# interpreterargs\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n * default: [-c]\n\n> interpreter args used\n\n\n# oauthaccesstoken\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> oauth access token.\n\n\n# oauthclientid\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> oauth client id\n\n\n# oauthclientsecret\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> oauth client secret.\n\n\n# oauthrefreshtoken\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> oauth refresh token.\n\n\n# outputfiles\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> output file list that will be uploaded to internal storage\n\nlist of key that will generate temporary files.\non the command, just can use with special variable named outputfiles.key.\nif you add a files with ["first"], you can use the special vars echo 1 >> {[ outputfiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n\n# outputsfiles\n\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> deprecated output file\n\nuse outputfiles\n\n\n# pythonpath\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * default: python\n * min length: 1\n\n> the python interpreter to use\n\nset the python interpreter path to use\n\n\n# reports\n\n * type: array\n * subtype: report\n * dynamic: ✔️\n * required: ❌\n\n> reports.\n\n\n# requirements\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> requirements are python dependencies to add to the python execution process\n\npython dependencies list to setup in the virtualenv, in the same format than requirements.txt\n\n\n# runner\n\n * type: string\n\n * dynamic: ❌\n\n * required: ✔️\n\n * default: process\n\n * possible values:\n   \n   * process\n   * docker\n\n> runner to use\n\n\n# serviceaccount\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> service account as json.\n\n\n# startdate\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> determines how much historical data will be extracted.\n\nplease be aware that the larger the time period and amount of data, the longer the initial extraction can be expected to take.\n\n\n# streamsconfigurations\n\n * type: array\n * subtype: streamsconfiguration\n * dynamic: ❌\n * required: ✔️\n * min items: 1\n\n> the list of stream configurations\n\n\n# view_id\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> oauth refresh token.\n\n\n# warningonstderr\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> use warning state if any stderr is sent\n\n\n# outputs\n\n\n# count\n\n * type: object\n\n> counter of streams\n\n\n# schemas\n\n * type: object\n * subtype: string\n\n> map of schemas captured\n\nkey is stream name, value is uri of the schema file on ion kestra storage\n\n\n# state\n\n * type: string\n\n> uri of the state file\n\n\n# streams\n\n * type: object\n * subtype: string\n\n> map of stream captured\n\nkey is stream name, value is uri of the stream file on ion kestra storage\n\n\n# definitions\n\n\n# report\n\n# dimensions\n\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n\n# metrics\n\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n\n# name\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n\n# dockeroptions\n\n# dockerconfig\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> docker config file\n\nfull file that can be used to configure private registries, ...\n\n# dockerhost\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n * default: unix:///var/run/docker.sock\n\n> docker api uri\n\n# entrypoint\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> docker entrypoint to use\n\n# extrahosts\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> docker extra host to use\n\n# image\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> docker image to use\n\n# user\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> docker user to use\n\n\n# streamsconfiguration\n\n# propertiespattern\n\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n\n# replicationkeys\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# replicationmethod\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * possible values:\n   \n   * full_table\n   * incremental\n   * log_based\n\n# selected\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: true\n\n# stream\n\n * type: string\n * dynamic: ❓\n * required: ❌',charsets:{}},{title:"GoogleSearchConsole",frontmatter:{title:"GoogleSearchConsole",editLink:!1,description:"A Singer tap to fetch data from a google search console.",icon:"",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"GoogleSearchConsole"},{property:"og:description",content:"A Singer tap to fetch data from a google search console. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.GoogleSearchConsole.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"GoogleSearchConsole"},{name:"twitter:description",content:"A Singer tap to fetch data from a google search console. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.GoogleSearchConsole.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.GoogleSearchConsole.html",relativePath:"plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.GoogleSearchConsole.md",key:"v-8271f6fa",path:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.GoogleSearchConsole.html",headers:[{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:181},{level:3,title:"args",slug:"args",normalizedTitle:"args",charIndex:196},{level:3,title:"clientId",slug:"clientid",normalizedTitle:"clientid",charIndex:339},{level:3,title:"clientSecret",slug:"clientsecret",normalizedTitle:"clientsecret",charIndex:449},{level:3,title:"dockerOptions",slug:"dockeroptions",normalizedTitle:"dockeroptions",charIndex:567},{level:3,title:"env",slug:"env",normalizedTitle:"env",charIndex:681},{level:3,title:"exitOnFailed",slug:"exitonfailed",normalizedTitle:"exitonfailed",charIndex:821},{level:3,title:"files",slug:"files",normalizedTitle:"files",charIndex:1163},{level:3,title:"inputFiles",slug:"inputfiles",normalizedTitle:"inputfiles",charIndex:1351},{level:3,title:"interpreter",slug:"interpreter",normalizedTitle:"interpreter",charIndex:1746},{level:3,title:"interpreterArgs",slug:"interpreterargs",normalizedTitle:"interpreterargs",charIndex:1869},{level:3,title:"outputFiles",slug:"outputfiles",normalizedTitle:"outputfiles",charIndex:1318},{level:3,title:"outputsFiles",slug:"outputsfiles",normalizedTitle:"outputsfiles",charIndex:2427},{level:3,title:"pythonPath",slug:"pythonpath",normalizedTitle:"pythonpath",charIndex:2566},{level:3,title:"refreshToken",slug:"refreshtoken",normalizedTitle:"refreshtoken",charIndex:2738},{level:3,title:"requirements",slug:"requirements",normalizedTitle:"requirements",charIndex:2928},{level:3,title:"runner",slug:"runner",normalizedTitle:"runner",charIndex:663},{level:3,title:"siteUrls",slug:"siteurls",normalizedTitle:"siteurls",charIndex:3332},{level:3,title:"startDate",slug:"startdate",normalizedTitle:"startdate",charIndex:3507},{level:3,title:"streamsConfigurations",slug:"streamsconfigurations",normalizedTitle:"streamsconfigurations",charIndex:3755},{level:3,title:"userAgent",slug:"useragent",normalizedTitle:"useragent",charIndex:3913},{level:3,title:"warningOnStdErr",slug:"warningonstderr",normalizedTitle:"warningonstderr",charIndex:4060},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:4188},{level:3,title:"count",slug:"count",normalizedTitle:"count",charIndex:4200},{level:3,title:"schemas",slug:"schemas",normalizedTitle:"schemas",charIndex:4249},{level:3,title:"state",slug:"state",normalizedTitle:"state",charIndex:991},{level:3,title:"streams",slug:"streams",normalizedTitle:"streams",charIndex:3755},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:4600},{level:3,title:"DockerOptions",slug:"dockeroptions-2",normalizedTitle:"dockeroptions",charIndex:591},{level:3,title:"StreamsConfiguration",slug:"streamsconfiguration",normalizedTitle:"streamsconfiguration",charIndex:3805}],headersStr:"Properties args clientId clientSecret dockerOptions env exitOnFailed files inputFiles interpreter interpreterArgs outputFiles outputsFiles pythonPath refreshToken requirements runner siteUrls startDate streamsConfigurations userAgent warningOnStdErr Outputs count schemas state streams Definitions DockerOptions StreamsConfiguration",content:'GoogleSearchConsole\n\ntype: "io.kestra.plugin.singer.taps.GoogleSearchConsole"\n\n\n> A Singer tap to fetch data from a google search console.\n\nFull documentation can be found here\n\n\n# Properties\n\n\n# args\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Python command args\n\nArguments list to pass to main python script\n\n\n# clientId\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> Your Google OAuth Client ID.\n\n\n# clientSecret\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> Your Google OAuth Client Secret.\n\n\n# dockerOptions\n\n * Type: DockerOptions\n * Dynamic: ❓\n * Required: ❌\n\n> Docker options when using runner DOCKER\n\n\n# env\n\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Additional environnements variable to add for current process.\n\n\n# exitOnFailed\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Exit if any non true return value\n\nThis tells bash that it should exit the script if any statement returns a non-true return value.\nThe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n\n# files\n\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The list of files that will be uploaded to internal storage,\n\nuse outputFiles property instead\n\n\n# inputFiles\n\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Input files are extra files supplied by user that make it simpler organize code.\n\nDescribe a files map that will be written and usable in execution context. In python execution context is in a temp folder, for bash scripts, you can reach files using a workingDir variable like \'source {{workingDir}}/myfile.sh\'\n\n\n# interpreter\n\n * Type: string\n * Dynamic: ❌\n * Required: ✔️\n * Default: /bin/sh\n * Min length: 1\n\n> Interpreter to used\n\n\n# interpreterArgs\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n * Default: [-c]\n\n> Interpreter args used\n\n\n# outputFiles\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Output file list that will be uploaded to internal storage\n\nList of key that will generate temporary files.\nOn the command, just can use with special variable named outputFiles.key.\nIf you add a files with ["first"], you can use the special vars echo 1 >> {[ outputFiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n\n# outputsFiles\n\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Deprecated Output file\n\nuse outputFiles\n\n\n# pythonPath\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Default: python\n * Min length: 1\n\n> The python interpreter to use\n\nSet the python interpreter path to use\n\n\n# refreshToken\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> The Refresh Token generated through the OAuth flow run using your OAuth Client and your Developer Token.\n\n\n# requirements\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Requirements are python dependencies to add to the python execution process\n\nPython dependencies list to setup in the virtualenv, in the same format than requirements.txt\n\n\n# runner\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ✔️\n\n * Default: PROCESS\n\n * Possible Values:\n   \n   * PROCESS\n   * DOCKER\n\n> Runner to use\n\n\n# siteUrls\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min items: 1\n\n> website URL properties\n\nDo not include the domain-level property in the list\n\n\n# startDate\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> Determines how much historical data will be extracted.\n\nPlease be aware that the larger the time period and amount of data, the longer the initial extraction can be expected to take.\n\n\n# streamsConfigurations\n\n * Type: array\n * SubType: StreamsConfiguration\n * Dynamic: ❌\n * Required: ✔️\n * Min items: 1\n\n> The list of stream configurations\n\n\n# userAgent\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: tap-google-search-console via Kestra\n\n> User Agent for your OAuth Client.\n\n\n# warningOnStdErr\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Use WARNING state if any stdErr is sent\n\n\n# Outputs\n\n\n# count\n\n * Type: object\n\n> Counter of streams\n\n\n# schemas\n\n * Type: object\n * SubType: string\n\n> Map of schemas captured\n\nKey is stream name, value is uri of the schema file on ion kestra storage\n\n\n# state\n\n * Type: string\n\n> Uri of the state file\n\n\n# streams\n\n * Type: object\n * SubType: string\n\n> Map of stream captured\n\nKey is stream name, value is uri of the stream file on ion kestra storage\n\n\n# Definitions\n\n\n# DockerOptions\n\n# dockerConfig\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker config file\n\nFull file that can be used to configure private registries, ...\n\n# dockerHost\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: unix:///var/run/docker.sock\n\n> Docker api uri\n\n# entryPoint\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker entrypoint to use\n\n# extraHosts\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker extra host to use\n\n# image\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> Docker image to use\n\n# user\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker user to use\n\n\n# StreamsConfiguration\n\n# propertiesPattern\n\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n\n# replicationKeys\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# replicationMethod\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Possible Values:\n   \n   * FULL_TABLE\n   * INCREMENTAL\n   * LOG_BASED\n\n# selected\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: true\n\n# stream\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌',normalizedContent:'googlesearchconsole\n\ntype: "io.kestra.plugin.singer.taps.googlesearchconsole"\n\n\n> a singer tap to fetch data from a google search console.\n\nfull documentation can be found here\n\n\n# properties\n\n\n# args\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> python command args\n\narguments list to pass to main python script\n\n\n# clientid\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> your google oauth client id.\n\n\n# clientsecret\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> your google oauth client secret.\n\n\n# dockeroptions\n\n * type: dockeroptions\n * dynamic: ❓\n * required: ❌\n\n> docker options when using runner docker\n\n\n# env\n\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> additional environnements variable to add for current process.\n\n\n# exitonfailed\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> exit if any non true return value\n\nthis tells bash that it should exit the script if any statement returns a non-true return value.\nthe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n\n# files\n\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> the list of files that will be uploaded to internal storage,\n\nuse outputfiles property instead\n\n\n# inputfiles\n\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> input files are extra files supplied by user that make it simpler organize code.\n\ndescribe a files map that will be written and usable in execution context. in python execution context is in a temp folder, for bash scripts, you can reach files using a workingdir variable like \'source {{workingdir}}/myfile.sh\'\n\n\n# interpreter\n\n * type: string\n * dynamic: ❌\n * required: ✔️\n * default: /bin/sh\n * min length: 1\n\n> interpreter to used\n\n\n# interpreterargs\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n * default: [-c]\n\n> interpreter args used\n\n\n# outputfiles\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> output file list that will be uploaded to internal storage\n\nlist of key that will generate temporary files.\non the command, just can use with special variable named outputfiles.key.\nif you add a files with ["first"], you can use the special vars echo 1 >> {[ outputfiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n\n# outputsfiles\n\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> deprecated output file\n\nuse outputfiles\n\n\n# pythonpath\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * default: python\n * min length: 1\n\n> the python interpreter to use\n\nset the python interpreter path to use\n\n\n# refreshtoken\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> the refresh token generated through the oauth flow run using your oauth client and your developer token.\n\n\n# requirements\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> requirements are python dependencies to add to the python execution process\n\npython dependencies list to setup in the virtualenv, in the same format than requirements.txt\n\n\n# runner\n\n * type: string\n\n * dynamic: ❌\n\n * required: ✔️\n\n * default: process\n\n * possible values:\n   \n   * process\n   * docker\n\n> runner to use\n\n\n# siteurls\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ✔️\n * min items: 1\n\n> website url properties\n\ndo not include the domain-level property in the list\n\n\n# startdate\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> determines how much historical data will be extracted.\n\nplease be aware that the larger the time period and amount of data, the longer the initial extraction can be expected to take.\n\n\n# streamsconfigurations\n\n * type: array\n * subtype: streamsconfiguration\n * dynamic: ❌\n * required: ✔️\n * min items: 1\n\n> the list of stream configurations\n\n\n# useragent\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n * default: tap-google-search-console via kestra\n\n> user agent for your oauth client.\n\n\n# warningonstderr\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> use warning state if any stderr is sent\n\n\n# outputs\n\n\n# count\n\n * type: object\n\n> counter of streams\n\n\n# schemas\n\n * type: object\n * subtype: string\n\n> map of schemas captured\n\nkey is stream name, value is uri of the schema file on ion kestra storage\n\n\n# state\n\n * type: string\n\n> uri of the state file\n\n\n# streams\n\n * type: object\n * subtype: string\n\n> map of stream captured\n\nkey is stream name, value is uri of the stream file on ion kestra storage\n\n\n# definitions\n\n\n# dockeroptions\n\n# dockerconfig\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> docker config file\n\nfull file that can be used to configure private registries, ...\n\n# dockerhost\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n * default: unix:///var/run/docker.sock\n\n> docker api uri\n\n# entrypoint\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> docker entrypoint to use\n\n# extrahosts\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> docker extra host to use\n\n# image\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> docker image to use\n\n# user\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> docker user to use\n\n\n# streamsconfiguration\n\n# propertiespattern\n\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n\n# replicationkeys\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# replicationmethod\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * possible values:\n   \n   * full_table\n   * incremental\n   * log_based\n\n# selected\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: true\n\n# stream\n\n * type: string\n * dynamic: ❓\n * required: ❌',charsets:{}},{title:"Marketo",frontmatter:{title:"Marketo",editLink:!1,description:"A Singer tap to fetch data from a Marketo account.",icon:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSI2NCIgaGVpZ2h0PSI2NCIgZmlsbD0iIzVjNGM5ZiI+PHBhdGggZD0iTTU5LjQgNTAuOTcyVjguODkyTDQzLjA1NSAwdjY0ek0yMi4yNzYgNS41NjNsMTMuMTcgMy45djQwLjU2bC0xMy4xNyA1Ljc1M3ptLTcuNjA4IDguMjc0TDQuNjM2IDEyLjIybC0uMDQ4IDM2LjMyNyAxMC4wOC0yLjY2M3oiLz48L3N2Zz4=",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Marketo"},{property:"og:description",content:"A Singer tap to fetch data from a Marketo account. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.Marketo.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Marketo"},{name:"twitter:description",content:"A Singer tap to fetch data from a Marketo account. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.Marketo.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.Marketo.html",relativePath:"plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.Marketo.md",key:"v-7c7dff3a",path:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.Marketo.html",headers:[{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:151},{level:3,title:"args",slug:"args",normalizedTitle:"args",charIndex:166},{level:3,title:"clientId",slug:"clientid",normalizedTitle:"clientid",charIndex:309},{level:3,title:"clientSecret",slug:"clientsecret",normalizedTitle:"clientsecret",charIndex:409},{level:3,title:"dockerOptions",slug:"dockeroptions",normalizedTitle:"dockeroptions",charIndex:517},{level:3,title:"endpoint",slug:"endpoint",normalizedTitle:"endpoint",charIndex:631},{level:3,title:"env",slug:"env",normalizedTitle:"env",charIndex:1051},{level:3,title:"exitOnFailed",slug:"exitonfailed",normalizedTitle:"exitonfailed",charIndex:1191},{level:3,title:"files",slug:"files",normalizedTitle:"files",charIndex:1533},{level:3,title:"identity",slug:"identity",normalizedTitle:"identity",charIndex:1721},{level:3,title:"inputFiles",slug:"inputfiles",normalizedTitle:"inputfiles",charIndex:1915},{level:3,title:"interpreter",slug:"interpreter",normalizedTitle:"interpreter",charIndex:2310},{level:3,title:"interpreterArgs",slug:"interpreterargs",normalizedTitle:"interpreterargs",charIndex:2433},{level:3,title:"outputFiles",slug:"outputfiles",normalizedTitle:"outputfiles",charIndex:1688},{level:3,title:"outputsFiles",slug:"outputsfiles",normalizedTitle:"outputsfiles",charIndex:2991},{level:3,title:"pythonPath",slug:"pythonpath",normalizedTitle:"pythonpath",charIndex:3130},{level:3,title:"requirements",slug:"requirements",normalizedTitle:"requirements",charIndex:3302},{level:3,title:"runner",slug:"runner",normalizedTitle:"runner",charIndex:613},{level:3,title:"startDate",slug:"startdate",normalizedTitle:"startdate",charIndex:3706},{level:3,title:"streamsConfigurations",slug:"streamsconfigurations",normalizedTitle:"streamsconfigurations",charIndex:3954},{level:3,title:"warningOnStdErr",slug:"warningonstderr",normalizedTitle:"warningonstderr",charIndex:4112},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:4240},{level:3,title:"count",slug:"count",normalizedTitle:"count",charIndex:102},{level:3,title:"schemas",slug:"schemas",normalizedTitle:"schemas",charIndex:4301},{level:3,title:"state",slug:"state",normalizedTitle:"state",charIndex:1361},{level:3,title:"streams",slug:"streams",normalizedTitle:"streams",charIndex:3954},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:4652},{level:3,title:"DockerOptions",slug:"dockeroptions-2",normalizedTitle:"dockeroptions",charIndex:541},{level:3,title:"StreamsConfiguration",slug:"streamsconfiguration",normalizedTitle:"streamsconfiguration",charIndex:4004}],headersStr:"Properties args clientId clientSecret dockerOptions endpoint env exitOnFailed files identity inputFiles interpreter interpreterArgs outputFiles outputsFiles pythonPath requirements runner startDate streamsConfigurations warningOnStdErr Outputs count schemas state streams Definitions DockerOptions StreamsConfiguration",content:'Marketo\n\ntype: "io.kestra.plugin.singer.taps.Marketo"\n\n\n> A Singer tap to fetch data from a Marketo account.\n\nFull documentation can be found here\n\n\n# Properties\n\n\n# args\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Python command args\n\nArguments list to pass to main python script\n\n\n# clientId\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> Marketo client id.\n\n\n# clientSecret\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> Marketo client secret.\n\n\n# dockerOptions\n\n * Type: DockerOptions\n * Dynamic: ❓\n * Required: ❌\n\n> Docker options when using runner DOCKER\n\n\n# endpoint\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> Endpoint url.\n\nThe base URL contains the account id (a.k.a. Munchkin id) and is therefore unique for each Marketo subscription. Your base URL is found by logging into Marketo and navigating to the Admin > Integration > Web Services menu. It is labled as “Endpoint:” underneath the “REST API” section as shown in the following screenshots.\n\n\n# env\n\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Additional environnements variable to add for current process.\n\n\n# exitOnFailed\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Exit if any non true return value\n\nThis tells bash that it should exit the script if any statement returns a non-true return value.\nThe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n\n# files\n\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The list of files that will be uploaded to internal storage,\n\nuse outputFiles property instead\n\n\n# identity\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> Identity.\n\nIdentity is found directly below the endpoint entry.https://developers.marketo.com/rest-api/base-url/\n\n\n# inputFiles\n\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Input files are extra files supplied by user that make it simpler organize code.\n\nDescribe a files map that will be written and usable in execution context. In python execution context is in a temp folder, for bash scripts, you can reach files using a workingDir variable like \'source {{workingDir}}/myfile.sh\'\n\n\n# interpreter\n\n * Type: string\n * Dynamic: ❌\n * Required: ✔️\n * Default: /bin/sh\n * Min length: 1\n\n> Interpreter to used\n\n\n# interpreterArgs\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n * Default: [-c]\n\n> Interpreter args used\n\n\n# outputFiles\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Output file list that will be uploaded to internal storage\n\nList of key that will generate temporary files.\nOn the command, just can use with special variable named outputFiles.key.\nIf you add a files with ["first"], you can use the special vars echo 1 >> {[ outputFiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n\n# outputsFiles\n\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Deprecated Output file\n\nuse outputFiles\n\n\n# pythonPath\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Default: python\n * Min length: 1\n\n> The python interpreter to use\n\nSet the python interpreter path to use\n\n\n# requirements\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Requirements are python dependencies to add to the python execution process\n\nPython dependencies list to setup in the virtualenv, in the same format than requirements.txt\n\n\n# runner\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ✔️\n\n * Default: PROCESS\n\n * Possible Values:\n   \n   * PROCESS\n   * DOCKER\n\n> Runner to use\n\n\n# startDate\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> Determines how much historical data will be extracted.\n\nPlease be aware that the larger the time period and amount of data, the longer the initial extraction can be expected to take.\n\n\n# streamsConfigurations\n\n * Type: array\n * SubType: StreamsConfiguration\n * Dynamic: ❌\n * Required: ✔️\n * Min items: 1\n\n> The list of stream configurations\n\n\n# warningOnStdErr\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Use WARNING state if any stdErr is sent\n\n\n# Outputs\n\n\n# count\n\n * Type: object\n\n> Counter of streams\n\n\n# schemas\n\n * Type: object\n * SubType: string\n\n> Map of schemas captured\n\nKey is stream name, value is uri of the schema file on ion kestra storage\n\n\n# state\n\n * Type: string\n\n> Uri of the state file\n\n\n# streams\n\n * Type: object\n * SubType: string\n\n> Map of stream captured\n\nKey is stream name, value is uri of the stream file on ion kestra storage\n\n\n# Definitions\n\n\n# DockerOptions\n\n# dockerConfig\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker config file\n\nFull file that can be used to configure private registries, ...\n\n# dockerHost\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: unix:///var/run/docker.sock\n\n> Docker api uri\n\n# entryPoint\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker entrypoint to use\n\n# extraHosts\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker extra host to use\n\n# image\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> Docker image to use\n\n# user\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker user to use\n\n\n# StreamsConfiguration\n\n# propertiesPattern\n\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n\n# replicationKeys\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# replicationMethod\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Possible Values:\n   \n   * FULL_TABLE\n   * INCREMENTAL\n   * LOG_BASED\n\n# selected\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: true\n\n# stream\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌',normalizedContent:'marketo\n\ntype: "io.kestra.plugin.singer.taps.marketo"\n\n\n> a singer tap to fetch data from a marketo account.\n\nfull documentation can be found here\n\n\n# properties\n\n\n# args\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> python command args\n\narguments list to pass to main python script\n\n\n# clientid\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> marketo client id.\n\n\n# clientsecret\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> marketo client secret.\n\n\n# dockeroptions\n\n * type: dockeroptions\n * dynamic: ❓\n * required: ❌\n\n> docker options when using runner docker\n\n\n# endpoint\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> endpoint url.\n\nthe base url contains the account id (a.k.a. munchkin id) and is therefore unique for each marketo subscription. your base url is found by logging into marketo and navigating to the admin > integration > web services menu. it is labled as “endpoint:” underneath the “rest api” section as shown in the following screenshots.\n\n\n# env\n\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> additional environnements variable to add for current process.\n\n\n# exitonfailed\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> exit if any non true return value\n\nthis tells bash that it should exit the script if any statement returns a non-true return value.\nthe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n\n# files\n\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> the list of files that will be uploaded to internal storage,\n\nuse outputfiles property instead\n\n\n# identity\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> identity.\n\nidentity is found directly below the endpoint entry.https://developers.marketo.com/rest-api/base-url/\n\n\n# inputfiles\n\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> input files are extra files supplied by user that make it simpler organize code.\n\ndescribe a files map that will be written and usable in execution context. in python execution context is in a temp folder, for bash scripts, you can reach files using a workingdir variable like \'source {{workingdir}}/myfile.sh\'\n\n\n# interpreter\n\n * type: string\n * dynamic: ❌\n * required: ✔️\n * default: /bin/sh\n * min length: 1\n\n> interpreter to used\n\n\n# interpreterargs\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n * default: [-c]\n\n> interpreter args used\n\n\n# outputfiles\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> output file list that will be uploaded to internal storage\n\nlist of key that will generate temporary files.\non the command, just can use with special variable named outputfiles.key.\nif you add a files with ["first"], you can use the special vars echo 1 >> {[ outputfiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n\n# outputsfiles\n\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> deprecated output file\n\nuse outputfiles\n\n\n# pythonpath\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * default: python\n * min length: 1\n\n> the python interpreter to use\n\nset the python interpreter path to use\n\n\n# requirements\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> requirements are python dependencies to add to the python execution process\n\npython dependencies list to setup in the virtualenv, in the same format than requirements.txt\n\n\n# runner\n\n * type: string\n\n * dynamic: ❌\n\n * required: ✔️\n\n * default: process\n\n * possible values:\n   \n   * process\n   * docker\n\n> runner to use\n\n\n# startdate\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> determines how much historical data will be extracted.\n\nplease be aware that the larger the time period and amount of data, the longer the initial extraction can be expected to take.\n\n\n# streamsconfigurations\n\n * type: array\n * subtype: streamsconfiguration\n * dynamic: ❌\n * required: ✔️\n * min items: 1\n\n> the list of stream configurations\n\n\n# warningonstderr\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> use warning state if any stderr is sent\n\n\n# outputs\n\n\n# count\n\n * type: object\n\n> counter of streams\n\n\n# schemas\n\n * type: object\n * subtype: string\n\n> map of schemas captured\n\nkey is stream name, value is uri of the schema file on ion kestra storage\n\n\n# state\n\n * type: string\n\n> uri of the state file\n\n\n# streams\n\n * type: object\n * subtype: string\n\n> map of stream captured\n\nkey is stream name, value is uri of the stream file on ion kestra storage\n\n\n# definitions\n\n\n# dockeroptions\n\n# dockerconfig\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> docker config file\n\nfull file that can be used to configure private registries, ...\n\n# dockerhost\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n * default: unix:///var/run/docker.sock\n\n> docker api uri\n\n# entrypoint\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> docker entrypoint to use\n\n# extrahosts\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> docker extra host to use\n\n# image\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> docker image to use\n\n# user\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> docker user to use\n\n\n# streamsconfiguration\n\n# propertiespattern\n\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n\n# replicationkeys\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# replicationmethod\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * possible values:\n   \n   * full_table\n   * incremental\n   * log_based\n\n# selected\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: true\n\n# stream\n\n * type: string\n * dynamic: ❓\n * required: ❌',charsets:{}},{title:"PipelinewiseMongoDb",frontmatter:{title:"PipelinewiseMongoDb",editLink:!1,description:"A Singer tap to fetch data from a MongoDb database.",icon:"PHN2ZyBoZWlnaHQ9IjI1MDAiIHZpZXdCb3g9IjguNzM4IC01LjAzNjIyODM0IDE3LjQ1OTkyNDIyIDM5LjQwNjE5NDg0IiB3aWR0aD0iMjUwMCIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj48cGF0aCBkPSJtMTUuOS4wODcuODU0IDEuNjA0Yy4xOTIuMjk2LjQuNTU4LjY0NS44MDJhMjIuNDA2IDIyLjQwNiAwIDAgMSAyLjAwNCAyLjI2NmMxLjQ0NyAxLjkgMi40MjMgNC4wMSAzLjEyIDYuMjkyLjQxOCAxLjM5NC42NDUgMi44MjQuNjYyIDQuMjcuMDcgNC4zMjMtMS40MTIgOC4wMzUtNC40IDExLjEyYTEyLjcgMTIuNyAwIDAgMSAtMS41NyAxLjM0MmMtLjI5NiAwLS40MzYtLjIyNy0uNTU4LS40MzZhMy41ODkgMy41ODkgMCAwIDEgLS40MzYtMS4yNTVjLS4xMDUtLjUyMy0uMTc0LTEuMDQ2LS4xNC0xLjU4NnYtLjI0NGMtLjAyNC0uMDUyLS4yODUtMjQuMDUyLS4xODEtMjQuMTc1eiIgZmlsbD0iIzU5OTYzNiIvPjxwYXRoIGQ9Im0xNS45LjAzNGMtLjAzNS0uMDctLjA3LS4wMTctLjEwNS4wMTcuMDE3LjM1LS4xMDUuNjYyLS4yOTYuOTYtLjIxLjI5Ni0uNDg4LjUyMy0uNzY3Ljc2Ny0xLjU1IDEuMzQyLTIuNzcgMi45NjMtMy43NDcgNC43NzYtMS4zIDIuNDQtMS45NyA1LjA1NS0yLjE2IDcuODA4LS4wODcuOTkzLjMxNCA0LjQ5Ny42MjcgNS41MDguODU0IDIuNjg0IDIuMzg4IDQuOTMzIDQuMzc1IDYuODg1LjQ4OC40NyAxLjAxLjkwNiAxLjU1IDEuMzI1LjE1NyAwIC4xNzQtLjE0LjIxLS4yNDRhNC43OCA0Ljc4IDAgMCAwIC4xNTctLjY4bC4zNS0yLjYxNHoiIGZpbGw9IiM2Y2FjNDgiLz48cGF0aCBkPSJtMTYuNzU0IDI4Ljg0NWMuMDM1LS40LjIyNy0uNzMyLjQzNi0xLjA2My0uMjEtLjA4Ny0uMzY2LS4yNi0uNDg4LS40NTNhMy4yMzUgMy4yMzUgMCAwIDEgLS4yNi0uNTc1Yy0uMjQ0LS43MzItLjI5Ni0xLjUtLjM2Ni0yLjI0OHYtLjQ1M2MtLjA4Ny4wNy0uMTA1LjY2Mi0uMTA1Ljc1YTE3LjM3IDE3LjM3IDAgMCAxIC0uMzE0IDIuMzUzYy0uMDUyLjMxNC0uMDg3LjYyNy0uMjguOTA2IDAgLjAzNSAwIC4wNy4wMTcuMTIyLjMxNC45MjQuNCAxLjg2NS40NTMgMi44MjR2LjM1YzAgLjQxOC0uMDE3LjMzLjMzLjQ3LjE0LjA1Mi4yOTYuMDcuNDM2LjE3NC4xMDUgMCAuMTIyLS4wODcuMTIyLS4xNTdsLS4wNTItLjU3NXYtMS42MDRjLS4wMTctLjI4LjAzNS0uNTU4LjA3LS44MnoiIGZpbGw9IiNjMmJmYmYiLz48L3N2Zz4=",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"PipelinewiseMongoDb"},{property:"og:description",content:"A Singer tap to fetch data from a MongoDb database. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.PipelinewiseMongoDb.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"PipelinewiseMongoDb"},{name:"twitter:description",content:"A Singer tap to fetch data from a MongoDb database. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.PipelinewiseMongoDb.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.PipelinewiseMongoDb.html",relativePath:"plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.PipelinewiseMongoDb.md",key:"v-0ae15a7a",path:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.PipelinewiseMongoDb.html",headers:[{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:176},{level:3,title:"args",slug:"args",normalizedTitle:"args",charIndex:191},{level:3,title:"authDatabase",slug:"authdatabase",normalizedTitle:"authdatabase",charIndex:334},{level:3,title:"awaitTimeMs",slug:"awaittimems",normalizedTitle:"awaittimems",charIndex:440},{level:3,title:"database",slug:"database",normalizedTitle:"database",charIndex:124},{level:3,title:"dockerOptions",slug:"dockeroptions",normalizedTitle:"dockeroptions",charIndex:714},{level:3,title:"env",slug:"env",normalizedTitle:"env",charIndex:828},{level:3,title:"exitOnFailed",slug:"exitonfailed",normalizedTitle:"exitonfailed",charIndex:968},{level:3,title:"files",slug:"files",normalizedTitle:"files",charIndex:1310},{level:3,title:"host",slug:"host",normalizedTitle:"host",charIndex:1498},{level:3,title:"includeSchemaInStream",slug:"includeschemainstream",normalizedTitle:"includeschemainstream",charIndex:1597},{level:3,title:"inputFiles",slug:"inputfiles",normalizedTitle:"inputfiles",charIndex:1796},{level:3,title:"interpreter",slug:"interpreter",normalizedTitle:"interpreter",charIndex:2191},{level:3,title:"interpreterArgs",slug:"interpreterargs",normalizedTitle:"interpreterargs",charIndex:2314},{level:3,title:"outputFiles",slug:"outputfiles",normalizedTitle:"outputfiles",charIndex:1465},{level:3,title:"outputsFiles",slug:"outputsfiles",normalizedTitle:"outputsfiles",charIndex:2872},{level:3,title:"password",slug:"password",normalizedTitle:"password",charIndex:3011},{level:3,title:"port",slug:"port",normalizedTitle:"port",charIndex:3103},{level:3,title:"pythonPath",slug:"pythonpath",normalizedTitle:"pythonpath",charIndex:3181},{level:3,title:"replicaSet",slug:"replicaset",normalizedTitle:"replicaset",charIndex:3353},{level:3,title:"requirements",slug:"requirements",normalizedTitle:"requirements",charIndex:3443},{level:3,title:"runner",slug:"runner",normalizedTitle:"runner",charIndex:810},{level:3,title:"ssl",slug:"ssl",normalizedTitle:"ssl",charIndex:3847},{level:3,title:"sslVerify",slug:"sslverify",normalizedTitle:"sslverify",charIndex:3942},{level:3,title:"streamsConfigurations",slug:"streamsconfigurations",normalizedTitle:"streamsconfigurations",charIndex:4048},{level:3,title:"updateBufferSize",slug:"updatebuffersize",normalizedTitle:"updatebuffersize",charIndex:4206},{level:3,title:"username",slug:"username",normalizedTitle:"username",charIndex:4431},{level:3,title:"warningOnStdErr",slug:"warningonstderr",normalizedTitle:"warningonstderr",charIndex:4530},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:4658},{level:3,title:"count",slug:"count",normalizedTitle:"count",charIndex:4670},{level:3,title:"schemas",slug:"schemas",normalizedTitle:"schemas",charIndex:4719},{level:3,title:"state",slug:"state",normalizedTitle:"state",charIndex:1138},{level:3,title:"streams",slug:"streams",normalizedTitle:"streams",charIndex:4048},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:5070},{level:3,title:"DockerOptions",slug:"dockeroptions-2",normalizedTitle:"dockeroptions",charIndex:738},{level:3,title:"StreamsConfiguration",slug:"streamsconfiguration",normalizedTitle:"streamsconfiguration",charIndex:4098}],headersStr:"Properties args authDatabase awaitTimeMs database dockerOptions env exitOnFailed files host includeSchemaInStream inputFiles interpreter interpreterArgs outputFiles outputsFiles password port pythonPath replicaSet requirements runner ssl sslVerify streamsConfigurations updateBufferSize username warningOnStdErr Outputs count schemas state streams Definitions DockerOptions StreamsConfiguration",content:'PipelinewiseMongoDb\n\ntype: "io.kestra.plugin.singer.taps.PipelinewiseMongoDb"\n\n\n> A Singer tap to fetch data from a MongoDb database.\n\nFull documentation can be found here\n\n\n# Properties\n\n\n# args\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Python command args\n\nArguments list to pass to main python script\n\n\n# authDatabase\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The database name to authenticate on.\n\n\n# awaitTimeMs\n\n * Type: integer\n * Dynamic: ❌\n * Required: ❌\n * Default: 1000\n\n> The maximum amount of time in milliseconds waits for new data changes before exiting..\n\nFor LOG_BASED only.\n\n\n# database\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The database name.\n\n\n# dockerOptions\n\n * Type: DockerOptions\n * Dynamic: ❓\n * Required: ❌\n\n> Docker options when using runner DOCKER\n\n\n# env\n\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Additional environnements variable to add for current process.\n\n\n# exitOnFailed\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Exit if any non true return value\n\nThis tells bash that it should exit the script if any statement returns a non-true return value.\nThe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n\n# files\n\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The list of files that will be uploaded to internal storage,\n\nuse outputFiles property instead\n\n\n# host\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> The database hostname\n\n\n# includeSchemaInStream\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n * Default: false\n\n> Forces the stream names to take the form <database_name>_<collection_name> instead of <collection_name>.\n\n\n# inputFiles\n\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Input files are extra files supplied by user that make it simpler organize code.\n\nDescribe a files map that will be written and usable in execution context. In python execution context is in a temp folder, for bash scripts, you can reach files using a workingDir variable like \'source {{workingDir}}/myfile.sh\'\n\n\n# interpreter\n\n * Type: string\n * Dynamic: ❌\n * Required: ✔️\n * Default: /bin/sh\n * Min length: 1\n\n> Interpreter to used\n\n\n# interpreterArgs\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n * Default: [-c]\n\n> Interpreter args used\n\n\n# outputFiles\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Output file list that will be uploaded to internal storage\n\nList of key that will generate temporary files.\nOn the command, just can use with special variable named outputFiles.key.\nIf you add a files with ["first"], you can use the special vars echo 1 >> {[ outputFiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n\n# outputsFiles\n\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Deprecated Output file\n\nuse outputFiles\n\n\n# password\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The database user\'s password\n\n\n# port\n\n * Type: integer\n * Dynamic: ❌\n * Required: ✔️\n\n> The database port\n\n\n# pythonPath\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Default: python\n * Min length: 1\n\n> The python interpreter to use\n\nSet the python interpreter path to use\n\n\n# replicaSet\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The name of replica set.\n\n\n# requirements\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Requirements are python dependencies to add to the python execution process\n\nPython dependencies list to setup in the virtualenv, in the same format than requirements.txt\n\n\n# runner\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ✔️\n\n * Default: PROCESS\n\n * Possible Values:\n   \n   * PROCESS\n   * DOCKER\n\n> Runner to use\n\n\n# ssl\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n * Default: false\n\n> If ssl is enabled.\n\n\n# sslVerify\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n * Default: true\n\n> Default SSL verify mode.\n\n\n# streamsConfigurations\n\n * Type: array\n * SubType: StreamsConfiguration\n * Dynamic: ❌\n * Required: ✔️\n * Min items: 1\n\n> The list of stream configurations\n\n\n# updateBufferSize\n\n * Type: integer\n * Dynamic: ❌\n * Required: ❌\n * Default: 1\n\n> The size of the buffer that holds detected update operations in memory.\n\nFor LOG_BASED only, the buffer is flushed once the size is reached\n\n\n# username\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> The database user\n\n\n# warningOnStdErr\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Use WARNING state if any stdErr is sent\n\n\n# Outputs\n\n\n# count\n\n * Type: object\n\n> Counter of streams\n\n\n# schemas\n\n * Type: object\n * SubType: string\n\n> Map of schemas captured\n\nKey is stream name, value is uri of the schema file on ion kestra storage\n\n\n# state\n\n * Type: string\n\n> Uri of the state file\n\n\n# streams\n\n * Type: object\n * SubType: string\n\n> Map of stream captured\n\nKey is stream name, value is uri of the stream file on ion kestra storage\n\n\n# Definitions\n\n\n# DockerOptions\n\n# dockerConfig\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker config file\n\nFull file that can be used to configure private registries, ...\n\n# dockerHost\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: unix:///var/run/docker.sock\n\n> Docker api uri\n\n# entryPoint\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker entrypoint to use\n\n# extraHosts\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker extra host to use\n\n# image\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> Docker image to use\n\n# user\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker user to use\n\n\n# StreamsConfiguration\n\n# propertiesPattern\n\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n\n# replicationKeys\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# replicationMethod\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Possible Values:\n   \n   * FULL_TABLE\n   * INCREMENTAL\n   * LOG_BASED\n\n# selected\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: true\n\n# stream\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌',normalizedContent:'pipelinewisemongodb\n\ntype: "io.kestra.plugin.singer.taps.pipelinewisemongodb"\n\n\n> a singer tap to fetch data from a mongodb database.\n\nfull documentation can be found here\n\n\n# properties\n\n\n# args\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> python command args\n\narguments list to pass to main python script\n\n\n# authdatabase\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the database name to authenticate on.\n\n\n# awaittimems\n\n * type: integer\n * dynamic: ❌\n * required: ❌\n * default: 1000\n\n> the maximum amount of time in milliseconds waits for new data changes before exiting..\n\nfor log_based only.\n\n\n# database\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the database name.\n\n\n# dockeroptions\n\n * type: dockeroptions\n * dynamic: ❓\n * required: ❌\n\n> docker options when using runner docker\n\n\n# env\n\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> additional environnements variable to add for current process.\n\n\n# exitonfailed\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> exit if any non true return value\n\nthis tells bash that it should exit the script if any statement returns a non-true return value.\nthe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n\n# files\n\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> the list of files that will be uploaded to internal storage,\n\nuse outputfiles property instead\n\n\n# host\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> the database hostname\n\n\n# includeschemainstream\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n * default: false\n\n> forces the stream names to take the form <database_name>_<collection_name> instead of <collection_name>.\n\n\n# inputfiles\n\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> input files are extra files supplied by user that make it simpler organize code.\n\ndescribe a files map that will be written and usable in execution context. in python execution context is in a temp folder, for bash scripts, you can reach files using a workingdir variable like \'source {{workingdir}}/myfile.sh\'\n\n\n# interpreter\n\n * type: string\n * dynamic: ❌\n * required: ✔️\n * default: /bin/sh\n * min length: 1\n\n> interpreter to used\n\n\n# interpreterargs\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n * default: [-c]\n\n> interpreter args used\n\n\n# outputfiles\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> output file list that will be uploaded to internal storage\n\nlist of key that will generate temporary files.\non the command, just can use with special variable named outputfiles.key.\nif you add a files with ["first"], you can use the special vars echo 1 >> {[ outputfiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n\n# outputsfiles\n\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> deprecated output file\n\nuse outputfiles\n\n\n# password\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the database user\'s password\n\n\n# port\n\n * type: integer\n * dynamic: ❌\n * required: ✔️\n\n> the database port\n\n\n# pythonpath\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * default: python\n * min length: 1\n\n> the python interpreter to use\n\nset the python interpreter path to use\n\n\n# replicaset\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the name of replica set.\n\n\n# requirements\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> requirements are python dependencies to add to the python execution process\n\npython dependencies list to setup in the virtualenv, in the same format than requirements.txt\n\n\n# runner\n\n * type: string\n\n * dynamic: ❌\n\n * required: ✔️\n\n * default: process\n\n * possible values:\n   \n   * process\n   * docker\n\n> runner to use\n\n\n# ssl\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n * default: false\n\n> if ssl is enabled.\n\n\n# sslverify\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n * default: true\n\n> default ssl verify mode.\n\n\n# streamsconfigurations\n\n * type: array\n * subtype: streamsconfiguration\n * dynamic: ❌\n * required: ✔️\n * min items: 1\n\n> the list of stream configurations\n\n\n# updatebuffersize\n\n * type: integer\n * dynamic: ❌\n * required: ❌\n * default: 1\n\n> the size of the buffer that holds detected update operations in memory.\n\nfor log_based only, the buffer is flushed once the size is reached\n\n\n# username\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> the database user\n\n\n# warningonstderr\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> use warning state if any stderr is sent\n\n\n# outputs\n\n\n# count\n\n * type: object\n\n> counter of streams\n\n\n# schemas\n\n * type: object\n * subtype: string\n\n> map of schemas captured\n\nkey is stream name, value is uri of the schema file on ion kestra storage\n\n\n# state\n\n * type: string\n\n> uri of the state file\n\n\n# streams\n\n * type: object\n * subtype: string\n\n> map of stream captured\n\nkey is stream name, value is uri of the stream file on ion kestra storage\n\n\n# definitions\n\n\n# dockeroptions\n\n# dockerconfig\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> docker config file\n\nfull file that can be used to configure private registries, ...\n\n# dockerhost\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n * default: unix:///var/run/docker.sock\n\n> docker api uri\n\n# entrypoint\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> docker entrypoint to use\n\n# extrahosts\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> docker extra host to use\n\n# image\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> docker image to use\n\n# user\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> docker user to use\n\n\n# streamsconfiguration\n\n# propertiespattern\n\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n\n# replicationkeys\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# replicationmethod\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * possible values:\n   \n   * full_table\n   * incremental\n   * log_based\n\n# selected\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: true\n\n# stream\n\n * type: string\n * dynamic: ❓\n * required: ❌',charsets:{}},{title:"PipelinewiseMysql",frontmatter:{title:"PipelinewiseMysql",editLink:!1,description:"A Singer tap to fetch data from a MySQL database.",icon:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB2aWV3Qm94PSIwIDAgODEgODAiIGZpbGw9IiNmZmYiIGZpbGwtcnVsZT0iZXZlbm9kZCIgc3Ryb2tlPSIjMDAwIiBzdHJva2UtbGluZWNhcD0icm91bmQiIHN0cm9rZS1saW5lam9pbj0icm91bmQiPjx1c2UgeGxpbms6aHJlZj0iI0EiIHg9Ii41IiB5PSIuNSIvPjxzeW1ib2wgaWQ9IkEiIG92ZXJmbG93PSJ2aXNpYmxlIj48cGF0aCBkPSJNNzMuNjg5IDYwLjczN2MtNC4zNTMtLjEwOS03LjcyNi4zMjctMTAuNTU2IDEuNTI0LS44MTYuMzI2LTIuMTIyLjMyNy0yLjIzMSAxLjM2LjQzNi40MzYuNDkgMS4xNDMuODcxIDEuNzQxLjY1MyAxLjA4OCAxLjc5NSAyLjU1NyAyLjgyOSAzLjMxOSAxLjE0Mi44NyAyLjI4NSAxLjc0MSAzLjQ4MiAyLjUwMyAyLjEyMiAxLjMwNiA0LjUxNiAyLjA2OCA2LjU4NCAzLjM3MyAxLjE5Ny43NjEgMi4zOTQgMS43NDEgMy41OTEgMi41NTcuNTk5LjQzNS45NzkgMS4xNDIgMS43NDEgMS40MTV2LS4xNjNjLS4zODEtLjQ5LS40OS0xLjE5Ny0uODctMS43NDEtLjU0NC0uNTQ0LTEuMDg4LTEuMDM0LTEuNjMyLTEuNTc4LTEuNTc4LTIuMTIyLTMuNTM3LTMuOTcyLTUuNjU5LTUuNDk1LTEuNzQxLTEuMTk3LTUuNTUtMi44MjktNi4yNTctNC44NDNsLS4xMDktLjEwOWMxLjE5Ny0uMTA5IDIuNjEyLS41NDQgMy43NTQtLjg3MSAxLjg1LS40OSAzLjUzNy0uMzgxIDUuNDQxLS44Ny44Ny0uMjE4IDEuNzQxLS40OSAyLjYxMi0uNzYydi0uNDg5Yy0uOTc5LS45OC0xLjY4Ny0yLjI4NS0yLjcyLTMuMjEtMi43NzUtMi4zOTUtNS44MjItNC43MzQtOC45NzgtNi42OTItMS42ODctMS4wODgtMy44NjMtMS43OTYtNS42NTktMi43MjEtLjY1My0uMzI3LTEuNzQxLS40OS0yLjEyMi0xLjAzNC0uOTgtMS4xOTctMS41MjQtMi43NzUtMi4yMzEtNC4xOS0xLjU3Ny0yLjk5My0zLjEwMS02LjMxMS00LjQ2Mi05LjQ2Ny0uOTc5LTIuMTIyLTEuNTc4LTQuMjQ0LTIuNzc1LTYuMjAzLTUuNjA0LTkuMjUtMTEuNjk4LTE0Ljg1NC0yMS4wNTctMjAuMzUtMi4wMTMtMS4xNDItNC40MDctMS42MzItNi45NjQtMi4yMzFsLTQuMDgxLS4yMThjLS44Ny0uMzgxLTEuNzQxLTEuNDE1LTIuNTAzLTEuOTA0QzEwLjYyNyAxLjQzIDIuNjI5LTIuODEzLjM0MyAyLjc5MS0xLjEyNiA2LjMyNyAyLjUyIDkuODA5IDMuNzcxIDExLjYwNWMuOTI1IDEuMjUxIDIuMTIyIDIuNjY2IDIuNzc1IDQuMDgxLjM4MS45MjQuNDg5IDEuOTA0Ljg3IDIuODg0Ljg3MSAyLjM5NCAxLjY4NyA1LjA2IDIuODI5IDcuMjkxLjU5OSAxLjE0MiAxLjI1MSAyLjM0IDIuMDEzIDMuMzczLjQzNS41OTggMS4xOTcuODcxIDEuMzYgMS44NS0uNzYyIDEuMDg4LS44MTYgMi43MjEtMS4yNTIgNC4wODEtMS45NTkgNi4xNDgtMS4xOTcgMTMuNzY2IDEuNTc4IDE4LjI4Mi44NyAxLjM2IDIuOTM4IDQuMzUzIDUuNzEzIDMuMjEgMi40NDgtLjk3OSAxLjkwNC00LjA4MSAyLjYxMi02LjgwMS4xNjQtLjY1My4wNTUtMS4wODguMzgxLTEuNTIzdi4xMDlsMi4yMzEgNC41MTZjMS42ODcgMi42NjYgNC42MjUgNS40NDEgNy4wNzMgNy4yOTEgMS4zMDYuOTc5IDIuMzQgMi42NjYgMy45NzIgMy4yNjV2LS4xNjRoLS4xMDljLS4zMjctLjQ5LS44MTYtLjcwNy0xLjI1MS0xLjA4OC0uOTc5LS45NzktMi4wNjgtMi4xNzYtMi44MjktMy4yNjUtMi4yODUtMy4wNDctNC4yOTktNi40Mi02LjA5NC05LjkwMy0uODctMS42ODctMS42MzItMy41MzctMi4zNC01LjIyMy0uMzI3LS42NTMtLjMyNy0xLjYzMi0uODcxLTEuOTU5LS44MTYgMS4xOTctMi4wMTMgMi4yMzEtMi42MTIgMy43LTEuMDMzIDIuMzQtMS4xNDIgNS4yMjMtMS41MjMgOC4yMTYtLjIxNy4wNTUtLjEwOSAwLS4yMTguMTA5LTEuNzQxLS40MzYtMi4zNC0yLjIzMS0yLjk5My0zLjc1NC0xLjYzMi0zLjg2My0xLjkwNC0xMC4wNjYtLjQ4OS0xNC41MjcuMzgxLTEuMTQzIDIuMDEzLTQuNzM0IDEuMzYtNS44MjItLjMyNi0xLjAzNC0xLjQxNS0xLjYzMi0yLjAxMy0yLjQ0OC0uNzA3LTEuMDM0LTEuNDY5LTIuMzQtMS45NTktMy40ODItMS4zMDYtMy4wNDctMS45NTktNi40Mi0zLjM3My05LjQ2OC0uNjUzLTEuNDE1LTEuNzk1LTIuODg0LTIuNzIxLTQuMTg5LTEuMDMxLTEuNDcxLTIuMTc0LTIuNTA1LTIuOTktNC4yNDYtLjI3Mi0uNTk4LS42NTMtMS41NzgtLjIxOC0yLjIzMS4xMDktLjQzNS4zMjYtLjU5OC43NjItLjcwNy43MDctLjU5OSAyLjcyMS4xNjMgMy40MjguNDg5IDIuMDEzLjgxNiAzLjcgMS41NzggNS4zODcgMi43MjEuNzYyLjU0NCAxLjU3OCAxLjU3OCAyLjU1NyAxLjg1aDEuMTQzYzEuNzQxLjM4MSAzLjcuMTA5IDUuMzMyLjU5OCAyLjg4NC45MjUgNS40OTUgMi4yODUgNy44MzUgMy43NTQgNy4xMjggNC41MTYgMTMuMDA0IDEwLjkzNyAxNi45NzYgMTguNjA4LjY1MyAxLjI1MS45MjUgMi4zOTQgMS41MjMgMy43IDEuMTQzIDIuNjY2IDIuNTU3IDUuMzg3IDMuNyA3Ljk5OCAxLjE0MiAyLjU1NyAyLjIzMSA1LjE2OSAzLjg2MyA3LjI5MS44MTYgMS4xNDIgNC4wODEgMS43NDEgNS41NSAyLjM0IDEuMDg4LjQ4OSAyLjc3NS45MjUgMy43NTQgMS41MjMgMS44NSAxLjE0MiAzLjcgMi40NDggNS40NDEgMy43Ljg3MS42NTMgMy41OTEgMi4wMTMgMy43NTQgMy4xMDFoMHpNMTguMTkgMTMuNDU1YTguNjEgOC42MSAwIDAgMC0yLjIzMS4yNzJ2LjEwOWguMTA5Yy40MzYuODcgMS4xOTcgMS40NjkgMS43NDEgMi4yMzFsMS4yNTIgMi42MTIuMTA5LS4xMDljLjc2Mi0uNTQ0IDEuMTQzLTEuNDE1IDEuMTQzLTIuNzIxLS4zMjctLjM4MS0uMzgxLS43NjItLjY1My0xLjE0My0uMzI2LS41NDQtMS4wMzQtLjgxNi0xLjQ2OS0xLjI1MmgweiIgc3Ryb2tlPSJub25lIiBmaWxsPSIjMDA1NDZiIiBmaWxsLXJ1bGU9Im5vbnplcm8iLz48L3N5bWJvbD48L3N2Zz4=",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"PipelinewiseMysql"},{property:"og:description",content:"A Singer tap to fetch data from a MySQL database. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.PipelinewiseMysql.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"PipelinewiseMysql"},{name:"twitter:description",content:"A Singer tap to fetch data from a MySQL database. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.PipelinewiseMysql.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.PipelinewiseMysql.html",relativePath:"plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.PipelinewiseMysql.md",key:"v-91e0edfa",path:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.PipelinewiseMysql.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:170},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:513},{level:3,title:"args",slug:"args",normalizedTitle:"args",charIndex:528},{level:3,title:"dockerOptions",slug:"dockeroptions",normalizedTitle:"dockeroptions",charIndex:671},{level:3,title:"env",slug:"env",normalizedTitle:"env",charIndex:785},{level:3,title:"exitOnFailed",slug:"exitonfailed",normalizedTitle:"exitonfailed",charIndex:925},{level:3,title:"exportBatchRows",slug:"exportbatchrows",normalizedTitle:"exportbatchrows",charIndex:1267},{level:3,title:"files",slug:"files",normalizedTitle:"files",charIndex:1405},{level:3,title:"filterDbs",slug:"filterdbs",normalizedTitle:"filterdbs",charIndex:1593},{level:3,title:"host",slug:"host",normalizedTitle:"host",charIndex:260},{level:3,title:"inputFiles",slug:"inputfiles",normalizedTitle:"inputfiles",charIndex:1884},{level:3,title:"interpreter",slug:"interpreter",normalizedTitle:"interpreter",charIndex:2279},{level:3,title:"interpreterArgs",slug:"interpreterargs",normalizedTitle:"interpreterargs",charIndex:2402},{level:3,title:"outputFiles",slug:"outputfiles",normalizedTitle:"outputfiles",charIndex:1560},{level:3,title:"outputsFiles",slug:"outputsfiles",normalizedTitle:"outputsfiles",charIndex:2960},{level:3,title:"password",slug:"password",normalizedTitle:"password",charIndex:291},{level:3,title:"port",slug:"port",normalizedTitle:"port",charIndex:314},{level:3,title:"pythonPath",slug:"pythonpath",normalizedTitle:"pythonpath",charIndex:3269},{level:3,title:"requirements",slug:"requirements",normalizedTitle:"requirements",charIndex:3441},{level:3,title:"runner",slug:"runner",normalizedTitle:"runner",charIndex:767},{level:3,title:"sessionSqls",slug:"sessionsqls",normalizedTitle:"sessionsqls",charIndex:3845},{level:3,title:"ssl",slug:"ssl",normalizedTitle:"ssl",charIndex:4220},{level:3,title:"streamsConfigurations",slug:"streamsconfigurations",normalizedTitle:"streamsconfigurations",charIndex:326},{level:3,title:"username",slug:"username",normalizedTitle:"username",charIndex:276},{level:3,title:"warningOnStdErr",slug:"warningonstderr",normalizedTitle:"warningonstderr",charIndex:4571},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:4699},{level:3,title:"count",slug:"count",normalizedTitle:"count",charIndex:4711},{level:3,title:"schemas",slug:"schemas",normalizedTitle:"schemas",charIndex:1683},{level:3,title:"state",slug:"state",normalizedTitle:"state",charIndex:1095},{level:3,title:"streams",slug:"streams",normalizedTitle:"streams",charIndex:326},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:5111},{level:3,title:"DockerOptions",slug:"dockeroptions-2",normalizedTitle:"dockeroptions",charIndex:695},{level:3,title:"StreamsConfiguration",slug:"streamsconfiguration",normalizedTitle:"streamsconfiguration",charIndex:4364}],headersStr:"Examples Properties args dockerOptions env exitOnFailed exportBatchRows files filterDbs host inputFiles interpreter interpreterArgs outputFiles outputsFiles password port pythonPath requirements runner sessionSqls ssl streamsConfigurations username warningOnStdErr Outputs count schemas state streams Definitions DockerOptions StreamsConfiguration",content:'PipelinewiseMysql\n\ntype: "io.kestra.plugin.singer.taps.PipelinewiseMysql"\n\n\n> A Singer tap to fetch data from a MySQL database.\n\nFull documentation can be found here\n\n\n# Examples\n\nid: "pipelinewise_mysql"\ntype: "io.kestra.plugin.singer.taps.PipelinewiseMysql"\nhost: 127.0.0.1\nusername: root\npassword: mysql_passwd\nport: 63306\nstreamsConfigurations:\n - stream: Category\n   replicationMethod: INCREMENTAL\n   replicationKeys: categoryId\n   selected: true\n- propertiesPattern:\n   - description\n  selected: false\n\n\n\n# Properties\n\n\n# args\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Python command args\n\nArguments list to pass to main python script\n\n\n# dockerOptions\n\n * Type: DockerOptions\n * Dynamic: ❓\n * Required: ❌\n\n> Docker options when using runner DOCKER\n\n\n# env\n\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Additional environnements variable to add for current process.\n\n\n# exitOnFailed\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Exit if any non true return value\n\nThis tells bash that it should exit the script if any statement returns a non-true return value.\nThe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n\n# exportBatchRows\n\n * Type: integer\n * Dynamic: ❌\n * Required: ❌\n * Default: 50000\n\n> Number of rows to export from MySQL in one batch.\n\n\n# files\n\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The list of files that will be uploaded to internal storage,\n\nuse outputFiles property instead\n\n\n# filterDbs\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The list of schemas to extract tables only from particular schemas and to improve data extraction performance\n\n\n# host\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> The database hostname\n\n\n# inputFiles\n\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Input files are extra files supplied by user that make it simpler organize code.\n\nDescribe a files map that will be written and usable in execution context. In python execution context is in a temp folder, for bash scripts, you can reach files using a workingDir variable like \'source {{workingDir}}/myfile.sh\'\n\n\n# interpreter\n\n * Type: string\n * Dynamic: ❌\n * Required: ✔️\n * Default: /bin/sh\n * Min length: 1\n\n> Interpreter to used\n\n\n# interpreterArgs\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n * Default: [-c]\n\n> Interpreter args used\n\n\n# outputFiles\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Output file list that will be uploaded to internal storage\n\nList of key that will generate temporary files.\nOn the command, just can use with special variable named outputFiles.key.\nIf you add a files with ["first"], you can use the special vars echo 1 >> {[ outputFiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n\n# outputsFiles\n\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Deprecated Output file\n\nuse outputFiles\n\n\n# password\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The database user\'s password\n\n\n# port\n\n * Type: integer\n * Dynamic: ❌\n * Required: ✔️\n\n> The database port\n\n\n# pythonPath\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Default: python\n * Min length: 1\n\n> The python interpreter to use\n\nSet the python interpreter path to use\n\n\n# requirements\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Requirements are python dependencies to add to the python execution process\n\nPython dependencies list to setup in the virtualenv, in the same format than requirements.txt\n\n\n# runner\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ✔️\n\n * Default: PROCESS\n\n * Possible Values:\n   \n   * PROCESS\n   * DOCKER\n\n> Runner to use\n\n\n# sessionSqls\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: [SET @@session.time_zone="+0:00", SET @@session.wait_timeout=28800, SET @@session.net_read_timeout=3600, SET @@session.innodb_lock_wait_timeout=3600]\n\n> List of SQL commands to run when a connection made. This allows to set session variables dynamically, like timeouts or charsets.\n\n\n# ssl\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n * Default: false\n\n> If ssl is enabled\n\n\n# streamsConfigurations\n\n * Type: array\n * SubType: StreamsConfiguration\n * Dynamic: ❌\n * Required: ✔️\n * Min items: 1\n\n> The list of stream configurations\n\n\n# username\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> The database user\n\n\n# warningOnStdErr\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Use WARNING state if any stdErr is sent\n\n\n# Outputs\n\n\n# count\n\n * Type: object\n\n> Counter of streams\n\n\n# schemas\n\n * Type: object\n * SubType: string\n\n> Map of schemas captured\n\nKey is stream name, value is uri of the schema file on ion kestra storage\n\n\n# state\n\n * Type: string\n\n> Uri of the state file\n\n\n# streams\n\n * Type: object\n * SubType: string\n\n> Map of stream captured\n\nKey is stream name, value is uri of the stream file on ion kestra storage\n\n\n# Definitions\n\n\n# DockerOptions\n\n# dockerConfig\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker config file\n\nFull file that can be used to configure private registries, ...\n\n# dockerHost\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: unix:///var/run/docker.sock\n\n> Docker api uri\n\n# entryPoint\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker entrypoint to use\n\n# extraHosts\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker extra host to use\n\n# image\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> Docker image to use\n\n# user\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker user to use\n\n\n# StreamsConfiguration\n\n# propertiesPattern\n\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n\n# replicationKeys\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# replicationMethod\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Possible Values:\n   \n   * FULL_TABLE\n   * INCREMENTAL\n   * LOG_BASED\n\n# selected\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: true\n\n# stream\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌',normalizedContent:'pipelinewisemysql\n\ntype: "io.kestra.plugin.singer.taps.pipelinewisemysql"\n\n\n> a singer tap to fetch data from a mysql database.\n\nfull documentation can be found here\n\n\n# examples\n\nid: "pipelinewise_mysql"\ntype: "io.kestra.plugin.singer.taps.pipelinewisemysql"\nhost: 127.0.0.1\nusername: root\npassword: mysql_passwd\nport: 63306\nstreamsconfigurations:\n - stream: category\n   replicationmethod: incremental\n   replicationkeys: categoryid\n   selected: true\n- propertiespattern:\n   - description\n  selected: false\n\n\n\n# properties\n\n\n# args\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> python command args\n\narguments list to pass to main python script\n\n\n# dockeroptions\n\n * type: dockeroptions\n * dynamic: ❓\n * required: ❌\n\n> docker options when using runner docker\n\n\n# env\n\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> additional environnements variable to add for current process.\n\n\n# exitonfailed\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> exit if any non true return value\n\nthis tells bash that it should exit the script if any statement returns a non-true return value.\nthe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n\n# exportbatchrows\n\n * type: integer\n * dynamic: ❌\n * required: ❌\n * default: 50000\n\n> number of rows to export from mysql in one batch.\n\n\n# files\n\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> the list of files that will be uploaded to internal storage,\n\nuse outputfiles property instead\n\n\n# filterdbs\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> the list of schemas to extract tables only from particular schemas and to improve data extraction performance\n\n\n# host\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> the database hostname\n\n\n# inputfiles\n\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> input files are extra files supplied by user that make it simpler organize code.\n\ndescribe a files map that will be written and usable in execution context. in python execution context is in a temp folder, for bash scripts, you can reach files using a workingdir variable like \'source {{workingdir}}/myfile.sh\'\n\n\n# interpreter\n\n * type: string\n * dynamic: ❌\n * required: ✔️\n * default: /bin/sh\n * min length: 1\n\n> interpreter to used\n\n\n# interpreterargs\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n * default: [-c]\n\n> interpreter args used\n\n\n# outputfiles\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> output file list that will be uploaded to internal storage\n\nlist of key that will generate temporary files.\non the command, just can use with special variable named outputfiles.key.\nif you add a files with ["first"], you can use the special vars echo 1 >> {[ outputfiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n\n# outputsfiles\n\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> deprecated output file\n\nuse outputfiles\n\n\n# password\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the database user\'s password\n\n\n# port\n\n * type: integer\n * dynamic: ❌\n * required: ✔️\n\n> the database port\n\n\n# pythonpath\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * default: python\n * min length: 1\n\n> the python interpreter to use\n\nset the python interpreter path to use\n\n\n# requirements\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> requirements are python dependencies to add to the python execution process\n\npython dependencies list to setup in the virtualenv, in the same format than requirements.txt\n\n\n# runner\n\n * type: string\n\n * dynamic: ❌\n\n * required: ✔️\n\n * default: process\n\n * possible values:\n   \n   * process\n   * docker\n\n> runner to use\n\n\n# sessionsqls\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n * default: [set @@session.time_zone="+0:00", set @@session.wait_timeout=28800, set @@session.net_read_timeout=3600, set @@session.innodb_lock_wait_timeout=3600]\n\n> list of sql commands to run when a connection made. this allows to set session variables dynamically, like timeouts or charsets.\n\n\n# ssl\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n * default: false\n\n> if ssl is enabled\n\n\n# streamsconfigurations\n\n * type: array\n * subtype: streamsconfiguration\n * dynamic: ❌\n * required: ✔️\n * min items: 1\n\n> the list of stream configurations\n\n\n# username\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> the database user\n\n\n# warningonstderr\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> use warning state if any stderr is sent\n\n\n# outputs\n\n\n# count\n\n * type: object\n\n> counter of streams\n\n\n# schemas\n\n * type: object\n * subtype: string\n\n> map of schemas captured\n\nkey is stream name, value is uri of the schema file on ion kestra storage\n\n\n# state\n\n * type: string\n\n> uri of the state file\n\n\n# streams\n\n * type: object\n * subtype: string\n\n> map of stream captured\n\nkey is stream name, value is uri of the stream file on ion kestra storage\n\n\n# definitions\n\n\n# dockeroptions\n\n# dockerconfig\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> docker config file\n\nfull file that can be used to configure private registries, ...\n\n# dockerhost\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n * default: unix:///var/run/docker.sock\n\n> docker api uri\n\n# entrypoint\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> docker entrypoint to use\n\n# extrahosts\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> docker extra host to use\n\n# image\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> docker image to use\n\n# user\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> docker user to use\n\n\n# streamsconfiguration\n\n# propertiespattern\n\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n\n# replicationkeys\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# replicationmethod\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * possible values:\n   \n   * full_table\n   * incremental\n   * log_based\n\n# selected\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: true\n\n# stream\n\n * type: string\n * dynamic: ❓\n * required: ❌',charsets:{}},{title:"PipelinewisePostgres",frontmatter:{title:"PipelinewisePostgres",editLink:!1,description:"A Singer tap to fetch data from a Postgres database.",icon:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB2aWV3Qm94PSIwIDAgNzkgODEiIGZpbGw9IiNmZmYiIGZpbGwtcnVsZT0iZXZlbm9kZCIgc3Ryb2tlPSIjMDAwIiBzdHJva2UtbGluZWNhcD0icm91bmQiIHN0cm9rZS1saW5lam9pbj0icm91bmQiPjx1c2UgeGxpbms6aHJlZj0iI0EiIHg9Ii41IiB5PSIuNSIvPjxzeW1ib2wgaWQ9IkEiIG92ZXJmbG93PSJ2aXNpYmxlIj48ZyBzdHJva2U9Im5vbmUiIGZpbGwtcnVsZT0ibm9uemVybyI+PHBhdGggZD0iTTc3LjM5MSA0Ny45MjJjLS40NjYtMS40MTItMS42ODgtMi4zOTYtMy4yNjgtMi42MzItLjc0NS0uMTExLTEuNTk4LS4wNjQtMi42MDguMTQ0LTEuNzYuMzYzLTMuMDY1LjUwMS00LjAxOC41MjggMy41OTYtNi4wNzIgNi41MjEtMTIuOTk3IDguMjA0LTE5LjUxNSAyLjcyMi0xMC41NCAxLjI2OC0xNS4zNDEtLjQzMi0xNy41MTNDNzAuNzcgMy4xODUgNjQuMjA2LjA5NyA1Ni4yODcuMDAyYy00LjIyNC0uMDUyLTcuOTMzLjc4Mi05Ljg2NyAxLjM4Mi0xLjgwMS0uMzE4LTMuNzM4LS40OTUtNS43Ny0uNTI4LTMuODA5LS4wNjEtNy4xNzQuNzctMTAuMDUgMi40NzYtMS41OTItLjUzOC00LjE0Ny0xLjI5Ny03LjA5OC0xLjc4MkMxNi41NjEuNDExIDEwLjk2OCAxLjI5OSA2Ljg3NiA0LjE5IDEuOTIyIDcuNjg5LS4zNzUgMTMuNzcuMDUgMjIuMjYyYy4xMzUgMi42OTYgMS42NDMgMTAuOSA0LjAxOCAxOC42OCAxLjM2NSA0LjQ3MiAyLjgyIDguMTg1IDQuMzI2IDExLjAzOCAyLjEzNSA0LjA0NiA0LjQxOSA2LjQyOCA2Ljk4NCA3LjI4NCAxLjQzOC40NzkgNC4wNDkuODE0IDYuNzk3LTEuNDczLjM0OC40MjEuODEyLjg0MSAxLjQyOSAxLjIzLjc4My40OTQgMS43NC44OTcgMi42OTYgMS4xMzYgMy40NDYuODYyIDYuNjc0LjY0NiA5LjQyNy0uNTYxbC4wNDEgMS4zNjIuMDYgMS44OTljLjE2MyA0LjA2NC40NCA3LjIyMyAxLjI1OSA5LjQzNC4wNDUuMTIyLjEwNS4zMDcuMTY5LjUwMy40MDkgMS4yNTEgMS4wOTIgMy4zNDYgMi44MyA0Ljk4NyAxLjggMS42OTkgMy45NzggMi4yMiA1Ljk3MiAyLjIyIDEgMCAxLjk1NS0uMTMxIDIuNzkyLS4zMTEgMi45ODQtLjYzOSA2LjM3My0xLjYxNCA4LjgyNC01LjEwNCAyLjMxOC0zLjMgMy40NDQtOC4yNyAzLjY0OC0xNi4xMDFsLjEyMy0xLjA0OC41NDYuMDQ4LjE0MS4wMWMzLjAzOS4xMzggNi43NTUtLjUwNiA5LjAzNy0xLjU2NiAxLjgwMy0uODM3IDcuNTgyLTMuODg4IDYuMjIxLTguMDA3IiBmaWxsPSIjMDAwIi8+PHBhdGggZD0iTTcyLjE5NSA0OC43MjNjLTkuMDM2IDEuODY0LTkuNjU3LTEuMTk1LTkuNjU3LTEuMTk1IDkuNTQxLTE0LjE1NyAxMy41MjktMzIuMTI3IDEwLjA4Ny0zNi41MjVDNjMuMjM1LS45OTQgNDYuOTgxIDQuNjggNDYuNzEgNC44MjdsLS4wODcuMDE2Yy0xLjc4NS0uMzcxLTMuNzgzLS41OTEtNi4wMjktLjYyOC00LjA4OS0uMDY3LTcuMTkgMS4wNzItOS41NDQgMi44NTcgMCAwLTI4Ljk5NS0xMS45NDUtMjcuNjQ3IDE1LjAyMy4yODcgNS43MzcgOC4yMjMgNDMuNDEgMTcuNjg5IDMyLjAzMSAzLjQ2LTQuMTYxIDYuODAzLTcuNjc5IDYuODAzLTcuNjc5IDEuNjYgMS4xMDMgMy42NDggMS42NjYgNS43MzIgMS40NjNsLjE2Mi0uMTM3Yy0uMDUuNTE3LS4wMjcgMS4wMjIuMDY1IDEuNjItMi40MzkgMi43MjUtMS43MjIgMy4yMDMtNi41OTcgNC4yMDYtNC45MzMgMS4wMTctMi4wMzUgMi44MjYtLjE0MyAzLjI5OSAyLjI5NC41NzQgNy42IDEuMzg2IDExLjE4NS0zLjYzM2wtLjE0My41NzNjLjk1Ni43NjUgMS42MjYgNC45NzggMS41MTQgOC43OTdzLS4xODggNi40NDEuNTY1IDguNDg5IDEuNTAzIDYuNjU2IDcuOTEyIDUuMjgyYzUuMzU1LTEuMTQ4IDguMTMtNC4xMjEgOC41MTYtOS4wODEuMjc0LTMuNTI2Ljg5NC0zLjAwNS45MzMtNi4xNThsLjQ5Ny0xLjQ5M2MuNTczLTQuNzguMDkxLTYuMzIyIDMuMzktNS42MDVsLjgwMi4wN2MyLjQyOC4xMSA1LjYwNi0uMzkxIDcuNDcxLTEuMjU3IDQuMDE2LTEuODY0IDYuMzk4LTQuOTc2IDIuNDM4LTQuMTU4aDAiIGZpbGw9IiMzMzY3OTEiLz48cGF0aCBkPSJNMzIuNzQ3IDI0LjY2Yy0uODE0LS4xMTMtMS41NTItLjAwOC0xLjkyNS4yNzQtLjIxLjE1OS0uMjc1LjM0My0uMjkyLjQ3LS4wNDcuMzM2LjE4OC43MDcuMzMzLjg5OC40MDkuNTQyIDEuMDA2LjkxNSAxLjU5OC45OTdhMS44NiAxLjg2IDAgMCAwIC4yNTYuMDE4Yy45ODYgMCAxLjg4My0uNzY4IDEuOTYyLTEuMzM1LjA5OS0uNzEtLjkzMi0xLjE4My0xLjkzMS0xLjMyMm0yNi45NzUuMDIyaDBjLS4wNzgtLjU1Ni0xLjA2OC0uNzE1LTIuMDA3LS41ODRzLTEuODQ4LjU1NC0xLjc3MiAxLjExMmMuMDYxLjQzNC44NDQgMS4xNzQgMS43NzEgMS4xNzQuMDc4IDAgLjE1Ny0uMDA1LjIzNy0uMDE2LjYxOS0uMDg2IDEuMDczLS40NzkgMS4yODgtLjcwNS4zMjktLjM0NS41MTgtLjczLjQ4NC0uOThtMTUuNDc3IDIzLjgyOGMtLjM0NS0xLjA0Mi0xLjQ1My0xLjM3Ny0zLjI5Ni0uOTk3LTUuNDcxIDEuMTI5LTcuNDMuMzQ3LTguMDczLS4xMjcgNC4yNTItNi40NzggNy43NS0xNC4zMDggOS42MzctMjEuNjE0Ljg5NC0zLjQ2MSAxLjM4OC02LjY3NSAxLjQyOC05LjI5NC4wNDUtMi44NzYtLjQ0NS00Ljk4OC0xLjQ1NS02LjI3OS00LjA3Mi01LjIwMy0xMC4wNDgtNy45OTQtMTcuMjgzLTguMDctNC45NzMtLjA1Ni05LjE3NSAxLjIxNy05Ljk5IDEuNTc1LTEuNzE2LS40MjctMy41ODYtLjY4OS01LjYyMi0uNzIyLTMuNzM0LS4wNi02Ljk2MS44MzQtOS42MzMgMi42NTVhNDMuMDIgNDMuMDIgMCAwIDAtNy44MjgtMi4wNTJjLTYuMzQyLTEuMDIxLTExLjM4MS0uMjQ4LTE0Ljk3OCAyLjMtNC4yOTEgMy4wNC02LjI3MiA4LjQ3NS01Ljg4OCAxNi4xNTIuMTI5IDIuNTgzIDEuNjAxIDEwLjUyOSAzLjkyMyAxOC4xMzkgMy4wNTcgMTAuMDE2IDYuMzggMTUuNjg2IDkuODc3IDE2Ljg1MmE0LjQyIDQuNDIgMCAwIDAgMS40MDIuMjMyYzEuMjc2IDAgMi44MzktLjU3NSA0LjQ2Ni0yLjUzMWExNjAuOTkgMTYwLjk5IDAgMCAxIDYuMTU2LTYuOTY2IDkuOTEgOS45MSAwIDAgMCA0LjQyOSAxLjE5MWwuMDEuMTIxYy0uMzEuMzY4LS41NjQuNjktLjc4MS45NjUtMS4wNyAxLjM1OC0xLjI5MyAxLjY0MS00LjczOCAyLjM1MS0uOTguMjAyLTMuNTgyLjczOC0zLjYyIDIuNTYzLS4wNDEgMS45OTMgMy4wNzYgMi44MyAzLjQzMSAyLjkxOSAxLjIzOC4zMSAyLjQzLjQ2MyAzLjU2OC40NjMgMi43NjYgMCA1LjItLjkwOSA3LjE0NS0yLjY2OC0uMDYgNy4xMDYuMjM2IDE0LjEwNyAxLjA4OSAxNi4yNDEuNjk5IDEuNzQ2IDIuNDA2IDYuMDE0IDcuNzk4IDYuMDE0Ljc5MSAwIDEuNjYyLS4wOTIgMi42Mi0uMjk3IDUuNjI3LTEuMjA3IDguMDcxLTMuNjk0IDkuMDE2LTkuMTc3LjUwNi0yLjkzIDEuMzc0LTkuOTI4IDEuNzgyLTEzLjY4Mi44NjIuMjY5IDEuOTcxLjM5MiAzLjE3LjM5MiAyLjUwMSAwIDUuMzg3LS41MzEgNy4xOTctMS4zNzIgMi4wMzMtLjk0NCA1LjcwMi0zLjI2MSA1LjAzNy01LjI3NGgwek02MS44IDIzLjE0N2MtLjAxOSAxLjEwOC0uMTcxIDIuMTE0LS4zMzMgMy4xNjQtLjE3NCAxLjEyOS0uMzU0IDIuMjk3LS4zOTkgMy43MTUtLjA0NSAxLjM3OS4xMjggMi44MTQuMjk0IDQuMi4zMzcgMi44MDEuNjgyIDUuNjg1LS42NTUgOC41MzEtLjIwOC0uMzY5LS40MDgtLjc3Mi0uNTkyLTEuMjE4LS4xNjYtLjQwMy0uNTI3LTEuMDUtMS4wMjctMS45NDYtMS45NDQtMy40ODctNi40OTctMTEuNjUyLTQuMTY3LTE0Ljk4NC42OTQtLjk5MiAyLjQ1Ni0yLjAxMSA2Ljg3OS0xLjQ2M2gwek01Ni40MzkgNC4zNzRjNi40ODIuMTQzIDExLjYwOSAyLjU2OCAxNS4yNCA3LjIwNyAyLjc4NCAzLjU1OC0uMjgyIDE5Ljc0OS05LjE1OCAzMy43MTZsLS4yNjktLjMzOS0uMTEyLS4xNGMyLjI5NC0zLjc4OCAxLjg0NS03LjUzNiAxLjQ0Ni0xMC44NTktLjE2NC0xLjM2NC0uMzE5LTIuNjUyLS4yOC0zLjg2MS4wNDEtMS4yODMuMjEtMi4zODIuMzc0LTMuNDQ2LjIwMi0xLjMxMS40MDctMi42NjcuMzUtNC4yNjVhMS43NyAxLjc3IDAgMCAwIC4wMzctLjYwMWMtLjE0NC0xLjUzMy0xLjg5NC02LjEyLTUuNDYyLTEwLjI3My0xLjk1MS0yLjI3MS00Ljc5Ny00LjgxMy04LjY4Mi02LjUyNyAxLjY3MS0uMzQ2IDMuOTU2LS42NjkgNi41MTUtLjYxMmgwek0yMC4xNjcgNTMuMjk4Yy0xLjc5MyAyLjE1NS0zLjAzMSAxLjc0Mi0zLjQzOCAxLjYwNy0yLjY1My0uODg1LTUuNzMtNi40OTEtOC40NDQtMTUuMzgyLTIuMzQ4LTcuNjkzLTMuNzItMTUuNDI4LTMuODI5LTE3LjU5Ny0uMzQzLTYuODYgMS4zMi0xMS42NDEgNC45NDMtMTQuMjEgNS44OTYtNC4xODEgMTUuNTg5LTEuNjc5IDE5LjQ4NC0uNDA5bC0uMTcuMTYzYy02LjM5MSA2LjQ1NS02LjI0IDE3LjQ4My02LjIyNCAxOC4xNTdhMjEuNiAyMS42IDAgMCAwIC4wNTEgMS4xMzVjLjExIDEuODU1LjMxNSA1LjMwNy0uMjMyIDkuMjE3LS41MDggMy42MzMuNjEyIDcuMTg5IDMuMDcyIDkuNzU2LjI1NS4yNjYuNTIxLjUxNS43OTUuNzVhMTY0LjA2IDE2NC4wNiAwIDAgMC02LjAwOCA2LjgxNGgwem02LjgzLTkuMTEzYy0xLjk4My0yLjA2OS0yLjg4NC00Ljk0Ny0yLjQ3MS03Ljg5Ni41NzctNC4xMy4zNjQtNy43MjcuMjUtOS42NTlsLS4wMzktLjY5NGMuOTM0LS44MjggNS4yNjEtMy4xNDYgOC4zNDYtMi40MzkgMS40MDguMzIzIDIuMjY2IDEuMjgxIDIuNjIzIDIuOTMxIDEuODQ2IDguNTM5LjI0NCAxMi4wOTgtMS4wNDMgMTQuOTU3LS4yNjUuNTg5LS41MTYgMS4xNDYtLjczIDEuNzIybC0uMTY2LjQ0NWMtLjQyIDEuMTI2LS44MTEgMi4xNzMtMS4wNTMgMy4xNjctMi4xMDgtLjAwNi00LjE1OS0uOTA3LTUuNzE4LTIuNTM0aDB6bS4zMjQgMTEuNTE2YTQuOTggNC45OCAwIDAgMS0xLjQ5NC0uNjQyYy4yNzEtLjEyOC43NTQtLjMwMSAxLjU5MS0uNDc0IDQuMDUyLS44MzQgNC42NzgtMS40MjMgNi4wNDUtMy4xNTguMzEzLS4zOTguNjY5LS44NDkgMS4xNi0xLjM5OC43MzMtLjgyMSAxLjA2OC0uNjgyIDEuNjc2LS40My40OTMuMjA0Ljk3Mi44MjEgMS4xNjcgMS41MDEuMDkyLjMyMS4xOTUuOTMtLjE0MyAxLjQwNC0yLjg1NSAzLjk5Ny03LjAxNSAzLjk0Ni0xMC4wMDMgMy4xOThoMHptMjEuMjA3IDE5LjczNWMtNC45NTcgMS4wNjItNi43MTMtMS40NjctNy44NjktNC4zNTktLjc0Ny0xLjg2Ny0xLjExMy0xMC4yODUtLjg1My0xOS41ODIuMDAzLS4xMjQtLjAxNC0uMjQzLS4wNDgtLjM1NmE0LjY0IDQuNjQgMCAwIDAtLjEzOS0uNjU3Yy0uMzg3LTEuMzUzLTEuMzMxLTIuNDg0LTIuNDYyLTIuOTUzLS40NS0uMTg2LTEuMjc1LS41MjgtMi4yNjctLjI3NC4yMTItLjg3MS41NzgtMS44NTUuOTc2LTIuOTIxbC4xNjctLjQ0OGMuMTg4LS41MDUuNDIzLTEuMDI5LjY3My0xLjU4MyAxLjM0Ny0yLjk5MiAzLjE5Mi03LjA5MSAxLjE5LTE2LjM1LS43NS0zLjQ2OC0zLjI1NC01LjE2MS03LjA1LTQuNzY4LTIuMjc2LjIzNS00LjM1OCAxLjE1NC01LjM5NiAxLjY4LS4yMjMuMTEzLS40MjguMjIyLS42MTguMzI5LjI5LTMuNDk0IDEuMzg1LTEwLjAyNCA1LjQ4MS0xNC4xNTYgMi41NzktMi42MDEgNi4wMTQtMy44ODYgMTAuMTk5LTMuODE3IDguMjQ2LjEzNSAxMy41MzQgNC4zNjcgMTYuNTE4IDcuODkzIDIuNTcxIDMuMDM5IDMuOTY0IDYuMSA0LjUyIDcuNzUxLTQuMTc5LS40MjUtNy4wMjIuNC04LjQ2MyAyLjQ2LTMuMTM1IDQuNDgxIDEuNzE1IDEzLjE3OCA0LjA0NiAxNy4zNTguNDI3Ljc2Ni43OTYgMS40MjguOTEyIDEuNzA5Ljc1OSAxLjgzOSAxLjc0MiAzLjA2NyAyLjQ1OSAzLjk2NC4yMi4yNzUuNDMzLjU0MS41OTYuNzc0LTEuMjY2LjM2NS0zLjUzOSAxLjIwOC0zLjMzMiA1LjQyMi0uMTY3IDIuMTE1LTEuMzU2IDEyLjAxNi0xLjk1OSAxNS41MTQtLjc5NyA0LjYyMS0yLjQ5NyA2LjM0My03LjI3OSA3LjM2OGgwem0yMC42OTMtMjMuNjhjLTEuMjk0LjYwMS0zLjQ2IDEuMDUyLTUuNTE4IDEuMTQ4LTIuMjczLjEwNy0zLjQzLS4yNTUtMy43MDItLjQ3Ny0uMTI4LTIuNjI2Ljg1LTIuOTAxIDEuODg0LTMuMTkxLjE2My0uMDQ2LjMyMS0uMDkuNDc0LS4xNDRhNC4xNyA0LjE3IDAgMCAwIC4zMTMuMjNjMS44MjcgMS4yMDYgNS4wODUgMS4zMzYgOS42ODUuMzg2bC4wNS0uMDFjLS42Mi41OC0xLjY4MiAxLjM1OS0zLjE4NyAyLjA1OGgweiIvPjwvZz48L3N5bWJvbD48L3N2Zz4=",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"PipelinewisePostgres"},{property:"og:description",content:"A Singer tap to fetch data from a Postgres database. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.PipelinewisePostgres.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"PipelinewisePostgres"},{name:"twitter:description",content:"A Singer tap to fetch data from a Postgres database. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.PipelinewisePostgres.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.PipelinewisePostgres.html",relativePath:"plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.PipelinewisePostgres.md",key:"v-fafa84b2",path:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.PipelinewisePostgres.html",headers:[{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:179},{level:3,title:"args",slug:"args",normalizedTitle:"args",charIndex:194},{level:3,title:"breakAtEndLsn",slug:"breakatendlsn",normalizedTitle:"breakatendlsn",charIndex:337},{level:3,title:"dbName",slug:"dbname",normalizedTitle:"dbname",charIndex:530},{level:3,title:"debugLsn",slug:"debuglsn",normalizedTitle:"debuglsn",charIndex:609},{level:3,title:"dockerOptions",slug:"dockeroptions",normalizedTitle:"dockeroptions",charIndex:807},{level:3,title:"env",slug:"env",normalizedTitle:"env",charIndex:921},{level:3,title:"exitOnFailed",slug:"exitonfailed",normalizedTitle:"exitonfailed",charIndex:1061},{level:3,title:"files",slug:"files",normalizedTitle:"files",charIndex:1403},{level:3,title:"filterSchemas",slug:"filterschemas",normalizedTitle:"filterschemas",charIndex:1591},{level:3,title:"host",slug:"host",normalizedTitle:"host",charIndex:1787},{level:3,title:"inputFiles",slug:"inputfiles",normalizedTitle:"inputfiles",charIndex:1886},{level:3,title:"interpreter",slug:"interpreter",normalizedTitle:"interpreter",charIndex:2281},{level:3,title:"interpreterArgs",slug:"interpreterargs",normalizedTitle:"interpreterargs",charIndex:2404},{level:3,title:"logicalPollSeconds",slug:"logicalpollseconds",normalizedTitle:"logicalpollseconds",charIndex:2530},{level:3,title:"maxRunSeconds",slug:"maxrunseconds",normalizedTitle:"maxrunseconds",charIndex:2706},{level:3,title:"outputFiles",slug:"outputfiles",normalizedTitle:"outputfiles",charIndex:1558},{level:3,title:"outputsFiles",slug:"outputsfiles",normalizedTitle:"outputsfiles",charIndex:3278},{level:3,title:"password",slug:"password",normalizedTitle:"password",charIndex:3417},{level:3,title:"port",slug:"port",normalizedTitle:"port",charIndex:3509},{level:3,title:"pythonPath",slug:"pythonpath",normalizedTitle:"pythonpath",charIndex:3587},{level:3,title:"requirements",slug:"requirements",normalizedTitle:"requirements",charIndex:3759},{level:3,title:"runner",slug:"runner",normalizedTitle:"runner",charIndex:903},{level:3,title:"ssl",slug:"ssl",normalizedTitle:"ssl",charIndex:4163},{level:3,title:"streamsConfigurations",slug:"streamsconfigurations",normalizedTitle:"streamsconfigurations",charIndex:4257},{level:3,title:"username",slug:"username",normalizedTitle:"username",charIndex:4415},{level:3,title:"warningOnStdErr",slug:"warningonstderr",normalizedTitle:"warningonstderr",charIndex:4514},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:4642},{level:3,title:"count",slug:"count",normalizedTitle:"count",charIndex:4654},{level:3,title:"schemas",slug:"schemas",normalizedTitle:"schemas",charIndex:1685},{level:3,title:"state",slug:"state",normalizedTitle:"state",charIndex:1231},{level:3,title:"streams",slug:"streams",normalizedTitle:"streams",charIndex:4257},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:5054},{level:3,title:"DockerOptions",slug:"dockeroptions-2",normalizedTitle:"dockeroptions",charIndex:831},{level:3,title:"StreamsConfiguration",slug:"streamsconfiguration",normalizedTitle:"streamsconfiguration",charIndex:4307}],headersStr:"Properties args breakAtEndLsn dbName debugLsn dockerOptions env exitOnFailed files filterSchemas host inputFiles interpreter interpreterArgs logicalPollSeconds maxRunSeconds outputFiles outputsFiles password port pythonPath requirements runner ssl streamsConfigurations username warningOnStdErr Outputs count schemas state streams Definitions DockerOptions StreamsConfiguration",content:'PipelinewisePostgres\n\ntype: "io.kestra.plugin.singer.taps.PipelinewisePostgres"\n\n\n> A Singer tap to fetch data from a Postgres database.\n\nFull documentation can be found here\n\n\n# Properties\n\n\n# args\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Python command args\n\nArguments list to pass to main python script\n\n\n# breakAtEndLsn\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n * Default: true\n\n> Stop running the tap if the newly received lsn is after the max lsn that was detected when the tap started.\n\n\n# dbName\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The database name\n\n\n# debugLsn\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n * Default: false\n\n> If set to "true" then add _sdc_lsn property to the singer messages to debug postgres LSN position in the WAL stream.\n\n\n# dockerOptions\n\n * Type: DockerOptions\n * Dynamic: ❓\n * Required: ❌\n\n> Docker options when using runner DOCKER\n\n\n# env\n\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Additional environnements variable to add for current process.\n\n\n# exitOnFailed\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Exit if any non true return value\n\nThis tells bash that it should exit the script if any statement returns a non-true return value.\nThe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n\n# files\n\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The list of files that will be uploaded to internal storage,\n\nuse outputFiles property instead\n\n\n# filterSchemas\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The list of schemas to extract tables only from particular schemas and to improve data extraction performance\n\n\n# host\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> The database hostname\n\n\n# inputFiles\n\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Input files are extra files supplied by user that make it simpler organize code.\n\nDescribe a files map that will be written and usable in execution context. In python execution context is in a temp folder, for bash scripts, you can reach files using a workingDir variable like \'source {{workingDir}}/myfile.sh\'\n\n\n# interpreter\n\n * Type: string\n * Dynamic: ❌\n * Required: ✔️\n * Default: /bin/sh\n * Min length: 1\n\n> Interpreter to used\n\n\n# interpreterArgs\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n * Default: [-c]\n\n> Interpreter args used\n\n\n# logicalPollSeconds\n\n * Type: integer\n * Dynamic: ❌\n * Required: ❌\n * Default: 10800\n\n> Stop running the tap when no data received from wal after certain number of seconds.\n\n\n# maxRunSeconds\n\n * Type: integer\n * Dynamic: ❌\n * Required: ❌\n * Default: 43200\n\n> Stop running the tap after certain number of seconds.\n\n\n# outputFiles\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Output file list that will be uploaded to internal storage\n\nList of key that will generate temporary files.\nOn the command, just can use with special variable named outputFiles.key.\nIf you add a files with ["first"], you can use the special vars echo 1 >> {[ outputFiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n\n# outputsFiles\n\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Deprecated Output file\n\nuse outputFiles\n\n\n# password\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The database user\'s password\n\n\n# port\n\n * Type: integer\n * Dynamic: ❌\n * Required: ✔️\n\n> The database port\n\n\n# pythonPath\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Default: python\n * Min length: 1\n\n> The python interpreter to use\n\nSet the python interpreter path to use\n\n\n# requirements\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Requirements are python dependencies to add to the python execution process\n\nPython dependencies list to setup in the virtualenv, in the same format than requirements.txt\n\n\n# runner\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ✔️\n\n * Default: PROCESS\n\n * Possible Values:\n   \n   * PROCESS\n   * DOCKER\n\n> Runner to use\n\n\n# ssl\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n * Default: false\n\n> If ssl is enabled\n\n\n# streamsConfigurations\n\n * Type: array\n * SubType: StreamsConfiguration\n * Dynamic: ❌\n * Required: ✔️\n * Min items: 1\n\n> The list of stream configurations\n\n\n# username\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> The database user\n\n\n# warningOnStdErr\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Use WARNING state if any stdErr is sent\n\n\n# Outputs\n\n\n# count\n\n * Type: object\n\n> Counter of streams\n\n\n# schemas\n\n * Type: object\n * SubType: string\n\n> Map of schemas captured\n\nKey is stream name, value is uri of the schema file on ion kestra storage\n\n\n# state\n\n * Type: string\n\n> Uri of the state file\n\n\n# streams\n\n * Type: object\n * SubType: string\n\n> Map of stream captured\n\nKey is stream name, value is uri of the stream file on ion kestra storage\n\n\n# Definitions\n\n\n# DockerOptions\n\n# dockerConfig\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker config file\n\nFull file that can be used to configure private registries, ...\n\n# dockerHost\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: unix:///var/run/docker.sock\n\n> Docker api uri\n\n# entryPoint\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker entrypoint to use\n\n# extraHosts\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker extra host to use\n\n# image\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> Docker image to use\n\n# user\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker user to use\n\n\n# StreamsConfiguration\n\n# propertiesPattern\n\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n\n# replicationKeys\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# replicationMethod\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Possible Values:\n   \n   * FULL_TABLE\n   * INCREMENTAL\n   * LOG_BASED\n\n# selected\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: true\n\n# stream\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌',normalizedContent:'pipelinewisepostgres\n\ntype: "io.kestra.plugin.singer.taps.pipelinewisepostgres"\n\n\n> a singer tap to fetch data from a postgres database.\n\nfull documentation can be found here\n\n\n# properties\n\n\n# args\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> python command args\n\narguments list to pass to main python script\n\n\n# breakatendlsn\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n * default: true\n\n> stop running the tap if the newly received lsn is after the max lsn that was detected when the tap started.\n\n\n# dbname\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the database name\n\n\n# debuglsn\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n * default: false\n\n> if set to "true" then add _sdc_lsn property to the singer messages to debug postgres lsn position in the wal stream.\n\n\n# dockeroptions\n\n * type: dockeroptions\n * dynamic: ❓\n * required: ❌\n\n> docker options when using runner docker\n\n\n# env\n\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> additional environnements variable to add for current process.\n\n\n# exitonfailed\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> exit if any non true return value\n\nthis tells bash that it should exit the script if any statement returns a non-true return value.\nthe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n\n# files\n\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> the list of files that will be uploaded to internal storage,\n\nuse outputfiles property instead\n\n\n# filterschemas\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> the list of schemas to extract tables only from particular schemas and to improve data extraction performance\n\n\n# host\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> the database hostname\n\n\n# inputfiles\n\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> input files are extra files supplied by user that make it simpler organize code.\n\ndescribe a files map that will be written and usable in execution context. in python execution context is in a temp folder, for bash scripts, you can reach files using a workingdir variable like \'source {{workingdir}}/myfile.sh\'\n\n\n# interpreter\n\n * type: string\n * dynamic: ❌\n * required: ✔️\n * default: /bin/sh\n * min length: 1\n\n> interpreter to used\n\n\n# interpreterargs\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n * default: [-c]\n\n> interpreter args used\n\n\n# logicalpollseconds\n\n * type: integer\n * dynamic: ❌\n * required: ❌\n * default: 10800\n\n> stop running the tap when no data received from wal after certain number of seconds.\n\n\n# maxrunseconds\n\n * type: integer\n * dynamic: ❌\n * required: ❌\n * default: 43200\n\n> stop running the tap after certain number of seconds.\n\n\n# outputfiles\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> output file list that will be uploaded to internal storage\n\nlist of key that will generate temporary files.\non the command, just can use with special variable named outputfiles.key.\nif you add a files with ["first"], you can use the special vars echo 1 >> {[ outputfiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n\n# outputsfiles\n\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> deprecated output file\n\nuse outputfiles\n\n\n# password\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the database user\'s password\n\n\n# port\n\n * type: integer\n * dynamic: ❌\n * required: ✔️\n\n> the database port\n\n\n# pythonpath\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * default: python\n * min length: 1\n\n> the python interpreter to use\n\nset the python interpreter path to use\n\n\n# requirements\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> requirements are python dependencies to add to the python execution process\n\npython dependencies list to setup in the virtualenv, in the same format than requirements.txt\n\n\n# runner\n\n * type: string\n\n * dynamic: ❌\n\n * required: ✔️\n\n * default: process\n\n * possible values:\n   \n   * process\n   * docker\n\n> runner to use\n\n\n# ssl\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n * default: false\n\n> if ssl is enabled\n\n\n# streamsconfigurations\n\n * type: array\n * subtype: streamsconfiguration\n * dynamic: ❌\n * required: ✔️\n * min items: 1\n\n> the list of stream configurations\n\n\n# username\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> the database user\n\n\n# warningonstderr\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> use warning state if any stderr is sent\n\n\n# outputs\n\n\n# count\n\n * type: object\n\n> counter of streams\n\n\n# schemas\n\n * type: object\n * subtype: string\n\n> map of schemas captured\n\nkey is stream name, value is uri of the schema file on ion kestra storage\n\n\n# state\n\n * type: string\n\n> uri of the state file\n\n\n# streams\n\n * type: object\n * subtype: string\n\n> map of stream captured\n\nkey is stream name, value is uri of the stream file on ion kestra storage\n\n\n# definitions\n\n\n# dockeroptions\n\n# dockerconfig\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> docker config file\n\nfull file that can be used to configure private registries, ...\n\n# dockerhost\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n * default: unix:///var/run/docker.sock\n\n> docker api uri\n\n# entrypoint\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> docker entrypoint to use\n\n# extrahosts\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> docker extra host to use\n\n# image\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> docker image to use\n\n# user\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> docker user to use\n\n\n# streamsconfiguration\n\n# propertiespattern\n\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n\n# replicationkeys\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# replicationmethod\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * possible values:\n   \n   * full_table\n   * incremental\n   * log_based\n\n# selected\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: true\n\n# stream\n\n * type: string\n * dynamic: ❓\n * required: ❌',charsets:{}},{title:"Quickbooks",frontmatter:{title:"Quickbooks",editLink:!1,description:"A Singer tap to fetch data from a Quickbooks account.",icon:"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4KPCEtLSBHZW5lcmF0b3I6IEFkb2JlIElsbHVzdHJhdG9yIDE1LjAuMCwgU1ZHIEV4cG9ydCBQbHVnLUluIC4gU1ZHIFZlcnNpb246IDYuMDAgQnVpbGQgMCkgIC0tPgo8IURPQ1RZUEUgc3ZnIFBVQkxJQyAiLS8vVzNDLy9EVEQgU1ZHIDEuMS8vRU4iICJodHRwOi8vd3d3LnczLm9yZy9HcmFwaGljcy9TVkcvMS4xL0RURC9zdmcxMS5kdGQiPgo8c3ZnIHZlcnNpb249IjEuMSIKCSBpZD0ic3ZnMTMwIiB4bWxuczppbmtzY2FwZT0iaHR0cDovL3d3dy5pbmtzY2FwZS5vcmcvbmFtZXNwYWNlcy9pbmtzY2FwZSIgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIiB4bWxuczpjYz0iaHR0cDovL2NyZWF0aXZlY29tbW9ucy5vcmcvbnMjIiB4bWxuczpkYz0iaHR0cDovL3B1cmwub3JnL2RjL2VsZW1lbnRzLzEuMS8iIHhtbG5zOnN2Zz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnNvZGlwb2RpPSJodHRwOi8vc29kaXBvZGkuc291cmNlZm9yZ2UubmV0L0RURC9zb2RpcG9kaS0wLmR0ZCIgaW5rc2NhcGU6dmVyc2lvbj0iMC45Mi4yICg1YzNlODBkLCAyMDE3LTA4LTA2KSIgc29kaXBvZGk6ZG9jbmFtZT0iUXVpY2tib29rcy5zdmciCgkgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIgeD0iMHB4IiB5PSIwcHgiIHdpZHRoPSIyNTAwcHgiIGhlaWdodD0iMjUwMHB4IgoJIHZpZXdCb3g9Ii0xMDY0LjQ2OSAtMTA2NC40NjkgMjUwMCAyNTAwIiBlbmFibGUtYmFja2dyb3VuZD0ibmV3IC0xMDY0LjQ2OSAtMTA2NC40NjkgMjUwMCAyNTAwIiB4bWw6c3BhY2U9InByZXNlcnZlIj4KPHNvZGlwb2RpOm5hbWVkdmlldyAgaWQ9ImJhc2UiIGJvcmRlcmNvbG9yPSIjNjY2NjY2IiBwYWdlY29sb3I9IiNmZmZmZmYiIGZpdC1tYXJnaW4tbGVmdD0iMCIgaW5rc2NhcGU6Y3k9Ii00OS43NjgzMTIiIGZpdC1tYXJnaW4tdG9wPSIwIiBpbmtzY2FwZTp6b29tPSIwLjM1IiBpbmtzY2FwZTpjeD0iMzg3LjM3NDU1IiBib3JkZXJvcGFjaXR5PSIxLjAiIHNob3dncmlkPSJmYWxzZSIgZml0LW1hcmdpbi1ib3R0b209IjAiIGZpdC1tYXJnaW4tcmlnaHQ9IjAiIGlua3NjYXBlOndpbmRvdy15PSIzOTEiIGlua3NjYXBlOndpbmRvdy14PSIzODMyIiBpbmtzY2FwZTp3aW5kb3ctaGVpZ2h0PSIxMDE3IiBpbmtzY2FwZTp3aW5kb3ctd2lkdGg9IjE5MjAiIGlua3NjYXBlOmN1cnJlbnQtbGF5ZXI9ImxheWVyMSIgaW5rc2NhcGU6ZG9jdW1lbnQtdW5pdHM9Im1tIiBpbmtzY2FwZTpwYWdlc2hhZG93PSIyIiBpbmtzY2FwZTpwYWdlb3BhY2l0eT0iMC4wIiBpbmtzY2FwZTp3aW5kb3ctbWF4aW1pemVkPSIxIj4KCTwvc29kaXBvZGk6bmFtZWR2aWV3Pgo8ZyBpZD0ibGF5ZXIxIiB0cmFuc2Zvcm09InRyYW5zbGF0ZSgtMy4zNDA0ODQ3LC00Ljc2MzEwNDMpIiBpbmtzY2FwZTpsYWJlbD0iQ2FscXVlIDEiIGlua3NjYXBlOmdyb3VwbW9kZT0ibGF5ZXIiPgoJPGcgaWQ9ImxheWVyMS0yMyIgdHJhbnNmb3JtPSJ0cmFuc2xhdGUoMTA4LjEwMTE5LDQuNDgzMDU5NykiPgoJCTxnIGlkPSJsYXllcjEtMiIgdHJhbnNmb3JtPSJ0cmFuc2xhdGUoLTExNy4xNzI2MiwyNS43MDIzNzkpIj4KCQkJPGcgaWQ9ImxheWVyMS00IiB0cmFuc2Zvcm09InRyYW5zbGF0ZSgyOC43MjYxOTEsLTE4NS45NjQyOCkiPgoJCQkJPGcgaWQ9ImxheWVyMS04IiB0cmFuc2Zvcm09InRyYW5zbGF0ZSgzMi4xNjU0MDgsMjYwLjI4Mzc3KSI+CgkJCQkJPGcgaWQ9IlF1aWNrQm9va3NfLV9DbGVhcnNwYWNlX194MjZfX0xvY2t1cCIgdHJhbnNmb3JtPSJtYXRyaXgoMS40NTQ0NzA3LDAsMCwxLjQ1NDQ3MDcsLTU1OC45OTg5LC00MDkuMTA3NzYpIj4KCQkJCQkJPGcgaWQ9IlF1aWNrQm9va3NfTG9ja3VwIj4KCQkJCQkJCTxnIGlkPSJJY29uXzJfIj4KCQkJCQkJCQk8Y2lyY2xlIGlkPSJDaXJjbGVfMl8iIGZpbGw9IiMyQ0EwMUMiIGN4PSI0NzguNTU5IiBjeT0iMzQwLjI1OSIgcj0iODU5LjQxOSIvPgoJCQkJCQkJCTxwYXRoIGlkPSJxYiIgaW5rc2NhcGU6Y29ubmVjdG9yLWN1cnZhdHVyZT0iMCIgZmlsbD0iI0ZGRkZGRiIgZD0iTS0xNDIuMTI5LDM0MC4yNTkKCQkJCQkJCQkJYzAsMTg1LjI1MiwxNDguOTYzLDMzNC4yMiwzMzQuMjE1LDMzNC4yMmg0Ny43NDdWNTUwLjM0MWgtNDcuNzQ3Yy0xMTYuNDk3LDAtMjEwLjA3OC05My41ODUtMjEwLjA3OC0yMTAuMDgyCgkJCQkJCQkJCWMwLTExNi40OTcsOTMuNTgtMjEwLjA3OCwyMTAuMDc4LTIxMC4wNzhoMTE0LjU4OGMwLDAsMCw2MzcuODc4LDAsNjQ5LjMzN2MwLDY4Ljc1NSw1NS4zODgsMTI0LjEzOCwxMjQuMTM4LDEyNC4xMzhWNi4wNDQKCQkJCQkJCQkJYzAsMC0xMjcuOTU2LDAtMjM4LjcyNiwwQzYuODM0LDYuMDQ0LTE0Mi4xMjksMTU2LjkxNi0xNDIuMTI5LDM0MC4yNTl6IE03NjUuMDMyLDYuMDQ0aC00Ny43NDd2MTI0LjEzOGg0Ny43NDcKCQkJCQkJCQkJYzExNi40OTgsMCwyMTAuMDc4LDkzLjU4MSwyMTAuMDc4LDIxMC4wNzhjMCwxMTYuNDk4LTkzLjU4LDIxMC4wODItMjEwLjA3OCwyMTAuMDgySDY1MC40NDRjMCwwLDAtNjM3Ljg3OCwwLTY0OS4zNDEKCQkJCQkJCQkJYzAtNjguNzUtNTUuMzg4LTEyNC4xMzgtMTI0LjEzOC0xMjQuMTM4djg5Ny42MTZjMCwwLDEyNy45NTUsMCwyMzguNzI2LDBjMTg1LjI1MiwwLDMzNC4yMi0xNDguOTY4LDMzNC4yMi0zMzQuMjIKCQkJCQkJCQkJQzEwOTkuMjUyLDE1Ni45MTYsOTUwLjI4NCw2LjA0NCw3NjUuMDMyLDYuMDQ0TDc2NS4wMzIsNi4wNDR6Ii8+CgkJCQkJCQk8L2c+CgkJCQkJCTwvZz4KCQkJCQk8L2c+CgkJCQk8L2c+CgkJCTwvZz4KCQk8L2c+Cgk8L2c+CjwvZz4KPC9zdmc+Cg==",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Quickbooks"},{property:"og:description",content:"A Singer tap to fetch data from a Quickbooks account. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.Quickbooks.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Quickbooks"},{name:"twitter:description",content:"A Singer tap to fetch data from a Quickbooks account. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.Quickbooks.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.Quickbooks.html",relativePath:"plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.Quickbooks.md",key:"v-6404442b",path:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.Quickbooks.html",headers:[{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:160},{level:3,title:"args",slug:"args",normalizedTitle:"args",charIndex:175},{level:3,title:"clientId",slug:"clientid",normalizedTitle:"clientid",charIndex:318},{level:3,title:"clientSecret",slug:"clientsecret",normalizedTitle:"clientsecret",charIndex:421},{level:3,title:"dockerOptions",slug:"dockeroptions",normalizedTitle:"dockeroptions",charIndex:532},{level:3,title:"env",slug:"env",normalizedTitle:"env",charIndex:646},{level:3,title:"exitOnFailed",slug:"exitonfailed",normalizedTitle:"exitonfailed",charIndex:786},{level:3,title:"files",slug:"files",normalizedTitle:"files",charIndex:1128},{level:3,title:"inputFiles",slug:"inputfiles",normalizedTitle:"inputfiles",charIndex:1316},{level:3,title:"interpreter",slug:"interpreter",normalizedTitle:"interpreter",charIndex:1711},{level:3,title:"interpreterArgs",slug:"interpreterargs",normalizedTitle:"interpreterargs",charIndex:1834},{level:3,title:"isSandbox",slug:"issandbox",normalizedTitle:"issandbox",charIndex:1960},{level:3,title:"maxWorkers",slug:"maxworkers",normalizedTitle:"maxworkers",charIndex:2110},{level:3,title:"outputFiles",slug:"outputfiles",normalizedTitle:"outputfiles",charIndex:1283},{level:3,title:"outputsFiles",slug:"outputsfiles",normalizedTitle:"outputsfiles",charIndex:2656},{level:3,title:"pythonPath",slug:"pythonpath",normalizedTitle:"pythonpath",charIndex:2795},{level:3,title:"realmId",slug:"realmid",normalizedTitle:"realmid",charIndex:2967},{level:3,title:"refreshToken",slug:"refreshtoken",normalizedTitle:"refreshtoken",charIndex:3068},{level:3,title:"requirements",slug:"requirements",normalizedTitle:"requirements",charIndex:3179},{level:3,title:"runner",slug:"runner",normalizedTitle:"runner",charIndex:628},{level:3,title:"selectFieldsByDefault",slug:"selectfieldsbydefault",normalizedTitle:"selectfieldsbydefault",charIndex:3583},{level:3,title:"startDate",slug:"startdate",normalizedTitle:"startdate",charIndex:3744},{level:3,title:"stateMessageThreshold",slug:"statemessagethreshold",normalizedTitle:"statemessagethreshold",charIndex:3992},{level:3,title:"streamsConfigurations",slug:"streamsconfigurations",normalizedTitle:"streamsconfigurations",charIndex:4128},{level:3,title:"warningOnStdErr",slug:"warningonstderr",normalizedTitle:"warningonstderr",charIndex:4286},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:4414},{level:3,title:"count",slug:"count",normalizedTitle:"count",charIndex:111},{level:3,title:"schemas",slug:"schemas",normalizedTitle:"schemas",charIndex:4475},{level:3,title:"state",slug:"state",normalizedTitle:"state",charIndex:956},{level:3,title:"streams",slug:"streams",normalizedTitle:"streams",charIndex:4128},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:4826},{level:3,title:"DockerOptions",slug:"dockeroptions-2",normalizedTitle:"dockeroptions",charIndex:556},{level:3,title:"StreamsConfiguration",slug:"streamsconfiguration",normalizedTitle:"streamsconfiguration",charIndex:4178}],headersStr:"Properties args clientId clientSecret dockerOptions env exitOnFailed files inputFiles interpreter interpreterArgs isSandbox maxWorkers outputFiles outputsFiles pythonPath realmId refreshToken requirements runner selectFieldsByDefault startDate stateMessageThreshold streamsConfigurations warningOnStdErr Outputs count schemas state streams Definitions DockerOptions StreamsConfiguration",content:'Quickbooks\n\ntype: "io.kestra.plugin.singer.taps.Quickbooks"\n\n\n> A Singer tap to fetch data from a Quickbooks account.\n\nFull documentation can be found here\n\n\n# Properties\n\n\n# args\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Python command args\n\nArguments list to pass to main python script\n\n\n# clientId\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> Quickbooks client ID.\n\n\n# clientSecret\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> Quickbooks client secret.\n\n\n# dockerOptions\n\n * Type: DockerOptions\n * Dynamic: ❓\n * Required: ❌\n\n> Docker options when using runner DOCKER\n\n\n# env\n\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Additional environnements variable to add for current process.\n\n\n# exitOnFailed\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Exit if any non true return value\n\nThis tells bash that it should exit the script if any statement returns a non-true return value.\nThe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n\n# files\n\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The list of files that will be uploaded to internal storage,\n\nuse outputFiles property instead\n\n\n# inputFiles\n\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Input files are extra files supplied by user that make it simpler organize code.\n\nDescribe a files map that will be written and usable in execution context. In python execution context is in a temp folder, for bash scripts, you can reach files using a workingDir variable like \'source {{workingDir}}/myfile.sh\'\n\n\n# interpreter\n\n * Type: string\n * Dynamic: ❌\n * Required: ✔️\n * Default: /bin/sh\n * Min length: 1\n\n> Interpreter to used\n\n\n# interpreterArgs\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n * Default: [-c]\n\n> Interpreter args used\n\n\n# isSandbox\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: false\n\n> Select by default any new fields discovered in Quickbooks objects.\n\n\n# maxWorkers\n\n * Type: integer\n * Dynamic: ❌\n * Required: ✔️\n * Default: 8\n\n> Maximum number of threads to use.\n\n\n# outputFiles\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Output file list that will be uploaded to internal storage\n\nList of key that will generate temporary files.\nOn the command, just can use with special variable named outputFiles.key.\nIf you add a files with ["first"], you can use the special vars echo 1 >> {[ outputFiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n\n# outputsFiles\n\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Deprecated Output file\n\nuse outputFiles\n\n\n# pythonPath\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Default: python\n * Min length: 1\n\n> The python interpreter to use\n\nSet the python interpreter path to use\n\n\n# realmId\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> Quickbooks username.\n\n\n# refreshToken\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> Quickbooks refresh token.\n\n\n# requirements\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Requirements are python dependencies to add to the python execution process\n\nPython dependencies list to setup in the virtualenv, in the same format than requirements.txt\n\n\n# runner\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ✔️\n\n * Default: PROCESS\n\n * Possible Values:\n   \n   * PROCESS\n   * DOCKER\n\n> Runner to use\n\n\n# selectFieldsByDefault\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Select by default any new fields discovered in Quickbooks objects.\n\n\n# startDate\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> Determines how much historical data will be extracted.\n\nPlease be aware that the larger the time period and amount of data, the longer the initial extraction can be expected to take.\n\n\n# stateMessageThreshold\n\n * Type: integer\n * Dynamic: ❌\n * Required: ✔️\n * Default: 1000\n\n> Generate a STATE message every N records.\n\n\n# streamsConfigurations\n\n * Type: array\n * SubType: StreamsConfiguration\n * Dynamic: ❌\n * Required: ✔️\n * Min items: 1\n\n> The list of stream configurations\n\n\n# warningOnStdErr\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Use WARNING state if any stdErr is sent\n\n\n# Outputs\n\n\n# count\n\n * Type: object\n\n> Counter of streams\n\n\n# schemas\n\n * Type: object\n * SubType: string\n\n> Map of schemas captured\n\nKey is stream name, value is uri of the schema file on ion kestra storage\n\n\n# state\n\n * Type: string\n\n> Uri of the state file\n\n\n# streams\n\n * Type: object\n * SubType: string\n\n> Map of stream captured\n\nKey is stream name, value is uri of the stream file on ion kestra storage\n\n\n# Definitions\n\n\n# DockerOptions\n\n# dockerConfig\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker config file\n\nFull file that can be used to configure private registries, ...\n\n# dockerHost\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: unix:///var/run/docker.sock\n\n> Docker api uri\n\n# entryPoint\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker entrypoint to use\n\n# extraHosts\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker extra host to use\n\n# image\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> Docker image to use\n\n# user\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker user to use\n\n\n# StreamsConfiguration\n\n# propertiesPattern\n\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n\n# replicationKeys\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# replicationMethod\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Possible Values:\n   \n   * FULL_TABLE\n   * INCREMENTAL\n   * LOG_BASED\n\n# selected\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: true\n\n# stream\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌',normalizedContent:'quickbooks\n\ntype: "io.kestra.plugin.singer.taps.quickbooks"\n\n\n> a singer tap to fetch data from a quickbooks account.\n\nfull documentation can be found here\n\n\n# properties\n\n\n# args\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> python command args\n\narguments list to pass to main python script\n\n\n# clientid\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> quickbooks client id.\n\n\n# clientsecret\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> quickbooks client secret.\n\n\n# dockeroptions\n\n * type: dockeroptions\n * dynamic: ❓\n * required: ❌\n\n> docker options when using runner docker\n\n\n# env\n\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> additional environnements variable to add for current process.\n\n\n# exitonfailed\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> exit if any non true return value\n\nthis tells bash that it should exit the script if any statement returns a non-true return value.\nthe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n\n# files\n\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> the list of files that will be uploaded to internal storage,\n\nuse outputfiles property instead\n\n\n# inputfiles\n\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> input files are extra files supplied by user that make it simpler organize code.\n\ndescribe a files map that will be written and usable in execution context. in python execution context is in a temp folder, for bash scripts, you can reach files using a workingdir variable like \'source {{workingdir}}/myfile.sh\'\n\n\n# interpreter\n\n * type: string\n * dynamic: ❌\n * required: ✔️\n * default: /bin/sh\n * min length: 1\n\n> interpreter to used\n\n\n# interpreterargs\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n * default: [-c]\n\n> interpreter args used\n\n\n# issandbox\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: false\n\n> select by default any new fields discovered in quickbooks objects.\n\n\n# maxworkers\n\n * type: integer\n * dynamic: ❌\n * required: ✔️\n * default: 8\n\n> maximum number of threads to use.\n\n\n# outputfiles\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> output file list that will be uploaded to internal storage\n\nlist of key that will generate temporary files.\non the command, just can use with special variable named outputfiles.key.\nif you add a files with ["first"], you can use the special vars echo 1 >> {[ outputfiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n\n# outputsfiles\n\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> deprecated output file\n\nuse outputfiles\n\n\n# pythonpath\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * default: python\n * min length: 1\n\n> the python interpreter to use\n\nset the python interpreter path to use\n\n\n# realmid\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> quickbooks username.\n\n\n# refreshtoken\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> quickbooks refresh token.\n\n\n# requirements\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> requirements are python dependencies to add to the python execution process\n\npython dependencies list to setup in the virtualenv, in the same format than requirements.txt\n\n\n# runner\n\n * type: string\n\n * dynamic: ❌\n\n * required: ✔️\n\n * default: process\n\n * possible values:\n   \n   * process\n   * docker\n\n> runner to use\n\n\n# selectfieldsbydefault\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> select by default any new fields discovered in quickbooks objects.\n\n\n# startdate\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> determines how much historical data will be extracted.\n\nplease be aware that the larger the time period and amount of data, the longer the initial extraction can be expected to take.\n\n\n# statemessagethreshold\n\n * type: integer\n * dynamic: ❌\n * required: ✔️\n * default: 1000\n\n> generate a state message every n records.\n\n\n# streamsconfigurations\n\n * type: array\n * subtype: streamsconfiguration\n * dynamic: ❌\n * required: ✔️\n * min items: 1\n\n> the list of stream configurations\n\n\n# warningonstderr\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> use warning state if any stderr is sent\n\n\n# outputs\n\n\n# count\n\n * type: object\n\n> counter of streams\n\n\n# schemas\n\n * type: object\n * subtype: string\n\n> map of schemas captured\n\nkey is stream name, value is uri of the schema file on ion kestra storage\n\n\n# state\n\n * type: string\n\n> uri of the state file\n\n\n# streams\n\n * type: object\n * subtype: string\n\n> map of stream captured\n\nkey is stream name, value is uri of the stream file on ion kestra storage\n\n\n# definitions\n\n\n# dockeroptions\n\n# dockerconfig\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> docker config file\n\nfull file that can be used to configure private registries, ...\n\n# dockerhost\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n * default: unix:///var/run/docker.sock\n\n> docker api uri\n\n# entrypoint\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> docker entrypoint to use\n\n# extrahosts\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> docker extra host to use\n\n# image\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> docker image to use\n\n# user\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> docker user to use\n\n\n# streamsconfiguration\n\n# propertiespattern\n\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n\n# replicationkeys\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# replicationmethod\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * possible values:\n   \n   * full_table\n   * incremental\n   * log_based\n\n# selected\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: true\n\n# stream\n\n * type: string\n * dynamic: ❓\n * required: ❌',charsets:{}},{title:"Recharge",frontmatter:{title:"Recharge",editLink:!1,description:"A Singer tap to fetch data from a Recharge account.",icon:"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9Im5vIj8+CjxzdmcKICAgeG1sbnM6ZGM9Imh0dHA6Ly9wdXJsLm9yZy9kYy9lbGVtZW50cy8xLjEvIgogICB4bWxuczpjYz0iaHR0cDovL2NyZWF0aXZlY29tbW9ucy5vcmcvbnMjIgogICB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiCiAgIHhtbG5zOnN2Zz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciCiAgIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIKICAgeG1sbnM6c29kaXBvZGk9Imh0dHA6Ly9zb2RpcG9kaS5zb3VyY2Vmb3JnZS5uZXQvRFREL3NvZGlwb2RpLTAuZHRkIgogICB4bWxuczppbmtzY2FwZT0iaHR0cDovL3d3dy5pbmtzY2FwZS5vcmcvbmFtZXNwYWNlcy9pbmtzY2FwZSIKICAgd2lkdGg9IjMzLjQ1MDU1OCIKICAgaGVpZ2h0PSIzOS4yNTU1NTgiCiAgIHZpZXdCb3g9IjAgMCAzMy40NTA1NTggMzkuMjU1NTU4IgogICB2ZXJzaW9uPSIxLjEiCiAgIGlkPSJzdmcyMiIKICAgc29kaXBvZGk6ZG9jbmFtZT0icmVjaGFyZ2UtbG9nby1ob3Jpem9udGFsLnN2ZyIKICAgc3R5bGU9ImZpbGw6bm9uZSIKICAgaW5rc2NhcGU6dmVyc2lvbj0iMC45Mi41ICgyMDYwZWMxZjlmLCAyMDIwLTA0LTA4KSI+CiAgPG1ldGFkYXRhCiAgICAgaWQ9Im1ldGFkYXRhMjgiPgogICAgPHJkZjpSREY+CiAgICAgIDxjYzpXb3JrCiAgICAgICAgIHJkZjphYm91dD0iIj4KICAgICAgICA8ZGM6Zm9ybWF0PmltYWdlL3N2Zyt4bWw8L2RjOmZvcm1hdD4KICAgICAgICA8ZGM6dHlwZQogICAgICAgICAgIHJkZjpyZXNvdXJjZT0iaHR0cDovL3B1cmwub3JnL2RjL2RjbWl0eXBlL1N0aWxsSW1hZ2UiIC8+CiAgICAgICAgPGRjOnRpdGxlPjwvZGM6dGl0bGU+CiAgICAgIDwvY2M6V29yaz4KICAgIDwvcmRmOlJERj4KICA8L21ldGFkYXRhPgogIDxkZWZzCiAgICAgaWQ9ImRlZnMyNiIgLz4KICA8c29kaXBvZGk6bmFtZWR2aWV3CiAgICAgcGFnZWNvbG9yPSIjZmZmZmZmIgogICAgIGJvcmRlcmNvbG9yPSIjNjY2NjY2IgogICAgIGJvcmRlcm9wYWNpdHk9IjEiCiAgICAgb2JqZWN0dG9sZXJhbmNlPSIxMCIKICAgICBncmlkdG9sZXJhbmNlPSIxMCIKICAgICBndWlkZXRvbGVyYW5jZT0iMTAiCiAgICAgaW5rc2NhcGU6cGFnZW9wYWNpdHk9IjAiCiAgICAgaW5rc2NhcGU6cGFnZXNoYWRvdz0iMiIKICAgICBpbmtzY2FwZTp3aW5kb3ctd2lkdGg9IjE5MjAiCiAgICAgaW5rc2NhcGU6d2luZG93LWhlaWdodD0iMTAyMiIKICAgICBpZD0ibmFtZWR2aWV3MjQiCiAgICAgc2hvd2dyaWQ9ImZhbHNlIgogICAgIGZpdC1tYXJnaW4tdG9wPSIwIgogICAgIGZpdC1tYXJnaW4tbGVmdD0iMCIKICAgICBmaXQtbWFyZ2luLXJpZ2h0PSIwIgogICAgIGZpdC1tYXJnaW4tYm90dG9tPSIwIgogICAgIGlua3NjYXBlOnpvb209IjEuNzczMzMzMyIKICAgICBpbmtzY2FwZTpjeD0iNzQuOTk3NTU5IgogICAgIGlua3NjYXBlOmN5PSIxOS40MjcxODciCiAgICAgaW5rc2NhcGU6d2luZG93LXg9IjI1NjAiCiAgICAgaW5rc2NhcGU6d2luZG93LXk9IjAiCiAgICAgaW5rc2NhcGU6d2luZG93LW1heGltaXplZD0iMSIKICAgICBpbmtzY2FwZTpjdXJyZW50LWxheWVyPSJzdmcyMiIgLz4KICA8cGF0aAogICAgIGQ9Im0gMTkuNjU3OTU5LDkuMzQ1MzQ5IGMgLTIuODAxMiwxLjQ2MjAyIC01LjU5NDYsMi45MjAzMiAtOC40MTU1LDQuMzkyNTIgMC44NzY4LDAuNDk2OCAxLjcxNDgsMC45NzE2IDIuNTUyMSwxLjQ0NiAyLjY2MTUsLTEuNTc3MSA1LjMwNjksLTMuMTQ0OCA3Ljk3OTUsLTQuNzI4NiAtMC43MTkyLC0wLjM3NzMgLTEuNDEwMywtMC43Mzk4MyAtMi4xMTYxLC0xLjEwOTkyIHogbSA4LjM3MzQsNC4zODU3MiBjIC0xLjI0ODksLTAuNjU0IC0yLjQ3MjksLTEuMjk1IC0zLjY5MzUsLTEuOTM0MSAtMi42OTMsMS41OTYxIC01LjM3NDEsMy4xODQ5IC04LjA3Nyw0Ljc4NjcgMS4xNTM0LDAuNjUzOSAyLjI3MzQsMS4yODg4IDMuMzg5MiwxLjkyMTEgMi43OTk0LC0xLjU5NDQgNS41ODEsLTMuMTc4NyA4LjM4MTMsLTQuNzczNyB6IG0gLTkuMTU1NSw2LjA5MDMgYyAtMS4xMjA2LC0wLjYzNTIgLTIuMjM4MywtMS4yNjg2IC0zLjM5MDcsLTEuOTIxOSB2IDMuNDY5NSBjIC0wLjgzNTYsLTAuNDczMiAtMS42NDMyLC0wLjkzMSAtMi40NTM0LC0xLjM4OTkgdiAtMy40NzEzIGMgLTAuODY1OCwtMC40OTEyIC0xLjcyOTIsLTAuOTgwNyAtMi41OTU0LC0xLjQ3MjEgdiAxMC4wNDQ2IGMgMi44MjA0LDEuNTg1IDUuNjIwNSwzLjE1ODUgOC40Mzk1LDQuNzQyNSB6IG0gOS45OTYsNS4yMjMzIHYgLTEwLjAzNDggYyAtMi44NDQ0LDEuNjE5NyAtNS42NTUxLDMuMjIwNCAtOC40NTE2LDQuODEzMiB2IDEwLjA2NjQgYyAyLjgzOTQsLTEuNjI3NyA1LjY1NjYsLTMuMjQyNSA4LjQ1MTYsLTQuODQ0OCB6IE0gOC45MDkxNzg5LDEzLjIzMzI2OSBjIDMuNTcwMzgwMSwtMS44NjM1IDcuMTU1MDgwMSwtMy43MzQzMyAxMC43NDk1ODAxLC01LjYxMDQ3IDMuNTcyLDEuODcwODUgNy4xNDMzLDMuNzQxMTcgMTAuNzM3Myw1LjYyMzI3IHYgMTIuNjg0NSBjIC0zLjUzNDEsMi4wMjYxIC03LjA5ODgsNC4wNjk2IC0xMC42NzM4LDYuMTE5MiAtMy41OTgzLC0yLjAyMjIgLTcuMTk1NywtNC4wNDM4IC0xMC44MTMwODAxLC02LjA3NjUgeiIKICAgICBpZD0icGF0aDE4IgogICAgIGlua3NjYXBlOmNvbm5lY3Rvci1jdXJ2YXR1cmU9IjAiCiAgICAgc3R5bGU9ImNsaXAtcnVsZTpldmVub2RkO2ZpbGw6IzUzYmFkMztmaWxsLXJ1bGU6ZXZlbm9kZCIgLz4KICA8cGF0aAogICAgIGQ9Im0gMzAuMzE2NjU5LDMuMTU4MjM5IGMgLTAuMzQwMSwtMC44MTg5NiAtMC42NjY3LC0xLjYwNTA0IC0xLjAwMjQsLTIuNDEzNjAzMDMgMC41MjQsLTAuMjE4NTc3IDEuMDQxNiwtMC40MzQ1MDkgMS41ODIxLC0wLjY1OTg4NiAwLjg1MywyLjA1MDY4OTAzIDEuNzAwMyw0LjA4NzU5OTAzIDIuNTU0Miw2LjE0MDE3OTAzIC0yLjE1NTksMC4xODA3OSAtNC4yODYsMC4zNTk1MSAtNi40NDQsMC41NDA0OSAtMC4wNDY4LC0wLjU2NDg2IC0wLjA5MzMsLTEuMTIzNjggLTAuMTQxNywtMS43MDc0MyAwLjkzMzMsLTAuMDc5MzUgMS44NDczLC0wLjE1NjggMi43NjExLC0wLjIzNDQ1IC0yLjMwOCwtMS42MDE0NSAtNC44NTI0LC0yLjU5NTcyIC03LjYyOTMsLTIuOTM1MzkgLTUuMDU2NywtMC42MTg1MSAtOS42MjgxLDAuNjE1ODcgLTEzLjYwMjUzMDEsMy44MTc0NCAtNy44MzI4NzQwMiw2LjMwOTc4IC04LjgzNjU4OTAyLDE3LjYzNzQ4IC0yLjYzMzg4LDI1LjI1MTc4IDYuNDIzMjEwMSw3Ljg4NTIgMTguNTE1NzEwMSw5LjAxMDIgMjYuMjgxNzEwMSwxLjU5MTggMC4zOTE1LDAuNDA3MSAwLjc4MjksMC44MTQ0IDEuMTc0NSwxLjIyMTcgLTYuMzYwMiw2LjI1NTMgLTE3LjA5NTEsNy42MzExIC0yNS4yMTQxNTAxLDEuNjU4MyAtOC4yNjI2NTMwMiwtNi4wNzg2IC0xMC40NjI0LC0xNy40ODMxIC01LjAxOTUyLC0yNi4xNTkwOSAyLjg5NzQyLC00LjYxOTAyIDcuMDQyNjcwMSwtNy41ODI5NCAxMi4zNzA0NzAxLC04Ljc3MTc5MDAzIDUuMzIxLC0xLjE4NzM0MyAxMC4zMDU4LC0wLjIzNDA2OCAxNC45NjM0LDIuNjU5OTUwMDMgeiIKICAgICBpZD0icGF0aDIwIgogICAgIGlua3NjYXBlOmNvbm5lY3Rvci1jdXJ2YXR1cmU9IjAiCiAgICAgc3R5bGU9ImNsaXAtcnVsZTpldmVub2RkO2ZpbGw6IzUzYmFkMztmaWxsLXJ1bGU6ZXZlbm9kZCIgLz4KPC9zdmc+Cg==",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Recharge"},{property:"og:description",content:"A Singer tap to fetch data from a Recharge account. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.Recharge.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Recharge"},{name:"twitter:description",content:"A Singer tap to fetch data from a Recharge account. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.Recharge.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.Recharge.html",relativePath:"plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.Recharge.md",key:"v-0350a017",path:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.Recharge.html",headers:[{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:154},{level:3,title:"accessToken",slug:"accesstoken",normalizedTitle:"accesstoken",charIndex:169},{level:3,title:"args",slug:"args",normalizedTitle:"args",charIndex:272},{level:3,title:"dockerOptions",slug:"dockeroptions",normalizedTitle:"dockeroptions",charIndex:415},{level:3,title:"env",slug:"env",normalizedTitle:"env",charIndex:529},{level:3,title:"exitOnFailed",slug:"exitonfailed",normalizedTitle:"exitonfailed",charIndex:669},{level:3,title:"files",slug:"files",normalizedTitle:"files",charIndex:1011},{level:3,title:"inputFiles",slug:"inputfiles",normalizedTitle:"inputfiles",charIndex:1199},{level:3,title:"interpreter",slug:"interpreter",normalizedTitle:"interpreter",charIndex:1594},{level:3,title:"interpreterArgs",slug:"interpreterargs",normalizedTitle:"interpreterargs",charIndex:1717},{level:3,title:"outputFiles",slug:"outputfiles",normalizedTitle:"outputfiles",charIndex:1166},{level:3,title:"outputsFiles",slug:"outputsfiles",normalizedTitle:"outputsfiles",charIndex:2275},{level:3,title:"pythonPath",slug:"pythonpath",normalizedTitle:"pythonpath",charIndex:2414},{level:3,title:"requirements",slug:"requirements",normalizedTitle:"requirements",charIndex:2586},{level:3,title:"runner",slug:"runner",normalizedTitle:"runner",charIndex:511},{level:3,title:"startDate",slug:"startdate",normalizedTitle:"startdate",charIndex:2990},{level:3,title:"streamsConfigurations",slug:"streamsconfigurations",normalizedTitle:"streamsconfigurations",charIndex:3238},{level:3,title:"userAgent",slug:"useragent",normalizedTitle:"useragent",charIndex:3396},{level:3,title:"warningOnStdErr",slug:"warningonstderr",normalizedTitle:"warningonstderr",charIndex:3612},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:3740},{level:3,title:"count",slug:"count",normalizedTitle:"count",charIndex:105},{level:3,title:"schemas",slug:"schemas",normalizedTitle:"schemas",charIndex:3801},{level:3,title:"state",slug:"state",normalizedTitle:"state",charIndex:839},{level:3,title:"streams",slug:"streams",normalizedTitle:"streams",charIndex:3238},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:4152},{level:3,title:"DockerOptions",slug:"dockeroptions-2",normalizedTitle:"dockeroptions",charIndex:439},{level:3,title:"StreamsConfiguration",slug:"streamsconfiguration",normalizedTitle:"streamsconfiguration",charIndex:3288}],headersStr:"Properties accessToken args dockerOptions env exitOnFailed files inputFiles interpreter interpreterArgs outputFiles outputsFiles pythonPath requirements runner startDate streamsConfigurations userAgent warningOnStdErr Outputs count schemas state streams Definitions DockerOptions StreamsConfiguration",content:'Recharge\n\ntype: "io.kestra.plugin.singer.taps.Recharge"\n\n\n> A Singer tap to fetch data from a Recharge account.\n\nFull documentation can be found here\n\n\n# Properties\n\n\n# accessToken\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> Private API Token.\n\n\n# args\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Python command args\n\nArguments list to pass to main python script\n\n\n# dockerOptions\n\n * Type: DockerOptions\n * Dynamic: ❓\n * Required: ❌\n\n> Docker options when using runner DOCKER\n\n\n# env\n\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Additional environnements variable to add for current process.\n\n\n# exitOnFailed\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Exit if any non true return value\n\nThis tells bash that it should exit the script if any statement returns a non-true return value.\nThe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n\n# files\n\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The list of files that will be uploaded to internal storage,\n\nuse outputFiles property instead\n\n\n# inputFiles\n\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Input files are extra files supplied by user that make it simpler organize code.\n\nDescribe a files map that will be written and usable in execution context. In python execution context is in a temp folder, for bash scripts, you can reach files using a workingDir variable like \'source {{workingDir}}/myfile.sh\'\n\n\n# interpreter\n\n * Type: string\n * Dynamic: ❌\n * Required: ✔️\n * Default: /bin/sh\n * Min length: 1\n\n> Interpreter to used\n\n\n# interpreterArgs\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n * Default: [-c]\n\n> Interpreter args used\n\n\n# outputFiles\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Output file list that will be uploaded to internal storage\n\nList of key that will generate temporary files.\nOn the command, just can use with special variable named outputFiles.key.\nIf you add a files with ["first"], you can use the special vars echo 1 >> {[ outputFiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n\n# outputsFiles\n\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Deprecated Output file\n\nuse outputFiles\n\n\n# pythonPath\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Default: python\n * Min length: 1\n\n> The python interpreter to use\n\nSet the python interpreter path to use\n\n\n# requirements\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Requirements are python dependencies to add to the python execution process\n\nPython dependencies list to setup in the virtualenv, in the same format than requirements.txt\n\n\n# runner\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ✔️\n\n * Default: PROCESS\n\n * Possible Values:\n   \n   * PROCESS\n   * DOCKER\n\n> Runner to use\n\n\n# startDate\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> Determines how much historical data will be extracted.\n\nPlease be aware that the larger the time period and amount of data, the longer the initial extraction can be expected to take.\n\n\n# streamsConfigurations\n\n * Type: array\n * SubType: StreamsConfiguration\n * Dynamic: ❌\n * Required: ✔️\n * Min items: 1\n\n> The list of stream configurations\n\n\n# userAgent\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> User agent.\n\nUser agent to send to ReCharge along with API requests. Typically includes name of integration and an email address you can be reached at.\n\n\n# warningOnStdErr\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Use WARNING state if any stdErr is sent\n\n\n# Outputs\n\n\n# count\n\n * Type: object\n\n> Counter of streams\n\n\n# schemas\n\n * Type: object\n * SubType: string\n\n> Map of schemas captured\n\nKey is stream name, value is uri of the schema file on ion kestra storage\n\n\n# state\n\n * Type: string\n\n> Uri of the state file\n\n\n# streams\n\n * Type: object\n * SubType: string\n\n> Map of stream captured\n\nKey is stream name, value is uri of the stream file on ion kestra storage\n\n\n# Definitions\n\n\n# DockerOptions\n\n# dockerConfig\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker config file\n\nFull file that can be used to configure private registries, ...\n\n# dockerHost\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: unix:///var/run/docker.sock\n\n> Docker api uri\n\n# entryPoint\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker entrypoint to use\n\n# extraHosts\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker extra host to use\n\n# image\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> Docker image to use\n\n# user\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker user to use\n\n\n# StreamsConfiguration\n\n# propertiesPattern\n\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n\n# replicationKeys\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# replicationMethod\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Possible Values:\n   \n   * FULL_TABLE\n   * INCREMENTAL\n   * LOG_BASED\n\n# selected\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: true\n\n# stream\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌',normalizedContent:'recharge\n\ntype: "io.kestra.plugin.singer.taps.recharge"\n\n\n> a singer tap to fetch data from a recharge account.\n\nfull documentation can be found here\n\n\n# properties\n\n\n# accesstoken\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> private api token.\n\n\n# args\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> python command args\n\narguments list to pass to main python script\n\n\n# dockeroptions\n\n * type: dockeroptions\n * dynamic: ❓\n * required: ❌\n\n> docker options when using runner docker\n\n\n# env\n\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> additional environnements variable to add for current process.\n\n\n# exitonfailed\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> exit if any non true return value\n\nthis tells bash that it should exit the script if any statement returns a non-true return value.\nthe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n\n# files\n\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> the list of files that will be uploaded to internal storage,\n\nuse outputfiles property instead\n\n\n# inputfiles\n\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> input files are extra files supplied by user that make it simpler organize code.\n\ndescribe a files map that will be written and usable in execution context. in python execution context is in a temp folder, for bash scripts, you can reach files using a workingdir variable like \'source {{workingdir}}/myfile.sh\'\n\n\n# interpreter\n\n * type: string\n * dynamic: ❌\n * required: ✔️\n * default: /bin/sh\n * min length: 1\n\n> interpreter to used\n\n\n# interpreterargs\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n * default: [-c]\n\n> interpreter args used\n\n\n# outputfiles\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> output file list that will be uploaded to internal storage\n\nlist of key that will generate temporary files.\non the command, just can use with special variable named outputfiles.key.\nif you add a files with ["first"], you can use the special vars echo 1 >> {[ outputfiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n\n# outputsfiles\n\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> deprecated output file\n\nuse outputfiles\n\n\n# pythonpath\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * default: python\n * min length: 1\n\n> the python interpreter to use\n\nset the python interpreter path to use\n\n\n# requirements\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> requirements are python dependencies to add to the python execution process\n\npython dependencies list to setup in the virtualenv, in the same format than requirements.txt\n\n\n# runner\n\n * type: string\n\n * dynamic: ❌\n\n * required: ✔️\n\n * default: process\n\n * possible values:\n   \n   * process\n   * docker\n\n> runner to use\n\n\n# startdate\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> determines how much historical data will be extracted.\n\nplease be aware that the larger the time period and amount of data, the longer the initial extraction can be expected to take.\n\n\n# streamsconfigurations\n\n * type: array\n * subtype: streamsconfiguration\n * dynamic: ❌\n * required: ✔️\n * min items: 1\n\n> the list of stream configurations\n\n\n# useragent\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> user agent.\n\nuser agent to send to recharge along with api requests. typically includes name of integration and an email address you can be reached at.\n\n\n# warningonstderr\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> use warning state if any stderr is sent\n\n\n# outputs\n\n\n# count\n\n * type: object\n\n> counter of streams\n\n\n# schemas\n\n * type: object\n * subtype: string\n\n> map of schemas captured\n\nkey is stream name, value is uri of the schema file on ion kestra storage\n\n\n# state\n\n * type: string\n\n> uri of the state file\n\n\n# streams\n\n * type: object\n * subtype: string\n\n> map of stream captured\n\nkey is stream name, value is uri of the stream file on ion kestra storage\n\n\n# definitions\n\n\n# dockeroptions\n\n# dockerconfig\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> docker config file\n\nfull file that can be used to configure private registries, ...\n\n# dockerhost\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n * default: unix:///var/run/docker.sock\n\n> docker api uri\n\n# entrypoint\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> docker entrypoint to use\n\n# extrahosts\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> docker extra host to use\n\n# image\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> docker image to use\n\n# user\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> docker user to use\n\n\n# streamsconfiguration\n\n# propertiespattern\n\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n\n# replicationkeys\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# replicationmethod\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * possible values:\n   \n   * full_table\n   * incremental\n   * log_based\n\n# selected\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: true\n\n# stream\n\n * type: string\n * dynamic: ❓\n * required: ❌',charsets:{}},{title:"SageIntacct",frontmatter:{title:"SageIntacct",editLink:!1,description:"A Singer tap to fetch data from a Sage Intacct account.",icon:"",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"SageIntacct"},{property:"og:description",content:"A Singer tap to fetch data from a Sage Intacct account. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.SageIntacct.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"SageIntacct"},{name:"twitter:description",content:"A Singer tap to fetch data from a Sage Intacct account. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.SageIntacct.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.SageIntacct.html",relativePath:"plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.SageIntacct.md",key:"v-75738383",path:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.SageIntacct.html",headers:[{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:164},{level:3,title:"args",slug:"args",normalizedTitle:"args",charIndex:179},{level:3,title:"companyId",slug:"companyid",normalizedTitle:"companyid",charIndex:322},{level:3,title:"dockerOptions",slug:"dockeroptions",normalizedTitle:"dockeroptions",charIndex:416},{level:3,title:"env",slug:"env",normalizedTitle:"env",charIndex:530},{level:3,title:"exitOnFailed",slug:"exitonfailed",normalizedTitle:"exitonfailed",charIndex:670},{level:3,title:"files",slug:"files",normalizedTitle:"files",charIndex:1012},{level:3,title:"inputFiles",slug:"inputfiles",normalizedTitle:"inputfiles",charIndex:1200},{level:3,title:"interpreter",slug:"interpreter",normalizedTitle:"interpreter",charIndex:1595},{level:3,title:"interpreterArgs",slug:"interpreterargs",normalizedTitle:"interpreterargs",charIndex:1718},{level:3,title:"outputFiles",slug:"outputfiles",normalizedTitle:"outputfiles",charIndex:1167},{level:3,title:"outputsFiles",slug:"outputsfiles",normalizedTitle:"outputsfiles",charIndex:2276},{level:3,title:"pythonPath",slug:"pythonpath",normalizedTitle:"pythonpath",charIndex:2415},{level:3,title:"requirements",slug:"requirements",normalizedTitle:"requirements",charIndex:2587},{level:3,title:"runner",slug:"runner",normalizedTitle:"runner",charIndex:512},{level:3,title:"senderId",slug:"senderid",normalizedTitle:"senderid",charIndex:2991},{level:3,title:"senderPassword",slug:"senderpassword",normalizedTitle:"senderpassword",charIndex:3091},{level:3,title:"startDate",slug:"startdate",normalizedTitle:"startdate",charIndex:3203},{level:3,title:"streamsConfigurations",slug:"streamsconfigurations",normalizedTitle:"streamsconfigurations",charIndex:3451},{level:3,title:"userId",slug:"userid",normalizedTitle:"userid",charIndex:3609},{level:3,title:"userPassword",slug:"userpassword",normalizedTitle:"userpassword",charIndex:3705},{level:3,title:"warningOnStdErr",slug:"warningonstderr",normalizedTitle:"warningonstderr",charIndex:3813},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:3941},{level:3,title:"count",slug:"count",normalizedTitle:"count",charIndex:115},{level:3,title:"schemas",slug:"schemas",normalizedTitle:"schemas",charIndex:4002},{level:3,title:"state",slug:"state",normalizedTitle:"state",charIndex:840},{level:3,title:"streams",slug:"streams",normalizedTitle:"streams",charIndex:3451},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:4353},{level:3,title:"DockerOptions",slug:"dockeroptions-2",normalizedTitle:"dockeroptions",charIndex:440},{level:3,title:"StreamsConfiguration",slug:"streamsconfiguration",normalizedTitle:"streamsconfiguration",charIndex:3501}],headersStr:"Properties args companyId dockerOptions env exitOnFailed files inputFiles interpreter interpreterArgs outputFiles outputsFiles pythonPath requirements runner senderId senderPassword startDate streamsConfigurations userId userPassword warningOnStdErr Outputs count schemas state streams Definitions DockerOptions StreamsConfiguration",content:'SageIntacct\n\ntype: "io.kestra.plugin.singer.taps.SageIntacct"\n\n\n> A Singer tap to fetch data from a Sage Intacct account.\n\nFull documentation can be found here\n\n\n# Properties\n\n\n# args\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Python command args\n\nArguments list to pass to main python script\n\n\n# companyId\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> Company Id.\n\n\n# dockerOptions\n\n * Type: DockerOptions\n * Dynamic: ❓\n * Required: ❌\n\n> Docker options when using runner DOCKER\n\n\n# env\n\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Additional environnements variable to add for current process.\n\n\n# exitOnFailed\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Exit if any non true return value\n\nThis tells bash that it should exit the script if any statement returns a non-true return value.\nThe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n\n# files\n\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The list of files that will be uploaded to internal storage,\n\nuse outputFiles property instead\n\n\n# inputFiles\n\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Input files are extra files supplied by user that make it simpler organize code.\n\nDescribe a files map that will be written and usable in execution context. In python execution context is in a temp folder, for bash scripts, you can reach files using a workingDir variable like \'source {{workingDir}}/myfile.sh\'\n\n\n# interpreter\n\n * Type: string\n * Dynamic: ❌\n * Required: ✔️\n * Default: /bin/sh\n * Min length: 1\n\n> Interpreter to used\n\n\n# interpreterArgs\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n * Default: [-c]\n\n> Interpreter args used\n\n\n# outputFiles\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Output file list that will be uploaded to internal storage\n\nList of key that will generate temporary files.\nOn the command, just can use with special variable named outputFiles.key.\nIf you add a files with ["first"], you can use the special vars echo 1 >> {[ outputFiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n\n# outputsFiles\n\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Deprecated Output file\n\nuse outputFiles\n\n\n# pythonPath\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Default: python\n * Min length: 1\n\n> The python interpreter to use\n\nSet the python interpreter path to use\n\n\n# requirements\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Requirements are python dependencies to add to the python execution process\n\nPython dependencies list to setup in the virtualenv, in the same format than requirements.txt\n\n\n# runner\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ✔️\n\n * Default: PROCESS\n\n * Possible Values:\n   \n   * PROCESS\n   * DOCKER\n\n> Runner to use\n\n\n# senderId\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> Intacct Sender Id.\n\n\n# senderPassword\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> Intacct Sender Password.\n\n\n# startDate\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> Determines how much historical data will be extracted.\n\nPlease be aware that the larger the time period and amount of data, the longer the initial extraction can be expected to take.\n\n\n# streamsConfigurations\n\n * Type: array\n * SubType: StreamsConfiguration\n * Dynamic: ❌\n * Required: ✔️\n * Min items: 1\n\n> The list of stream configurations\n\n\n# userId\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> Intacct User Id.\n\n\n# userPassword\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> Intacct User Password.\n\n\n# warningOnStdErr\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Use WARNING state if any stdErr is sent\n\n\n# Outputs\n\n\n# count\n\n * Type: object\n\n> Counter of streams\n\n\n# schemas\n\n * Type: object\n * SubType: string\n\n> Map of schemas captured\n\nKey is stream name, value is uri of the schema file on ion kestra storage\n\n\n# state\n\n * Type: string\n\n> Uri of the state file\n\n\n# streams\n\n * Type: object\n * SubType: string\n\n> Map of stream captured\n\nKey is stream name, value is uri of the stream file on ion kestra storage\n\n\n# Definitions\n\n\n# DockerOptions\n\n# dockerConfig\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker config file\n\nFull file that can be used to configure private registries, ...\n\n# dockerHost\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: unix:///var/run/docker.sock\n\n> Docker api uri\n\n# entryPoint\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker entrypoint to use\n\n# extraHosts\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker extra host to use\n\n# image\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> Docker image to use\n\n# user\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker user to use\n\n\n# StreamsConfiguration\n\n# propertiesPattern\n\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n\n# replicationKeys\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# replicationMethod\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Possible Values:\n   \n   * FULL_TABLE\n   * INCREMENTAL\n   * LOG_BASED\n\n# selected\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: true\n\n# stream\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌',normalizedContent:'sageintacct\n\ntype: "io.kestra.plugin.singer.taps.sageintacct"\n\n\n> a singer tap to fetch data from a sage intacct account.\n\nfull documentation can be found here\n\n\n# properties\n\n\n# args\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> python command args\n\narguments list to pass to main python script\n\n\n# companyid\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> company id.\n\n\n# dockeroptions\n\n * type: dockeroptions\n * dynamic: ❓\n * required: ❌\n\n> docker options when using runner docker\n\n\n# env\n\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> additional environnements variable to add for current process.\n\n\n# exitonfailed\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> exit if any non true return value\n\nthis tells bash that it should exit the script if any statement returns a non-true return value.\nthe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n\n# files\n\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> the list of files that will be uploaded to internal storage,\n\nuse outputfiles property instead\n\n\n# inputfiles\n\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> input files are extra files supplied by user that make it simpler organize code.\n\ndescribe a files map that will be written and usable in execution context. in python execution context is in a temp folder, for bash scripts, you can reach files using a workingdir variable like \'source {{workingdir}}/myfile.sh\'\n\n\n# interpreter\n\n * type: string\n * dynamic: ❌\n * required: ✔️\n * default: /bin/sh\n * min length: 1\n\n> interpreter to used\n\n\n# interpreterargs\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n * default: [-c]\n\n> interpreter args used\n\n\n# outputfiles\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> output file list that will be uploaded to internal storage\n\nlist of key that will generate temporary files.\non the command, just can use with special variable named outputfiles.key.\nif you add a files with ["first"], you can use the special vars echo 1 >> {[ outputfiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n\n# outputsfiles\n\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> deprecated output file\n\nuse outputfiles\n\n\n# pythonpath\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * default: python\n * min length: 1\n\n> the python interpreter to use\n\nset the python interpreter path to use\n\n\n# requirements\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> requirements are python dependencies to add to the python execution process\n\npython dependencies list to setup in the virtualenv, in the same format than requirements.txt\n\n\n# runner\n\n * type: string\n\n * dynamic: ❌\n\n * required: ✔️\n\n * default: process\n\n * possible values:\n   \n   * process\n   * docker\n\n> runner to use\n\n\n# senderid\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> intacct sender id.\n\n\n# senderpassword\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> intacct sender password.\n\n\n# startdate\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> determines how much historical data will be extracted.\n\nplease be aware that the larger the time period and amount of data, the longer the initial extraction can be expected to take.\n\n\n# streamsconfigurations\n\n * type: array\n * subtype: streamsconfiguration\n * dynamic: ❌\n * required: ✔️\n * min items: 1\n\n> the list of stream configurations\n\n\n# userid\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> intacct user id.\n\n\n# userpassword\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> intacct user password.\n\n\n# warningonstderr\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> use warning state if any stderr is sent\n\n\n# outputs\n\n\n# count\n\n * type: object\n\n> counter of streams\n\n\n# schemas\n\n * type: object\n * subtype: string\n\n> map of schemas captured\n\nkey is stream name, value is uri of the schema file on ion kestra storage\n\n\n# state\n\n * type: string\n\n> uri of the state file\n\n\n# streams\n\n * type: object\n * subtype: string\n\n> map of stream captured\n\nkey is stream name, value is uri of the stream file on ion kestra storage\n\n\n# definitions\n\n\n# dockeroptions\n\n# dockerconfig\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> docker config file\n\nfull file that can be used to configure private registries, ...\n\n# dockerhost\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n * default: unix:///var/run/docker.sock\n\n> docker api uri\n\n# entrypoint\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> docker entrypoint to use\n\n# extrahosts\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> docker extra host to use\n\n# image\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> docker image to use\n\n# user\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> docker user to use\n\n\n# streamsconfiguration\n\n# propertiespattern\n\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n\n# replicationkeys\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# replicationmethod\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * possible values:\n   \n   * full_table\n   * incremental\n   * log_based\n\n# selected\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: true\n\n# stream\n\n * type: string\n * dynamic: ❓\n * required: ❌',charsets:{}},{title:"Salesforce",frontmatter:{title:"Salesforce",editLink:!1,description:"A Singer tap to fetch data from a Salesforce account.",icon:"",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Salesforce"},{property:"og:description",content:"A Singer tap to fetch data from a Salesforce account. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.Salesforce.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Salesforce"},{name:"twitter:description",content:"A Singer tap to fetch data from a Salesforce account. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.Salesforce.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.Salesforce.html",relativePath:"plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.Salesforce.md",key:"v-f6b12eb2",path:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.Salesforce.html",headers:[{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:160},{level:3,title:"apiType",slug:"apitype",normalizedTitle:"apitype",charIndex:175},{level:3,title:"args",slug:"args",normalizedTitle:"args",charIndex:396},{level:3,title:"clientId",slug:"clientid",normalizedTitle:"clientid",charIndex:539},{level:3,title:"clientSecret",slug:"clientsecret",normalizedTitle:"clientsecret",charIndex:624},{level:3,title:"dockerOptions",slug:"dockeroptions",normalizedTitle:"dockeroptions",charIndex:717},{level:3,title:"env",slug:"env",normalizedTitle:"env",charIndex:831},{level:3,title:"exitOnFailed",slug:"exitonfailed",normalizedTitle:"exitonfailed",charIndex:971},{level:3,title:"files",slug:"files",normalizedTitle:"files",charIndex:1313},{level:3,title:"inputFiles",slug:"inputfiles",normalizedTitle:"inputfiles",charIndex:1501},{level:3,title:"interpreter",slug:"interpreter",normalizedTitle:"interpreter",charIndex:1896},{level:3,title:"interpreterArgs",slug:"interpreterargs",normalizedTitle:"interpreterargs",charIndex:2019},{level:3,title:"isSandbox",slug:"issandbox",normalizedTitle:"issandbox",charIndex:2145},{level:3,title:"maxWorkers",slug:"maxworkers",normalizedTitle:"maxworkers",charIndex:2295},{level:3,title:"outputFiles",slug:"outputfiles",normalizedTitle:"outputfiles",charIndex:1468},{level:3,title:"outputsFiles",slug:"outputsfiles",normalizedTitle:"outputsfiles",charIndex:2841},{level:3,title:"password",slug:"password",normalizedTitle:"password",charIndex:2980},{level:3,title:"pythonPath",slug:"pythonpath",normalizedTitle:"pythonpath",charIndex:3064},{level:3,title:"refreshToken",slug:"refreshtoken",normalizedTitle:"refreshtoken",charIndex:3236},{level:3,title:"requirements",slug:"requirements",normalizedTitle:"requirements",charIndex:3329},{level:3,title:"runner",slug:"runner",normalizedTitle:"runner",charIndex:813},{level:3,title:"securityToken",slug:"securitytoken",normalizedTitle:"securitytoken",charIndex:3733},{level:3,title:"selectFieldsByDefault",slug:"selectfieldsbydefault",normalizedTitle:"selectfieldsbydefault",charIndex:3839},{level:3,title:"startDate",slug:"startdate",normalizedTitle:"startdate",charIndex:4e3},{level:3,title:"stateMessageThreshold",slug:"statemessagethreshold",normalizedTitle:"statemessagethreshold",charIndex:4248},{level:3,title:"streamsConfigurations",slug:"streamsconfigurations",normalizedTitle:"streamsconfigurations",charIndex:4384},{level:3,title:"username",slug:"username",normalizedTitle:"username",charIndex:4542},{level:3,title:"warningOnStdErr",slug:"warningonstderr",normalizedTitle:"warningonstderr",charIndex:4626},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:4754},{level:3,title:"count",slug:"count",normalizedTitle:"count",charIndex:111},{level:3,title:"schemas",slug:"schemas",normalizedTitle:"schemas",charIndex:4815},{level:3,title:"state",slug:"state",normalizedTitle:"state",charIndex:1141},{level:3,title:"streams",slug:"streams",normalizedTitle:"streams",charIndex:4384},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:5166},{level:3,title:"DockerOptions",slug:"dockeroptions-2",normalizedTitle:"dockeroptions",charIndex:741},{level:3,title:"StreamsConfiguration",slug:"streamsconfiguration",normalizedTitle:"streamsconfiguration",charIndex:4434}],headersStr:"Properties apiType args clientId clientSecret dockerOptions env exitOnFailed files inputFiles interpreter interpreterArgs isSandbox maxWorkers outputFiles outputsFiles password pythonPath refreshToken requirements runner securityToken selectFieldsByDefault startDate stateMessageThreshold streamsConfigurations username warningOnStdErr Outputs count schemas state streams Definitions DockerOptions StreamsConfiguration",content:'Salesforce\n\ntype: "io.kestra.plugin.singer.taps.Salesforce"\n\n\n> A Singer tap to fetch data from a Salesforce account.\n\nFull documentation can be found here\n\n\n# Properties\n\n\n# apiType\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ✔️\n\n * Default: BULK\n\n * Possible Values:\n   \n   * REST\n   * BULK\n\n> This is used to switch the behavior of the tap between using Salesforce\'s REST and BULK APIs.\n\n\n# args\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Python command args\n\nArguments list to pass to main python script\n\n\n# clientId\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Salesforce client ID.\n\n\n# clientSecret\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Salesforce client secret.\n\n\n# dockerOptions\n\n * Type: DockerOptions\n * Dynamic: ❓\n * Required: ❌\n\n> Docker options when using runner DOCKER\n\n\n# env\n\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Additional environnements variable to add for current process.\n\n\n# exitOnFailed\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Exit if any non true return value\n\nThis tells bash that it should exit the script if any statement returns a non-true return value.\nThe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n\n# files\n\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The list of files that will be uploaded to internal storage,\n\nuse outputFiles property instead\n\n\n# inputFiles\n\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Input files are extra files supplied by user that make it simpler organize code.\n\nDescribe a files map that will be written and usable in execution context. In python execution context is in a temp folder, for bash scripts, you can reach files using a workingDir variable like \'source {{workingDir}}/myfile.sh\'\n\n\n# interpreter\n\n * Type: string\n * Dynamic: ❌\n * Required: ✔️\n * Default: /bin/sh\n * Min length: 1\n\n> Interpreter to used\n\n\n# interpreterArgs\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n * Default: [-c]\n\n> Interpreter args used\n\n\n# isSandbox\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: false\n\n> Select by default any new fields discovered in Salesforce objects.\n\n\n# maxWorkers\n\n * Type: integer\n * Dynamic: ❌\n * Required: ✔️\n * Default: 8\n\n> Maximum number of threads to use.\n\n\n# outputFiles\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Output file list that will be uploaded to internal storage\n\nList of key that will generate temporary files.\nOn the command, just can use with special variable named outputFiles.key.\nIf you add a files with ["first"], you can use the special vars echo 1 >> {[ outputFiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n\n# outputsFiles\n\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Deprecated Output file\n\nuse outputFiles\n\n\n# password\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Salesforce password.\n\n\n# pythonPath\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Default: python\n * Min length: 1\n\n> The python interpreter to use\n\nSet the python interpreter path to use\n\n\n# refreshToken\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Salesforce refresh token.\n\n\n# requirements\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Requirements are python dependencies to add to the python execution process\n\nPython dependencies list to setup in the virtualenv, in the same format than requirements.txt\n\n\n# runner\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ✔️\n\n * Default: PROCESS\n\n * Possible Values:\n   \n   * PROCESS\n   * DOCKER\n\n> Runner to use\n\n\n# securityToken\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Your Salesforce Account access token.\n\n\n# selectFieldsByDefault\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Select by default any new fields discovered in Salesforce objects.\n\n\n# startDate\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> Determines how much historical data will be extracted.\n\nPlease be aware that the larger the time period and amount of data, the longer the initial extraction can be expected to take.\n\n\n# stateMessageThreshold\n\n * Type: integer\n * Dynamic: ❌\n * Required: ✔️\n * Default: 1000\n\n> Generate a STATE message every N records.\n\n\n# streamsConfigurations\n\n * Type: array\n * SubType: StreamsConfiguration\n * Dynamic: ❌\n * Required: ✔️\n * Min items: 1\n\n> The list of stream configurations\n\n\n# username\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Salesforce username.\n\n\n# warningOnStdErr\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Use WARNING state if any stdErr is sent\n\n\n# Outputs\n\n\n# count\n\n * Type: object\n\n> Counter of streams\n\n\n# schemas\n\n * Type: object\n * SubType: string\n\n> Map of schemas captured\n\nKey is stream name, value is uri of the schema file on ion kestra storage\n\n\n# state\n\n * Type: string\n\n> Uri of the state file\n\n\n# streams\n\n * Type: object\n * SubType: string\n\n> Map of stream captured\n\nKey is stream name, value is uri of the stream file on ion kestra storage\n\n\n# Definitions\n\n\n# DockerOptions\n\n# dockerConfig\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker config file\n\nFull file that can be used to configure private registries, ...\n\n# dockerHost\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: unix:///var/run/docker.sock\n\n> Docker api uri\n\n# entryPoint\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker entrypoint to use\n\n# extraHosts\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker extra host to use\n\n# image\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> Docker image to use\n\n# user\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker user to use\n\n\n# StreamsConfiguration\n\n# propertiesPattern\n\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n\n# replicationKeys\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# replicationMethod\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Possible Values:\n   \n   * FULL_TABLE\n   * INCREMENTAL\n   * LOG_BASED\n\n# selected\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: true\n\n# stream\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌',normalizedContent:'salesforce\n\ntype: "io.kestra.plugin.singer.taps.salesforce"\n\n\n> a singer tap to fetch data from a salesforce account.\n\nfull documentation can be found here\n\n\n# properties\n\n\n# apitype\n\n * type: string\n\n * dynamic: ❌\n\n * required: ✔️\n\n * default: bulk\n\n * possible values:\n   \n   * rest\n   * bulk\n\n> this is used to switch the behavior of the tap between using salesforce\'s rest and bulk apis.\n\n\n# args\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> python command args\n\narguments list to pass to main python script\n\n\n# clientid\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> salesforce client id.\n\n\n# clientsecret\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> salesforce client secret.\n\n\n# dockeroptions\n\n * type: dockeroptions\n * dynamic: ❓\n * required: ❌\n\n> docker options when using runner docker\n\n\n# env\n\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> additional environnements variable to add for current process.\n\n\n# exitonfailed\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> exit if any non true return value\n\nthis tells bash that it should exit the script if any statement returns a non-true return value.\nthe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n\n# files\n\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> the list of files that will be uploaded to internal storage,\n\nuse outputfiles property instead\n\n\n# inputfiles\n\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> input files are extra files supplied by user that make it simpler organize code.\n\ndescribe a files map that will be written and usable in execution context. in python execution context is in a temp folder, for bash scripts, you can reach files using a workingdir variable like \'source {{workingdir}}/myfile.sh\'\n\n\n# interpreter\n\n * type: string\n * dynamic: ❌\n * required: ✔️\n * default: /bin/sh\n * min length: 1\n\n> interpreter to used\n\n\n# interpreterargs\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n * default: [-c]\n\n> interpreter args used\n\n\n# issandbox\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: false\n\n> select by default any new fields discovered in salesforce objects.\n\n\n# maxworkers\n\n * type: integer\n * dynamic: ❌\n * required: ✔️\n * default: 8\n\n> maximum number of threads to use.\n\n\n# outputfiles\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> output file list that will be uploaded to internal storage\n\nlist of key that will generate temporary files.\non the command, just can use with special variable named outputfiles.key.\nif you add a files with ["first"], you can use the special vars echo 1 >> {[ outputfiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n\n# outputsfiles\n\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> deprecated output file\n\nuse outputfiles\n\n\n# password\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> salesforce password.\n\n\n# pythonpath\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * default: python\n * min length: 1\n\n> the python interpreter to use\n\nset the python interpreter path to use\n\n\n# refreshtoken\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> salesforce refresh token.\n\n\n# requirements\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> requirements are python dependencies to add to the python execution process\n\npython dependencies list to setup in the virtualenv, in the same format than requirements.txt\n\n\n# runner\n\n * type: string\n\n * dynamic: ❌\n\n * required: ✔️\n\n * default: process\n\n * possible values:\n   \n   * process\n   * docker\n\n> runner to use\n\n\n# securitytoken\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> your salesforce account access token.\n\n\n# selectfieldsbydefault\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> select by default any new fields discovered in salesforce objects.\n\n\n# startdate\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> determines how much historical data will be extracted.\n\nplease be aware that the larger the time period and amount of data, the longer the initial extraction can be expected to take.\n\n\n# statemessagethreshold\n\n * type: integer\n * dynamic: ❌\n * required: ✔️\n * default: 1000\n\n> generate a state message every n records.\n\n\n# streamsconfigurations\n\n * type: array\n * subtype: streamsconfiguration\n * dynamic: ❌\n * required: ✔️\n * min items: 1\n\n> the list of stream configurations\n\n\n# username\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> salesforce username.\n\n\n# warningonstderr\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> use warning state if any stderr is sent\n\n\n# outputs\n\n\n# count\n\n * type: object\n\n> counter of streams\n\n\n# schemas\n\n * type: object\n * subtype: string\n\n> map of schemas captured\n\nkey is stream name, value is uri of the schema file on ion kestra storage\n\n\n# state\n\n * type: string\n\n> uri of the state file\n\n\n# streams\n\n * type: object\n * subtype: string\n\n> map of stream captured\n\nkey is stream name, value is uri of the stream file on ion kestra storage\n\n\n# definitions\n\n\n# dockeroptions\n\n# dockerconfig\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> docker config file\n\nfull file that can be used to configure private registries, ...\n\n# dockerhost\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n * default: unix:///var/run/docker.sock\n\n> docker api uri\n\n# entrypoint\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> docker entrypoint to use\n\n# extrahosts\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> docker extra host to use\n\n# image\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> docker image to use\n\n# user\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> docker user to use\n\n\n# streamsconfiguration\n\n# propertiespattern\n\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n\n# replicationkeys\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# replicationmethod\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * possible values:\n   \n   * full_table\n   * incremental\n   * log_based\n\n# selected\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: true\n\n# stream\n\n * type: string\n * dynamic: ❓\n * required: ❌',charsets:{}},{title:"Shopify",frontmatter:{title:"Shopify",editLink:!1,description:"A Singer tap to fetch data from a Shopify account.",icon:"PD94bWwgdmVyc2lvbj0iMS4wIiA/PjwhRE9DVFlQRSBzdmcgIFBVQkxJQyAnLS8vVzNDLy9EVEQgU1ZHIDEuMS8vRU4nICAnaHR0cDovL3d3dy53My5vcmcvR3JhcGhpY3MvU1ZHLzEuMS9EVEQvc3ZnMTEuZHRkJz48c3ZnIGVuYWJsZS1iYWNrZ3JvdW5kPSJuZXcgMCAwIDY0IDY0IiBoZWlnaHQ9IjY0cHgiIGlkPSJMYXllcl8xIiB2ZXJzaW9uPSIxLjEiIHZpZXdCb3g9IjAgMCA2NCA2NCIgd2lkdGg9IjY0cHgiIHhtbDpzcGFjZT0icHJlc2VydmUiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgeG1sbnM6eGxpbms9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsiPjxnPjxnPjxwYXRoIGQ9Ik01MS43NTksMTIuNjU5Yy0wLjIyMS0wLjAyMS00Ljk0LTAuMzcxLTQuOTQtMC4zNzFzLTMuMjgtMy4yNzEtMy42MzktMy42MzEgICAgYy0wLjM2LTAuMzYyLTEuMDYzLTAuMjU0LTEuMzM3LTAuMTcxYy0wLjAzOSwwLjAxMS0wLjcxNSwwLjIyMi0xLjgzNCwwLjU2N2MtMS4wOTYtMy4xNjctMy4wMjctNi4wNzctNi40MjYtNi4wNzcgICAgYy0wLjA5NCwwLTAuMTkxLDAuMDA0LTAuMjg5LDAuMDFjLTAuOTY2LTEuMjgzLTIuMTY0LTEuODQ0LTMuMTk5LTEuODQ0Yy03LjkxOSwwLTExLjcwMyw5Ljk1MS0xMi44ODksMTUuMDA4ICAgIGMtMy4wNzgsMC45NTYtNS4yNjYsMS42MzgtNS41NDIsMS43MjhDOS45NDMsMTguNDIsOS44OSwxOC40NzQsOS42NjcsMjAuMUM5LjQ5NSwyMS4zMzEsNSw1Ni4yNjQsNSw1Ni4yNjRsMzUuMDIyLDYuNTk0ICAgIEw1OSw1OC43MzFjMCwwLTYuNjYxLTQ1LjI2MS02LjcwMy00NS41NzJDNTIuMjU1LDEyLjg0OSw1MS45ODMsMTIuNjc3LDUxLjc1OSwxMi42NTl6IE0zMy4wMzQsMTAuODggICAgYzAsMC4xMTktMC4wMDIsMC4yMzEtMC4wMDIsMC4zNDRjLTEuOTI4LDAuNjAxLTQuMDIsMS4yNTEtNi4xMjEsMS45MDZjMS4xNzktNC41NywzLjM4Ny02Ljc4LDUuMzItNy42MTMgICAgQzMyLjcxNiw2Ljc0MywzMy4wMzQsOC41MDUsMzMuMDM0LDEwLjg4eiBNMjkuODc2LDMuMjc4YzAuMzQ2LDAsMC42ODgsMC4xMTYsMS4wMTgsMC4zNDVjLTIuNTM5LDEuMTk5LTUuMjU4LDQuMjI0LTYuNDA4LDEwLjI2MSAgICBjLTEuNjc5LDAuNTIyLTMuMzE5LDEuMDM0LTQuODM4LDEuNTA2QzIwLjk5NCwxMC43ODMsMjQuMTg4LDMuMjc4LDI5Ljg3NiwzLjI3OHogTTMxLjI0MSwzMC4xOWMwLDAtMi4wNS0xLjA5OS00LjU2MS0xLjA5OSAgICBjLTMuNjg2LDAtMy44NzIsMi4zMjQtMy44NzIsMi45MDhjMCwzLjE5NSw4LjI4Nyw0LjQyLDguMjg3LDExLjkwM2MwLDUuODg4LTMuNzE0LDkuNjc4LTguNzI2LDkuNjc4ICAgIGMtNi4wMTIsMC05LjA4OC0zLjc2MS05LjA4OC0zLjc2MWwxLjYwOS01LjM0NWMwLDAsMy4xNiwyLjcyOSw1LjgzLDIuNzI5YzEuNzQsMCwyLjQ0OS0xLjM4LDIuNDQ5LTIuMzg3ICAgIGMwLTQuMTY4LTYuNzk5LTQuMzU0LTYuNzk5LTExLjIwM2MwLTUuNzYxLDQuMTE2LTExLjM0MSwxMi40MjgtMTEuMzQxYzMuMTk5LDAsNC43ODMsMC45MjMsNC43ODMsMC45MjNMMzEuMjQxLDMwLjE5eiAgICAgTTM1LjExLDEwLjU3OGMwLTAuMjExLDAuMDAyLTAuNDE3LDAuMDAyLTAuNjQ0YzAtMS45NjYtMC4yNzMtMy41NTEtMC43MDktNC44MDdjMS43NTIsMC4yMTksMi45MTksMi4yMjMsMy42Nyw0LjUyOCAgICBDMzcuMTk0LDkuOTMxLDM2LjE5NCwxMC4yNDEsMzUuMTEsMTAuNTc4eiIgZmlsbD0iIzk1QzY3NSIvPjwvZz48Zz48cGF0aCBkPSJNNTEuNzU5LDEyLjY1OWMtMC4yMjEtMC4wMjEtNC45NC0wLjM3MS00Ljk0LTAuMzcxcy0zLjI4LTMuMjcxLTMuNjM5LTMuNjMxICAgIGMtMC4zNi0wLjM2Mi0xLjA2My0wLjI1NC0xLjMzNy0wLjE3MWMtMC4wMzksMC4wMTEtMC43MTUsMC4yMjItMS44MzQsMC41NjdjLTEuMDk2LTMuMTY3LTMuMDI3LTYuMDc3LTYuNDI2LTYuMDc3ICAgIGMtMC4wOTQsMC0wLjE5MSwwLjAwNC0wLjI4OSwwLjAxYy0wLjk2Ni0xLjI4My0yLjE2NC0xLjg0NC0zLjE5OS0xLjg0NGMtNy45MTksMC05Ljg3Myw5Ljk1MS0xMS4wNTksMTUuMDA4ICAgIGMtMy4wNzgsMC45NTYtNS40NCw2LjIxOS01LjcxOSw2LjMwN2MtMS43MTksMC41NDItMS43NzIsMC41OTYtMS45OTYsMi4yMjNDMTEuMTQ4LDI1LjkxLDUsNTYuMjY0LDUsNTYuMjY0bDM1LjAyMiw2LjU5NCAgICBMNTksNTguNzMxYzAsMC02LjY2MS00NS4yNjEtNi43MDMtNDUuNTcyQzUyLjI1NSwxMi44NDksNTEuOTgzLDEyLjY3Nyw1MS43NTksMTIuNjU5eiBNMzMuMDM0LDEwLjg4ICAgIGMwLDAuMTE5LTAuMDAyLDAuMjMxLTAuMDAyLDAuMzQ0Yy0xLjkyOCwwLjYwMS00LjAyLDEuMjUxLTYuMTIxLDEuOTA2YzEuMTc5LTQuNTcsMy4zODctNi43OCw1LjMyLTcuNjEzICAgIEMzMi43MTYsNi43NDMsMzMuMDM0LDguNTA1LDMzLjAzNCwxMC44OHogTTI5Ljg3NiwzLjI3OGMwLjM0NiwwLDAuNjg4LDAuMTE2LDEuMDE4LDAuMzQ1Yy0yLjUzOSwxLjE5OS01LjI1OCw0LjIyNC02LjQwOCwxMC4yNjEgICAgYy0xLjY3OSwwLjUyMi0zLjMxOSwxLjAzNC00LjgzOCwxLjUwNkMyMC45OTQsMTAuNzgzLDI0LjE4OCwzLjI3OCwyOS44NzYsMy4yNzh6IE0zMS4yNDEsMzAuMTljMCwwLTIuMDUtMS4wOTktNC41NjEtMS4wOTkgICAgYy0zLjY4NiwwLTMuODcyLDIuMzI0LTMuODcyLDIuOTA4YzAsMy4xOTUsOC4yODcsNC40Miw4LjI4NywxMS45MDNjMCw1Ljg4OC0zLjcxNCw5LjY3OC04LjcyNiw5LjY3OCAgICBjLTYuMDEyLDAtOS4wODgtMy43NjEtOS4wODgtMy43NjFsMS42MDktNS4zNDVjMCwwLDMuMTYsMi43MjksNS44MywyLjcyOWMxLjc0LDAsMi40NDktMS4zOCwyLjQ0OS0yLjM4NyAgICBjMC00LjE2OC02Ljc5OS00LjM1NC02Ljc5OS0xMS4yMDNjMC01Ljc2MSw0LjExNi0xMS4zNDEsMTIuNDI4LTExLjM0MWMzLjE5OSwwLDQuNzgzLDAuOTIzLDQuNzgzLDAuOTIzTDMxLjI0MSwzMC4xOXogICAgIE0zNS4xMSwxMC41NzhjMC0wLjIxMSwwLjAwMi0wLjQxNywwLjAwMi0wLjY0NGMwLTEuOTY2LTAuMjczLTMuNTUxLTAuNzA5LTQuODA3YzEuNzUyLDAuMjE5LDIuOTE5LDIuMjIzLDMuNjcsNC41MjggICAgQzM3LjE5NCw5LjkzMSwzNi4xOTQsMTAuMjQxLDM1LjExLDEwLjU3OHoiIGZpbGw9IiM3OUIyNTkiLz48L2c+PHBhdGggZD0iTTQwLjAyMiw2Mi44NTdMNTksNTguNzMxYzAsMC02LjY2MS00NS4yNjEtNi43MDMtNDUuNTcyYy0wLjA0Mi0wLjMxMS0wLjMxMy0wLjQ4Mi0wLjUzOC0wLjUgICBjLTAuMjIxLTAuMDIxLTQuOTQtMC4zNzEtNC45NC0wLjM3MXMtMy4yOC0zLjI3MS0zLjYzOS0zLjYzMWMtMC4xOTItMC4xOTQtMC40NzktMC4yNDktMC43NS0wLjI1MSAgIGMtMC43MiwxLjIyLTAuNTcxLDMuNTM3LTAuNTcxLDMuNTM3bC0yLjIzMiw1MC44MzlMNDAuMDIyLDYyLjg1N3oiIGZpbGw9IiM1NTkzMkMiLz48cGF0aCBkPSJNMzMuNTgzLDIuOTc3Yy0wLjA5NCwwLTAuMTkxLDAuMDA0LTAuMjg5LDAuMDFjLTAuOTY2LTEuMjgzLTIuMTY0LTEuODQ0LTMuMTk5LTEuODQ0ICAgYy03Ljg4NywwLTExLjY3NCw5Ljg3My0xMi44NzUsMTQuOTQ3bDIuNDQ3LTAuNzU5YzEuMzU0LTQuNjA5LDQuNTQ1LTEyLjA1MywxMC4yMDktMTIuMDUzYzAuMzQ2LDAsMC42ODgsMC4xMTYsMS4wMTgsMC4zNDUgICBjLTIuNTMyLDEuMTk1LTUuMjQ0LDQuMjA5LTYuMzk4LDEwLjIxM2wyLjQzLTAuNzVjMS4xODItNC41NDEsMy4zODEtNi43MzksNS4zMDctNy41NjljMC40ODQsMS4yMjcsMC44MDMsMi45ODgsMC44MDMsNS4zNjMgICBjMCwwLjEwOCwwLDAuMjExLTAuMDAyLDAuMzE0bDIuMDc4LTAuNjQzYzAtMC4yLDAuMDAyLTAuNCwwLjAwMi0wLjYxN2MwLTEuOTY2LTAuMjczLTMuNTUxLTAuNzA5LTQuODA3ICAgYzEuNzQ2LDAuMjE4LDIuOTEyLDIuMjEzLDMuNjYyLDQuNTA4bDEuOTM4LTAuNjAxQzM4LjkwNiw1Ljg3NiwzNi45NzYsMi45NzcsMzMuNTgzLDIuOTc3eiIgZmlsbD0iIzRBN0EyQiIvPjxwYXRoIGQ9Ik00Ny42MTEsMTIuMzQ4Yy0wLjQ3NC0wLjAzNy0wLjc5My0wLjA2LTAuNzkzLTAuMDZzLTMuMjgtMy4yNzEtMy42MzktMy42MzEgICBjLTAuMTkyLTAuMTk0LTAuNDc5LTAuMjQ5LTAuNzUtMC4yNTFjLTAuNzIsMS4yMi0wLjU3MSwzLjUzNy0wLjU3MSwzLjUzN2wtMi4yMzIsNTAuODM5bDAuMzk2LDAuMDc1bDEwLjA5OC0yLjE5Nkw0Ny42MTEsMTIuMzQ4eiIgZmlsbD0iIzRDODIyQSIvPjwvZz48L3N2Zz4=",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Shopify"},{property:"og:description",content:"A Singer tap to fetch data from a Shopify account. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.Shopify.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Shopify"},{name:"twitter:description",content:"A Singer tap to fetch data from a Shopify account. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.Shopify.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.Shopify.html",relativePath:"plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.Shopify.md",key:"v-914861fa",path:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.Shopify.html",headers:[{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:151},{level:3,title:"apiKey",slug:"apikey",normalizedTitle:"apikey",charIndex:166},{level:3,title:"args",slug:"args",normalizedTitle:"args",charIndex:263},{level:3,title:"dockerOptions",slug:"dockeroptions",normalizedTitle:"dockeroptions",charIndex:406},{level:3,title:"env",slug:"env",normalizedTitle:"env",charIndex:520},{level:3,title:"exitOnFailed",slug:"exitonfailed",normalizedTitle:"exitonfailed",charIndex:660},{level:3,title:"files",slug:"files",normalizedTitle:"files",charIndex:1002},{level:3,title:"inputFiles",slug:"inputfiles",normalizedTitle:"inputfiles",charIndex:1190},{level:3,title:"interpreter",slug:"interpreter",normalizedTitle:"interpreter",charIndex:1585},{level:3,title:"interpreterArgs",slug:"interpreterargs",normalizedTitle:"interpreterargs",charIndex:1708},{level:3,title:"outputFiles",slug:"outputfiles",normalizedTitle:"outputfiles",charIndex:1157},{level:3,title:"outputsFiles",slug:"outputsfiles",normalizedTitle:"outputsfiles",charIndex:2266},{level:3,title:"pythonPath",slug:"pythonpath",normalizedTitle:"pythonpath",charIndex:2405},{level:3,title:"requirements",slug:"requirements",normalizedTitle:"requirements",charIndex:2577},{level:3,title:"runner",slug:"runner",normalizedTitle:"runner",charIndex:502},{level:3,title:"shop",slug:"shop",normalizedTitle:"shop",charIndex:2981},{level:3,title:"startDate",slug:"startdate",normalizedTitle:"startdate",charIndex:3092},{level:3,title:"streamsConfigurations",slug:"streamsconfigurations",normalizedTitle:"streamsconfigurations",charIndex:3340},{level:3,title:"warningOnStdErr",slug:"warningonstderr",normalizedTitle:"warningonstderr",charIndex:3498},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:3626},{level:3,title:"count",slug:"count",normalizedTitle:"count",charIndex:102},{level:3,title:"schemas",slug:"schemas",normalizedTitle:"schemas",charIndex:3687},{level:3,title:"state",slug:"state",normalizedTitle:"state",charIndex:830},{level:3,title:"streams",slug:"streams",normalizedTitle:"streams",charIndex:3340},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:4038},{level:3,title:"DockerOptions",slug:"dockeroptions-2",normalizedTitle:"dockeroptions",charIndex:430},{level:3,title:"StreamsConfiguration",slug:"streamsconfiguration",normalizedTitle:"streamsconfiguration",charIndex:3390}],headersStr:"Properties apiKey args dockerOptions env exitOnFailed files inputFiles interpreter interpreterArgs outputFiles outputsFiles pythonPath requirements runner shop startDate streamsConfigurations warningOnStdErr Outputs count schemas state streams Definitions DockerOptions StreamsConfiguration",content:'Shopify\n\ntype: "io.kestra.plugin.singer.taps.Shopify"\n\n\n> A Singer tap to fetch data from a Shopify account.\n\nFull documentation can be found here\n\n\n# Properties\n\n\n# apiKey\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> Shopify password.\n\n\n# args\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Python command args\n\nArguments list to pass to main python script\n\n\n# dockerOptions\n\n * Type: DockerOptions\n * Dynamic: ❓\n * Required: ❌\n\n> Docker options when using runner DOCKER\n\n\n# env\n\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Additional environnements variable to add for current process.\n\n\n# exitOnFailed\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Exit if any non true return value\n\nThis tells bash that it should exit the script if any statement returns a non-true return value.\nThe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n\n# files\n\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The list of files that will be uploaded to internal storage,\n\nuse outputFiles property instead\n\n\n# inputFiles\n\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Input files are extra files supplied by user that make it simpler organize code.\n\nDescribe a files map that will be written and usable in execution context. In python execution context is in a temp folder, for bash scripts, you can reach files using a workingDir variable like \'source {{workingDir}}/myfile.sh\'\n\n\n# interpreter\n\n * Type: string\n * Dynamic: ❌\n * Required: ✔️\n * Default: /bin/sh\n * Min length: 1\n\n> Interpreter to used\n\n\n# interpreterArgs\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n * Default: [-c]\n\n> Interpreter args used\n\n\n# outputFiles\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Output file list that will be uploaded to internal storage\n\nList of key that will generate temporary files.\nOn the command, just can use with special variable named outputFiles.key.\nIf you add a files with ["first"], you can use the special vars echo 1 >> {[ outputFiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n\n# outputsFiles\n\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Deprecated Output file\n\nuse outputFiles\n\n\n# pythonPath\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Default: python\n * Min length: 1\n\n> The python interpreter to use\n\nSet the python interpreter path to use\n\n\n# requirements\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Requirements are python dependencies to add to the python execution process\n\nPython dependencies list to setup in the virtualenv, in the same format than requirements.txt\n\n\n# runner\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ✔️\n\n * Default: PROCESS\n\n * Possible Values:\n   \n   * PROCESS\n   * DOCKER\n\n> Runner to use\n\n\n# shop\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> Shopify shop.\n\nEx. my-first-store\n\n\n# startDate\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> Determines how much historical data will be extracted.\n\nPlease be aware that the larger the time period and amount of data, the longer the initial extraction can be expected to take.\n\n\n# streamsConfigurations\n\n * Type: array\n * SubType: StreamsConfiguration\n * Dynamic: ❌\n * Required: ✔️\n * Min items: 1\n\n> The list of stream configurations\n\n\n# warningOnStdErr\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Use WARNING state if any stdErr is sent\n\n\n# Outputs\n\n\n# count\n\n * Type: object\n\n> Counter of streams\n\n\n# schemas\n\n * Type: object\n * SubType: string\n\n> Map of schemas captured\n\nKey is stream name, value is uri of the schema file on ion kestra storage\n\n\n# state\n\n * Type: string\n\n> Uri of the state file\n\n\n# streams\n\n * Type: object\n * SubType: string\n\n> Map of stream captured\n\nKey is stream name, value is uri of the stream file on ion kestra storage\n\n\n# Definitions\n\n\n# DockerOptions\n\n# dockerConfig\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker config file\n\nFull file that can be used to configure private registries, ...\n\n# dockerHost\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: unix:///var/run/docker.sock\n\n> Docker api uri\n\n# entryPoint\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker entrypoint to use\n\n# extraHosts\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker extra host to use\n\n# image\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> Docker image to use\n\n# user\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker user to use\n\n\n# StreamsConfiguration\n\n# propertiesPattern\n\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n\n# replicationKeys\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# replicationMethod\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Possible Values:\n   \n   * FULL_TABLE\n   * INCREMENTAL\n   * LOG_BASED\n\n# selected\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: true\n\n# stream\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌',normalizedContent:'shopify\n\ntype: "io.kestra.plugin.singer.taps.shopify"\n\n\n> a singer tap to fetch data from a shopify account.\n\nfull documentation can be found here\n\n\n# properties\n\n\n# apikey\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> shopify password.\n\n\n# args\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> python command args\n\narguments list to pass to main python script\n\n\n# dockeroptions\n\n * type: dockeroptions\n * dynamic: ❓\n * required: ❌\n\n> docker options when using runner docker\n\n\n# env\n\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> additional environnements variable to add for current process.\n\n\n# exitonfailed\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> exit if any non true return value\n\nthis tells bash that it should exit the script if any statement returns a non-true return value.\nthe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n\n# files\n\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> the list of files that will be uploaded to internal storage,\n\nuse outputfiles property instead\n\n\n# inputfiles\n\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> input files are extra files supplied by user that make it simpler organize code.\n\ndescribe a files map that will be written and usable in execution context. in python execution context is in a temp folder, for bash scripts, you can reach files using a workingdir variable like \'source {{workingdir}}/myfile.sh\'\n\n\n# interpreter\n\n * type: string\n * dynamic: ❌\n * required: ✔️\n * default: /bin/sh\n * min length: 1\n\n> interpreter to used\n\n\n# interpreterargs\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n * default: [-c]\n\n> interpreter args used\n\n\n# outputfiles\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> output file list that will be uploaded to internal storage\n\nlist of key that will generate temporary files.\non the command, just can use with special variable named outputfiles.key.\nif you add a files with ["first"], you can use the special vars echo 1 >> {[ outputfiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n\n# outputsfiles\n\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> deprecated output file\n\nuse outputfiles\n\n\n# pythonpath\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * default: python\n * min length: 1\n\n> the python interpreter to use\n\nset the python interpreter path to use\n\n\n# requirements\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> requirements are python dependencies to add to the python execution process\n\npython dependencies list to setup in the virtualenv, in the same format than requirements.txt\n\n\n# runner\n\n * type: string\n\n * dynamic: ❌\n\n * required: ✔️\n\n * default: process\n\n * possible values:\n   \n   * process\n   * docker\n\n> runner to use\n\n\n# shop\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> shopify shop.\n\nex. my-first-store\n\n\n# startdate\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> determines how much historical data will be extracted.\n\nplease be aware that the larger the time period and amount of data, the longer the initial extraction can be expected to take.\n\n\n# streamsconfigurations\n\n * type: array\n * subtype: streamsconfiguration\n * dynamic: ❌\n * required: ✔️\n * min items: 1\n\n> the list of stream configurations\n\n\n# warningonstderr\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> use warning state if any stderr is sent\n\n\n# outputs\n\n\n# count\n\n * type: object\n\n> counter of streams\n\n\n# schemas\n\n * type: object\n * subtype: string\n\n> map of schemas captured\n\nkey is stream name, value is uri of the schema file on ion kestra storage\n\n\n# state\n\n * type: string\n\n> uri of the state file\n\n\n# streams\n\n * type: object\n * subtype: string\n\n> map of stream captured\n\nkey is stream name, value is uri of the stream file on ion kestra storage\n\n\n# definitions\n\n\n# dockeroptions\n\n# dockerconfig\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> docker config file\n\nfull file that can be used to configure private registries, ...\n\n# dockerhost\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n * default: unix:///var/run/docker.sock\n\n> docker api uri\n\n# entrypoint\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> docker entrypoint to use\n\n# extrahosts\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> docker extra host to use\n\n# image\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> docker image to use\n\n# user\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> docker user to use\n\n\n# streamsconfiguration\n\n# propertiespattern\n\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n\n# replicationkeys\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# replicationmethod\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * possible values:\n   \n   * full_table\n   * incremental\n   * log_based\n\n# selected\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: true\n\n# stream\n\n * type: string\n * dynamic: ❓\n * required: ❌',charsets:{}},{title:"Slack",frontmatter:{title:"Slack",editLink:!1,description:"A Singer tap to fetch data from a GitHub api.",icon:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB2aWV3Qm94PSIwIDAgMTUwLjg1MiAxNTAuODUyIiBmaWxsPSIjZmZmIiBmaWxsLXJ1bGU9ImV2ZW5vZGQiIHN0cm9rZT0iIzAwMCIgc3Ryb2tlLWxpbmVjYXA9InJvdW5kIiBzdHJva2UtbGluZWpvaW49InJvdW5kIj48dXNlIHhsaW5rOmhyZWY9IiNBIiB4PSIuOTI2IiB5PSIuOTI2Ii8+PHN5bWJvbCBpZD0iQSIgb3ZlcmZsb3c9InZpc2libGUiPjxnIHN0cm9rZS13aWR0aD0iMS44NTIiPjxwYXRoIGQ9Ik00MC43NDEgOTMuNTVjMC04LjczNSA2LjYwNy0xNS43NzIgMTQuODE1LTE1Ljc3MnMxNC44MTUgNy4wMzcgMTQuODE1IDE1Ljc3MnYzOC44MjRjMCA4LjczNy02LjYwNyAxNS43NzQtMTQuODE1IDE1Ljc3NHMtMTQuODE1LTcuMDM3LTE0LjgxNS0xNS43NzJ6IiBmaWxsPSIjZTAxZTVhIiBzdHJva2U9IiNlMDFlNWEiLz48cGF0aCBkPSJNOTMuNTUgMTA3LjQwOGMtOC43MzUgMC0xNS43NzItNi42MDctMTUuNzcyLTE0LjgxNXM3LjAzNy0xNC44MTUgMTUuNzcyLTE0LjgxNWgzOC44MjZjOC43MzUgMCAxNS43NzIgNi42MDcgMTUuNzcyIDE0LjgxNXMtNy4wMzcgMTQuODE1LTE1Ljc3MiAxNC44MTV6IiBmaWxsPSIjZWNiMjJkIiBzdHJva2U9IiNlY2IyMmQiLz48cGF0aCBkPSJNNzcuNzc4IDE1Ljc3MkM3Ny43NzggNy4wMzcgODQuMzg1IDAgOTIuNTkzIDBzMTQuODE1IDcuMDM3IDE0LjgxNSAxNS43NzJ2MzguODI2YzAgOC43MzUtNi42MDcgMTUuNzcyLTE0LjgxNSAxNS43NzJzLTE0LjgxNS03LjAzNy0xNC44MTUtMTUuNzcyeiIgZmlsbD0iIzJmYjY3YyIgc3Ryb2tlPSIjMmZiNjdjIi8+PHBhdGggZD0iTTE1Ljc3MiA3MC4zNzFDNy4wMzcgNzAuMzcxIDAgNjMuNzYzIDAgNTUuNTU2czcuMDM3LTE0LjgxNSAxNS43NzItMTQuODE1aDM4LjgyNmM4LjczNSAwIDE1Ljc3MiA2LjYwNyAxNS43NzIgMTQuODE1cy03LjAzNyAxNC44MTUtMTUuNzcyIDE0LjgxNXoiIGZpbGw9IiMzNmM1ZjEiIHN0cm9rZT0iIzM2YzVmMSIvPjxnIHN0cm9rZS1saW5lam9pbj0ibWl0ZXIiPjxwYXRoIGQ9Ik03Ny43NzggMTMzLjMzM2MwIDguMjA4IDYuNjA3IDE0LjgxNSAxNC44MTUgMTQuODE1czE0LjgxNS02LjYwNyAxNC44MTUtMTQuODE1LTYuNjA3LTE0LjgxNS0xNC44MTUtMTQuODE1SDc3Ljc3OHoiIGZpbGw9IiNlY2IyMmQiIHN0cm9rZT0iI2VjYjIyZCIvPjxwYXRoIGQ9Ik0xMzMuMzM0IDcwLjM3MWgtMTQuODE1VjU1LjU1NmMwLTguMjA3IDYuNjA3LTE0LjgxNSAxNC44MTUtMTQuODE1czE0LjgxNSA2LjYwNyAxNC44MTUgMTQuODE1LTYuNjA3IDE0LjgxNS0xNC44MTUgMTQuODE1eiIgZmlsbD0iIzJmYjY3YyIgc3Ryb2tlPSIjMmZiNjdjIi8+PHBhdGggZD0iTTE0LjgxNSA3Ny43NzhIMjkuNjN2MTQuODE1YzAgOC4yMDctNi42MDcgMTQuODE1LTE0LjgxNSAxNC44MTVTMCAxMDAuOCAwIDkyLjU5M3M2LjYwNy0xNC44MTUgMTQuODE1LTE0LjgxNXoiIGZpbGw9IiNlMDFlNWEiIHN0cm9rZT0iI2UwMWU1YSIvPjxwYXRoIGQ9Ik03MC4zNzEgMTQuODE1VjI5LjYzSDU1LjU1NmMtOC4yMDcgMC0xNC44MTUtNi42MDctMTQuODE1LTE0LjgxNVM0Ny4zNDggMCA1NS41NTYgMHMxNC44MTUgNi42MDcgMTQuODE1IDE0LjgxNXoiIGZpbGw9IiMzNmM1ZjEiIHN0cm9rZT0iIzM2YzVmMSIvPjwvZz48L2c+PC9zeW1ib2w+PC9zdmc+",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Slack"},{property:"og:description",content:"A Singer tap to fetch data from a GitHub api. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.Slack.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Slack"},{name:"twitter:description",content:"A Singer tap to fetch data from a GitHub api. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.Slack.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.Slack.html",relativePath:"plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.Slack.md",key:"v-1057d903",path:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.Slack.html",headers:[{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:142},{level:3,title:"apiToken",slug:"apitoken",normalizedTitle:"apitoken",charIndex:157},{level:3,title:"archivedChannels",slug:"archivedchannels",normalizedTitle:"archivedchannels",charIndex:404},{level:3,title:"args",slug:"args",normalizedTitle:"args",charIndex:755},{level:3,title:"channels",slug:"channels",normalizedTitle:"channels",charIndex:559},{level:3,title:"dateWindowSize",slug:"datewindowsize",normalizedTitle:"datewindowsize",charIndex:1282},{level:3,title:"dockerOptions",slug:"dockeroptions",normalizedTitle:"dockeroptions",charIndex:1629},{level:3,title:"env",slug:"env",normalizedTitle:"env",charIndex:1743},{level:3,title:"exitOnFailed",slug:"exitonfailed",normalizedTitle:"exitonfailed",charIndex:1883},{level:3,title:"files",slug:"files",normalizedTitle:"files",charIndex:1463},{level:3,title:"inputFiles",slug:"inputfiles",normalizedTitle:"inputfiles",charIndex:2413},{level:3,title:"interpreter",slug:"interpreter",normalizedTitle:"interpreter",charIndex:2808},{level:3,title:"interpreterArgs",slug:"interpreterargs",normalizedTitle:"interpreterargs",charIndex:2931},{level:3,title:"outputFiles",slug:"outputfiles",normalizedTitle:"outputfiles",charIndex:2380},{level:3,title:"outputsFiles",slug:"outputsfiles",normalizedTitle:"outputsfiles",charIndex:3489},{level:3,title:"privateChannels",slug:"privatechannels",normalizedTitle:"privatechannels",charIndex:3628},{level:3,title:"publicChannels",slug:"publicchannels",normalizedTitle:"publicchannels",charIndex:3790},{level:3,title:"pythonPath",slug:"pythonpath",normalizedTitle:"pythonpath",charIndex:3986},{level:3,title:"requirements",slug:"requirements",normalizedTitle:"requirements",charIndex:4158},{level:3,title:"runner",slug:"runner",normalizedTitle:"runner",charIndex:1725},{level:3,title:"startDate",slug:"startdate",normalizedTitle:"startdate",charIndex:4562},{level:3,title:"streamsConfigurations",slug:"streamsconfigurations",normalizedTitle:"streamsconfigurations",charIndex:4810},{level:3,title:"warningOnStdErr",slug:"warningonstderr",normalizedTitle:"warningonstderr",charIndex:4968},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:5096},{level:3,title:"count",slug:"count",normalizedTitle:"count",charIndex:290},{level:3,title:"schemas",slug:"schemas",normalizedTitle:"schemas",charIndex:5157},{level:3,title:"state",slug:"state",normalizedTitle:"state",charIndex:2053},{level:3,title:"streams",slug:"streams",normalizedTitle:"streams",charIndex:1444},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:5508},{level:3,title:"DockerOptions",slug:"dockeroptions-2",normalizedTitle:"dockeroptions",charIndex:1653},{level:3,title:"StreamsConfiguration",slug:"streamsconfiguration",normalizedTitle:"streamsconfiguration",charIndex:4860}],headersStr:"Properties apiToken archivedChannels args channels dateWindowSize dockerOptions env exitOnFailed files inputFiles interpreter interpreterArgs outputFiles outputsFiles privateChannels publicChannels pythonPath requirements runner startDate streamsConfigurations warningOnStdErr Outputs count schemas state streams Definitions DockerOptions StreamsConfiguration",content:'Slack\n\ntype: "io.kestra.plugin.singer.taps.Slack"\n\n\n> A Singer tap to fetch data from a GitHub api.\n\nFull documentation can be found here\n\n\n# Properties\n\n\n# apiToken\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> a GitHub personnal access token\n\nLogin to your GitHub account, go to the Personal Access Tokens settings page, and generate a new token with at least the repo scope.\n\n\n# archivedChannels\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n * Default: false\n\n> Sync Archived Channels.\n\nSpecifies whether the tap will sync archived channels or not. Note that a bot cannot join an archived channel, so unless the bot was added to the channel prior to it being archived it will not be able to sync the data from that channel.\n\n\n# args\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Python command args\n\nArguments list to pass to main python script\n\n\n# channels\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Channels to Sync.\n\nBy default the tap will sync all channels it has been invited to, but this can be overriden to limit it ot specific channels. Note this needs to be channel ID, not the name, as recommended by the Slack API. To get the ID for a channel, either use the Slack API or find it in the URL.\n\n\n# dateWindowSize\n\n * Type: integer\n * Dynamic: ❌\n * Required: ❌\n * Default: 7\n\n> Channels to Sync.\n\nDue to the potentially high volume of data when syncing certain streams (messages, files, threads) this tap implements date windowing based on a configuration parameter.5 means the tap to sync 5 days of data per request, for applicable streams.\n\n\n# dockerOptions\n\n * Type: DockerOptions\n * Dynamic: ❓\n * Required: ❌\n\n> Docker options when using runner DOCKER\n\n\n# env\n\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Additional environnements variable to add for current process.\n\n\n# exitOnFailed\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Exit if any non true return value\n\nThis tells bash that it should exit the script if any statement returns a non-true return value.\nThe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n\n# files\n\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The list of files that will be uploaded to internal storage,\n\nuse outputFiles property instead\n\n\n# inputFiles\n\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Input files are extra files supplied by user that make it simpler organize code.\n\nDescribe a files map that will be written and usable in execution context. In python execution context is in a temp folder, for bash scripts, you can reach files using a workingDir variable like \'source {{workingDir}}/myfile.sh\'\n\n\n# interpreter\n\n * Type: string\n * Dynamic: ❌\n * Required: ✔️\n * Default: /bin/sh\n * Min length: 1\n\n> Interpreter to used\n\n\n# interpreterArgs\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n * Default: [-c]\n\n> Interpreter args used\n\n\n# outputFiles\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Output file list that will be uploaded to internal storage\n\nList of key that will generate temporary files.\nOn the command, just can use with special variable named outputFiles.key.\nIf you add a files with ["first"], you can use the special vars echo 1 >> {[ outputFiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n\n# outputsFiles\n\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Deprecated Output file\n\nuse outputFiles\n\n\n# privateChannels\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n * Default: true\n\n> Join Private Channels.\n\nSpecifies whether to sync private channels or not.\n\n\n# publicChannels\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n * Default: false\n\n> Join Public Channels.\n\nSpecifies whether to have the tap auto-join all public channels in your ogranziation.\n\n\n# pythonPath\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Default: python\n * Min length: 1\n\n> The python interpreter to use\n\nSet the python interpreter path to use\n\n\n# requirements\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Requirements are python dependencies to add to the python execution process\n\nPython dependencies list to setup in the virtualenv, in the same format than requirements.txt\n\n\n# runner\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ✔️\n\n * Default: PROCESS\n\n * Possible Values:\n   \n   * PROCESS\n   * DOCKER\n\n> Runner to use\n\n\n# startDate\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> Determines how much historical data will be extracted.\n\nPlease be aware that the larger the time period and amount of data, the longer the initial extraction can be expected to take.\n\n\n# streamsConfigurations\n\n * Type: array\n * SubType: StreamsConfiguration\n * Dynamic: ❌\n * Required: ✔️\n * Min items: 1\n\n> The list of stream configurations\n\n\n# warningOnStdErr\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Use WARNING state if any stdErr is sent\n\n\n# Outputs\n\n\n# count\n\n * Type: object\n\n> Counter of streams\n\n\n# schemas\n\n * Type: object\n * SubType: string\n\n> Map of schemas captured\n\nKey is stream name, value is uri of the schema file on ion kestra storage\n\n\n# state\n\n * Type: string\n\n> Uri of the state file\n\n\n# streams\n\n * Type: object\n * SubType: string\n\n> Map of stream captured\n\nKey is stream name, value is uri of the stream file on ion kestra storage\n\n\n# Definitions\n\n\n# DockerOptions\n\n# dockerConfig\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker config file\n\nFull file that can be used to configure private registries, ...\n\n# dockerHost\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: unix:///var/run/docker.sock\n\n> Docker api uri\n\n# entryPoint\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker entrypoint to use\n\n# extraHosts\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker extra host to use\n\n# image\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> Docker image to use\n\n# user\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker user to use\n\n\n# StreamsConfiguration\n\n# propertiesPattern\n\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n\n# replicationKeys\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# replicationMethod\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Possible Values:\n   \n   * FULL_TABLE\n   * INCREMENTAL\n   * LOG_BASED\n\n# selected\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: true\n\n# stream\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌',normalizedContent:'slack\n\ntype: "io.kestra.plugin.singer.taps.slack"\n\n\n> a singer tap to fetch data from a github api.\n\nfull documentation can be found here\n\n\n# properties\n\n\n# apitoken\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> a github personnal access token\n\nlogin to your github account, go to the personal access tokens settings page, and generate a new token with at least the repo scope.\n\n\n# archivedchannels\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n * default: false\n\n> sync archived channels.\n\nspecifies whether the tap will sync archived channels or not. note that a bot cannot join an archived channel, so unless the bot was added to the channel prior to it being archived it will not be able to sync the data from that channel.\n\n\n# args\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> python command args\n\narguments list to pass to main python script\n\n\n# channels\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> channels to sync.\n\nby default the tap will sync all channels it has been invited to, but this can be overriden to limit it ot specific channels. note this needs to be channel id, not the name, as recommended by the slack api. to get the id for a channel, either use the slack api or find it in the url.\n\n\n# datewindowsize\n\n * type: integer\n * dynamic: ❌\n * required: ❌\n * default: 7\n\n> channels to sync.\n\ndue to the potentially high volume of data when syncing certain streams (messages, files, threads) this tap implements date windowing based on a configuration parameter.5 means the tap to sync 5 days of data per request, for applicable streams.\n\n\n# dockeroptions\n\n * type: dockeroptions\n * dynamic: ❓\n * required: ❌\n\n> docker options when using runner docker\n\n\n# env\n\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> additional environnements variable to add for current process.\n\n\n# exitonfailed\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> exit if any non true return value\n\nthis tells bash that it should exit the script if any statement returns a non-true return value.\nthe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n\n# files\n\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> the list of files that will be uploaded to internal storage,\n\nuse outputfiles property instead\n\n\n# inputfiles\n\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> input files are extra files supplied by user that make it simpler organize code.\n\ndescribe a files map that will be written and usable in execution context. in python execution context is in a temp folder, for bash scripts, you can reach files using a workingdir variable like \'source {{workingdir}}/myfile.sh\'\n\n\n# interpreter\n\n * type: string\n * dynamic: ❌\n * required: ✔️\n * default: /bin/sh\n * min length: 1\n\n> interpreter to used\n\n\n# interpreterargs\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n * default: [-c]\n\n> interpreter args used\n\n\n# outputfiles\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> output file list that will be uploaded to internal storage\n\nlist of key that will generate temporary files.\non the command, just can use with special variable named outputfiles.key.\nif you add a files with ["first"], you can use the special vars echo 1 >> {[ outputfiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n\n# outputsfiles\n\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> deprecated output file\n\nuse outputfiles\n\n\n# privatechannels\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n * default: true\n\n> join private channels.\n\nspecifies whether to sync private channels or not.\n\n\n# publicchannels\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n * default: false\n\n> join public channels.\n\nspecifies whether to have the tap auto-join all public channels in your ogranziation.\n\n\n# pythonpath\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * default: python\n * min length: 1\n\n> the python interpreter to use\n\nset the python interpreter path to use\n\n\n# requirements\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> requirements are python dependencies to add to the python execution process\n\npython dependencies list to setup in the virtualenv, in the same format than requirements.txt\n\n\n# runner\n\n * type: string\n\n * dynamic: ❌\n\n * required: ✔️\n\n * default: process\n\n * possible values:\n   \n   * process\n   * docker\n\n> runner to use\n\n\n# startdate\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> determines how much historical data will be extracted.\n\nplease be aware that the larger the time period and amount of data, the longer the initial extraction can be expected to take.\n\n\n# streamsconfigurations\n\n * type: array\n * subtype: streamsconfiguration\n * dynamic: ❌\n * required: ✔️\n * min items: 1\n\n> the list of stream configurations\n\n\n# warningonstderr\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> use warning state if any stderr is sent\n\n\n# outputs\n\n\n# count\n\n * type: object\n\n> counter of streams\n\n\n# schemas\n\n * type: object\n * subtype: string\n\n> map of schemas captured\n\nkey is stream name, value is uri of the schema file on ion kestra storage\n\n\n# state\n\n * type: string\n\n> uri of the state file\n\n\n# streams\n\n * type: object\n * subtype: string\n\n> map of stream captured\n\nkey is stream name, value is uri of the stream file on ion kestra storage\n\n\n# definitions\n\n\n# dockeroptions\n\n# dockerconfig\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> docker config file\n\nfull file that can be used to configure private registries, ...\n\n# dockerhost\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n * default: unix:///var/run/docker.sock\n\n> docker api uri\n\n# entrypoint\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> docker entrypoint to use\n\n# extrahosts\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> docker extra host to use\n\n# image\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> docker image to use\n\n# user\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> docker user to use\n\n\n# streamsconfiguration\n\n# propertiespattern\n\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n\n# replicationkeys\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# replicationmethod\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * possible values:\n   \n   * full_table\n   * incremental\n   * log_based\n\n# selected\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: true\n\n# stream\n\n * type: string\n * dynamic: ❓\n * required: ❌',charsets:{}},{title:"Stripe",frontmatter:{title:"Stripe",editLink:!1,description:"A Singer tap to fetch data from a Stripe account.",icon:"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPHN2ZyB3aWR0aD0iNTEycHgiIGhlaWdodD0iMjE0cHgiIHZpZXdCb3g9IjAgMCA1MTIgMjE0IiB2ZXJzaW9uPSIxLjEiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgeG1sbnM6eGxpbms9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsiIHByZXNlcnZlQXNwZWN0UmF0aW89InhNaWRZTWlkIj4KICAgIDxnPgogICAgICAgIDxwYXRoIGQ9Ik0zNS45ODIyMjIyLDgzLjQ4NDQ0NDQgQzM1Ljk4MjIyMjIsNzcuOTM3Nzc3OCA0MC41MzMzMzMzLDc1LjgwNDQ0NDQgNDguMDcxMTExMSw3NS44MDQ0NDQ0IEM1OC44OCw3NS44MDQ0NDQ0IDcyLjUzMzMzMzMsNzkuMDc1NTU1NiA4My4zNDIyMjIyLDg0LjkwNjY2NjcgTDgzLjM0MjIyMjIsNTEuNDg0NDQ0NCBDNzEuNTM3Nzc3OCw0Ni43OTExMTExIDU5Ljg3NTU1NTYsNDQuOTQyMjIyMiA0OC4wNzExMTExLDQ0Ljk0MjIyMjIgQzE5LjIsNDQuOTQyMjIyMiAwLDYwLjAxNzc3NzggMCw4NS4xOTExMTExIEMwLDEyNC40NDQ0NDQgNTQuMDQ0NDQ0NCwxMTguMTg2NjY3IDU0LjA0NDQ0NDQsMTM1LjExMTExMSBDNTQuMDQ0NDQ0NCwxNDEuNjUzMzMzIDQ4LjM1NTU1NTYsMTQzLjc4NjY2NyA0MC4zOTExMTExLDE0My43ODY2NjcgQzI4LjU4NjY2NjcsMTQzLjc4NjY2NyAxMy41MTExMTExLDEzOC45NTExMTEgMS41NjQ0NDQ0NCwxMzIuNDA4ODg5IEwxLjU2NDQ0NDQ0LDE2Ni4yNTc3NzggQzE0Ljc5MTExMTEsMTcxLjk0NjY2NyAyOC4xNiwxNzQuMzY0NDQ0IDQwLjM5MTExMTEsMTc0LjM2NDQ0NCBDNjkuOTczMzMzMywxNzQuMzY0NDQ0IDkwLjMxMTExMTEsMTU5LjcxNTU1NiA5MC4zMTExMTExLDEzNC4yNTc3NzggQzkwLjE2ODg4ODksOTEuODc1NTU1NiAzNS45ODIyMjIyLDk5LjQxMzMzMzMgMzUuOTgyMjIyMiw4My40ODQ0NDQ0IFogTTEzMi4xMjQ0NDQsMTYuNDk3Nzc3OCBMOTcuNDIyMjIyMiwyMy44OTMzMzMzIEw5Ny4yOCwxMzcuODEzMzMzIEM5Ny4yOCwxNTguODYyMjIyIDExMy4wNjY2NjcsMTc0LjM2NDQ0NCAxMzQuMTE1NTU2LDE3NC4zNjQ0NDQgQzE0NS43Nzc3NzgsMTc0LjM2NDQ0NCAxNTQuMzExMTExLDE3Mi4yMzExMTEgMTU5LjAwNDQ0NCwxNjkuNjcxMTExIEwxNTkuMDA0NDQ0LDE0MC44IEMxNTQuNDUzMzMzLDE0Mi42NDg4ODkgMTMxLjk4MjIyMiwxNDkuMTkxMTExIDEzMS45ODIyMjIsMTI4LjE0MjIyMiBMMTMxLjk4MjIyMiw3Ny42NTMzMzMzIEwxNTkuMDA0NDQ0LDc3LjY1MzMzMzMgTDE1OS4wMDQ0NDQsNDcuMzYgTDEzMS45ODIyMjIsNDcuMzYgTDEzMi4xMjQ0NDQsMTYuNDk3Nzc3OCBaIE0yMDMuMjM1NTU2LDU3Ljg4NDQ0NDQgTDIwMC45Niw0Ny4zNiBMMTcwLjI0LDQ3LjM2IEwxNzAuMjQsMTcxLjgwNDQ0NCBMMjA1Ljc5NTU1NiwxNzEuODA0NDQ0IEwyMDUuNzk1NTU2LDg3LjQ2NjY2NjcgQzIxNC4xODY2NjcsNzYuNTE1NTU1NiAyMjguNDA4ODg5LDc4LjUwNjY2NjcgMjMyLjgxNzc3OCw4MC4wNzExMTExIEwyMzIuODE3Nzc4LDQ3LjM2IEMyMjguMjY2NjY3LDQ1LjY1MzMzMzMgMjExLjYyNjY2Nyw0Mi41MjQ0NDQ0IDIwMy4yMzU1NTYsNTcuODg0NDQ0NCBaIE0yNDEuNDkzMzMzLDQ3LjM2IEwyNzcuMTkxMTExLDQ3LjM2IEwyNzcuMTkxMTExLDE3MS44MDQ0NDQgTDI0MS40OTMzMzMsMTcxLjgwNDQ0NCBMMjQxLjQ5MzMzMyw0Ny4zNiBaIE0yNDEuNDkzMzMzLDM2LjU1MTExMTEgTDI3Ny4xOTExMTEsMjguODcxMTExMSBMMjc3LjE5MTExMSwwIEwyNDEuNDkzMzMzLDcuNTM3Nzc3NzggTDI0MS40OTMzMzMsMzYuNTUxMTExMSBaIE0zNTEuNDMxMTExLDQ0Ljk0MjIyMjIgQzMzNy40OTMzMzMsNDQuOTQyMjIyMiAzMjguNTMzMzMzLDUxLjQ4NDQ0NDQgMzIzLjU1NTU1Niw1Ni4wMzU1NTU2IEwzMjEuNzA2NjY3LDQ3LjIxNzc3NzggTDI5MC40MTc3NzgsNDcuMjE3Nzc3OCBMMjkwLjQxNzc3OCwyMTMuMDQ4ODg5IEwzMjUuOTczMzMzLDIwNS41MTExMTEgTDMyNi4xMTU1NTYsMTY1LjI2MjIyMiBDMzMxLjIzNTU1NiwxNjguOTYgMzM4Ljc3MzMzMywxNzQuMjIyMjIyIDM1MS4yODg4ODksMTc0LjIyMjIyMiBDMzc2Ljc0NjY2NywxNzQuMjIyMjIyIDM5OS45Mjg4ODksMTUzLjc0MjIyMiAzOTkuOTI4ODg5LDEwOC42NTc3NzggQzM5OS43ODY2NjcsNjcuNDEzMzMzMyAzNzYuMzIsNDQuOTQyMjIyMiAzNTEuNDMxMTExLDQ0Ljk0MjIyMjIgWiBNMzQyLjg5Nzc3OCwxNDIuOTMzMzMzIEMzMzQuNTA2NjY3LDE0Mi45MzMzMzMgMzI5LjUyODg4OSwxMzkuOTQ2NjY3IDMyNi4xMTU1NTYsMTM2LjI0ODg4OSBMMzI1Ljk3MzMzMyw4My40ODQ0NDQ0IEMzMjkuNjcxMTExLDc5LjM2IDMzNC43OTExMTEsNzYuNTE1NTU1NiAzNDIuODk3Nzc4LDc2LjUxNTU1NTYgQzM1NS44NCw3Ni41MTU1NTU2IDM2NC44LDkxLjAyMjIyMjIgMzY0LjgsMTA5LjY1MzMzMyBDMzY0LjgsMTI4LjcxMTExMSAzNTUuOTgyMjIyLDE0Mi45MzMzMzMgMzQyLjg5Nzc3OCwxNDIuOTMzMzMzIFogTTUxMiwxMTAuMDggQzUxMiw3My42NzExMTExIDQ5NC4zNjQ0NDQsNDQuOTQyMjIyMiA0NjAuNjU3Nzc4LDQ0Ljk0MjIyMjIgQzQyNi44MDg4ODksNDQuOTQyMjIyMiA0MDYuMzI4ODg5LDczLjY3MTExMTEgNDA2LjMyODg4OSwxMDkuNzk1NTU2IEM0MDYuMzI4ODg5LDE1Mi42MDQ0NDQgNDMwLjUwNjY2NywxNzQuMjIyMjIyIDQ2NS4yMDg4ODksMTc0LjIyMjIyMiBDNDgyLjEzMzMzMywxNzQuMjIyMjIyIDQ5NC45MzMzMzMsMTcwLjM4MjIyMiA1MDQuNjA0NDQ0LDE2NC45Nzc3NzggTDUwNC42MDQ0NDQsMTM2LjUzMzMzMyBDNDk0LjkzMzMzMywxNDEuMzY4ODg5IDQ4My44NCwxNDQuMzU1NTU2IDQ2OS43NiwxNDQuMzU1NTU2IEM0NTUuOTY0NDQ0LDE0NC4zNTU1NTYgNDQzLjczMzMzMywxMzkuNTIgNDQyLjE2ODg4OSwxMjIuNzM3Nzc4IEw1MTEuNzE1NTU2LDEyMi43Mzc3NzggQzUxMS43MTU1NTYsMTIwLjg4ODg4OSA1MTIsMTEzLjQ5MzMzMyA1MTIsMTEwLjA4IFogTTQ0MS43NDIyMjIsOTYuNTY4ODg4OSBDNDQxLjc0MjIyMiw4MC40OTc3Nzc4IDQ1MS41NTU1NTYsNzMuODEzMzMzMyA0NjAuNTE1NTU2LDczLjgxMzMzMzMgQzQ2OS4xOTExMTEsNzMuODEzMzMzMyA0NzguNDM1NTU2LDgwLjQ5Nzc3NzggNDc4LjQzNTU1Niw5Ni41Njg4ODg5IEw0NDEuNzQyMjIyLDk2LjU2ODg4ODkgTDQ0MS43NDIyMjIsOTYuNTY4ODg4OSBaIiBmaWxsPSIjNjc3MkU1Ij48L3BhdGg+CiAgICA8L2c+Cjwvc3ZnPgo=",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Stripe"},{property:"og:description",content:"A Singer tap to fetch data from a Stripe account. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.Stripe.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Stripe"},{name:"twitter:description",content:"A Singer tap to fetch data from a Stripe account. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.Stripe.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.Stripe.html",relativePath:"plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.Stripe.md",key:"v-3487036a",path:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.Stripe.html",headers:[{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:148},{level:3,title:"accountId",slug:"accountid",normalizedTitle:"accountid",charIndex:163},{level:3,title:"args",slug:"args",normalizedTitle:"args",charIndex:285},{level:3,title:"clientSecret",slug:"clientsecret",normalizedTitle:"clientsecret",charIndex:428},{level:3,title:"dockerOptions",slug:"dockeroptions",normalizedTitle:"dockeroptions",charIndex:536},{level:3,title:"env",slug:"env",normalizedTitle:"env",charIndex:650},{level:3,title:"exitOnFailed",slug:"exitonfailed",normalizedTitle:"exitonfailed",charIndex:790},{level:3,title:"files",slug:"files",normalizedTitle:"files",charIndex:1132},{level:3,title:"inputFiles",slug:"inputfiles",normalizedTitle:"inputfiles",charIndex:1320},{level:3,title:"interpreter",slug:"interpreter",normalizedTitle:"interpreter",charIndex:1715},{level:3,title:"interpreterArgs",slug:"interpreterargs",normalizedTitle:"interpreterargs",charIndex:1838},{level:3,title:"outputFiles",slug:"outputfiles",normalizedTitle:"outputfiles",charIndex:1287},{level:3,title:"outputsFiles",slug:"outputsfiles",normalizedTitle:"outputsfiles",charIndex:2396},{level:3,title:"pythonPath",slug:"pythonpath",normalizedTitle:"pythonpath",charIndex:2535},{level:3,title:"requirements",slug:"requirements",normalizedTitle:"requirements",charIndex:2707},{level:3,title:"runner",slug:"runner",normalizedTitle:"runner",charIndex:632},{level:3,title:"startDate",slug:"startdate",normalizedTitle:"startdate",charIndex:3111},{level:3,title:"streamsConfigurations",slug:"streamsconfigurations",normalizedTitle:"streamsconfigurations",charIndex:3359},{level:3,title:"warningOnStdErr",slug:"warningonstderr",normalizedTitle:"warningonstderr",charIndex:3517},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:3645},{level:3,title:"count",slug:"count",normalizedTitle:"count",charIndex:99},{level:3,title:"schemas",slug:"schemas",normalizedTitle:"schemas",charIndex:3706},{level:3,title:"state",slug:"state",normalizedTitle:"state",charIndex:960},{level:3,title:"streams",slug:"streams",normalizedTitle:"streams",charIndex:3359},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:4057},{level:3,title:"DockerOptions",slug:"dockeroptions-2",normalizedTitle:"dockeroptions",charIndex:560},{level:3,title:"StreamsConfiguration",slug:"streamsconfiguration",normalizedTitle:"streamsconfiguration",charIndex:3409}],headersStr:"Properties accountId args clientSecret dockerOptions env exitOnFailed files inputFiles interpreter interpreterArgs outputFiles outputsFiles pythonPath requirements runner startDate streamsConfigurations warningOnStdErr Outputs count schemas state streams Definitions DockerOptions StreamsConfiguration",content:'Stripe\n\ntype: "io.kestra.plugin.singer.taps.Stripe"\n\n\n> A Singer tap to fetch data from a Stripe account.\n\nFull documentation can be found here\n\n\n# Properties\n\n\n# accountId\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> Stripe account id.\n\nEx. acct_1a2b3c4d5e\n\n\n# args\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Python command args\n\nArguments list to pass to main python script\n\n\n# clientSecret\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> Stripe secret API key.\n\n\n# dockerOptions\n\n * Type: DockerOptions\n * Dynamic: ❓\n * Required: ❌\n\n> Docker options when using runner DOCKER\n\n\n# env\n\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Additional environnements variable to add for current process.\n\n\n# exitOnFailed\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Exit if any non true return value\n\nThis tells bash that it should exit the script if any statement returns a non-true return value.\nThe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n\n# files\n\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The list of files that will be uploaded to internal storage,\n\nuse outputFiles property instead\n\n\n# inputFiles\n\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Input files are extra files supplied by user that make it simpler organize code.\n\nDescribe a files map that will be written and usable in execution context. In python execution context is in a temp folder, for bash scripts, you can reach files using a workingDir variable like \'source {{workingDir}}/myfile.sh\'\n\n\n# interpreter\n\n * Type: string\n * Dynamic: ❌\n * Required: ✔️\n * Default: /bin/sh\n * Min length: 1\n\n> Interpreter to used\n\n\n# interpreterArgs\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n * Default: [-c]\n\n> Interpreter args used\n\n\n# outputFiles\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Output file list that will be uploaded to internal storage\n\nList of key that will generate temporary files.\nOn the command, just can use with special variable named outputFiles.key.\nIf you add a files with ["first"], you can use the special vars echo 1 >> {[ outputFiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n\n# outputsFiles\n\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Deprecated Output file\n\nuse outputFiles\n\n\n# pythonPath\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Default: python\n * Min length: 1\n\n> The python interpreter to use\n\nSet the python interpreter path to use\n\n\n# requirements\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Requirements are python dependencies to add to the python execution process\n\nPython dependencies list to setup in the virtualenv, in the same format than requirements.txt\n\n\n# runner\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ✔️\n\n * Default: PROCESS\n\n * Possible Values:\n   \n   * PROCESS\n   * DOCKER\n\n> Runner to use\n\n\n# startDate\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> Determines how much historical data will be extracted.\n\nPlease be aware that the larger the time period and amount of data, the longer the initial extraction can be expected to take.\n\n\n# streamsConfigurations\n\n * Type: array\n * SubType: StreamsConfiguration\n * Dynamic: ❌\n * Required: ✔️\n * Min items: 1\n\n> The list of stream configurations\n\n\n# warningOnStdErr\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Use WARNING state if any stdErr is sent\n\n\n# Outputs\n\n\n# count\n\n * Type: object\n\n> Counter of streams\n\n\n# schemas\n\n * Type: object\n * SubType: string\n\n> Map of schemas captured\n\nKey is stream name, value is uri of the schema file on ion kestra storage\n\n\n# state\n\n * Type: string\n\n> Uri of the state file\n\n\n# streams\n\n * Type: object\n * SubType: string\n\n> Map of stream captured\n\nKey is stream name, value is uri of the stream file on ion kestra storage\n\n\n# Definitions\n\n\n# DockerOptions\n\n# dockerConfig\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker config file\n\nFull file that can be used to configure private registries, ...\n\n# dockerHost\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: unix:///var/run/docker.sock\n\n> Docker api uri\n\n# entryPoint\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker entrypoint to use\n\n# extraHosts\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker extra host to use\n\n# image\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> Docker image to use\n\n# user\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker user to use\n\n\n# StreamsConfiguration\n\n# propertiesPattern\n\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n\n# replicationKeys\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# replicationMethod\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Possible Values:\n   \n   * FULL_TABLE\n   * INCREMENTAL\n   * LOG_BASED\n\n# selected\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: true\n\n# stream\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌',normalizedContent:'stripe\n\ntype: "io.kestra.plugin.singer.taps.stripe"\n\n\n> a singer tap to fetch data from a stripe account.\n\nfull documentation can be found here\n\n\n# properties\n\n\n# accountid\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> stripe account id.\n\nex. acct_1a2b3c4d5e\n\n\n# args\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> python command args\n\narguments list to pass to main python script\n\n\n# clientsecret\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> stripe secret api key.\n\n\n# dockeroptions\n\n * type: dockeroptions\n * dynamic: ❓\n * required: ❌\n\n> docker options when using runner docker\n\n\n# env\n\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> additional environnements variable to add for current process.\n\n\n# exitonfailed\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> exit if any non true return value\n\nthis tells bash that it should exit the script if any statement returns a non-true return value.\nthe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n\n# files\n\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> the list of files that will be uploaded to internal storage,\n\nuse outputfiles property instead\n\n\n# inputfiles\n\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> input files are extra files supplied by user that make it simpler organize code.\n\ndescribe a files map that will be written and usable in execution context. in python execution context is in a temp folder, for bash scripts, you can reach files using a workingdir variable like \'source {{workingdir}}/myfile.sh\'\n\n\n# interpreter\n\n * type: string\n * dynamic: ❌\n * required: ✔️\n * default: /bin/sh\n * min length: 1\n\n> interpreter to used\n\n\n# interpreterargs\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n * default: [-c]\n\n> interpreter args used\n\n\n# outputfiles\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> output file list that will be uploaded to internal storage\n\nlist of key that will generate temporary files.\non the command, just can use with special variable named outputfiles.key.\nif you add a files with ["first"], you can use the special vars echo 1 >> {[ outputfiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n\n# outputsfiles\n\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> deprecated output file\n\nuse outputfiles\n\n\n# pythonpath\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * default: python\n * min length: 1\n\n> the python interpreter to use\n\nset the python interpreter path to use\n\n\n# requirements\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> requirements are python dependencies to add to the python execution process\n\npython dependencies list to setup in the virtualenv, in the same format than requirements.txt\n\n\n# runner\n\n * type: string\n\n * dynamic: ❌\n\n * required: ✔️\n\n * default: process\n\n * possible values:\n   \n   * process\n   * docker\n\n> runner to use\n\n\n# startdate\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> determines how much historical data will be extracted.\n\nplease be aware that the larger the time period and amount of data, the longer the initial extraction can be expected to take.\n\n\n# streamsconfigurations\n\n * type: array\n * subtype: streamsconfiguration\n * dynamic: ❌\n * required: ✔️\n * min items: 1\n\n> the list of stream configurations\n\n\n# warningonstderr\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> use warning state if any stderr is sent\n\n\n# outputs\n\n\n# count\n\n * type: object\n\n> counter of streams\n\n\n# schemas\n\n * type: object\n * subtype: string\n\n> map of schemas captured\n\nkey is stream name, value is uri of the schema file on ion kestra storage\n\n\n# state\n\n * type: string\n\n> uri of the state file\n\n\n# streams\n\n * type: object\n * subtype: string\n\n> map of stream captured\n\nkey is stream name, value is uri of the stream file on ion kestra storage\n\n\n# definitions\n\n\n# dockeroptions\n\n# dockerconfig\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> docker config file\n\nfull file that can be used to configure private registries, ...\n\n# dockerhost\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n * default: unix:///var/run/docker.sock\n\n> docker api uri\n\n# entrypoint\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> docker entrypoint to use\n\n# extrahosts\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> docker extra host to use\n\n# image\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> docker image to use\n\n# user\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> docker user to use\n\n\n# streamsconfiguration\n\n# propertiespattern\n\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n\n# replicationkeys\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# replicationmethod\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * possible values:\n   \n   * full_table\n   * incremental\n   * log_based\n\n# selected\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: true\n\n# stream\n\n * type: string\n * dynamic: ❓\n * required: ❌',charsets:{}},{title:"Zendesk",frontmatter:{title:"Zendesk",editLink:!1,description:"A Singer tap to fetch data from a Zendesk account.",icon:"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9Im5vIj8+Cjxzdmcgd2lkdGg9IjI1NnB4IiBoZWlnaHQ9IjI1M3B4IiB2aWV3Qm94PSIwIDAgMjU2IDI1MyIgdmVyc2lvbj0iMS4xIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiBwcmVzZXJ2ZUFzcGVjdFJhdGlvPSJ4TWlkWU1pZCI+CiAgICA8ZyBmaWxsPSIjNzE5QzQwIj4KICAgICAgICA8cGF0aCBkPSJNMjI1Ljg1MTE1NSwxNTAuMzczMzQzIEMyMTQuNjQ3NjA5LDE1Ni42NjM0NyAyMDIuNDU1MDQ5LDE1OS42NTQyNDcgMTkwLjQ2MDI5MSwxNTkuNjU0MjQ3IEMxODIuNjQzMTI3LDE1OS42NTQyNDcgMTc0LjkwNTA4NSwxNTguMzU2NjYxIDE2OC4zNjk2ODIsMTU1Ljc1MzU3NyBDMTU2LjQyMjM5OCwxNjYuNTI5ODcgMTQzLjU2NTIyLDE3NC4wNzgwMjIgMTM3LjA5MzExNSwxNzcuNTgzMDg2IEMxNDYuNDY4OTY0LDE5Mi40NTc4NTIgMTYxLjM3NTM3OCwyMDMuODkwODQ5IDE3OS43OTQ3NjgsMjA4LjQ3OTg3MyBDMTg1LjQ5MTQ4NywyMDkuOTA0MDUyIDE5MS4yMTE5NDIsMjEwLjU2ODY2OSAxOTYuODIxNjI3LDIxMC41Njg2NjkgQzIwOS40MTc3MDUsMjEwLjU2ODY2OSAyMjEuNTM5MDU2LDIwNy4xMTg5OSAyMzEuODQwNjIyLDIwMS41NzI2MDEgQzIzMy4zNjc2NTksMTk1LjY4NTk5MiAyMzQuMTI3MjIyLDE4OS42MzMyMjkgMjM0LjEyNzIyMiwxODMuNTE3MTY4IEMyMzQuMTI3MjIyLDE3Mi4yNjYxNDkgMjMxLjQzNzEwNCwxNjAuODk2NDQ4IDIyNS44NTExNTUsMTUwLjM3MzM0MyI+PC9wYXRoPgogICAgICAgIDxwYXRoIGQ9Ik0yMTEuMjUzMzE0LDYxLjY3MDY4NzQgQzIwOS4xMzI4NjksNzUuODE3NTM4NiAyMDMuMDA4ODk2LDg4LjM5Nzc5MjEgMTk0LjQzMjE3LDk3Ljc1NzgxNzIgQzE5NC44ODMxNiwxMDAuMjQyMjE5IDE5NS4xOTE3MzIsMTAyLjk2Mzk4NSAxOTUuMTkxNzMyLDEwNS44MTIzNDQgQzE5NS4xNTIxNzIsMTIyLjM1NjU2NSAxODYuNjE1MDA2LDEzNi43NDg2OTEgMTc1Ljk0OTQ4MywxNDguMzMyMDE5IEMxNzkuMDAzNTU3LDE0OC43MTE4IDE4Mi4wODEzNjgsMTQ4LjkyNTQyNyAxODUuMTM1NDQyLDE0OC45MjU0MjcgQzIwMC4zNDI1MTYsMTQ4LjkyNTQyNyAyMTUuNjY4MjcxLDE0NC4wNTE1NjggMjI4LjYzNjIxOCwxMzMuOTQ3ODA0IEMyNDMuNjEzODQsMTIyLjE5ODMyMiAyNTIuNjI1NzMzLDEwNS42MjI0NTQgMjU1LjIyODgxNyw4OC43MjIxODg2IEMyNDUuMTQwODc3LDc1LjQ1MzU4MTYgMjMwLjMyMTQ5Nyw2NS45MzUzMTQzIDIxMy44MDg5MjUsNjEuNzgxNDU3IEMyMTIuOTU0NDE3LDYxLjU5OTQ3ODQgMjEyLjE3MTExOSw2MS4yNTkyNTc4IDIxMS4zMDA3ODcsNjEuMTA4OTI3NyBMMjExLjI1MzMxNCw2MS42NzA2ODc0Ij48L3BhdGg+CiAgICAgICAgPHBhdGggZD0iTTE5OS45OTQzODMsNDkuNTczMDcyNiBDMTk5Ljk5NDM4MywzMC41MjA3MTM4IDE5Mi40OTM3MDMsMTMuMjU2NDkxNiAxODAuNzUyMTMzLDAuNzU1MzU5MTY5IEwxNzkuNzMxNDcxLDAuNzU1MzU5MTY5IEMxNjIuODc4Njc5LDAuNzU1MzU5MTY5IDE0OC4xMTQ2ODMsNi43NDQ4MjU3OSAxMzQuNzI3Mzk0LDE4Ljg1ODI2NDkgQzE0Ny41MjEyNzUsMzIuNDU5MTgwNSAxNTIuMTE4MjEsNDkuNzA3NTc4NCAxNTIuMTE4MjEsNjYuOTQ4MDY0MiBDMTUyLjExODIxLDY4LjM0MDU5NTQgMTUyLjA3MDczOCw2OS43MTczMDI0IDE1Mi4wMzExNzcsNzEuMDU0NDQ4OSBDMTU0LjkxOTA5Nyw3MC4zMjY1MzQ4IDE1Ny44MzA3NTMsNjkuOTc4NDAyIDE2MC42OTQ5MzcsNjkuOTc4NDAyIEwxNjEuNDU0NDk5LDY5Ljk3ODQwMiBDMTcyLjQ2MDI0Myw3MC4xOTk5NDExIDE4My41NTMwMiw3NS42NjcyMDg1IDE4OS45MTQzNTYsODUuOTY4Nzc0NiBDMTk2LjI5MTUxNiw3NS4zMTkwNzU3IDE5OS45OTQzODMsNjIuODk3MDY0MyAxOTkuOTk0MzgzLDQ5LjU3MzA3MjYiPjwvcGF0aD4KICAgICAgICA8cGF0aCBkPSJNNzIuODQ2Nzg4OCwyLjAxMzM4NDUyIEM3MS43OTQ0NzgzLDIuMDEzMzg0NTIgNzAuNzg5NjQwNSwyLjAxMzM4NDUyIDcwLjQxNzc3MTMsMS44MDc2Njk2OCBDNTguOTA1NjUyNSwxNC40NTEyMjAxIDUxLjk5MDQ2OTIsMzEuMTUzNjgyNSA1MS45OTA0NjkyLDQ5LjM1MTUzMzUgQzUxLjk5MDQ2OTIsNDkuNjEyNjMzMSA1MS45OTA0NjkyLDQ5LjgzNDE3MjIgNTEuODk1NTIzOCw0OS45NzY1OTAxIEM1Mi42OTQ2NDY5LDQ5Ljk3NjU5MDEgNTMuNTAxNjgyLDQ5Ljk1Mjg1MzggNTQuMzI0NTQxMyw0OS45NTI4NTM4IEM3My43MTcxMjA4LDQ5Ljk1Mjg1MzggOTEuNDYzOTgxNiw1Ny42NzUwNzIzIDEwNC4wMzYzMjMsNzAuMTA0OTk1OCBDMTE0LjU5MTA3Nyw3MC44NDg3MzQgMTI1LjM5MTEwNiw3Ni40NTA1MDczIDEzMS4wNzk5MTIsODcuNTY3MDIwNiBDMTM0LjEzMzk4Niw4MS41OTMzNzgyIDEzOC42Njc2MjUsNzcuMjI1ODk0IDE0My40NTQ0NTEsNzQuOTk0Njc5MiBDMTQzLjQ1NDQ1MSw3NC4yMDM0NjgzIDE0My40ODYwOTksNzMuMzcyNjk2OCAxNDMuNDg2MDk5LDcyLjU1Nzc0OTYgQzE0My40ODYwOTksNTMuMDc4MTM2OSAxMzUuNDIzNjYsMzMuNjQ1OTk2OSAxMTkuNzQxODYsMTkuNzYwMjQ1MyBDMTA2LjI1OTYyNiw3LjgxMjk2MDUyIDg5LjUxNzYwMjgsMi4wMTMzODQ1MiA3Mi44NDY3ODg4LDIuMDEzMzg0NTIiPjwvcGF0aD4KICAgICAgICA8cGF0aCBkPSJNOTIuNjE5MTQ5Niw3MS4xMDE5MjE1IEM4Mi4wMjQ4MzU0LDY0LjkyMjU2NDMgNjkuODU2MDExNiw2MS40NTcwNjA1IDU3LjA3Nzk1NTMsNjEuNDU3MDYwNSBDNTIuOTc5NDgyOCw2MS40NTcwNjA1IDQ4LjgwMTg4OTIsNjEuODEzMTA1NCA0NC42NzE3NjgyLDYyLjU2NDc1NTggQzI1Ljg5NjMzMzIsNjUuOTM1MzE0MyAxMC4xOTg3MDg3LDc2LjM3OTI5ODMgMCw5MC4xMTQ3MTk4IEMyLjc2OTIzODIsMTA3LjEwOTkzIDExLjc0OTQ4MjEsMTIzLjEwODIxNSAyNi4yNTIzNzgxLDEzNC40MTQ2MTkgQzM2Ljg0NjY5MjMsMTIwLjIwNDQ3MSA1MS42ODk4MDksMTExLjAyNjQyNCA2Ny4wMzEzODg2LDEwOC4wODMxMiBDNjcuMDMxMzg4NiwxMDcuMzYzMTE4IDY2Ljk5OTc0MDIsMTA2LjU1NjA4MyA2Ni45OTk3NDAyLDEwNS43OTY1MiBDNjYuOTY4MDkxOCw4Ni41NDYzNTg2IDc4LjkzMTIwMDgsNzQuNjIyODEwMSA5Mi42MTkxNDk2LDcxLjEwMTkyMTUiPjwvcGF0aD4KICAgICAgICA8cGF0aCBkPSJNMzAuNDkzMjY4NiwxNTAuNTM5NDk3IEMyNC44ODM1ODMyLDE2MS4wOTQyNTEgMjIuMjA5MjkwNCwxNzIuMzg0ODMxIDIyLjIwOTI5MDQsMTgzLjU0ODgxNyBDMjIuMjA5MjkwNCwxOTAuMjI2NjM3IDIzLjE1MDgzMTMsMTk2LjgxNzQyNCAyNC42MDY2NTk0LDIwMi42ODgyMDkgQzM0Ljg4NDQ4OTIsMjA4LjMyMTYzIDQ2LjUwNzM3NzUsMjExLjM1MTk2OCA1OC41MTc5NTkyLDIxMS4zNTE5NjggQzY0LjE5MDk0MTQsMjExLjM1MTk2OCA2OS45NDMwNDQ4LDIxMC42NzE1MjcgNzUuNzQyNjIwOCwyMDkuMjU1MjU5IEM3My45NjIzOTYyLDIwMi44Mzg1MzkgNzMuMDk5OTc2MywxOTYuNDM3NjQyIDczLjA5OTk3NjMsMTkwLjA4NDIxOSBDNzMuMDk5OTc2MywxNzQuOTcyMDkgNzcuODk0NzE0NSwxNjAuNDY5MTk0IDg2LjM5MjMxOTcsMTQ4LjQ1ODYxMyBDNzguMjAzMjg2NywxMzkuNjIwNzg3IDcxLjI1NjQ1NDksMTI5LjE2MDk3OCA2OC40MDAxODM1LDExNy4zMzIzNzUgQzUyLjY1NTA4NjMsMTIzLjE2MzYgMzguOTQzNDAxMiwxMzQuNTY0OTQ5IDMwLjQ5MzI2ODYsMTUwLjUzOTQ5NyI+PC9wYXRoPgogICAgICAgIDxwYXRoIGQ9Ik0xMjguNDg0NzQsMjUyLjYzNzM1NCBDMTQ0LjMzMjY5NSwyNDUuNzg1NDY3IDE1Ny43MTk5ODQsMjMzLjIwNTIxNCAxNjUuMTQ5NDU0LDIxNi4zNTI0MjEgQzE0Ny4wNzgxOTcsMjA4Ljg2NzU2NiAxMzMuNzMwNDY5LDE5NC44MTU2NiAxMjYuOTczNTI3LDE3OC41OTU4MzYgQzEyMS4xOTc2ODgsMTc1LjYxMjk3MSAxMDYuMjkxMjc0LDE2Ny4yNjU2OTYgOTIuNzA2MTgyOCwxNTQuNzcyNDc2IEM4Ny41NzEyMjQsMTY0LjczMzgyMSA4NC44NDE1NDYzLDE3NS44NDI0MjIgODQuODQxNTQ2MywxODcuMTcyNTYzIEM4NC44NDE1NDYzLDE5Ni43Njk5NTEgODYuNzQ4MzY0NiwyMDYuNTMzNDk0IDkwLjk4OTI1NTEsMjE1Ljg2OTc4MiBDOTguNzc0NzcwNSwyMzMuMzE1OTgzIDExMi43NDc1NTUsMjQ1Ljk5OTA5NCAxMjguNDg0NzQsMjUyLjYzNzM1NCI+PC9wYXRoPgogICAgPC9nPgo8L3N2Zz4K",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Zendesk"},{property:"og:description",content:"A Singer tap to fetch data from a Zendesk account. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.Zendesk.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Zendesk"},{name:"twitter:description",content:"A Singer tap to fetch data from a Zendesk account. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.Zendesk.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.Zendesk.html",relativePath:"plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.Zendesk.md",key:"v-138cdb7a",path:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.Zendesk.html",headers:[{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:151},{level:3,title:"accessToken",slug:"accesstoken",normalizedTitle:"accesstoken",charIndex:166},{level:3,title:"apiToken",slug:"apitoken",normalizedTitle:"apitoken",charIndex:263},{level:3,title:"args",slug:"args",normalizedTitle:"args",charIndex:345},{level:3,title:"dockerOptions",slug:"dockeroptions",normalizedTitle:"dockeroptions",charIndex:488},{level:3,title:"email",slug:"email",normalizedTitle:"email",charIndex:602},{level:3,title:"env",slug:"env",normalizedTitle:"env",charIndex:677},{level:3,title:"exitOnFailed",slug:"exitonfailed",normalizedTitle:"exitonfailed",charIndex:817},{level:3,title:"files",slug:"files",normalizedTitle:"files",charIndex:1159},{level:3,title:"inputFiles",slug:"inputfiles",normalizedTitle:"inputfiles",charIndex:1347},{level:3,title:"interpreter",slug:"interpreter",normalizedTitle:"interpreter",charIndex:1742},{level:3,title:"interpreterArgs",slug:"interpreterargs",normalizedTitle:"interpreterargs",charIndex:1865},{level:3,title:"outputFiles",slug:"outputfiles",normalizedTitle:"outputfiles",charIndex:1314},{level:3,title:"outputsFiles",slug:"outputsfiles",normalizedTitle:"outputsfiles",charIndex:2423},{level:3,title:"pythonPath",slug:"pythonpath",normalizedTitle:"pythonpath",charIndex:2562},{level:3,title:"requirements",slug:"requirements",normalizedTitle:"requirements",charIndex:2734},{level:3,title:"runner",slug:"runner",normalizedTitle:"runner",charIndex:584},{level:3,title:"startDate",slug:"startdate",normalizedTitle:"startdate",charIndex:3138},{level:3,title:"streamsConfigurations",slug:"streamsconfigurations",normalizedTitle:"streamsconfigurations",charIndex:3386},{level:3,title:"subdomain",slug:"subdomain",normalizedTitle:"subdomain",charIndex:3544},{level:3,title:"warningOnStdErr",slug:"warningonstderr",normalizedTitle:"warningonstderr",charIndex:3654},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:3782},{level:3,title:"count",slug:"count",normalizedTitle:"count",charIndex:102},{level:3,title:"schemas",slug:"schemas",normalizedTitle:"schemas",charIndex:3843},{level:3,title:"state",slug:"state",normalizedTitle:"state",charIndex:987},{level:3,title:"streams",slug:"streams",normalizedTitle:"streams",charIndex:3386},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:4194},{level:3,title:"DockerOptions",slug:"dockeroptions-2",normalizedTitle:"dockeroptions",charIndex:512},{level:3,title:"StreamsConfiguration",slug:"streamsconfiguration",normalizedTitle:"streamsconfiguration",charIndex:3436}],headersStr:"Properties accessToken apiToken args dockerOptions email env exitOnFailed files inputFiles interpreter interpreterArgs outputFiles outputsFiles pythonPath requirements runner startDate streamsConfigurations subdomain warningOnStdErr Outputs count schemas state streams Definitions DockerOptions StreamsConfiguration",content:'Zendesk\n\ntype: "io.kestra.plugin.singer.taps.Zendesk"\n\n\n> A Singer tap to fetch data from a Zendesk account.\n\nFull documentation can be found here\n\n\n# Properties\n\n\n# accessToken\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Zendesk access token.\n\nSee doc\n\n\n# apiToken\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Zendesk api token.\n\n\n# args\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Python command args\n\nArguments list to pass to main python script\n\n\n# dockerOptions\n\n * Type: DockerOptions\n * Dynamic: ❓\n * Required: ❌\n\n> Docker options when using runner DOCKER\n\n\n# email\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Zendesk email.\n\n\n# env\n\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Additional environnements variable to add for current process.\n\n\n# exitOnFailed\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Exit if any non true return value\n\nThis tells bash that it should exit the script if any statement returns a non-true return value.\nThe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n\n# files\n\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The list of files that will be uploaded to internal storage,\n\nuse outputFiles property instead\n\n\n# inputFiles\n\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Input files are extra files supplied by user that make it simpler organize code.\n\nDescribe a files map that will be written and usable in execution context. In python execution context is in a temp folder, for bash scripts, you can reach files using a workingDir variable like \'source {{workingDir}}/myfile.sh\'\n\n\n# interpreter\n\n * Type: string\n * Dynamic: ❌\n * Required: ✔️\n * Default: /bin/sh\n * Min length: 1\n\n> Interpreter to used\n\n\n# interpreterArgs\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n * Default: [-c]\n\n> Interpreter args used\n\n\n# outputFiles\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Output file list that will be uploaded to internal storage\n\nList of key that will generate temporary files.\nOn the command, just can use with special variable named outputFiles.key.\nIf you add a files with ["first"], you can use the special vars echo 1 >> {[ outputFiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n\n# outputsFiles\n\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Deprecated Output file\n\nuse outputFiles\n\n\n# pythonPath\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Default: python\n * Min length: 1\n\n> The python interpreter to use\n\nSet the python interpreter path to use\n\n\n# requirements\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Requirements are python dependencies to add to the python execution process\n\nPython dependencies list to setup in the virtualenv, in the same format than requirements.txt\n\n\n# runner\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ✔️\n\n * Default: PROCESS\n\n * Possible Values:\n   \n   * PROCESS\n   * DOCKER\n\n> Runner to use\n\n\n# startDate\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> Determines how much historical data will be extracted.\n\nPlease be aware that the larger the time period and amount of data, the longer the initial extraction can be expected to take.\n\n\n# streamsConfigurations\n\n * Type: array\n * SubType: StreamsConfiguration\n * Dynamic: ❌\n * Required: ✔️\n * Min items: 1\n\n> The list of stream configurations\n\n\n# subdomain\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> Zendesk Subdomain.\n\nSee doc\n\n\n# warningOnStdErr\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Use WARNING state if any stdErr is sent\n\n\n# Outputs\n\n\n# count\n\n * Type: object\n\n> Counter of streams\n\n\n# schemas\n\n * Type: object\n * SubType: string\n\n> Map of schemas captured\n\nKey is stream name, value is uri of the schema file on ion kestra storage\n\n\n# state\n\n * Type: string\n\n> Uri of the state file\n\n\n# streams\n\n * Type: object\n * SubType: string\n\n> Map of stream captured\n\nKey is stream name, value is uri of the stream file on ion kestra storage\n\n\n# Definitions\n\n\n# DockerOptions\n\n# dockerConfig\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker config file\n\nFull file that can be used to configure private registries, ...\n\n# dockerHost\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: unix:///var/run/docker.sock\n\n> Docker api uri\n\n# entryPoint\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker entrypoint to use\n\n# extraHosts\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker extra host to use\n\n# image\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> Docker image to use\n\n# user\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker user to use\n\n\n# StreamsConfiguration\n\n# propertiesPattern\n\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n\n# replicationKeys\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# replicationMethod\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Possible Values:\n   \n   * FULL_TABLE\n   * INCREMENTAL\n   * LOG_BASED\n\n# selected\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: true\n\n# stream\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌',normalizedContent:'zendesk\n\ntype: "io.kestra.plugin.singer.taps.zendesk"\n\n\n> a singer tap to fetch data from a zendesk account.\n\nfull documentation can be found here\n\n\n# properties\n\n\n# accesstoken\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> zendesk access token.\n\nsee doc\n\n\n# apitoken\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> zendesk api token.\n\n\n# args\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> python command args\n\narguments list to pass to main python script\n\n\n# dockeroptions\n\n * type: dockeroptions\n * dynamic: ❓\n * required: ❌\n\n> docker options when using runner docker\n\n\n# email\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> zendesk email.\n\n\n# env\n\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> additional environnements variable to add for current process.\n\n\n# exitonfailed\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> exit if any non true return value\n\nthis tells bash that it should exit the script if any statement returns a non-true return value.\nthe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n\n# files\n\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> the list of files that will be uploaded to internal storage,\n\nuse outputfiles property instead\n\n\n# inputfiles\n\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> input files are extra files supplied by user that make it simpler organize code.\n\ndescribe a files map that will be written and usable in execution context. in python execution context is in a temp folder, for bash scripts, you can reach files using a workingdir variable like \'source {{workingdir}}/myfile.sh\'\n\n\n# interpreter\n\n * type: string\n * dynamic: ❌\n * required: ✔️\n * default: /bin/sh\n * min length: 1\n\n> interpreter to used\n\n\n# interpreterargs\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n * default: [-c]\n\n> interpreter args used\n\n\n# outputfiles\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> output file list that will be uploaded to internal storage\n\nlist of key that will generate temporary files.\non the command, just can use with special variable named outputfiles.key.\nif you add a files with ["first"], you can use the special vars echo 1 >> {[ outputfiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n\n# outputsfiles\n\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> deprecated output file\n\nuse outputfiles\n\n\n# pythonpath\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * default: python\n * min length: 1\n\n> the python interpreter to use\n\nset the python interpreter path to use\n\n\n# requirements\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> requirements are python dependencies to add to the python execution process\n\npython dependencies list to setup in the virtualenv, in the same format than requirements.txt\n\n\n# runner\n\n * type: string\n\n * dynamic: ❌\n\n * required: ✔️\n\n * default: process\n\n * possible values:\n   \n   * process\n   * docker\n\n> runner to use\n\n\n# startdate\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> determines how much historical data will be extracted.\n\nplease be aware that the larger the time period and amount of data, the longer the initial extraction can be expected to take.\n\n\n# streamsconfigurations\n\n * type: array\n * subtype: streamsconfiguration\n * dynamic: ❌\n * required: ✔️\n * min items: 1\n\n> the list of stream configurations\n\n\n# subdomain\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> zendesk subdomain.\n\nsee doc\n\n\n# warningonstderr\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> use warning state if any stderr is sent\n\n\n# outputs\n\n\n# count\n\n * type: object\n\n> counter of streams\n\n\n# schemas\n\n * type: object\n * subtype: string\n\n> map of schemas captured\n\nkey is stream name, value is uri of the schema file on ion kestra storage\n\n\n# state\n\n * type: string\n\n> uri of the state file\n\n\n# streams\n\n * type: object\n * subtype: string\n\n> map of stream captured\n\nkey is stream name, value is uri of the stream file on ion kestra storage\n\n\n# definitions\n\n\n# dockeroptions\n\n# dockerconfig\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> docker config file\n\nfull file that can be used to configure private registries, ...\n\n# dockerhost\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n * default: unix:///var/run/docker.sock\n\n> docker api uri\n\n# entrypoint\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> docker entrypoint to use\n\n# extrahosts\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> docker extra host to use\n\n# image\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> docker image to use\n\n# user\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> docker user to use\n\n\n# streamsconfiguration\n\n# propertiespattern\n\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n\n# replicationkeys\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# replicationmethod\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * possible values:\n   \n   * full_table\n   * incremental\n   * log_based\n\n# selected\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: true\n\n# stream\n\n * type: string\n * dynamic: ❓\n * required: ❌',charsets:{}},{title:"Zoom",frontmatter:{title:"Zoom",editLink:!1,description:"A Singer tap to fetch data from a Zoom account.",icon:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCAxMzI5LjA4IDEzMjkuMDgiIHNoYXBlLXJlbmRlcmluZz0iZ2VvbWV0cmljUHJlY2lzaW9uIiB0ZXh0LXJlbmRlcmluZz0iZ2VvbWV0cmljUHJlY2lzaW9uIiBpbWFnZS1yZW5kZXJpbmc9Im9wdGltaXplUXVhbGl0eSIgZmlsbC1ydWxlPSJldmVub2RkIiBjbGlwLXJ1bGU9ImV2ZW5vZGQiPjxkZWZzPjxzdHlsZT4uZmlsMXtmaWxsOiNmZmY7ZmlsbC1ydWxlOm5vbnplcm99PC9zdHlsZT48L2RlZnM+PGcgaWQ9IkxheWVyX3gwMDIwXzEiPjxnIGlkPSJfMjExNjQ2NzE2OTc0NCI+PHBhdGggZD0iTTY2NC41NCAwYzM2Ny4wMiAwIDY2NC41NCAyOTcuNTIgNjY0LjU0IDY2NC41NHMtMjk3LjUyIDY2NC41NC02NjQuNTQgNjY0LjU0UzAgMTAzMS41NiAwIDY2NC41NCAyOTcuNTIgMCA2NjQuNTQgMHoiIGZpbGw9IiNlNWU1ZTQiIGZpbGwtcnVsZT0ibm9uemVybyIvPjxwYXRoIGNsYXNzPSJmaWwxIiBkPSJNNjY0LjU0IDEyLjk0YzM1OS44NyAwIDY1MS42IDI5MS43MyA2NTEuNiA2NTEuNnMtMjkxLjczIDY1MS42LTY1MS42IDY1MS42LTY1MS42LTI5MS43My02NTEuNi02NTEuNiAyOTEuNzQtNjUxLjYgNjUxLjYtNjUxLjZ6Ii8+PHBhdGggZD0iTTY2NC41NCA2NS4yMWMzMzEgMCA1OTkuMzMgMjY4LjMzIDU5OS4zMyA1OTkuMzMgMCAzMzEtMjY4LjMzIDU5OS4zMy01OTkuMzMgNTk5LjMzLTMzMSAwLTU5OS4zMy0yNjguMzMtNTk5LjMzLTU5OS4zMyAwLTMzMSAyNjguMzMtNTk5LjMzIDU5OS4zMy01OTkuMzN6IiBmaWxsPSIjNGE4Y2ZmIiBmaWxsLXJ1bGU9Im5vbnplcm8iLz48cGF0aCBjbGFzcz0iZmlsMSIgZD0iTTI3My41MyA0NzYuNzd2MjgxLjY1Yy4yNSA2My42OSA1Mi4yNyAxMTQuOTUgMTE1LjcxIDExNC42OWg0MTAuNTVjMTEuNjcgMCAyMS4wNi05LjM5IDIxLjA2LTIwLjgxVjU3MC42NWMtLjI1LTYzLjY5LTUyLjI3LTExNC45NS0xMTUuNy0xMTQuNjlIMjk0LjZjLTExLjY3IDAtMjEuMDYgOS4zOS0yMS4wNiAyMC44MXptNTczLjQ1IDEwOS44N2wxNjkuNS0xMjMuODJjMTQuNzItMTIuMTggMjYuMTMtOS4xNCAyNi4xMyAxMi45NHYzNzcuNTZjMCAyNS4xMi0xMy45NiAyMi4wOC0yNi4xMyAxMi45NGwtMTY5LjUtMTIzLjU3VjU4Ni42NHoiLz48L2c+PC9nPjwvc3ZnPg==",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Zoom"},{property:"og:description",content:"A Singer tap to fetch data from a Zoom account. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.Zoom.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Zoom"},{name:"twitter:description",content:"A Singer tap to fetch data from a Zoom account. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.Zoom.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.Zoom.html",relativePath:"plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.Zoom.md",key:"v-24deb5bf",path:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.Zoom.html",headers:[{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:142},{level:3,title:"args",slug:"args",normalizedTitle:"args",charIndex:157},{level:3,title:"clientId",slug:"clientid",normalizedTitle:"clientid",charIndex:300},{level:3,title:"clientSecret",slug:"clientsecret",normalizedTitle:"clientsecret",charIndex:379},{level:3,title:"dockerOptions",slug:"dockeroptions",normalizedTitle:"dockeroptions",charIndex:466},{level:3,title:"env",slug:"env",normalizedTitle:"env",charIndex:580},{level:3,title:"exitOnFailed",slug:"exitonfailed",normalizedTitle:"exitonfailed",charIndex:720},{level:3,title:"files",slug:"files",normalizedTitle:"files",charIndex:1062},{level:3,title:"inputFiles",slug:"inputfiles",normalizedTitle:"inputfiles",charIndex:1250},{level:3,title:"interpreter",slug:"interpreter",normalizedTitle:"interpreter",charIndex:1645},{level:3,title:"interpreterArgs",slug:"interpreterargs",normalizedTitle:"interpreterargs",charIndex:1768},{level:3,title:"jwt",slug:"jwt",normalizedTitle:"jwt",charIndex:1894},{level:3,title:"outputFiles",slug:"outputfiles",normalizedTitle:"outputfiles",charIndex:1217},{level:3,title:"outputsFiles",slug:"outputsfiles",normalizedTitle:"outputsfiles",charIndex:2405},{level:3,title:"pythonPath",slug:"pythonpath",normalizedTitle:"pythonpath",charIndex:2544},{level:3,title:"refreshToken",slug:"refreshtoken",normalizedTitle:"refreshtoken",charIndex:2716},{level:3,title:"requirements",slug:"requirements",normalizedTitle:"requirements",charIndex:2803},{level:3,title:"runner",slug:"runner",normalizedTitle:"runner",charIndex:562},{level:3,title:"streamsConfigurations",slug:"streamsconfigurations",normalizedTitle:"streamsconfigurations",charIndex:3207},{level:3,title:"warningOnStdErr",slug:"warningonstderr",normalizedTitle:"warningonstderr",charIndex:3365},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:3493},{level:3,title:"count",slug:"count",normalizedTitle:"count",charIndex:93},{level:3,title:"schemas",slug:"schemas",normalizedTitle:"schemas",charIndex:3554},{level:3,title:"state",slug:"state",normalizedTitle:"state",charIndex:890},{level:3,title:"streams",slug:"streams",normalizedTitle:"streams",charIndex:3207},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:3905},{level:3,title:"DockerOptions",slug:"dockeroptions-2",normalizedTitle:"dockeroptions",charIndex:490},{level:3,title:"StreamsConfiguration",slug:"streamsconfiguration",normalizedTitle:"streamsconfiguration",charIndex:3257}],headersStr:"Properties args clientId clientSecret dockerOptions env exitOnFailed files inputFiles interpreter interpreterArgs jwt outputFiles outputsFiles pythonPath refreshToken requirements runner streamsConfigurations warningOnStdErr Outputs count schemas state streams Definitions DockerOptions StreamsConfiguration",content:'Zoom\n\ntype: "io.kestra.plugin.singer.taps.Zoom"\n\n\n> A Singer tap to fetch data from a Zoom account.\n\nFull documentation can be found here\n\n\n# Properties\n\n\n# args\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Python command args\n\nArguments list to pass to main python script\n\n\n# clientId\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Zoom client id.\n\n\n# clientSecret\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Zoom Client secret.\n\n\n# dockerOptions\n\n * Type: DockerOptions\n * Dynamic: ❓\n * Required: ❌\n\n> Docker options when using runner DOCKER\n\n\n# env\n\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Additional environnements variable to add for current process.\n\n\n# exitOnFailed\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Exit if any non true return value\n\nThis tells bash that it should exit the script if any statement returns a non-true return value.\nThe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n\n# files\n\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The list of files that will be uploaded to internal storage,\n\nuse outputFiles property instead\n\n\n# inputFiles\n\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Input files are extra files supplied by user that make it simpler organize code.\n\nDescribe a files map that will be written and usable in execution context. In python execution context is in a temp folder, for bash scripts, you can reach files using a workingDir variable like \'source {{workingDir}}/myfile.sh\'\n\n\n# interpreter\n\n * Type: string\n * Dynamic: ❌\n * Required: ✔️\n * Default: /bin/sh\n * Min length: 1\n\n> Interpreter to used\n\n\n# interpreterArgs\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n * Default: [-c]\n\n> Interpreter args used\n\n\n# jwt\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Zoom JSON Web Token.\n\n\n# outputFiles\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Output file list that will be uploaded to internal storage\n\nList of key that will generate temporary files.\nOn the command, just can use with special variable named outputFiles.key.\nIf you add a files with ["first"], you can use the special vars echo 1 >> {[ outputFiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n\n# outputsFiles\n\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Deprecated Output file\n\nuse outputFiles\n\n\n# pythonPath\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Default: python\n * Min length: 1\n\n> The python interpreter to use\n\nSet the python interpreter path to use\n\n\n# refreshToken\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Zoom refresh token.\n\n\n# requirements\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Requirements are python dependencies to add to the python execution process\n\nPython dependencies list to setup in the virtualenv, in the same format than requirements.txt\n\n\n# runner\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ✔️\n\n * Default: PROCESS\n\n * Possible Values:\n   \n   * PROCESS\n   * DOCKER\n\n> Runner to use\n\n\n# streamsConfigurations\n\n * Type: array\n * SubType: StreamsConfiguration\n * Dynamic: ❌\n * Required: ✔️\n * Min items: 1\n\n> The list of stream configurations\n\n\n# warningOnStdErr\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Use WARNING state if any stdErr is sent\n\n\n# Outputs\n\n\n# count\n\n * Type: object\n\n> Counter of streams\n\n\n# schemas\n\n * Type: object\n * SubType: string\n\n> Map of schemas captured\n\nKey is stream name, value is uri of the schema file on ion kestra storage\n\n\n# state\n\n * Type: string\n\n> Uri of the state file\n\n\n# streams\n\n * Type: object\n * SubType: string\n\n> Map of stream captured\n\nKey is stream name, value is uri of the stream file on ion kestra storage\n\n\n# Definitions\n\n\n# DockerOptions\n\n# dockerConfig\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker config file\n\nFull file that can be used to configure private registries, ...\n\n# dockerHost\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: unix:///var/run/docker.sock\n\n> Docker api uri\n\n# entryPoint\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker entrypoint to use\n\n# extraHosts\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker extra host to use\n\n# image\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> Docker image to use\n\n# user\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker user to use\n\n\n# StreamsConfiguration\n\n# propertiesPattern\n\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n\n# replicationKeys\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# replicationMethod\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Possible Values:\n   \n   * FULL_TABLE\n   * INCREMENTAL\n   * LOG_BASED\n\n# selected\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: true\n\n# stream\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌',normalizedContent:'zoom\n\ntype: "io.kestra.plugin.singer.taps.zoom"\n\n\n> a singer tap to fetch data from a zoom account.\n\nfull documentation can be found here\n\n\n# properties\n\n\n# args\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> python command args\n\narguments list to pass to main python script\n\n\n# clientid\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> zoom client id.\n\n\n# clientsecret\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> zoom client secret.\n\n\n# dockeroptions\n\n * type: dockeroptions\n * dynamic: ❓\n * required: ❌\n\n> docker options when using runner docker\n\n\n# env\n\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> additional environnements variable to add for current process.\n\n\n# exitonfailed\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> exit if any non true return value\n\nthis tells bash that it should exit the script if any statement returns a non-true return value.\nthe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n\n# files\n\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> the list of files that will be uploaded to internal storage,\n\nuse outputfiles property instead\n\n\n# inputfiles\n\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> input files are extra files supplied by user that make it simpler organize code.\n\ndescribe a files map that will be written and usable in execution context. in python execution context is in a temp folder, for bash scripts, you can reach files using a workingdir variable like \'source {{workingdir}}/myfile.sh\'\n\n\n# interpreter\n\n * type: string\n * dynamic: ❌\n * required: ✔️\n * default: /bin/sh\n * min length: 1\n\n> interpreter to used\n\n\n# interpreterargs\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n * default: [-c]\n\n> interpreter args used\n\n\n# jwt\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> zoom json web token.\n\n\n# outputfiles\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> output file list that will be uploaded to internal storage\n\nlist of key that will generate temporary files.\non the command, just can use with special variable named outputfiles.key.\nif you add a files with ["first"], you can use the special vars echo 1 >> {[ outputfiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n\n# outputsfiles\n\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> deprecated output file\n\nuse outputfiles\n\n\n# pythonpath\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * default: python\n * min length: 1\n\n> the python interpreter to use\n\nset the python interpreter path to use\n\n\n# refreshtoken\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> zoom refresh token.\n\n\n# requirements\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> requirements are python dependencies to add to the python execution process\n\npython dependencies list to setup in the virtualenv, in the same format than requirements.txt\n\n\n# runner\n\n * type: string\n\n * dynamic: ❌\n\n * required: ✔️\n\n * default: process\n\n * possible values:\n   \n   * process\n   * docker\n\n> runner to use\n\n\n# streamsconfigurations\n\n * type: array\n * subtype: streamsconfiguration\n * dynamic: ❌\n * required: ✔️\n * min items: 1\n\n> the list of stream configurations\n\n\n# warningonstderr\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> use warning state if any stderr is sent\n\n\n# outputs\n\n\n# count\n\n * type: object\n\n> counter of streams\n\n\n# schemas\n\n * type: object\n * subtype: string\n\n> map of schemas captured\n\nkey is stream name, value is uri of the schema file on ion kestra storage\n\n\n# state\n\n * type: string\n\n> uri of the state file\n\n\n# streams\n\n * type: object\n * subtype: string\n\n> map of stream captured\n\nkey is stream name, value is uri of the stream file on ion kestra storage\n\n\n# definitions\n\n\n# dockeroptions\n\n# dockerconfig\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> docker config file\n\nfull file that can be used to configure private registries, ...\n\n# dockerhost\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n * default: unix:///var/run/docker.sock\n\n> docker api uri\n\n# entrypoint\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> docker entrypoint to use\n\n# extrahosts\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> docker extra host to use\n\n# image\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> docker image to use\n\n# user\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> docker user to use\n\n\n# streamsconfiguration\n\n# propertiespattern\n\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n\n# replicationkeys\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# replicationmethod\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * possible values:\n   \n   * full_table\n   * incremental\n   * log_based\n\n# selected\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: true\n\n# stream\n\n * type: string\n * dynamic: ❓\n * required: ❌',charsets:{}},{title:"AdswerveBigQuery",frontmatter:{title:"AdswerveBigQuery",editLink:!1,description:"A Singer target loads data into a BigQuery.",icon:"PHN2ZyBpZD0iUHJvZHVjdF9JY29ucyIgZGF0YS1uYW1lPSJQcm9kdWN0IEljb25zIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCAyNCAyNCI+PGRlZnM+PHN0eWxlPi5jbHMtMXtmaWxsOiNhZWNiZmE7fS5jbHMtMSwuY2xzLTIsLmNscy0ze2ZpbGwtcnVsZTpldmVub2RkO30uY2xzLTJ7ZmlsbDojNjY5ZGY2O30uY2xzLTN7ZmlsbDojNDI4NWY0O308L3N0eWxlPjwvZGVmcz48dGl0bGU+SWNvbl8yNHB4X0NvbG9yX0JpZ1F1ZXJ5PC90aXRsZT48ZyBpZD0iU2hhcGUiPjxwYXRoIGNsYXNzPSJjbHMtMSIgZD0iTTYuNzMsMTAuODN2Mi42M0E0LjkxLDQuOTEsMCwwLDAsOC40NCwxNS4yVjEwLjgzWiIvPjxwYXRoIGNsYXNzPSJjbHMtMiIgZD0iTTkuODksOC40MXY3LjUzQTcuNjIsNy42MiwwLDAsMCwxMSwxNiw4LDgsMCwwLDAsMTIsMTZWOC40MVoiLz48cGF0aCBjbGFzcz0iY2xzLTEiIGQ9Ik0xMy42NCwxMS44NnYzLjI5YTUsNSwwLDAsMCwxLjctMS44MlYxMS44NloiLz48cGF0aCBjbGFzcz0iY2xzLTMiIGQ9Ik0xNy43NCwxNi4zMmwtMS40MiwxLjQyYS40Mi40MiwwLDAsMCwwLC42bDMuNTQsMy41NGEuNDIuNDIsMCwwLDAsLjU5LDBsMS40My0xLjQzYS40Mi40MiwwLDAsMCwwLS41OWwtMy41NC0zLjU0YS40Mi40MiwwLDAsMC0uNiwwIi8+PHBhdGggY2xhc3M9ImNscy0yIiBkPSJNMTEsMmE5LDksMCwxLDAsOSw5LDksOSwwLDAsMC05LTltMCwxNS42OUE2LjY4LDYuNjgsMCwxLDEsMTcuNjksMTEsNi42OCw2LjY4LDAsMCwxLDExLDE3LjY5Ii8+PC9nPjwvc3ZnPg==",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"AdswerveBigQuery"},{property:"og:description",content:"A Singer target loads data into a BigQuery. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-singer/tasks/targets/io.kestra.plugin.singer.targets.AdswerveBigQuery.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"AdswerveBigQuery"},{name:"twitter:description",content:"A Singer target loads data into a BigQuery. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-singer/tasks/targets/io.kestra.plugin.singer.targets.AdswerveBigQuery.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-singer/tasks/targets/io.kestra.plugin.singer.targets.AdswerveBigQuery.html",relativePath:"plugins/plugin-singer/tasks/targets/io.kestra.plugin.singer.targets.AdswerveBigQuery.md",key:"v-635b8d0f",path:"/plugins/plugin-singer/tasks/targets/io.kestra.plugin.singer.targets.AdswerveBigQuery.html",headers:[{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:165},{level:3,title:"addMetadataColumns",slug:"addmetadatacolumns",normalizedTitle:"addmetadatacolumns",charIndex:180},{level:3,title:"args",slug:"args",normalizedTitle:"args",charIndex:356},{level:3,title:"datasetId",slug:"datasetid",normalizedTitle:"datasetid",charIndex:499},{level:3,title:"dockerOptions",slug:"dockeroptions",normalizedTitle:"dockeroptions",charIndex:602},{level:3,title:"env",slug:"env",normalizedTitle:"env",charIndex:716},{level:3,title:"exitOnFailed",slug:"exitonfailed",normalizedTitle:"exitonfailed",charIndex:856},{level:3,title:"files",slug:"files",normalizedTitle:"files",charIndex:1198},{level:3,title:"inputFiles",slug:"inputfiles",normalizedTitle:"inputfiles",charIndex:1386},{level:3,title:"interpreter",slug:"interpreter",normalizedTitle:"interpreter",charIndex:1781},{level:3,title:"interpreterArgs",slug:"interpreterargs",normalizedTitle:"interpreterargs",charIndex:1904},{level:3,title:"location",slug:"location",normalizedTitle:"location",charIndex:2030},{level:3,title:"maxCache",slug:"maxcache",normalizedTitle:"maxcache",charIndex:2114},{level:3,title:"mergeStateMessages",slug:"mergestatemessages",normalizedTitle:"mergestatemessages",charIndex:2217},{level:3,title:"outputFiles",slug:"outputfiles",normalizedTitle:"outputfiles",charIndex:1353},{level:3,title:"outputsFiles",slug:"outputsfiles",normalizedTitle:"outputsfiles",charIndex:2899},{level:3,title:"projectId",slug:"projectid",normalizedTitle:"projectid",charIndex:3038},{level:3,title:"pythonPath",slug:"pythonpath",normalizedTitle:"pythonpath",charIndex:3141},{level:3,title:"replicationMethod",slug:"replicationmethod",normalizedTitle:"replicationmethod",charIndex:3313},{level:3,title:"requirements",slug:"requirements",normalizedTitle:"requirements",charIndex:3500},{level:3,title:"runner",slug:"runner",normalizedTitle:"runner",charIndex:698},{level:3,title:"serviceAccount",slug:"serviceaccount",normalizedTitle:"serviceaccount",charIndex:3904},{level:3,title:"tableConfigs",slug:"tableconfigs",normalizedTitle:"tableconfigs",charIndex:4012},{level:3,title:"tablePrefix",slug:"tableprefix",normalizedTitle:"tableprefix",charIndex:4117},{level:3,title:"tableSuffix",slug:"tablesuffix",normalizedTitle:"tablesuffix",charIndex:4208},{level:3,title:"tap",slug:"tap",normalizedTitle:"tap",charIndex:2381},{level:3,title:"validateRecords",slug:"validaterecords",normalizedTitle:"validaterecords",charIndex:4367},{level:3,title:"warningOnStdErr",slug:"warningonstderr",normalizedTitle:"warningonstderr",charIndex:4731},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:4859},{level:3,title:"state",slug:"state",normalizedTitle:"state",charIndex:1026},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:4923},{level:3,title:"AbstractPythonTap-2",slug:"abstractpythontap-2",normalizedTitle:"abstractpythontap-2",charIndex:4313},{level:3,title:"AbstractPythonTap-1",slug:"abstractpythontap-1",normalizedTitle:"abstractpythontap-1",charIndex:4963},{level:3,title:"DockerOptions",slug:"dockeroptions-3",normalizedTitle:"dockeroptions",charIndex:626},{level:3,title:"StreamsConfiguration",slug:"streamsconfiguration",normalizedTitle:"streamsconfiguration",charIndex:12606}],headersStr:"Properties addMetadataColumns args datasetId dockerOptions env exitOnFailed files inputFiles interpreter interpreterArgs location maxCache mergeStateMessages outputFiles outputsFiles projectId pythonPath replicationMethod requirements runner serviceAccount tableConfigs tablePrefix tableSuffix tap validateRecords warningOnStdErr Outputs state Definitions AbstractPythonTap-2 AbstractPythonTap-1 DockerOptions StreamsConfiguration",content:"AdswerveBigQuery\n\ntype: \"io.kestra.plugin.singer.targets.AdswerveBigQuery\"\n\n\n> A Singer target loads data into a BigQuery.\n\nFull documentation can be found here\n\n\n# Properties\n\n\n# addMetadataColumns\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n * Default: false\n\n> Add singer Metadata columns.\n\nAdd _time_extracted and _time_loaded metadata columns.\n\n\n# args\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Python command args\n\nArguments list to pass to main python script\n\n\n# datasetId\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> The BigQuery dataset\n\n\n# dockerOptions\n\n * Type: DockerOptions\n * Dynamic: ❓\n * Required: ❌\n\n> Docker options when using runner DOCKER\n\n\n# env\n\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Additional environnements variable to add for current process.\n\n\n# exitOnFailed\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Exit if any non true return value\n\nThis tells bash that it should exit the script if any statement returns a non-true return value.\nThe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n\n# files\n\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The list of files that will be uploaded to internal storage,\n\nuse outputFiles property instead\n\n\n# inputFiles\n\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Input files are extra files supplied by user that make it simpler organize code.\n\nDescribe a files map that will be written and usable in execution context. In python execution context is in a temp folder, for bash scripts, you can reach files using a workingDir variable like 'source {{workingDir}}/myfile.sh'\n\n\n# interpreter\n\n * Type: string\n * Dynamic: ❌\n * Required: ✔️\n * Default: /bin/sh\n * Min length: 1\n\n> Interpreter to used\n\n\n# interpreterArgs\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n * Default: [-c]\n\n> Interpreter args used\n\n\n# location\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The Dataset location\n\n\n# maxCache\n\n * Type: integer\n * Dynamic: ❌\n * Required: ❌\n * Default: 50\n\n> Maximum cache size in MB\n\n\n# mergeStateMessages\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n * Default: false\n\n> Enable control state flush\n\ndefault: merges multiple state messages from the tap into the state file, if true : uses the last state message as the state file.\n\n\n# outputFiles\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Output file list that will be uploaded to internal storage\n\nList of key that will generate temporary files.\nOn the command, just can use with special variable named outputFiles.key.\nIf you add a files with [\"first\"], you can use the special vars echo 1 >> {[ outputFiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n\n# outputsFiles\n\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Deprecated Output file\n\nuse outputFiles\n\n\n# projectId\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> The BigQuery project\n\n\n# pythonPath\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Default: python\n * Min length: 1\n\n> The python interpreter to use\n\nSet the python interpreter path to use\n\n\n# replicationMethod\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ❌\n\n * Default: append\n\n * Possible Values:\n   \n   * append\n   * truncate\n\n> The replication method, append or truncate\n\n\n# requirements\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Requirements are python dependencies to add to the python execution process\n\nPython dependencies list to setup in the virtualenv, in the same format than requirements.txt\n\n\n# runner\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ✔️\n\n * Default: PROCESS\n\n * Possible Values:\n   \n   * PROCESS\n   * DOCKER\n\n> Runner to use\n\n\n# serviceAccount\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The json service account key as string\n\n\n# tableConfigs\n\n * Type: object\n * Dynamic: ❌\n * Required: ❌\n\n> The json service account key as string\n\n\n# tablePrefix\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Add prefix to table name\n\n\n# tableSuffix\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Add suffix to table name\n\n\n# tap\n\n * Type: AbstractPythonTap-2\n * Dynamic: ❓\n * Required: ✔️\n\n\n# validateRecords\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: false\n\n> Validate every single record message to the corresponding JSON schema.\n\nThis option is disabled by default and invalid RECORD messages will fail only at load time by Postgres. Enabling this option will detect invalid records earlier but could cause performance degradation..\n\n\n# warningOnStdErr\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Use WARNING state if any stdErr is sent\n\n\n# Outputs\n\n\n# state\n\n * Type: string\n\n> Uri of the state file\n\n\n# Definitions\n\n\n# AbstractPythonTap-2\n\n\n# AbstractPythonTap-1\n\n# args\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Python command args\n\nArguments list to pass to main python script\n\n# dockerOptions\n\n * Type: DockerOptions\n * Dynamic: ❓\n * Required: ❌\n\n> Docker options when using runner DOCKER\n\nWith this Python task, we can execute a full python script.\nThe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nBy convention, you need to define at least a main.py files in inputFiles that will be the script used.\nBut you are also able to add as many script as you need in inputFiles.\n\nYou can also add a pip.conf in inputFiles to customize the pip download of dependencies (like a private registry).\n\nYou can send outputs & metrics from your python script that can be used by others tasks. In order to help, we inject a python package directly on the working dir.Here is an example usage:\n\nfrom kestra import Kestra\nKestra.outputs({'test': 'value', 'int': 2, 'bool': True, 'float': 3.65})\nKestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nKestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nKestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n# env\n\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Additional environnements variable to add for current process.\n\nWith this Python task, we can execute a full python script.\nThe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nBy convention, you need to define at least a main.py files in inputFiles that will be the script used.\nBut you are also able to add as many script as you need in inputFiles.\n\nYou can also add a pip.conf in inputFiles to customize the pip download of dependencies (like a private registry).\n\nYou can send outputs & metrics from your python script that can be used by others tasks. In order to help, we inject a python package directly on the working dir.Here is an example usage:\n\nfrom kestra import Kestra\nKestra.outputs({'test': 'value', 'int': 2, 'bool': True, 'float': 3.65})\nKestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nKestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nKestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n# exitOnFailed\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Exit if any non true return value\n\nThis tells bash that it should exit the script if any statement returns a non-true return value.\nThe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n# files\n\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The list of files that will be uploaded to internal storage,\n\nuse outputFiles property instead\n\n# inputFiles\n\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Input files are extra files supplied by user that make it simpler organize code.\n\nDescribe a files map that will be written and usable in execution context. In python execution context is in a temp folder, for bash scripts, you can reach files using a workingDir variable like 'source {{workingDir}}/myfile.sh'\n\n# interpreter\n\n * Type: string\n * Dynamic: ❌\n * Required: ✔️\n * Default: /bin/sh\n * Min length: 1\n\n> Interpreter to used\n\nWith this Python task, we can execute a full python script.\nThe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nBy convention, you need to define at least a main.py files in inputFiles that will be the script used.\nBut you are also able to add as many script as you need in inputFiles.\n\nYou can also add a pip.conf in inputFiles to customize the pip download of dependencies (like a private registry).\n\nYou can send outputs & metrics from your python script that can be used by others tasks. In order to help, we inject a python package directly on the working dir.Here is an example usage:\n\nfrom kestra import Kestra\nKestra.outputs({'test': 'value', 'int': 2, 'bool': True, 'float': 3.65})\nKestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nKestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nKestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n# interpreterArgs\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n * Default: [-c]\n\n> Interpreter args used\n\nWith this Python task, we can execute a full python script.\nThe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nBy convention, you need to define at least a main.py files in inputFiles that will be the script used.\nBut you are also able to add as many script as you need in inputFiles.\n\nYou can also add a pip.conf in inputFiles to customize the pip download of dependencies (like a private registry).\n\nYou can send outputs & metrics from your python script that can be used by others tasks. In order to help, we inject a python package directly on the working dir.Here is an example usage:\n\nfrom kestra import Kestra\nKestra.outputs({'test': 'value', 'int': 2, 'bool': True, 'float': 3.65})\nKestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nKestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nKestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n# outputFiles\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Output file list that will be uploaded to internal storage\n\nList of key that will generate temporary files.\nOn the command, just can use with special variable named outputFiles.key.\nIf you add a files with [\"first\"], you can use the special vars echo 1 >> {[ outputFiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n# outputsFiles\n\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Deprecated Output file\n\nuse outputFiles\n\n# pythonPath\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Default: python\n * Min length: 1\n\n> The python interpreter to use\n\nSet the python interpreter path to use\n\n# requirements\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Requirements are python dependencies to add to the python execution process\n\nPython dependencies list to setup in the virtualenv, in the same format than requirements.txt\n\n# runner\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ✔️\n\n * Default: PROCESS\n\n * Possible Values:\n   \n   * PROCESS\n   * DOCKER\n\n> Runner to use\n\nWith this Python task, we can execute a full python script.\nThe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nBy convention, you need to define at least a main.py files in inputFiles that will be the script used.\nBut you are also able to add as many script as you need in inputFiles.\n\nYou can also add a pip.conf in inputFiles to customize the pip download of dependencies (like a private registry).\n\nYou can send outputs & metrics from your python script that can be used by others tasks. In order to help, we inject a python package directly on the working dir.Here is an example usage:\n\nfrom kestra import Kestra\nKestra.outputs({'test': 'value', 'int': 2, 'bool': True, 'float': 3.65})\nKestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nKestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nKestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n# streamsConfigurations\n\n * Type: array\n * SubType: StreamsConfiguration\n * Dynamic: ❌\n * Required: ✔️\n * Min items: 1\n\n> The list of stream configurations\n\nWith this Python task, we can execute a full python script.\nThe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nBy convention, you need to define at least a main.py files in inputFiles that will be the script used.\nBut you are also able to add as many script as you need in inputFiles.\n\nYou can also add a pip.conf in inputFiles to customize the pip download of dependencies (like a private registry).\n\nYou can send outputs & metrics from your python script that can be used by others tasks. In order to help, we inject a python package directly on the working dir.Here is an example usage:\n\nfrom kestra import Kestra\nKestra.outputs({'test': 'value', 'int': 2, 'bool': True, 'float': 3.65})\nKestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nKestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nKestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n# warningOnStdErr\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Use WARNING state if any stdErr is sent\n\nWith this Python task, we can execute a full python script.\nThe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nBy convention, you need to define at least a main.py files in inputFiles that will be the script used.\nBut you are also able to add as many script as you need in inputFiles.\n\nYou can also add a pip.conf in inputFiles to customize the pip download of dependencies (like a private registry).\n\nYou can send outputs & metrics from your python script that can be used by others tasks. In order to help, we inject a python package directly on the working dir.Here is an example usage:\n\nfrom kestra import Kestra\nKestra.outputs({'test': 'value', 'int': 2, 'bool': True, 'float': 3.65})\nKestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nKestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nKestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n\n# DockerOptions\n\n# dockerConfig\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker config file\n\nFull file that can be used to configure private registries, ...\n\n# dockerHost\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: unix:///var/run/docker.sock\n\n> Docker api uri\n\n# entryPoint\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker entrypoint to use\n\n# extraHosts\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker extra host to use\n\n# image\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> Docker image to use\n\n# user\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker user to use\n\n\n# StreamsConfiguration\n\n# propertiesPattern\n\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n\n# replicationKeys\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# replicationMethod\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Possible Values:\n   \n   * FULL_TABLE\n   * INCREMENTAL\n   * LOG_BASED\n\n# selected\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: true\n\n# stream\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌",normalizedContent:"adswervebigquery\n\ntype: \"io.kestra.plugin.singer.targets.adswervebigquery\"\n\n\n> a singer target loads data into a bigquery.\n\nfull documentation can be found here\n\n\n# properties\n\n\n# addmetadatacolumns\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n * default: false\n\n> add singer metadata columns.\n\nadd _time_extracted and _time_loaded metadata columns.\n\n\n# args\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> python command args\n\narguments list to pass to main python script\n\n\n# datasetid\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> the bigquery dataset\n\n\n# dockeroptions\n\n * type: dockeroptions\n * dynamic: ❓\n * required: ❌\n\n> docker options when using runner docker\n\n\n# env\n\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> additional environnements variable to add for current process.\n\n\n# exitonfailed\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> exit if any non true return value\n\nthis tells bash that it should exit the script if any statement returns a non-true return value.\nthe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n\n# files\n\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> the list of files that will be uploaded to internal storage,\n\nuse outputfiles property instead\n\n\n# inputfiles\n\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> input files are extra files supplied by user that make it simpler organize code.\n\ndescribe a files map that will be written and usable in execution context. in python execution context is in a temp folder, for bash scripts, you can reach files using a workingdir variable like 'source {{workingdir}}/myfile.sh'\n\n\n# interpreter\n\n * type: string\n * dynamic: ❌\n * required: ✔️\n * default: /bin/sh\n * min length: 1\n\n> interpreter to used\n\n\n# interpreterargs\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n * default: [-c]\n\n> interpreter args used\n\n\n# location\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the dataset location\n\n\n# maxcache\n\n * type: integer\n * dynamic: ❌\n * required: ❌\n * default: 50\n\n> maximum cache size in mb\n\n\n# mergestatemessages\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n * default: false\n\n> enable control state flush\n\ndefault: merges multiple state messages from the tap into the state file, if true : uses the last state message as the state file.\n\n\n# outputfiles\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> output file list that will be uploaded to internal storage\n\nlist of key that will generate temporary files.\non the command, just can use with special variable named outputfiles.key.\nif you add a files with [\"first\"], you can use the special vars echo 1 >> {[ outputfiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n\n# outputsfiles\n\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> deprecated output file\n\nuse outputfiles\n\n\n# projectid\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> the bigquery project\n\n\n# pythonpath\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * default: python\n * min length: 1\n\n> the python interpreter to use\n\nset the python interpreter path to use\n\n\n# replicationmethod\n\n * type: string\n\n * dynamic: ❌\n\n * required: ❌\n\n * default: append\n\n * possible values:\n   \n   * append\n   * truncate\n\n> the replication method, append or truncate\n\n\n# requirements\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> requirements are python dependencies to add to the python execution process\n\npython dependencies list to setup in the virtualenv, in the same format than requirements.txt\n\n\n# runner\n\n * type: string\n\n * dynamic: ❌\n\n * required: ✔️\n\n * default: process\n\n * possible values:\n   \n   * process\n   * docker\n\n> runner to use\n\n\n# serviceaccount\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the json service account key as string\n\n\n# tableconfigs\n\n * type: object\n * dynamic: ❌\n * required: ❌\n\n> the json service account key as string\n\n\n# tableprefix\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> add prefix to table name\n\n\n# tablesuffix\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> add suffix to table name\n\n\n# tap\n\n * type: abstractpythontap-2\n * dynamic: ❓\n * required: ✔️\n\n\n# validaterecords\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: false\n\n> validate every single record message to the corresponding json schema.\n\nthis option is disabled by default and invalid record messages will fail only at load time by postgres. enabling this option will detect invalid records earlier but could cause performance degradation..\n\n\n# warningonstderr\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> use warning state if any stderr is sent\n\n\n# outputs\n\n\n# state\n\n * type: string\n\n> uri of the state file\n\n\n# definitions\n\n\n# abstractpythontap-2\n\n\n# abstractpythontap-1\n\n# args\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> python command args\n\narguments list to pass to main python script\n\n# dockeroptions\n\n * type: dockeroptions\n * dynamic: ❓\n * required: ❌\n\n> docker options when using runner docker\n\nwith this python task, we can execute a full python script.\nthe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nby convention, you need to define at least a main.py files in inputfiles that will be the script used.\nbut you are also able to add as many script as you need in inputfiles.\n\nyou can also add a pip.conf in inputfiles to customize the pip download of dependencies (like a private registry).\n\nyou can send outputs & metrics from your python script that can be used by others tasks. in order to help, we inject a python package directly on the working dir.here is an example usage:\n\nfrom kestra import kestra\nkestra.outputs({'test': 'value', 'int': 2, 'bool': true, 'float': 3.65})\nkestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nkestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nkestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n# env\n\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> additional environnements variable to add for current process.\n\nwith this python task, we can execute a full python script.\nthe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nby convention, you need to define at least a main.py files in inputfiles that will be the script used.\nbut you are also able to add as many script as you need in inputfiles.\n\nyou can also add a pip.conf in inputfiles to customize the pip download of dependencies (like a private registry).\n\nyou can send outputs & metrics from your python script that can be used by others tasks. in order to help, we inject a python package directly on the working dir.here is an example usage:\n\nfrom kestra import kestra\nkestra.outputs({'test': 'value', 'int': 2, 'bool': true, 'float': 3.65})\nkestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nkestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nkestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n# exitonfailed\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> exit if any non true return value\n\nthis tells bash that it should exit the script if any statement returns a non-true return value.\nthe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n# files\n\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> the list of files that will be uploaded to internal storage,\n\nuse outputfiles property instead\n\n# inputfiles\n\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> input files are extra files supplied by user that make it simpler organize code.\n\ndescribe a files map that will be written and usable in execution context. in python execution context is in a temp folder, for bash scripts, you can reach files using a workingdir variable like 'source {{workingdir}}/myfile.sh'\n\n# interpreter\n\n * type: string\n * dynamic: ❌\n * required: ✔️\n * default: /bin/sh\n * min length: 1\n\n> interpreter to used\n\nwith this python task, we can execute a full python script.\nthe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nby convention, you need to define at least a main.py files in inputfiles that will be the script used.\nbut you are also able to add as many script as you need in inputfiles.\n\nyou can also add a pip.conf in inputfiles to customize the pip download of dependencies (like a private registry).\n\nyou can send outputs & metrics from your python script that can be used by others tasks. in order to help, we inject a python package directly on the working dir.here is an example usage:\n\nfrom kestra import kestra\nkestra.outputs({'test': 'value', 'int': 2, 'bool': true, 'float': 3.65})\nkestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nkestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nkestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n# interpreterargs\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n * default: [-c]\n\n> interpreter args used\n\nwith this python task, we can execute a full python script.\nthe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nby convention, you need to define at least a main.py files in inputfiles that will be the script used.\nbut you are also able to add as many script as you need in inputfiles.\n\nyou can also add a pip.conf in inputfiles to customize the pip download of dependencies (like a private registry).\n\nyou can send outputs & metrics from your python script that can be used by others tasks. in order to help, we inject a python package directly on the working dir.here is an example usage:\n\nfrom kestra import kestra\nkestra.outputs({'test': 'value', 'int': 2, 'bool': true, 'float': 3.65})\nkestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nkestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nkestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n# outputfiles\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> output file list that will be uploaded to internal storage\n\nlist of key that will generate temporary files.\non the command, just can use with special variable named outputfiles.key.\nif you add a files with [\"first\"], you can use the special vars echo 1 >> {[ outputfiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n# outputsfiles\n\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> deprecated output file\n\nuse outputfiles\n\n# pythonpath\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * default: python\n * min length: 1\n\n> the python interpreter to use\n\nset the python interpreter path to use\n\n# requirements\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> requirements are python dependencies to add to the python execution process\n\npython dependencies list to setup in the virtualenv, in the same format than requirements.txt\n\n# runner\n\n * type: string\n\n * dynamic: ❌\n\n * required: ✔️\n\n * default: process\n\n * possible values:\n   \n   * process\n   * docker\n\n> runner to use\n\nwith this python task, we can execute a full python script.\nthe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nby convention, you need to define at least a main.py files in inputfiles that will be the script used.\nbut you are also able to add as many script as you need in inputfiles.\n\nyou can also add a pip.conf in inputfiles to customize the pip download of dependencies (like a private registry).\n\nyou can send outputs & metrics from your python script that can be used by others tasks. in order to help, we inject a python package directly on the working dir.here is an example usage:\n\nfrom kestra import kestra\nkestra.outputs({'test': 'value', 'int': 2, 'bool': true, 'float': 3.65})\nkestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nkestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nkestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n# streamsconfigurations\n\n * type: array\n * subtype: streamsconfiguration\n * dynamic: ❌\n * required: ✔️\n * min items: 1\n\n> the list of stream configurations\n\nwith this python task, we can execute a full python script.\nthe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nby convention, you need to define at least a main.py files in inputfiles that will be the script used.\nbut you are also able to add as many script as you need in inputfiles.\n\nyou can also add a pip.conf in inputfiles to customize the pip download of dependencies (like a private registry).\n\nyou can send outputs & metrics from your python script that can be used by others tasks. in order to help, we inject a python package directly on the working dir.here is an example usage:\n\nfrom kestra import kestra\nkestra.outputs({'test': 'value', 'int': 2, 'bool': true, 'float': 3.65})\nkestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nkestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nkestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n# warningonstderr\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> use warning state if any stderr is sent\n\nwith this python task, we can execute a full python script.\nthe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nby convention, you need to define at least a main.py files in inputfiles that will be the script used.\nbut you are also able to add as many script as you need in inputfiles.\n\nyou can also add a pip.conf in inputfiles to customize the pip download of dependencies (like a private registry).\n\nyou can send outputs & metrics from your python script that can be used by others tasks. in order to help, we inject a python package directly on the working dir.here is an example usage:\n\nfrom kestra import kestra\nkestra.outputs({'test': 'value', 'int': 2, 'bool': true, 'float': 3.65})\nkestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nkestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nkestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n\n# dockeroptions\n\n# dockerconfig\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> docker config file\n\nfull file that can be used to configure private registries, ...\n\n# dockerhost\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n * default: unix:///var/run/docker.sock\n\n> docker api uri\n\n# entrypoint\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> docker entrypoint to use\n\n# extrahosts\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> docker extra host to use\n\n# image\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> docker image to use\n\n# user\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> docker user to use\n\n\n# streamsconfiguration\n\n# propertiespattern\n\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n\n# replicationkeys\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# replicationmethod\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * possible values:\n   \n   * full_table\n   * incremental\n   * log_based\n\n# selected\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: true\n\n# stream\n\n * type: string\n * dynamic: ❓\n * required: ❌",charsets:{}},{title:"Csv",frontmatter:{title:"Csv",editLink:!1,description:"A Singer target loads data into a CSV Files.",icon:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB3aWR0aD0iMzg0IiBoZWlnaHQ9IjUxMiIKICAgICBwcmVzZXJ2ZUFzcGVjdFJhdGlvPSJ4TWlkWU1pZCBtZWV0IiB2aWV3Qm94PSIwIDAgMzg0IDUxMiIKICAgICBzdHlsZT0iLW1zLXRyYW5zZm9ybTogcm90YXRlKDM2MGRlZyk7IC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTsgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTsiPgogICAgPHBhdGggZD0iTTIyNCAxMzZWMEgyNEMxMC43IDAgMCAxMC43IDAgMjR2NDY0YzAgMTMuMyAxMC43IDI0IDI0IDI0aDMzNmMxMy4zIDAgMjQtMTAuNyAyNC0yNFYxNjBIMjQ4Yy0xMy4yIDAtMjQtMTAuOC0yNC0yNHptLTk2IDE0NGMwIDQuNDItMy41OCA4LTggOGgtOGMtOC44NCAwLTE2IDcuMTYtMTYgMTZ2MzJjMCA4Ljg0IDcuMTYgMTYgMTYgMTZoOGM0LjQyIDAgOCAzLjU4IDggOHYxNmMwIDQuNDItMy41OCA4LTggOGgtOGMtMjYuNTEgMC00OC0yMS40OS00OC00OHYtMzJjMC0yNi41MSAyMS40OS00OCA0OC00OGg4YzQuNDIgMCA4IDMuNTggOCA4djE2em00NC4yNyAxMDRIMTYwYy00LjQyIDAtOC0zLjU4LTgtOHYtMTZjMC00LjQyIDMuNTgtOCA4LThoMTIuMjdjNS45NSAwIDEwLjQxLTMuNSAxMC40MS02LjYyYzAtMS4zLS43NS0yLjY2LTIuMTItMy44NGwtMjEuODktMTguNzdjLTguNDctNy4yMi0xMy4zMy0xNy40OC0xMy4zMy0yOC4xNGMwLTIxLjMgMTkuMDItMzguNjIgNDIuNDEtMzguNjJIMjAwYzQuNDIgMCA4IDMuNTggOCA4djE2YzAgNC40Mi0zLjU4IDgtOCA4aC0xMi4yN2MtNS45NSAwLTEwLjQxIDMuNS0xMC40MSA2LjYyYzAgMS4zLjc1IDIuNjYgMi4xMiAzLjg0bDIxLjg5IDE4Ljc3YzguNDcgNy4yMiAxMy4zMyAxNy40OCAxMy4zMyAyOC4xNGMuMDEgMjEuMjktMTkgMzguNjItNDIuMzkgMzguNjJ6TTI1NiAyNjR2MjAuOGMwIDIwLjI3IDUuNyA0MC4xNyAxNiA1Ni44OGMxMC4zLTE2LjcgMTYtMzYuNjEgMTYtNTYuODhWMjY0YzAtNC40MiAzLjU4LTggOC04aDE2YzQuNDIgMCA4IDMuNTggOCA4djIwLjhjMCAzNS40OC0xMi44OCA2OC44OS0zNi4yOCA5NC4wOWMtMy4wMiAzLjI1LTcuMjcgNS4xMS0xMS43MiA1LjExcy04LjctMS44Ni0xMS43Mi01LjExYy0yMy40LTI1LjItMzYuMjgtNTguNjEtMzYuMjgtOTQuMDlWMjY0YzAtNC40MiAzLjU4LTggOC04aDE2YzQuNDIgMCA4IDMuNTggOCA4em0xMjEtMTU5TDI3OS4xIDdjLTQuNS00LjUtMTAuNi03LTE3LTdIMjU2djEyOGgxMjh2LTYuMWMwLTYuMy0yLjUtMTIuNC03LTE2Ljl6IgogICAgICAgICAgZmlsbD0iIzMzMyIvPgo8L3N2Zz4K",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Csv"},{property:"og:description",content:"A Singer target loads data into a CSV Files. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-singer/tasks/targets/io.kestra.plugin.singer.targets.Csv.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Csv"},{name:"twitter:description",content:"A Singer target loads data into a CSV Files. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-singer/tasks/targets/io.kestra.plugin.singer.targets.Csv.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-singer/tasks/targets/io.kestra.plugin.singer.targets.Csv.html",relativePath:"plugins/plugin-singer/tasks/targets/io.kestra.plugin.singer.targets.Csv.md",key:"v-362c4c43",path:"/plugins/plugin-singer/tasks/targets/io.kestra.plugin.singer.targets.Csv.html",headers:[{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:140},{level:3,title:"args",slug:"args",normalizedTitle:"args",charIndex:155},{level:3,title:"delimiter",slug:"delimiter",normalizedTitle:"delimiter",charIndex:298},{level:3,title:"dockerOptions",slug:"dockeroptions",normalizedTitle:"dockeroptions",charIndex:442},{level:3,title:"env",slug:"env",normalizedTitle:"env",charIndex:556},{level:3,title:"exitOnFailed",slug:"exitonfailed",normalizedTitle:"exitonfailed",charIndex:696},{level:3,title:"files",slug:"files",normalizedTitle:"files",charIndex:1038},{level:3,title:"inputFiles",slug:"inputfiles",normalizedTitle:"inputfiles",charIndex:1226},{level:3,title:"interpreter",slug:"interpreter",normalizedTitle:"interpreter",charIndex:1621},{level:3,title:"interpreterArgs",slug:"interpreterargs",normalizedTitle:"interpreterargs",charIndex:1744},{level:3,title:"outputFiles",slug:"outputfiles",normalizedTitle:"outputfiles",charIndex:1193},{level:3,title:"outputsFiles",slug:"outputsfiles",normalizedTitle:"outputsfiles",charIndex:2302},{level:3,title:"pythonPath",slug:"pythonpath",normalizedTitle:"pythonpath",charIndex:2441},{level:3,title:"quoteCharacters",slug:"quotecharacters",normalizedTitle:"quotecharacters",charIndex:2613},{level:3,title:"requirements",slug:"requirements",normalizedTitle:"requirements",charIndex:2864},{level:3,title:"runner",slug:"runner",normalizedTitle:"runner",charIndex:538},{level:3,title:"tap",slug:"tap",normalizedTitle:"tap",charIndex:3268},{level:3,title:"warningOnStdErr",slug:"warningonstderr",normalizedTitle:"warningonstderr",charIndex:3336},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:3464},{level:3,title:"state",slug:"state",normalizedTitle:"state",charIndex:866},{level:3,title:"uris",slug:"uris",normalizedTitle:"uris",charIndex:3528},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:3641},{level:3,title:"AbstractPythonTap-2",slug:"abstractpythontap-2",normalizedTitle:"abstractpythontap-2",charIndex:3282},{level:3,title:"AbstractPythonTap-1",slug:"abstractpythontap-1",normalizedTitle:"abstractpythontap-1",charIndex:3681},{level:3,title:"DockerOptions",slug:"dockeroptions-3",normalizedTitle:"dockeroptions",charIndex:466},{level:3,title:"StreamsConfiguration",slug:"streamsconfiguration",normalizedTitle:"streamsconfiguration",charIndex:11324}],headersStr:"Properties args delimiter dockerOptions env exitOnFailed files inputFiles interpreter interpreterArgs outputFiles outputsFiles pythonPath quoteCharacters requirements runner tap warningOnStdErr Outputs state uris Definitions AbstractPythonTap-2 AbstractPythonTap-1 DockerOptions StreamsConfiguration",content:"Csv\n\ntype: \"io.kestra.plugin.singer.targets.Csv\"\n\n\n> A Singer target loads data into a CSV Files.\n\nFull documentation can be found here\n\n\n# Properties\n\n\n# args\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Python command args\n\nArguments list to pass to main python script\n\n\n# delimiter\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Default: ,\n * Min length: 1\n\n> A one-character string used to separate fields.\n\n\n# dockerOptions\n\n * Type: DockerOptions\n * Dynamic: ❓\n * Required: ❌\n\n> Docker options when using runner DOCKER\n\n\n# env\n\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Additional environnements variable to add for current process.\n\n\n# exitOnFailed\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Exit if any non true return value\n\nThis tells bash that it should exit the script if any statement returns a non-true return value.\nThe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n\n# files\n\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The list of files that will be uploaded to internal storage,\n\nuse outputFiles property instead\n\n\n# inputFiles\n\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Input files are extra files supplied by user that make it simpler organize code.\n\nDescribe a files map that will be written and usable in execution context. In python execution context is in a temp folder, for bash scripts, you can reach files using a workingDir variable like 'source {{workingDir}}/myfile.sh'\n\n\n# interpreter\n\n * Type: string\n * Dynamic: ❌\n * Required: ✔️\n * Default: /bin/sh\n * Min length: 1\n\n> Interpreter to used\n\n\n# interpreterArgs\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n * Default: [-c]\n\n> Interpreter args used\n\n\n# outputFiles\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Output file list that will be uploaded to internal storage\n\nList of key that will generate temporary files.\nOn the command, just can use with special variable named outputFiles.key.\nIf you add a files with [\"first\"], you can use the special vars echo 1 >> {[ outputFiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n\n# outputsFiles\n\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Deprecated Output file\n\nuse outputFiles\n\n\n# pythonPath\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Default: python\n * Min length: 1\n\n> The python interpreter to use\n\nSet the python interpreter path to use\n\n\n# quoteCharacters\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Default: \"\n * Min length: 1\n\n> A one-character string used to quote fields containing special characters, such as the delimiter or quotechar, or which contain new-line characters.\n\n\n# requirements\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Requirements are python dependencies to add to the python execution process\n\nPython dependencies list to setup in the virtualenv, in the same format than requirements.txt\n\n\n# runner\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ✔️\n\n * Default: PROCESS\n\n * Possible Values:\n   \n   * PROCESS\n   * DOCKER\n\n> Runner to use\n\n\n# tap\n\n * Type: AbstractPythonTap-2\n * Dynamic: ❓\n * Required: ✔️\n\n\n# warningOnStdErr\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Use WARNING state if any stdErr is sent\n\n\n# Outputs\n\n\n# state\n\n * Type: string\n\n> Uri of the state file\n\n\n# uris\n\n * Type: object\n * SubType: string\n\n> Uri of the generated csv\n\nThe key will be the name of the stream\n\n\n# Definitions\n\n\n# AbstractPythonTap-2\n\n\n# AbstractPythonTap-1\n\n# args\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Python command args\n\nArguments list to pass to main python script\n\n# dockerOptions\n\n * Type: DockerOptions\n * Dynamic: ❓\n * Required: ❌\n\n> Docker options when using runner DOCKER\n\nWith this Python task, we can execute a full python script.\nThe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nBy convention, you need to define at least a main.py files in inputFiles that will be the script used.\nBut you are also able to add as many script as you need in inputFiles.\n\nYou can also add a pip.conf in inputFiles to customize the pip download of dependencies (like a private registry).\n\nYou can send outputs & metrics from your python script that can be used by others tasks. In order to help, we inject a python package directly on the working dir.Here is an example usage:\n\nfrom kestra import Kestra\nKestra.outputs({'test': 'value', 'int': 2, 'bool': True, 'float': 3.65})\nKestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nKestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nKestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n# env\n\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Additional environnements variable to add for current process.\n\nWith this Python task, we can execute a full python script.\nThe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nBy convention, you need to define at least a main.py files in inputFiles that will be the script used.\nBut you are also able to add as many script as you need in inputFiles.\n\nYou can also add a pip.conf in inputFiles to customize the pip download of dependencies (like a private registry).\n\nYou can send outputs & metrics from your python script that can be used by others tasks. In order to help, we inject a python package directly on the working dir.Here is an example usage:\n\nfrom kestra import Kestra\nKestra.outputs({'test': 'value', 'int': 2, 'bool': True, 'float': 3.65})\nKestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nKestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nKestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n# exitOnFailed\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Exit if any non true return value\n\nThis tells bash that it should exit the script if any statement returns a non-true return value.\nThe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n# files\n\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The list of files that will be uploaded to internal storage,\n\nuse outputFiles property instead\n\n# inputFiles\n\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Input files are extra files supplied by user that make it simpler organize code.\n\nDescribe a files map that will be written and usable in execution context. In python execution context is in a temp folder, for bash scripts, you can reach files using a workingDir variable like 'source {{workingDir}}/myfile.sh'\n\n# interpreter\n\n * Type: string\n * Dynamic: ❌\n * Required: ✔️\n * Default: /bin/sh\n * Min length: 1\n\n> Interpreter to used\n\nWith this Python task, we can execute a full python script.\nThe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nBy convention, you need to define at least a main.py files in inputFiles that will be the script used.\nBut you are also able to add as many script as you need in inputFiles.\n\nYou can also add a pip.conf in inputFiles to customize the pip download of dependencies (like a private registry).\n\nYou can send outputs & metrics from your python script that can be used by others tasks. In order to help, we inject a python package directly on the working dir.Here is an example usage:\n\nfrom kestra import Kestra\nKestra.outputs({'test': 'value', 'int': 2, 'bool': True, 'float': 3.65})\nKestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nKestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nKestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n# interpreterArgs\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n * Default: [-c]\n\n> Interpreter args used\n\nWith this Python task, we can execute a full python script.\nThe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nBy convention, you need to define at least a main.py files in inputFiles that will be the script used.\nBut you are also able to add as many script as you need in inputFiles.\n\nYou can also add a pip.conf in inputFiles to customize the pip download of dependencies (like a private registry).\n\nYou can send outputs & metrics from your python script that can be used by others tasks. In order to help, we inject a python package directly on the working dir.Here is an example usage:\n\nfrom kestra import Kestra\nKestra.outputs({'test': 'value', 'int': 2, 'bool': True, 'float': 3.65})\nKestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nKestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nKestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n# outputFiles\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Output file list that will be uploaded to internal storage\n\nList of key that will generate temporary files.\nOn the command, just can use with special variable named outputFiles.key.\nIf you add a files with [\"first\"], you can use the special vars echo 1 >> {[ outputFiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n# outputsFiles\n\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Deprecated Output file\n\nuse outputFiles\n\n# pythonPath\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Default: python\n * Min length: 1\n\n> The python interpreter to use\n\nSet the python interpreter path to use\n\n# requirements\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Requirements are python dependencies to add to the python execution process\n\nPython dependencies list to setup in the virtualenv, in the same format than requirements.txt\n\n# runner\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ✔️\n\n * Default: PROCESS\n\n * Possible Values:\n   \n   * PROCESS\n   * DOCKER\n\n> Runner to use\n\nWith this Python task, we can execute a full python script.\nThe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nBy convention, you need to define at least a main.py files in inputFiles that will be the script used.\nBut you are also able to add as many script as you need in inputFiles.\n\nYou can also add a pip.conf in inputFiles to customize the pip download of dependencies (like a private registry).\n\nYou can send outputs & metrics from your python script that can be used by others tasks. In order to help, we inject a python package directly on the working dir.Here is an example usage:\n\nfrom kestra import Kestra\nKestra.outputs({'test': 'value', 'int': 2, 'bool': True, 'float': 3.65})\nKestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nKestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nKestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n# streamsConfigurations\n\n * Type: array\n * SubType: StreamsConfiguration\n * Dynamic: ❌\n * Required: ✔️\n * Min items: 1\n\n> The list of stream configurations\n\nWith this Python task, we can execute a full python script.\nThe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nBy convention, you need to define at least a main.py files in inputFiles that will be the script used.\nBut you are also able to add as many script as you need in inputFiles.\n\nYou can also add a pip.conf in inputFiles to customize the pip download of dependencies (like a private registry).\n\nYou can send outputs & metrics from your python script that can be used by others tasks. In order to help, we inject a python package directly on the working dir.Here is an example usage:\n\nfrom kestra import Kestra\nKestra.outputs({'test': 'value', 'int': 2, 'bool': True, 'float': 3.65})\nKestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nKestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nKestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n# warningOnStdErr\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Use WARNING state if any stdErr is sent\n\nWith this Python task, we can execute a full python script.\nThe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nBy convention, you need to define at least a main.py files in inputFiles that will be the script used.\nBut you are also able to add as many script as you need in inputFiles.\n\nYou can also add a pip.conf in inputFiles to customize the pip download of dependencies (like a private registry).\n\nYou can send outputs & metrics from your python script that can be used by others tasks. In order to help, we inject a python package directly on the working dir.Here is an example usage:\n\nfrom kestra import Kestra\nKestra.outputs({'test': 'value', 'int': 2, 'bool': True, 'float': 3.65})\nKestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nKestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nKestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n\n# DockerOptions\n\n# dockerConfig\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker config file\n\nFull file that can be used to configure private registries, ...\n\n# dockerHost\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: unix:///var/run/docker.sock\n\n> Docker api uri\n\n# entryPoint\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker entrypoint to use\n\n# extraHosts\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker extra host to use\n\n# image\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> Docker image to use\n\n# user\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker user to use\n\n\n# StreamsConfiguration\n\n# propertiesPattern\n\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n\n# replicationKeys\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# replicationMethod\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Possible Values:\n   \n   * FULL_TABLE\n   * INCREMENTAL\n   * LOG_BASED\n\n# selected\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: true\n\n# stream\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌",normalizedContent:"csv\n\ntype: \"io.kestra.plugin.singer.targets.csv\"\n\n\n> a singer target loads data into a csv files.\n\nfull documentation can be found here\n\n\n# properties\n\n\n# args\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> python command args\n\narguments list to pass to main python script\n\n\n# delimiter\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * default: ,\n * min length: 1\n\n> a one-character string used to separate fields.\n\n\n# dockeroptions\n\n * type: dockeroptions\n * dynamic: ❓\n * required: ❌\n\n> docker options when using runner docker\n\n\n# env\n\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> additional environnements variable to add for current process.\n\n\n# exitonfailed\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> exit if any non true return value\n\nthis tells bash that it should exit the script if any statement returns a non-true return value.\nthe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n\n# files\n\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> the list of files that will be uploaded to internal storage,\n\nuse outputfiles property instead\n\n\n# inputfiles\n\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> input files are extra files supplied by user that make it simpler organize code.\n\ndescribe a files map that will be written and usable in execution context. in python execution context is in a temp folder, for bash scripts, you can reach files using a workingdir variable like 'source {{workingdir}}/myfile.sh'\n\n\n# interpreter\n\n * type: string\n * dynamic: ❌\n * required: ✔️\n * default: /bin/sh\n * min length: 1\n\n> interpreter to used\n\n\n# interpreterargs\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n * default: [-c]\n\n> interpreter args used\n\n\n# outputfiles\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> output file list that will be uploaded to internal storage\n\nlist of key that will generate temporary files.\non the command, just can use with special variable named outputfiles.key.\nif you add a files with [\"first\"], you can use the special vars echo 1 >> {[ outputfiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n\n# outputsfiles\n\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> deprecated output file\n\nuse outputfiles\n\n\n# pythonpath\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * default: python\n * min length: 1\n\n> the python interpreter to use\n\nset the python interpreter path to use\n\n\n# quotecharacters\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * default: \"\n * min length: 1\n\n> a one-character string used to quote fields containing special characters, such as the delimiter or quotechar, or which contain new-line characters.\n\n\n# requirements\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> requirements are python dependencies to add to the python execution process\n\npython dependencies list to setup in the virtualenv, in the same format than requirements.txt\n\n\n# runner\n\n * type: string\n\n * dynamic: ❌\n\n * required: ✔️\n\n * default: process\n\n * possible values:\n   \n   * process\n   * docker\n\n> runner to use\n\n\n# tap\n\n * type: abstractpythontap-2\n * dynamic: ❓\n * required: ✔️\n\n\n# warningonstderr\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> use warning state if any stderr is sent\n\n\n# outputs\n\n\n# state\n\n * type: string\n\n> uri of the state file\n\n\n# uris\n\n * type: object\n * subtype: string\n\n> uri of the generated csv\n\nthe key will be the name of the stream\n\n\n# definitions\n\n\n# abstractpythontap-2\n\n\n# abstractpythontap-1\n\n# args\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> python command args\n\narguments list to pass to main python script\n\n# dockeroptions\n\n * type: dockeroptions\n * dynamic: ❓\n * required: ❌\n\n> docker options when using runner docker\n\nwith this python task, we can execute a full python script.\nthe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nby convention, you need to define at least a main.py files in inputfiles that will be the script used.\nbut you are also able to add as many script as you need in inputfiles.\n\nyou can also add a pip.conf in inputfiles to customize the pip download of dependencies (like a private registry).\n\nyou can send outputs & metrics from your python script that can be used by others tasks. in order to help, we inject a python package directly on the working dir.here is an example usage:\n\nfrom kestra import kestra\nkestra.outputs({'test': 'value', 'int': 2, 'bool': true, 'float': 3.65})\nkestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nkestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nkestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n# env\n\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> additional environnements variable to add for current process.\n\nwith this python task, we can execute a full python script.\nthe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nby convention, you need to define at least a main.py files in inputfiles that will be the script used.\nbut you are also able to add as many script as you need in inputfiles.\n\nyou can also add a pip.conf in inputfiles to customize the pip download of dependencies (like a private registry).\n\nyou can send outputs & metrics from your python script that can be used by others tasks. in order to help, we inject a python package directly on the working dir.here is an example usage:\n\nfrom kestra import kestra\nkestra.outputs({'test': 'value', 'int': 2, 'bool': true, 'float': 3.65})\nkestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nkestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nkestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n# exitonfailed\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> exit if any non true return value\n\nthis tells bash that it should exit the script if any statement returns a non-true return value.\nthe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n# files\n\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> the list of files that will be uploaded to internal storage,\n\nuse outputfiles property instead\n\n# inputfiles\n\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> input files are extra files supplied by user that make it simpler organize code.\n\ndescribe a files map that will be written and usable in execution context. in python execution context is in a temp folder, for bash scripts, you can reach files using a workingdir variable like 'source {{workingdir}}/myfile.sh'\n\n# interpreter\n\n * type: string\n * dynamic: ❌\n * required: ✔️\n * default: /bin/sh\n * min length: 1\n\n> interpreter to used\n\nwith this python task, we can execute a full python script.\nthe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nby convention, you need to define at least a main.py files in inputfiles that will be the script used.\nbut you are also able to add as many script as you need in inputfiles.\n\nyou can also add a pip.conf in inputfiles to customize the pip download of dependencies (like a private registry).\n\nyou can send outputs & metrics from your python script that can be used by others tasks. in order to help, we inject a python package directly on the working dir.here is an example usage:\n\nfrom kestra import kestra\nkestra.outputs({'test': 'value', 'int': 2, 'bool': true, 'float': 3.65})\nkestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nkestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nkestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n# interpreterargs\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n * default: [-c]\n\n> interpreter args used\n\nwith this python task, we can execute a full python script.\nthe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nby convention, you need to define at least a main.py files in inputfiles that will be the script used.\nbut you are also able to add as many script as you need in inputfiles.\n\nyou can also add a pip.conf in inputfiles to customize the pip download of dependencies (like a private registry).\n\nyou can send outputs & metrics from your python script that can be used by others tasks. in order to help, we inject a python package directly on the working dir.here is an example usage:\n\nfrom kestra import kestra\nkestra.outputs({'test': 'value', 'int': 2, 'bool': true, 'float': 3.65})\nkestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nkestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nkestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n# outputfiles\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> output file list that will be uploaded to internal storage\n\nlist of key that will generate temporary files.\non the command, just can use with special variable named outputfiles.key.\nif you add a files with [\"first\"], you can use the special vars echo 1 >> {[ outputfiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n# outputsfiles\n\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> deprecated output file\n\nuse outputfiles\n\n# pythonpath\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * default: python\n * min length: 1\n\n> the python interpreter to use\n\nset the python interpreter path to use\n\n# requirements\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> requirements are python dependencies to add to the python execution process\n\npython dependencies list to setup in the virtualenv, in the same format than requirements.txt\n\n# runner\n\n * type: string\n\n * dynamic: ❌\n\n * required: ✔️\n\n * default: process\n\n * possible values:\n   \n   * process\n   * docker\n\n> runner to use\n\nwith this python task, we can execute a full python script.\nthe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nby convention, you need to define at least a main.py files in inputfiles that will be the script used.\nbut you are also able to add as many script as you need in inputfiles.\n\nyou can also add a pip.conf in inputfiles to customize the pip download of dependencies (like a private registry).\n\nyou can send outputs & metrics from your python script that can be used by others tasks. in order to help, we inject a python package directly on the working dir.here is an example usage:\n\nfrom kestra import kestra\nkestra.outputs({'test': 'value', 'int': 2, 'bool': true, 'float': 3.65})\nkestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nkestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nkestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n# streamsconfigurations\n\n * type: array\n * subtype: streamsconfiguration\n * dynamic: ❌\n * required: ✔️\n * min items: 1\n\n> the list of stream configurations\n\nwith this python task, we can execute a full python script.\nthe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nby convention, you need to define at least a main.py files in inputfiles that will be the script used.\nbut you are also able to add as many script as you need in inputfiles.\n\nyou can also add a pip.conf in inputfiles to customize the pip download of dependencies (like a private registry).\n\nyou can send outputs & metrics from your python script that can be used by others tasks. in order to help, we inject a python package directly on the working dir.here is an example usage:\n\nfrom kestra import kestra\nkestra.outputs({'test': 'value', 'int': 2, 'bool': true, 'float': 3.65})\nkestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nkestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nkestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n# warningonstderr\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> use warning state if any stderr is sent\n\nwith this python task, we can execute a full python script.\nthe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nby convention, you need to define at least a main.py files in inputfiles that will be the script used.\nbut you are also able to add as many script as you need in inputfiles.\n\nyou can also add a pip.conf in inputfiles to customize the pip download of dependencies (like a private registry).\n\nyou can send outputs & metrics from your python script that can be used by others tasks. in order to help, we inject a python package directly on the working dir.here is an example usage:\n\nfrom kestra import kestra\nkestra.outputs({'test': 'value', 'int': 2, 'bool': true, 'float': 3.65})\nkestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nkestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nkestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n\n# dockeroptions\n\n# dockerconfig\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> docker config file\n\nfull file that can be used to configure private registries, ...\n\n# dockerhost\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n * default: unix:///var/run/docker.sock\n\n> docker api uri\n\n# entrypoint\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> docker entrypoint to use\n\n# extrahosts\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> docker extra host to use\n\n# image\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> docker image to use\n\n# user\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> docker user to use\n\n\n# streamsconfiguration\n\n# propertiespattern\n\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n\n# replicationkeys\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# replicationmethod\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * possible values:\n   \n   * full_table\n   * incremental\n   * log_based\n\n# selected\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: true\n\n# stream\n\n * type: string\n * dynamic: ❓\n * required: ❌",charsets:{}},{title:"DatamillCoPostgres",frontmatter:{title:"DatamillCoPostgres",editLink:!1,description:"A Singer target loads data into a Postgres database.",icon:"",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"DatamillCoPostgres"},{property:"og:description",content:"A Singer target loads data into a Postgres database. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-singer/tasks/targets/io.kestra.plugin.singer.targets.DatamillCoPostgres.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"DatamillCoPostgres"},{name:"twitter:description",content:"A Singer target loads data into a Postgres database. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-singer/tasks/targets/io.kestra.plugin.singer.targets.DatamillCoPostgres.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-singer/tasks/targets/io.kestra.plugin.singer.targets.DatamillCoPostgres.html",relativePath:"plugins/plugin-singer/tasks/targets/io.kestra.plugin.singer.targets.DatamillCoPostgres.md",key:"v-7315418f",path:"/plugins/plugin-singer/tasks/targets/io.kestra.plugin.singer.targets.DatamillCoPostgres.html",headers:[{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:178},{level:3,title:"addUpsertIndexes",slug:"addupsertindexes",normalizedTitle:"addupsertindexes",charIndex:193},{level:3,title:"afterRunSql",slug:"afterrunsql",normalizedTitle:"afterrunsql",charIndex:523},{level:3,title:"args",slug:"args",normalizedTitle:"args",charIndex:655},{level:3,title:"batchDetectionThreshold",slug:"batchdetectionthreshold",normalizedTitle:"batchdetectionthreshold",charIndex:798},{level:3,title:"beforeRunSql",slug:"beforerunsql",normalizedTitle:"beforerunsql",charIndex:1292},{level:3,title:"dbName",slug:"dbname",normalizedTitle:"dbname",charIndex:1530},{level:3,title:"dockerOptions",slug:"dockeroptions",normalizedTitle:"dockeroptions",charIndex:1609},{level:3,title:"env",slug:"env",normalizedTitle:"env",charIndex:1723},{level:3,title:"exitOnFailed",slug:"exitonfailed",normalizedTitle:"exitonfailed",charIndex:1863},{level:3,title:"files",slug:"files",normalizedTitle:"files",charIndex:2205},{level:3,title:"host",slug:"host",normalizedTitle:"host",charIndex:2393},{level:3,title:"inputFiles",slug:"inputfiles",normalizedTitle:"inputfiles",charIndex:2492},{level:3,title:"interpreter",slug:"interpreter",normalizedTitle:"interpreter",charIndex:2887},{level:3,title:"interpreterArgs",slug:"interpreterargs",normalizedTitle:"interpreterargs",charIndex:3010},{level:3,title:"invalidRecordsDetect",slug:"invalidrecordsdetect",normalizedTitle:"invalidrecordsdetect",charIndex:3136},{level:3,title:"invalidRecordsThreshold",slug:"invalidrecordsthreshold",normalizedTitle:"invalidrecordsthreshold",charIndex:3254},{level:3,title:"loggingLevel",slug:"logginglevel",normalizedTitle:"logginglevel",charIndex:3465},{level:3,title:"maxBatchRows",slug:"maxbatchrows",normalizedTitle:"maxbatchrows",charIndex:1275},{level:3,title:"maxBufferSize",slug:"maxbuffersize",normalizedTitle:"maxbuffersize",charIndex:3902},{level:3,title:"outputFiles",slug:"outputfiles",normalizedTitle:"outputfiles",charIndex:2360},{level:3,title:"outputsFiles",slug:"outputsfiles",normalizedTitle:"outputsfiles",charIndex:4525},{level:3,title:"password",slug:"password",normalizedTitle:"password",charIndex:4664},{level:3,title:"persistEmptyTables",slug:"persistemptytables",normalizedTitle:"persistemptytables",charIndex:4756},{level:3,title:"port",slug:"port",normalizedTitle:"port",charIndex:334},{level:3,title:"pythonPath",slug:"pythonpath",normalizedTitle:"pythonpath",charIndex:5006},{level:3,title:"requirements",slug:"requirements",normalizedTitle:"requirements",charIndex:5178},{level:3,title:"runner",slug:"runner",normalizedTitle:"runner",charIndex:1705},{level:3,title:"schema",slug:"schema",normalizedTitle:"schema",charIndex:5582},{level:3,title:"sslMode",slug:"sslmode",normalizedTitle:"sslmode",charIndex:5682},{level:3,title:"tap",slug:"tap",normalizedTitle:"tap",charIndex:5818},{level:3,title:"username",slug:"username",normalizedTitle:"username",charIndex:5886},{level:3,title:"warningOnStdErr",slug:"warningonstderr",normalizedTitle:"warningonstderr",charIndex:5985},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:6113},{level:3,title:"state",slug:"state",normalizedTitle:"state",charIndex:592},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:6177},{level:3,title:"AbstractPythonTap-2",slug:"abstractpythontap-2",normalizedTitle:"abstractpythontap-2",charIndex:5832},{level:3,title:"AbstractPythonTap-1",slug:"abstractpythontap-1",normalizedTitle:"abstractpythontap-1",charIndex:6217},{level:3,title:"DockerOptions",slug:"dockeroptions-3",normalizedTitle:"dockeroptions",charIndex:1633},{level:3,title:"StreamsConfiguration",slug:"streamsconfiguration",normalizedTitle:"streamsconfiguration",charIndex:13860}],headersStr:"Properties addUpsertIndexes afterRunSql args batchDetectionThreshold beforeRunSql dbName dockerOptions env exitOnFailed files host inputFiles interpreter interpreterArgs invalidRecordsDetect invalidRecordsThreshold loggingLevel maxBatchRows maxBufferSize outputFiles outputsFiles password persistEmptyTables port pythonPath requirements runner schema sslMode tap username warningOnStdErr Outputs state Definitions AbstractPythonTap-2 AbstractPythonTap-1 DockerOptions StreamsConfiguration",content:"DatamillCoPostgres\n\ntype: \"io.kestra.plugin.singer.targets.DatamillCoPostgres\"\n\n\n> A Singer target loads data into a Postgres database.\n\nFull documentation can be found here\n\n\n# Properties\n\n\n# addUpsertIndexes\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n * Default: true\n\n> Whether the Target should create column indexes on the important columns used during data loading.\n\nThese indexes will make data loading slightly slower but the deduplication phase much faster. Defaults to on for better baseline performance.\n\n\n# afterRunSql\n\n * Type: string\n * Dynamic: ❌\n * Required: ❌\n\n> Raw SQL statement(s) to before closing the connection to Postgres.\n\n\n# args\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Python command args\n\nArguments list to pass to main python script\n\n\n# batchDetectionThreshold\n\n * Type: integer\n * Dynamic: ❌\n * Required: ❌\n\n> How often, in rows received, to count the buffered rows and bytes to check if a flush is necessary.\n\nThere's a slight performance penalty to checking the buffered records count or bytesize, so this controls how often this is polled in order to mitigate the penalty. This value is usually not necessary to set as the default is dynamically adjusted to check reasonably often.\n\nDefault is 5000, or 1/40th maxBatchRows\n\n\n# beforeRunSql\n\n * Type: string\n * Dynamic: ❌\n * Required: ❌\n\n> Raw SQL statement(s) to execute as soon as the connection to Postgres is opened by the target.\n\nUseful for setup like SET ROLE or other connection state that is important.\n\n\n# dbName\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The database name\n\n\n# dockerOptions\n\n * Type: DockerOptions\n * Dynamic: ❓\n * Required: ❌\n\n> Docker options when using runner DOCKER\n\n\n# env\n\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Additional environnements variable to add for current process.\n\n\n# exitOnFailed\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Exit if any non true return value\n\nThis tells bash that it should exit the script if any statement returns a non-true return value.\nThe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n\n# files\n\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The list of files that will be uploaded to internal storage,\n\nuse outputFiles property instead\n\n\n# host\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> The database hostname\n\n\n# inputFiles\n\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Input files are extra files supplied by user that make it simpler organize code.\n\nDescribe a files map that will be written and usable in execution context. In python execution context is in a temp folder, for bash scripts, you can reach files using a workingDir variable like 'source {{workingDir}}/myfile.sh'\n\n\n# interpreter\n\n * Type: string\n * Dynamic: ❌\n * Required: ✔️\n * Default: /bin/sh\n * Min length: 1\n\n> Interpreter to used\n\n\n# interpreterArgs\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n * Default: [-c]\n\n> Interpreter args used\n\n\n# invalidRecordsDetect\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n * Default: true\n\n> Crash on invalid records.\n\n\n# invalidRecordsThreshold\n\n * Type: integer\n * Dynamic: ❌\n * Required: ❌\n * Default: 0\n\n> Include a positive value n in your config to allow to encounter at most n invalid records per stream before giving up.\n\n\n# loggingLevel\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: INFO\n\n> The level for logging.\n\nSet to DEBUG to get things like queries executed, timing of those queries, etc. See Python's Logger Levels for information about valid values.\n\n\n# maxBatchRows\n\n * Type: integer\n * Dynamic: ❌\n * Required: ❌\n * Default: 200000\n\n> The maximum number of rows to buffer in memory before writing to the destination table in Postgres.\n\n\n# maxBufferSize\n\n * Type: integer\n * Dynamic: ❌\n * Required: ❌\n * Default: 104857600\n\n> The maximum number of bytes to buffer in memory before writing to the destination table in Postgres.\n\n\n# outputFiles\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Output file list that will be uploaded to internal storage\n\nList of key that will generate temporary files.\nOn the command, just can use with special variable named outputFiles.key.\nIf you add a files with [\"first\"], you can use the special vars echo 1 >> {[ outputFiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n\n# outputsFiles\n\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Deprecated Output file\n\nuse outputFiles\n\n\n# password\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The database user's password\n\n\n# persistEmptyTables\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n * Default: false\n\n> Whether the Target should create tables which have no records present in Remote.\n\n\n# port\n\n * Type: integer\n * Dynamic: ❌\n * Required: ✔️\n\n> The database port\n\n\n# pythonPath\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Default: python\n * Min length: 1\n\n> The python interpreter to use\n\nSet the python interpreter path to use\n\n\n# requirements\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Requirements are python dependencies to add to the python execution process\n\nPython dependencies list to setup in the virtualenv, in the same format than requirements.txt\n\n\n# runner\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ✔️\n\n * Default: PROCESS\n\n * Possible Values:\n   \n   * PROCESS\n   * DOCKER\n\n> Runner to use\n\n\n# schema\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: public\n\n> The database schema\n\n\n# sslMode\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: prefer\n\n> Refer to the libpq docs for more information about SSL\n\n\n# tap\n\n * Type: AbstractPythonTap-2\n * Dynamic: ❓\n * Required: ✔️\n\n\n# username\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> The database user\n\n\n# warningOnStdErr\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Use WARNING state if any stdErr is sent\n\n\n# Outputs\n\n\n# state\n\n * Type: string\n\n> Uri of the state file\n\n\n# Definitions\n\n\n# AbstractPythonTap-2\n\n\n# AbstractPythonTap-1\n\n# args\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Python command args\n\nArguments list to pass to main python script\n\n# dockerOptions\n\n * Type: DockerOptions\n * Dynamic: ❓\n * Required: ❌\n\n> Docker options when using runner DOCKER\n\nWith this Python task, we can execute a full python script.\nThe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nBy convention, you need to define at least a main.py files in inputFiles that will be the script used.\nBut you are also able to add as many script as you need in inputFiles.\n\nYou can also add a pip.conf in inputFiles to customize the pip download of dependencies (like a private registry).\n\nYou can send outputs & metrics from your python script that can be used by others tasks. In order to help, we inject a python package directly on the working dir.Here is an example usage:\n\nfrom kestra import Kestra\nKestra.outputs({'test': 'value', 'int': 2, 'bool': True, 'float': 3.65})\nKestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nKestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nKestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n# env\n\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Additional environnements variable to add for current process.\n\nWith this Python task, we can execute a full python script.\nThe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nBy convention, you need to define at least a main.py files in inputFiles that will be the script used.\nBut you are also able to add as many script as you need in inputFiles.\n\nYou can also add a pip.conf in inputFiles to customize the pip download of dependencies (like a private registry).\n\nYou can send outputs & metrics from your python script that can be used by others tasks. In order to help, we inject a python package directly on the working dir.Here is an example usage:\n\nfrom kestra import Kestra\nKestra.outputs({'test': 'value', 'int': 2, 'bool': True, 'float': 3.65})\nKestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nKestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nKestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n# exitOnFailed\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Exit if any non true return value\n\nThis tells bash that it should exit the script if any statement returns a non-true return value.\nThe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n# files\n\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The list of files that will be uploaded to internal storage,\n\nuse outputFiles property instead\n\n# inputFiles\n\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Input files are extra files supplied by user that make it simpler organize code.\n\nDescribe a files map that will be written and usable in execution context. In python execution context is in a temp folder, for bash scripts, you can reach files using a workingDir variable like 'source {{workingDir}}/myfile.sh'\n\n# interpreter\n\n * Type: string\n * Dynamic: ❌\n * Required: ✔️\n * Default: /bin/sh\n * Min length: 1\n\n> Interpreter to used\n\nWith this Python task, we can execute a full python script.\nThe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nBy convention, you need to define at least a main.py files in inputFiles that will be the script used.\nBut you are also able to add as many script as you need in inputFiles.\n\nYou can also add a pip.conf in inputFiles to customize the pip download of dependencies (like a private registry).\n\nYou can send outputs & metrics from your python script that can be used by others tasks. In order to help, we inject a python package directly on the working dir.Here is an example usage:\n\nfrom kestra import Kestra\nKestra.outputs({'test': 'value', 'int': 2, 'bool': True, 'float': 3.65})\nKestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nKestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nKestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n# interpreterArgs\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n * Default: [-c]\n\n> Interpreter args used\n\nWith this Python task, we can execute a full python script.\nThe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nBy convention, you need to define at least a main.py files in inputFiles that will be the script used.\nBut you are also able to add as many script as you need in inputFiles.\n\nYou can also add a pip.conf in inputFiles to customize the pip download of dependencies (like a private registry).\n\nYou can send outputs & metrics from your python script that can be used by others tasks. In order to help, we inject a python package directly on the working dir.Here is an example usage:\n\nfrom kestra import Kestra\nKestra.outputs({'test': 'value', 'int': 2, 'bool': True, 'float': 3.65})\nKestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nKestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nKestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n# outputFiles\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Output file list that will be uploaded to internal storage\n\nList of key that will generate temporary files.\nOn the command, just can use with special variable named outputFiles.key.\nIf you add a files with [\"first\"], you can use the special vars echo 1 >> {[ outputFiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n# outputsFiles\n\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Deprecated Output file\n\nuse outputFiles\n\n# pythonPath\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Default: python\n * Min length: 1\n\n> The python interpreter to use\n\nSet the python interpreter path to use\n\n# requirements\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Requirements are python dependencies to add to the python execution process\n\nPython dependencies list to setup in the virtualenv, in the same format than requirements.txt\n\n# runner\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ✔️\n\n * Default: PROCESS\n\n * Possible Values:\n   \n   * PROCESS\n   * DOCKER\n\n> Runner to use\n\nWith this Python task, we can execute a full python script.\nThe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nBy convention, you need to define at least a main.py files in inputFiles that will be the script used.\nBut you are also able to add as many script as you need in inputFiles.\n\nYou can also add a pip.conf in inputFiles to customize the pip download of dependencies (like a private registry).\n\nYou can send outputs & metrics from your python script that can be used by others tasks. In order to help, we inject a python package directly on the working dir.Here is an example usage:\n\nfrom kestra import Kestra\nKestra.outputs({'test': 'value', 'int': 2, 'bool': True, 'float': 3.65})\nKestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nKestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nKestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n# streamsConfigurations\n\n * Type: array\n * SubType: StreamsConfiguration\n * Dynamic: ❌\n * Required: ✔️\n * Min items: 1\n\n> The list of stream configurations\n\nWith this Python task, we can execute a full python script.\nThe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nBy convention, you need to define at least a main.py files in inputFiles that will be the script used.\nBut you are also able to add as many script as you need in inputFiles.\n\nYou can also add a pip.conf in inputFiles to customize the pip download of dependencies (like a private registry).\n\nYou can send outputs & metrics from your python script that can be used by others tasks. In order to help, we inject a python package directly on the working dir.Here is an example usage:\n\nfrom kestra import Kestra\nKestra.outputs({'test': 'value', 'int': 2, 'bool': True, 'float': 3.65})\nKestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nKestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nKestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n# warningOnStdErr\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Use WARNING state if any stdErr is sent\n\nWith this Python task, we can execute a full python script.\nThe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nBy convention, you need to define at least a main.py files in inputFiles that will be the script used.\nBut you are also able to add as many script as you need in inputFiles.\n\nYou can also add a pip.conf in inputFiles to customize the pip download of dependencies (like a private registry).\n\nYou can send outputs & metrics from your python script that can be used by others tasks. In order to help, we inject a python package directly on the working dir.Here is an example usage:\n\nfrom kestra import Kestra\nKestra.outputs({'test': 'value', 'int': 2, 'bool': True, 'float': 3.65})\nKestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nKestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nKestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n\n# DockerOptions\n\n# dockerConfig\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker config file\n\nFull file that can be used to configure private registries, ...\n\n# dockerHost\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: unix:///var/run/docker.sock\n\n> Docker api uri\n\n# entryPoint\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker entrypoint to use\n\n# extraHosts\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker extra host to use\n\n# image\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> Docker image to use\n\n# user\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker user to use\n\n\n# StreamsConfiguration\n\n# propertiesPattern\n\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n\n# replicationKeys\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# replicationMethod\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Possible Values:\n   \n   * FULL_TABLE\n   * INCREMENTAL\n   * LOG_BASED\n\n# selected\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: true\n\n# stream\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌",normalizedContent:"datamillcopostgres\n\ntype: \"io.kestra.plugin.singer.targets.datamillcopostgres\"\n\n\n> a singer target loads data into a postgres database.\n\nfull documentation can be found here\n\n\n# properties\n\n\n# addupsertindexes\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n * default: true\n\n> whether the target should create column indexes on the important columns used during data loading.\n\nthese indexes will make data loading slightly slower but the deduplication phase much faster. defaults to on for better baseline performance.\n\n\n# afterrunsql\n\n * type: string\n * dynamic: ❌\n * required: ❌\n\n> raw sql statement(s) to before closing the connection to postgres.\n\n\n# args\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> python command args\n\narguments list to pass to main python script\n\n\n# batchdetectionthreshold\n\n * type: integer\n * dynamic: ❌\n * required: ❌\n\n> how often, in rows received, to count the buffered rows and bytes to check if a flush is necessary.\n\nthere's a slight performance penalty to checking the buffered records count or bytesize, so this controls how often this is polled in order to mitigate the penalty. this value is usually not necessary to set as the default is dynamically adjusted to check reasonably often.\n\ndefault is 5000, or 1/40th maxbatchrows\n\n\n# beforerunsql\n\n * type: string\n * dynamic: ❌\n * required: ❌\n\n> raw sql statement(s) to execute as soon as the connection to postgres is opened by the target.\n\nuseful for setup like set role or other connection state that is important.\n\n\n# dbname\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the database name\n\n\n# dockeroptions\n\n * type: dockeroptions\n * dynamic: ❓\n * required: ❌\n\n> docker options when using runner docker\n\n\n# env\n\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> additional environnements variable to add for current process.\n\n\n# exitonfailed\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> exit if any non true return value\n\nthis tells bash that it should exit the script if any statement returns a non-true return value.\nthe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n\n# files\n\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> the list of files that will be uploaded to internal storage,\n\nuse outputfiles property instead\n\n\n# host\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> the database hostname\n\n\n# inputfiles\n\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> input files are extra files supplied by user that make it simpler organize code.\n\ndescribe a files map that will be written and usable in execution context. in python execution context is in a temp folder, for bash scripts, you can reach files using a workingdir variable like 'source {{workingdir}}/myfile.sh'\n\n\n# interpreter\n\n * type: string\n * dynamic: ❌\n * required: ✔️\n * default: /bin/sh\n * min length: 1\n\n> interpreter to used\n\n\n# interpreterargs\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n * default: [-c]\n\n> interpreter args used\n\n\n# invalidrecordsdetect\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n * default: true\n\n> crash on invalid records.\n\n\n# invalidrecordsthreshold\n\n * type: integer\n * dynamic: ❌\n * required: ❌\n * default: 0\n\n> include a positive value n in your config to allow to encounter at most n invalid records per stream before giving up.\n\n\n# logginglevel\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n * default: info\n\n> the level for logging.\n\nset to debug to get things like queries executed, timing of those queries, etc. see python's logger levels for information about valid values.\n\n\n# maxbatchrows\n\n * type: integer\n * dynamic: ❌\n * required: ❌\n * default: 200000\n\n> the maximum number of rows to buffer in memory before writing to the destination table in postgres.\n\n\n# maxbuffersize\n\n * type: integer\n * dynamic: ❌\n * required: ❌\n * default: 104857600\n\n> the maximum number of bytes to buffer in memory before writing to the destination table in postgres.\n\n\n# outputfiles\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> output file list that will be uploaded to internal storage\n\nlist of key that will generate temporary files.\non the command, just can use with special variable named outputfiles.key.\nif you add a files with [\"first\"], you can use the special vars echo 1 >> {[ outputfiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n\n# outputsfiles\n\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> deprecated output file\n\nuse outputfiles\n\n\n# password\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the database user's password\n\n\n# persistemptytables\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n * default: false\n\n> whether the target should create tables which have no records present in remote.\n\n\n# port\n\n * type: integer\n * dynamic: ❌\n * required: ✔️\n\n> the database port\n\n\n# pythonpath\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * default: python\n * min length: 1\n\n> the python interpreter to use\n\nset the python interpreter path to use\n\n\n# requirements\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> requirements are python dependencies to add to the python execution process\n\npython dependencies list to setup in the virtualenv, in the same format than requirements.txt\n\n\n# runner\n\n * type: string\n\n * dynamic: ❌\n\n * required: ✔️\n\n * default: process\n\n * possible values:\n   \n   * process\n   * docker\n\n> runner to use\n\n\n# schema\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n * default: public\n\n> the database schema\n\n\n# sslmode\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n * default: prefer\n\n> refer to the libpq docs for more information about ssl\n\n\n# tap\n\n * type: abstractpythontap-2\n * dynamic: ❓\n * required: ✔️\n\n\n# username\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> the database user\n\n\n# warningonstderr\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> use warning state if any stderr is sent\n\n\n# outputs\n\n\n# state\n\n * type: string\n\n> uri of the state file\n\n\n# definitions\n\n\n# abstractpythontap-2\n\n\n# abstractpythontap-1\n\n# args\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> python command args\n\narguments list to pass to main python script\n\n# dockeroptions\n\n * type: dockeroptions\n * dynamic: ❓\n * required: ❌\n\n> docker options when using runner docker\n\nwith this python task, we can execute a full python script.\nthe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nby convention, you need to define at least a main.py files in inputfiles that will be the script used.\nbut you are also able to add as many script as you need in inputfiles.\n\nyou can also add a pip.conf in inputfiles to customize the pip download of dependencies (like a private registry).\n\nyou can send outputs & metrics from your python script that can be used by others tasks. in order to help, we inject a python package directly on the working dir.here is an example usage:\n\nfrom kestra import kestra\nkestra.outputs({'test': 'value', 'int': 2, 'bool': true, 'float': 3.65})\nkestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nkestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nkestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n# env\n\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> additional environnements variable to add for current process.\n\nwith this python task, we can execute a full python script.\nthe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nby convention, you need to define at least a main.py files in inputfiles that will be the script used.\nbut you are also able to add as many script as you need in inputfiles.\n\nyou can also add a pip.conf in inputfiles to customize the pip download of dependencies (like a private registry).\n\nyou can send outputs & metrics from your python script that can be used by others tasks. in order to help, we inject a python package directly on the working dir.here is an example usage:\n\nfrom kestra import kestra\nkestra.outputs({'test': 'value', 'int': 2, 'bool': true, 'float': 3.65})\nkestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nkestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nkestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n# exitonfailed\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> exit if any non true return value\n\nthis tells bash that it should exit the script if any statement returns a non-true return value.\nthe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n# files\n\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> the list of files that will be uploaded to internal storage,\n\nuse outputfiles property instead\n\n# inputfiles\n\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> input files are extra files supplied by user that make it simpler organize code.\n\ndescribe a files map that will be written and usable in execution context. in python execution context is in a temp folder, for bash scripts, you can reach files using a workingdir variable like 'source {{workingdir}}/myfile.sh'\n\n# interpreter\n\n * type: string\n * dynamic: ❌\n * required: ✔️\n * default: /bin/sh\n * min length: 1\n\n> interpreter to used\n\nwith this python task, we can execute a full python script.\nthe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nby convention, you need to define at least a main.py files in inputfiles that will be the script used.\nbut you are also able to add as many script as you need in inputfiles.\n\nyou can also add a pip.conf in inputfiles to customize the pip download of dependencies (like a private registry).\n\nyou can send outputs & metrics from your python script that can be used by others tasks. in order to help, we inject a python package directly on the working dir.here is an example usage:\n\nfrom kestra import kestra\nkestra.outputs({'test': 'value', 'int': 2, 'bool': true, 'float': 3.65})\nkestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nkestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nkestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n# interpreterargs\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n * default: [-c]\n\n> interpreter args used\n\nwith this python task, we can execute a full python script.\nthe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nby convention, you need to define at least a main.py files in inputfiles that will be the script used.\nbut you are also able to add as many script as you need in inputfiles.\n\nyou can also add a pip.conf in inputfiles to customize the pip download of dependencies (like a private registry).\n\nyou can send outputs & metrics from your python script that can be used by others tasks. in order to help, we inject a python package directly on the working dir.here is an example usage:\n\nfrom kestra import kestra\nkestra.outputs({'test': 'value', 'int': 2, 'bool': true, 'float': 3.65})\nkestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nkestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nkestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n# outputfiles\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> output file list that will be uploaded to internal storage\n\nlist of key that will generate temporary files.\non the command, just can use with special variable named outputfiles.key.\nif you add a files with [\"first\"], you can use the special vars echo 1 >> {[ outputfiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n# outputsfiles\n\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> deprecated output file\n\nuse outputfiles\n\n# pythonpath\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * default: python\n * min length: 1\n\n> the python interpreter to use\n\nset the python interpreter path to use\n\n# requirements\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> requirements are python dependencies to add to the python execution process\n\npython dependencies list to setup in the virtualenv, in the same format than requirements.txt\n\n# runner\n\n * type: string\n\n * dynamic: ❌\n\n * required: ✔️\n\n * default: process\n\n * possible values:\n   \n   * process\n   * docker\n\n> runner to use\n\nwith this python task, we can execute a full python script.\nthe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nby convention, you need to define at least a main.py files in inputfiles that will be the script used.\nbut you are also able to add as many script as you need in inputfiles.\n\nyou can also add a pip.conf in inputfiles to customize the pip download of dependencies (like a private registry).\n\nyou can send outputs & metrics from your python script that can be used by others tasks. in order to help, we inject a python package directly on the working dir.here is an example usage:\n\nfrom kestra import kestra\nkestra.outputs({'test': 'value', 'int': 2, 'bool': true, 'float': 3.65})\nkestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nkestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nkestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n# streamsconfigurations\n\n * type: array\n * subtype: streamsconfiguration\n * dynamic: ❌\n * required: ✔️\n * min items: 1\n\n> the list of stream configurations\n\nwith this python task, we can execute a full python script.\nthe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nby convention, you need to define at least a main.py files in inputfiles that will be the script used.\nbut you are also able to add as many script as you need in inputfiles.\n\nyou can also add a pip.conf in inputfiles to customize the pip download of dependencies (like a private registry).\n\nyou can send outputs & metrics from your python script that can be used by others tasks. in order to help, we inject a python package directly on the working dir.here is an example usage:\n\nfrom kestra import kestra\nkestra.outputs({'test': 'value', 'int': 2, 'bool': true, 'float': 3.65})\nkestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nkestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nkestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n# warningonstderr\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> use warning state if any stderr is sent\n\nwith this python task, we can execute a full python script.\nthe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nby convention, you need to define at least a main.py files in inputfiles that will be the script used.\nbut you are also able to add as many script as you need in inputfiles.\n\nyou can also add a pip.conf in inputfiles to customize the pip download of dependencies (like a private registry).\n\nyou can send outputs & metrics from your python script that can be used by others tasks. in order to help, we inject a python package directly on the working dir.here is an example usage:\n\nfrom kestra import kestra\nkestra.outputs({'test': 'value', 'int': 2, 'bool': true, 'float': 3.65})\nkestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nkestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nkestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n\n# dockeroptions\n\n# dockerconfig\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> docker config file\n\nfull file that can be used to configure private registries, ...\n\n# dockerhost\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n * default: unix:///var/run/docker.sock\n\n> docker api uri\n\n# entrypoint\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> docker entrypoint to use\n\n# extrahosts\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> docker extra host to use\n\n# image\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> docker image to use\n\n# user\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> docker user to use\n\n\n# streamsconfiguration\n\n# propertiespattern\n\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n\n# replicationkeys\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# replicationmethod\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * possible values:\n   \n   * full_table\n   * incremental\n   * log_based\n\n# selected\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: true\n\n# stream\n\n * type: string\n * dynamic: ❓\n * required: ❌",charsets:{}},{title:"Json",frontmatter:{title:"Json",editLink:!1,description:"A Singer target loads data into a Json Files.",icon:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB3aWR0aD0iMjQiIGhlaWdodD0iMjQiCiAgICAgcHJlc2VydmVBc3BlY3RSYXRpbz0ieE1pZFlNaWQgbWVldCIgdmlld0JveD0iMCAwIDI0IDI0IgogICAgIHN0eWxlPSItbXMtdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTsgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpOyB0cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpOyI+CiAgICA8cGF0aCBkPSJNMTIuODIzIDE1LjEyMmMtLjUxNyAwLS44MTYuNDkxLS44MTYgMS4xNDZjMCAuNjYxLjMxMSAxLjEyNi44MiAxLjEyNmMuNTE3IDAgLjgxMi0uNDkuODEyLTEuMTQ2YzAtLjYwNC0uMjkxLTEuMTI2LS44MTYtMS4xMjZ6IgogICAgICAgICAgZmlsbD0iIzMzMyIvPgogICAgPHBhdGggZD0iTTE0IDJINmEyIDIgMCAwIDAtMiAydjE2YTIgMiAwIDAgMCAyIDJoMTJhMiAyIDAgMCAwIDItMlY4bC02LTZ6TTguMDIyIDE2LjcwNGMwIC45NjEtLjQ2MSAxLjI5Ni0xLjIgMS4yOTZjLS4xNzYgMC0uNDA2LS4wMjktLjU1Ny0uMDhsLjA4Ni0uNjE1Yy4xMDQuMDM1LjIzOS4wNi4zOTEuMDZjLjMxOSAwIC41Mi0uMTQ1LjUyLS42N3YtMi4xMjJoLjc2MXYyLjEzMXptMS40NTkgMS4yOTFjLS4zODUgMC0uNzY2LS4xLS45NTUtLjIwNWwuMTU1LS42MzFjLjIwNC4xMDUuNTIxLjIxMS44NDYuMjExYy4zNSAwIC41MzQtLjE0Ni41MzQtLjM2NWMwLS4yMTEtLjE1OS0uMzMxLS41NjQtLjQ3NmMtLjU2Mi0uMTk1LS45MjctLjUwNi0uOTI3LS45OTZjMC0uNTc2LjQ4MS0xLjAxNyAxLjI3Ny0xLjAxN2MuMzggMCAuNjU5LjA4Ljg2MS4xNzFsLS4xNzIuNjE1Yy0uMTM1LS4wNjUtLjM3NS0uMTYtLjcwNS0uMTZzLS40OTEuMTUtLjQ5MS4zMjVjMCAuMjE1LjE5LjMxMS42MjcuNDc2Yy41OTYuMjIuODc2LjUzLjg3NiAxLjAwNmMuMDAxLjU2Ni0uNDM2IDEuMDQ2LTEuMzYyIDEuMDQ2em0zLjMwNi4wMDVjLTEuMDAxIDAtMS41ODYtLjc1NS0xLjU4Ni0xLjcxNmMwLTEuMDEyLjY0Ni0xLjc2OCAxLjY0Mi0xLjc2OGMxLjAzNSAwIDEuNjAxLjc3NiAxLjYwMSAxLjcwN0MxNC40NDMgMTcuMzMgMTMuNzczIDE4IDEyLjc4NyAxOHptNC45NDctLjA1NWgtLjgwMmwtLjcyMS0xLjMwMmExMi42NCAxMi42NCAwIDAgMS0uNTg1LTEuMTlsLS4wMTYuMDA1Yy4wMjEuNDQ1LjAzMS45MjEuMDMxIDEuNDcydjEuMDE2aC0uNzAxdi0zLjM3M2guODkxbC43MDEgMS4yMzZjLjIuMzU0LjQuNzc1LjU1MiAxLjE1NWguMDE0Yy0uMDUtLjQ0NS0uMDY1LS45LS4wNjUtMS40MDZ2LS45ODVoLjcwMnYzLjM3MnpNMTQgOWgtMVY0bDUgNWgtNHoiCiAgICAgICAgICBmaWxsPSIjMzMzIi8+Cjwvc3ZnPgo=",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Json"},{property:"og:description",content:"A Singer target loads data into a Json Files. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-singer/tasks/targets/io.kestra.plugin.singer.targets.Json.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Json"},{name:"twitter:description",content:"A Singer target loads data into a Json Files. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-singer/tasks/targets/io.kestra.plugin.singer.targets.Json.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-singer/tasks/targets/io.kestra.plugin.singer.targets.Json.html",relativePath:"plugins/plugin-singer/tasks/targets/io.kestra.plugin.singer.targets.Json.md",key:"v-349a2355",path:"/plugins/plugin-singer/tasks/targets/io.kestra.plugin.singer.targets.Json.html",headers:[{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:143},{level:3,title:"args",slug:"args",normalizedTitle:"args",charIndex:158},{level:3,title:"dockerOptions",slug:"dockeroptions",normalizedTitle:"dockeroptions",charIndex:301},{level:3,title:"env",slug:"env",normalizedTitle:"env",charIndex:415},{level:3,title:"exitOnFailed",slug:"exitonfailed",normalizedTitle:"exitonfailed",charIndex:555},{level:3,title:"files",slug:"files",normalizedTitle:"files",charIndex:897},{level:3,title:"inputFiles",slug:"inputfiles",normalizedTitle:"inputfiles",charIndex:1085},{level:3,title:"interpreter",slug:"interpreter",normalizedTitle:"interpreter",charIndex:1480},{level:3,title:"interpreterArgs",slug:"interpreterargs",normalizedTitle:"interpreterargs",charIndex:1603},{level:3,title:"outputFiles",slug:"outputfiles",normalizedTitle:"outputfiles",charIndex:1052},{level:3,title:"outputsFiles",slug:"outputsfiles",normalizedTitle:"outputsfiles",charIndex:2161},{level:3,title:"pythonPath",slug:"pythonpath",normalizedTitle:"pythonpath",charIndex:2300},{level:3,title:"requirements",slug:"requirements",normalizedTitle:"requirements",charIndex:2472},{level:3,title:"runner",slug:"runner",normalizedTitle:"runner",charIndex:397},{level:3,title:"tap",slug:"tap",normalizedTitle:"tap",charIndex:2876},{level:3,title:"warningOnStdErr",slug:"warningonstderr",normalizedTitle:"warningonstderr",charIndex:2944},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:3072},{level:3,title:"state",slug:"state",normalizedTitle:"state",charIndex:725},{level:3,title:"uris",slug:"uris",normalizedTitle:"uris",charIndex:3136},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:3249},{level:3,title:"AbstractPythonTap-2",slug:"abstractpythontap-2",normalizedTitle:"abstractpythontap-2",charIndex:2890},{level:3,title:"AbstractPythonTap-1",slug:"abstractpythontap-1",normalizedTitle:"abstractpythontap-1",charIndex:3289},{level:3,title:"DockerOptions",slug:"dockeroptions-3",normalizedTitle:"dockeroptions",charIndex:325},{level:3,title:"StreamsConfiguration",slug:"streamsconfiguration",normalizedTitle:"streamsconfiguration",charIndex:10932}],headersStr:"Properties args dockerOptions env exitOnFailed files inputFiles interpreter interpreterArgs outputFiles outputsFiles pythonPath requirements runner tap warningOnStdErr Outputs state uris Definitions AbstractPythonTap-2 AbstractPythonTap-1 DockerOptions StreamsConfiguration",content:"Json\n\ntype: \"io.kestra.plugin.singer.targets.Json\"\n\n\n> A Singer target loads data into a Json Files.\n\nFull documentation can be found here\n\n\n# Properties\n\n\n# args\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Python command args\n\nArguments list to pass to main python script\n\n\n# dockerOptions\n\n * Type: DockerOptions\n * Dynamic: ❓\n * Required: ❌\n\n> Docker options when using runner DOCKER\n\n\n# env\n\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Additional environnements variable to add for current process.\n\n\n# exitOnFailed\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Exit if any non true return value\n\nThis tells bash that it should exit the script if any statement returns a non-true return value.\nThe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n\n# files\n\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The list of files that will be uploaded to internal storage,\n\nuse outputFiles property instead\n\n\n# inputFiles\n\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Input files are extra files supplied by user that make it simpler organize code.\n\nDescribe a files map that will be written and usable in execution context. In python execution context is in a temp folder, for bash scripts, you can reach files using a workingDir variable like 'source {{workingDir}}/myfile.sh'\n\n\n# interpreter\n\n * Type: string\n * Dynamic: ❌\n * Required: ✔️\n * Default: /bin/sh\n * Min length: 1\n\n> Interpreter to used\n\n\n# interpreterArgs\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n * Default: [-c]\n\n> Interpreter args used\n\n\n# outputFiles\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Output file list that will be uploaded to internal storage\n\nList of key that will generate temporary files.\nOn the command, just can use with special variable named outputFiles.key.\nIf you add a files with [\"first\"], you can use the special vars echo 1 >> {[ outputFiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n\n# outputsFiles\n\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Deprecated Output file\n\nuse outputFiles\n\n\n# pythonPath\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Default: python\n * Min length: 1\n\n> The python interpreter to use\n\nSet the python interpreter path to use\n\n\n# requirements\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Requirements are python dependencies to add to the python execution process\n\nPython dependencies list to setup in the virtualenv, in the same format than requirements.txt\n\n\n# runner\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ✔️\n\n * Default: PROCESS\n\n * Possible Values:\n   \n   * PROCESS\n   * DOCKER\n\n> Runner to use\n\n\n# tap\n\n * Type: AbstractPythonTap-2\n * Dynamic: ❓\n * Required: ✔️\n\n\n# warningOnStdErr\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Use WARNING state if any stdErr is sent\n\n\n# Outputs\n\n\n# state\n\n * Type: string\n\n> Uri of the state file\n\n\n# uris\n\n * Type: object\n * SubType: string\n\n> Uri of the generated csv\n\nThe key will be the name of the stream\n\n\n# Definitions\n\n\n# AbstractPythonTap-2\n\n\n# AbstractPythonTap-1\n\n# args\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Python command args\n\nArguments list to pass to main python script\n\n# dockerOptions\n\n * Type: DockerOptions\n * Dynamic: ❓\n * Required: ❌\n\n> Docker options when using runner DOCKER\n\nWith this Python task, we can execute a full python script.\nThe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nBy convention, you need to define at least a main.py files in inputFiles that will be the script used.\nBut you are also able to add as many script as you need in inputFiles.\n\nYou can also add a pip.conf in inputFiles to customize the pip download of dependencies (like a private registry).\n\nYou can send outputs & metrics from your python script that can be used by others tasks. In order to help, we inject a python package directly on the working dir.Here is an example usage:\n\nfrom kestra import Kestra\nKestra.outputs({'test': 'value', 'int': 2, 'bool': True, 'float': 3.65})\nKestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nKestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nKestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n# env\n\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Additional environnements variable to add for current process.\n\nWith this Python task, we can execute a full python script.\nThe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nBy convention, you need to define at least a main.py files in inputFiles that will be the script used.\nBut you are also able to add as many script as you need in inputFiles.\n\nYou can also add a pip.conf in inputFiles to customize the pip download of dependencies (like a private registry).\n\nYou can send outputs & metrics from your python script that can be used by others tasks. In order to help, we inject a python package directly on the working dir.Here is an example usage:\n\nfrom kestra import Kestra\nKestra.outputs({'test': 'value', 'int': 2, 'bool': True, 'float': 3.65})\nKestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nKestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nKestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n# exitOnFailed\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Exit if any non true return value\n\nThis tells bash that it should exit the script if any statement returns a non-true return value.\nThe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n# files\n\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The list of files that will be uploaded to internal storage,\n\nuse outputFiles property instead\n\n# inputFiles\n\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Input files are extra files supplied by user that make it simpler organize code.\n\nDescribe a files map that will be written and usable in execution context. In python execution context is in a temp folder, for bash scripts, you can reach files using a workingDir variable like 'source {{workingDir}}/myfile.sh'\n\n# interpreter\n\n * Type: string\n * Dynamic: ❌\n * Required: ✔️\n * Default: /bin/sh\n * Min length: 1\n\n> Interpreter to used\n\nWith this Python task, we can execute a full python script.\nThe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nBy convention, you need to define at least a main.py files in inputFiles that will be the script used.\nBut you are also able to add as many script as you need in inputFiles.\n\nYou can also add a pip.conf in inputFiles to customize the pip download of dependencies (like a private registry).\n\nYou can send outputs & metrics from your python script that can be used by others tasks. In order to help, we inject a python package directly on the working dir.Here is an example usage:\n\nfrom kestra import Kestra\nKestra.outputs({'test': 'value', 'int': 2, 'bool': True, 'float': 3.65})\nKestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nKestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nKestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n# interpreterArgs\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n * Default: [-c]\n\n> Interpreter args used\n\nWith this Python task, we can execute a full python script.\nThe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nBy convention, you need to define at least a main.py files in inputFiles that will be the script used.\nBut you are also able to add as many script as you need in inputFiles.\n\nYou can also add a pip.conf in inputFiles to customize the pip download of dependencies (like a private registry).\n\nYou can send outputs & metrics from your python script that can be used by others tasks. In order to help, we inject a python package directly on the working dir.Here is an example usage:\n\nfrom kestra import Kestra\nKestra.outputs({'test': 'value', 'int': 2, 'bool': True, 'float': 3.65})\nKestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nKestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nKestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n# outputFiles\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Output file list that will be uploaded to internal storage\n\nList of key that will generate temporary files.\nOn the command, just can use with special variable named outputFiles.key.\nIf you add a files with [\"first\"], you can use the special vars echo 1 >> {[ outputFiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n# outputsFiles\n\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Deprecated Output file\n\nuse outputFiles\n\n# pythonPath\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Default: python\n * Min length: 1\n\n> The python interpreter to use\n\nSet the python interpreter path to use\n\n# requirements\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Requirements are python dependencies to add to the python execution process\n\nPython dependencies list to setup in the virtualenv, in the same format than requirements.txt\n\n# runner\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ✔️\n\n * Default: PROCESS\n\n * Possible Values:\n   \n   * PROCESS\n   * DOCKER\n\n> Runner to use\n\nWith this Python task, we can execute a full python script.\nThe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nBy convention, you need to define at least a main.py files in inputFiles that will be the script used.\nBut you are also able to add as many script as you need in inputFiles.\n\nYou can also add a pip.conf in inputFiles to customize the pip download of dependencies (like a private registry).\n\nYou can send outputs & metrics from your python script that can be used by others tasks. In order to help, we inject a python package directly on the working dir.Here is an example usage:\n\nfrom kestra import Kestra\nKestra.outputs({'test': 'value', 'int': 2, 'bool': True, 'float': 3.65})\nKestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nKestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nKestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n# streamsConfigurations\n\n * Type: array\n * SubType: StreamsConfiguration\n * Dynamic: ❌\n * Required: ✔️\n * Min items: 1\n\n> The list of stream configurations\n\nWith this Python task, we can execute a full python script.\nThe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nBy convention, you need to define at least a main.py files in inputFiles that will be the script used.\nBut you are also able to add as many script as you need in inputFiles.\n\nYou can also add a pip.conf in inputFiles to customize the pip download of dependencies (like a private registry).\n\nYou can send outputs & metrics from your python script that can be used by others tasks. In order to help, we inject a python package directly on the working dir.Here is an example usage:\n\nfrom kestra import Kestra\nKestra.outputs({'test': 'value', 'int': 2, 'bool': True, 'float': 3.65})\nKestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nKestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nKestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n# warningOnStdErr\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Use WARNING state if any stdErr is sent\n\nWith this Python task, we can execute a full python script.\nThe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nBy convention, you need to define at least a main.py files in inputFiles that will be the script used.\nBut you are also able to add as many script as you need in inputFiles.\n\nYou can also add a pip.conf in inputFiles to customize the pip download of dependencies (like a private registry).\n\nYou can send outputs & metrics from your python script that can be used by others tasks. In order to help, we inject a python package directly on the working dir.Here is an example usage:\n\nfrom kestra import Kestra\nKestra.outputs({'test': 'value', 'int': 2, 'bool': True, 'float': 3.65})\nKestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nKestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nKestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n\n# DockerOptions\n\n# dockerConfig\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker config file\n\nFull file that can be used to configure private registries, ...\n\n# dockerHost\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: unix:///var/run/docker.sock\n\n> Docker api uri\n\n# entryPoint\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker entrypoint to use\n\n# extraHosts\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker extra host to use\n\n# image\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> Docker image to use\n\n# user\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker user to use\n\n\n# StreamsConfiguration\n\n# propertiesPattern\n\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n\n# replicationKeys\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# replicationMethod\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Possible Values:\n   \n   * FULL_TABLE\n   * INCREMENTAL\n   * LOG_BASED\n\n# selected\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: true\n\n# stream\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌",normalizedContent:"json\n\ntype: \"io.kestra.plugin.singer.targets.json\"\n\n\n> a singer target loads data into a json files.\n\nfull documentation can be found here\n\n\n# properties\n\n\n# args\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> python command args\n\narguments list to pass to main python script\n\n\n# dockeroptions\n\n * type: dockeroptions\n * dynamic: ❓\n * required: ❌\n\n> docker options when using runner docker\n\n\n# env\n\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> additional environnements variable to add for current process.\n\n\n# exitonfailed\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> exit if any non true return value\n\nthis tells bash that it should exit the script if any statement returns a non-true return value.\nthe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n\n# files\n\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> the list of files that will be uploaded to internal storage,\n\nuse outputfiles property instead\n\n\n# inputfiles\n\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> input files are extra files supplied by user that make it simpler organize code.\n\ndescribe a files map that will be written and usable in execution context. in python execution context is in a temp folder, for bash scripts, you can reach files using a workingdir variable like 'source {{workingdir}}/myfile.sh'\n\n\n# interpreter\n\n * type: string\n * dynamic: ❌\n * required: ✔️\n * default: /bin/sh\n * min length: 1\n\n> interpreter to used\n\n\n# interpreterargs\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n * default: [-c]\n\n> interpreter args used\n\n\n# outputfiles\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> output file list that will be uploaded to internal storage\n\nlist of key that will generate temporary files.\non the command, just can use with special variable named outputfiles.key.\nif you add a files with [\"first\"], you can use the special vars echo 1 >> {[ outputfiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n\n# outputsfiles\n\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> deprecated output file\n\nuse outputfiles\n\n\n# pythonpath\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * default: python\n * min length: 1\n\n> the python interpreter to use\n\nset the python interpreter path to use\n\n\n# requirements\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> requirements are python dependencies to add to the python execution process\n\npython dependencies list to setup in the virtualenv, in the same format than requirements.txt\n\n\n# runner\n\n * type: string\n\n * dynamic: ❌\n\n * required: ✔️\n\n * default: process\n\n * possible values:\n   \n   * process\n   * docker\n\n> runner to use\n\n\n# tap\n\n * type: abstractpythontap-2\n * dynamic: ❓\n * required: ✔️\n\n\n# warningonstderr\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> use warning state if any stderr is sent\n\n\n# outputs\n\n\n# state\n\n * type: string\n\n> uri of the state file\n\n\n# uris\n\n * type: object\n * subtype: string\n\n> uri of the generated csv\n\nthe key will be the name of the stream\n\n\n# definitions\n\n\n# abstractpythontap-2\n\n\n# abstractpythontap-1\n\n# args\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> python command args\n\narguments list to pass to main python script\n\n# dockeroptions\n\n * type: dockeroptions\n * dynamic: ❓\n * required: ❌\n\n> docker options when using runner docker\n\nwith this python task, we can execute a full python script.\nthe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nby convention, you need to define at least a main.py files in inputfiles that will be the script used.\nbut you are also able to add as many script as you need in inputfiles.\n\nyou can also add a pip.conf in inputfiles to customize the pip download of dependencies (like a private registry).\n\nyou can send outputs & metrics from your python script that can be used by others tasks. in order to help, we inject a python package directly on the working dir.here is an example usage:\n\nfrom kestra import kestra\nkestra.outputs({'test': 'value', 'int': 2, 'bool': true, 'float': 3.65})\nkestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nkestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nkestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n# env\n\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> additional environnements variable to add for current process.\n\nwith this python task, we can execute a full python script.\nthe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nby convention, you need to define at least a main.py files in inputfiles that will be the script used.\nbut you are also able to add as many script as you need in inputfiles.\n\nyou can also add a pip.conf in inputfiles to customize the pip download of dependencies (like a private registry).\n\nyou can send outputs & metrics from your python script that can be used by others tasks. in order to help, we inject a python package directly on the working dir.here is an example usage:\n\nfrom kestra import kestra\nkestra.outputs({'test': 'value', 'int': 2, 'bool': true, 'float': 3.65})\nkestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nkestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nkestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n# exitonfailed\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> exit if any non true return value\n\nthis tells bash that it should exit the script if any statement returns a non-true return value.\nthe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n# files\n\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> the list of files that will be uploaded to internal storage,\n\nuse outputfiles property instead\n\n# inputfiles\n\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> input files are extra files supplied by user that make it simpler organize code.\n\ndescribe a files map that will be written and usable in execution context. in python execution context is in a temp folder, for bash scripts, you can reach files using a workingdir variable like 'source {{workingdir}}/myfile.sh'\n\n# interpreter\n\n * type: string\n * dynamic: ❌\n * required: ✔️\n * default: /bin/sh\n * min length: 1\n\n> interpreter to used\n\nwith this python task, we can execute a full python script.\nthe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nby convention, you need to define at least a main.py files in inputfiles that will be the script used.\nbut you are also able to add as many script as you need in inputfiles.\n\nyou can also add a pip.conf in inputfiles to customize the pip download of dependencies (like a private registry).\n\nyou can send outputs & metrics from your python script that can be used by others tasks. in order to help, we inject a python package directly on the working dir.here is an example usage:\n\nfrom kestra import kestra\nkestra.outputs({'test': 'value', 'int': 2, 'bool': true, 'float': 3.65})\nkestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nkestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nkestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n# interpreterargs\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n * default: [-c]\n\n> interpreter args used\n\nwith this python task, we can execute a full python script.\nthe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nby convention, you need to define at least a main.py files in inputfiles that will be the script used.\nbut you are also able to add as many script as you need in inputfiles.\n\nyou can also add a pip.conf in inputfiles to customize the pip download of dependencies (like a private registry).\n\nyou can send outputs & metrics from your python script that can be used by others tasks. in order to help, we inject a python package directly on the working dir.here is an example usage:\n\nfrom kestra import kestra\nkestra.outputs({'test': 'value', 'int': 2, 'bool': true, 'float': 3.65})\nkestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nkestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nkestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n# outputfiles\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> output file list that will be uploaded to internal storage\n\nlist of key that will generate temporary files.\non the command, just can use with special variable named outputfiles.key.\nif you add a files with [\"first\"], you can use the special vars echo 1 >> {[ outputfiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n# outputsfiles\n\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> deprecated output file\n\nuse outputfiles\n\n# pythonpath\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * default: python\n * min length: 1\n\n> the python interpreter to use\n\nset the python interpreter path to use\n\n# requirements\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> requirements are python dependencies to add to the python execution process\n\npython dependencies list to setup in the virtualenv, in the same format than requirements.txt\n\n# runner\n\n * type: string\n\n * dynamic: ❌\n\n * required: ✔️\n\n * default: process\n\n * possible values:\n   \n   * process\n   * docker\n\n> runner to use\n\nwith this python task, we can execute a full python script.\nthe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nby convention, you need to define at least a main.py files in inputfiles that will be the script used.\nbut you are also able to add as many script as you need in inputfiles.\n\nyou can also add a pip.conf in inputfiles to customize the pip download of dependencies (like a private registry).\n\nyou can send outputs & metrics from your python script that can be used by others tasks. in order to help, we inject a python package directly on the working dir.here is an example usage:\n\nfrom kestra import kestra\nkestra.outputs({'test': 'value', 'int': 2, 'bool': true, 'float': 3.65})\nkestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nkestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nkestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n# streamsconfigurations\n\n * type: array\n * subtype: streamsconfiguration\n * dynamic: ❌\n * required: ✔️\n * min items: 1\n\n> the list of stream configurations\n\nwith this python task, we can execute a full python script.\nthe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nby convention, you need to define at least a main.py files in inputfiles that will be the script used.\nbut you are also able to add as many script as you need in inputfiles.\n\nyou can also add a pip.conf in inputfiles to customize the pip download of dependencies (like a private registry).\n\nyou can send outputs & metrics from your python script that can be used by others tasks. in order to help, we inject a python package directly on the working dir.here is an example usage:\n\nfrom kestra import kestra\nkestra.outputs({'test': 'value', 'int': 2, 'bool': true, 'float': 3.65})\nkestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nkestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nkestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n# warningonstderr\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> use warning state if any stderr is sent\n\nwith this python task, we can execute a full python script.\nthe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nby convention, you need to define at least a main.py files in inputfiles that will be the script used.\nbut you are also able to add as many script as you need in inputfiles.\n\nyou can also add a pip.conf in inputfiles to customize the pip download of dependencies (like a private registry).\n\nyou can send outputs & metrics from your python script that can be used by others tasks. in order to help, we inject a python package directly on the working dir.here is an example usage:\n\nfrom kestra import kestra\nkestra.outputs({'test': 'value', 'int': 2, 'bool': true, 'float': 3.65})\nkestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nkestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nkestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n\n# dockeroptions\n\n# dockerconfig\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> docker config file\n\nfull file that can be used to configure private registries, ...\n\n# dockerhost\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n * default: unix:///var/run/docker.sock\n\n> docker api uri\n\n# entrypoint\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> docker entrypoint to use\n\n# extrahosts\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> docker extra host to use\n\n# image\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> docker image to use\n\n# user\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> docker user to use\n\n\n# streamsconfiguration\n\n# propertiespattern\n\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n\n# replicationkeys\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# replicationmethod\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * possible values:\n   \n   * full_table\n   * incremental\n   * log_based\n\n# selected\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: true\n\n# stream\n\n * type: string\n * dynamic: ❓\n * required: ❌",charsets:{}},{title:"MeltanoSnowflake",frontmatter:{title:"MeltanoSnowflake",editLink:!1,description:"A Singer target loads data into a Snowflake database.",icon:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB2aWV3Qm94PSIwIDAgNjMgNjYiIGZpbGw9IiNmZmYiIGZpbGwtcnVsZT0iZXZlbm9kZCIgc3Ryb2tlPSIjMDAwIiBzdHJva2UtbGluZWNhcD0icm91bmQiIHN0cm9rZS1saW5lam9pbj0icm91bmQiPjx1c2UgeGxpbms6aHJlZj0iI0EiIHg9Ii41IiB5PSIuNSIvPjxzeW1ib2wgaWQ9IkEiIG92ZXJmbG93PSJ2aXNpYmxlIj48cGF0aCBkPSJNOC42NDUgMTUuMzA0bDEzLjAwOCA3LjhhMy43MiAzLjcyIDAgMCAwIDQuNTg5LS42MDEgNC4wMSA0LjAxIDAgMCAwIDEuMjI3LTIuOTA4VjMuOTYyYTMuODEgMy44MSAwIDAgMC0xLjg2MS0zLjQyIDMuODEgMy44MSAwIDAgMC0zLjg5MyAwIDMuODEgMy44MSAwIDAgMC0xLjg2MSAzLjQydjguODk2bC03LjM4Ny00LjQzYTMuNzkgMy43OSAwIDAgMC0yLjkyMi0uNGMtLjk4Ni4yNjUtMS44MTguOTQtMi4zIDEuODQ0LTEuMDU3IDEuOS0uNDQgNC4yOCAxLjQgNS40MjJtMzEuMjcgNy44bDEzLjAwOC03LjhjMS44NC0xLjE0MyAyLjQ1OC0zLjUzMyAxLjQtNS40MjRhMy43NSAzLjc1IDAgMCAwLTUuMjItMS40NTJsLTcuMyA0LjM3di04Ljg0QTMuODEgMy44MSAwIDAgMCAzOS45NC41MzRhMy44MSAzLjgxIDAgMCAwLTMuODg5IDAgMy44MSAzLjgxIDAgMCAwLTEuODYzIDMuNDE0djE1LjMyM2E0LjA4IDQuMDggMCAwIDAgLjQ5NCAyLjM2N2MuNDgyLjkwMyAxLjMxNCAxLjU3IDIuMyAxLjg0NGEzLjcxIDMuNzEgMCAwIDAgMi45MjItLjRtLTExLjU2NyA4Ljg5NGMuMDEzLS4yNS4xMDgtLjUuMjcyLS42OGwxLjUyLTEuNThhMS4wNiAxLjA2IDAgMCAxIC42NTgtLjI4MmguMDU3YTEuMDUgMS4wNSAwIDAgMSAuNjU2LjI4MmwxLjUyIDEuNThhMS4xMiAxLjEyIDAgMCAxIC4yNzIuNjgxdi4wNmExLjEzIDEuMTMgMCAwIDEtLjI3Mi42ODNMMzEuNSAzNC4zYTEuMDQgMS4wNCAwIDAgMS0uNjU2LjI4NGgtLjA1N2MtLjI0Ni0uMDE0LS40OC0uMTE1LS42NTgtLjI4NGwtMS41Mi0xLjU4YTEuMTMgMS4xMyAwIDAgMS0uMjcyLS42ODN6bS00LjYwNC0uNjV2MS4zNjRhMS41NCAxLjU0IDAgMCAwIC4zNzIuOTNsNS4xNiA1LjM1N2ExLjQyIDEuNDIgMCAwIDAgLjg5NS4zODZoMS4zMTJhMS40MiAxLjQyIDAgMCAwIC44OTUtLjM4Nmw1LjE2LTUuMzU3YTEuNTQgMS41NCAwIDAgMCAuMzcyLS45M3YtMS4zNjRhMS41NCAxLjU0IDAgMCAwLS4zNzItLjkzbC01LjE2LTUuMzU3YTEuNDIgMS40MiAwIDAgMC0uODk1LS4zODZIMzAuMTZhMS40MiAxLjQyIDAgMCAwLS44OTUuMzg2bC01LjE2IDUuMzY3YTEuNTUgMS41NSAwIDAgMC0uMzcyLjkzbS0yMS44MTgtMy43MWw3LjM2NSA0LjQxNy03LjM2NSA0LjQxM0E0LjA2IDQuMDYgMCAwIDAgLjUxNiA0MS44OGEzLjc1IDMuNzUgMCAwIDAgMi4zIDEuODQ0Yy45ODYuMjc0IDIuMDQyLjEzMyAyLjkyMi0uMzkybDEzLjAwOC03LjhjMS4yLS43NjIgMS45LTIuMDc4IDEuOS0zLjQ5MmE0LjE2IDQuMTYgMCAwIDAtMS45LTMuNDkybC0xMy4wMDgtNy44YTMuNzkgMy43OSAwIDAgMC0yLjkyMi0uNGMtLjk4Ni4yNjUtMS44MTguOTQtMi4zIDEuODQ0LTEuMDU3IDEuOS0uNDQgNC4yNzggMS40IDUuNDIybTM4Ljk5NSA0LjQ0MmE0IDQgMCAwIDAgMS45MSAzLjQ3N2wxMyA3LjhjLjg4LjUyNCAxLjkzNC42NjYgMi45Mi4zOTJzMS44MTctLjk0IDIuMy0xLjg0M2E0LjA1IDQuMDUgMCAwIDAtMS40LTUuNDI0bC03LjM1Ni00LjQxNCA3LjM2NS00LjQxN2MxLjg0LTEuMTQzIDIuNDU3LTMuNTMgMS40LTUuNDIyYTMuNzQgMy43NCAwIDAgMC0yLjMtMS44NDRjLS45ODctLjI3NC0yLjA0Mi0uMTM0LTIuOTIuNGwtMTMgNy44YTQgNCAwIDAgMC0xLjkxIDMuNTA3bS0xNi42NTUgOC40NDZhMy43IDMuNyAwIDAgMC0yLjYxMS40NjRsLTEzLjAwOCA3LjhjLTEuODQgMS4xNDMtMi40NTYgMy41My0xLjQgNS40MjIuNDgzLjkwMyAxLjMxNCAxLjU3IDIuMyAxLjg0M2EzLjc1IDMuNzUgMCAwIDAgMi45MjItLjM5Mmw3LjM4Ny00LjQzdjguODNhMy44MSAzLjgxIDAgMCAwIDUuNzU1IDMuNDI1IDMuODEgMy44MSAwIDAgMCAxLjg1OC0zLjQyNVY0NC40MDZhMy45MSAzLjkxIDAgMCAwLTMuMjA1LTMuOTAzbTI4LjY2IDguMjc2bC0xMy4wMDgtNy44YTMuNzUgMy43NSAwIDAgMC0yLjkyMi0uMzkyIDMuNzQgMy43NCAwIDAgMC0yLjMgMS44NDMgNC4wOSA0LjA5IDAgMCAwLS40OTQgMi4zN3YxNS4yNWEzLjgxIDMuODEgMCAwIDAgNS43NTUgMy40MjUgMy44MSAzLjgxIDAgMCAwIDEuODU5LTMuNDI1di04Ljc2NGw3LjI4NyA0LjM3YTMuNzkgMy43OSAwIDAgMCAyLjkyMi40Yy45ODYtLjI2NSAxLjgxOC0uOTQgMi4zLTEuODQ0IDEuMDU3LTEuOS40NC00LjI4LTEuNC01LjQyMiIgc3Ryb2tlPSJub25lIiBmaWxsPSIjMjliNWU4IiBmaWxsLXJ1bGU9Im5vbnplcm8iLz48L3N5bWJvbD48L3N2Zz4=",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"MeltanoSnowflake"},{property:"og:description",content:"A Singer target loads data into a Snowflake database. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-singer/tasks/targets/io.kestra.plugin.singer.targets.MeltanoSnowflake.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"MeltanoSnowflake"},{name:"twitter:description",content:"A Singer target loads data into a Snowflake database. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-singer/tasks/targets/io.kestra.plugin.singer.targets.MeltanoSnowflake.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-singer/tasks/targets/io.kestra.plugin.singer.targets.MeltanoSnowflake.html",relativePath:"plugins/plugin-singer/tasks/targets/io.kestra.plugin.singer.targets.MeltanoSnowflake.md",key:"v-15212176",path:"/plugins/plugin-singer/tasks/targets/io.kestra.plugin.singer.targets.MeltanoSnowflake.html",headers:[{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:175},{level:3,title:"account",slug:"account",normalizedTitle:"account",charIndex:190},{level:3,title:"args",slug:"args",normalizedTitle:"args",charIndex:322},{level:3,title:"batchSize",slug:"batchsize",normalizedTitle:"batchsize",charIndex:465},{level:3,title:"database",slug:"database",normalizedTitle:"database",charIndex:123},{level:3,title:"dockerOptions",slug:"dockeroptions",normalizedTitle:"dockeroptions",charIndex:695},{level:3,title:"env",slug:"env",normalizedTitle:"env",charIndex:809},{level:3,title:"exitOnFailed",slug:"exitonfailed",normalizedTitle:"exitonfailed",charIndex:949},{level:3,title:"files",slug:"files",normalizedTitle:"files",charIndex:1291},{level:3,title:"inputFiles",slug:"inputfiles",normalizedTitle:"inputfiles",charIndex:1479},{level:3,title:"interpreter",slug:"interpreter",normalizedTitle:"interpreter",charIndex:1874},{level:3,title:"interpreterArgs",slug:"interpreterargs",normalizedTitle:"interpreterargs",charIndex:1997},{level:3,title:"outputFiles",slug:"outputfiles",normalizedTitle:"outputfiles",charIndex:1446},{level:3,title:"outputsFiles",slug:"outputsfiles",normalizedTitle:"outputsfiles",charIndex:2555},{level:3,title:"password",slug:"password",normalizedTitle:"password",charIndex:2694},{level:3,title:"pythonPath",slug:"pythonpath",normalizedTitle:"pythonpath",charIndex:2786},{level:3,title:"requirements",slug:"requirements",normalizedTitle:"requirements",charIndex:2958},{level:3,title:"runner",slug:"runner",normalizedTitle:"runner",charIndex:791},{level:3,title:"schema",slug:"schema",normalizedTitle:"schema",charIndex:3362},{level:3,title:"tap",slug:"tap",normalizedTitle:"tap",charIndex:3461},{level:3,title:"timestampColumn",slug:"timestampcolumn",normalizedTitle:"timestampcolumn",charIndex:3529},{level:3,title:"username",slug:"username",normalizedTitle:"username",charIndex:3712},{level:3,title:"warehouse",slug:"warehouse",normalizedTitle:"warehouse",charIndex:3811},{level:3,title:"warningOnStdErr",slug:"warningonstderr",normalizedTitle:"warningonstderr",charIndex:3926},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:4054},{level:3,title:"state",slug:"state",normalizedTitle:"state",charIndex:1119},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:4118},{level:3,title:"AbstractPythonTap-2",slug:"abstractpythontap-2",normalizedTitle:"abstractpythontap-2",charIndex:3475},{level:3,title:"AbstractPythonTap-1",slug:"abstractpythontap-1",normalizedTitle:"abstractpythontap-1",charIndex:4158},{level:3,title:"DockerOptions",slug:"dockeroptions-3",normalizedTitle:"dockeroptions",charIndex:719},{level:3,title:"StreamsConfiguration",slug:"streamsconfiguration",normalizedTitle:"streamsconfiguration",charIndex:11801}],headersStr:"Properties account args batchSize database dockerOptions env exitOnFailed files inputFiles interpreter interpreterArgs outputFiles outputsFiles password pythonPath requirements runner schema tap timestampColumn username warehouse warningOnStdErr Outputs state Definitions AbstractPythonTap-2 AbstractPythonTap-1 DockerOptions StreamsConfiguration",content:"MeltanoSnowflake\n\ntype: \"io.kestra.plugin.singer.targets.MeltanoSnowflake\"\n\n\n> A Singer target loads data into a Snowflake database.\n\nFull documentation can be found here\n\n\n# Properties\n\n\n# account\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> Snowflake account name\n\n(i.e. rtXXXXX.eu-central-1)\n\n\n# args\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Python command args\n\nArguments list to pass to main python script\n\n\n# batchSize\n\n * Type: integer\n * Dynamic: ❌\n * Required: ❌\n * Default: 5000\n\n> How many records are sent to Snowflake at a time?\n\n\n# database\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> The database name\n\n\n# dockerOptions\n\n * Type: DockerOptions\n * Dynamic: ❓\n * Required: ❌\n\n> Docker options when using runner DOCKER\n\n\n# env\n\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Additional environnements variable to add for current process.\n\n\n# exitOnFailed\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Exit if any non true return value\n\nThis tells bash that it should exit the script if any statement returns a non-true return value.\nThe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n\n# files\n\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The list of files that will be uploaded to internal storage,\n\nuse outputFiles property instead\n\n\n# inputFiles\n\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Input files are extra files supplied by user that make it simpler organize code.\n\nDescribe a files map that will be written and usable in execution context. In python execution context is in a temp folder, for bash scripts, you can reach files using a workingDir variable like 'source {{workingDir}}/myfile.sh'\n\n\n# interpreter\n\n * Type: string\n * Dynamic: ❌\n * Required: ✔️\n * Default: /bin/sh\n * Min length: 1\n\n> Interpreter to used\n\n\n# interpreterArgs\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n * Default: [-c]\n\n> Interpreter args used\n\n\n# outputFiles\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Output file list that will be uploaded to internal storage\n\nList of key that will generate temporary files.\nOn the command, just can use with special variable named outputFiles.key.\nIf you add a files with [\"first\"], you can use the special vars echo 1 >> {[ outputFiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n\n# outputsFiles\n\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Deprecated Output file\n\nuse outputFiles\n\n\n# password\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The database user's password\n\n\n# pythonPath\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Default: python\n * Min length: 1\n\n> The python interpreter to use\n\nSet the python interpreter path to use\n\n\n# requirements\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Requirements are python dependencies to add to the python execution process\n\nPython dependencies list to setup in the virtualenv, in the same format than requirements.txt\n\n\n# runner\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ✔️\n\n * Default: PROCESS\n\n * Possible Values:\n   \n   * PROCESS\n   * DOCKER\n\n> Runner to use\n\n\n# schema\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> The database schema\n\n\n# tap\n\n * Type: AbstractPythonTap-2\n * Dynamic: ❓\n * Required: ✔️\n\n\n# timestampColumn\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: __loaded_at\n\n> Name of the column used for recording the timestamp when Data are uploaded to Snowflake.\n\n\n# username\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> The database user\n\n\n# warehouse\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> Snowflake virtual warehouse name\n\n\n# warningOnStdErr\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Use WARNING state if any stdErr is sent\n\n\n# Outputs\n\n\n# state\n\n * Type: string\n\n> Uri of the state file\n\n\n# Definitions\n\n\n# AbstractPythonTap-2\n\n\n# AbstractPythonTap-1\n\n# args\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Python command args\n\nArguments list to pass to main python script\n\n# dockerOptions\n\n * Type: DockerOptions\n * Dynamic: ❓\n * Required: ❌\n\n> Docker options when using runner DOCKER\n\nWith this Python task, we can execute a full python script.\nThe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nBy convention, you need to define at least a main.py files in inputFiles that will be the script used.\nBut you are also able to add as many script as you need in inputFiles.\n\nYou can also add a pip.conf in inputFiles to customize the pip download of dependencies (like a private registry).\n\nYou can send outputs & metrics from your python script that can be used by others tasks. In order to help, we inject a python package directly on the working dir.Here is an example usage:\n\nfrom kestra import Kestra\nKestra.outputs({'test': 'value', 'int': 2, 'bool': True, 'float': 3.65})\nKestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nKestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nKestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n# env\n\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Additional environnements variable to add for current process.\n\nWith this Python task, we can execute a full python script.\nThe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nBy convention, you need to define at least a main.py files in inputFiles that will be the script used.\nBut you are also able to add as many script as you need in inputFiles.\n\nYou can also add a pip.conf in inputFiles to customize the pip download of dependencies (like a private registry).\n\nYou can send outputs & metrics from your python script that can be used by others tasks. In order to help, we inject a python package directly on the working dir.Here is an example usage:\n\nfrom kestra import Kestra\nKestra.outputs({'test': 'value', 'int': 2, 'bool': True, 'float': 3.65})\nKestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nKestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nKestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n# exitOnFailed\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Exit if any non true return value\n\nThis tells bash that it should exit the script if any statement returns a non-true return value.\nThe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n# files\n\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The list of files that will be uploaded to internal storage,\n\nuse outputFiles property instead\n\n# inputFiles\n\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Input files are extra files supplied by user that make it simpler organize code.\n\nDescribe a files map that will be written and usable in execution context. In python execution context is in a temp folder, for bash scripts, you can reach files using a workingDir variable like 'source {{workingDir}}/myfile.sh'\n\n# interpreter\n\n * Type: string\n * Dynamic: ❌\n * Required: ✔️\n * Default: /bin/sh\n * Min length: 1\n\n> Interpreter to used\n\nWith this Python task, we can execute a full python script.\nThe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nBy convention, you need to define at least a main.py files in inputFiles that will be the script used.\nBut you are also able to add as many script as you need in inputFiles.\n\nYou can also add a pip.conf in inputFiles to customize the pip download of dependencies (like a private registry).\n\nYou can send outputs & metrics from your python script that can be used by others tasks. In order to help, we inject a python package directly on the working dir.Here is an example usage:\n\nfrom kestra import Kestra\nKestra.outputs({'test': 'value', 'int': 2, 'bool': True, 'float': 3.65})\nKestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nKestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nKestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n# interpreterArgs\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n * Default: [-c]\n\n> Interpreter args used\n\nWith this Python task, we can execute a full python script.\nThe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nBy convention, you need to define at least a main.py files in inputFiles that will be the script used.\nBut you are also able to add as many script as you need in inputFiles.\n\nYou can also add a pip.conf in inputFiles to customize the pip download of dependencies (like a private registry).\n\nYou can send outputs & metrics from your python script that can be used by others tasks. In order to help, we inject a python package directly on the working dir.Here is an example usage:\n\nfrom kestra import Kestra\nKestra.outputs({'test': 'value', 'int': 2, 'bool': True, 'float': 3.65})\nKestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nKestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nKestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n# outputFiles\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Output file list that will be uploaded to internal storage\n\nList of key that will generate temporary files.\nOn the command, just can use with special variable named outputFiles.key.\nIf you add a files with [\"first\"], you can use the special vars echo 1 >> {[ outputFiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n# outputsFiles\n\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Deprecated Output file\n\nuse outputFiles\n\n# pythonPath\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Default: python\n * Min length: 1\n\n> The python interpreter to use\n\nSet the python interpreter path to use\n\n# requirements\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Requirements are python dependencies to add to the python execution process\n\nPython dependencies list to setup in the virtualenv, in the same format than requirements.txt\n\n# runner\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ✔️\n\n * Default: PROCESS\n\n * Possible Values:\n   \n   * PROCESS\n   * DOCKER\n\n> Runner to use\n\nWith this Python task, we can execute a full python script.\nThe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nBy convention, you need to define at least a main.py files in inputFiles that will be the script used.\nBut you are also able to add as many script as you need in inputFiles.\n\nYou can also add a pip.conf in inputFiles to customize the pip download of dependencies (like a private registry).\n\nYou can send outputs & metrics from your python script that can be used by others tasks. In order to help, we inject a python package directly on the working dir.Here is an example usage:\n\nfrom kestra import Kestra\nKestra.outputs({'test': 'value', 'int': 2, 'bool': True, 'float': 3.65})\nKestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nKestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nKestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n# streamsConfigurations\n\n * Type: array\n * SubType: StreamsConfiguration\n * Dynamic: ❌\n * Required: ✔️\n * Min items: 1\n\n> The list of stream configurations\n\nWith this Python task, we can execute a full python script.\nThe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nBy convention, you need to define at least a main.py files in inputFiles that will be the script used.\nBut you are also able to add as many script as you need in inputFiles.\n\nYou can also add a pip.conf in inputFiles to customize the pip download of dependencies (like a private registry).\n\nYou can send outputs & metrics from your python script that can be used by others tasks. In order to help, we inject a python package directly on the working dir.Here is an example usage:\n\nfrom kestra import Kestra\nKestra.outputs({'test': 'value', 'int': 2, 'bool': True, 'float': 3.65})\nKestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nKestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nKestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n# warningOnStdErr\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Use WARNING state if any stdErr is sent\n\nWith this Python task, we can execute a full python script.\nThe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nBy convention, you need to define at least a main.py files in inputFiles that will be the script used.\nBut you are also able to add as many script as you need in inputFiles.\n\nYou can also add a pip.conf in inputFiles to customize the pip download of dependencies (like a private registry).\n\nYou can send outputs & metrics from your python script that can be used by others tasks. In order to help, we inject a python package directly on the working dir.Here is an example usage:\n\nfrom kestra import Kestra\nKestra.outputs({'test': 'value', 'int': 2, 'bool': True, 'float': 3.65})\nKestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nKestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nKestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n\n# DockerOptions\n\n# dockerConfig\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker config file\n\nFull file that can be used to configure private registries, ...\n\n# dockerHost\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: unix:///var/run/docker.sock\n\n> Docker api uri\n\n# entryPoint\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker entrypoint to use\n\n# extraHosts\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker extra host to use\n\n# image\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> Docker image to use\n\n# user\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker user to use\n\n\n# StreamsConfiguration\n\n# propertiesPattern\n\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n\n# replicationKeys\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# replicationMethod\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Possible Values:\n   \n   * FULL_TABLE\n   * INCREMENTAL\n   * LOG_BASED\n\n# selected\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: true\n\n# stream\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌",normalizedContent:"meltanosnowflake\n\ntype: \"io.kestra.plugin.singer.targets.meltanosnowflake\"\n\n\n> a singer target loads data into a snowflake database.\n\nfull documentation can be found here\n\n\n# properties\n\n\n# account\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> snowflake account name\n\n(i.e. rtxxxxx.eu-central-1)\n\n\n# args\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> python command args\n\narguments list to pass to main python script\n\n\n# batchsize\n\n * type: integer\n * dynamic: ❌\n * required: ❌\n * default: 5000\n\n> how many records are sent to snowflake at a time?\n\n\n# database\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> the database name\n\n\n# dockeroptions\n\n * type: dockeroptions\n * dynamic: ❓\n * required: ❌\n\n> docker options when using runner docker\n\n\n# env\n\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> additional environnements variable to add for current process.\n\n\n# exitonfailed\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> exit if any non true return value\n\nthis tells bash that it should exit the script if any statement returns a non-true return value.\nthe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n\n# files\n\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> the list of files that will be uploaded to internal storage,\n\nuse outputfiles property instead\n\n\n# inputfiles\n\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> input files are extra files supplied by user that make it simpler organize code.\n\ndescribe a files map that will be written and usable in execution context. in python execution context is in a temp folder, for bash scripts, you can reach files using a workingdir variable like 'source {{workingdir}}/myfile.sh'\n\n\n# interpreter\n\n * type: string\n * dynamic: ❌\n * required: ✔️\n * default: /bin/sh\n * min length: 1\n\n> interpreter to used\n\n\n# interpreterargs\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n * default: [-c]\n\n> interpreter args used\n\n\n# outputfiles\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> output file list that will be uploaded to internal storage\n\nlist of key that will generate temporary files.\non the command, just can use with special variable named outputfiles.key.\nif you add a files with [\"first\"], you can use the special vars echo 1 >> {[ outputfiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n\n# outputsfiles\n\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> deprecated output file\n\nuse outputfiles\n\n\n# password\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the database user's password\n\n\n# pythonpath\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * default: python\n * min length: 1\n\n> the python interpreter to use\n\nset the python interpreter path to use\n\n\n# requirements\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> requirements are python dependencies to add to the python execution process\n\npython dependencies list to setup in the virtualenv, in the same format than requirements.txt\n\n\n# runner\n\n * type: string\n\n * dynamic: ❌\n\n * required: ✔️\n\n * default: process\n\n * possible values:\n   \n   * process\n   * docker\n\n> runner to use\n\n\n# schema\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> the database schema\n\n\n# tap\n\n * type: abstractpythontap-2\n * dynamic: ❓\n * required: ✔️\n\n\n# timestampcolumn\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n * default: __loaded_at\n\n> name of the column used for recording the timestamp when data are uploaded to snowflake.\n\n\n# username\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> the database user\n\n\n# warehouse\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> snowflake virtual warehouse name\n\n\n# warningonstderr\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> use warning state if any stderr is sent\n\n\n# outputs\n\n\n# state\n\n * type: string\n\n> uri of the state file\n\n\n# definitions\n\n\n# abstractpythontap-2\n\n\n# abstractpythontap-1\n\n# args\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> python command args\n\narguments list to pass to main python script\n\n# dockeroptions\n\n * type: dockeroptions\n * dynamic: ❓\n * required: ❌\n\n> docker options when using runner docker\n\nwith this python task, we can execute a full python script.\nthe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nby convention, you need to define at least a main.py files in inputfiles that will be the script used.\nbut you are also able to add as many script as you need in inputfiles.\n\nyou can also add a pip.conf in inputfiles to customize the pip download of dependencies (like a private registry).\n\nyou can send outputs & metrics from your python script that can be used by others tasks. in order to help, we inject a python package directly on the working dir.here is an example usage:\n\nfrom kestra import kestra\nkestra.outputs({'test': 'value', 'int': 2, 'bool': true, 'float': 3.65})\nkestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nkestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nkestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n# env\n\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> additional environnements variable to add for current process.\n\nwith this python task, we can execute a full python script.\nthe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nby convention, you need to define at least a main.py files in inputfiles that will be the script used.\nbut you are also able to add as many script as you need in inputfiles.\n\nyou can also add a pip.conf in inputfiles to customize the pip download of dependencies (like a private registry).\n\nyou can send outputs & metrics from your python script that can be used by others tasks. in order to help, we inject a python package directly on the working dir.here is an example usage:\n\nfrom kestra import kestra\nkestra.outputs({'test': 'value', 'int': 2, 'bool': true, 'float': 3.65})\nkestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nkestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nkestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n# exitonfailed\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> exit if any non true return value\n\nthis tells bash that it should exit the script if any statement returns a non-true return value.\nthe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n# files\n\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> the list of files that will be uploaded to internal storage,\n\nuse outputfiles property instead\n\n# inputfiles\n\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> input files are extra files supplied by user that make it simpler organize code.\n\ndescribe a files map that will be written and usable in execution context. in python execution context is in a temp folder, for bash scripts, you can reach files using a workingdir variable like 'source {{workingdir}}/myfile.sh'\n\n# interpreter\n\n * type: string\n * dynamic: ❌\n * required: ✔️\n * default: /bin/sh\n * min length: 1\n\n> interpreter to used\n\nwith this python task, we can execute a full python script.\nthe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nby convention, you need to define at least a main.py files in inputfiles that will be the script used.\nbut you are also able to add as many script as you need in inputfiles.\n\nyou can also add a pip.conf in inputfiles to customize the pip download of dependencies (like a private registry).\n\nyou can send outputs & metrics from your python script that can be used by others tasks. in order to help, we inject a python package directly on the working dir.here is an example usage:\n\nfrom kestra import kestra\nkestra.outputs({'test': 'value', 'int': 2, 'bool': true, 'float': 3.65})\nkestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nkestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nkestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n# interpreterargs\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n * default: [-c]\n\n> interpreter args used\n\nwith this python task, we can execute a full python script.\nthe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nby convention, you need to define at least a main.py files in inputfiles that will be the script used.\nbut you are also able to add as many script as you need in inputfiles.\n\nyou can also add a pip.conf in inputfiles to customize the pip download of dependencies (like a private registry).\n\nyou can send outputs & metrics from your python script that can be used by others tasks. in order to help, we inject a python package directly on the working dir.here is an example usage:\n\nfrom kestra import kestra\nkestra.outputs({'test': 'value', 'int': 2, 'bool': true, 'float': 3.65})\nkestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nkestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nkestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n# outputfiles\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> output file list that will be uploaded to internal storage\n\nlist of key that will generate temporary files.\non the command, just can use with special variable named outputfiles.key.\nif you add a files with [\"first\"], you can use the special vars echo 1 >> {[ outputfiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n# outputsfiles\n\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> deprecated output file\n\nuse outputfiles\n\n# pythonpath\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * default: python\n * min length: 1\n\n> the python interpreter to use\n\nset the python interpreter path to use\n\n# requirements\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> requirements are python dependencies to add to the python execution process\n\npython dependencies list to setup in the virtualenv, in the same format than requirements.txt\n\n# runner\n\n * type: string\n\n * dynamic: ❌\n\n * required: ✔️\n\n * default: process\n\n * possible values:\n   \n   * process\n   * docker\n\n> runner to use\n\nwith this python task, we can execute a full python script.\nthe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nby convention, you need to define at least a main.py files in inputfiles that will be the script used.\nbut you are also able to add as many script as you need in inputfiles.\n\nyou can also add a pip.conf in inputfiles to customize the pip download of dependencies (like a private registry).\n\nyou can send outputs & metrics from your python script that can be used by others tasks. in order to help, we inject a python package directly on the working dir.here is an example usage:\n\nfrom kestra import kestra\nkestra.outputs({'test': 'value', 'int': 2, 'bool': true, 'float': 3.65})\nkestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nkestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nkestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n# streamsconfigurations\n\n * type: array\n * subtype: streamsconfiguration\n * dynamic: ❌\n * required: ✔️\n * min items: 1\n\n> the list of stream configurations\n\nwith this python task, we can execute a full python script.\nthe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nby convention, you need to define at least a main.py files in inputfiles that will be the script used.\nbut you are also able to add as many script as you need in inputfiles.\n\nyou can also add a pip.conf in inputfiles to customize the pip download of dependencies (like a private registry).\n\nyou can send outputs & metrics from your python script that can be used by others tasks. in order to help, we inject a python package directly on the working dir.here is an example usage:\n\nfrom kestra import kestra\nkestra.outputs({'test': 'value', 'int': 2, 'bool': true, 'float': 3.65})\nkestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nkestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nkestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n# warningonstderr\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> use warning state if any stderr is sent\n\nwith this python task, we can execute a full python script.\nthe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nby convention, you need to define at least a main.py files in inputfiles that will be the script used.\nbut you are also able to add as many script as you need in inputfiles.\n\nyou can also add a pip.conf in inputfiles to customize the pip download of dependencies (like a private registry).\n\nyou can send outputs & metrics from your python script that can be used by others tasks. in order to help, we inject a python package directly on the working dir.here is an example usage:\n\nfrom kestra import kestra\nkestra.outputs({'test': 'value', 'int': 2, 'bool': true, 'float': 3.65})\nkestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nkestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nkestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n\n# dockeroptions\n\n# dockerconfig\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> docker config file\n\nfull file that can be used to configure private registries, ...\n\n# dockerhost\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n * default: unix:///var/run/docker.sock\n\n> docker api uri\n\n# entrypoint\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> docker entrypoint to use\n\n# extrahosts\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> docker extra host to use\n\n# image\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> docker image to use\n\n# user\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> docker user to use\n\n\n# streamsconfiguration\n\n# propertiespattern\n\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n\n# replicationkeys\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# replicationmethod\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * possible values:\n   \n   * full_table\n   * incremental\n   * log_based\n\n# selected\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: true\n\n# stream\n\n * type: string\n * dynamic: ❓\n * required: ❌",charsets:{}},{title:"PipelinewisePostgres",frontmatter:{title:"PipelinewisePostgres",editLink:!1,description:"A Singer target loads data into a Postgres database.",icon:"",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"PipelinewisePostgres"},{property:"og:description",content:"A Singer target loads data into a Postgres database. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-singer/tasks/targets/io.kestra.plugin.singer.targets.PipelinewisePostgres.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"PipelinewisePostgres"},{name:"twitter:description",content:"A Singer target loads data into a Postgres database. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-singer/tasks/targets/io.kestra.plugin.singer.targets.PipelinewisePostgres.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-singer/tasks/targets/io.kestra.plugin.singer.targets.PipelinewisePostgres.html",relativePath:"plugins/plugin-singer/tasks/targets/io.kestra.plugin.singer.targets.PipelinewisePostgres.md",key:"v-08265ca7",path:"/plugins/plugin-singer/tasks/targets/io.kestra.plugin.singer.targets.PipelinewisePostgres.html",headers:[{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:182},{level:3,title:"addMetadataColumns",slug:"addmetadatacolumns",normalizedTitle:"addmetadatacolumns",charIndex:197},{level:3,title:"args",slug:"args",normalizedTitle:"args",charIndex:861},{level:3,title:"batchSizeRows",slug:"batchsizerows",normalizedTitle:"batchsizerows",charIndex:1004},{level:3,title:"dataFlatteningMaxLevel",slug:"dataflatteningmaxlevel",normalizedTitle:"dataflatteningmaxlevel",charIndex:1204},{level:3,title:"dbName",slug:"dbname",normalizedTitle:"dbname",charIndex:1477},{level:3,title:"defaultTargetSchema",slug:"defaulttargetschema",normalizedTitle:"defaulttargetschema",charIndex:1556},{level:3,title:"defaultTargetSchemaSelectPermission",slug:"defaulttargetschemaselectpermission",normalizedTitle:"defaulttargetschemaselectpermission",charIndex:1778},{level:3,title:"dockerOptions",slug:"dockeroptions",normalizedTitle:"dockeroptions",charIndex:1960},{level:3,title:"env",slug:"env",normalizedTitle:"env",charIndex:2074},{level:3,title:"exitOnFailed",slug:"exitonfailed",normalizedTitle:"exitonfailed",charIndex:2214},{level:3,title:"files",slug:"files",normalizedTitle:"files",charIndex:2556},{level:3,title:"flushAllStreams",slug:"flushallstreams",normalizedTitle:"flushallstreams",charIndex:2744},{level:3,title:"hardDelete",slug:"harddelete",normalizedTitle:"harddelete",charIndex:2984},{level:3,title:"host",slug:"host",normalizedTitle:"host",charIndex:3435},{level:3,title:"inputFiles",slug:"inputfiles",normalizedTitle:"inputfiles",charIndex:3534},{level:3,title:"interpreter",slug:"interpreter",normalizedTitle:"interpreter",charIndex:3929},{level:3,title:"interpreterArgs",slug:"interpreterargs",normalizedTitle:"interpreterargs",charIndex:4052},{level:3,title:"maxParallelism",slug:"maxparallelism",normalizedTitle:"maxparallelism",charIndex:4178},{level:3,title:"outputFiles",slug:"outputfiles",normalizedTitle:"outputfiles",charIndex:2711},{level:3,title:"outputsFiles",slug:"outputsfiles",normalizedTitle:"outputsfiles",charIndex:4754},{level:3,title:"parallelism",slug:"parallelism",normalizedTitle:"parallelism",charIndex:4893},{level:3,title:"password",slug:"password",normalizedTitle:"password",charIndex:5209},{level:3,title:"port",slug:"port",normalizedTitle:"port",charIndex:5301},{level:3,title:"primaryKeyRequired",slug:"primarykeyrequired",normalizedTitle:"primarykeyrequired",charIndex:5379},{level:3,title:"pythonPath",slug:"pythonpath",normalizedTitle:"pythonpath",charIndex:5650},{level:3,title:"requirements",slug:"requirements",normalizedTitle:"requirements",charIndex:5822},{level:3,title:"runner",slug:"runner",normalizedTitle:"runner",charIndex:2056},{level:3,title:"tap",slug:"tap",normalizedTitle:"tap",charIndex:814},{level:3,title:"username",slug:"username",normalizedTitle:"username",charIndex:6294},{level:3,title:"validateRecords",slug:"validaterecords",normalizedTitle:"validaterecords",charIndex:6393},{level:3,title:"warningOnStdErr",slug:"warningonstderr",normalizedTitle:"warningonstderr",charIndex:6756},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:6884},{level:3,title:"state",slug:"state",normalizedTitle:"state",charIndex:2384},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:6948},{level:3,title:"AbstractPythonTap-2",slug:"abstractpythontap-2",normalizedTitle:"abstractpythontap-2",charIndex:6240},{level:3,title:"AbstractPythonTap-1",slug:"abstractpythontap-1",normalizedTitle:"abstractpythontap-1",charIndex:6988},{level:3,title:"DockerOptions",slug:"dockeroptions-3",normalizedTitle:"dockeroptions",charIndex:1984},{level:3,title:"StreamsConfiguration",slug:"streamsconfiguration",normalizedTitle:"streamsconfiguration",charIndex:14631}],headersStr:"Properties addMetadataColumns args batchSizeRows dataFlatteningMaxLevel dbName defaultTargetSchema defaultTargetSchemaSelectPermission dockerOptions env exitOnFailed files flushAllStreams hardDelete host inputFiles interpreter interpreterArgs maxParallelism outputFiles outputsFiles parallelism password port primaryKeyRequired pythonPath requirements runner tap username validateRecords warningOnStdErr Outputs state Definitions AbstractPythonTap-2 AbstractPythonTap-1 DockerOptions StreamsConfiguration",content:"PipelinewisePostgres\n\ntype: \"io.kestra.plugin.singer.targets.PipelinewisePostgres\"\n\n\n> A Singer target loads data into a Postgres database.\n\nFull documentation can be found here\n\n\n# Properties\n\n\n# addMetadataColumns\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n * Default: false\n\n> Add singer Metadata columns.\n\nMetadata columns add extra row level information about data ingestions, (i.e. when was the row read in source, when was inserted or deleted in postgres etc.) Metadata columns are creating automatically by adding extra columns to the tables with a column prefix _SDC_. The column names are following the stitch naming conventions. Enabling metadata columns will flag the deleted rows by setting the _SDC_DELETED_AT metadata column. Without the add_metadata_columns option the deleted rows from singer taps will not be recognisable in Postgres.\n\n\n# args\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Python command args\n\nArguments list to pass to main python script\n\n\n# batchSizeRows\n\n * Type: integer\n * Dynamic: ❌\n * Required: ❌\n * Default: 100000\n\n> Maximum number of rows in each batch.\n\nAt the end of each batch, the rows in the batch are loaded into Postgres.\n\n\n# dataFlatteningMaxLevel\n\n * Type: integer\n * Dynamic: ❌\n * Required: ❌\n * Default: 0\n\n> Object type RECORD items from taps can be transformed to flattened columns by creating columns automatically.\n\nWhen value is 0 (default) then flattening functionality is turned off.\n\n\n# dbName\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The database name\n\n\n# defaultTargetSchema\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Name of the schema where the tables will be created.\n\nIf schemaMapping is not defined then every stream sent by the tap is loaded into this schema.\n\n\n# defaultTargetSchemaSelectPermission\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Grant USAGE privilege on newly created schemas and grant SELECT privilege on newly created.\n\n\n# dockerOptions\n\n * Type: DockerOptions\n * Dynamic: ❓\n * Required: ❌\n\n> Docker options when using runner DOCKER\n\n\n# env\n\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Additional environnements variable to add for current process.\n\n\n# exitOnFailed\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Exit if any non true return value\n\nThis tells bash that it should exit the script if any statement returns a non-true return value.\nThe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n\n# files\n\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The list of files that will be uploaded to internal storage,\n\nuse outputFiles property instead\n\n\n# flushAllStreams\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n * Default: false\n\n> Flush and load every stream into Postgres when one batch is full.\n\nWarning: This may trigger the COPY command to use files with low number of records..\n\n\n# hardDelete\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n * Default: false\n\n> Delete rows on Postgres.\n\nWhen hard_delete option is true then DELETE SQL commands will be performed in Postgres to delete rows in tables. It's achieved by continuously checking the _SDC_DELETED_AT metadata column sent by the singer tap. Due to deleting rows requires metadata columns, hard_delete option automatically enables the add_metadata_columns option as well.\n\n\n# host\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> The database hostname\n\n\n# inputFiles\n\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Input files are extra files supplied by user that make it simpler organize code.\n\nDescribe a files map that will be written and usable in execution context. In python execution context is in a temp folder, for bash scripts, you can reach files using a workingDir variable like 'source {{workingDir}}/myfile.sh'\n\n\n# interpreter\n\n * Type: string\n * Dynamic: ❌\n * Required: ✔️\n * Default: /bin/sh\n * Min length: 1\n\n> Interpreter to used\n\n\n# interpreterArgs\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n * Default: [-c]\n\n> Interpreter args used\n\n\n# maxParallelism\n\n * Type: integer\n * Dynamic: ❌\n * Required: ❌\n * Default: 16\n\n> Max number of parallel threads to use when flushing tables.\n\n\n# outputFiles\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Output file list that will be uploaded to internal storage\n\nList of key that will generate temporary files.\nOn the command, just can use with special variable named outputFiles.key.\nIf you add a files with [\"first\"], you can use the special vars echo 1 >> {[ outputFiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n\n# outputsFiles\n\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Deprecated Output file\n\nuse outputFiles\n\n\n# parallelism\n\n * Type: integer\n * Dynamic: ❌\n * Required: ❌\n * Default: 0\n\n> The number of threads used to flush tables.\n\n0 will create a thread for each stream, up to parallelism_max. -1 will create a thread for each CPU core. Any other positive number will create that number of threads, up to parallelism_max.\n\n\n# password\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The database user's password\n\n\n# port\n\n * Type: integer\n * Dynamic: ❌\n * Required: ✔️\n\n> The database port\n\n\n# primaryKeyRequired\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n * Default: true\n\n> Log based and Incremental replications on tables with no Primary Key cause duplicates when merging UPDATE events.\n\nWhen set to true, stop loading data if no Primary Key is defined.\n\n\n# pythonPath\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Default: python\n * Min length: 1\n\n> The python interpreter to use\n\nSet the python interpreter path to use\n\n\n# requirements\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Requirements are python dependencies to add to the python execution process\n\nPython dependencies list to setup in the virtualenv, in the same format than requirements.txt\n\n\n# runner\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ✔️\n\n * Default: PROCESS\n\n * Possible Values:\n   \n   * PROCESS\n   * DOCKER\n\n> Runner to use\n\n\n# tap\n\n * Type: AbstractPythonTap-2\n * Dynamic: ❓\n * Required: ✔️\n\n\n# username\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> The database user\n\n\n# validateRecords\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n * Default: false\n\n> Validate every single record message to the corresponding JSON schema.\n\nThis option is disabled by default and invalid RECORD messages will fail only at load time by Postgres. Enabling this option will detect invalid records earlier but could cause performance degradation..\n\n\n# warningOnStdErr\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Use WARNING state if any stdErr is sent\n\n\n# Outputs\n\n\n# state\n\n * Type: string\n\n> Uri of the state file\n\n\n# Definitions\n\n\n# AbstractPythonTap-2\n\n\n# AbstractPythonTap-1\n\n# args\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Python command args\n\nArguments list to pass to main python script\n\n# dockerOptions\n\n * Type: DockerOptions\n * Dynamic: ❓\n * Required: ❌\n\n> Docker options when using runner DOCKER\n\nWith this Python task, we can execute a full python script.\nThe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nBy convention, you need to define at least a main.py files in inputFiles that will be the script used.\nBut you are also able to add as many script as you need in inputFiles.\n\nYou can also add a pip.conf in inputFiles to customize the pip download of dependencies (like a private registry).\n\nYou can send outputs & metrics from your python script that can be used by others tasks. In order to help, we inject a python package directly on the working dir.Here is an example usage:\n\nfrom kestra import Kestra\nKestra.outputs({'test': 'value', 'int': 2, 'bool': True, 'float': 3.65})\nKestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nKestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nKestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n# env\n\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Additional environnements variable to add for current process.\n\nWith this Python task, we can execute a full python script.\nThe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nBy convention, you need to define at least a main.py files in inputFiles that will be the script used.\nBut you are also able to add as many script as you need in inputFiles.\n\nYou can also add a pip.conf in inputFiles to customize the pip download of dependencies (like a private registry).\n\nYou can send outputs & metrics from your python script that can be used by others tasks. In order to help, we inject a python package directly on the working dir.Here is an example usage:\n\nfrom kestra import Kestra\nKestra.outputs({'test': 'value', 'int': 2, 'bool': True, 'float': 3.65})\nKestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nKestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nKestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n# exitOnFailed\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Exit if any non true return value\n\nThis tells bash that it should exit the script if any statement returns a non-true return value.\nThe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n# files\n\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The list of files that will be uploaded to internal storage,\n\nuse outputFiles property instead\n\n# inputFiles\n\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Input files are extra files supplied by user that make it simpler organize code.\n\nDescribe a files map that will be written and usable in execution context. In python execution context is in a temp folder, for bash scripts, you can reach files using a workingDir variable like 'source {{workingDir}}/myfile.sh'\n\n# interpreter\n\n * Type: string\n * Dynamic: ❌\n * Required: ✔️\n * Default: /bin/sh\n * Min length: 1\n\n> Interpreter to used\n\nWith this Python task, we can execute a full python script.\nThe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nBy convention, you need to define at least a main.py files in inputFiles that will be the script used.\nBut you are also able to add as many script as you need in inputFiles.\n\nYou can also add a pip.conf in inputFiles to customize the pip download of dependencies (like a private registry).\n\nYou can send outputs & metrics from your python script that can be used by others tasks. In order to help, we inject a python package directly on the working dir.Here is an example usage:\n\nfrom kestra import Kestra\nKestra.outputs({'test': 'value', 'int': 2, 'bool': True, 'float': 3.65})\nKestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nKestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nKestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n# interpreterArgs\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n * Default: [-c]\n\n> Interpreter args used\n\nWith this Python task, we can execute a full python script.\nThe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nBy convention, you need to define at least a main.py files in inputFiles that will be the script used.\nBut you are also able to add as many script as you need in inputFiles.\n\nYou can also add a pip.conf in inputFiles to customize the pip download of dependencies (like a private registry).\n\nYou can send outputs & metrics from your python script that can be used by others tasks. In order to help, we inject a python package directly on the working dir.Here is an example usage:\n\nfrom kestra import Kestra\nKestra.outputs({'test': 'value', 'int': 2, 'bool': True, 'float': 3.65})\nKestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nKestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nKestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n# outputFiles\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Output file list that will be uploaded to internal storage\n\nList of key that will generate temporary files.\nOn the command, just can use with special variable named outputFiles.key.\nIf you add a files with [\"first\"], you can use the special vars echo 1 >> {[ outputFiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n# outputsFiles\n\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Deprecated Output file\n\nuse outputFiles\n\n# pythonPath\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Default: python\n * Min length: 1\n\n> The python interpreter to use\n\nSet the python interpreter path to use\n\n# requirements\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Requirements are python dependencies to add to the python execution process\n\nPython dependencies list to setup in the virtualenv, in the same format than requirements.txt\n\n# runner\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ✔️\n\n * Default: PROCESS\n\n * Possible Values:\n   \n   * PROCESS\n   * DOCKER\n\n> Runner to use\n\nWith this Python task, we can execute a full python script.\nThe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nBy convention, you need to define at least a main.py files in inputFiles that will be the script used.\nBut you are also able to add as many script as you need in inputFiles.\n\nYou can also add a pip.conf in inputFiles to customize the pip download of dependencies (like a private registry).\n\nYou can send outputs & metrics from your python script that can be used by others tasks. In order to help, we inject a python package directly on the working dir.Here is an example usage:\n\nfrom kestra import Kestra\nKestra.outputs({'test': 'value', 'int': 2, 'bool': True, 'float': 3.65})\nKestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nKestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nKestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n# streamsConfigurations\n\n * Type: array\n * SubType: StreamsConfiguration\n * Dynamic: ❌\n * Required: ✔️\n * Min items: 1\n\n> The list of stream configurations\n\nWith this Python task, we can execute a full python script.\nThe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nBy convention, you need to define at least a main.py files in inputFiles that will be the script used.\nBut you are also able to add as many script as you need in inputFiles.\n\nYou can also add a pip.conf in inputFiles to customize the pip download of dependencies (like a private registry).\n\nYou can send outputs & metrics from your python script that can be used by others tasks. In order to help, we inject a python package directly on the working dir.Here is an example usage:\n\nfrom kestra import Kestra\nKestra.outputs({'test': 'value', 'int': 2, 'bool': True, 'float': 3.65})\nKestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nKestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nKestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n# warningOnStdErr\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Use WARNING state if any stdErr is sent\n\nWith this Python task, we can execute a full python script.\nThe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nBy convention, you need to define at least a main.py files in inputFiles that will be the script used.\nBut you are also able to add as many script as you need in inputFiles.\n\nYou can also add a pip.conf in inputFiles to customize the pip download of dependencies (like a private registry).\n\nYou can send outputs & metrics from your python script that can be used by others tasks. In order to help, we inject a python package directly on the working dir.Here is an example usage:\n\nfrom kestra import Kestra\nKestra.outputs({'test': 'value', 'int': 2, 'bool': True, 'float': 3.65})\nKestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nKestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nKestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n\n# DockerOptions\n\n# dockerConfig\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker config file\n\nFull file that can be used to configure private registries, ...\n\n# dockerHost\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: unix:///var/run/docker.sock\n\n> Docker api uri\n\n# entryPoint\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker entrypoint to use\n\n# extraHosts\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker extra host to use\n\n# image\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> Docker image to use\n\n# user\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker user to use\n\n\n# StreamsConfiguration\n\n# propertiesPattern\n\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n\n# replicationKeys\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# replicationMethod\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Possible Values:\n   \n   * FULL_TABLE\n   * INCREMENTAL\n   * LOG_BASED\n\n# selected\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: true\n\n# stream\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌",normalizedContent:"pipelinewisepostgres\n\ntype: \"io.kestra.plugin.singer.targets.pipelinewisepostgres\"\n\n\n> a singer target loads data into a postgres database.\n\nfull documentation can be found here\n\n\n# properties\n\n\n# addmetadatacolumns\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n * default: false\n\n> add singer metadata columns.\n\nmetadata columns add extra row level information about data ingestions, (i.e. when was the row read in source, when was inserted or deleted in postgres etc.) metadata columns are creating automatically by adding extra columns to the tables with a column prefix _sdc_. the column names are following the stitch naming conventions. enabling metadata columns will flag the deleted rows by setting the _sdc_deleted_at metadata column. without the add_metadata_columns option the deleted rows from singer taps will not be recognisable in postgres.\n\n\n# args\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> python command args\n\narguments list to pass to main python script\n\n\n# batchsizerows\n\n * type: integer\n * dynamic: ❌\n * required: ❌\n * default: 100000\n\n> maximum number of rows in each batch.\n\nat the end of each batch, the rows in the batch are loaded into postgres.\n\n\n# dataflatteningmaxlevel\n\n * type: integer\n * dynamic: ❌\n * required: ❌\n * default: 0\n\n> object type record items from taps can be transformed to flattened columns by creating columns automatically.\n\nwhen value is 0 (default) then flattening functionality is turned off.\n\n\n# dbname\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the database name\n\n\n# defaulttargetschema\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> name of the schema where the tables will be created.\n\nif schemamapping is not defined then every stream sent by the tap is loaded into this schema.\n\n\n# defaulttargetschemaselectpermission\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> grant usage privilege on newly created schemas and grant select privilege on newly created.\n\n\n# dockeroptions\n\n * type: dockeroptions\n * dynamic: ❓\n * required: ❌\n\n> docker options when using runner docker\n\n\n# env\n\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> additional environnements variable to add for current process.\n\n\n# exitonfailed\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> exit if any non true return value\n\nthis tells bash that it should exit the script if any statement returns a non-true return value.\nthe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n\n# files\n\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> the list of files that will be uploaded to internal storage,\n\nuse outputfiles property instead\n\n\n# flushallstreams\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n * default: false\n\n> flush and load every stream into postgres when one batch is full.\n\nwarning: this may trigger the copy command to use files with low number of records..\n\n\n# harddelete\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n * default: false\n\n> delete rows on postgres.\n\nwhen hard_delete option is true then delete sql commands will be performed in postgres to delete rows in tables. it's achieved by continuously checking the _sdc_deleted_at metadata column sent by the singer tap. due to deleting rows requires metadata columns, hard_delete option automatically enables the add_metadata_columns option as well.\n\n\n# host\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> the database hostname\n\n\n# inputfiles\n\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> input files are extra files supplied by user that make it simpler organize code.\n\ndescribe a files map that will be written and usable in execution context. in python execution context is in a temp folder, for bash scripts, you can reach files using a workingdir variable like 'source {{workingdir}}/myfile.sh'\n\n\n# interpreter\n\n * type: string\n * dynamic: ❌\n * required: ✔️\n * default: /bin/sh\n * min length: 1\n\n> interpreter to used\n\n\n# interpreterargs\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n * default: [-c]\n\n> interpreter args used\n\n\n# maxparallelism\n\n * type: integer\n * dynamic: ❌\n * required: ❌\n * default: 16\n\n> max number of parallel threads to use when flushing tables.\n\n\n# outputfiles\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> output file list that will be uploaded to internal storage\n\nlist of key that will generate temporary files.\non the command, just can use with special variable named outputfiles.key.\nif you add a files with [\"first\"], you can use the special vars echo 1 >> {[ outputfiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n\n# outputsfiles\n\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> deprecated output file\n\nuse outputfiles\n\n\n# parallelism\n\n * type: integer\n * dynamic: ❌\n * required: ❌\n * default: 0\n\n> the number of threads used to flush tables.\n\n0 will create a thread for each stream, up to parallelism_max. -1 will create a thread for each cpu core. any other positive number will create that number of threads, up to parallelism_max.\n\n\n# password\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the database user's password\n\n\n# port\n\n * type: integer\n * dynamic: ❌\n * required: ✔️\n\n> the database port\n\n\n# primarykeyrequired\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n * default: true\n\n> log based and incremental replications on tables with no primary key cause duplicates when merging update events.\n\nwhen set to true, stop loading data if no primary key is defined.\n\n\n# pythonpath\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * default: python\n * min length: 1\n\n> the python interpreter to use\n\nset the python interpreter path to use\n\n\n# requirements\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> requirements are python dependencies to add to the python execution process\n\npython dependencies list to setup in the virtualenv, in the same format than requirements.txt\n\n\n# runner\n\n * type: string\n\n * dynamic: ❌\n\n * required: ✔️\n\n * default: process\n\n * possible values:\n   \n   * process\n   * docker\n\n> runner to use\n\n\n# tap\n\n * type: abstractpythontap-2\n * dynamic: ❓\n * required: ✔️\n\n\n# username\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> the database user\n\n\n# validaterecords\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n * default: false\n\n> validate every single record message to the corresponding json schema.\n\nthis option is disabled by default and invalid record messages will fail only at load time by postgres. enabling this option will detect invalid records earlier but could cause performance degradation..\n\n\n# warningonstderr\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> use warning state if any stderr is sent\n\n\n# outputs\n\n\n# state\n\n * type: string\n\n> uri of the state file\n\n\n# definitions\n\n\n# abstractpythontap-2\n\n\n# abstractpythontap-1\n\n# args\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> python command args\n\narguments list to pass to main python script\n\n# dockeroptions\n\n * type: dockeroptions\n * dynamic: ❓\n * required: ❌\n\n> docker options when using runner docker\n\nwith this python task, we can execute a full python script.\nthe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nby convention, you need to define at least a main.py files in inputfiles that will be the script used.\nbut you are also able to add as many script as you need in inputfiles.\n\nyou can also add a pip.conf in inputfiles to customize the pip download of dependencies (like a private registry).\n\nyou can send outputs & metrics from your python script that can be used by others tasks. in order to help, we inject a python package directly on the working dir.here is an example usage:\n\nfrom kestra import kestra\nkestra.outputs({'test': 'value', 'int': 2, 'bool': true, 'float': 3.65})\nkestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nkestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nkestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n# env\n\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> additional environnements variable to add for current process.\n\nwith this python task, we can execute a full python script.\nthe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nby convention, you need to define at least a main.py files in inputfiles that will be the script used.\nbut you are also able to add as many script as you need in inputfiles.\n\nyou can also add a pip.conf in inputfiles to customize the pip download of dependencies (like a private registry).\n\nyou can send outputs & metrics from your python script that can be used by others tasks. in order to help, we inject a python package directly on the working dir.here is an example usage:\n\nfrom kestra import kestra\nkestra.outputs({'test': 'value', 'int': 2, 'bool': true, 'float': 3.65})\nkestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nkestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nkestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n# exitonfailed\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> exit if any non true return value\n\nthis tells bash that it should exit the script if any statement returns a non-true return value.\nthe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n# files\n\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> the list of files that will be uploaded to internal storage,\n\nuse outputfiles property instead\n\n# inputfiles\n\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> input files are extra files supplied by user that make it simpler organize code.\n\ndescribe a files map that will be written and usable in execution context. in python execution context is in a temp folder, for bash scripts, you can reach files using a workingdir variable like 'source {{workingdir}}/myfile.sh'\n\n# interpreter\n\n * type: string\n * dynamic: ❌\n * required: ✔️\n * default: /bin/sh\n * min length: 1\n\n> interpreter to used\n\nwith this python task, we can execute a full python script.\nthe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nby convention, you need to define at least a main.py files in inputfiles that will be the script used.\nbut you are also able to add as many script as you need in inputfiles.\n\nyou can also add a pip.conf in inputfiles to customize the pip download of dependencies (like a private registry).\n\nyou can send outputs & metrics from your python script that can be used by others tasks. in order to help, we inject a python package directly on the working dir.here is an example usage:\n\nfrom kestra import kestra\nkestra.outputs({'test': 'value', 'int': 2, 'bool': true, 'float': 3.65})\nkestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nkestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nkestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n# interpreterargs\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n * default: [-c]\n\n> interpreter args used\n\nwith this python task, we can execute a full python script.\nthe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nby convention, you need to define at least a main.py files in inputfiles that will be the script used.\nbut you are also able to add as many script as you need in inputfiles.\n\nyou can also add a pip.conf in inputfiles to customize the pip download of dependencies (like a private registry).\n\nyou can send outputs & metrics from your python script that can be used by others tasks. in order to help, we inject a python package directly on the working dir.here is an example usage:\n\nfrom kestra import kestra\nkestra.outputs({'test': 'value', 'int': 2, 'bool': true, 'float': 3.65})\nkestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nkestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nkestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n# outputfiles\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> output file list that will be uploaded to internal storage\n\nlist of key that will generate temporary files.\non the command, just can use with special variable named outputfiles.key.\nif you add a files with [\"first\"], you can use the special vars echo 1 >> {[ outputfiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n# outputsfiles\n\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> deprecated output file\n\nuse outputfiles\n\n# pythonpath\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * default: python\n * min length: 1\n\n> the python interpreter to use\n\nset the python interpreter path to use\n\n# requirements\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> requirements are python dependencies to add to the python execution process\n\npython dependencies list to setup in the virtualenv, in the same format than requirements.txt\n\n# runner\n\n * type: string\n\n * dynamic: ❌\n\n * required: ✔️\n\n * default: process\n\n * possible values:\n   \n   * process\n   * docker\n\n> runner to use\n\nwith this python task, we can execute a full python script.\nthe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nby convention, you need to define at least a main.py files in inputfiles that will be the script used.\nbut you are also able to add as many script as you need in inputfiles.\n\nyou can also add a pip.conf in inputfiles to customize the pip download of dependencies (like a private registry).\n\nyou can send outputs & metrics from your python script that can be used by others tasks. in order to help, we inject a python package directly on the working dir.here is an example usage:\n\nfrom kestra import kestra\nkestra.outputs({'test': 'value', 'int': 2, 'bool': true, 'float': 3.65})\nkestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nkestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nkestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n# streamsconfigurations\n\n * type: array\n * subtype: streamsconfiguration\n * dynamic: ❌\n * required: ✔️\n * min items: 1\n\n> the list of stream configurations\n\nwith this python task, we can execute a full python script.\nthe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nby convention, you need to define at least a main.py files in inputfiles that will be the script used.\nbut you are also able to add as many script as you need in inputfiles.\n\nyou can also add a pip.conf in inputfiles to customize the pip download of dependencies (like a private registry).\n\nyou can send outputs & metrics from your python script that can be used by others tasks. in order to help, we inject a python package directly on the working dir.here is an example usage:\n\nfrom kestra import kestra\nkestra.outputs({'test': 'value', 'int': 2, 'bool': true, 'float': 3.65})\nkestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nkestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nkestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n# warningonstderr\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> use warning state if any stderr is sent\n\nwith this python task, we can execute a full python script.\nthe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nby convention, you need to define at least a main.py files in inputfiles that will be the script used.\nbut you are also able to add as many script as you need in inputfiles.\n\nyou can also add a pip.conf in inputfiles to customize the pip download of dependencies (like a private registry).\n\nyou can send outputs & metrics from your python script that can be used by others tasks. in order to help, we inject a python package directly on the working dir.here is an example usage:\n\nfrom kestra import kestra\nkestra.outputs({'test': 'value', 'int': 2, 'bool': true, 'float': 3.65})\nkestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nkestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nkestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n\n# dockeroptions\n\n# dockerconfig\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> docker config file\n\nfull file that can be used to configure private registries, ...\n\n# dockerhost\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n * default: unix:///var/run/docker.sock\n\n> docker api uri\n\n# entrypoint\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> docker entrypoint to use\n\n# extrahosts\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> docker extra host to use\n\n# image\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> docker image to use\n\n# user\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> docker user to use\n\n\n# streamsconfiguration\n\n# propertiespattern\n\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n\n# replicationkeys\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# replicationmethod\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * possible values:\n   \n   * full_table\n   * incremental\n   * log_based\n\n# selected\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: true\n\n# stream\n\n * type: string\n * dynamic: ❓\n * required: ❌",charsets:{}},{title:"PipelinewiseRedshift",frontmatter:{title:"PipelinewiseRedshift",editLink:!1,description:"A Singer target loads data into a Redshift database.",icon:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB2aWV3Qm94PSIwIDAgNzkuNjg4IDg1IiBmaWxsPSIjZmZmIiBmaWxsLXJ1bGU9ImV2ZW5vZGQiIHN0cm9rZT0iIzAwMCIgc3Ryb2tlLWxpbmVjYXA9InJvdW5kIiBzdHJva2UtbGluZWpvaW49InJvdW5kIj48dXNlIHhsaW5rOmhyZWY9IiNBIiB4PSIyLjM0NCIgeT0iMi41Ii8+PHN5bWJvbCBpZD0iQSIgb3ZlcmZsb3c9InZpc2libGUiPjxnIHN0cm9rZT0ibm9uZSI+PHBhdGggZD0iTTY4Ljc0NCAxMS4yODNMNzUgMTQuMjF2NTEuNDIxbC02LjI1NiAyLjkzOEw1OC44NDMgNDBsOS45LTI4LjcxN3oiIGZpbGw9IiM1Mjk0Y2YiLz48cGF0aCBkPSJNNi4yNDUgMTEuMjgzTDAgMTQuMjF2NTEuNDIxbDYuMjQ1IDIuOTM4TDIxLjg3NSA0MCA2LjI0NSAxMS4yODN6bTMxLjI1IDQ5Ljg4OGwzMS4yNDkgNy4zNzZWMTEuMjgzbC0zMS4yNDkgNy4zNzZ2NDIuNTEyeiIgZmlsbD0iIzIwNWI5OSIvPjxnIGZpbGw9IiM1Mjk0Y2YiPjxwYXRoIGQ9Ik0zNy40OTQgNjEuMTcxTDYuMjQ1IDY4LjU0OFYxMS4yODNsMzEuMjQ5IDcuMzc2djQyLjUxMnoiLz48cGF0aCBkPSJNNDQuOTkxIDgwbDExLjk1My01Ljc4VjUuNzhMNDQuOTkxIDAgMzMuMTI2IDM4LjA0MiA0NC45OTEgODB6Ii8+PC9nPjxwYXRoIGQ9Ik0yOS45OTggODBsLTExLjk0Mi01Ljc4VjUuNzhMMjkuOTk4IDBsMTAuNjI1IDQwLTEwLjYyNSA0MHoiIGZpbGw9IiMyMDViOTkiLz48cGF0aCBkPSJNMjkuOTk4IDBoMTUuMDA0djgwSDI5Ljk5OHoiIGZpbGw9IiMyZTczYjgiLz48L2c+PC9zeW1ib2w+PC9zdmc+",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"PipelinewiseRedshift"},{property:"og:description",content:"A Singer target loads data into a Redshift database. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-singer/tasks/targets/io.kestra.plugin.singer.targets.PipelinewiseRedshift.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"PipelinewiseRedshift"},{name:"twitter:description",content:"A Singer target loads data into a Redshift database. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-singer/tasks/targets/io.kestra.plugin.singer.targets.PipelinewiseRedshift.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-singer/tasks/targets/io.kestra.plugin.singer.targets.PipelinewiseRedshift.html",relativePath:"plugins/plugin-singer/tasks/targets/io.kestra.plugin.singer.targets.PipelinewiseRedshift.md",key:"v-7e28e877",path:"/plugins/plugin-singer/tasks/targets/io.kestra.plugin.singer.targets.PipelinewiseRedshift.html",headers:[{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:182},{level:3,title:"accessKeyId",slug:"accesskeyid",normalizedTitle:"accesskeyid",charIndex:197},{level:3,title:"addMetadataColumns",slug:"addmetadatacolumns",normalizedTitle:"addmetadatacolumns",charIndex:324},{level:3,title:"args",slug:"args",normalizedTitle:"args",charIndex:960},{level:3,title:"batchSizeRows",slug:"batchsizerows",normalizedTitle:"batchsizerows",charIndex:1103},{level:3,title:"compression",slug:"compression",normalizedTitle:"compression",charIndex:1303},{level:3,title:"copyOptions",slug:"copyoptions",normalizedTitle:"copyoptions",charIndex:1517},{level:3,title:"dataFlatteningMaxLevel",slug:"dataflatteningmaxlevel",normalizedTitle:"dataflatteningmaxlevel",charIndex:1835},{level:3,title:"dbName",slug:"dbname",normalizedTitle:"dbname",charIndex:2376},{level:3,title:"defaultTargetSchema",slug:"defaulttargetschema",normalizedTitle:"defaulttargetschema",charIndex:2455},{level:3,title:"defaultTargetSchemaSelectPermissions",slug:"defaulttargetschemaselectpermissions",normalizedTitle:"defaulttargetschemaselectpermissions",charIndex:2696},{level:3,title:"disableTableCache",slug:"disabletablecache",normalizedTitle:"disabletablecache",charIndex:3015},{level:3,title:"dockerOptions",slug:"dockeroptions",normalizedTitle:"dockeroptions",charIndex:3495},{level:3,title:"env",slug:"env",normalizedTitle:"env",charIndex:3609},{level:3,title:"exitOnFailed",slug:"exitonfailed",normalizedTitle:"exitonfailed",charIndex:3749},{level:3,title:"files",slug:"files",normalizedTitle:"files",charIndex:1474},{level:3,title:"flushAllStreams",slug:"flushallstreams",normalizedTitle:"flushallstreams",charIndex:4279},{level:3,title:"hardDelete",slug:"harddelete",normalizedTitle:"harddelete",charIndex:2038},{level:3,title:"host",slug:"host",normalizedTitle:"host",charIndex:4966},{level:3,title:"inputFiles",slug:"inputfiles",normalizedTitle:"inputfiles",charIndex:5065},{level:3,title:"interpreter",slug:"interpreter",normalizedTitle:"interpreter",charIndex:5460},{level:3,title:"interpreterArgs",slug:"interpreterargs",normalizedTitle:"interpreterargs",charIndex:5583},{level:3,title:"maxParallelism",slug:"maxparallelism",normalizedTitle:"maxparallelism",charIndex:5709},{level:3,title:"outputFiles",slug:"outputfiles",normalizedTitle:"outputfiles",charIndex:4246},{level:3,title:"outputsFiles",slug:"outputsfiles",normalizedTitle:"outputsfiles",charIndex:6285},{level:3,title:"parallelism",slug:"parallelism",normalizedTitle:"parallelism",charIndex:6424},{level:3,title:"password",slug:"password",normalizedTitle:"password",charIndex:6740},{level:3,title:"port",slug:"port",normalizedTitle:"port",charIndex:6832},{level:3,title:"primaryKeyRequired",slug:"primarykeyrequired",normalizedTitle:"primarykeyrequired",charIndex:6910},{level:3,title:"pythonPath",slug:"pythonpath",normalizedTitle:"pythonpath",charIndex:7182},{level:3,title:"redshiftCopyRoleArn",slug:"redshiftcopyrolearn",normalizedTitle:"redshiftcopyrolearn",charIndex:7354},{level:3,title:"requirements",slug:"requirements",normalizedTitle:"requirements",charIndex:7635},{level:3,title:"runner",slug:"runner",normalizedTitle:"runner",charIndex:3591},{level:3,title:"s3Acl",slug:"s3acl",normalizedTitle:"s3acl",charIndex:8039},{level:3,title:"s3Bucket",slug:"s3bucket",normalizedTitle:"s3bucket",charIndex:8127},{level:3,title:"s3KeyPrefix",slug:"s3keyprefix",normalizedTitle:"s3keyprefix",charIndex:8227},{level:3,title:"schema_mapping",slug:"schema-mapping",normalizedTitle:"schema_mapping",charIndex:2600},{level:3,title:"secretAccessKey",slug:"secretaccesskey",normalizedTitle:"secretaccesskey",charIndex:8995},{level:3,title:"sessionToken",slug:"sessiontoken",normalizedTitle:"sessiontoken",charIndex:9130},{level:3,title:"skipUpdates",slug:"skipupdates",normalizedTitle:"skipupdates",charIndex:9264},{level:3,title:"slices",slug:"slices",normalizedTitle:"slices",charIndex:9480},{level:3,title:"tap",slug:"tap",normalizedTitle:"tap",charIndex:913},{level:3,title:"username",slug:"username",normalizedTitle:"username",charIndex:9896},{level:3,title:"validateRecords",slug:"validaterecords",normalizedTitle:"validaterecords",charIndex:9995},{level:3,title:"warningOnStdErr",slug:"warningonstderr",normalizedTitle:"warningonstderr",charIndex:10358},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:10486},{level:3,title:"state",slug:"state",normalizedTitle:"state",charIndex:3919},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:10550},{level:3,title:"AbstractPythonTap-2",slug:"abstractpythontap-2",normalizedTitle:"abstractpythontap-2",charIndex:9842},{level:3,title:"AbstractPythonTap-1",slug:"abstractpythontap-1",normalizedTitle:"abstractpythontap-1",charIndex:10590},{level:3,title:"DockerOptions",slug:"dockeroptions-3",normalizedTitle:"dockeroptions",charIndex:3519},{level:3,title:"StreamsConfiguration",slug:"streamsconfiguration",normalizedTitle:"streamsconfiguration",charIndex:18233}],headersStr:"Properties accessKeyId addMetadataColumns args batchSizeRows compression copyOptions dataFlatteningMaxLevel dbName defaultTargetSchema defaultTargetSchemaSelectPermissions disableTableCache dockerOptions env exitOnFailed files flushAllStreams hardDelete host inputFiles interpreter interpreterArgs maxParallelism outputFiles outputsFiles parallelism password port primaryKeyRequired pythonPath redshiftCopyRoleArn requirements runner s3Acl s3Bucket s3KeyPrefix schema_mapping secretAccessKey sessionToken skipUpdates slices tap username validateRecords warningOnStdErr Outputs state Definitions AbstractPythonTap-2 AbstractPythonTap-1 DockerOptions StreamsConfiguration",content:"PipelinewiseRedshift\n\ntype: \"io.kestra.plugin.singer.targets.PipelinewiseRedshift\"\n\n\n> A Singer target loads data into a Redshift database.\n\nFull documentation can be found here\n\n\n# Properties\n\n\n# accessKeyId\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> S3 Access Key Id.\n\nUsed for S3 and Redshift copy operations.\n\n\n# addMetadataColumns\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n * Default: false\n\n> Add metadata columns.\n\nMetadata columns add extra row level information about data ingestions, (i.e. when was the row read in source, when was inserted or deleted in redshift etc.) Metadata columns are creating automatically by adding extra columns to the tables with a column prefix SDC. The metadata columns are documented at here. Enabling metadata columns will flag the deleted rows by setting the _SDC_DELETED_AT metadata column. Without the addMetadataColumns option the deleted rows from singer taps will not be recongisable in Redshift.\n\n\n# args\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Python command args\n\nArguments list to pass to main python script\n\n\n# batchSizeRows\n\n * Type: integer\n * Dynamic: ❌\n * Required: ❌\n * Default: 100000\n\n> Maximum number of rows in each batch.\n\nAt the end of each batch, the rows in the batch are loaded into Redshift.\n\n\n# compression\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ❌\n\n * Default: bzip2\n\n * Possible Values:\n   \n   * gzip\n   * bzip2\n\n> The compression method to use when writing files to S3 and running Redshift COPY.\n\n\n# copyOptions\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> COPY options.\n\nParameters to use in the COPY command when loading data to Redshift. Some basic file formatting parameters are fixed values and not recommended overriding them by custom values. They are like: CSV GZIP DELIMITER ',' REMOVEQUOTES ESCAPE.\n\n\n# dataFlatteningMaxLevel\n\n * Type: integer\n * Dynamic: ❌\n * Required: ❌\n * Default: 0\n\n> Object type RECORD items from taps can be transformed to flattened columns by creating columns automatically.\n\nWhen hardDelete option is true then DELETE SQL commands will be performed in Redshift to delete rows in tables. It's achieved by continuously checking the _SDC_DELETED_AT metadata column sent by the singer tap. Due to deleting rows requires metadata columns, hardDelete option automatically enables the addMetadataColumns option as well..\n\n\n# dbName\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The database name\n\n\n# defaultTargetSchema\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> Name of the schema where the tables will be created.\n\nIf schema_mapping is not defined then every stream sent by the tap is loaded into this schema.\n\n\n# defaultTargetSchemaSelectPermissions\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Grant USAGE privilege on newly created schemas and grant SELECT privilege on newly created tables to a specific list of users or groups.\n\nIf schemaMapping is not defined then every stream sent by the tap is granted accordingly.\n\n\n# disableTableCache\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n * Default: false\n\n> Disable table cache.\n\nBy default the connector caches the available table structures in Redshift at startup. In this way it doesn't need to run additional queries when ingesting data to check if altering the target tables is required. With disable_table_cache option you can turn off this caching. You will always see the most recent table structures but will cause an extra query runtime.\n\n\n# dockerOptions\n\n * Type: DockerOptions\n * Dynamic: ❓\n * Required: ❌\n\n> Docker options when using runner DOCKER\n\n\n# env\n\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Additional environnements variable to add for current process.\n\n\n# exitOnFailed\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Exit if any non true return value\n\nThis tells bash that it should exit the script if any statement returns a non-true return value.\nThe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n\n# files\n\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The list of files that will be uploaded to internal storage,\n\nuse outputFiles property instead\n\n\n# flushAllStreams\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n * Default: false\n\n> Flush and load every stream into Redshift when one batch is full.\n\nWarning: This may trigger the COPY command to use files with low number of records..\n\n\n# hardDelete\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n * Default: false\n\n> Delete rows on Redshift.\n\nWhen hardDelete option is true then DELETE SQL commands will be performed in Redshift to delete rows in tables. It's achieved by continuously checking the _SDC_DELETED_AT metadata column sent by the singer tap. Due to deleting rows requires metadata columns, hardDelete option automatically enables the addMetadataColumns option as well.\n\n\n# host\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> The database hostname\n\n\n# inputFiles\n\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Input files are extra files supplied by user that make it simpler organize code.\n\nDescribe a files map that will be written and usable in execution context. In python execution context is in a temp folder, for bash scripts, you can reach files using a workingDir variable like 'source {{workingDir}}/myfile.sh'\n\n\n# interpreter\n\n * Type: string\n * Dynamic: ❌\n * Required: ✔️\n * Default: /bin/sh\n * Min length: 1\n\n> Interpreter to used\n\n\n# interpreterArgs\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n * Default: [-c]\n\n> Interpreter args used\n\n\n# maxParallelism\n\n * Type: integer\n * Dynamic: ❌\n * Required: ❌\n * Default: 16\n\n> Max number of parallel threads to use when flushing tables.\n\n\n# outputFiles\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Output file list that will be uploaded to internal storage\n\nList of key that will generate temporary files.\nOn the command, just can use with special variable named outputFiles.key.\nIf you add a files with [\"first\"], you can use the special vars echo 1 >> {[ outputFiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n\n# outputsFiles\n\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Deprecated Output file\n\nuse outputFiles\n\n\n# parallelism\n\n * Type: integer\n * Dynamic: ❌\n * Required: ❌\n * Default: 0\n\n> The number of threads used to flush tables.\n\n0 will create a thread for each stream, up to parallelism_max. -1 will create a thread for each CPU core. Any other positive number will create that number of threads, up to parallelism_max.\n\n\n# password\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The database user's password\n\n\n# port\n\n * Type: integer\n * Dynamic: ❌\n * Required: ✔️\n\n> The database port\n\n\n# primaryKeyRequired\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n * Default: true\n\n> Log based and Incremental replications on tables with no Primary Key cause duplicates when merging UPDATE events.\n\nWhen set to true, stop loading data if no Primary Key is defined..\n\n\n# pythonPath\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Default: python\n * Min length: 1\n\n> The python interpreter to use\n\nSet the python interpreter path to use\n\n\n# redshiftCopyRoleArn\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> AWS Redshift COPY role ARN.\n\nAWS Role ARN to be used for the Redshift COPY operation. Used instead of the given AWS keys for the COPY operation if provided - the keys are still used for other S3 operations.\n\n\n# requirements\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Requirements are python dependencies to add to the python execution process\n\nPython dependencies list to setup in the virtualenv, in the same format than requirements.txt\n\n\n# runner\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ✔️\n\n * Default: PROCESS\n\n * Possible Values:\n   \n   * PROCESS\n   * DOCKER\n\n> Runner to use\n\n\n# s3Acl\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> AWS S3 ACL.\n\nS3 Object ACL.\n\n\n# s3Bucket\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> The S3 bucket name\n\n\n# s3KeyPrefix\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> S3 Key Prefix.\n\nA static prefix before the generated S3 key names. Using prefixes you can upload files into specific directories in the S3 bucket. Default(None).\n\n\n# schema_mapping\n\n * Type: string\n * Dynamic: ❌\n * Required: ❌\n\n> Schema mapping.\n\nUseful if you want to load multiple streams from one tap to multiple Redshift schemas. If the tap sends the stream_id in <schema_name>-<table_name> format then this option overwrites the default_target_schema value. Note, that using schema_mapping you can overwrite the default_target_schema_select_permissions value to grant SELECT permissions to different groups per schemas or optionally you can create indices automatically for the replicated tables.\n\n\n# secretAccessKey\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> S3 Secret Access Key.\n\nUsed for S3 and Redshift copy operations.\n\n\n# sessionToken\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> AWS S3 Session Token.\n\nS3 AWS STS token for temporary credentials.\n\n\n# skipUpdates\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n * Default: false\n\n> Do not update existing records when Primary Key is defined.\n\nUseful to improve performance when records are immutable, e.g. events.\n\n\n# slices\n\n * Type: integer\n * Dynamic: ❌\n * Required: ❌\n * Default: 1\n\n> number of slices to split files into prior to running COPY on Redshift.\n\nThis should be set to the number of Redshift slices. The number of slices per node depends on the node size of the cluster - run SELECT COUNT(DISTINCT slice) slices FROM stv_slices to calculate this.\n\n\n# tap\n\n * Type: AbstractPythonTap-2\n * Dynamic: ❓\n * Required: ✔️\n\n\n# username\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> The database user\n\n\n# validateRecords\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n * Default: false\n\n> Validate every single record message to the corresponding JSON schema.\n\nThis option is disabled by default and invalid RECORD messages will fail only at load time by Redshift. Enabling this option will detect invalid records earlier but could cause performance degradation..\n\n\n# warningOnStdErr\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Use WARNING state if any stdErr is sent\n\n\n# Outputs\n\n\n# state\n\n * Type: string\n\n> Uri of the state file\n\n\n# Definitions\n\n\n# AbstractPythonTap-2\n\n\n# AbstractPythonTap-1\n\n# args\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Python command args\n\nArguments list to pass to main python script\n\n# dockerOptions\n\n * Type: DockerOptions\n * Dynamic: ❓\n * Required: ❌\n\n> Docker options when using runner DOCKER\n\nWith this Python task, we can execute a full python script.\nThe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nBy convention, you need to define at least a main.py files in inputFiles that will be the script used.\nBut you are also able to add as many script as you need in inputFiles.\n\nYou can also add a pip.conf in inputFiles to customize the pip download of dependencies (like a private registry).\n\nYou can send outputs & metrics from your python script that can be used by others tasks. In order to help, we inject a python package directly on the working dir.Here is an example usage:\n\nfrom kestra import Kestra\nKestra.outputs({'test': 'value', 'int': 2, 'bool': True, 'float': 3.65})\nKestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nKestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nKestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n# env\n\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Additional environnements variable to add for current process.\n\nWith this Python task, we can execute a full python script.\nThe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nBy convention, you need to define at least a main.py files in inputFiles that will be the script used.\nBut you are also able to add as many script as you need in inputFiles.\n\nYou can also add a pip.conf in inputFiles to customize the pip download of dependencies (like a private registry).\n\nYou can send outputs & metrics from your python script that can be used by others tasks. In order to help, we inject a python package directly on the working dir.Here is an example usage:\n\nfrom kestra import Kestra\nKestra.outputs({'test': 'value', 'int': 2, 'bool': True, 'float': 3.65})\nKestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nKestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nKestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n# exitOnFailed\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Exit if any non true return value\n\nThis tells bash that it should exit the script if any statement returns a non-true return value.\nThe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n# files\n\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The list of files that will be uploaded to internal storage,\n\nuse outputFiles property instead\n\n# inputFiles\n\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Input files are extra files supplied by user that make it simpler organize code.\n\nDescribe a files map that will be written and usable in execution context. In python execution context is in a temp folder, for bash scripts, you can reach files using a workingDir variable like 'source {{workingDir}}/myfile.sh'\n\n# interpreter\n\n * Type: string\n * Dynamic: ❌\n * Required: ✔️\n * Default: /bin/sh\n * Min length: 1\n\n> Interpreter to used\n\nWith this Python task, we can execute a full python script.\nThe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nBy convention, you need to define at least a main.py files in inputFiles that will be the script used.\nBut you are also able to add as many script as you need in inputFiles.\n\nYou can also add a pip.conf in inputFiles to customize the pip download of dependencies (like a private registry).\n\nYou can send outputs & metrics from your python script that can be used by others tasks. In order to help, we inject a python package directly on the working dir.Here is an example usage:\n\nfrom kestra import Kestra\nKestra.outputs({'test': 'value', 'int': 2, 'bool': True, 'float': 3.65})\nKestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nKestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nKestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n# interpreterArgs\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n * Default: [-c]\n\n> Interpreter args used\n\nWith this Python task, we can execute a full python script.\nThe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nBy convention, you need to define at least a main.py files in inputFiles that will be the script used.\nBut you are also able to add as many script as you need in inputFiles.\n\nYou can also add a pip.conf in inputFiles to customize the pip download of dependencies (like a private registry).\n\nYou can send outputs & metrics from your python script that can be used by others tasks. In order to help, we inject a python package directly on the working dir.Here is an example usage:\n\nfrom kestra import Kestra\nKestra.outputs({'test': 'value', 'int': 2, 'bool': True, 'float': 3.65})\nKestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nKestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nKestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n# outputFiles\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Output file list that will be uploaded to internal storage\n\nList of key that will generate temporary files.\nOn the command, just can use with special variable named outputFiles.key.\nIf you add a files with [\"first\"], you can use the special vars echo 1 >> {[ outputFiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n# outputsFiles\n\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Deprecated Output file\n\nuse outputFiles\n\n# pythonPath\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Default: python\n * Min length: 1\n\n> The python interpreter to use\n\nSet the python interpreter path to use\n\n# requirements\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Requirements are python dependencies to add to the python execution process\n\nPython dependencies list to setup in the virtualenv, in the same format than requirements.txt\n\n# runner\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ✔️\n\n * Default: PROCESS\n\n * Possible Values:\n   \n   * PROCESS\n   * DOCKER\n\n> Runner to use\n\nWith this Python task, we can execute a full python script.\nThe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nBy convention, you need to define at least a main.py files in inputFiles that will be the script used.\nBut you are also able to add as many script as you need in inputFiles.\n\nYou can also add a pip.conf in inputFiles to customize the pip download of dependencies (like a private registry).\n\nYou can send outputs & metrics from your python script that can be used by others tasks. In order to help, we inject a python package directly on the working dir.Here is an example usage:\n\nfrom kestra import Kestra\nKestra.outputs({'test': 'value', 'int': 2, 'bool': True, 'float': 3.65})\nKestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nKestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nKestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n# streamsConfigurations\n\n * Type: array\n * SubType: StreamsConfiguration\n * Dynamic: ❌\n * Required: ✔️\n * Min items: 1\n\n> The list of stream configurations\n\nWith this Python task, we can execute a full python script.\nThe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nBy convention, you need to define at least a main.py files in inputFiles that will be the script used.\nBut you are also able to add as many script as you need in inputFiles.\n\nYou can also add a pip.conf in inputFiles to customize the pip download of dependencies (like a private registry).\n\nYou can send outputs & metrics from your python script that can be used by others tasks. In order to help, we inject a python package directly on the working dir.Here is an example usage:\n\nfrom kestra import Kestra\nKestra.outputs({'test': 'value', 'int': 2, 'bool': True, 'float': 3.65})\nKestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nKestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nKestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n# warningOnStdErr\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Use WARNING state if any stdErr is sent\n\nWith this Python task, we can execute a full python script.\nThe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nBy convention, you need to define at least a main.py files in inputFiles that will be the script used.\nBut you are also able to add as many script as you need in inputFiles.\n\nYou can also add a pip.conf in inputFiles to customize the pip download of dependencies (like a private registry).\n\nYou can send outputs & metrics from your python script that can be used by others tasks. In order to help, we inject a python package directly on the working dir.Here is an example usage:\n\nfrom kestra import Kestra\nKestra.outputs({'test': 'value', 'int': 2, 'bool': True, 'float': 3.65})\nKestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nKestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nKestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n\n# DockerOptions\n\n# dockerConfig\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker config file\n\nFull file that can be used to configure private registries, ...\n\n# dockerHost\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: unix:///var/run/docker.sock\n\n> Docker api uri\n\n# entryPoint\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker entrypoint to use\n\n# extraHosts\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker extra host to use\n\n# image\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> Docker image to use\n\n# user\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker user to use\n\n\n# StreamsConfiguration\n\n# propertiesPattern\n\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n\n# replicationKeys\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# replicationMethod\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Possible Values:\n   \n   * FULL_TABLE\n   * INCREMENTAL\n   * LOG_BASED\n\n# selected\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: true\n\n# stream\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌",normalizedContent:"pipelinewiseredshift\n\ntype: \"io.kestra.plugin.singer.targets.pipelinewiseredshift\"\n\n\n> a singer target loads data into a redshift database.\n\nfull documentation can be found here\n\n\n# properties\n\n\n# accesskeyid\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> s3 access key id.\n\nused for s3 and redshift copy operations.\n\n\n# addmetadatacolumns\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n * default: false\n\n> add metadata columns.\n\nmetadata columns add extra row level information about data ingestions, (i.e. when was the row read in source, when was inserted or deleted in redshift etc.) metadata columns are creating automatically by adding extra columns to the tables with a column prefix sdc. the metadata columns are documented at here. enabling metadata columns will flag the deleted rows by setting the _sdc_deleted_at metadata column. without the addmetadatacolumns option the deleted rows from singer taps will not be recongisable in redshift.\n\n\n# args\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> python command args\n\narguments list to pass to main python script\n\n\n# batchsizerows\n\n * type: integer\n * dynamic: ❌\n * required: ❌\n * default: 100000\n\n> maximum number of rows in each batch.\n\nat the end of each batch, the rows in the batch are loaded into redshift.\n\n\n# compression\n\n * type: string\n\n * dynamic: ❌\n\n * required: ❌\n\n * default: bzip2\n\n * possible values:\n   \n   * gzip\n   * bzip2\n\n> the compression method to use when writing files to s3 and running redshift copy.\n\n\n# copyoptions\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> copy options.\n\nparameters to use in the copy command when loading data to redshift. some basic file formatting parameters are fixed values and not recommended overriding them by custom values. they are like: csv gzip delimiter ',' removequotes escape.\n\n\n# dataflatteningmaxlevel\n\n * type: integer\n * dynamic: ❌\n * required: ❌\n * default: 0\n\n> object type record items from taps can be transformed to flattened columns by creating columns automatically.\n\nwhen harddelete option is true then delete sql commands will be performed in redshift to delete rows in tables. it's achieved by continuously checking the _sdc_deleted_at metadata column sent by the singer tap. due to deleting rows requires metadata columns, harddelete option automatically enables the addmetadatacolumns option as well..\n\n\n# dbname\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the database name\n\n\n# defaulttargetschema\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> name of the schema where the tables will be created.\n\nif schema_mapping is not defined then every stream sent by the tap is loaded into this schema.\n\n\n# defaulttargetschemaselectpermissions\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> grant usage privilege on newly created schemas and grant select privilege on newly created tables to a specific list of users or groups.\n\nif schemamapping is not defined then every stream sent by the tap is granted accordingly.\n\n\n# disabletablecache\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n * default: false\n\n> disable table cache.\n\nby default the connector caches the available table structures in redshift at startup. in this way it doesn't need to run additional queries when ingesting data to check if altering the target tables is required. with disable_table_cache option you can turn off this caching. you will always see the most recent table structures but will cause an extra query runtime.\n\n\n# dockeroptions\n\n * type: dockeroptions\n * dynamic: ❓\n * required: ❌\n\n> docker options when using runner docker\n\n\n# env\n\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> additional environnements variable to add for current process.\n\n\n# exitonfailed\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> exit if any non true return value\n\nthis tells bash that it should exit the script if any statement returns a non-true return value.\nthe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n\n# files\n\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> the list of files that will be uploaded to internal storage,\n\nuse outputfiles property instead\n\n\n# flushallstreams\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n * default: false\n\n> flush and load every stream into redshift when one batch is full.\n\nwarning: this may trigger the copy command to use files with low number of records..\n\n\n# harddelete\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n * default: false\n\n> delete rows on redshift.\n\nwhen harddelete option is true then delete sql commands will be performed in redshift to delete rows in tables. it's achieved by continuously checking the _sdc_deleted_at metadata column sent by the singer tap. due to deleting rows requires metadata columns, harddelete option automatically enables the addmetadatacolumns option as well.\n\n\n# host\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> the database hostname\n\n\n# inputfiles\n\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> input files are extra files supplied by user that make it simpler organize code.\n\ndescribe a files map that will be written and usable in execution context. in python execution context is in a temp folder, for bash scripts, you can reach files using a workingdir variable like 'source {{workingdir}}/myfile.sh'\n\n\n# interpreter\n\n * type: string\n * dynamic: ❌\n * required: ✔️\n * default: /bin/sh\n * min length: 1\n\n> interpreter to used\n\n\n# interpreterargs\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n * default: [-c]\n\n> interpreter args used\n\n\n# maxparallelism\n\n * type: integer\n * dynamic: ❌\n * required: ❌\n * default: 16\n\n> max number of parallel threads to use when flushing tables.\n\n\n# outputfiles\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> output file list that will be uploaded to internal storage\n\nlist of key that will generate temporary files.\non the command, just can use with special variable named outputfiles.key.\nif you add a files with [\"first\"], you can use the special vars echo 1 >> {[ outputfiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n\n# outputsfiles\n\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> deprecated output file\n\nuse outputfiles\n\n\n# parallelism\n\n * type: integer\n * dynamic: ❌\n * required: ❌\n * default: 0\n\n> the number of threads used to flush tables.\n\n0 will create a thread for each stream, up to parallelism_max. -1 will create a thread for each cpu core. any other positive number will create that number of threads, up to parallelism_max.\n\n\n# password\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the database user's password\n\n\n# port\n\n * type: integer\n * dynamic: ❌\n * required: ✔️\n\n> the database port\n\n\n# primarykeyrequired\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n * default: true\n\n> log based and incremental replications on tables with no primary key cause duplicates when merging update events.\n\nwhen set to true, stop loading data if no primary key is defined..\n\n\n# pythonpath\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * default: python\n * min length: 1\n\n> the python interpreter to use\n\nset the python interpreter path to use\n\n\n# redshiftcopyrolearn\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> aws redshift copy role arn.\n\naws role arn to be used for the redshift copy operation. used instead of the given aws keys for the copy operation if provided - the keys are still used for other s3 operations.\n\n\n# requirements\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> requirements are python dependencies to add to the python execution process\n\npython dependencies list to setup in the virtualenv, in the same format than requirements.txt\n\n\n# runner\n\n * type: string\n\n * dynamic: ❌\n\n * required: ✔️\n\n * default: process\n\n * possible values:\n   \n   * process\n   * docker\n\n> runner to use\n\n\n# s3acl\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> aws s3 acl.\n\ns3 object acl.\n\n\n# s3bucket\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> the s3 bucket name\n\n\n# s3keyprefix\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> s3 key prefix.\n\na static prefix before the generated s3 key names. using prefixes you can upload files into specific directories in the s3 bucket. default(none).\n\n\n# schema_mapping\n\n * type: string\n * dynamic: ❌\n * required: ❌\n\n> schema mapping.\n\nuseful if you want to load multiple streams from one tap to multiple redshift schemas. if the tap sends the stream_id in <schema_name>-<table_name> format then this option overwrites the default_target_schema value. note, that using schema_mapping you can overwrite the default_target_schema_select_permissions value to grant select permissions to different groups per schemas or optionally you can create indices automatically for the replicated tables.\n\n\n# secretaccesskey\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> s3 secret access key.\n\nused for s3 and redshift copy operations.\n\n\n# sessiontoken\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> aws s3 session token.\n\ns3 aws sts token for temporary credentials.\n\n\n# skipupdates\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n * default: false\n\n> do not update existing records when primary key is defined.\n\nuseful to improve performance when records are immutable, e.g. events.\n\n\n# slices\n\n * type: integer\n * dynamic: ❌\n * required: ❌\n * default: 1\n\n> number of slices to split files into prior to running copy on redshift.\n\nthis should be set to the number of redshift slices. the number of slices per node depends on the node size of the cluster - run select count(distinct slice) slices from stv_slices to calculate this.\n\n\n# tap\n\n * type: abstractpythontap-2\n * dynamic: ❓\n * required: ✔️\n\n\n# username\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> the database user\n\n\n# validaterecords\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n * default: false\n\n> validate every single record message to the corresponding json schema.\n\nthis option is disabled by default and invalid record messages will fail only at load time by redshift. enabling this option will detect invalid records earlier but could cause performance degradation..\n\n\n# warningonstderr\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> use warning state if any stderr is sent\n\n\n# outputs\n\n\n# state\n\n * type: string\n\n> uri of the state file\n\n\n# definitions\n\n\n# abstractpythontap-2\n\n\n# abstractpythontap-1\n\n# args\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> python command args\n\narguments list to pass to main python script\n\n# dockeroptions\n\n * type: dockeroptions\n * dynamic: ❓\n * required: ❌\n\n> docker options when using runner docker\n\nwith this python task, we can execute a full python script.\nthe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nby convention, you need to define at least a main.py files in inputfiles that will be the script used.\nbut you are also able to add as many script as you need in inputfiles.\n\nyou can also add a pip.conf in inputfiles to customize the pip download of dependencies (like a private registry).\n\nyou can send outputs & metrics from your python script that can be used by others tasks. in order to help, we inject a python package directly on the working dir.here is an example usage:\n\nfrom kestra import kestra\nkestra.outputs({'test': 'value', 'int': 2, 'bool': true, 'float': 3.65})\nkestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nkestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nkestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n# env\n\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> additional environnements variable to add for current process.\n\nwith this python task, we can execute a full python script.\nthe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nby convention, you need to define at least a main.py files in inputfiles that will be the script used.\nbut you are also able to add as many script as you need in inputfiles.\n\nyou can also add a pip.conf in inputfiles to customize the pip download of dependencies (like a private registry).\n\nyou can send outputs & metrics from your python script that can be used by others tasks. in order to help, we inject a python package directly on the working dir.here is an example usage:\n\nfrom kestra import kestra\nkestra.outputs({'test': 'value', 'int': 2, 'bool': true, 'float': 3.65})\nkestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nkestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nkestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n# exitonfailed\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> exit if any non true return value\n\nthis tells bash that it should exit the script if any statement returns a non-true return value.\nthe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n# files\n\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> the list of files that will be uploaded to internal storage,\n\nuse outputfiles property instead\n\n# inputfiles\n\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> input files are extra files supplied by user that make it simpler organize code.\n\ndescribe a files map that will be written and usable in execution context. in python execution context is in a temp folder, for bash scripts, you can reach files using a workingdir variable like 'source {{workingdir}}/myfile.sh'\n\n# interpreter\n\n * type: string\n * dynamic: ❌\n * required: ✔️\n * default: /bin/sh\n * min length: 1\n\n> interpreter to used\n\nwith this python task, we can execute a full python script.\nthe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nby convention, you need to define at least a main.py files in inputfiles that will be the script used.\nbut you are also able to add as many script as you need in inputfiles.\n\nyou can also add a pip.conf in inputfiles to customize the pip download of dependencies (like a private registry).\n\nyou can send outputs & metrics from your python script that can be used by others tasks. in order to help, we inject a python package directly on the working dir.here is an example usage:\n\nfrom kestra import kestra\nkestra.outputs({'test': 'value', 'int': 2, 'bool': true, 'float': 3.65})\nkestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nkestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nkestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n# interpreterargs\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n * default: [-c]\n\n> interpreter args used\n\nwith this python task, we can execute a full python script.\nthe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nby convention, you need to define at least a main.py files in inputfiles that will be the script used.\nbut you are also able to add as many script as you need in inputfiles.\n\nyou can also add a pip.conf in inputfiles to customize the pip download of dependencies (like a private registry).\n\nyou can send outputs & metrics from your python script that can be used by others tasks. in order to help, we inject a python package directly on the working dir.here is an example usage:\n\nfrom kestra import kestra\nkestra.outputs({'test': 'value', 'int': 2, 'bool': true, 'float': 3.65})\nkestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nkestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nkestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n# outputfiles\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> output file list that will be uploaded to internal storage\n\nlist of key that will generate temporary files.\non the command, just can use with special variable named outputfiles.key.\nif you add a files with [\"first\"], you can use the special vars echo 1 >> {[ outputfiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n# outputsfiles\n\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> deprecated output file\n\nuse outputfiles\n\n# pythonpath\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * default: python\n * min length: 1\n\n> the python interpreter to use\n\nset the python interpreter path to use\n\n# requirements\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> requirements are python dependencies to add to the python execution process\n\npython dependencies list to setup in the virtualenv, in the same format than requirements.txt\n\n# runner\n\n * type: string\n\n * dynamic: ❌\n\n * required: ✔️\n\n * default: process\n\n * possible values:\n   \n   * process\n   * docker\n\n> runner to use\n\nwith this python task, we can execute a full python script.\nthe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nby convention, you need to define at least a main.py files in inputfiles that will be the script used.\nbut you are also able to add as many script as you need in inputfiles.\n\nyou can also add a pip.conf in inputfiles to customize the pip download of dependencies (like a private registry).\n\nyou can send outputs & metrics from your python script that can be used by others tasks. in order to help, we inject a python package directly on the working dir.here is an example usage:\n\nfrom kestra import kestra\nkestra.outputs({'test': 'value', 'int': 2, 'bool': true, 'float': 3.65})\nkestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nkestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nkestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n# streamsconfigurations\n\n * type: array\n * subtype: streamsconfiguration\n * dynamic: ❌\n * required: ✔️\n * min items: 1\n\n> the list of stream configurations\n\nwith this python task, we can execute a full python script.\nthe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nby convention, you need to define at least a main.py files in inputfiles that will be the script used.\nbut you are also able to add as many script as you need in inputfiles.\n\nyou can also add a pip.conf in inputfiles to customize the pip download of dependencies (like a private registry).\n\nyou can send outputs & metrics from your python script that can be used by others tasks. in order to help, we inject a python package directly on the working dir.here is an example usage:\n\nfrom kestra import kestra\nkestra.outputs({'test': 'value', 'int': 2, 'bool': true, 'float': 3.65})\nkestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nkestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nkestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n# warningonstderr\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> use warning state if any stderr is sent\n\nwith this python task, we can execute a full python script.\nthe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nby convention, you need to define at least a main.py files in inputfiles that will be the script used.\nbut you are also able to add as many script as you need in inputfiles.\n\nyou can also add a pip.conf in inputfiles to customize the pip download of dependencies (like a private registry).\n\nyou can send outputs & metrics from your python script that can be used by others tasks. in order to help, we inject a python package directly on the working dir.here is an example usage:\n\nfrom kestra import kestra\nkestra.outputs({'test': 'value', 'int': 2, 'bool': true, 'float': 3.65})\nkestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nkestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nkestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n\n# dockeroptions\n\n# dockerconfig\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> docker config file\n\nfull file that can be used to configure private registries, ...\n\n# dockerhost\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n * default: unix:///var/run/docker.sock\n\n> docker api uri\n\n# entrypoint\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> docker entrypoint to use\n\n# extrahosts\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> docker extra host to use\n\n# image\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> docker image to use\n\n# user\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> docker user to use\n\n\n# streamsconfiguration\n\n# propertiespattern\n\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n\n# replicationkeys\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# replicationmethod\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * possible values:\n   \n   * full_table\n   * incremental\n   * log_based\n\n# selected\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: true\n\n# stream\n\n * type: string\n * dynamic: ❓\n * required: ❌",charsets:{}},{title:"is",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"is"},{property:"og:description",content:"is | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/operator/is.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"is"},{name:"twitter:description",content:"is | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/operator/is.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/operator/is.html",relativePath:"docs/developer-guide/variables/operator/is.md",key:"v-b544102e",path:"/docs/developer-guide/variables/operator/is.html",lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:null,content:"# is\n\nThe is operator will apply a test to a variable which will return a boolean.\n\n{% if 2 is even %}\n\t...\n{% endif %}\n\n\nThe result can be negated using the not operator:\n\n{% if 3 is not even %}\n\t...\n{% endif %}\n",normalizedContent:"# is\n\nthe is operator will apply a test to a variable which will return a boolean.\n\n{% if 2 is even %}\n\t...\n{% endif %}\n\n\nthe result can be negated using the not operator:\n\n{% if 3 is not even %}\n\t...\n{% endif %}\n",charsets:{}},{title:"Move",frontmatter:{title:"Move",editLink:!1,description:"Move a file to a FTPS server.",icon:"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4KPHN2ZyB2ZXJzaW9uPSIxLjEiIGlkPSJDYWxxdWVfMSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIgeD0iMHB4IiB5PSIwcHgiCiAgICAgdmlld0JveD0iMCAwIDI0IDI0IiBzdHlsZT0iZW5hYmxlLWJhY2tncm91bmQ6bmV3IDAgMCAyNCAyNDsiIHhtbDpzcGFjZT0icHJlc2VydmUiPgo8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgoJLnN0MHtmaWxsOm5vbmU7fQoJLnN0MXtmaWxsOiMwRjE3MjQ7fQo8L3N0eWxlPgogICAgPGc+Cgk8cmVjdCB4PSI1IiB5PSI0IiBjbGFzcz0ic3QwIiB3aWR0aD0iMiIgaGVpZ2h0PSIyIi8+CiAgICAgICAgPHJlY3QgeD0iOSIgeT0iNCIgY2xhc3M9InN0MCIgd2lkdGg9IjEiIGhlaWdodD0iMiIvPgogICAgICAgIDxwYXRoIGNsYXNzPSJzdDEiIGQ9Ik00LDhoMTZjMC42LDAsMS0wLjQsMS0xVjNjMC0wLjYtMC40LTEtMS0xSDRDMy40LDIsMywyLjQsMywzdjRDMyw3LjYsMy40LDgsNCw4eiBNOSw0aDF2Mkg5VjR6IE01LDRoMnYySDVWNHoKCQkiLz4KICAgICAgICA8cGF0aCBjbGFzcz0ic3QxIiBkPSJNMTUsMTljMC0wLjYtMC40LTEtMS0xaC0xdi0yaDdjMC42LDAsMS0wLjQsMS0xdi00YzAtMC42LTAuNC0xLTEtMUg0Yy0wLjYsMC0xLDAuNC0xLDF2NGMwLDAuNiwwLjQsMSwxLDFoN3YyCgkJaC0xYy0wLjYsMC0xLDAuNC0xLDFIMnYyaDdjMCwwLjYsMC40LDEsMSwxaDRjMC42LDAsMS0wLjQsMS0xaDd2LTJIMTV6IE0xNi45LDEzLjZjMC0wLjEtMC4xLTAuMS0wLjItMC4yCgkJYy0wLjEtMC4xLTAuMi0wLjEtMC4zLTAuMXMtMC4yLTAuMS0wLjMtMC4xYy0wLjEsMC0wLjItMC4xLTAuNC0wLjFjLTAuMS0wLjEtMC4yLTAuMS0wLjMtMC4yYy0wLjEtMC4xLTAuMS0wLjItMC4yLTAuMwoJCWMwLTAuMS0wLjEtMC4yLTAuMS0wLjRjMC0wLjMsMC4xLTAuNSwwLjMtMC43YzAuMi0wLjIsMC41LTAuMywwLjktMC4zYzAuMiwwLDAuNCwwLDAuNiwwLjFzMC4zLDAuMSwwLjQsMC4xbC0wLjIsMC40CgkJYy0wLjEsMC0wLjItMC4xLTAuMy0wLjFzLTAuMy0wLjEtMC41LTAuMWMtMC4xLDAtMC4yLDAtMC4zLDBzLTAuMiwwLjEtMC4yLDAuMWMtMC4xLDAtMC4xLDAuMS0wLjEsMC4yYzAsMC4xLTAuMSwwLjEtMC4xLDAuMgoJCWMwLDAuMSwwLDAuMiwwLjEsMC4yYzAsMC4xLDAuMSwwLjEsMC4yLDAuMnMwLjEsMC4xLDAuMiwwLjFjMC4xLDAsMC4yLDAuMSwwLjMsMC4xYzAuMSwwLjEsMC4zLDAuMSwwLjQsMC4yCgkJYzAuMSwwLjEsMC4yLDAuMSwwLjMsMC4yczAuMiwwLjIsMC4yLDAuM2MwLjEsMC4xLDAuMSwwLjMsMC4xLDAuNGMwLDAuMy0wLjEsMC41LTAuMywwLjdzLTAuNSwwLjItMC45LDAuMmMtMC4xLDAtMC4zLDAtMC40LDAKCQljLTAuMSwwLTAuMiwwLTAuMy0wLjFzLTAuMi0wLjEtMC4yLTAuMWMtMC4xLDAtMC4xLTAuMS0wLjItMC4xbDAuMS0wLjRjMC4xLDAsMC4yLDAuMSwwLjQsMC4xYzAuMiwwLjEsMC4zLDAuMSwwLjYsMC4xCgkJYzAuNSwwLDAuOC0wLjIsMC44LTAuNUMxNywxMy43LDE2LjksMTMuNywxNi45LDEzLjZ6IE04LjksMTEuN0g3LjN2MWgxLjR2MC40SDcuM3YxLjZINi44di0zLjVoMi4xVjExLjd6IE0xMS44LDExLjdoLTEuMXYzaC0wLjUKCQl2LTNIOS4ydi0wLjRoMi43VjExLjd6IE0xMi44LDE0LjdoLTAuNXYtMy40YzAuMSwwLDAuMy0wLjEsMC41LTAuMWMwLjIsMCwwLjMsMCwwLjUsMGMwLjUsMCwwLjksMC4xLDEuMSwwLjNzMC40LDAuNSwwLjQsMC44CgkJYzAsMC4yLDAsMC40LTAuMSwwLjVjLTAuMSwwLjEtMC4yLDAuMy0wLjMsMC4zYy0wLjEsMC4xLTAuMywwLjItMC41LDAuMnMtMC40LDAuMS0wLjcsMC4xaC0wLjRWMTQuN3oiLz4KICAgICAgICA8cGF0aCBjbGFzcz0ic3QxIiBkPSJNMTQsMTIuOWMwLjEtMC4xLDAuMi0wLjEsMC4yLTAuMmMwLTAuMSwwLjEtMC4yLDAuMS0wLjNjMC0wLjEsMC0wLjItMC4xLTAuM3MtMC4xLTAuMi0wLjItMC4yCgkJYy0wLjEtMC4xLTAuMi0wLjEtMC4zLTAuMXMtMC4yLDAtMC40LDBjLTAuMiwwLTAuNCwwLTAuNSwwVjEzaDAuNGMwLjIsMCwwLjMsMCwwLjQsMEMxMy44LDEzLDEzLjksMTIuOSwxNCwxMi45eiIvPgo8L2c+Cjwvc3ZnPgo=",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Move"},{property:"og:description",content:"Move a file to a FTPS server. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/plugin-fs/tasks/ftps/io.kestra.plugin.fs.ftps.Move.html"},{property:"og:image",content:"https://kestra.io/og-image.png"},{name:"twitter:title",content:"Move"},{name:"twitter:description",content:"Move a file to a FTPS server. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/plugin-fs/tasks/ftps/io.kestra.plugin.fs.ftps.Move.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.png"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/plugin-fs/tasks/ftps/io.kestra.plugin.fs.ftps.Move.html",relativePath:"plugins/plugin-fs/tasks/ftps/io.kestra.plugin.fs.ftps.Move.md",key:"v-52891643",path:"/plugins/plugin-fs/tasks/ftps/io.kestra.plugin.fs.ftps.Move.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:146},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:323},{level:3,title:"dataChannelProtectionLevel",slug:"datachannelprotectionlevel",normalizedTitle:"datachannelprotectionlevel",charIndex:338},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:260},{level:3,title:"host",slug:"host",normalizedTitle:"host",charIndex:205},{level:3,title:"mode",slug:"mode",normalizedTitle:"mode",charIndex:699},{level:3,title:"passiveMode",slug:"passivemode",normalizedTitle:"passivemode",charIndex:883},{level:3,title:"password",slug:"password",normalizedTitle:"password",charIndex:245},{level:3,title:"port",slug:"port",normalizedTitle:"port",charIndex:221},{level:3,title:"proxyHost",slug:"proxyhost",normalizedTitle:"proxyhost",charIndex:1183},{level:3,title:"proxyPort",slug:"proxyport",normalizedTitle:"proxyport",charIndex:1261},{level:3,title:"proxyType",slug:"proxytype",normalizedTitle:"proxytype",charIndex:1339},{level:3,title:"rootDir",slug:"rootdir",normalizedTitle:"rootdir",charIndex:1477},{level:3,title:"to",slug:"to",normalizedTitle:"to",charIndex:60},{level:3,title:"username",slug:"username",normalizedTitle:"username",charIndex:231},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1955},{level:3,title:"from",slug:"from-2",normalizedTitle:"from",charIndex:260},{level:3,title:"to",slug:"to-2",normalizedTitle:"to",charIndex:60},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:2056}],headersStr:"Examples Properties dataChannelProtectionLevel from host mode passiveMode password port proxyHost proxyPort proxyType rootDir to username Outputs from to Definitions",content:'Move\n\ntype: "io.kestra.plugin.fs.ftps.Move"\n\n\n> Move a file to a FTPS server.\n\nIf the destination directory doesn\'t exist, it will be created\n\n\n# Examples\n\nid: "move"\ntype: "io.kestra.plugin.fs.ftps.Move"\nhost: localhost\nport: 990\nusername: foo\npassword: pass\nfrom: "/upload/dir1/file.txt"\nto: "/upload/dir2/file.txt"\n\n\n\n# Properties\n\n\n# dataChannelProtectionLevel\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Default: P\n\n * Possible Values:\n   \n   * C\n   * S\n   * E\n   * P\n\n> Sets the data channel protection level (PROT).\n\n\n# from\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The file to move\n\n\n# host\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Hostname of the remote server\n\n\n# mode\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Default: EXPLICIT\n\n * Possible Values:\n   \n   * IMPLICIT\n   * EXPLICIT\n\n> Sets FTPS mode, either "implicit" or "explicit".\n\n\n# passiveMode\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: true\n\n> Enter into passive mode.\n\n\n# password\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Password on the remote server\n\n\n# port\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Default: 990\n\n> Port of the remote server\n\n\n# proxyHost\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> FTP proxy host\n\n\n# proxyPort\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> FTP proxy port\n\n\n# proxyType\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Possible Values:\n   \n   * DIRECT\n   * HTTP\n   * SOCKS\n\n> FTP proxy type\n\n\n# rootDir\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: true\n\n> Is path is relative to root dir\n\n\n# to\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The destination path to move\n\nThe full destination path (with filename optionally)\nIf end with a /, the destination is considered as a directory and filename will be happen\nIf the destFile exists, it is deleted first.\n\n\n# username\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> Username on the remote server\n\n\n# Outputs\n\n\n# from\n\n * Type: string\n\n> The from uri\n\n\n# to\n\n * Type: string\n\n> The destination uri\n\n\n# Definitions',normalizedContent:'move\n\ntype: "io.kestra.plugin.fs.ftps.move"\n\n\n> move a file to a ftps server.\n\nif the destination directory doesn\'t exist, it will be created\n\n\n# examples\n\nid: "move"\ntype: "io.kestra.plugin.fs.ftps.move"\nhost: localhost\nport: 990\nusername: foo\npassword: pass\nfrom: "/upload/dir1/file.txt"\nto: "/upload/dir2/file.txt"\n\n\n\n# properties\n\n\n# datachannelprotectionlevel\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * default: p\n\n * possible values:\n   \n   * c\n   * s\n   * e\n   * p\n\n> sets the data channel protection level (prot).\n\n\n# from\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the file to move\n\n\n# host\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> hostname of the remote server\n\n\n# mode\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * default: explicit\n\n * possible values:\n   \n   * implicit\n   * explicit\n\n> sets ftps mode, either "implicit" or "explicit".\n\n\n# passivemode\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: true\n\n> enter into passive mode.\n\n\n# password\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> password on the remote server\n\n\n# port\n\n * type: string\n * dynamic: ❓\n * required: ❌\n * default: 990\n\n> port of the remote server\n\n\n# proxyhost\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> ftp proxy host\n\n\n# proxyport\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> ftp proxy port\n\n\n# proxytype\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * possible values:\n   \n   * direct\n   * http\n   * socks\n\n> ftp proxy type\n\n\n# rootdir\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: true\n\n> is path is relative to root dir\n\n\n# to\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the destination path to move\n\nthe full destination path (with filename optionally)\nif end with a /, the destination is considered as a directory and filename will be happen\nif the destfile exists, it is deleted first.\n\n\n# username\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> username on the remote server\n\n\n# outputs\n\n\n# from\n\n * type: string\n\n> the from uri\n\n\n# to\n\n * type: string\n\n> the destination uri\n\n\n# definitions',charsets:{}}],themeConfig:{domain:"https://kestra.io",logo:"/logo-white.svg",repo:"kestra-io/kestra",repoLabel:"GitHub",docsRepo:"kestra-io/kestra.io",editLinks:!0,smoothScroll:!0,searchMaxSuggestions:10,author:{name:"Kestra",twitter:"@kestra_io"},sidebar:{"/plugins/":[{title:"Plugins",collapsable:!0,sidebarDepth:1,children:[{path:"/plugins/",title:"Plugins",readme:!0},{path:"/plugins/core/",title:"Core",readme:!0,children:[{title:"Conditions",children:[{path:"/plugins/core/conditions/io.kestra.core.models.conditions.types.DateTimeBetweenCondition",title:"DateTimeBetweenCondition",readme:!1},{path:"/plugins/core/conditions/io.kestra.core.models.conditions.types.DayWeekCondition",title:"DayWeekCondition",readme:!1},{path:"/plugins/core/conditions/io.kestra.core.models.conditions.types.DayWeekInMonthCondition",title:"DayWeekInMonthCondition",readme:!1},{path:"/plugins/core/conditions/io.kestra.core.models.conditions.types.ExecutionFlowCondition",title:"ExecutionFlowCondition",readme:!1},{path:"/plugins/core/conditions/io.kestra.core.models.conditions.types.ExecutionNamespaceCondition",title:"ExecutionNamespaceCondition",readme:!1},{path:"/plugins/core/conditions/io.kestra.core.models.conditions.types.ExecutionStatusCondition",title:"ExecutionStatusCondition",readme:!1},{path:"/plugins/core/conditions/io.kestra.core.models.conditions.types.FlowCondition",title:"FlowCondition",readme:!1},{path:"/plugins/core/conditions/io.kestra.core.models.conditions.types.FlowNamespaceCondition",title:"FlowNamespaceCondition",readme:!1},{path:"/plugins/core/conditions/io.kestra.core.models.conditions.types.HasRetryAttemptCondition",title:"HasRetryAttemptCondition",readme:!1},{path:"/plugins/core/conditions/io.kestra.core.models.conditions.types.MultipleCondition",title:"MultipleCondition",readme:!1},{path:"/plugins/core/conditions/io.kestra.core.models.conditions.types.NotCondition",title:"NotCondition",readme:!1},{path:"/plugins/core/conditions/io.kestra.core.models.conditions.types.OrCondition",title:"OrCondition",readme:!1},{path:"/plugins/core/conditions/io.kestra.core.models.conditions.types.VariableCondition",title:"VariableCondition",readme:!1},{path:"/plugins/core/conditions/io.kestra.core.models.conditions.types.WeekendCondition",title:"WeekendCondition",readme:!1}]},{title:"Tasks",children:[{title:"Debugs",children:[{path:"/plugins/core/tasks/debugs/io.kestra.core.tasks.debugs.Echo",title:"Echo",readme:!1},{path:"/plugins/core/tasks/debugs/io.kestra.core.tasks.debugs.Return",title:"Return",readme:!1}]},{title:"Executions",children:[{path:"/plugins/core/tasks/executions/io.kestra.core.tasks.executions.Counts",title:"Counts",readme:!1}]},{title:"Flows",children:[{path:"/plugins/core/tasks/flows/io.kestra.core.tasks.flows.AllowFailure",title:"AllowFailure",readme:!1},{path:"/plugins/core/tasks/flows/io.kestra.core.tasks.flows.EachParallel",title:"EachParallel",readme:!1},{path:"/plugins/core/tasks/flows/io.kestra.core.tasks.flows.EachSequential",title:"EachSequential",readme:!1},{path:"/plugins/core/tasks/flows/io.kestra.core.tasks.flows.Flow",title:"Flow",readme:!1},{path:"/plugins/core/tasks/flows/io.kestra.core.tasks.flows.Parallel",title:"Parallel",readme:!1},{path:"/plugins/core/tasks/flows/io.kestra.core.tasks.flows.Pause",title:"Pause",readme:!1},{path:"/plugins/core/tasks/flows/io.kestra.core.tasks.flows.Sequential",title:"Sequential",readme:!1},{path:"/plugins/core/tasks/flows/io.kestra.core.tasks.flows.Switch",title:"Switch",readme:!1},{path:"/plugins/core/tasks/flows/io.kestra.core.tasks.flows.Template",title:"Template",readme:!1},{path:"/plugins/core/tasks/flows/io.kestra.core.tasks.flows.Template$ExecutorTemplate",title:"ExecutorTemplate",readme:!1}]},{title:"Scripts",children:[{path:"/plugins/core/tasks/scripts/io.kestra.core.tasks.scripts.Bash",title:"Bash",readme:!1},{path:"/plugins/core/tasks/scripts/io.kestra.core.tasks.scripts.Node",title:"Node",readme:!1},{path:"/plugins/core/tasks/scripts/io.kestra.core.tasks.scripts.Python",title:"Python",readme:!1}]},{title:"Storages",children:[{path:"/plugins/core/tasks/storages/io.kestra.core.tasks.storages.Concat",title:"Concat",readme:!1},{path:"/plugins/core/tasks/storages/io.kestra.core.tasks.storages.Delete",title:"Delete",readme:!1},{path:"/plugins/core/tasks/storages/io.kestra.core.tasks.storages.PurgeExecution",title:"PurgeExecution",readme:!1},{path:"/plugins/core/tasks/storages/io.kestra.core.tasks.storages.Size",title:"Size",readme:!1}]}]},{title:"Triggers",children:[{path:"/plugins/core/triggers/io.kestra.core.models.triggers.types.Flow",title:"Flow",readme:!1},{path:"/plugins/core/triggers/io.kestra.core.models.triggers.types.Schedule",title:"Schedule",readme:!1},{path:"/plugins/core/triggers/io.kestra.core.models.triggers.types.Webhook",title:"Webhook",readme:!1}]}]},{path:"/plugins/plugin-aws/",title:"Plugin aws",readme:!0,children:[{title:"Tasks",children:[{title:"S3",children:[{path:"/plugins/plugin-aws/tasks/s3/io.kestra.plugin.aws.s3.CreateBucket",title:"CreateBucket",readme:!1},{path:"/plugins/plugin-aws/tasks/s3/io.kestra.plugin.aws.s3.Delete",title:"Delete",readme:!1},{path:"/plugins/plugin-aws/tasks/s3/io.kestra.plugin.aws.s3.Download",title:"Download",readme:!1},{path:"/plugins/plugin-aws/tasks/s3/io.kestra.plugin.aws.s3.Upload",title:"Upload",readme:!1}]}]}]},{path:"/plugins/plugin-compress/",title:"Plugin compress",readme:!0,children:[{title:"Tasks",children:[{path:"/plugins/plugin-compress/tasks/io.kestra.plugin.compress.ArchiveCompress",title:"ArchiveCompress",readme:!1},{path:"/plugins/plugin-compress/tasks/io.kestra.plugin.compress.ArchiveDecompress",title:"ArchiveDecompress",readme:!1},{path:"/plugins/plugin-compress/tasks/io.kestra.plugin.compress.FileCompress",title:"FileCompress",readme:!1},{path:"/plugins/plugin-compress/tasks/io.kestra.plugin.compress.FileDecompress",title:"FileDecompress",readme:!1}]}]},{path:"/plugins/plugin-crypto/",title:"Plugin crypto",readme:!0,children:[{title:"Tasks",children:[{title:"Openpgp",children:[{path:"/plugins/plugin-crypto/tasks/openpgp/io.kestra.plugin.crypto.openpgp.Decrypt",title:"Decrypt",readme:!1},{path:"/plugins/plugin-crypto/tasks/openpgp/io.kestra.plugin.crypto.openpgp.Encrypt",title:"Encrypt",readme:!1}]}]}]},{path:"/plugins/plugin-elasticsearch/",title:"Plugin elasticsearch",readme:!0,children:[{title:"Tasks",children:[{path:"/plugins/plugin-elasticsearch/tasks/io.kestra.plugin.elasticsearch.Bulk",title:"Bulk",readme:!1},{path:"/plugins/plugin-elasticsearch/tasks/io.kestra.plugin.elasticsearch.Get",title:"Get",readme:!1},{path:"/plugins/plugin-elasticsearch/tasks/io.kestra.plugin.elasticsearch.Load",title:"Load",readme:!1},{path:"/plugins/plugin-elasticsearch/tasks/io.kestra.plugin.elasticsearch.Put",title:"Put",readme:!1},{path:"/plugins/plugin-elasticsearch/tasks/io.kestra.plugin.elasticsearch.Request",title:"Request",readme:!1},{path:"/plugins/plugin-elasticsearch/tasks/io.kestra.plugin.elasticsearch.Scroll",title:"Scroll",readme:!1},{path:"/plugins/plugin-elasticsearch/tasks/io.kestra.plugin.elasticsearch.Search",title:"Search",readme:!1}]}]},{path:"/plugins/plugin-fs/",title:"Plugin fs",readme:!0,children:[{title:"Tasks",children:[{title:"Ftp",children:[{path:"/plugins/plugin-fs/tasks/ftp/io.kestra.plugin.fs.ftp.Delete",title:"Delete",readme:!1},{path:"/plugins/plugin-fs/tasks/ftp/io.kestra.plugin.fs.ftp.Download",title:"Download",readme:!1},{path:"/plugins/plugin-fs/tasks/ftp/io.kestra.plugin.fs.ftp.Downloads",title:"Downloads",readme:!1},{path:"/plugins/plugin-fs/tasks/ftp/io.kestra.plugin.fs.ftp.List",title:"List",readme:!1},{path:"/plugins/plugin-fs/tasks/ftp/io.kestra.plugin.fs.ftp.Move",title:"Move",readme:!1},{path:"/plugins/plugin-fs/tasks/ftp/io.kestra.plugin.fs.ftp.Upload",title:"Upload",readme:!1}]},{title:"Ftps",children:[{path:"/plugins/plugin-fs/tasks/ftps/io.kestra.plugin.fs.ftps.Delete",title:"Delete",readme:!1},{path:"/plugins/plugin-fs/tasks/ftps/io.kestra.plugin.fs.ftps.Download",title:"Download",readme:!1},{path:"/plugins/plugin-fs/tasks/ftps/io.kestra.plugin.fs.ftps.Downloads",title:"Downloads",readme:!1},{path:"/plugins/plugin-fs/tasks/ftps/io.kestra.plugin.fs.ftps.List",title:"List",readme:!1},{path:"/plugins/plugin-fs/tasks/ftps/io.kestra.plugin.fs.ftps.Move",title:"Move",readme:!1},{path:"/plugins/plugin-fs/tasks/ftps/io.kestra.plugin.fs.ftps.Upload",title:"Upload",readme:!1}]},{title:"Http",children:[{path:"/plugins/plugin-fs/tasks/http/io.kestra.plugin.fs.http.Download",title:"Download",readme:!1},{path:"/plugins/plugin-fs/tasks/http/io.kestra.plugin.fs.http.Request",title:"Request",readme:!1}]},{title:"Sftp",children:[{path:"/plugins/plugin-fs/tasks/sftp/io.kestra.plugin.fs.sftp.Delete",title:"Delete",readme:!1},{path:"/plugins/plugin-fs/tasks/sftp/io.kestra.plugin.fs.sftp.Download",title:"Download",readme:!1},{path:"/plugins/plugin-fs/tasks/sftp/io.kestra.plugin.fs.sftp.Downloads",title:"Downloads",readme:!1},{path:"/plugins/plugin-fs/tasks/sftp/io.kestra.plugin.fs.sftp.List",title:"List",readme:!1},{path:"/plugins/plugin-fs/tasks/sftp/io.kestra.plugin.fs.sftp.Move",title:"Move",readme:!1},{path:"/plugins/plugin-fs/tasks/sftp/io.kestra.plugin.fs.sftp.Upload",title:"Upload",readme:!1}]}]},{title:"Triggers",children:[{title:"Ftp",children:[{path:"/plugins/plugin-fs/triggers/ftp/io.kestra.plugin.fs.ftp.Trigger",title:"Trigger",readme:!1}]},{title:"Ftps",children:[{path:"/plugins/plugin-fs/triggers/ftps/io.kestra.plugin.fs.ftps.Trigger",title:"Trigger",readme:!1}]},{title:"Sftp",children:[{path:"/plugins/plugin-fs/triggers/sftp/io.kestra.plugin.fs.sftp.Trigger",title:"Trigger",readme:!1}]}]}]},{path:"/plugins/plugin-gcp/",title:"Plugin gcp",readme:!0,children:[{title:"Tasks",children:[{title:"Auth",children:[{path:"/plugins/plugin-gcp/tasks/auth/io.kestra.plugin.gcp.auth.OauthAccessToken",title:"OauthAccessToken",readme:!1}]},{title:"Bigquery",children:[{path:"/plugins/plugin-gcp/tasks/bigquery/io.kestra.plugin.gcp.bigquery.CreateDataset",title:"CreateDataset",readme:!1},{path:"/plugins/plugin-gcp/tasks/bigquery/io.kestra.plugin.gcp.bigquery.CreateTable",title:"CreateTable",readme:!1},{path:"/plugins/plugin-gcp/tasks/bigquery/io.kestra.plugin.gcp.bigquery.DeleteDataset",title:"DeleteDataset",readme:!1},{path:"/plugins/plugin-gcp/tasks/bigquery/io.kestra.plugin.gcp.bigquery.DeleteTable",title:"DeleteTable",readme:!1},{path:"/plugins/plugin-gcp/tasks/bigquery/io.kestra.plugin.gcp.bigquery.ExtractToGcs",title:"ExtractToGcs",readme:!1},{path:"/plugins/plugin-gcp/tasks/bigquery/io.kestra.plugin.gcp.bigquery.Load",title:"Load",readme:!1},{path:"/plugins/plugin-gcp/tasks/bigquery/io.kestra.plugin.gcp.bigquery.LoadFromGcs",title:"LoadFromGcs",readme:!1},{path:"/plugins/plugin-gcp/tasks/bigquery/io.kestra.plugin.gcp.bigquery.Query",title:"Query",readme:!1},{path:"/plugins/plugin-gcp/tasks/bigquery/io.kestra.plugin.gcp.bigquery.StorageWrite",title:"StorageWrite",readme:!1},{path:"/plugins/plugin-gcp/tasks/bigquery/io.kestra.plugin.gcp.bigquery.TableMetadata",title:"TableMetadata",readme:!1},{path:"/plugins/plugin-gcp/tasks/bigquery/io.kestra.plugin.gcp.bigquery.UpdateDataset",title:"UpdateDataset",readme:!1},{path:"/plugins/plugin-gcp/tasks/bigquery/io.kestra.plugin.gcp.bigquery.UpdateTable",title:"UpdateTable",readme:!1}]},{title:"Gcs",children:[{path:"/plugins/plugin-gcp/tasks/gcs/io.kestra.plugin.gcp.gcs.Compose",title:"Compose",readme:!1},{path:"/plugins/plugin-gcp/tasks/gcs/io.kestra.plugin.gcp.gcs.Copy",title:"Copy",readme:!1},{path:"/plugins/plugin-gcp/tasks/gcs/io.kestra.plugin.gcp.gcs.CreateBucket",title:"CreateBucket",readme:!1},{path:"/plugins/plugin-gcp/tasks/gcs/io.kestra.plugin.gcp.gcs.CreateBucketIamPolicy",title:"CreateBucketIamPolicy",readme:!1},{path:"/plugins/plugin-gcp/tasks/gcs/io.kestra.plugin.gcp.gcs.Delete",title:"Delete",readme:!1},{path:"/plugins/plugin-gcp/tasks/gcs/io.kestra.plugin.gcp.gcs.DeleteBucket",title:"DeleteBucket",readme:!1},{path:"/plugins/plugin-gcp/tasks/gcs/io.kestra.plugin.gcp.gcs.DeleteList",title:"DeleteList",readme:!1},{path:"/plugins/plugin-gcp/tasks/gcs/io.kestra.plugin.gcp.gcs.Download",title:"Download",readme:!1},{path:"/plugins/plugin-gcp/tasks/gcs/io.kestra.plugin.gcp.gcs.Downloads",title:"Downloads",readme:!1},{path:"/plugins/plugin-gcp/tasks/gcs/io.kestra.plugin.gcp.gcs.List",title:"List",readme:!1},{path:"/plugins/plugin-gcp/tasks/gcs/io.kestra.plugin.gcp.gcs.UpdateBucket",title:"UpdateBucket",readme:!1},{path:"/plugins/plugin-gcp/tasks/gcs/io.kestra.plugin.gcp.gcs.Upload",title:"Upload",readme:!1}]},{title:"Gke",children:[{path:"/plugins/plugin-gcp/tasks/gke/io.kestra.plugin.gcp.gke.ClusterMetadata",title:"ClusterMetadata",readme:!1}]},{title:"Vertexai",children:[{path:"/plugins/plugin-gcp/tasks/vertexai/io.kestra.plugin.gcp.vertexai.CustomJob",title:"CustomJob",readme:!1}]}]},{title:"Triggers",children:[{title:"Bigquery",children:[{path:"/plugins/plugin-gcp/triggers/bigquery/io.kestra.plugin.gcp.bigquery.Trigger",title:"Trigger",readme:!1}]},{title:"Gcs",children:[{path:"/plugins/plugin-gcp/triggers/gcs/io.kestra.plugin.gcp.gcs.Trigger",title:"Trigger",readme:!1}]}]}]},{path:"/plugins/plugin-googleworkspace/",title:"Plugin googleworkspace",readme:!0,children:[{title:"Tasks",children:[{title:"Drive",children:[{path:"/plugins/plugin-googleworkspace/tasks/drive/io.kestra.plugin.googleworkspace.drive.Create",title:"Create",readme:!1},{path:"/plugins/plugin-googleworkspace/tasks/drive/io.kestra.plugin.googleworkspace.drive.Delete",title:"Delete",readme:!1},{path:"/plugins/plugin-googleworkspace/tasks/drive/io.kestra.plugin.googleworkspace.drive.Download",title:"Download",readme:!1},{path:"/plugins/plugin-googleworkspace/tasks/drive/io.kestra.plugin.googleworkspace.drive.Export",title:"Export",readme:!1},{path:"/plugins/plugin-googleworkspace/tasks/drive/io.kestra.plugin.googleworkspace.drive.List",title:"List",readme:!1},{path:"/plugins/plugin-googleworkspace/tasks/drive/io.kestra.plugin.googleworkspace.drive.Upload",title:"Upload",readme:!1}]},{title:"Sheets",children:[{path:"/plugins/plugin-googleworkspace/tasks/sheets/io.kestra.plugin.googleworkspace.sheets.Read",title:"Read",readme:!1},{path:"/plugins/plugin-googleworkspace/tasks/sheets/io.kestra.plugin.googleworkspace.sheets.ReadRange",title:"ReadRange",readme:!1}]}]}]},{path:"/plugins/plugin-jdbc-clickhouse/",title:"Plugin jdbc clickhouse",readme:!0,children:[{title:"Tasks",children:[{path:"/plugins/plugin-jdbc-clickhouse/tasks/io.kestra.plugin.jdbc.clickhouse.Query",title:"Query",readme:!1}]}]},{path:"/plugins/plugin-jdbc-mysql/",title:"Plugin jdbc mysql",readme:!0,children:[{title:"Tasks",children:[{path:"/plugins/plugin-jdbc-mysql/tasks/io.kestra.plugin.jdbc.mysql.Query",title:"Query",readme:!1}]}]},{path:"/plugins/plugin-jdbc-oracle/",title:"Plugin jdbc oracle",readme:!0,children:[{title:"Tasks",children:[{path:"/plugins/plugin-jdbc-oracle/tasks/io.kestra.plugin.jdbc.oracle.Query",title:"Query",readme:!1}]}]},{path:"/plugins/plugin-jdbc-postgres/",title:"Plugin jdbc postgres",readme:!0,children:[{title:"Tasks",children:[{title:"L",children:[{path:"/plugins/plugin-jdbc-postgres/tasks/l/io.kestra.plugin.jdbc.postgresql.CopyIn",title:"CopyIn",readme:!1},{path:"/plugins/plugin-jdbc-postgres/tasks/l/io.kestra.plugin.jdbc.postgresql.CopyOut",title:"CopyOut",readme:!1},{path:"/plugins/plugin-jdbc-postgres/tasks/l/io.kestra.plugin.jdbc.postgresql.Query",title:"Query",readme:!1}]}]}]},{path:"/plugins/plugin-jdbc-redshift/",title:"Plugin jdbc redshift",readme:!0,children:[{title:"Tasks",children:[{path:"/plugins/plugin-jdbc-redshift/tasks/io.kestra.plugin.jdbc.redshift.Query",title:"Query",readme:!1}]}]},{path:"/plugins/plugin-jdbc-vertica/",title:"Plugin jdbc vertica",readme:!0,children:[{title:"Tasks",children:[{path:"/plugins/plugin-jdbc-vertica/tasks/io.kestra.plugin.jdbc.vertica.Query",title:"Query",readme:!1}]}]},{path:"/plugins/plugin-kubernetes/",title:"Plugin kubernetes",readme:!0,children:[{title:"Tasks",children:[{path:"/plugins/plugin-kubernetes/tasks/io.kestra.plugin.kubernetes.JobCreate",title:"JobCreate",readme:!1},{path:"/plugins/plugin-kubernetes/tasks/io.kestra.plugin.kubernetes.PodCreate",title:"PodCreate",readme:!1}]}]},{path:"/plugins/plugin-mongodb/",title:"Plugin mongodb",readme:!0,children:[{title:"Tasks",children:[{path:"/plugins/plugin-mongodb/tasks/io.kestra.plugin.mongodb.Bulk",title:"Bulk",readme:!1},{path:"/plugins/plugin-mongodb/tasks/io.kestra.plugin.mongodb.Delete",title:"Delete",readme:!1},{path:"/plugins/plugin-mongodb/tasks/io.kestra.plugin.mongodb.Find",title:"Find",readme:!1},{path:"/plugins/plugin-mongodb/tasks/io.kestra.plugin.mongodb.InsertOne",title:"InsertOne",readme:!1},{path:"/plugins/plugin-mongodb/tasks/io.kestra.plugin.mongodb.Load",title:"Load",readme:!1},{path:"/plugins/plugin-mongodb/tasks/io.kestra.plugin.mongodb.Update",title:"Update",readme:!1}]}]},{path:"/plugins/plugin-notifications/",title:"Plugin notifications",readme:!0,children:[{title:"Tasks",children:[{title:"Mail",children:[{path:"/plugins/plugin-notifications/tasks/mail/io.kestra.plugin.notifications.mail.MailExecution",title:"MailExecution",readme:!1},{path:"/plugins/plugin-notifications/tasks/mail/io.kestra.plugin.notifications.mail.MailSend",title:"MailSend",readme:!1},{path:"/plugins/plugin-notifications/tasks/mail/io.kestra.plugin.notifications.mail.MailTemplate",title:"MailTemplate",readme:!1}]},{title:"Slack",children:[{path:"/plugins/plugin-notifications/tasks/slack/io.kestra.plugin.notifications.slack.SlackExecution",title:"SlackExecution",readme:!1},{path:"/plugins/plugin-notifications/tasks/slack/io.kestra.plugin.notifications.slack.SlackIncomingWebhook",title:"SlackIncomingWebhook",readme:!1},{path:"/plugins/plugin-notifications/tasks/slack/io.kestra.plugin.notifications.slack.SlackTemplate",title:"SlackTemplate",readme:!1}]}]}]},{path:"/plugins/plugin-script-groovy/",title:"Plugin script groovy",readme:!0,children:[{title:"Tasks",children:[{path:"/plugins/plugin-script-groovy/tasks/io.kestra.plugin.scripts.groovy.Eval",title:"Eval",readme:!1},{path:"/plugins/plugin-script-groovy/tasks/io.kestra.plugin.scripts.groovy.FileTransform",title:"FileTransform",readme:!1}]}]},{path:"/plugins/plugin-script-jython/",title:"Plugin script jython",readme:!0,children:[{title:"Tasks",children:[{path:"/plugins/plugin-script-jython/tasks/io.kestra.plugin.scripts.jython.Eval",title:"Eval",readme:!1},{path:"/plugins/plugin-script-jython/tasks/io.kestra.plugin.scripts.jython.FileTransform",title:"FileTransform",readme:!1}]}]},{path:"/plugins/plugin-script-nashorn/",title:"Plugin script nashorn",readme:!0,children:[{title:"Tasks",children:[{path:"/plugins/plugin-script-nashorn/tasks/io.kestra.plugin.scripts.nashorn.Eval",title:"Eval",readme:!1},{path:"/plugins/plugin-script-nashorn/tasks/io.kestra.plugin.scripts.nashorn.FileTransform",title:"FileTransform",readme:!1}]}]},{path:"/plugins/plugin-serdes/",title:"Plugin serdes",readme:!0,children:[{title:"Tasks",children:[{title:"Avro",children:[{path:"/plugins/plugin-serdes/tasks/avro/io.kestra.plugin.serdes.avro.AvroReader",title:"AvroReader",readme:!1},{path:"/plugins/plugin-serdes/tasks/avro/io.kestra.plugin.serdes.avro.AvroWriter",title:"AvroWriter",readme:!1}]},{title:"Csv",children:[{path:"/plugins/plugin-serdes/tasks/csv/io.kestra.plugin.serdes.csv.CsvReader",title:"CsvReader",readme:!1},{path:"/plugins/plugin-serdes/tasks/csv/io.kestra.plugin.serdes.csv.CsvWriter",title:"CsvWriter",readme:!1}]},{title:"Json",children:[{path:"/plugins/plugin-serdes/tasks/json/io.kestra.plugin.serdes.json.JsonReader",title:"JsonReader",readme:!1},{path:"/plugins/plugin-serdes/tasks/json/io.kestra.plugin.serdes.json.JsonWriter",title:"JsonWriter",readme:!1}]},{title:"Xml",children:[{path:"/plugins/plugin-serdes/tasks/xml/io.kestra.plugin.serdes.xml.XmlReader",title:"XmlReader",readme:!1},{path:"/plugins/plugin-serdes/tasks/xml/io.kestra.plugin.serdes.xml.XmlWriter",title:"XmlWriter",readme:!1}]}]}]},{path:"/plugins/plugin-singer/",title:"Plugin singer",readme:!0,children:[{title:"Tasks",children:[{title:"Taps",children:[{path:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.BigQuery",title:"BigQuery",readme:!1},{path:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.BingAds",title:"BingAds",readme:!1},{path:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.ChargeBee",title:"ChargeBee",readme:!1},{path:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.ExchangeRateHost",title:"ExchangeRateHost",readme:!1},{path:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.FacebookAds",title:"FacebookAds",readme:!1},{path:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.Fastly",title:"Fastly",readme:!1},{path:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.GitHub",title:"GitHub",readme:!1},{path:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.Gitlab",title:"Gitlab",readme:!1},{path:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.GoogleAdwords",title:"GoogleAdwords",readme:!1},{path:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.GoogleAnalytics",title:"GoogleAnalytics",readme:!1},{path:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.GoogleSearchConsole",title:"GoogleSearchConsole",readme:!1},{path:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.Marketo",title:"Marketo",readme:!1},{path:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.PipelinewiseMongoDb",title:"PipelinewiseMongoDb",readme:!1},{path:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.PipelinewiseMysql",title:"PipelinewiseMysql",readme:!1},{path:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.PipelinewisePostgres",title:"PipelinewisePostgres",readme:!1},{path:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.Quickbooks",title:"Quickbooks",readme:!1},{path:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.Recharge",title:"Recharge",readme:!1},{path:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.SageIntacct",title:"SageIntacct",readme:!1},{path:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.Salesforce",title:"Salesforce",readme:!1},{path:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.Shopify",title:"Shopify",readme:!1},{path:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.Slack",title:"Slack",readme:!1},{path:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.Stripe",title:"Stripe",readme:!1},{path:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.Zendesk",title:"Zendesk",readme:!1},{path:"/plugins/plugin-singer/tasks/taps/io.kestra.plugin.singer.taps.Zoom",title:"Zoom",readme:!1}]},{title:"Targets",children:[{path:"/plugins/plugin-singer/tasks/targets/io.kestra.plugin.singer.targets.AdswerveBigQuery",title:"AdswerveBigQuery",readme:!1},{path:"/plugins/plugin-singer/tasks/targets/io.kestra.plugin.singer.targets.Csv",title:"Csv",readme:!1},{path:"/plugins/plugin-singer/tasks/targets/io.kestra.plugin.singer.targets.DatamillCoPostgres",title:"DatamillCoPostgres",readme:!1},{path:"/plugins/plugin-singer/tasks/targets/io.kestra.plugin.singer.targets.Json",title:"Json",readme:!1},{path:"/plugins/plugin-singer/tasks/targets/io.kestra.plugin.singer.targets.MeltanoSnowflake",title:"MeltanoSnowflake",readme:!1},{path:"/plugins/plugin-singer/tasks/targets/io.kestra.plugin.singer.targets.PipelinewisePostgres",title:"PipelinewisePostgres",readme:!1},{path:"/plugins/plugin-singer/tasks/targets/io.kestra.plugin.singer.targets.PipelinewiseRedshift",title:"PipelinewiseRedshift",readme:!1}]}]}]}]}],"/docs/":[{title:"Documentation",path:"/docs",collapsable:!1,sidebarDepth:1,children:[{path:"/docs/",title:"What’s Kestra?",readme:!0,order:0},{path:"/docs/getting-started/",title:"Getting Started",readme:!0,order:1},{path:"/docs/concepts/",title:"Concepts",readme:!0,order:2,children:[{path:"/docs/concepts/flows",title:"Flow",readme:!1,order:1},{path:"/docs/concepts/executions",title:"Execution",readme:!1,order:2}]},{path:"/docs/architecture/",title:"Architecture",readme:!0,order:3},{path:"/docs/developer-guide/",title:"Developer Guide",readme:!0,order:4,children:[{path:"/docs/developer-guide/flow/",title:"Flow",readme:!0,order:1},{path:"/docs/developer-guide/flowable/",title:"Flowable Task",readme:!0,order:2},{path:"/docs/developer-guide/variables/",title:"Variables",readme:!0,order:2,children:[{path:"/docs/developer-guide/variables/basic-usage",title:"Basic Usage",readme:!1,order:1},{path:"/docs/developer-guide/variables/filter/",title:"Filter",readme:!0,order:2,children:[{path:"/docs/developer-guide/variables/filter/abbreviate",title:"abbreviate",readme:!1},{path:"/docs/developer-guide/variables/filter/abs",title:"abs",readme:!1},{path:"/docs/developer-guide/variables/filter/base64decode",title:"base64decode",readme:!1},{path:"/docs/developer-guide/variables/filter/base64encode",title:"base64encode",readme:!1},{path:"/docs/developer-guide/variables/filter/capitalize",title:"capitalize",readme:!1},{path:"/docs/developer-guide/variables/filter/chunk",title:"chunk",readme:!1},{path:"/docs/developer-guide/variables/filter/date",title:"date",readme:!1},{path:"/docs/developer-guide/variables/filter/dateAdd",title:"dateAdd",readme:!1},{path:"/docs/developer-guide/variables/filter/default",title:"default",readme:!1},{path:"/docs/developer-guide/variables/filter/first",title:"first",readme:!1},{path:"/docs/developer-guide/variables/filter/join",title:"join",readme:!1},{path:"/docs/developer-guide/variables/filter/jq",title:"jq",readme:!1},{path:"/docs/developer-guide/variables/filter/json",title:"json",readme:!1},{path:"/docs/developer-guide/variables/filter/last",title:"last",readme:!1},{path:"/docs/developer-guide/variables/filter/length",title:"length",readme:!1},{path:"/docs/developer-guide/variables/filter/lower",title:"lower",readme:!1},{path:"/docs/developer-guide/variables/filter/merge",title:"merge",readme:!1},{path:"/docs/developer-guide/variables/filter/numberFormat",title:"numberFormat",readme:!1},{path:"/docs/developer-guide/variables/filter/replace",title:"replace",readme:!1},{path:"/docs/developer-guide/variables/filter/reverse",title:"reverse",readme:!1},{path:"/docs/developer-guide/variables/filter/rsort",title:"rsort",readme:!1},{path:"/docs/developer-guide/variables/filter/sha256",title:"sha256",readme:!1},{path:"/docs/developer-guide/variables/filter/slice",title:"slice",readme:!1},{path:"/docs/developer-guide/variables/filter/slugify",title:"slugify",readme:!1},{path:"/docs/developer-guide/variables/filter/sort",title:"sort",readme:!1},{path:"/docs/developer-guide/variables/filter/split",title:"split",readme:!1},{path:"/docs/developer-guide/variables/filter/substringAfter",title:"substringAfter",readme:!1},{path:"/docs/developer-guide/variables/filter/substringAfterLast",title:"substringAfterLast",readme:!1},{path:"/docs/developer-guide/variables/filter/substringBefore",title:"substringBefore",readme:!1},{path:"/docs/developer-guide/variables/filter/substringBeforeLast",title:"substringBeforeLast",readme:!1},{path:"/docs/developer-guide/variables/filter/timestamp",title:"timestamp",readme:!1},{path:"/docs/developer-guide/variables/filter/timestampMicro",title:"timestampmicro",readme:!1},{path:"/docs/developer-guide/variables/filter/timestampNano",title:"timestampnano",readme:!1},{path:"/docs/developer-guide/variables/filter/title",title:"title",readme:!1},{path:"/docs/developer-guide/variables/filter/trim",title:"trim",readme:!1},{path:"/docs/developer-guide/variables/filter/upper",title:"upper",readme:!1},{path:"/docs/developer-guide/variables/filter/urlencode",title:"urlencode",readme:!1}]},{path:"/docs/developer-guide/variables/function/",title:"Function",readme:!0,order:3,children:[{path:"/docs/developer-guide/variables/function/block",title:"block",readme:!1},{path:"/docs/developer-guide/variables/function/json",title:"json",readme:!1},{path:"/docs/developer-guide/variables/function/max",title:"max",readme:!1},{path:"/docs/developer-guide/variables/function/min",title:"min",readme:!1},{path:"/docs/developer-guide/variables/function/now",title:"now",readme:!1},{path:"/docs/developer-guide/variables/function/parent",title:"parent",readme:!1},{path:"/docs/developer-guide/variables/function/range",title:"range",readme:!1}]},{path:"/docs/developer-guide/variables/operator/",title:"Operators",readme:!0,order:3,children:[{path:"/docs/developer-guide/variables/operator/comparisons",title:"Comparisons",readme:!1},{path:"/docs/developer-guide/variables/operator/concat",title:"concat",readme:!1},{path:"/docs/developer-guide/variables/operator/contains",title:"contains",readme:!1},{path:"/docs/developer-guide/variables/operator/is",title:"is",readme:!1},{path:"/docs/developer-guide/variables/operator/logic",title:"Logic",readme:!1},{path:"/docs/developer-guide/variables/operator/math",title:"Math",readme:!1},{path:"/docs/developer-guide/variables/operator/not",title:"not",readme:!1},{path:"/docs/developer-guide/variables/operator/null-coalescing",title:"Null-Coalescing operator",readme:!1},{path:"/docs/developer-guide/variables/operator/ternary-operator",title:"Ternary operator",readme:!1}]},{path:"/docs/developer-guide/variables/tag/",title:"Tags",readme:!0,order:4,children:[{path:"/docs/developer-guide/variables/tag/block",title:"block",readme:!1},{path:"/docs/developer-guide/variables/tag/filter",title:"filter",readme:!1},{path:"/docs/developer-guide/variables/tag/for",title:"for",readme:!1},{path:"/docs/developer-guide/variables/tag/if",title:"if",readme:!1},{path:"/docs/developer-guide/variables/tag/macro",title:"macro",readme:!1},{path:"/docs/developer-guide/variables/tag/set",title:"set",readme:!1},{path:"/docs/developer-guide/variables/tag/verbatim",title:"verbatim",readme:!1}]},{path:"/docs/developer-guide/variables/test/",title:"Tests",readme:!0,order:5,children:[{path:"/docs/developer-guide/variables/test/defined",title:"defined",readme:!1},{path:"/docs/developer-guide/variables/test/empty",title:"empty",readme:!1},{path:"/docs/developer-guide/variables/test/even",title:"even",readme:!1},{path:"/docs/developer-guide/variables/test/iterable",title:"iterable",readme:!1},{path:"/docs/developer-guide/variables/test/json",title:"json",readme:!1},{path:"/docs/developer-guide/variables/test/map",title:"map",readme:!1},{path:"/docs/developer-guide/variables/test/null",title:"null",readme:!1},{path:"/docs/developer-guide/variables/test/odd",title:"odd",readme:!1}]},{path:"/docs/developer-guide/variables/deprecated-handlebars/",title:"Deprecated Handlebars",readme:!0,order:10,children:[{path:"/docs/developer-guide/variables/deprecated-handlebars/use",title:"Use variables",readme:!1,order:1},{path:"/docs/developer-guide/variables/deprecated-handlebars/string",title:"String functions",readme:!1,order:2},{path:"/docs/developer-guide/variables/deprecated-handlebars/number",title:"Number functions",readme:!1,order:3},{path:"/docs/developer-guide/variables/deprecated-handlebars/date",title:"Date functions",readme:!1,order:4},{path:"/docs/developer-guide/variables/deprecated-handlebars/boolean",title:"Boolean functions",readme:!1,order:5},{path:"/docs/developer-guide/variables/deprecated-handlebars/iterations",title:"Iterations functions",readme:!1,order:6},{path:"/docs/developer-guide/variables/deprecated-handlebars/json",title:"JSON functions",readme:!1,order:7},{path:"/docs/developer-guide/variables/deprecated-handlebars/vars",title:"Vars functions",readme:!1,order:8}]}]},{path:"/docs/developer-guide/inputs/",title:"Inputs",readme:!0,order:3},{path:"/docs/developer-guide/outputs/",title:"Outputs",readme:!0,order:4},{path:"/docs/developer-guide/errors-handling/",title:"Errors handling",readme:!0,order:5},{path:"/docs/developer-guide/triggers/",title:"Triggers & schedule",readme:!0,order:5,children:[{path:"/docs/developer-guide/triggers/flow",title:"Flow trigger",readme:!1},{path:"/docs/developer-guide/triggers/schedule",title:"Schedule",readme:!1},{path:"/docs/developer-guide/triggers/webhook",title:"Webhook",readme:!1}]},{path:"/docs/developer-guide/retries/",title:"Retries",readme:!0,order:6},{path:"/docs/developer-guide/conditions/",title:"Conditions",readme:!0,order:7},{path:"/docs/developer-guide/listeners/",title:"Listeners",readme:!0,order:8},{path:"/docs/developer-guide/templates/",title:"Templates",readme:!0,order:9},{path:"/docs/developer-guide/helpers/",title:"Helpers",readme:!0,order:10},{path:"/docs/developer-guide/documentation/",title:"Document your flow",readme:!0,order:11},{path:"/docs/developer-guide/best-practice/",title:"Flow best practice",readme:!0,order:12}]},{path:"/docs/administrator-guide/",title:"Administrator Guide",readme:!0,order:5,children:[{path:"/docs/administrator-guide/deployment/",title:"Installation guide",readme:!0,order:1,children:[{path:"/docs/administrator-guide/deployment/docker/",title:"Deployment with Docker",readme:!0,order:1},{path:"/docs/administrator-guide/deployment/kubernetes/",title:"Deployment on Kubernetes",readme:!0,order:2},{path:"/docs/administrator-guide/deployment/manual/",title:"Manual deployment",readme:!0,order:3}]},{path:"/docs/administrator-guide/servers/",title:"Kestra servers",readme:!0,order:2},{path:"/docs/administrator-guide/configuration/",title:"Configuration",readme:!0,order:3,children:[{path:"/docs/administrator-guide/configuration/kafka/",title:"Kafka configuration",readme:!0,order:1},{path:"/docs/administrator-guide/configuration/elasticsearch/",title:"ElasticSearch configuration",readme:!0,order:2},{path:"/docs/administrator-guide/configuration/storage/",title:"Storage configuration",readme:!0,order:3},{path:"/docs/administrator-guide/configuration/entreprise-edition/",title:"Kestra Entreprise Edition",readme:!0,order:4,children:[{path:"/docs/administrator-guide/configuration/entreprise-edition/secrets/",title:"Secret Manager configuration",readme:!0,order:1},{path:"/docs/administrator-guide/configuration/entreprise-edition/authentifications/",title:"Authentications",readme:!0,order:2},{path:"/docs/administrator-guide/configuration/entreprise-edition/workers/",title:"Worker Isolation configuration",readme:!0,order:3},{path:"/docs/administrator-guide/configuration/entreprise-edition/authentifications/auths/oidc",title:"Open Id Connect (OIDC)",readme:!1},{path:"/docs/administrator-guide/configuration/entreprise-edition/secrets/vault/",title:"Vault configuration",readme:!0}]},{path:"/docs/administrator-guide/configuration/micronaut/",title:"Micronaut configuration",readme:!0,order:4},{path:"/docs/administrator-guide/configuration/others/",title:"Others Kestra configuration",readme:!0,order:5}]},{path:"/docs/administrator-guide/monitoring/",title:"Monitoring & Alerting",readme:!0,order:4}]},{path:"/docs/plugin-developer-guide/",title:"Plugin Developer Guide",readme:!0,order:6,children:[{path:"/docs/plugin-developer-guide/gradle/",title:"Gradle configuration",readme:!0,order:1},{path:"/docs/plugin-developer-guide/runnable-task/",title:"Develop your RunnableTask",readme:!0,order:2},{path:"/docs/plugin-developer-guide/flowable-task/",title:"Develop your FlowableTask",readme:!0,order:3},{path:"/docs/plugin-developer-guide/triggers/",title:"Develop your Trigger",readme:!0,order:4},{path:"/docs/plugin-developer-guide/conditions/",title:"Develop your Condition",readme:!0,order:5},{path:"/docs/plugin-developer-guide/unit-test/",title:"Add unit tests",readme:!0,order:6},{path:"/docs/plugin-developer-guide/outputs/",title:"Outputs & Metrics from a script engine",readme:!0,order:7},{path:"/docs/plugin-developer-guide/build/",title:"Build a plugin",readme:!0,order:8},{path:"/docs/plugin-developer-guide/publish/",title:"Publish a plugin",readme:!0,order:9}]},{path:"/docs/terraform/",title:"Terraform Integration",readme:!0,order:7,children:[{title:"Data Sources",children:[{path:"/docs/terraform/data-sources/binding",title:"kestra_binding",readme:!1},{path:"/docs/terraform/data-sources/flow",title:"kestra_flow",readme:!1},{path:"/docs/terraform/data-sources/group",title:"kestra_group",readme:!1},{path:"/docs/terraform/data-sources/namespace",title:"kestra_namespace",readme:!1},{path:"/docs/terraform/data-sources/role",title:"kestra_role",readme:!1},{path:"/docs/terraform/data-sources/template",title:"kestra_template",readme:!1},{path:"/docs/terraform/data-sources/user",title:"kestra_user",readme:!1}]},{title:"Guides",children:[{path:"/docs/terraform/guides/configurations",title:"Provider configurations",readme:!1},{path:"/docs/terraform/guides/working-with-yaml",title:"Working with Yaml",readme:!1}]},{title:"Resources",children:[{path:"/docs/terraform/resources/binding",title:"kestra_binding",readme:!1},{path:"/docs/terraform/resources/flow",title:"kestra_flow",readme:!1},{path:"/docs/terraform/resources/group",title:"kestra_group",readme:!1},{path:"/docs/terraform/resources/namespace",title:"kestra_namespace",readme:!1},{path:"/docs/terraform/resources/namespace_secret",title:"kestra_namespace_secret",readme:!1},{path:"/docs/terraform/resources/role",title:"kestra_role",readme:!1},{path:"/docs/terraform/resources/template",title:"kestra_template",readme:!1},{path:"/docs/terraform/resources/user",title:"kestra_user",readme:!1},{path:"/docs/terraform/resources/user_password",title:"kestra_user_password",readme:!1}]}]},{path:"/docs/user-interface-guide/",title:"User Interface Guide",readme:!0,order:8}]}]}}};t(364);r.a.component("Badge",(function(){return t.e(25).then(t.bind(null,978))}));var st=function(e){var n=e.Vue;e.router.options.scrollBehavior=function(e,t,i){if(i)return window.scrollTo({top:i.y,behavior:"smooth"});if(!e.hash)return window.scrollTo({top:0,behavior:"smooth"});if(!n.$vuepress.$get("disableScrollBehavior")){var r,a,o,s=e.hash.slice(1),l=document.getElementById(s)||document.querySelector("[name='".concat(s,"']"));return l?window.scrollTo({top:(r=l,a=document.documentElement.getBoundingClientRect(),o=r.getBoundingClientRect(),{x:o.left-a.left,y:o.top-a.top}).y,behavior:"smooth"}):void 0}}},lt=t(209),ut=t.n(lt),ct={name:"BackToTop",props:{threshold:{type:Number,default:300}},data:function(){return{scrollTop:null}},computed:{show:function(){return this.scrollTop>this.threshold}},mounted:function(){var e=this;this.scrollTop=this.getScrollTop(),window.addEventListener("scroll",ut()((function(){e.scrollTop=e.getScrollTop()}),100))},methods:{getScrollTop:function(){return window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0},scrollToTop:function(){window.scrollTo({top:0,behavior:"smooth"}),this.scrollTop=0}}},dt=(t(365),Object(et.a)(ct,(function(){var e=this.$createElement,n=this._self._c||e;return n("transition",{attrs:{name:"fade"}},[this.show?n("svg",{staticClass:"go-to-top",attrs:{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 49.484 28.284"},on:{click:this.scrollToTop}},[n("g",{attrs:{transform:"translate(-229 -126.358)"}},[n("rect",{attrs:{fill:"currentColor",width:"35",height:"5",rx:"2",transform:"translate(229 151.107) rotate(-45)"}}),this._v(" "),n("rect",{attrs:{fill:"currentColor",width:"35",height:"5",rx:"2",transform:"translate(274.949 154.642) rotate(-135)"}})])]):this._e()])}),[],!1,null,"5fd4ef0c",null).exports),pt=(t(366),t(211),t(212),t(213),t(370),t(371),{name:"ChildTableOfContents",props:{header:{type:Boolean,default:!1},pageUrl:{type:String,default:void 0},max:{type:Number,default:void 0},level:{type:Number,default:void 0}},computed:{items:function(){var e=this.pageUrl||this.$page.regularPath;return this.itemChilds(e)}},methods:{allChilds:function(){return this.$site.pages.sort((function(e,n){var t=e.frontmatter&&e.frontmatter.order,i=n.frontmatter&&n.frontmatter.order;return t&&i?t>i?1:-1:0}))},itemChilds:function(e){return this.allChilds().filter((function(n){if(!n.regularPath.startsWith(e)||n.regularPath===e)return!1;var t=n.regularPath.substr(e.length).split("/");return!(!n.regularPath.endsWith("/")||2!==t.length)||!(!n.regularPath.endsWith(".html")||1!==t.length)}))},itemHeaders:function(e){return(e||[]).filter((function(e){return 2===e.level}))},nextLevel:function(){if(void 0!==this.max)return(void 0===this.level?1:this.level)+1},isMax:function(){return void 0!==this.max&&(1===this.max&&void 0===this.level||this.max<=this.level)}}}),gt=Object(et.a)(pt,(function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("ul",e._l(e.items,(function(n){return t("li",{key:n.path},[t("router-link",{attrs:{to:n.path}},[e._v(e._s(n.title||n.path))]),e._v(" "),e.header&&e.itemHeaders(n.headers)?t("ul",e._l(e.itemHeaders(n.headers),(function(i){return t("li",{key:i.slug},[t("router-link",{attrs:{to:n.path+"#"+i.slug}},[e._v(e._s(i.title))])],1)})),0):e._e(),e._v(" "),e.isMax()?e._e():t("child-table-of-contents",{attrs:{"page-url":n.regularPath,header:e.header,max:e.max,level:e.nextLevel()}})],1)})),0)}),[],!1,null,null,null).exports,yt=[function(e){e.Vue,e.options,e.router,e.siteData},{},function(e){e.Vue.mixin({computed:{$dataBlock:function(){return this.$options.__data__block__}}})},{},st,function(e){e.Vue.component("BackToTop",dt)},{},function(e){var n,t,i,r,a,o,s=e.router;"undefined"!=typeof window&&(n=window,t=document,i="script",r="ga",n.GoogleAnalyticsObject=r,n.ga=n.ga||function(){(n.ga.q=n.ga.q||[]).push(arguments)},n.ga.l=1*new Date,a=t.createElement(i),o=t.getElementsByTagName(i)[0],a.async=1,a.src="https://www.google-analytics.com/analytics.js",o.parentNode.insertBefore(a,o),ga("create","UA-56021-9","auto"),ga("set","anonymizeIp",!0),s.afterEach((function(e){ga("set","page",s.app.$withBase(e.fullPath)),ga("send","pageview")})))},function(e){e.Vue.component("ChildTableOfContents",gt)},function(e){e.Vue.component("CodeCopy",nt)}],mt=["BackToTop"];t(214);t(201);function Mt(e,n){return(Mt=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}t(202),t(203);function ht(e){return(ht=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function Tt(e,n){if(n&&("object"===Ke(n)||"function"==typeof n))return n;if(void 0!==n)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function It(e){var n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var t,i=ht(e);if(n){var r=ht(this).constructor;t=Reflect.construct(i,arguments,r)}else t=i.apply(this,arguments);return Tt(this,t)}}var ft=function(e){!function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),n&&Mt(e,n)}(t,e);var n=It(t);function t(){return En(this,t),n.apply(this,arguments)}return Yn(t)}(function(){function e(){En(this,e),this.store=new r.a({data:{state:{}}})}return Yn(e,[{key:"$get",value:function(e){return this.store.state[e]}},{key:"$set",value:function(e,n){r.a.set(this.store.state,e,n)}},{key:"$emit",value:function(){var e;(e=this.store).$emit.apply(e,arguments)}},{key:"$on",value:function(){var e;(e=this.store).$on.apply(e,arguments)}}]),e}());Object.assign(ft.prototype,{getPageAsyncComponent:gn,getLayoutAsyncComponent:yn,getAsyncComponent:mn,getVueComponent:Mn});var Nt={install:function(e){var n=new ft;e.$vuepress=n,e.prototype.$vuepress=n}};t(128),t(217);function jt(e){e.beforeEach((function(n,t,i){if(wt(e,n.path))i();else if(/(\/|\.html)$/.test(n.path))if(/\/$/.test(n.path)){var r=n.path.replace(/\/$/,"")+".html";wt(e,r)?i(r):i()}else i();else{var a=n.path+"/",o=n.path+".html";wt(e,o)?i(o):wt(e,a)?i(a):i()}}))}function wt(e,n){var t=n.toLowerCase();return e.options.routes.some((function(e){return e.path.toLowerCase()===t}))}var Lt={props:{pageKey:String,slotKey:{type:String,default:"default"}},render:function(e){var n=this.pageKey||this.$parent.$page.key;return Tn("pageKey",n),r.a.component(n)||r.a.component(n,gn(n)),r.a.component(n)?e(n):e("")}},Dt={functional:!0,props:{slotKey:String,required:!0},render:function(e,n){var t=n.props,i=n.slots;return e("div",{class:["content__".concat(t.slotKey)]},i()[t.slotKey])}},zt={computed:{openInNewWindowTitle:function(){return this.$themeLocaleConfig.openNewWindowText||"(opens new window)"}}},bt=(t(373),t(374),Object(et.a)(zt,(function(){var e=this.$createElement,n=this._self._c||e;return n("span",[n("svg",{staticClass:"icon outbound",attrs:{xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",focusable:"false",x:"0px",y:"0px",viewBox:"0 0 100 100",width:"15",height:"15"}},[n("path",{attrs:{fill:"currentColor",d:"M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"}}),this._v(" "),n("polygon",{attrs:{fill:"currentColor",points:"45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"}})]),this._v(" "),n("span",{staticClass:"sr-only"},[this._v(this._s(this.openInNewWindowTitle))])])}),[],!1,null,null,null).exports);function kt(){return(kt=Object(i.a)(regeneratorRuntime.mark((function e(n){var t,i,a,o;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t="undefined"!=typeof window&&window.__VUEPRESS_ROUTER_BASE__?window.__VUEPRESS_ROUTER_BASE__:ot.routerBase||ot.base,jt(i=new Je({base:t,mode:"history",fallback:!1,routes:at,scrollBehavior:function(e,n,t){return t||(e.hash?!r.a.$vuepress.$get("disableScrollBehavior")&&{selector:decodeURIComponent(e.hash)}:{x:0,y:0})}})),a={},e.prev=4,e.next=7,Promise.all(yt.filter((function(e){return"function"==typeof e})).map((function(e){return e({Vue:r.a,options:a,router:i,siteData:ot,isServer:n})})));case 7:e.next=12;break;case 9:e.prev=9,e.t0=e.catch(4),console.error(e.t0);case 12:return o=new r.a(Object.assign(a,{router:i,render:function(e){return e("div",{attrs:{id:"app"}},[e("RouterView",{ref:"layout"}),e("div",{class:"global-ui"},mt.map((function(n){return e(n)})))])}})),e.abrupt("return",{app:o,router:i});case 14:case"end":return e.stop()}}),e,null,[[4,9]])})))).apply(this,arguments)}r.a.config.productionTip=!1,r.a.use(Je),r.a.use(Nt),r.a.mixin(function(e,n){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:r.a;He(n),t.$vuepress.$set("siteData",n);var i=e(t.$vuepress.$get("siteData")),a=new i,o=Object.getOwnPropertyDescriptors(Object.getPrototypeOf(a)),s={};return Object.keys(o).reduce((function(e,n){return n.startsWith("$")&&(e[n]=o[n].get),e}),s),{computed:s}}((function(e){return function(){function n(){En(this,n)}return Yn(n,[{key:"setPage",value:function(e){this.__page=e}},{key:"$site",get:function(){return e}},{key:"$themeConfig",get:function(){return this.$site.themeConfig}},{key:"$frontmatter",get:function(){return this.$page.frontmatter}},{key:"$localeConfig",get:function(){var e,n,t=this.$site.locales,i=void 0===t?{}:t;for(var r in i)"/"===r?n=i[r]:0===this.$page.path.indexOf(r)&&(e=i[r]);return e||n||{}}},{key:"$siteTitle",get:function(){return this.$localeConfig.title||this.$site.title||""}},{key:"$canonicalUrl",get:function(){var e=this.$page.frontmatter.canonicalUrl;return"string"==typeof e&&e}},{key:"$title",get:function(){var e=this.$page,n=this.$page.frontmatter.metaTitle;if("string"==typeof n)return n;var t=this.$siteTitle,i=e.frontmatter.home?null:e.frontmatter.title||e.title;return t?i?i+" | "+t:t:i||"VuePress"}},{key:"$description",get:function(){var e=function(e){if(e){var n=e.filter((function(e){return"description"===e.name}))[0];if(n)return n.content}}(this.$page.frontmatter.meta);return e||(this.$page.frontmatter.description||this.$localeConfig.description||this.$site.description||"")}},{key:"$lang",get:function(){return this.$page.frontmatter.lang||this.$localeConfig.lang||"en-US"}},{key:"$localePath",get:function(){return this.$localeConfig.path||"/"}},{key:"$themeLocaleConfig",get:function(){return(this.$site.themeConfig.locales||{})[this.$localePath]||{}}},{key:"$page",get:function(){return this.__page?this.__page:function(e,n){for(var t=0;t<e.length;t++){var i=e[t];if(i.path.toLowerCase()===n.toLowerCase())return i}return{path:"",frontmatter:{}}}(this.$site.pages,this.$route.path)}}]),n}()}),ot)),r.a.component("Content",Lt),r.a.component("ContentSlotsDistributor",Dt),r.a.component("OutboundLink",bt),r.a.component("ClientOnly",{functional:!0,render:function(e,n){var t=n.parent,i=n.children;if(t._isMounted)return i;t.$once("hook:mounted",(function(){t.$forceUpdate()}))}}),r.a.component("Layout",yn("Layout")),r.a.component("NotFound",yn("NotFound")),r.a.prototype.$withBase=function(e){var n=this.$site.base;return"/"===e.charAt(0)?n+e.slice(1):e},window.__VUEPRESS__={version:"1.9.5",hash:"d1bc65805"},function(e){return kt.apply(this,arguments)}(!1).then((function(e){var n=e.app;e.router.onReady((function(){n.$mount("#app")}))}))}]);