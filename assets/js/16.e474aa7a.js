(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{244:function(a,s,t){"use strict";t.r(s);var e=t(0),r=Object(e.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"dynamic-functions"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dynamic-functions"}},[a._v("#")]),a._v(" Dynamic functions")]),a._v(" "),t("p",[a._v("This section discuss about what features the templating system allows you to do. This templating system is based on "),t("a",{attrs:{href:"https://handlebarsjs.com/",target:"_blank",rel:"noopener noreferrer"}},[a._v("handlebars"),t("OutboundLink")],1),a._v(". It adds extra features to the handlebars core features by defining extra custom functions related to kestra operations.")]),a._v(" "),t("p",[a._v("Handlebars templating system is a composable system that lets you assemble complex templates to generate rich output. In Kestra context the computed template result is used for input and output data between flows.")]),a._v(" "),t("h2",{attrs:{id:"boolean-operations"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#boolean-operations"}},[a._v("#")]),a._v(" Boolean operations")]),a._v(" "),t("h3",{attrs:{id:"equality"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#equality"}},[a._v("#")]),a._v(" Equality")]),a._v(" "),t("p",[a._v("Test if two elements are equals. Usage:")]),a._v(" "),t("p",[a._v("Render 'yes' or 'no':")]),a._v(" "),t("div",{staticClass:"language-handlebars extra-class"},[t("pre",{pre:!0,attrs:{class:"language-handlebars"}},[t("code",[a._v("  "),t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token block keyword"}},[a._v("#eq")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("a")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("b")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n    yes\n  "),t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("else")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n    no\n  "),t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token block keyword"}},[a._v("/eq")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n")])])]),t("p",[a._v("Render 'true' or 'false':")]),a._v(" "),t("div",{staticClass:"language-handlebars extra-class"},[t("pre",{pre:!0,attrs:{class:"language-handlebars"}},[t("code",[a._v("  "),t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("eq")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("a")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("b")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n")])])]),t("p",[a._v("Render 'y' or 'n':")]),a._v(" "),t("div",{staticClass:"language-handlebars extra-class"},[t("pre",{pre:!0,attrs:{class:"language-handlebars"}},[t("code",[a._v("  "),t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("eq")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("a")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("b")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("yes")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'y'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("no")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'n'")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n")])])]),t("h3",{attrs:{id:"not-equality"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#not-equality"}},[a._v("#")]),a._v(" Not equality")]),a._v(" "),t("p",[a._v("Test if two elements are NOT equals. Usage:")]),a._v(" "),t("p",[a._v("Render 'yes' or 'no':")]),a._v(" "),t("div",{staticClass:"language-handlebars extra-class"},[t("pre",{pre:!0,attrs:{class:"language-handlebars"}},[t("code",[a._v("  "),t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token block keyword"}},[a._v("#neq")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("a")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("b")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n    yes\n  "),t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("else")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n    no\n  "),t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token block keyword"}},[a._v("/neq")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n")])])]),t("p",[a._v("Render 'true' or 'false':")]),a._v(" "),t("div",{staticClass:"language-handlebars extra-class"},[t("pre",{pre:!0,attrs:{class:"language-handlebars"}},[t("code",[a._v("  "),t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("neq")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("a")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("b")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n")])])]),t("p",[a._v("Render 'y' or 'n':")]),a._v(" "),t("div",{staticClass:"language-handlebars extra-class"},[t("pre",{pre:!0,attrs:{class:"language-handlebars"}},[t("code",[a._v("  "),t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("neq")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("a")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("b")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("yes")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'y'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("no")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'n'")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n")])])]),t("h3",{attrs:{id:"greater-operator"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#greater-operator"}},[a._v("#")]),a._v(" Greater operator")]),a._v(" "),t("p",[a._v("Greater operator (arguments must be Comparable elements). Usage:")]),a._v(" "),t("p",[a._v("Render 'yes' or 'no':")]),a._v(" "),t("div",{staticClass:"language-handlebars extra-class"},[t("pre",{pre:!0,attrs:{class:"language-handlebars"}},[t("code",[a._v("  "),t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token block keyword"}},[a._v("#gt")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("a")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("b")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n    yes\n  "),t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("else")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n    no\n  "),t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token block keyword"}},[a._v("/gt")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n")])])]),t("p",[a._v("Render 'true' or 'false':")]),a._v(" "),t("div",{staticClass:"language-handlebars extra-class"},[t("pre",{pre:!0,attrs:{class:"language-handlebars"}},[t("code",[a._v("  "),t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("gt")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("a")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("b")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n")])])]),t("p",[a._v("Render 'y' or 'n':")]),a._v(" "),t("div",{staticClass:"language-handlebars extra-class"},[t("pre",{pre:!0,attrs:{class:"language-handlebars"}},[t("code",[a._v("  "),t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("gte")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("a")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("b")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("yes")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'y'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("no")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'n'")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n")])])]),t("h3",{attrs:{id:"greater-or-equal-operator"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#greater-or-equal-operator"}},[a._v("#")]),a._v(" Greater or equal operator")]),a._v(" "),t("p",[a._v("Greater or equal operator (arguments must be Comparable elements). Usage:")]),a._v(" "),t("p",[a._v("Render 'yes' or 'no':")]),a._v(" "),t("div",{staticClass:"language-handlebars extra-class"},[t("pre",{pre:!0,attrs:{class:"language-handlebars"}},[t("code",[a._v("  "),t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token block keyword"}},[a._v("#gte")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("a")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("b")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n    yes\n  "),t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("else")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n    no\n  "),t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token block keyword"}},[a._v("/gte")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n")])])]),t("p",[a._v("Render 'true' or 'false':")]),a._v(" "),t("div",{staticClass:"language-handlebars extra-class"},[t("pre",{pre:!0,attrs:{class:"language-handlebars"}},[t("code",[a._v("  "),t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("gte")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("a")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("b")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n")])])]),t("p",[a._v("Render 'y' or 'n':")]),a._v(" "),t("div",{staticClass:"language-handlebars extra-class"},[t("pre",{pre:!0,attrs:{class:"language-handlebars"}},[t("code",[a._v("  "),t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("gte")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("a")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("b")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("yes")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'y'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("no")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'n'")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n")])])]),t("h3",{attrs:{id:"less-operator"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#less-operator"}},[a._v("#")]),a._v(" Less operator")]),a._v(" "),t("p",[a._v("Less than operator (arguments must be Comparable elements). Usage:")]),a._v(" "),t("p",[a._v("Render 'yes' or 'no':")]),a._v(" "),t("div",{staticClass:"language-handlebars extra-class"},[t("pre",{pre:!0,attrs:{class:"language-handlebars"}},[t("code",[a._v("  "),t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token block keyword"}},[a._v("#lt")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("a")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("b")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n    yes\n  "),t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("else")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n    no\n  "),t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token block keyword"}},[a._v("/lt")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n")])])]),t("p",[a._v("Render 'true' or 'false':")]),a._v(" "),t("div",{staticClass:"language-handlebars extra-class"},[t("pre",{pre:!0,attrs:{class:"language-handlebars"}},[t("code",[a._v("  "),t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("lt")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("a")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("b")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n")])])]),t("p",[a._v("Render 'y' or 'n':")]),a._v(" "),t("div",{staticClass:"language-handlebars extra-class"},[t("pre",{pre:!0,attrs:{class:"language-handlebars"}},[t("code",[a._v("  "),t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("lt")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("a")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("b")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("yes")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'y'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("no")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'n'")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n")])])]),t("h3",{attrs:{id:"less-or-equal-operator"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#less-or-equal-operator"}},[a._v("#")]),a._v(" Less or equal operator")]),a._v(" "),t("p",[a._v("Less than operator (arguments must be {@link Comparable} elements. Usage:")]),a._v(" "),t("p",[a._v("Render 'yes' or 'no':")]),a._v(" "),t("div",{staticClass:"language-handlebars extra-class"},[t("pre",{pre:!0,attrs:{class:"language-handlebars"}},[t("code",[a._v("  "),t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token block keyword"}},[a._v("#lte")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("a")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("b")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n    yes\n  "),t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("else")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n    no\n  "),t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token block keyword"}},[a._v("/lte")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n")])])]),t("p",[a._v("Render 'true' or 'false':")]),a._v(" "),t("div",{staticClass:"language-handlebars extra-class"},[t("pre",{pre:!0,attrs:{class:"language-handlebars"}},[t("code",[a._v("  "),t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("lte")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("a")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("b")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n")])])]),t("p",[a._v("Render 'y' or 'n':")]),a._v(" "),t("div",{staticClass:"language-handlebars extra-class"},[t("pre",{pre:!0,attrs:{class:"language-handlebars"}},[t("code",[a._v("  "),t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("lte")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("a")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("b")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("yes")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'y'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("no")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'n'")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n")])])]),t("h3",{attrs:{id:"and-operator"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#and-operator"}},[a._v("#")]),a._v(" And operator")]),a._v(" "),t("p",[a._v("And operator. This is a boolean operation.")]),a._v(" "),t("p",[a._v("Truthiness of arguments is determined by isEmpty, so this\nhelper can be used with non-boolean values.")]),a._v(" "),t("p",[a._v("Usage:")]),a._v(" "),t("p",[a._v("Render 'yes' or 'no':")]),a._v(" "),t("div",{staticClass:"language-handlebars extra-class"},[t("pre",{pre:!0,attrs:{class:"language-handlebars"}},[t("code",[a._v("  "),t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token block keyword"}},[a._v("#and")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("a")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("b")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n    yes\n  "),t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("else")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n    no\n  "),t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token block keyword"}},[a._v("/lt")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n")])])]),t("p",[a._v("Multiple arguments are supported too:")]),a._v(" "),t("div",{staticClass:"language-handlebars extra-class"},[t("pre",{pre:!0,attrs:{class:"language-handlebars"}},[t("code",[a._v("  "),t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token block keyword"}},[a._v("#and")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("a")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("b")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("c")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("d")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n    yes\n  "),t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("else")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n    no\n  "),t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token block keyword"}},[a._v("/lt")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n")])])]),t("p",[a._v("Render 'true' or 'false':")]),a._v(" "),t("div",{staticClass:"language-handlebars extra-class"},[t("pre",{pre:!0,attrs:{class:"language-handlebars"}},[t("code",[a._v("  "),t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("and")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("a")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("b")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n")])])]),t("p",[a._v("Render 'y' or 'n':")]),a._v(" "),t("div",{staticClass:"language-handlebars extra-class"},[t("pre",{pre:!0,attrs:{class:"language-handlebars"}},[t("code",[a._v("  "),t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("and")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("a")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("b")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("yes")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'y'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("no")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'n'")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n")])])]),t("h3",{attrs:{id:"or-operator"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#or-operator"}},[a._v("#")]),a._v(" Or operator")]),a._v(" "),t("p",[a._v("Or operator. This is a boolean operation")]),a._v(" "),t("p",[a._v("Truthiness of arguments is determined by isEmpty, so this\nhelper can be used with non-boolean values.")]),a._v(" "),t("p",[a._v("Usage:")]),a._v(" "),t("p",[a._v("Render 'yes' or 'no':")]),a._v(" "),t("div",{staticClass:"language-handlebars extra-class"},[t("pre",{pre:!0,attrs:{class:"language-handlebars"}},[t("code",[a._v("  "),t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token block keyword"}},[a._v("#or")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("a")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("b")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n    yes\n  "),t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("else")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n    no\n  "),t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token block keyword"}},[a._v("/lt")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n")])])]),t("p",[a._v("Multiple arguments are supported too:")]),a._v(" "),t("div",{staticClass:"language-handlebars extra-class"},[t("pre",{pre:!0,attrs:{class:"language-handlebars"}},[t("code",[a._v("  "),t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token block keyword"}},[a._v("#or")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("a")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("b")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("c")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("d")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n    yes\n  "),t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("else")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n    no\n  "),t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token block keyword"}},[a._v("/lt")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n")])])]),t("p",[a._v("Render 'true' or 'false':")]),a._v(" "),t("div",{staticClass:"language-handlebars extra-class"},[t("pre",{pre:!0,attrs:{class:"language-handlebars"}},[t("code",[a._v("  "),t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("or")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("a")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("b")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n")])])]),t("p",[a._v("Render 'y' or 'n':")]),a._v(" "),t("div",{staticClass:"language-handlebars extra-class"},[t("pre",{pre:!0,attrs:{class:"language-handlebars"}},[t("code",[a._v("  "),t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("or")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("a")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("b")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("yes")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'y'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("no")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'n'")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n")])])]),t("h3",{attrs:{id:"not-operator"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#not-operator"}},[a._v("#")]),a._v(" Not operator")]),a._v(" "),t("p",[a._v("Truthiness of arguments is determined by isEmpty, so this\nhelper can be used with non-boolean values.")]),a._v(" "),t("p",[a._v("Usage:")]),a._v(" "),t("p",[a._v("Render 'yes' or 'no':")]),a._v(" "),t("div",{staticClass:"language-handlebars extra-class"},[t("pre",{pre:!0,attrs:{class:"language-handlebars"}},[t("code",[a._v("  "),t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token block keyword"}},[a._v("#not")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("a")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n    yes\n  "),t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("else")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n    no\n  "),t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token block keyword"}},[a._v("/lt")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n")])])]),t("p",[a._v("Render 'true' or 'false':")]),a._v(" "),t("div",{staticClass:"language-handlebars extra-class"},[t("pre",{pre:!0,attrs:{class:"language-handlebars"}},[t("code",[a._v("  "),t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("not")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("a")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n")])])]),t("p",[a._v("Render 'y' or 'n':")]),a._v(" "),t("div",{staticClass:"language-handlebars extra-class"},[t("pre",{pre:!0,attrs:{class:"language-handlebars"}},[t("code",[a._v("  "),t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("not")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("a")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("yes")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'y'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("no")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'n'")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n")])])]),t("h3",{attrs:{id:"compare-operator"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#compare-operator"}},[a._v("#")]),a._v(" Compare operator")]),a._v(" "),t("p",[a._v("Compare to object as comparables.")]),a._v(" "),t("div",{staticClass:"language-handlebars extra-class"},[t("pre",{pre:!0,attrs:{class:"language-handlebars"}},[t("code",[a._v("  "),t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("cmp")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("a")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("b")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n")])])]),t("p",[a._v("Renders 1 if a > b, 0 if a == b -1 if a < b")]),a._v(" "),t("h2",{attrs:{id:"iterations"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#iterations"}},[a._v("#")]),a._v(" Iterations")]),a._v(" "),t("p",[a._v("You can iterate over a list using the built-in each helper. Inside the block, you can use "),t("code",[a._v("this")]),a._v(" to reference the element being iterated over. "),t("code",[a._v("contextualListVariable")]),a._v(" is an iterable item on which the mydata property is displayed for all entries.")]),a._v(" "),t("p",[a._v("The "),t("code",[a._v("@index")]),a._v(" is a special variable available in the each loop context which value is the current index of the element beeing iterated. There are agic* variables like @index in a each context. The following ones are also available: "),t("code",[a._v("@key")]),a._v(" "),t("code",[a._v("@index")]),a._v(" "),t("code",[a._v("@first")]),a._v(" "),t("code",[a._v("@last")]),a._v(" "),t("code",[a._v("@odd")]),a._v(" "),t("code",[a._v("@even")])]),a._v(" "),t("p",[a._v("See handlebars documentation for more about this topic.")]),a._v(" "),t("div",{staticClass:"language-handlebars extra-class"},[t("pre",{pre:!0,attrs:{class:"language-handlebars"}},[t("code",[t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token block keyword"}},[a._v("#each")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("contextualListVariable")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("mydata")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v(" "),t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("@")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("index")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token block keyword"}},[a._v("/each")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n")])])]),t("p",[a._v("will produce")]),a._v(" "),t("div",{staticClass:"language-csv extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("one 0\ntwo 1\nthree 2\ndjango! 3\n")])])]),t("p",[a._v("for the following data sample when")]),a._v(" "),t("div",{staticClass:"language-javascript extra-class"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[a._v("contextualListVariable "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"mydata"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"one"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"mydata"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"two"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"mydata"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"three"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"mydata"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"django!"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n")])])]),t("p",[a._v("If the contextual this is not convinient to use data as you wish it is possible to alias it like below:")]),a._v(" "),t("div",{staticClass:"language-handlebars extra-class"},[t("pre",{pre:!0,attrs:{class:"language-handlebars"}},[t("code",[t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token block keyword"}},[a._v("#each")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("iterableVariable")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("as")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("|")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("myItem")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("|")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("myItem")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("mydata")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token block keyword"}},[a._v("/each")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n")])])]),t("h2",{attrs:{id:"string-helpers"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#string-helpers"}},[a._v("#")]),a._v(" String helpers")]),a._v(" "),t("h3",{attrs:{id:"capitalizes-the-first-character-of-the-value"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#capitalizes-the-first-character-of-the-value"}},[a._v("#")]),a._v(" Capitalizes the first character of the value.")]),a._v(" "),t("p",[a._v("For example:")]),a._v(" "),t("div",{staticClass:"language-handlebars extra-class"},[t("pre",{pre:!0,attrs:{class:"language-handlebars"}},[t("code",[t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("capitalizeFirst")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("value")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n")])])]),t("p",[a._v('If value is "kestra is cool !", the output will be "Kestra is cool !".')]),a._v(" "),t("h3",{attrs:{id:"centers-the-value-in-a-field-of-a-given-width"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#centers-the-value-in-a-field-of-a-given-width"}},[a._v("#")]),a._v(" Centers the value in a field of a given width.")]),a._v(" "),t("p",[a._v("For example:")]),a._v(" "),t("div",{staticClass:"language-handlebars extra-class"},[t("pre",{pre:!0,attrs:{class:"language-handlebars"}},[t("code",[t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("center")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("value")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("size")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("19")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("pad")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"char"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n")])])]),t("p",[a._v('If value is "Handlebars.java", the output will be "  Handlebars.java  ".')]),a._v(" "),t("h3",{attrs:{id:"removes-all-values-of-arg-from-the-given-string"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#removes-all-values-of-arg-from-the-given-string"}},[a._v("#")]),a._v(" Removes all values of arg from the given string.")]),a._v(" "),t("p",[a._v("For example:")]),a._v(" "),t("div",{staticClass:"language-handlebars extra-class"},[t("pre",{pre:!0,attrs:{class:"language-handlebars"}},[t("code",[t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("cut")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("value")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('" "')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n")])])]),t("p",[a._v('If value is "String with spaces", the output will be "Stringwithspaces".')]),a._v(" "),t("h3",{attrs:{id:"default-empty"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#default-empty"}},[a._v("#")]),a._v(" Default empty")]),a._v(" "),t("p",[a._v("If value evaluates to False, uses the given default. Otherwise, uses the\nvalue.")]),a._v(" "),t("p",[a._v("For example:")]),a._v(" "),t("div",{staticClass:"language-handlebars extra-class"},[t("pre",{pre:!0,attrs:{class:"language-handlebars"}},[t("code",[t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("defaultIfEmpty")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("value")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"nothing"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n")])])]),t("p",[a._v('If value is "" (the empty string), the output will be nothing.')]),a._v(" "),t("h3",{attrs:{id:"join-string"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#join-string"}},[a._v("#")]),a._v(" Join string")]),a._v(" "),t("p",[a._v("Joins an array, iterator or an iterable with a string.")]),a._v(" "),t("p",[a._v("For example:")]),a._v(" "),t("div",{staticClass:"language-handlebars extra-class"},[t("pre",{pre:!0,attrs:{class:"language-handlebars"}},[t("code",[t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("join")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("value")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('" // "')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("prefix")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('""')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("suffix")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('""')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n")])])]),t("p",[a._v("If value is the list ['a', 'b', 'c'], the output will be the string \"a // b // c\".")]),a._v(" "),t("p",[a._v("Or:")]),a._v(" "),t("div",{staticClass:"language-handlebars extra-class"},[t("pre",{pre:!0,attrs:{class:"language-handlebars"}},[t("code",[t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("join")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"a"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"b"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"c"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('" // "')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("prefix")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('""')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("suffix")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('""')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n")])])]),t("p",[a._v('Join the "a", "b", "c", the output will be the string "a // b // c".')]),a._v(" "),t("h3",{attrs:{id:"left-aligns-the-value-in-a-field-of-a-given-width"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#left-aligns-the-value-in-a-field-of-a-given-width"}},[a._v("#")]),a._v(" Left-aligns the value in a field of a given width.")]),a._v(" "),t("p",[a._v("Argument: "),t("code",[a._v("field size")])]),a._v(" "),t("p",[a._v("For example:")]),a._v(" "),t("div",{staticClass:"language-handlebars extra-class"},[t("pre",{pre:!0,attrs:{class:"language-handlebars"}},[t("code",[t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("ljust")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("value")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("20")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("pad")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('" "')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n")])])]),t("p",[a._v('If value is Handlebars.java, the output will be "Handlebars.java     ".')]),a._v(" "),t("h3",{attrs:{id:"right-aligns-the-value-in-a-field-of-a-given-width"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#right-aligns-the-value-in-a-field-of-a-given-width"}},[a._v("#")]),a._v(" Right-aligns the value in a field of a given width.")]),a._v(" "),t("p",[a._v("Argument: "),t("code",[a._v("field size")])]),a._v(" "),t("p",[a._v("For example:")]),a._v(" "),t("div",{staticClass:"language-handlebars extra-class"},[t("pre",{pre:!0,attrs:{class:"language-handlebars"}},[t("code",[t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("rjust")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("value")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("20")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("pad")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('" "')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n")])])]),t("p",[a._v('If value is Handlebars.java, the output will be "     Handlebars.java".')]),a._v(" "),t("h3",{attrs:{id:"substring"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#substring"}},[a._v("#")]),a._v(" Substring")]),a._v(" "),t("p",[a._v("Returns a new "),t("code",[a._v("CharSequence")]),a._v(" that is a subsequence of this sequence.\nThe subsequence starts with the "),t("code",[a._v("char")]),a._v(" value at the specified index and\nends with the "),t("code",[a._v("char")]),a._v(" value at nd - 1*")]),a._v(" "),t("p",[a._v("Argument: "),t("code",[a._v("start offset")]),a._v(" "),t("code",[a._v("end offset")])]),a._v(" "),t("p",[a._v("For example:")]),a._v(" "),t("div",{staticClass:"language-handlebars extra-class"},[t("pre",{pre:!0,attrs:{class:"language-handlebars"}},[t("code",[t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("substring")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("value")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("11")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n")])])]),t("p",[a._v('If value is Handlebars.java, the output will be "java".')]),a._v(" "),t("p",[a._v("or")]),a._v(" "),t("div",{staticClass:"language-handlebars extra-class"},[t("pre",{pre:!0,attrs:{class:"language-handlebars"}},[t("code",[t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("substring")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("value")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n")])])]),t("p",[a._v('If value is Handlebars.java, the output will be "Handlebars".')]),a._v(" "),t("h3",{attrs:{id:"converts-a-string-into-all-lowercase"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#converts-a-string-into-all-lowercase"}},[a._v("#")]),a._v(" Converts a string into all lowercase.")]),a._v(" "),t("p",[a._v("For example:")]),a._v(" "),t("div",{staticClass:"language-handlebars extra-class"},[t("pre",{pre:!0,attrs:{class:"language-handlebars"}},[t("code",[t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("lower")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("value")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n")])])]),t("p",[a._v("If value is 'Still MAD At Yoko', the output will be 'still mad at yoko'.")]),a._v(" "),t("h3",{attrs:{id:"converts-a-string-into-all-uppercase"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#converts-a-string-into-all-uppercase"}},[a._v("#")]),a._v(" Converts a string into all uppercase.")]),a._v(" "),t("p",[a._v("For example:")]),a._v(" "),t("div",{staticClass:"language-handlebars extra-class"},[t("pre",{pre:!0,attrs:{class:"language-handlebars"}},[t("code",[t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("upper")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("value")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n")])])]),t("p",[a._v("If value is 'Hello', the output will be 'HELLO'.")]),a._v(" "),t("h1",{attrs:{id:"converts-to-lowercase"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#converts-to-lowercase"}},[a._v("#")]),a._v(" Converts to lowercase")]),a._v(" "),t("p",[a._v("removes non-word characters (alphanumerics and underscores) and converts spaces to hyphens. Also strips leading and trailing whitespace.")]),a._v(" "),t("p",[a._v("For example:")]),a._v(" "),t("div",{staticClass:"language-handlebars extra-class"},[t("pre",{pre:!0,attrs:{class:"language-handlebars"}},[t("code",[t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("slugify")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("value")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n")])])]),t("p",[a._v('If value is "Joel is a slug", the output will be "joel-is-a-slug".')]),a._v(" "),t("h3",{attrs:{id:"formats-the-variable"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#formats-the-variable"}},[a._v("#")]),a._v(" Formats the variable")]),a._v(" "),t("p",[a._v("according to the argument, a string formatting specifier.")]),a._v(" "),t("p",[a._v("For example:")]),a._v(" "),t("div",{staticClass:"language-handlebars extra-class"},[t("pre",{pre:!0,attrs:{class:"language-handlebars"}},[t("code",[t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("stringFormat")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("string")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("param0")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("param1")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("paramN")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n")])])]),t("p",[a._v('If value is "Hello %s" "handlebars.java", the output will be "Hello handlebars.java".')]),a._v(" "),t("h3",{attrs:{id:"strips-all-x-html-tags"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#strips-all-x-html-tags"}},[a._v("#")]),a._v(" Strips all [X]HTML tags.")]),a._v(" "),t("p",[a._v("For example:")]),a._v(" "),t("div",{staticClass:"language-handlebars extra-class"},[t("pre",{pre:!0,attrs:{class:"language-handlebars"}},[t("code",[t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("stripTags")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("value")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n")])])]),t("h3",{attrs:{id:"capitalizes-all-the-whitespace-separated-words-in-a-string"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#capitalizes-all-the-whitespace-separated-words-in-a-string"}},[a._v("#")]),a._v(" Capitalizes all the whitespace separated words in a String.")]),a._v(" "),t("p",[a._v("For example:")]),a._v(" "),t("div",{staticClass:"language-handlebars extra-class"},[t("pre",{pre:!0,attrs:{class:"language-handlebars"}},[t("code",[t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("capitalize")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("value")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("fully")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("false")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n")])])]),t("p",[a._v('If value is "my first post", the output will be "My First Post".')]),a._v(" "),t("h3",{attrs:{id:"truncates-a-string"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#truncates-a-string"}},[a._v("#")]),a._v(" Truncates a string")]),a._v(" "),t("p",[a._v("if it is longer than the specified number of characters.")]),a._v(" "),t("p",[a._v('Truncated strings will end with a translatable ellipsis sequence ("...").')]),a._v(" "),t("p",[a._v("Argument: Number of characters to truncate to")]),a._v(" "),t("p",[a._v("For example:")]),a._v(" "),t("div",{staticClass:"language-handlebars extra-class"},[t("pre",{pre:!0,attrs:{class:"language-handlebars"}},[t("code",[t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("abbreviate")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("value")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("13")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n")])])]),t("p",[a._v('If value is "Handlebars rocks", the output will be "Handlebars...".')]),a._v(" "),t("h3",{attrs:{id:"wraps-words"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#wraps-words"}},[a._v("#")]),a._v(" Wraps words")]),a._v(" "),t("p",[a._v("at specified line length.")]),a._v(" "),t("p",[a._v("Argument: number of characters at which to wrap the text")]),a._v(" "),t("p",[a._v("For example:")]),a._v(" "),t("div",{staticClass:"language-handlebars extra-class"},[t("pre",{pre:!0,attrs:{class:"language-handlebars"}},[t("code",[t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("wordWrap")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("value")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("5")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n")])])]),t("p",[a._v("If value is Joel is a slug, the output would be:")]),a._v(" "),t("div",{staticClass:"language-csv extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("Joel\nis a\nslug\n")])])]),t("h3",{attrs:{id:"replaces"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#replaces"}},[a._v("#")]),a._v(" Replaces")]),a._v(" "),t("p",[a._v("each substring of this string that matches the literal target sequence with the specified literal replacement sequence.")]),a._v(" "),t("p",[a._v("For example:")]),a._v(" "),t("div",{staticClass:"language-handlebars extra-class"},[t("pre",{pre:!0,attrs:{class:"language-handlebars"}},[t("code",[t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("replace")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("value")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"..."')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"rocks"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n")])])]),t("p",[a._v('If value is "Handlebars ...", the output will be "Handlebars rocks".')]),a._v(" "),t("h3",{attrs:{id:"maps-values"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#maps-values"}},[a._v("#")]),a._v(" Maps values")]),a._v(" "),t("p",[a._v('for true, false and (optionally) null, to the strings "yes", "no", "maybe".')]),a._v(" "),t("p",[a._v("For example:")]),a._v(" "),t("div",{staticClass:"language-handlebars extra-class"},[t("pre",{pre:!0,attrs:{class:"language-handlebars"}},[t("code",[t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("yesno")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("value")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("yes")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"yes"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("no")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"no"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("maybe")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"maybe"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n")])])]),t("h3",{attrs:{id:"date-format"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#date-format"}},[a._v("#")]),a._v(" Date format")]),a._v(" "),t("p",[a._v("Usage:")]),a._v(" "),t("div",{staticClass:"language-handlebars extra-class"},[t("pre",{pre:!0,attrs:{class:"language-handlebars"}},[t("code",[t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("dateFormat")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("date")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"format"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("format")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"format"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token brackets"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("tz=timeZone|timeZoneId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")])]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n")])])]),t("p",[a._v("Format parameters is one of:")]),a._v(" "),t("ul",[t("li",[a._v('"full": full date format. For example: Tuesday, June 19, 2012')]),a._v(" "),t("li",[a._v('"long": long date format. For example: June 19, 2012')]),a._v(" "),t("li",[a._v('"medium": medium date format. For example: Jun 19, 2012')]),a._v(" "),t("li",[a._v('"short": short date format. For example: 6/19/12')]),a._v(" "),t("li",[a._v('"pattern": a date pattern.')])]),a._v(" "),t("p",[a._v("Otherwise, the default formatter will be used.\nThe format option can be specified as a parameter or hash (a.k.a named parameter).")]),a._v(" "),t("p",[a._v("Usage:")]),a._v(" "),t("div",{staticClass:"language-handlebars extra-class"},[t("pre",{pre:!0,attrs:{class:"language-handlebars"}},[t("code",[a._v("   "),t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("numberFormat")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("number")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"format"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token brackets"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("locale=default")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")])]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n")])])]),t("p",[a._v("Format parameters is one of:")]),a._v(" "),t("ul",[t("li",[a._v('"integer": the integer number format')]),a._v(" "),t("li",[a._v('"percent": the percent number format')]),a._v(" "),t("li",[a._v('"currency": the decimal number format')]),a._v(" "),t("li",[a._v('"pattern": a decimal pattern.')])]),a._v(" "),t("p",[a._v("Otherwise, the default formatter will be used.")]),a._v(" "),t("p",[a._v("More options:")]),a._v(" "),t("ul",[t("li",[a._v("groupingUsed: Set whether or not grouping will be used in this format.")]),a._v(" "),t("li",[a._v("maximumFractionDigits: Sets the maximum number of digits allowed in the fraction portion of\na number.")]),a._v(" "),t("li",[a._v("maximumIntegerDigits: Sets the maximum number of digits allowed in the integer portion of a\nnumber")]),a._v(" "),t("li",[a._v("minimumFractionDigits: Sets the minimum number of digits allowed in the fraction portion of\na number")]),a._v(" "),t("li",[a._v("minimumIntegerDigits: Sets the minimum number of digits allowed in the integer portion of a\nnumber.")]),a._v(" "),t("li",[a._v("parseIntegerOnly: Sets whether or not numbers should be parsed as integers only.")]),a._v(" "),t("li",[a._v("roundingMode: Sets the {@link java.math.RoundingMode} used in this NumberFormat.")])]),a._v(" "),t("p",[a._v("Usage:")]),a._v(" "),t("div",{staticClass:"language-handlebars extra-class"},[t("pre",{pre:!0,attrs:{class:"language-handlebars"}},[t("code",[a._v("   "),t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("now")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"format"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token brackets"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("tz=timeZone|timeZoneId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")])]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n")])])]),t("p",[a._v("Format parameters is one of:")]),a._v(" "),t("ul",[t("li",[a._v('"full": full date format. For example: Tuesday, June 19, 2012')]),a._v(" "),t("li",[a._v('"long": long date format. For example: June 19, 2012')]),a._v(" "),t("li",[a._v('"medium": medium date format. For example: Jun 19, 2012')]),a._v(" "),t("li",[a._v('"short": short date format. For example: 6/19/12')]),a._v(" "),t("li",[a._v('"pattern": a date pattern.')])]),a._v(" "),t("p",[a._v("Otherwise, the default formatter will be used.")])])}),[],!1,null,null,null);s.default=r.exports}}]);