(window.webpackJsonp=window.webpackJsonp||[]).push([[125],{813:function(t,s,e){"use strict";e.r(s);var a=e(9),n=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",[t._v("\n     Flow\n")]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"io.kestra.core.models.triggers.types.Flow"')]),t._v("\n")])])]),e("blockquote",[e("p",[t._v("Kestra is able to trigger flow after another one. This allows chaining flow without need to update the base flows."),e("br"),t._v("\nWith that, you can break responsibility between different flow to different teams.")])]),t._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),e("p",[t._v("If you don't provide any conditions, the flow will be triggered for "),e("strong",[t._v("EVERY execution")]),t._v(" of "),e("strong",[t._v("EVERY flow")]),t._v(" on your instance.")])]),t._v(" "),e("h2",{attrs:{id:"examples"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#examples"}},[t._v("#")]),t._v(" Examples")]),t._v(" "),e("blockquote",[e("p",[t._v("This flow will be triggered after each successfully execution of flow "),e("code",[t._v("io.kestra.tests.trigger-flow")]),t._v(" and forward the "),e("code",[t._v("uri")]),t._v(" of "),e("code",[t._v("my-task")]),t._v(" taskId outputs.")])]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"flow"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"io.kestra.core.models.triggers.types.Flow"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" trigger"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("flow"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("listener\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" io.kestra.tests\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("revision")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("inputs")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" from"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("parent\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" STRING\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tasks")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" only"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("no"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("input\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" io.kestra.core.tasks.debugs.Return\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("format")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"v1: {{trigger.executionId}}"')]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("triggers")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" listen"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("flow\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" io.kestra.core.models.triggers.types.Flow\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("inputs")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("from-parent")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'{{ outputs.my-task.uri }}'")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("conditions")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" io.kestra.core.models.conditions.types.ExecutionFlowCondition\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" io.kestra.tests\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("flowId")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" trigger"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("flow\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" io.kestra.core.models.conditions.types.ExecutionStatusCondition\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("in")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" SUCCESS\n")])])]),e("h2",{attrs:{id:"inputs"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#inputs"}},[t._v("#")]),t._v(" Inputs")]),t._v(" "),e("h3",{attrs:{id:"inputs-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#inputs-2"}},[t._v("#")]),t._v(" "),e("code",[t._v("inputs")])]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("Type:")]),t._v(" "),e("mark",[t._v("object")])]),t._v(" "),e("li",[e("strong",[t._v("Dynamic:")]),t._v(" ❓")]),t._v(" "),e("li",[e("strong",[t._v("Required:")]),t._v(" ❌")])]),t._v(" "),e("blockquote",[e("p",[t._v("Fill input of this flow based on output of current flow, allowing to pass data or file on the triggered flow")])]),t._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),e("p",[t._v("If you provide invalid input, the flow will not be created! Since there is no task started, you can't log any reason visible on the execution ui."),e("br"),t._v("\nSo you will need to go to Logs tabs on the ui to understand the error")])]),t._v(" "),e("h2",{attrs:{id:"outputs"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#outputs"}},[t._v("#")]),t._v(" Outputs")]),t._v(" "),e("h3",{attrs:{id:"executionid"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#executionid"}},[t._v("#")]),t._v(" "),e("code",[t._v("executionId")])]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("Type:")]),t._v(" "),e("mark",[t._v("string")])])]),t._v(" "),e("blockquote",[e("p",[t._v("The execution id that trigger the current flow")])]),t._v(" "),e("h3",{attrs:{id:"flowid"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flowid"}},[t._v("#")]),t._v(" "),e("code",[t._v("flowId")])]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("Type:")]),t._v(" "),e("mark",[t._v("string")])])]),t._v(" "),e("blockquote",[e("p",[t._v("The execution id that trigger the current flow")])]),t._v(" "),e("h3",{attrs:{id:"flowrevision"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flowrevision"}},[t._v("#")]),t._v(" "),e("code",[t._v("flowRevision")])]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("Type:")]),t._v(" "),e("mark",[t._v("integer")])])]),t._v(" "),e("blockquote",[e("p",[t._v("The flow revision that trigger the current flow")])]),t._v(" "),e("h3",{attrs:{id:"namespace"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#namespace"}},[t._v("#")]),t._v(" "),e("code",[t._v("namespace")])]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("Type:")]),t._v(" "),e("mark",[t._v("string")])])]),t._v(" "),e("blockquote",[e("p",[t._v("The namespace of the flow that trigger the current flow")])]),t._v(" "),e("h3",{attrs:{id:"state"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#state"}},[t._v("#")]),t._v(" "),e("code",[t._v("state")])]),t._v(" "),e("ul",[e("li",[e("p",[e("strong",[t._v("Type:")]),t._v(" "),e("mark",[t._v("string")])])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("Possible Values:")])]),t._v(" "),e("ul",[e("li",[e("code",[t._v("CREATED")])]),t._v(" "),e("li",[e("code",[t._v("RUNNING")])]),t._v(" "),e("li",[e("code",[t._v("RESTARTED")])]),t._v(" "),e("li",[e("code",[t._v("KILLING")])]),t._v(" "),e("li",[e("code",[t._v("SUCCESS")])]),t._v(" "),e("li",[e("code",[t._v("WARNING")])]),t._v(" "),e("li",[e("code",[t._v("FAILED")])]),t._v(" "),e("li",[e("code",[t._v("KILLED")])])])])]),t._v(" "),e("blockquote",[e("p",[t._v("The execution state")])])])}),[],!1,null,null,null);s.default=n.exports}}]);