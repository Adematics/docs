(window.webpackJsonp=window.webpackJsonp||[]).push([[95],{800:function(t,s,a){"use strict";a.r(s);var e=a(19),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"data-storage-and-processing"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#data-storage-and-processing"}},[t._v("#")]),t._v(" Data storage and processing")]),t._v(" "),a("p",[t._v("Kestra's primary purpose is to orchestrate data processing via tasks, so data is central to each flow execution.")]),t._v(" "),a("p",[t._v("Depending on the task, data can be stored inside the execution context or inside Kestra's internal storage. You can also manually store data inside Kestra's state store by using dedicated tasks.")]),t._v(" "),a("p",[t._v("Some tasks give you the choice of where you want to store the data, usually using a "),a("code",[t._v("fetchType")]),t._v(" property or the three "),a("code",[t._v("fetch")]),t._v("/"),a("code",[t._v("fetchOne")]),t._v("/"),a("code",[t._v("store")]),t._v(" properties.")]),t._v(" "),a("p",[t._v("For example, using the DynamoDB Query task:")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" query\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" io.kestra.plugin.aws.dynamodb.Query\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tableName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" persons\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("keyConditionExpression")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" id = "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("id\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("expressionAttributeValues")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v(":id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("fetchType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" FETCH\n")])])]),a("p",[t._v("The "),a("code",[t._v("fetchType")]),t._v(" property can have four values:")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("FETCH_ONE")]),t._v(": will fetch the first row and set it in a task output attribute (the "),a("code",[t._v("row")]),t._v(" attribute for DynamoDB); the data will be stored inside the execution context.")]),t._v(" "),a("li",[a("code",[t._v("FETCH")]),t._v(": will fetch all rows and set them in a task output attribute (the "),a("code",[t._v("rows")]),t._v(" attribute for DynamoDB); the data will be stored inside the execution context.")]),t._v(" "),a("li",[a("code",[t._v("STORE")]),t._v(": will store all rows inside Kestra's internal storage. The internal storage will return a URI usually set in the task output attribute "),a("code",[t._v("uri")]),t._v(" and that can be used to retrieve the file from the internal storage.")]),t._v(" "),a("li",[a("code",[t._v("NONE")]),t._v(": will do nothing.")])]),t._v(" "),a("p",[t._v("The three "),a("code",[t._v("fetch")]),t._v("/"),a("code",[t._v("fetchOne")]),t._v("/"),a("code",[t._v("store")]),t._v(" properties will do the same but using three different task properties instead of a single one.")]),t._v(" "),a("h2",{attrs:{id:"storing-data"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#storing-data"}},[t._v("#")]),t._v(" Storing data")]),t._v(" "),a("h3",{attrs:{id:"storing-data-inside-the-flow-execution-context"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#storing-data-inside-the-flow-execution-context"}},[t._v("#")]),t._v(" Storing data inside the flow execution context")]),t._v(" "),a("p",[t._v("Data can be stored as variables inside the flow execution context. This can be convenient for sharing data between tasks.")]),t._v(" "),a("p",[t._v("To do so, tasks store data as output attributes that are then available inside the flow via Pebble expressions like "),a("code",{pre:!0},[t._v("{{outputs.taskName.attributeName}}")]),t._v(". More information about outputs can be found "),a("RouterLink",{attrs:{to:"/docs/developer-guide/outputs/"}},[t._v("here")]),t._v(".")],1),t._v(" "),a("p",[t._v("Be careful that when the size of the data is significant, this will increase the size of the flow execution context, which can lead to slow execution and increase the size of the execution storage inside Kestra's repository.")]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),a("p",[t._v("Depending on the Kestra internal queue and repository implementation, there can be a hard limit on the size of the flow execution context as it is stored as a single row/message. Usually, this limit is around 1MB, so this is important to avoid storing large amounts of data inside the flow execution context.")])]),t._v(" "),a("h3",{attrs:{id:"storing-data-inside-the-internal-storage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#storing-data-inside-the-internal-storage"}},[t._v("#")]),t._v(" Storing data inside the internal storage")]),t._v(" "),a("p",[t._v("Kesta has an internal storage that can store data of any size. By default, the internal storage uses the host filesystem, but plugins exist to use other implementations like Amazon S3, Google Cloud Storage, or Microsoft Azure Blobs storage. See "),a("RouterLink",{attrs:{to:"/docs/administrator-guide/configuration/storage/"}},[t._v("internal storage configuration")]),t._v(".")],1),t._v(" "),a("p",[t._v("When using the internal storage, data is, by default, stored using "),a("a",{attrs:{href:"https://amazon-ion.github.io/ion-docs/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Amazon Ion"),a("OutboundLink")],1),t._v(" format.")]),t._v(" "),a("p",[t._v("Tasks that can store data inside the internal storage usually have an output attribute named "),a("code",[t._v("uri")]),t._v(" that can be used to access this file in following tasks.")]),t._v(" "),a("p",[t._v("The following example uses the "),a("a",{attrs:{href:"https://kestra.io/plugins/plugin-aws/tasks/dynamodb/io.kestra.plugin.aws.dynamodb.Query.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("DynamoDB Query"),a("OutboundLink")],1),t._v(" task to query a table and the "),a("a",{attrs:{href:"https://kestra.io/plugins/plugin-fs/tasks/ftp/io.kestra.plugin.fs.ftp.Upload.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("HTTP Upload"),a("OutboundLink")],1),t._v(" task to send the retrieved rows to an external HTTP server.")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tasks")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" query\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" io.kestra.plugin.aws.dynamodb.Query\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tableName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" persons\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("keyConditionExpression")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" id = "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("id\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("expressionAttributeValues")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v(":id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("fetchType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" STORE\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" upload\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" io.kestra.plugin.fs.ftp.Upload\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("host")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" localhost\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("from")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"{{ outputs.query.uri }}"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("to")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/upload/file.ion"')]),t._v("\n")])])]),a("p",[t._v("Dedicated tasks allow managing the files stored inside the internal storage:")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://kestra.io/plugins/core/tasks/storages/io.kestra.core.tasks.storages.Concat.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Concat"),a("OutboundLink")],1),t._v(": concat multiple files.")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://kestra.io/plugins/core/tasks/storages/io.kestra.core.tasks.storages.Delete.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Delete"),a("OutboundLink")],1),t._v(": delete a file.")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://kestra.io/plugins/core/tasks/storages/io.kestra.core.tasks.storages.Size.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Size"),a("OutboundLink")],1),t._v(": get the size of a file.")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://kestra.io/plugins/core/tasks/storages/io.kestra.core.tasks.storages.Split.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Split"),a("OutboundLink")],1),t._v(": split a file into multiple files depending on the size of the file or the number of rows.")])]),t._v(" "),a("h3",{attrs:{id:"storing-data-inside-the-state-store"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#storing-data-inside-the-state-store"}},[t._v("#")]),t._v(" Storing data inside the state store")]),t._v(" "),a("p",[t._v("Dedicated tasks can store data inside Kestra's sate store. The state store transparently uses Kestra's internal storage as its backend store.")]),t._v(" "),a("p",[t._v("The state store allows storing data that will be shared by all executions of the same flow. You can think of it as a key/value store dedicated to a flow (or a namespace if setting the property "),a("code",[t._v("namespace: true")]),t._v(").")]),t._v(" "),a("p",[t._v("The following tasks are available:")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://kestra.io/plugins/core/tasks/states/io.kestra.core.tasks.states.Set.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Set"),a("OutboundLink")],1),t._v(": set a state key/value pair.")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://kestra.io/plugins/core/tasks/states/io.kestra.core.tasks.states.Get.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Get"),a("OutboundLink")],1),t._v(": get a state key/value pair.")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://kestra.io/plugins/core/tasks/states/io.kestra.core.tasks.states.Delete.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Delete"),a("OutboundLink")],1),t._v(": delete a state key/value pair.")])]),t._v(" "),a("p",[t._v("Example:")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tasks")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" setState\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" io.kestra.core.tasks.states.Set\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" myState\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("data")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" John Doe\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" getState\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" io.kestra.core.tasks.states.Get\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" myState\n")])])]),a("h2",{attrs:{id:"processing-data"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#processing-data"}},[t._v("#")]),t._v(" Processing data")]),t._v(" "),a("p",[t._v("You can make basic data processing thanks to variables processing offered by the Pebble templating engine, see "),a("RouterLink",{attrs:{to:"/docs/developer-guide/variables/basic-usage.html"}},[t._v("variables basic usage")]),t._v(".")],1),t._v(" "),a("p",[t._v("But these are limited, and you may need more powerful data processing tools; for this, Kestra offers various data processing tasks like file transformations or scripts.")]),t._v(" "),a("h3",{attrs:{id:"converting-files"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#converting-files"}},[t._v("#")]),t._v(" Converting files")]),t._v(" "),a("p",[t._v("Files from the internal storage can be converted from/to the Ion format to/from another format using the "),a("a",{attrs:{href:"https://kestra.io/plugins/plugin-serdes/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Serdes"),a("OutboundLink")],1),t._v(" plugin.")]),t._v(" "),a("p",[t._v("The following formats are currently available: Avro, JSON, XML, and Parquet.")]),t._v(" "),a("p",[t._v("Each format offers a "),a("strong",[t._v("reader")]),t._v(" to read an Ion serialized data file and write it in the target format and a "),a("strong",[t._v("writer")]),t._v(" to read a file in a specific format and write it as an Ion serialized data file.")]),t._v(" "),a("p",[t._v("For example, to convert an Ion file to CSV, then back to Ion:")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tasks")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" query\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" io.kestra.plugin.aws.dynamodb.Query\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tableName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" persons\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("keyConditionExpression")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" id = "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("id\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("expressionAttributeValues")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v(":id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("fetchType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" STORE\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" convertToCsv\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" io.kestra.plugin.serdes.csv.CsvWriter\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("from")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"{{outputs.query.uri}}"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" convertBackToIon\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" io.kestra.plugin.serdes.csv.CsvReader\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("from")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(' "'),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("outputs.convertToCsv.uri"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v('""\n')])])]),a("h3",{attrs:{id:"processing-data-using-scripts"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#processing-data-using-scripts"}},[t._v("#")]),t._v(" Processing data using scripts")]),t._v(" "),a("p",[t._v("Kestra has powerful tasks that can launch scripts written in Bash, Node.js, and Python. Depending on your Kestra installation, they can run directly on the host or inside Docker containers.")]),t._v(" "),a("p",[t._v("They are available inside Kestra core, so no plugins must be installed to use them.")]),t._v(" "),a("ul",[a("li",[t._v("The "),a("a",{attrs:{href:"https://kestra.io/plugins/core/tasks/scripts/io.kestra.core.tasks.scripts.Bash.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Bash"),a("OutboundLink")],1),t._v(" task will run a bash script, a single command, or a set of commands.")]),t._v(" "),a("li",[t._v("The "),a("a",{attrs:{href:"https://kestra.io/plugins/core/tasks/scripts/io.kestra.core.tasks.scripts.Node.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Node"),a("OutboundLink")],1),t._v(" task will run a Node.js script.")]),t._v(" "),a("li",[t._v("The "),a("a",{attrs:{href:"https://kestra.io/plugins/core/tasks/scripts/io.kestra.core.tasks.scripts.Python.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Python"),a("OutboundLink")],1),t._v(" task will run a Node.js script.")])]),t._v(" "),a("p",[t._v("The following example will query the BigQuery public dataset for Wikipedia pages, convert it to CSV, and use the file inside a Python task. The Python task will install the Pandas library and process the CSV file.")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" wikipedia"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("top"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("ten"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("python"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("panda\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" io.kestra.tests\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("description")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" A flow that loads wikipedia top 10 EN pages\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tasks")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" query"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("top"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("ten\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" io.kestra.plugin.gcp.bigquery.Query\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("sql")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token scalar string"}},[t._v("\n      SELECT DATETIME(datehour) as date, title, views FROM `bigquery-public-data.wikipedia.pageviews_2023`\n      WHERE DATE(datehour) = current_date() and wiki = 'en'\n      ORDER BY datehour desc, views desc\n      LIMIT 10")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("store")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" write"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("csv\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" io.kestra.plugin.serdes.csv.CsvWriter\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("from")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"{{outputs['query-top-ten'].uri}}\"")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"python"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"io.kestra.core.tasks.scripts.Python"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("inputFiles")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("data.csv")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"{{outputs['write-csv'].uri}}\"")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("main.py")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token scalar string"}},[t._v("\n        import pandas as pd\n        from kestra import Kestra\n        data = pd.read_csv(\"data.csv\")\n        data.info()\n        sumOfViews = data['views'].sum()\n        Kestra.outputs({'sumOfViews': int(sumOfViews)})")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("requirements")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" pandas\n")])])]),a("p",[t._v("Kestra has other plugins that can process data; you can look at all the available plugins "),a("a",{attrs:{href:"https://kestra.io/plugins/",target:"_blank",rel:"noopener noreferrer"}},[t._v("here"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("h3",{attrs:{id:"processing-data-using-file-transform"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#processing-data-using-file-transform"}},[t._v("#")]),t._v(" Processing data using file transform")]),t._v(" "),a("p",[t._v("Kestra can process data "),a("strong",[t._v("row by row")]),t._v(" using file transform tasks. The transformation will be done with a small script written in Python, JavaScript, or Groovy.")]),t._v(" "),a("ul",[a("li",[t._v("The "),a("a",{attrs:{href:"https://kestra.io/plugins/plugin-script-jython/tasks/io.kestra.plugin.scripts.jython.FileTransform.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Jython FileTransform"),a("OutboundLink")],1),t._v(" task allows transforming rows with Python.")]),t._v(" "),a("li",[t._v("The "),a("a",{attrs:{href:"https://kestra.io/plugins/plugin-script-nashorn/tasks/io.kestra.plugin.scripts.nashorn.FileTransform.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Nashorn FileTransform"),a("OutboundLink")],1),t._v(" task allows transforming rows with JavaScript.")]),t._v(" "),a("li",[t._v("The "),a("a",{attrs:{href:"https://kestra.io/plugins/plugin-script-groovy/tasks/io.kestra.plugin.scripts.groovy.FileTransform.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Groovy FileTransform"),a("OutboundLink")],1),t._v(" task allows transforming rows with Groovy.")])]),t._v(" "),a("p",[t._v("The following example will query the BigQuery public dataset for Wikipedia pages, convert it row by row with the Nashorn FileTransform, and write it in a CSV file.")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" wikipedia"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("top"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("ten"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("file"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("transform\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" io.kestra.tests\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("description")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" A flow that loads wikipedia top 10 EN pages\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tasks")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" query"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("top"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("ten\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" io.kestra.plugin.gcp.bigquery.Query\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("sql")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token scalar string"}},[t._v("\n      SELECT DATETIME(datehour) as date, title, views FROM `bigquery-public-data.wikipedia.pageviews_2023`\n      WHERE DATE(datehour) = current_date() and wiki = 'en'\n      ORDER BY datehour desc, views desc\n      LIMIT 10")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("store")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" file"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("transform\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" io.kestra.plugin.scripts.nashorn.FileTransform\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("from")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"{{outputs['query-top-ten'].uri}}\"")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token scalar string"}},[t._v("\n      logger.info('row: {}', row)")]),t._v("\n\n      if (row"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'title'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" === 'Main_Page' "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v(" row"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'title'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" === 'Special"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("Search' "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v(" row"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'title'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" === '"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("') "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        // remove un"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("needed row\n        row = null\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" else "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        // add a 'time' column\n        row"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'time'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" = String(row"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'date'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(").substring(11)\n        // modify the 'date' column to only keep the date part\n        row"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'date'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" = String(row"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'date'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(").substring(0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 10)\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" write"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("csv\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" io.kestra.plugin.serdes.csv.CsvWriter\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("from")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"{{outputs['file-transform'].uri}}\"")]),t._v("\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("The script can access a logger to log messages. Each row is available in a "),a("code",[t._v("row")]),t._v(" variable where each column is accessible using the dictionary notation "),a("code",[t._v("row['columnName']")]),t._v(".")])]),t._v(" "),a("h2",{attrs:{id:"purging-data"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#purging-data"}},[t._v("#")]),t._v(" Purging data")]),t._v(" "),a("p",[t._v("The "),a("RouterLink",{attrs:{to:"/plugins/core/tasks/storages/io.kestra.core.tasks.storages.PurgeExecution.html"}},[t._v("PurgeExecution")]),t._v(" task can purge all the files stored inside the internal context by a flow execution.")],1),t._v(" "),a("p",[t._v("It can be used at the end of a flow to purge all its generated files.")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tasks")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"purge-execution"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"io.kestra.core.tasks.storages.PurgeExecution"')]),t._v("\n")])])]),a("p",[t._v("The execution context itself will not be available after the end of the execution and will be automatically deleted from Kestra's repository after a retention period (by default, seven days) that can be changed; see "),a("RouterLink",{attrs:{to:"/docs/administrator-guide/configuration/"}},[t._v("configurations")]),t._v(".")],1),t._v(" "),a("p",[t._v("Also, the "),a("RouterLink",{attrs:{to:"/plugins/core/tasks/storages/io.kestra.core.tasks.storages.Purge.html"}},[t._v("Purge")]),t._v(" task can be used to purge storages, logs, executions of previous execution. For example, this flow will purge all of these every day:")],1),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" purge\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" io.kestra.tests\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tasks")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"purge"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"io.kestra.core.tasks.storages.Purge"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("endDate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"{{ now() | dateAdd(-1, 'MONTHS') }}\"")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("triggers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" schedule\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" io.kestra.core.models.triggers.types.Schedule\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cron")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0 0 * * *"')]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);