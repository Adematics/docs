(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{262:function(a,t,s){"use strict";s.r(t);var e=s(0),r=Object(e.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"string-functions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#string-functions"}},[a._v("#")]),a._v(" String functions")]),a._v(" "),s("p"),s("div",{staticClass:"table-of-contents"},[s("ul",[s("li",[s("a",{attrs:{href:"#capitalizes-the-first-character-of-the-value"}},[a._v("Capitalizes the first character of the value.")])]),s("li",[s("a",{attrs:{href:"#centers-the-value-in-a-field-of-a-given-width"}},[a._v("Centers the value in a field of a given width.")])]),s("li",[s("a",{attrs:{href:"#removes-all-values-of-arg-from-the-given-string"}},[a._v("Removes all values of arg from the given string.")])]),s("li",[s("a",{attrs:{href:"#default-empty"}},[a._v("Default empty")])]),s("li",[s("a",{attrs:{href:"#join-string"}},[a._v("Join string")])]),s("li",[s("a",{attrs:{href:"#left-aligns-the-value-in-a-field-of-a-given-width"}},[a._v("Left-aligns the value in a field of a given width.")])]),s("li",[s("a",{attrs:{href:"#right-aligns-the-value-in-a-field-of-a-given-width"}},[a._v("Right-aligns the value in a field of a given width.")])]),s("li",[s("a",{attrs:{href:"#substring"}},[a._v("Substring")])]),s("li",[s("a",{attrs:{href:"#converts-a-string-into-all-lowercase"}},[a._v("Converts a string into all lowercase.")])]),s("li",[s("a",{attrs:{href:"#converts-a-string-into-all-uppercase"}},[a._v("Converts a string into all uppercase.")])]),s("li",[s("a",{attrs:{href:"#formats-the-variable"}},[a._v("Formats the variable")])]),s("li",[s("a",{attrs:{href:"#strips-all-x-html-tags"}},[a._v("Strips all [X]HTML tags.")])]),s("li",[s("a",{attrs:{href:"#capitalizes-all-the-whitespace-separated-words-in-a-string"}},[a._v("Capitalizes all the whitespace separated words in a String.")])]),s("li",[s("a",{attrs:{href:"#truncates-a-string"}},[a._v("Truncates a string")])]),s("li",[s("a",{attrs:{href:"#wraps-words"}},[a._v("Wraps words")])]),s("li",[s("a",{attrs:{href:"#replaces"}},[a._v("Replaces")])]),s("li",[s("a",{attrs:{href:"#maps-values"}},[a._v("Maps values")])]),s("li",[s("a",{attrs:{href:"#date-format"}},[a._v("Date format")])])])]),s("p"),a._v(" "),s("h2",{attrs:{id:"capitalizes-the-first-character-of-the-value"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#capitalizes-the-first-character-of-the-value"}},[a._v("#")]),a._v(" Capitalizes the first character of the value.")]),a._v(" "),s("p",[a._v("For example:")]),a._v(" "),s("div",{staticClass:"language-handlebars extra-class"},[s("pre",{pre:!0,attrs:{class:"language-handlebars"}},[s("code",[s("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("capitalizeFirst")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("value")]),s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n")])])]),s("p",[a._v('If value is "kestra is cool !", the output will be "Kestra is cool !".')]),a._v(" "),s("h2",{attrs:{id:"centers-the-value-in-a-field-of-a-given-width"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#centers-the-value-in-a-field-of-a-given-width"}},[a._v("#")]),a._v(" Centers the value in a field of a given width.")]),a._v(" "),s("p",[a._v("For example:")]),a._v(" "),s("div",{staticClass:"language-handlebars extra-class"},[s("pre",{pre:!0,attrs:{class:"language-handlebars"}},[s("code",[s("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("center")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("value")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("size")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("19")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("pad")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"char"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n")])])]),s("p",[a._v('If value is "Handlebars.java", the output will be "  Handlebars.java  ".')]),a._v(" "),s("h2",{attrs:{id:"removes-all-values-of-arg-from-the-given-string"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#removes-all-values-of-arg-from-the-given-string"}},[a._v("#")]),a._v(" Removes all values of arg from the given string.")]),a._v(" "),s("p",[a._v("For example:")]),a._v(" "),s("div",{staticClass:"language-handlebars extra-class"},[s("pre",{pre:!0,attrs:{class:"language-handlebars"}},[s("code",[s("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("cut")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("value")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('" "')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n")])])]),s("p",[a._v('If value is "String with spaces", the output will be "Stringwithspaces".')]),a._v(" "),s("h2",{attrs:{id:"default-empty"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#default-empty"}},[a._v("#")]),a._v(" Default empty")]),a._v(" "),s("p",[a._v("If value evaluates to False, uses the given default. Otherwise, uses the\nvalue.")]),a._v(" "),s("p",[a._v("For example:")]),a._v(" "),s("div",{staticClass:"language-handlebars extra-class"},[s("pre",{pre:!0,attrs:{class:"language-handlebars"}},[s("code",[s("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("defaultIfEmpty")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("value")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"nothing"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n")])])]),s("p",[a._v('If value is "" (the empty string), the output will be nothing.')]),a._v(" "),s("h2",{attrs:{id:"join-string"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#join-string"}},[a._v("#")]),a._v(" Join string")]),a._v(" "),s("p",[a._v("Joins an array, iterator or an iterable with a string.")]),a._v(" "),s("p",[a._v("For example:")]),a._v(" "),s("div",{staticClass:"language-handlebars extra-class"},[s("pre",{pre:!0,attrs:{class:"language-handlebars"}},[s("code",[s("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("join")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("value")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('" // "')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("prefix")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('""')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("suffix")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('""')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n")])])]),s("p",[a._v("If value is the list ['a', 'b', 'c'], the output will be the string \"a // b // c\".")]),a._v(" "),s("p",[a._v("Or:")]),a._v(" "),s("div",{staticClass:"language-handlebars extra-class"},[s("pre",{pre:!0,attrs:{class:"language-handlebars"}},[s("code",[s("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("join")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"a"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"b"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"c"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('" // "')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("prefix")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('""')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("suffix")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('""')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n")])])]),s("p",[a._v('Join the "a", "b", "c", the output will be the string "a // b // c".')]),a._v(" "),s("h2",{attrs:{id:"left-aligns-the-value-in-a-field-of-a-given-width"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#left-aligns-the-value-in-a-field-of-a-given-width"}},[a._v("#")]),a._v(" Left-aligns the value in a field of a given width.")]),a._v(" "),s("p",[a._v("Argument: "),s("code",[a._v("field size")])]),a._v(" "),s("p",[a._v("For example:")]),a._v(" "),s("div",{staticClass:"language-handlebars extra-class"},[s("pre",{pre:!0,attrs:{class:"language-handlebars"}},[s("code",[s("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("ljust")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("value")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("20")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("pad")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('" "')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n")])])]),s("p",[a._v('If value is Handlebars.java, the output will be "Handlebars.java     ".')]),a._v(" "),s("h2",{attrs:{id:"right-aligns-the-value-in-a-field-of-a-given-width"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#right-aligns-the-value-in-a-field-of-a-given-width"}},[a._v("#")]),a._v(" Right-aligns the value in a field of a given width.")]),a._v(" "),s("p",[a._v("Argument: "),s("code",[a._v("field size")])]),a._v(" "),s("p",[a._v("For example:")]),a._v(" "),s("div",{staticClass:"language-handlebars extra-class"},[s("pre",{pre:!0,attrs:{class:"language-handlebars"}},[s("code",[s("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("rjust")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("value")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("20")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("pad")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('" "')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n")])])]),s("p",[a._v('If value is Handlebars.java, the output will be "     Handlebars.java".')]),a._v(" "),s("h2",{attrs:{id:"substring"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#substring"}},[a._v("#")]),a._v(" Substring")]),a._v(" "),s("p",[a._v("Returns a new "),s("code",[a._v("CharSequence")]),a._v(" that is a subsequence of this sequence.\nThe subsequence starts with the "),s("code",[a._v("char")]),a._v(" value at the specified index and\nends with the "),s("code",[a._v("char")]),a._v(" value at nd - 1*")]),a._v(" "),s("p",[a._v("Argument: "),s("code",[a._v("start offset")]),a._v(" "),s("code",[a._v("end offset")])]),a._v(" "),s("p",[a._v("For example:")]),a._v(" "),s("div",{staticClass:"language-handlebars extra-class"},[s("pre",{pre:!0,attrs:{class:"language-handlebars"}},[s("code",[s("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("substring")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("value")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("11")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n")])])]),s("p",[a._v('If value is Handlebars.java, the output will be "java".')]),a._v(" "),s("p",[a._v("or")]),a._v(" "),s("div",{staticClass:"language-handlebars extra-class"},[s("pre",{pre:!0,attrs:{class:"language-handlebars"}},[s("code",[s("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("substring")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("value")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n")])])]),s("p",[a._v('If value is Handlebars.java, the output will be "Handlebars".')]),a._v(" "),s("h2",{attrs:{id:"converts-a-string-into-all-lowercase"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#converts-a-string-into-all-lowercase"}},[a._v("#")]),a._v(" Converts a string into all lowercase.")]),a._v(" "),s("p",[a._v("For example:")]),a._v(" "),s("div",{staticClass:"language-handlebars extra-class"},[s("pre",{pre:!0,attrs:{class:"language-handlebars"}},[s("code",[s("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("lower")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("value")]),s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n")])])]),s("p",[a._v("If value is 'Still MAD At Yoko', the output will be 'still mad at yoko'.")]),a._v(" "),s("h2",{attrs:{id:"converts-a-string-into-all-uppercase"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#converts-a-string-into-all-uppercase"}},[a._v("#")]),a._v(" Converts a string into all uppercase.")]),a._v(" "),s("p",[a._v("For example:")]),a._v(" "),s("div",{staticClass:"language-handlebars extra-class"},[s("pre",{pre:!0,attrs:{class:"language-handlebars"}},[s("code",[s("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("upper")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("value")]),s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n")])])]),s("p",[a._v("If value is 'Hello', the output will be 'HELLO'.")]),a._v(" "),s("h1",{attrs:{id:"converts-to-lowercase"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#converts-to-lowercase"}},[a._v("#")]),a._v(" Converts to lowercase")]),a._v(" "),s("p",[a._v("removes non-word characters (alphanumerics and underscores) and converts spaces to hyphens. Also strips leading and trailing whitespace.")]),a._v(" "),s("p",[a._v("For example:")]),a._v(" "),s("div",{staticClass:"language-handlebars extra-class"},[s("pre",{pre:!0,attrs:{class:"language-handlebars"}},[s("code",[s("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("slugify")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("value")]),s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n")])])]),s("p",[a._v('If value is "Joel is a slug", the output will be "joel-is-a-slug".')]),a._v(" "),s("h2",{attrs:{id:"formats-the-variable"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#formats-the-variable"}},[a._v("#")]),a._v(" Formats the variable")]),a._v(" "),s("p",[a._v("according to the argument, a string formatting specifier.")]),a._v(" "),s("p",[a._v("For example:")]),a._v(" "),s("div",{staticClass:"language-handlebars extra-class"},[s("pre",{pre:!0,attrs:{class:"language-handlebars"}},[s("code",[s("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("stringFormat")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("string")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("param0")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("param1")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("paramN")]),s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n")])])]),s("p",[a._v('If value is "Hello %s" "handlebars.java", the output will be "Hello handlebars.java".')]),a._v(" "),s("h2",{attrs:{id:"strips-all-x-html-tags"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#strips-all-x-html-tags"}},[a._v("#")]),a._v(" Strips all [X]HTML tags.")]),a._v(" "),s("p",[a._v("For example:")]),a._v(" "),s("div",{staticClass:"language-handlebars extra-class"},[s("pre",{pre:!0,attrs:{class:"language-handlebars"}},[s("code",[s("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("stripTags")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("value")]),s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n")])])]),s("h2",{attrs:{id:"capitalizes-all-the-whitespace-separated-words-in-a-string"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#capitalizes-all-the-whitespace-separated-words-in-a-string"}},[a._v("#")]),a._v(" Capitalizes all the whitespace separated words in a String.")]),a._v(" "),s("p",[a._v("For example:")]),a._v(" "),s("div",{staticClass:"language-handlebars extra-class"},[s("pre",{pre:!0,attrs:{class:"language-handlebars"}},[s("code",[s("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("capitalize")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("value")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("fully")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n")])])]),s("p",[a._v('If value is "my first post", the output will be "My First Post".')]),a._v(" "),s("h2",{attrs:{id:"truncates-a-string"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#truncates-a-string"}},[a._v("#")]),a._v(" Truncates a string")]),a._v(" "),s("p",[a._v("if it is longer than the specified number of characters.")]),a._v(" "),s("p",[a._v('Truncated strings will end with a translatable ellipsis sequence ("...").')]),a._v(" "),s("p",[a._v("Argument: Number of characters to truncate to")]),a._v(" "),s("p",[a._v("For example:")]),a._v(" "),s("div",{staticClass:"language-handlebars extra-class"},[s("pre",{pre:!0,attrs:{class:"language-handlebars"}},[s("code",[s("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("abbreviate")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("value")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("13")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n")])])]),s("p",[a._v('If value is "Handlebars rocks", the output will be "Handlebars...".')]),a._v(" "),s("h2",{attrs:{id:"wraps-words"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#wraps-words"}},[a._v("#")]),a._v(" Wraps words")]),a._v(" "),s("p",[a._v("at specified line length.")]),a._v(" "),s("p",[a._v("Argument: number of characters at which to wrap the text")]),a._v(" "),s("p",[a._v("For example:")]),a._v(" "),s("div",{staticClass:"language-handlebars extra-class"},[s("pre",{pre:!0,attrs:{class:"language-handlebars"}},[s("code",[s("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("wordWrap")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("value")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("5")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n")])])]),s("p",[a._v("If value is Joel is a slug, the output would be:")]),a._v(" "),s("div",{staticClass:"language-csv extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("Joel\nis a\nslug\n")])])]),s("h2",{attrs:{id:"replaces"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#replaces"}},[a._v("#")]),a._v(" Replaces")]),a._v(" "),s("p",[a._v("each substring of this string that matches the literal target sequence with the specified literal replacement sequence.")]),a._v(" "),s("p",[a._v("For example:")]),a._v(" "),s("div",{staticClass:"language-handlebars extra-class"},[s("pre",{pre:!0,attrs:{class:"language-handlebars"}},[s("code",[s("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("replace")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("value")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"..."')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"rocks"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n")])])]),s("p",[a._v('If value is "Handlebars ...", the output will be "Handlebars rocks".')]),a._v(" "),s("h2",{attrs:{id:"maps-values"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#maps-values"}},[a._v("#")]),a._v(" Maps values")]),a._v(" "),s("p",[a._v('for true, false and (optionally) null, to the strings "yes", "no", "maybe".')]),a._v(" "),s("p",[a._v("For example:")]),a._v(" "),s("div",{staticClass:"language-handlebars extra-class"},[s("pre",{pre:!0,attrs:{class:"language-handlebars"}},[s("code",[s("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("yesno")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("value")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("yes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"yes"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("no")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"no"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("maybe")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"maybe"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n")])])]),s("h2",{attrs:{id:"date-format"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#date-format"}},[a._v("#")]),a._v(" Date format")]),a._v(" "),s("p",[a._v("Usage:")]),a._v(" "),s("div",{staticClass:"language-handlebars extra-class"},[s("pre",{pre:!0,attrs:{class:"language-handlebars"}},[s("code",[s("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("dateFormat")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("date")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"format"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("format")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"format"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token brackets"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("tz=timeZone|timeZoneId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")])]),s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n")])])]),s("p",[a._v("Format parameters is one of:")]),a._v(" "),s("ul",[s("li",[a._v('"full": full date format. For example: Tuesday, June 19, 2012')]),a._v(" "),s("li",[a._v('"long": long date format. For example: June 19, 2012')]),a._v(" "),s("li",[a._v('"medium": medium date format. For example: Jun 19, 2012')]),a._v(" "),s("li",[a._v('"short": short date format. For example: 6/19/12')]),a._v(" "),s("li",[a._v('"pattern": a date pattern.')])]),a._v(" "),s("p",[a._v("Otherwise, the default formatter will be used.\nThe format option can be specified as a parameter or hash (a.k.a named parameter).")]),a._v(" "),s("p",[a._v("Usage:")]),a._v(" "),s("div",{staticClass:"language-handlebars extra-class"},[s("pre",{pre:!0,attrs:{class:"language-handlebars"}},[s("code",[a._v("   "),s("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("numberFormat")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("number")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"format"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token brackets"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("locale=default")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")])]),s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n")])])]),s("p",[a._v("Format parameters is one of:")]),a._v(" "),s("ul",[s("li",[a._v('"integer": the integer number format')]),a._v(" "),s("li",[a._v('"percent": the percent number format')]),a._v(" "),s("li",[a._v('"currency": the decimal number format')]),a._v(" "),s("li",[a._v('"pattern": a decimal pattern.')])]),a._v(" "),s("p",[a._v("Otherwise, the default formatter will be used.")]),a._v(" "),s("p",[a._v("More options:")]),a._v(" "),s("ul",[s("li",[a._v("groupingUsed: Set whether or not grouping will be used in this format.")]),a._v(" "),s("li",[a._v("maximumFractionDigits: Sets the maximum number of digits allowed in the fraction portion of\na number.")]),a._v(" "),s("li",[a._v("maximumIntegerDigits: Sets the maximum number of digits allowed in the integer portion of a\nnumber")]),a._v(" "),s("li",[a._v("minimumFractionDigits: Sets the minimum number of digits allowed in the fraction portion of\na number")]),a._v(" "),s("li",[a._v("minimumIntegerDigits: Sets the minimum number of digits allowed in the integer portion of a\nnumber.")]),a._v(" "),s("li",[a._v("parseIntegerOnly: Sets whether or not numbers should be parsed as integers only.")]),a._v(" "),s("li",[a._v("roundingMode: Sets the {@link java.math.RoundingMode} used in this NumberFormat.")])]),a._v(" "),s("p",[a._v("Usage:")]),a._v(" "),s("div",{staticClass:"language-handlebars extra-class"},[s("pre",{pre:!0,attrs:{class:"language-handlebars"}},[s("code",[a._v("   "),s("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("now")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"format"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token brackets"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("tz=timeZone|timeZoneId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")])]),s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n")])])]),s("p",[a._v("Format parameters is one of:")]),a._v(" "),s("ul",[s("li",[a._v('"full": full date format. For example: Tuesday, June 19, 2012')]),a._v(" "),s("li",[a._v('"long": long date format. For example: June 19, 2012')]),a._v(" "),s("li",[a._v('"medium": medium date format. For example: Jun 19, 2012')]),a._v(" "),s("li",[a._v('"short": short date format. For example: 6/19/12')]),a._v(" "),s("li",[a._v('"pattern": a date pattern.')])]),a._v(" "),s("p",[a._v("Otherwise, the default formatter will be used.")])])}),[],!1,null,null,null);t.default=r.exports}}]);