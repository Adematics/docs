(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{427:function(t,e,a){"use strict";a.r(e);var s=a(25),r=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"flow-trigger"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flow-trigger"}},[t._v("#")]),t._v(" Flow trigger")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"org.kestra.core.models.triggers.types.Schedule"')]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("Kestra is able to trigger flow after another one. This allows chaining flow without need to update the base flows."),a("br"),t._v("\nWith that, you can break responsibility between different flow to different teams.")])]),t._v(" "),a("h2",{attrs:{id:"example"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#example"}},[t._v("#")]),t._v(" Example")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("triggers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" listen"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("flow\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" org.kestra.core.models.triggers.types.Flow\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("inputs")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("from-parent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'{{ outputs.invalid.value }}'")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("conditions")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" org.kestra.core.models.conditions.types.FlowCondition\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" org.kestra.tests\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("flowId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" trigger"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("flow\n")])])]),a("h2",{attrs:{id:"inputs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#inputs"}},[t._v("#")]),t._v(" Inputs")]),t._v(" "),a("h3",{attrs:{id:"id"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#id"}},[t._v("#")]),t._v(" "),a("code",[t._v("id")])]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Type:")]),t._v(" "),a("Badge",{attrs:{vertical:"middle",text:"String"}})],1),t._v(" "),a("li",[a("strong",[t._v("Required:")]),t._v(" ✔")])]),t._v(" "),a("blockquote",[a("p",[t._v("unique for a flow")])]),t._v(" "),a("h3",{attrs:{id:"inputs-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#inputs-2"}},[t._v("#")]),t._v(" "),a("code",[t._v("inputs")])]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Type:")]),t._v(" "),a("Badge",{attrs:{vertical:"middle",text:"Map<String, Object>"}})],1),t._v(" "),a("li",[a("strong",[t._v("Required:")]),t._v(" ❌")]),t._v(" "),a("li",[a("strong",[t._v("Dynamic:")]),t._v(" ✔")])]),t._v(" "),a("blockquote",[a("p",[t._v("fill input of this flow based on output of current flow, allowing to pass data or file on the triggered flow")])]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),a("p",[t._v("If you provide invalid input, the flow will be created and already state as FAILED! Since there is no task started, you can't log any reason visible on the ui."),a("br"),t._v("\nSo you will need to go to server log to understand the error")])]),t._v(" "),a("h3",{attrs:{id:"conditions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#conditions"}},[t._v("#")]),t._v(" "),a("code",[t._v("conditions")])]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Type:")]),t._v(" "),a("Badge",{attrs:{vertical:"middle",text:"List<Condition>"}})],1),t._v(" "),a("li",[a("strong",[t._v("Required:")]),t._v(" ❌")])]),t._v(" "),a("blockquote",[a("p",[t._v("List of  "),a("a",{attrs:{href:"../conditions"}},[t._v("Conditions")]),t._v(" in order to limit the flow trigger.")])]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),a("p",[t._v("If you don't provide any conditions, the flow will be triggered for "),a("strong",[t._v("EVERY execution")]),t._v(" of "),a("strong",[t._v("EVERY flow")]),t._v(" on your instance.")])]),t._v(" "),a("h2",{attrs:{id:"variables"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#variables"}},[t._v("#")]),t._v(" Variables")]),t._v(" "),a("p",[t._v("When the flow is trigger by another one, some context variables will be injected to allow some customization of the flow.")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Parameter")]),t._v(" "),a("th",[t._v("Description")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",{pre:!0},[t._v("{{ trigger.executionId }}")])]),t._v(" "),a("td",[t._v("the execution id that trigger the current flow")])]),t._v(" "),a("tr",[a("td",[a("code",{pre:!0},[t._v("{{ trigger.namespace }}")])]),t._v(" "),a("td",[t._v("the namespace of the flow that trigger the current flow")])]),t._v(" "),a("tr",[a("td",[a("code",{pre:!0},[t._v("{{ trigger.flowId }}")])]),t._v(" "),a("td",[t._v("the flow id that trigger the current flow")])]),t._v(" "),a("tr",[a("td",[a("code",{pre:!0},[t._v("{{ trigger.flowRevision }}")])]),t._v(" "),a("td",[t._v("the flow revision that trigger the current flow")])])])])])}),[],!1,null,null,null);e.default=r.exports}}]);