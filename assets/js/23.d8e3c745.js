(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{434:function(e,t,a){"use strict";a.r(t);var s=a(25),r=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"triggers-schedule"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#triggers-schedule"}},[e._v("#")]),e._v(" Triggers & Schedule")]),e._v(" "),a("p",[e._v("Kestra is able to trigger flow, reacating to external events like Schedule.\nThis allows complex logic like waiting for a file, or a time to trigger flow.")]),e._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),a("p",[e._v("For now only schedule tasks are available !")])]),e._v(" "),a("h2",{attrs:{id:"schedule"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#schedule"}},[e._v("#")]),e._v(" Schedule")]),e._v(" "),a("p",[e._v("Here is a simple example :")]),e._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("triggers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" schedule\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" org.kestra.core.models.triggers.types.Schedule\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("cron")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"*/15 * * * *"')]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("backfill")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("start")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token datetime number"}},[e._v("2020-06-25T14:00:00Z")]),e._v("\n")])])]),a("p",[e._v("with :")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("id")]),e._v(": mandatory, and unique for a flow. The scheduler will keep the last execution date for this schedule.\nThis allow you to change the cron expression without restart all the past execution (if backfill exists)")]),e._v(" "),a("li",[a("code",[e._v("type")]),e._v(": mandatory, the type of trigger, for now only "),a("code",[e._v("org.kestra.core.models.triggers.types.Schedule")]),e._v(" is suitable.")]),e._v(" "),a("li",[a("code",[e._v("cron")]),e._v(": mandatory, a "),a("a",{attrs:{href:"https://crontab.guru/",target:"_blank",rel:"noopener noreferrer"}},[e._v("cron expression"),a("OutboundLink")],1)]),e._v(" "),a("li",[a("code",[e._v("backfill.start")]),e._v(": optional backfill date")])]),e._v(" "),a("h3",{attrs:{id:"backfill"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#backfill"}},[e._v("#")]),e._v(" Backfill")]),e._v(" "),a("p",[e._v("Kestra will handle optionnaly a backfill. The concept of backfill is the replay the missing schedule because\nwe create the flow later.")]),e._v(" "),a("p",[e._v("Backfill will do all schedules between define date & current date and will start after the normal schedule.")]),e._v(" "),a("h3",{attrs:{id:"variables"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#variables"}},[e._v("#")]),e._v(" Variables")]),e._v(" "),a("p",[e._v("When the flow is schedule, some context variables are injected to allow some customization of the flow\n(like filename, where in sql query).")]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",[e._v("Parameter")]),e._v(" "),a("th",[e._v("Description")])])]),e._v(" "),a("tbody",[a("tr",[a("td",[a("code",{pre:!0},[e._v("{{ schedule.date }}")])]),e._v(" "),a("td",[e._v("the date of current schedule")])]),e._v(" "),a("tr",[a("td",[a("code",{pre:!0},[e._v("{{ schedule.next }}")])]),e._v(" "),a("td",[e._v("the date of next schedule")])]),e._v(" "),a("tr",[a("td",[a("code",{pre:!0},[e._v("{{ schedule.previous }}")])]),e._v(" "),a("td",[e._v("the date of previous schedule")])])])]),e._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[e._v("WARNING")]),e._v(" "),a("p",[e._v("Schedule cannot overlap, this mean that we can't have any concurrent schedule. If the previous schedule is not ended\nwhen the next one must start, the scheduler will wait the end of the previous one. Same is applied for backfill.")])])])}),[],!1,null,null,null);t.default=r.exports}}]);