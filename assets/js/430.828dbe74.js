(window.webpackJsonp=window.webpackJsonp||[]).push([[430],{1136:function(t,e,r){"use strict";r.r(e);var a=r(19),s=Object(a.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",[t._v("\n     SparkSubmit\n")]),t._v(" "),r("div",{staticClass:"language-yaml extra-class"},[r("pre",{pre:!0,attrs:{class:"language-yaml"}},[r("code",[r("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"io.kestra.plugin.gcp.dataproc.batches.SparkSubmit"')]),t._v("\n")])])]),r("blockquote",[r("p",[t._v("Submit an "),r("a",{attrs:{href:"https://spark.apache.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Apache Spark"),r("OutboundLink")],1),t._v(" batch workload.")])]),t._v(" "),r("h2",{attrs:{id:"examples"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#examples"}},[t._v("#")]),t._v(" Examples")]),t._v(" "),r("div",{staticClass:"language-yaml extra-class"},[r("pre",{pre:!0,attrs:{class:"language-yaml"}},[r("code",[r("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"spark_submit"')]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"io.kestra.plugin.gcp.dataproc.batches.SparkSubmit"')]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("jarFileUris")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n  "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v("'gs://spark-jobs-kestra/spark-examples.jar'")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("mainClass")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" org.apache.spark.examples.SparkPi\n"),r("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("args")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" test"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("spark\n")])])]),r("h2",{attrs:{id:"properties"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#properties"}},[t._v("#")]),t._v(" Properties")]),t._v(" "),r("h3",{attrs:{id:"archiveuris"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#archiveuris"}},[t._v("#")]),t._v(" "),r("code",[t._v("archiveUris")])]),t._v(" "),r("ul",[r("li",[r("strong",[t._v("Type:")]),t._v(" "),r("mark",[t._v("array")])]),t._v(" "),r("li",[r("strong",[t._v("SubType:")]),t._v(" "),r("mark",[t._v("string")])]),t._v(" "),r("li",[r("strong",[t._v("Dynamic:")]),t._v(" ✔️")]),t._v(" "),r("li",[r("strong",[t._v("Required:")]),t._v(" ✔️")])]),t._v(" "),r("blockquote",[r("p",[t._v("HCFS URIs of archives to be extracted into the working director of each executor. Supported file types: "),r("code",[t._v(".jar")]),t._v(", "),r("code",[t._v(".tar")]),t._v(", "),r("code",[t._v(".tar.gz")]),t._v(", "),r("code",[t._v(".tgz")]),t._v(", and "),r("code",[t._v(".zip")]),t._v(".")])]),t._v(" "),r("p",[t._v("Hadoop Compatible File System (HCFS) URIs should be accessible from the cluster. Can be a GCS file with the gs:// prefix, an HDFS file on the cluster with the hdfs:// prefix, or a local file on the cluster with the file:// prefix")]),t._v(" "),r("h3",{attrs:{id:"args"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#args"}},[t._v("#")]),t._v(" "),r("code",[t._v("args")])]),t._v(" "),r("ul",[r("li",[r("strong",[t._v("Type:")]),t._v(" "),r("mark",[t._v("array")])]),t._v(" "),r("li",[r("strong",[t._v("SubType:")]),t._v(" "),r("mark",[t._v("string")])]),t._v(" "),r("li",[r("strong",[t._v("Dynamic:")]),t._v(" ✔️")]),t._v(" "),r("li",[r("strong",[t._v("Required:")]),t._v(" ✔️")])]),t._v(" "),r("blockquote",[r("p",[t._v("The arguments to pass to the driver.")])]),t._v(" "),r("p",[t._v("Do not include arguments that can be set as batch properties, such as "),r("code",[t._v("--conf")]),t._v(", since a collision can occur that causes an incorrect batch submission.")]),t._v(" "),r("h3",{attrs:{id:"execution"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#execution"}},[t._v("#")]),t._v(" "),r("code",[t._v("execution")])]),t._v(" "),r("ul",[r("li",[r("strong",[t._v("Type:")]),t._v(" "),r("mark",[r("a",{attrs:{href:"#executionconfiguration"}},[t._v("ExecutionConfiguration")])])]),t._v(" "),r("li",[r("strong",[t._v("Dynamic:")]),t._v(" ✔️")]),t._v(" "),r("li",[r("strong",[t._v("Required:")]),t._v(" ❌")])]),t._v(" "),r("blockquote",[r("p",[t._v("Execution configuration for a workload.")])]),t._v(" "),r("h3",{attrs:{id:"fileuris"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#fileuris"}},[t._v("#")]),t._v(" "),r("code",[t._v("fileUris")])]),t._v(" "),r("ul",[r("li",[r("strong",[t._v("Type:")]),t._v(" "),r("mark",[t._v("array")])]),t._v(" "),r("li",[r("strong",[t._v("SubType:")]),t._v(" "),r("mark",[t._v("string")])]),t._v(" "),r("li",[r("strong",[t._v("Dynamic:")]),t._v(" ✔️")]),t._v(" "),r("li",[r("strong",[t._v("Required:")]),t._v(" ✔️")])]),t._v(" "),r("blockquote",[r("p",[t._v("HCFS URIs of files to be placed in the working directory of each executor.")])]),t._v(" "),r("p",[t._v("Hadoop Compatible File System (HCFS) URIs should be accessible from the cluster. Can be a GCS file with the gs:// prefix, an HDFS file on the cluster with the hdfs:// prefix, or a local file on the cluster with the file:// prefix")]),t._v(" "),r("h3",{attrs:{id:"jarfileuris"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#jarfileuris"}},[t._v("#")]),t._v(" "),r("code",[t._v("jarFileUris")])]),t._v(" "),r("ul",[r("li",[r("strong",[t._v("Type:")]),t._v(" "),r("mark",[t._v("array")])]),t._v(" "),r("li",[r("strong",[t._v("SubType:")]),t._v(" "),r("mark",[t._v("string")])]),t._v(" "),r("li",[r("strong",[t._v("Dynamic:")]),t._v(" ✔️")]),t._v(" "),r("li",[r("strong",[t._v("Required:")]),t._v(" ✔️")])]),t._v(" "),r("blockquote",[r("p",[t._v("HCFS URIs of jar files to add to the classpath of the Spark driver and tasks.")])]),t._v(" "),r("p",[t._v("Hadoop Compatible File System (HCFS) URIs should be accessible from the cluster. Can be a GCS file with the gs:// prefix, an HDFS file on the cluster with the hdfs:// prefix, or a local file on the cluster with the file:// prefix")]),t._v(" "),r("h3",{attrs:{id:"mainclass"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#mainclass"}},[t._v("#")]),t._v(" "),r("code",[t._v("mainClass")])]),t._v(" "),r("ul",[r("li",[r("strong",[t._v("Type:")]),t._v(" "),r("mark",[t._v("string")])]),t._v(" "),r("li",[r("strong",[t._v("Dynamic:")]),t._v(" ✔️")]),t._v(" "),r("li",[r("strong",[t._v("Required:")]),t._v(" ✔️")])]),t._v(" "),r("blockquote",[r("p",[t._v("The name of the driver main class.")])]),t._v(" "),r("p",[t._v("The jar file that contains the class must be in the classpath or specified in "),r("code",[t._v("jarFileUris")])]),t._v(" "),r("h3",{attrs:{id:"name"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#name"}},[t._v("#")]),t._v(" "),r("code",[t._v("name")])]),t._v(" "),r("ul",[r("li",[r("strong",[t._v("Type:")]),t._v(" "),r("mark",[t._v("string")])]),t._v(" "),r("li",[r("strong",[t._v("Dynamic:")]),t._v(" ✔️")]),t._v(" "),r("li",[r("strong",[t._v("Required:")]),t._v(" ✔️")])]),t._v(" "),r("blockquote",[r("p",[t._v("The batch name")])]),t._v(" "),r("h3",{attrs:{id:"peripherals"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#peripherals"}},[t._v("#")]),t._v(" "),r("code",[t._v("peripherals")])]),t._v(" "),r("ul",[r("li",[r("strong",[t._v("Type:")]),t._v(" "),r("mark",[r("a",{attrs:{href:"#peripheralsconfiguration"}},[t._v("PeripheralsConfiguration")])])]),t._v(" "),r("li",[r("strong",[t._v("Dynamic:")]),t._v(" ✔️")]),t._v(" "),r("li",[r("strong",[t._v("Required:")]),t._v(" ❌")])]),t._v(" "),r("blockquote",[r("p",[t._v("Peripherals configuration for a workload.")])]),t._v(" "),r("h3",{attrs:{id:"projectid"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#projectid"}},[t._v("#")]),t._v(" "),r("code",[t._v("projectId")])]),t._v(" "),r("ul",[r("li",[r("strong",[t._v("Type:")]),t._v(" "),r("mark",[t._v("string")])]),t._v(" "),r("li",[r("strong",[t._v("Dynamic:")]),t._v(" ✔️")]),t._v(" "),r("li",[r("strong",[t._v("Required:")]),t._v(" ❌")])]),t._v(" "),r("blockquote",[r("p",[t._v("The GCP project id")])]),t._v(" "),r("h3",{attrs:{id:"region"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#region"}},[t._v("#")]),t._v(" "),r("code",[t._v("region")])]),t._v(" "),r("ul",[r("li",[r("strong",[t._v("Type:")]),t._v(" "),r("mark",[t._v("string")])]),t._v(" "),r("li",[r("strong",[t._v("Dynamic:")]),t._v(" ✔️")]),t._v(" "),r("li",[r("strong",[t._v("Required:")]),t._v(" ✔️")])]),t._v(" "),r("blockquote",[r("p",[t._v("The region")])]),t._v(" "),r("h3",{attrs:{id:"runtime"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#runtime"}},[t._v("#")]),t._v(" "),r("code",[t._v("runtime")])]),t._v(" "),r("ul",[r("li",[r("strong",[t._v("Type:")]),t._v(" "),r("mark",[r("a",{attrs:{href:"#runtimeconfiguration"}},[t._v("RuntimeConfiguration")])])]),t._v(" "),r("li",[r("strong",[t._v("Dynamic:")]),t._v(" ✔️")]),t._v(" "),r("li",[r("strong",[t._v("Required:")]),t._v(" ❌")])]),t._v(" "),r("blockquote",[r("p",[t._v("Runtime configuration for a workload.")])]),t._v(" "),r("h3",{attrs:{id:"scopes"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#scopes"}},[t._v("#")]),t._v(" "),r("code",[t._v("scopes")])]),t._v(" "),r("ul",[r("li",[r("strong",[t._v("Type:")]),t._v(" "),r("mark",[t._v("array")])]),t._v(" "),r("li",[r("strong",[t._v("SubType:")]),t._v(" "),r("mark",[t._v("string")])]),t._v(" "),r("li",[r("strong",[t._v("Dynamic:")]),t._v(" ✔️")]),t._v(" "),r("li",[r("strong",[t._v("Required:")]),t._v(" ❌")]),t._v(" "),r("li",[r("strong",[t._v("Default:")]),t._v(" "),r("code",[t._v("[https://www.googleapis.com/auth/cloud-platform]")])])]),t._v(" "),r("blockquote",[r("p",[t._v("The GCP scopes to used")])]),t._v(" "),r("h3",{attrs:{id:"serviceaccount"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#serviceaccount"}},[t._v("#")]),t._v(" "),r("code",[t._v("serviceAccount")])]),t._v(" "),r("ul",[r("li",[r("strong",[t._v("Type:")]),t._v(" "),r("mark",[t._v("string")])]),t._v(" "),r("li",[r("strong",[t._v("Dynamic:")]),t._v(" ✔️")]),t._v(" "),r("li",[r("strong",[t._v("Required:")]),t._v(" ❌")])]),t._v(" "),r("blockquote",[r("p",[t._v("The GCP service account key")])]),t._v(" "),r("h2",{attrs:{id:"outputs"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#outputs"}},[t._v("#")]),t._v(" Outputs")]),t._v(" "),r("h3",{attrs:{id:"state"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#state"}},[t._v("#")]),t._v(" "),r("code",[t._v("state")])]),t._v(" "),r("ul",[r("li",[r("p",[r("strong",[t._v("Type:")]),t._v(" "),r("mark",[t._v("string")])])]),t._v(" "),r("li",[r("p",[r("strong",[t._v("Possible Values:")])]),t._v(" "),r("ul",[r("li",[r("code",[t._v("STATE_UNSPECIFIED")])]),t._v(" "),r("li",[r("code",[t._v("PENDING")])]),t._v(" "),r("li",[r("code",[t._v("RUNNING")])]),t._v(" "),r("li",[r("code",[t._v("CANCELLING")])]),t._v(" "),r("li",[r("code",[t._v("CANCELLED")])]),t._v(" "),r("li",[r("code",[t._v("SUCCEEDED")])]),t._v(" "),r("li",[r("code",[t._v("FAILED")])]),t._v(" "),r("li",[r("code",[t._v("UNRECOGNIZED")])])])])]),t._v(" "),r("blockquote",[r("p",[t._v("The state of the batch.")])]),t._v(" "),r("h2",{attrs:{id:"definitions"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#definitions"}},[t._v("#")]),t._v(" Definitions")]),t._v(" "),r("h3",{attrs:{id:"peripheralsconfiguration"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#peripheralsconfiguration"}},[t._v("#")]),t._v(" "),r("code",[t._v("PeripheralsConfiguration")])]),t._v(" "),r("h4",{attrs:{id:"metastoreservice"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#metastoreservice"}},[t._v("#")]),t._v(" "),r("code",[t._v("metastoreService")])]),t._v(" "),r("ul",[r("li",[r("strong",[t._v("Type:")]),t._v(" "),r("mark",[t._v("string")])]),t._v(" "),r("li",[r("strong",[t._v("Dynamic:")]),t._v(" ✔️")]),t._v(" "),r("li",[r("strong",[t._v("Required:")]),t._v(" ❌")])]),t._v(" "),r("blockquote",[r("p",[t._v("Resource name of an existing Dataproc Metastore service.")])]),t._v(" "),r("p",[t._v("Example: "),r("code",[t._v("projects/[project_id]/locations/[region]/services/[service_id]")])]),t._v(" "),r("h4",{attrs:{id:"sparkhistoryserver"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#sparkhistoryserver"}},[t._v("#")]),t._v(" "),r("code",[t._v("sparkHistoryServer")])]),t._v(" "),r("ul",[r("li",[r("strong",[t._v("Type:")]),t._v(" "),r("mark",[r("a",{attrs:{href:"#sparkhistoryserverconfiguration"}},[t._v("SparkHistoryServerConfiguration")])])]),t._v(" "),r("li",[r("strong",[t._v("Dynamic:")]),t._v(" ✔️")]),t._v(" "),r("li",[r("strong",[t._v("Required:")]),t._v(" ❌")])]),t._v(" "),r("blockquote",[r("p",[t._v("Resource name of an existing Dataproc Metastore service.")])]),t._v(" "),r("p",[t._v("Example: "),r("code",[t._v("projects/[project_id]/locations/[region]/services/[service_id]")])]),t._v(" "),r("h3",{attrs:{id:"runtimeconfiguration"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#runtimeconfiguration"}},[t._v("#")]),t._v(" "),r("code",[t._v("RuntimeConfiguration")])]),t._v(" "),r("h4",{attrs:{id:"containerimage"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#containerimage"}},[t._v("#")]),t._v(" "),r("code",[t._v("containerImage")])]),t._v(" "),r("ul",[r("li",[r("strong",[t._v("Type:")]),t._v(" "),r("mark",[t._v("string")])]),t._v(" "),r("li",[r("strong",[t._v("Dynamic:")]),t._v(" ✔️")]),t._v(" "),r("li",[r("strong",[t._v("Required:")]),t._v(" ❌")])]),t._v(" "),r("blockquote",[r("p",[t._v("Optional custom container image for the job runtime environment.")])]),t._v(" "),r("p",[t._v("If not specified, a default container image will be used.")]),t._v(" "),r("h4",{attrs:{id:"properties-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#properties-2"}},[t._v("#")]),t._v(" "),r("code",[t._v("properties")])]),t._v(" "),r("ul",[r("li",[r("strong",[t._v("Type:")]),t._v(" "),r("mark",[t._v("object")])]),t._v(" "),r("li",[r("strong",[t._v("SubType:")]),t._v(" "),r("mark",[t._v("string")])]),t._v(" "),r("li",[r("strong",[t._v("Dynamic:")]),t._v(" ✔️")]),t._v(" "),r("li",[r("strong",[t._v("Required:")]),t._v(" ❌")])]),t._v(" "),r("blockquote",[r("p",[t._v("properties used to configure the workload execution (map of key/value pairs).")])]),t._v(" "),r("h4",{attrs:{id:"version"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#version"}},[t._v("#")]),t._v(" "),r("code",[t._v("version")])]),t._v(" "),r("ul",[r("li",[r("strong",[t._v("Type:")]),t._v(" "),r("mark",[t._v("string")])]),t._v(" "),r("li",[r("strong",[t._v("Dynamic:")]),t._v(" ✔️")]),t._v(" "),r("li",[r("strong",[t._v("Required:")]),t._v(" ❌")])]),t._v(" "),r("blockquote",[r("p",[t._v("Version of the batch runtime.")])]),t._v(" "),r("h3",{attrs:{id:"sparkhistoryserverconfiguration"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#sparkhistoryserverconfiguration"}},[t._v("#")]),t._v(" "),r("code",[t._v("SparkHistoryServerConfiguration")])]),t._v(" "),r("h4",{attrs:{id:"dataproccluster"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#dataproccluster"}},[t._v("#")]),t._v(" "),r("code",[t._v("dataprocCluster")])]),t._v(" "),r("ul",[r("li",[r("strong",[t._v("Type:")]),t._v(" "),r("mark",[t._v("string")])]),t._v(" "),r("li",[r("strong",[t._v("Dynamic:")]),t._v(" ✔️")]),t._v(" "),r("li",[r("strong",[t._v("Required:")]),t._v(" ❌")])]),t._v(" "),r("blockquote",[r("p",[t._v("Resource name of an existing Dataproc Cluster to act as a Spark History Server for the workload.")])]),t._v(" "),r("p",[t._v("Example: "),r("code",[t._v("projects/[project_id]/regions/[region]/clusters/[cluster_name]")])]),t._v(" "),r("h3",{attrs:{id:"executionconfiguration"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#executionconfiguration"}},[t._v("#")]),t._v(" "),r("code",[t._v("ExecutionConfiguration")])]),t._v(" "),r("h4",{attrs:{id:"kmskey"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#kmskey"}},[t._v("#")]),t._v(" "),r("code",[t._v("kmsKey")])]),t._v(" "),r("ul",[r("li",[r("strong",[t._v("Type:")]),t._v(" "),r("mark",[t._v("string")])]),t._v(" "),r("li",[r("strong",[t._v("Dynamic:")]),t._v(" ✔️")]),t._v(" "),r("li",[r("strong",[t._v("Required:")]),t._v(" ❌")])]),t._v(" "),r("blockquote",[r("p",[t._v("The Cloud KMS key to use for encryption.")])]),t._v(" "),r("h4",{attrs:{id:"networktags"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#networktags"}},[t._v("#")]),t._v(" "),r("code",[t._v("networkTags")])]),t._v(" "),r("ul",[r("li",[r("strong",[t._v("Type:")]),t._v(" "),r("mark",[t._v("array")])]),t._v(" "),r("li",[r("strong",[t._v("SubType:")]),t._v(" "),r("mark",[t._v("string")])]),t._v(" "),r("li",[r("strong",[t._v("Dynamic:")]),t._v(" ✔️")]),t._v(" "),r("li",[r("strong",[t._v("Required:")]),t._v(" ❌")])]),t._v(" "),r("blockquote",[r("p",[t._v("Tags used for network traffic control.")])]),t._v(" "),r("h4",{attrs:{id:"networkuri"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#networkuri"}},[t._v("#")]),t._v(" "),r("code",[t._v("networkUri")])]),t._v(" "),r("ul",[r("li",[r("strong",[t._v("Type:")]),t._v(" "),r("mark",[t._v("string")])]),t._v(" "),r("li",[r("strong",[t._v("Dynamic:")]),t._v(" ✔️")]),t._v(" "),r("li",[r("strong",[t._v("Required:")]),t._v(" ❌")])]),t._v(" "),r("blockquote",[r("p",[t._v("Network URI to connect workload to.")])]),t._v(" "),r("h4",{attrs:{id:"serviceaccountemail"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#serviceaccountemail"}},[t._v("#")]),t._v(" "),r("code",[t._v("serviceAccountEmail")])]),t._v(" "),r("ul",[r("li",[r("strong",[t._v("Type:")]),t._v(" "),r("mark",[t._v("string")])]),t._v(" "),r("li",[r("strong",[t._v("Dynamic:")]),t._v(" ✔️")]),t._v(" "),r("li",[r("strong",[t._v("Required:")]),t._v(" ❌")])]),t._v(" "),r("blockquote",[r("p",[t._v("Service account used to execute workload.")])]),t._v(" "),r("h4",{attrs:{id:"subnetworkuri"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#subnetworkuri"}},[t._v("#")]),t._v(" "),r("code",[t._v("subnetworkUri")])]),t._v(" "),r("ul",[r("li",[r("strong",[t._v("Type:")]),t._v(" "),r("mark",[t._v("string")])]),t._v(" "),r("li",[r("strong",[t._v("Dynamic:")]),t._v(" ✔️")]),t._v(" "),r("li",[r("strong",[t._v("Required:")]),t._v(" ❌")])]),t._v(" "),r("blockquote",[r("p",[t._v("Subnetwork URI to connect workload to.")])])])}),[],!1,null,null,null);e.default=s.exports}}]);