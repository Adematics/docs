(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{253:function(t,a,e){"use strict";e.r(a);var s=e(0),n=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"dynamic-fields"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dynamic-fields"}},[t._v("#")]),t._v(" Dynamic fields")]),t._v(" "),e("p",[t._v("Dynamic fields are specific fields for task description. They use the power of "),e("a",{attrs:{href:"https://handlebarsjs.com/guide/",target:"_blank",rel:"noopener noreferrer"}},[t._v("handlebars"),e("OutboundLink")],1),t._v(" with Kestra's special context system, allowing powerfull task description and composition.")]),t._v(" "),e("h2",{attrs:{id:"context-concept"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#context-concept"}},[t._v("#")]),t._v(" Context concept")]),t._v(" "),e("p",[t._v("Dynamic fields can use variable information registrered / existing in the execution context. This context are some data injected in dynamic fields and are from different sources:")]),t._v(" "),e("p",[e("strong",[t._v("Core context")]),t._v(": These data come from Kestra's general context it make it possible to reach system wide information. See below what data are concretely provided in handlebars templates.")]),t._v(" "),e("p",[e("strong",[t._v("Task context")]),t._v(": This is some task related context data. You can reach data from task curently processed. Data are reachable from the "),e("strong",[t._v("task")]),t._v(" variable.")]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("format")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" second "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("task.id"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[e("strong",[t._v("Flow context")]),t._v(": The current flow processing let you generate data from one task and make it availalbe to other tasks of the same flow. So one task can use data produced else where in the current flow. Data are reachable from the "),e("strong",[t._v("taskrun")]),t._v(" variable.")]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("format")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"{{task.id}} > {{taskrun.value}} > {{taskrun.startDate}}"')]),t._v("\n")])])]),e("p",[e("strong",[t._v("Inter flow context")]),t._v(": A flow processing can generate some contextual data and can be shared to other flow. So flows can reach other flow data from context.")]),t._v(" "),e("p",[e("strong",[t._v("Input context")]),t._v(": A task can access flow input variable using the "),e("strong",[t._v("input")]),t._v(" value. Have a look at "),e("a",{attrs:{href:"/docs/inputs"}},[t._v("inputs")]),t._v(" for more details about flows input system.")]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" context_input\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" org.kestra.tests\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("inputs")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" myinput\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" STRING\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tasks")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" mytask\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" org.kestra.core.tasks.debugs.Return\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("format")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"{{inputs.myinput}}"')]),t._v("\n")])])]),e("h2",{attrs:{id:"usage"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#usage"}},[t._v("#")]),t._v(" Usage")]),t._v(" "),e("h2",{attrs:{id:"available-context-in-kestra"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#available-context-in-kestra"}},[t._v("#")]),t._v(" Available context in Kestra")])])}),[],!1,null,null,null);a.default=n.exports}}]);