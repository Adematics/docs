(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[]]);!function(e){function t(t){for(var a,i,s=t[0],l=t[1],c=t[2],d=0,p=[];d<s.length;d++)i=s[d],Object.prototype.hasOwnProperty.call(o,i)&&o[i]&&p.push(o[i][0]),o[i]=0;for(a in l)Object.prototype.hasOwnProperty.call(l,a)&&(e[a]=l[a]);for(u&&u(t);p.length;)p.shift()();return r.push.apply(r,c||[]),n()}function n(){for(var e,t=0;t<r.length;t++){for(var n=r[t],a=!0,s=1;s<n.length;s++){var l=n[s];0!==o[l]&&(a=!1)}a&&(r.splice(t--,1),e=i(i.s=n[0]))}return e}var a={},o={5:0},r=[];function i(t){if(a[t])return a[t].exports;var n=a[t]={i:t,l:!1,exports:{}};return e[t].call(n.exports,n,n.exports,i),n.l=!0,n.exports}i.e=function(e){var t=[],n=o[e];if(0!==n)if(n)t.push(n[2]);else{var a=new Promise((function(t,a){n=o[e]=[t,a]}));t.push(n[2]=a);var r,s=document.createElement("script");s.charset="utf-8",s.timeout=120,i.nc&&s.setAttribute("nonce",i.nc),s.src=function(e){return i.p+"assets/js/"+({}[e]||e)+"."+{1:"5ac7cd56",2:"b97189d6",3:"56245d8e",4:"d1f9c441",6:"09846cdf",7:"eb6197ac",8:"5a3dd977",9:"07449737",10:"d448eb4f",11:"1a3b153a",12:"fddf963f",13:"008a71f7",14:"29c93d7b",15:"f5a43ff3",16:"af839798",17:"d415db2c",18:"a05016aa",19:"f1695a52",20:"83fe299f",21:"07cdd4b5",22:"1357e554",23:"c76b1d8a",24:"02dcfb11",25:"6f96a370",26:"76e9909f",27:"bf4f5030",28:"944e4986",29:"48e8cebf",30:"a89d957c",31:"6e691771",32:"e2999f28",33:"3eee4895",34:"4f46a25d",35:"3ccc29d7",36:"33b91fa8",37:"c55eed53",38:"fd76af93",39:"196ae305",40:"c0faa0f8",41:"96a0829a",42:"cb80c495",43:"5e1cca88",44:"fb9890e2",45:"debc5cfe",46:"0104115b",47:"6b003ef9",48:"89660022",49:"7e135f1b",50:"8f6e6944",51:"209b8f28",52:"24bd5076",53:"a60161cd",54:"7399c066",55:"80e4ccb6",56:"08c37d92",57:"36b8cc0e",58:"4200340a",59:"6f15ac2a",60:"9ddf0ab2",61:"bde64fab",62:"13115f5f",63:"4bed9463",64:"b4e58f7c",65:"a76badd5",66:"2275cb3a",67:"1c878b87",68:"76af1e0c",69:"91047b97",70:"54a30b97",71:"a430a396",72:"221eb58c",73:"862ad6ea",74:"66d1fc88",75:"d48fac0e",76:"d221ad0a",77:"b94d4756",78:"da75c8ab",79:"4ca1e5e9",80:"85bfe093",81:"66fbc1a8",82:"fb58bd8b",83:"377c4abe",84:"6ba2e6a1",85:"b529af85",86:"2c2c01b1",87:"4fac3e00",88:"6861ea7c",89:"e7803c03",90:"2c6086d9",91:"144fa360",92:"e0cd2930",93:"474a9052",94:"36ae02ef",95:"cfdbc918",96:"ba710979",97:"5a7bd29d",98:"6a88ce81",99:"b96689c9",100:"b06325c7",101:"ab9edd39",102:"b75d172d",103:"2c7f83cd",104:"16a337a9",105:"4532a538",106:"bf8d2a57",107:"03ef419e",108:"d82d9bcb",109:"fb0a9358",110:"a65a2090",111:"7993423d",112:"15bcbd51",113:"7433ffda",114:"fb081191",115:"c75c9439",116:"24476fac",117:"bb1d184c",118:"f085330e",119:"294758d6",120:"b23d93be",121:"614b632c",122:"4d0a2209",123:"292f8cb9",124:"74adaca1",125:"8c6cffec",126:"ce936c59",127:"a6898288",128:"2c2746c4",129:"9faa169c",130:"859f4830",131:"4bcd1ca7",132:"a1b0aedf",133:"6ea042cd",134:"7c13424a",135:"878adb2d",136:"7a9ba473",137:"8add5dab",138:"3b73048e",139:"086f1f2d",140:"c70a4e06",141:"fd0b7376",142:"1a761e3c",143:"f58708d5",144:"da1c307d",145:"45a6602a",146:"5974f40c",147:"a927d2c3",148:"cc521cd0",149:"66b1235b",150:"faf350e0",151:"46a5cbfe",152:"43c459ce",153:"a17a5514",154:"e6d99d05",155:"e80a4f00",156:"688210b5",157:"c94650ec",158:"7cf819c9",159:"a4bae19f",160:"bd5ca49c",161:"b63e3751",162:"acac4bf9",163:"98b77825",164:"4a03ca2e",165:"7fe6f7ca",166:"8f4cd53a",167:"eb63886f",168:"e6786353",169:"0f530690",170:"9412c1a1",171:"dad697de",172:"69728156",173:"801df45c",174:"48436dfd",175:"41f17bee",176:"7372cb66",177:"9b130cc9",178:"cef46caf",179:"b848bc90",180:"52e98808",181:"012b1be0",182:"9eb08e57",183:"0b1efe82",184:"2d8d5df4",185:"b6e4fa03",186:"25cdd062",187:"9834cca0",188:"bc738f0f",189:"95b93c93",190:"c7dec2f6",191:"dd53cef0",192:"747c4910",193:"febfd0c4",194:"17d563eb",195:"ef97238e",196:"6a4406d7",197:"4c6fbe11",198:"afab7410",199:"1774e8ca",200:"3dd0c898",201:"c9c767e7",202:"c1d7c137",203:"6a343f96",204:"36b61915",205:"b2fc633c",206:"a40e2dc2",207:"0202c362",208:"9c42c2bf",209:"e13cefbf",210:"796e50aa",211:"8e0a68a9",212:"8d661974",213:"64a46208",214:"349020ba",215:"841a9ce1",216:"476a7a4f",217:"d0bc6fb5",218:"3c450899",219:"02c9062e",220:"21819974",221:"846f82ba",222:"c088b952",223:"c873ee76",224:"4f487af0",225:"55e148f2",226:"253802bb",227:"08168b33",228:"5cdbd54e",229:"2e351d0c",230:"9e8fddf1",231:"ae65385f",232:"16cc9c42",233:"9efd11a8",234:"a756e705",235:"4db187a0",236:"76ec200b",237:"1b5f35ef",238:"8f87a46b",239:"57c91887",240:"57c3124c",241:"1c12a71a",242:"883c3a17",243:"cdc71131",244:"700896ee",245:"8469f32e",246:"d91e6afd",247:"db75ad72",248:"793413c1",249:"851a2357",250:"46431ffd",251:"28a16668",252:"c020328a",253:"82207cd2",254:"3c289f2e",255:"e7e31552",256:"455ad89d",257:"f03f5ca3"}[e]+".js"}(e);var l=new Error;r=function(t){s.onerror=s.onload=null,clearTimeout(c);var n=o[e];if(0!==n){if(n){var a=t&&("load"===t.type?"missing":t.type),r=t&&t.target&&t.target.src;l.message="Loading chunk "+e+" failed.\n("+a+": "+r+")",l.name="ChunkLoadError",l.type=a,l.request=r,n[1](l)}o[e]=void 0}};var c=setTimeout((function(){r({type:"timeout",target:s})}),12e4);s.onerror=s.onload=r,document.head.appendChild(s)}return Promise.all(t)},i.m=e,i.c=a,i.d=function(e,t,n){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,t){if(1&t&&(e=i(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(i.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)i.d(n,a,function(t){return e[t]}.bind(null,a));return n},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="/",i.oe=function(e){throw console.error(e),e};var s=window.webpackJsonp=window.webpackJsonp||[],l=s.push.bind(s);s.push=t,s=s.slice();for(var c=0;c<s.length;c++)t(s[c]);var u=l;r.push([225,0]),n()}([function(e,t){var n=function(e){return e&&e.Math==Math&&e};e.exports=n("object"==typeof globalThis&&globalThis)||n("object"==typeof window&&window)||n("object"==typeof self&&self)||n("object"==typeof global&&global)||function(){return this}()||Function("return this")()},function(e,t,n){var a=n(0),o=n(26).f,r=n(25),i=n(15),s=n(100),l=n(106),c=n(108);e.exports=function(e,t){var n,u,d,p,m,h=e.target,g=e.global,f=e.stat;if(n=g?a:f?a[h]||s(h,{}):(a[h]||{}).prototype)for(u in t){if(p=t[u],d=e.noTargetGet?(m=o(n,u))&&m.value:n[u],!c(g?u:h+(f?".":"#")+u,e.forced)&&void 0!==d){if(typeof p==typeof d)continue;l(p,d)}(e.sham||d&&d.sham)&&r(p,"sham",!0),i(n,u,p,e)}}},function(e,t,n){var a=n(54),o=Function.prototype,r=o.bind,i=o.call,s=a&&r.bind(i,i);e.exports=a?function(e){return e&&s(e)}:function(e){return e&&function(){return i.apply(e,arguments)}}},function(e,t){e.exports=function(e){try{return!!e()}catch(e){return!0}}},function(e,t,n){"use strict";
/*!
 * Vue.js v2.6.14
 * (c) 2014-2021 Evan You
 * Released under the MIT License.
 */var a=Object.freeze({});function o(e){return null==e}function r(e){return null!=e}function i(e){return!0===e}function s(e){return"string"==typeof e||"number"==typeof e||"symbol"==typeof e||"boolean"==typeof e}function l(e){return null!==e&&"object"==typeof e}var c=Object.prototype.toString;function u(e){return"[object Object]"===c.call(e)}function d(e){return"[object RegExp]"===c.call(e)}function p(e){var t=parseFloat(String(e));return t>=0&&Math.floor(t)===t&&isFinite(e)}function m(e){return r(e)&&"function"==typeof e.then&&"function"==typeof e.catch}function h(e){return null==e?"":Array.isArray(e)||u(e)&&e.toString===c?JSON.stringify(e,null,2):String(e)}function g(e){var t=parseFloat(e);return isNaN(t)?e:t}function f(e,t){for(var n=Object.create(null),a=e.split(","),o=0;o<a.length;o++)n[a[o]]=!0;return t?function(e){return n[e.toLowerCase()]}:function(e){return n[e]}}f("slot,component",!0);var y=f("key,ref,slot,slot-scope,is");function w(e,t){if(e.length){var n=e.indexOf(t);if(n>-1)return e.splice(n,1)}}var v=Object.prototype.hasOwnProperty;function b(e,t){return v.call(e,t)}function k(e){var t=Object.create(null);return function(n){return t[n]||(t[n]=e(n))}}var x=/-(\w)/g,T=k((function(e){return e.replace(x,(function(e,t){return t?t.toUpperCase():""}))})),M=k((function(e){return e.charAt(0).toUpperCase()+e.slice(1)})),I=/\B([A-Z])/g,j=k((function(e){return e.replace(I,"-$1").toLowerCase()}));var D=Function.prototype.bind?function(e,t){return e.bind(t)}:function(e,t){function n(n){var a=arguments.length;return a?a>1?e.apply(t,arguments):e.call(t,n):e.call(t)}return n._length=e.length,n};function z(e,t){t=t||0;for(var n=e.length-t,a=new Array(n);n--;)a[n]=e[n+t];return a}function S(e,t){for(var n in t)e[n]=t[n];return e}function C(e){for(var t={},n=0;n<e.length;n++)e[n]&&S(t,e[n]);return t}function A(e,t,n){}var E=function(e,t,n){return!1},L=function(e){return e};function _(e,t){if(e===t)return!0;var n=l(e),a=l(t);if(!n||!a)return!n&&!a&&String(e)===String(t);try{var o=Array.isArray(e),r=Array.isArray(t);if(o&&r)return e.length===t.length&&e.every((function(e,n){return _(e,t[n])}));if(e instanceof Date&&t instanceof Date)return e.getTime()===t.getTime();if(o||r)return!1;var i=Object.keys(e),s=Object.keys(t);return i.length===s.length&&i.every((function(n){return _(e[n],t[n])}))}catch(e){return!1}}function N(e,t){for(var n=0;n<e.length;n++)if(_(e[n],t))return n;return-1}function O(e){var t=!1;return function(){t||(t=!0,e.apply(this,arguments))}}var P=["component","directive","filter"],K=["beforeCreate","created","beforeMount","mounted","beforeUpdate","updated","beforeDestroy","destroyed","activated","deactivated","errorCaptured","serverPrefetch"],q={optionMergeStrategies:Object.create(null),silent:!1,productionTip:!1,devtools:!1,performance:!1,errorHandler:null,warnHandler:null,ignoredElements:[],keyCodes:Object.create(null),isReservedTag:E,isReservedAttr:E,isUnknownElement:E,getTagNamespace:A,parsePlatformTagName:L,mustUseProp:E,async:!0,_lifecycleHooks:K},R=/a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;function U(e,t,n,a){Object.defineProperty(e,t,{value:n,enumerable:!!a,writable:!0,configurable:!0})}var W=new RegExp("[^"+R.source+".$_\\d]");var F,Y="__proto__"in{},B="undefined"!=typeof window,G="undefined"!=typeof WXEnvironment&&!!WXEnvironment.platform,Z=G&&WXEnvironment.platform.toLowerCase(),H=B&&window.navigator.userAgent.toLowerCase(),Q=H&&/msie|trident/.test(H),$=H&&H.indexOf("msie 9.0")>0,J=H&&H.indexOf("edge/")>0,V=(H&&H.indexOf("android"),H&&/iphone|ipad|ipod|ios/.test(H)||"ios"===Z),X=(H&&/chrome\/\d+/.test(H),H&&/phantomjs/.test(H),H&&H.match(/firefox\/(\d+)/)),ee={}.watch,te=!1;if(B)try{var ne={};Object.defineProperty(ne,"passive",{get:function(){te=!0}}),window.addEventListener("test-passive",null,ne)}catch(e){}var ae=function(){return void 0===F&&(F=!B&&!G&&"undefined"!=typeof global&&(global.process&&"server"===global.process.env.VUE_ENV)),F},oe=B&&window.__VUE_DEVTOOLS_GLOBAL_HOOK__;function re(e){return"function"==typeof e&&/native code/.test(e.toString())}var ie,se="undefined"!=typeof Symbol&&re(Symbol)&&"undefined"!=typeof Reflect&&re(Reflect.ownKeys);ie="undefined"!=typeof Set&&re(Set)?Set:function(){function e(){this.set=Object.create(null)}return e.prototype.has=function(e){return!0===this.set[e]},e.prototype.add=function(e){this.set[e]=!0},e.prototype.clear=function(){this.set=Object.create(null)},e}();var le=A,ce=0,ue=function(){this.id=ce++,this.subs=[]};ue.prototype.addSub=function(e){this.subs.push(e)},ue.prototype.removeSub=function(e){w(this.subs,e)},ue.prototype.depend=function(){ue.target&&ue.target.addDep(this)},ue.prototype.notify=function(){var e=this.subs.slice();for(var t=0,n=e.length;t<n;t++)e[t].update()},ue.target=null;var de=[];function pe(e){de.push(e),ue.target=e}function me(){de.pop(),ue.target=de[de.length-1]}var he=function(e,t,n,a,o,r,i,s){this.tag=e,this.data=t,this.children=n,this.text=a,this.elm=o,this.ns=void 0,this.context=r,this.fnContext=void 0,this.fnOptions=void 0,this.fnScopeId=void 0,this.key=t&&t.key,this.componentOptions=i,this.componentInstance=void 0,this.parent=void 0,this.raw=!1,this.isStatic=!1,this.isRootInsert=!0,this.isComment=!1,this.isCloned=!1,this.isOnce=!1,this.asyncFactory=s,this.asyncMeta=void 0,this.isAsyncPlaceholder=!1},ge={child:{configurable:!0}};ge.child.get=function(){return this.componentInstance},Object.defineProperties(he.prototype,ge);var fe=function(e){void 0===e&&(e="");var t=new he;return t.text=e,t.isComment=!0,t};function ye(e){return new he(void 0,void 0,void 0,String(e))}function we(e){var t=new he(e.tag,e.data,e.children&&e.children.slice(),e.text,e.elm,e.context,e.componentOptions,e.asyncFactory);return t.ns=e.ns,t.isStatic=e.isStatic,t.key=e.key,t.isComment=e.isComment,t.fnContext=e.fnContext,t.fnOptions=e.fnOptions,t.fnScopeId=e.fnScopeId,t.asyncMeta=e.asyncMeta,t.isCloned=!0,t}var ve=Array.prototype,be=Object.create(ve);["push","pop","shift","unshift","splice","sort","reverse"].forEach((function(e){var t=ve[e];U(be,e,(function(){for(var n=[],a=arguments.length;a--;)n[a]=arguments[a];var o,r=t.apply(this,n),i=this.__ob__;switch(e){case"push":case"unshift":o=n;break;case"splice":o=n.slice(2)}return o&&i.observeArray(o),i.dep.notify(),r}))}));var ke=Object.getOwnPropertyNames(be),xe=!0;function Te(e){xe=e}var Me=function(e){this.value=e,this.dep=new ue,this.vmCount=0,U(e,"__ob__",this),Array.isArray(e)?(Y?function(e,t){e.__proto__=t}(e,be):function(e,t,n){for(var a=0,o=n.length;a<o;a++){var r=n[a];U(e,r,t[r])}}(e,be,ke),this.observeArray(e)):this.walk(e)};function Ie(e,t){var n;if(l(e)&&!(e instanceof he))return b(e,"__ob__")&&e.__ob__ instanceof Me?n=e.__ob__:xe&&!ae()&&(Array.isArray(e)||u(e))&&Object.isExtensible(e)&&!e._isVue&&(n=new Me(e)),t&&n&&n.vmCount++,n}function je(e,t,n,a,o){var r=new ue,i=Object.getOwnPropertyDescriptor(e,t);if(!i||!1!==i.configurable){var s=i&&i.get,l=i&&i.set;s&&!l||2!==arguments.length||(n=e[t]);var c=!o&&Ie(n);Object.defineProperty(e,t,{enumerable:!0,configurable:!0,get:function(){var t=s?s.call(e):n;return ue.target&&(r.depend(),c&&(c.dep.depend(),Array.isArray(t)&&Se(t))),t},set:function(t){var a=s?s.call(e):n;t===a||t!=t&&a!=a||s&&!l||(l?l.call(e,t):n=t,c=!o&&Ie(t),r.notify())}})}}function De(e,t,n){if(Array.isArray(e)&&p(t))return e.length=Math.max(e.length,t),e.splice(t,1,n),n;if(t in e&&!(t in Object.prototype))return e[t]=n,n;var a=e.__ob__;return e._isVue||a&&a.vmCount?n:a?(je(a.value,t,n),a.dep.notify(),n):(e[t]=n,n)}function ze(e,t){if(Array.isArray(e)&&p(t))e.splice(t,1);else{var n=e.__ob__;e._isVue||n&&n.vmCount||b(e,t)&&(delete e[t],n&&n.dep.notify())}}function Se(e){for(var t=void 0,n=0,a=e.length;n<a;n++)(t=e[n])&&t.__ob__&&t.__ob__.dep.depend(),Array.isArray(t)&&Se(t)}Me.prototype.walk=function(e){for(var t=Object.keys(e),n=0;n<t.length;n++)je(e,t[n])},Me.prototype.observeArray=function(e){for(var t=0,n=e.length;t<n;t++)Ie(e[t])};var Ce=q.optionMergeStrategies;function Ae(e,t){if(!t)return e;for(var n,a,o,r=se?Reflect.ownKeys(t):Object.keys(t),i=0;i<r.length;i++)"__ob__"!==(n=r[i])&&(a=e[n],o=t[n],b(e,n)?a!==o&&u(a)&&u(o)&&Ae(a,o):De(e,n,o));return e}function Ee(e,t,n){return n?function(){var a="function"==typeof t?t.call(n,n):t,o="function"==typeof e?e.call(n,n):e;return a?Ae(a,o):o}:t?e?function(){return Ae("function"==typeof t?t.call(this,this):t,"function"==typeof e?e.call(this,this):e)}:t:e}function Le(e,t){var n=t?e?e.concat(t):Array.isArray(t)?t:[t]:e;return n?function(e){for(var t=[],n=0;n<e.length;n++)-1===t.indexOf(e[n])&&t.push(e[n]);return t}(n):n}function _e(e,t,n,a){var o=Object.create(e||null);return t?S(o,t):o}Ce.data=function(e,t,n){return n?Ee(e,t,n):t&&"function"!=typeof t?e:Ee(e,t)},K.forEach((function(e){Ce[e]=Le})),P.forEach((function(e){Ce[e+"s"]=_e})),Ce.watch=function(e,t,n,a){if(e===ee&&(e=void 0),t===ee&&(t=void 0),!t)return Object.create(e||null);if(!e)return t;var o={};for(var r in S(o,e),t){var i=o[r],s=t[r];i&&!Array.isArray(i)&&(i=[i]),o[r]=i?i.concat(s):Array.isArray(s)?s:[s]}return o},Ce.props=Ce.methods=Ce.inject=Ce.computed=function(e,t,n,a){if(!e)return t;var o=Object.create(null);return S(o,e),t&&S(o,t),o},Ce.provide=Ee;var Ne=function(e,t){return void 0===t?e:t};function Oe(e,t,n){if("function"==typeof t&&(t=t.options),function(e,t){var n=e.props;if(n){var a,o,r={};if(Array.isArray(n))for(a=n.length;a--;)"string"==typeof(o=n[a])&&(r[T(o)]={type:null});else if(u(n))for(var i in n)o=n[i],r[T(i)]=u(o)?o:{type:o};else 0;e.props=r}}(t),function(e,t){var n=e.inject;if(n){var a=e.inject={};if(Array.isArray(n))for(var o=0;o<n.length;o++)a[n[o]]={from:n[o]};else if(u(n))for(var r in n){var i=n[r];a[r]=u(i)?S({from:r},i):{from:i}}else 0}}(t),function(e){var t=e.directives;if(t)for(var n in t){var a=t[n];"function"==typeof a&&(t[n]={bind:a,update:a})}}(t),!t._base&&(t.extends&&(e=Oe(e,t.extends,n)),t.mixins))for(var a=0,o=t.mixins.length;a<o;a++)e=Oe(e,t.mixins[a],n);var r,i={};for(r in e)s(r);for(r in t)b(e,r)||s(r);function s(a){var o=Ce[a]||Ne;i[a]=o(e[a],t[a],n,a)}return i}function Pe(e,t,n,a){if("string"==typeof n){var o=e[t];if(b(o,n))return o[n];var r=T(n);if(b(o,r))return o[r];var i=M(r);return b(o,i)?o[i]:o[n]||o[r]||o[i]}}function Ke(e,t,n,a){var o=t[e],r=!b(n,e),i=n[e],s=We(Boolean,o.type);if(s>-1)if(r&&!b(o,"default"))i=!1;else if(""===i||i===j(e)){var l=We(String,o.type);(l<0||s<l)&&(i=!0)}if(void 0===i){i=function(e,t,n){if(!b(t,"default"))return;var a=t.default;0;if(e&&e.$options.propsData&&void 0===e.$options.propsData[n]&&void 0!==e._props[n])return e._props[n];return"function"==typeof a&&"Function"!==Re(t.type)?a.call(e):a}(a,o,e);var c=xe;Te(!0),Ie(i),Te(c)}return i}var qe=/^\s*function (\w+)/;function Re(e){var t=e&&e.toString().match(qe);return t?t[1]:""}function Ue(e,t){return Re(e)===Re(t)}function We(e,t){if(!Array.isArray(t))return Ue(t,e)?0:-1;for(var n=0,a=t.length;n<a;n++)if(Ue(t[n],e))return n;return-1}function Fe(e,t,n){pe();try{if(t)for(var a=t;a=a.$parent;){var o=a.$options.errorCaptured;if(o)for(var r=0;r<o.length;r++)try{if(!1===o[r].call(a,e,t,n))return}catch(e){Be(e,a,"errorCaptured hook")}}Be(e,t,n)}finally{me()}}function Ye(e,t,n,a,o){var r;try{(r=n?e.apply(t,n):e.call(t))&&!r._isVue&&m(r)&&!r._handled&&(r.catch((function(e){return Fe(e,a,o+" (Promise/async)")})),r._handled=!0)}catch(e){Fe(e,a,o)}return r}function Be(e,t,n){if(q.errorHandler)try{return q.errorHandler.call(null,e,t,n)}catch(t){t!==e&&Ge(t,null,"config.errorHandler")}Ge(e,t,n)}function Ge(e,t,n){if(!B&&!G||"undefined"==typeof console)throw e;console.error(e)}var Ze,He=!1,Qe=[],$e=!1;function Je(){$e=!1;var e=Qe.slice(0);Qe.length=0;for(var t=0;t<e.length;t++)e[t]()}if("undefined"!=typeof Promise&&re(Promise)){var Ve=Promise.resolve();Ze=function(){Ve.then(Je),V&&setTimeout(A)},He=!0}else if(Q||"undefined"==typeof MutationObserver||!re(MutationObserver)&&"[object MutationObserverConstructor]"!==MutationObserver.toString())Ze="undefined"!=typeof setImmediate&&re(setImmediate)?function(){setImmediate(Je)}:function(){setTimeout(Je,0)};else{var Xe=1,et=new MutationObserver(Je),tt=document.createTextNode(String(Xe));et.observe(tt,{characterData:!0}),Ze=function(){Xe=(Xe+1)%2,tt.data=String(Xe)},He=!0}function nt(e,t){var n;if(Qe.push((function(){if(e)try{e.call(t)}catch(e){Fe(e,t,"nextTick")}else n&&n(t)})),$e||($e=!0,Ze()),!e&&"undefined"!=typeof Promise)return new Promise((function(e){n=e}))}var at=new ie;function ot(e){!function e(t,n){var a,o,r=Array.isArray(t);if(!r&&!l(t)||Object.isFrozen(t)||t instanceof he)return;if(t.__ob__){var i=t.__ob__.dep.id;if(n.has(i))return;n.add(i)}if(r)for(a=t.length;a--;)e(t[a],n);else for(o=Object.keys(t),a=o.length;a--;)e(t[o[a]],n)}(e,at),at.clear()}var rt=k((function(e){var t="&"===e.charAt(0),n="~"===(e=t?e.slice(1):e).charAt(0),a="!"===(e=n?e.slice(1):e).charAt(0);return{name:e=a?e.slice(1):e,once:n,capture:a,passive:t}}));function it(e,t){function n(){var e=arguments,a=n.fns;if(!Array.isArray(a))return Ye(a,null,arguments,t,"v-on handler");for(var o=a.slice(),r=0;r<o.length;r++)Ye(o[r],null,e,t,"v-on handler")}return n.fns=e,n}function st(e,t,n,a,r,s){var l,c,u,d;for(l in e)c=e[l],u=t[l],d=rt(l),o(c)||(o(u)?(o(c.fns)&&(c=e[l]=it(c,s)),i(d.once)&&(c=e[l]=r(d.name,c,d.capture)),n(d.name,c,d.capture,d.passive,d.params)):c!==u&&(u.fns=c,e[l]=u));for(l in t)o(e[l])&&a((d=rt(l)).name,t[l],d.capture)}function lt(e,t,n){var a;e instanceof he&&(e=e.data.hook||(e.data.hook={}));var s=e[t];function l(){n.apply(this,arguments),w(a.fns,l)}o(s)?a=it([l]):r(s.fns)&&i(s.merged)?(a=s).fns.push(l):a=it([s,l]),a.merged=!0,e[t]=a}function ct(e,t,n,a,o){if(r(t)){if(b(t,n))return e[n]=t[n],o||delete t[n],!0;if(b(t,a))return e[n]=t[a],o||delete t[a],!0}return!1}function ut(e){return s(e)?[ye(e)]:Array.isArray(e)?function e(t,n){var a,l,c,u,d=[];for(a=0;a<t.length;a++)o(l=t[a])||"boolean"==typeof l||(c=d.length-1,u=d[c],Array.isArray(l)?l.length>0&&(dt((l=e(l,(n||"")+"_"+a))[0])&&dt(u)&&(d[c]=ye(u.text+l[0].text),l.shift()),d.push.apply(d,l)):s(l)?dt(u)?d[c]=ye(u.text+l):""!==l&&d.push(ye(l)):dt(l)&&dt(u)?d[c]=ye(u.text+l.text):(i(t._isVList)&&r(l.tag)&&o(l.key)&&r(n)&&(l.key="__vlist"+n+"_"+a+"__"),d.push(l)));return d}(e):void 0}function dt(e){return r(e)&&r(e.text)&&!1===e.isComment}function pt(e,t){if(e){for(var n=Object.create(null),a=se?Reflect.ownKeys(e):Object.keys(e),o=0;o<a.length;o++){var r=a[o];if("__ob__"!==r){for(var i=e[r].from,s=t;s;){if(s._provided&&b(s._provided,i)){n[r]=s._provided[i];break}s=s.$parent}if(!s)if("default"in e[r]){var l=e[r].default;n[r]="function"==typeof l?l.call(t):l}else 0}}return n}}function mt(e,t){if(!e||!e.length)return{};for(var n={},a=0,o=e.length;a<o;a++){var r=e[a],i=r.data;if(i&&i.attrs&&i.attrs.slot&&delete i.attrs.slot,r.context!==t&&r.fnContext!==t||!i||null==i.slot)(n.default||(n.default=[])).push(r);else{var s=i.slot,l=n[s]||(n[s]=[]);"template"===r.tag?l.push.apply(l,r.children||[]):l.push(r)}}for(var c in n)n[c].every(ht)&&delete n[c];return n}function ht(e){return e.isComment&&!e.asyncFactory||" "===e.text}function gt(e){return e.isComment&&e.asyncFactory}function ft(e,t,n){var o,r=Object.keys(t).length>0,i=e?!!e.$stable:!r,s=e&&e.$key;if(e){if(e._normalized)return e._normalized;if(i&&n&&n!==a&&s===n.$key&&!r&&!n.$hasNormal)return n;for(var l in o={},e)e[l]&&"$"!==l[0]&&(o[l]=yt(t,l,e[l]))}else o={};for(var c in t)c in o||(o[c]=wt(t,c));return e&&Object.isExtensible(e)&&(e._normalized=o),U(o,"$stable",i),U(o,"$key",s),U(o,"$hasNormal",r),o}function yt(e,t,n){var a=function(){var e=arguments.length?n.apply(null,arguments):n({}),t=(e=e&&"object"==typeof e&&!Array.isArray(e)?[e]:ut(e))&&e[0];return e&&(!t||1===e.length&&t.isComment&&!gt(t))?void 0:e};return n.proxy&&Object.defineProperty(e,t,{get:a,enumerable:!0,configurable:!0}),a}function wt(e,t){return function(){return e[t]}}function vt(e,t){var n,a,o,i,s;if(Array.isArray(e)||"string"==typeof e)for(n=new Array(e.length),a=0,o=e.length;a<o;a++)n[a]=t(e[a],a);else if("number"==typeof e)for(n=new Array(e),a=0;a<e;a++)n[a]=t(a+1,a);else if(l(e))if(se&&e[Symbol.iterator]){n=[];for(var c=e[Symbol.iterator](),u=c.next();!u.done;)n.push(t(u.value,n.length)),u=c.next()}else for(i=Object.keys(e),n=new Array(i.length),a=0,o=i.length;a<o;a++)s=i[a],n[a]=t(e[s],s,a);return r(n)||(n=[]),n._isVList=!0,n}function bt(e,t,n,a){var o,r=this.$scopedSlots[e];r?(n=n||{},a&&(n=S(S({},a),n)),o=r(n)||("function"==typeof t?t():t)):o=this.$slots[e]||("function"==typeof t?t():t);var i=n&&n.slot;return i?this.$createElement("template",{slot:i},o):o}function kt(e){return Pe(this.$options,"filters",e)||L}function xt(e,t){return Array.isArray(e)?-1===e.indexOf(t):e!==t}function Tt(e,t,n,a,o){var r=q.keyCodes[t]||n;return o&&a&&!q.keyCodes[t]?xt(o,a):r?xt(r,e):a?j(a)!==t:void 0===e}function Mt(e,t,n,a,o){if(n)if(l(n)){var r;Array.isArray(n)&&(n=C(n));var i=function(i){if("class"===i||"style"===i||y(i))r=e;else{var s=e.attrs&&e.attrs.type;r=a||q.mustUseProp(t,s,i)?e.domProps||(e.domProps={}):e.attrs||(e.attrs={})}var l=T(i),c=j(i);l in r||c in r||(r[i]=n[i],o&&((e.on||(e.on={}))["update:"+i]=function(e){n[i]=e}))};for(var s in n)i(s)}else;return e}function It(e,t){var n=this._staticTrees||(this._staticTrees=[]),a=n[e];return a&&!t||Dt(a=n[e]=this.$options.staticRenderFns[e].call(this._renderProxy,null,this),"__static__"+e,!1),a}function jt(e,t,n){return Dt(e,"__once__"+t+(n?"_"+n:""),!0),e}function Dt(e,t,n){if(Array.isArray(e))for(var a=0;a<e.length;a++)e[a]&&"string"!=typeof e[a]&&zt(e[a],t+"_"+a,n);else zt(e,t,n)}function zt(e,t,n){e.isStatic=!0,e.key=t,e.isOnce=n}function St(e,t){if(t)if(u(t)){var n=e.on=e.on?S({},e.on):{};for(var a in t){var o=n[a],r=t[a];n[a]=o?[].concat(o,r):r}}else;return e}function Ct(e,t,n,a){t=t||{$stable:!n};for(var o=0;o<e.length;o++){var r=e[o];Array.isArray(r)?Ct(r,t,n):r&&(r.proxy&&(r.fn.proxy=!0),t[r.key]=r.fn)}return a&&(t.$key=a),t}function At(e,t){for(var n=0;n<t.length;n+=2){var a=t[n];"string"==typeof a&&a&&(e[t[n]]=t[n+1])}return e}function Et(e,t){return"string"==typeof e?t+e:e}function Lt(e){e._o=jt,e._n=g,e._s=h,e._l=vt,e._t=bt,e._q=_,e._i=N,e._m=It,e._f=kt,e._k=Tt,e._b=Mt,e._v=ye,e._e=fe,e._u=Ct,e._g=St,e._d=At,e._p=Et}function _t(e,t,n,o,r){var s,l=this,c=r.options;b(o,"_uid")?(s=Object.create(o))._original=o:(s=o,o=o._original);var u=i(c._compiled),d=!u;this.data=e,this.props=t,this.children=n,this.parent=o,this.listeners=e.on||a,this.injections=pt(c.inject,o),this.slots=function(){return l.$slots||ft(e.scopedSlots,l.$slots=mt(n,o)),l.$slots},Object.defineProperty(this,"scopedSlots",{enumerable:!0,get:function(){return ft(e.scopedSlots,this.slots())}}),u&&(this.$options=c,this.$slots=this.slots(),this.$scopedSlots=ft(e.scopedSlots,this.$slots)),c._scopeId?this._c=function(e,t,n,a){var r=Ut(s,e,t,n,a,d);return r&&!Array.isArray(r)&&(r.fnScopeId=c._scopeId,r.fnContext=o),r}:this._c=function(e,t,n,a){return Ut(s,e,t,n,a,d)}}function Nt(e,t,n,a,o){var r=we(e);return r.fnContext=n,r.fnOptions=a,t.slot&&((r.data||(r.data={})).slot=t.slot),r}function Ot(e,t){for(var n in t)e[T(n)]=t[n]}Lt(_t.prototype);var Pt={init:function(e,t){if(e.componentInstance&&!e.componentInstance._isDestroyed&&e.data.keepAlive){var n=e;Pt.prepatch(n,n)}else{(e.componentInstance=function(e,t){var n={_isComponent:!0,_parentVnode:e,parent:t},a=e.data.inlineTemplate;r(a)&&(n.render=a.render,n.staticRenderFns=a.staticRenderFns);return new e.componentOptions.Ctor(n)}(e,$t)).$mount(t?e.elm:void 0,t)}},prepatch:function(e,t){var n=t.componentOptions;!function(e,t,n,o,r){0;var i=o.data.scopedSlots,s=e.$scopedSlots,l=!!(i&&!i.$stable||s!==a&&!s.$stable||i&&e.$scopedSlots.$key!==i.$key||!i&&e.$scopedSlots.$key),c=!!(r||e.$options._renderChildren||l);e.$options._parentVnode=o,e.$vnode=o,e._vnode&&(e._vnode.parent=o);if(e.$options._renderChildren=r,e.$attrs=o.data.attrs||a,e.$listeners=n||a,t&&e.$options.props){Te(!1);for(var u=e._props,d=e.$options._propKeys||[],p=0;p<d.length;p++){var m=d[p],h=e.$options.props;u[m]=Ke(m,h,t,e)}Te(!0),e.$options.propsData=t}n=n||a;var g=e.$options._parentListeners;e.$options._parentListeners=n,Qt(e,n,g),c&&(e.$slots=mt(r,o.context),e.$forceUpdate());0}(t.componentInstance=e.componentInstance,n.propsData,n.listeners,t,n.children)},insert:function(e){var t,n=e.context,a=e.componentInstance;a._isMounted||(a._isMounted=!0,en(a,"mounted")),e.data.keepAlive&&(n._isMounted?((t=a)._inactive=!1,nn.push(t)):Xt(a,!0))},destroy:function(e){var t=e.componentInstance;t._isDestroyed||(e.data.keepAlive?function e(t,n){if(n&&(t._directInactive=!0,Vt(t)))return;if(!t._inactive){t._inactive=!0;for(var a=0;a<t.$children.length;a++)e(t.$children[a]);en(t,"deactivated")}}(t,!0):t.$destroy())}},Kt=Object.keys(Pt);function qt(e,t,n,s,c){if(!o(e)){var u=n.$options._base;if(l(e)&&(e=u.extend(e)),"function"==typeof e){var d;if(o(e.cid)&&void 0===(e=function(e,t){if(i(e.error)&&r(e.errorComp))return e.errorComp;if(r(e.resolved))return e.resolved;var n=Ft;n&&r(e.owners)&&-1===e.owners.indexOf(n)&&e.owners.push(n);if(i(e.loading)&&r(e.loadingComp))return e.loadingComp;if(n&&!r(e.owners)){var a=e.owners=[n],s=!0,c=null,u=null;n.$on("hook:destroyed",(function(){return w(a,n)}));var d=function(e){for(var t=0,n=a.length;t<n;t++)a[t].$forceUpdate();e&&(a.length=0,null!==c&&(clearTimeout(c),c=null),null!==u&&(clearTimeout(u),u=null))},p=O((function(n){e.resolved=Yt(n,t),s?a.length=0:d(!0)})),h=O((function(t){r(e.errorComp)&&(e.error=!0,d(!0))})),g=e(p,h);return l(g)&&(m(g)?o(e.resolved)&&g.then(p,h):m(g.component)&&(g.component.then(p,h),r(g.error)&&(e.errorComp=Yt(g.error,t)),r(g.loading)&&(e.loadingComp=Yt(g.loading,t),0===g.delay?e.loading=!0:c=setTimeout((function(){c=null,o(e.resolved)&&o(e.error)&&(e.loading=!0,d(!1))}),g.delay||200)),r(g.timeout)&&(u=setTimeout((function(){u=null,o(e.resolved)&&h(null)}),g.timeout)))),s=!1,e.loading?e.loadingComp:e.resolved}}(d=e,u)))return function(e,t,n,a,o){var r=fe();return r.asyncFactory=e,r.asyncMeta={data:t,context:n,children:a,tag:o},r}(d,t,n,s,c);t=t||{},Tn(e),r(t.model)&&function(e,t){var n=e.model&&e.model.prop||"value",a=e.model&&e.model.event||"input";(t.attrs||(t.attrs={}))[n]=t.model.value;var o=t.on||(t.on={}),i=o[a],s=t.model.callback;r(i)?(Array.isArray(i)?-1===i.indexOf(s):i!==s)&&(o[a]=[s].concat(i)):o[a]=s}(e.options,t);var p=function(e,t,n){var a=t.options.props;if(!o(a)){var i={},s=e.attrs,l=e.props;if(r(s)||r(l))for(var c in a){var u=j(c);ct(i,l,c,u,!0)||ct(i,s,c,u,!1)}return i}}(t,e);if(i(e.options.functional))return function(e,t,n,o,i){var s=e.options,l={},c=s.props;if(r(c))for(var u in c)l[u]=Ke(u,c,t||a);else r(n.attrs)&&Ot(l,n.attrs),r(n.props)&&Ot(l,n.props);var d=new _t(n,l,i,o,e),p=s.render.call(null,d._c,d);if(p instanceof he)return Nt(p,n,d.parent,s,d);if(Array.isArray(p)){for(var m=ut(p)||[],h=new Array(m.length),g=0;g<m.length;g++)h[g]=Nt(m[g],n,d.parent,s,d);return h}}(e,p,t,n,s);var h=t.on;if(t.on=t.nativeOn,i(e.options.abstract)){var g=t.slot;t={},g&&(t.slot=g)}!function(e){for(var t=e.hook||(e.hook={}),n=0;n<Kt.length;n++){var a=Kt[n],o=t[a],r=Pt[a];o===r||o&&o._merged||(t[a]=o?Rt(r,o):r)}}(t);var f=e.options.name||c;return new he("vue-component-"+e.cid+(f?"-"+f:""),t,void 0,void 0,void 0,n,{Ctor:e,propsData:p,listeners:h,tag:c,children:s},d)}}}function Rt(e,t){var n=function(n,a){e(n,a),t(n,a)};return n._merged=!0,n}function Ut(e,t,n,a,c,u){return(Array.isArray(n)||s(n))&&(c=a,a=n,n=void 0),i(u)&&(c=2),function(e,t,n,a,s){if(r(n)&&r(n.__ob__))return fe();r(n)&&r(n.is)&&(t=n.is);if(!t)return fe();0;Array.isArray(a)&&"function"==typeof a[0]&&((n=n||{}).scopedSlots={default:a[0]},a.length=0);2===s?a=ut(a):1===s&&(a=function(e){for(var t=0;t<e.length;t++)if(Array.isArray(e[t]))return Array.prototype.concat.apply([],e);return e}(a));var c,u;if("string"==typeof t){var d;u=e.$vnode&&e.$vnode.ns||q.getTagNamespace(t),c=q.isReservedTag(t)?new he(q.parsePlatformTagName(t),n,a,void 0,void 0,e):n&&n.pre||!r(d=Pe(e.$options,"components",t))?new he(t,n,a,void 0,void 0,e):qt(d,n,e,a,t)}else c=qt(t,n,e,a);return Array.isArray(c)?c:r(c)?(r(u)&&function e(t,n,a){t.ns=n,"foreignObject"===t.tag&&(n=void 0,a=!0);if(r(t.children))for(var s=0,l=t.children.length;s<l;s++){var c=t.children[s];r(c.tag)&&(o(c.ns)||i(a)&&"svg"!==c.tag)&&e(c,n,a)}}(c,u),r(n)&&function(e){l(e.style)&&ot(e.style);l(e.class)&&ot(e.class)}(n),c):fe()}(e,t,n,a,c)}var Wt,Ft=null;function Yt(e,t){return(e.__esModule||se&&"Module"===e[Symbol.toStringTag])&&(e=e.default),l(e)?t.extend(e):e}function Bt(e){if(Array.isArray(e))for(var t=0;t<e.length;t++){var n=e[t];if(r(n)&&(r(n.componentOptions)||gt(n)))return n}}function Gt(e,t){Wt.$on(e,t)}function Zt(e,t){Wt.$off(e,t)}function Ht(e,t){var n=Wt;return function a(){var o=t.apply(null,arguments);null!==o&&n.$off(e,a)}}function Qt(e,t,n){Wt=e,st(t,n||{},Gt,Zt,Ht,e),Wt=void 0}var $t=null;function Jt(e){var t=$t;return $t=e,function(){$t=t}}function Vt(e){for(;e&&(e=e.$parent);)if(e._inactive)return!0;return!1}function Xt(e,t){if(t){if(e._directInactive=!1,Vt(e))return}else if(e._directInactive)return;if(e._inactive||null===e._inactive){e._inactive=!1;for(var n=0;n<e.$children.length;n++)Xt(e.$children[n]);en(e,"activated")}}function en(e,t){pe();var n=e.$options[t],a=t+" hook";if(n)for(var o=0,r=n.length;o<r;o++)Ye(n[o],e,null,e,a);e._hasHookEvent&&e.$emit("hook:"+t),me()}var tn=[],nn=[],an={},on=!1,rn=!1,sn=0;var ln=0,cn=Date.now;if(B&&!Q){var un=window.performance;un&&"function"==typeof un.now&&cn()>document.createEvent("Event").timeStamp&&(cn=function(){return un.now()})}function dn(){var e,t;for(ln=cn(),rn=!0,tn.sort((function(e,t){return e.id-t.id})),sn=0;sn<tn.length;sn++)(e=tn[sn]).before&&e.before(),t=e.id,an[t]=null,e.run();var n=nn.slice(),a=tn.slice();sn=tn.length=nn.length=0,an={},on=rn=!1,function(e){for(var t=0;t<e.length;t++)e[t]._inactive=!0,Xt(e[t],!0)}(n),function(e){var t=e.length;for(;t--;){var n=e[t],a=n.vm;a._watcher===n&&a._isMounted&&!a._isDestroyed&&en(a,"updated")}}(a),oe&&q.devtools&&oe.emit("flush")}var pn=0,mn=function(e,t,n,a,o){this.vm=e,o&&(e._watcher=this),e._watchers.push(this),a?(this.deep=!!a.deep,this.user=!!a.user,this.lazy=!!a.lazy,this.sync=!!a.sync,this.before=a.before):this.deep=this.user=this.lazy=this.sync=!1,this.cb=n,this.id=++pn,this.active=!0,this.dirty=this.lazy,this.deps=[],this.newDeps=[],this.depIds=new ie,this.newDepIds=new ie,this.expression="","function"==typeof t?this.getter=t:(this.getter=function(e){if(!W.test(e)){var t=e.split(".");return function(e){for(var n=0;n<t.length;n++){if(!e)return;e=e[t[n]]}return e}}}(t),this.getter||(this.getter=A)),this.value=this.lazy?void 0:this.get()};mn.prototype.get=function(){var e;pe(this);var t=this.vm;try{e=this.getter.call(t,t)}catch(e){if(!this.user)throw e;Fe(e,t,'getter for watcher "'+this.expression+'"')}finally{this.deep&&ot(e),me(),this.cleanupDeps()}return e},mn.prototype.addDep=function(e){var t=e.id;this.newDepIds.has(t)||(this.newDepIds.add(t),this.newDeps.push(e),this.depIds.has(t)||e.addSub(this))},mn.prototype.cleanupDeps=function(){for(var e=this.deps.length;e--;){var t=this.deps[e];this.newDepIds.has(t.id)||t.removeSub(this)}var n=this.depIds;this.depIds=this.newDepIds,this.newDepIds=n,this.newDepIds.clear(),n=this.deps,this.deps=this.newDeps,this.newDeps=n,this.newDeps.length=0},mn.prototype.update=function(){this.lazy?this.dirty=!0:this.sync?this.run():function(e){var t=e.id;if(null==an[t]){if(an[t]=!0,rn){for(var n=tn.length-1;n>sn&&tn[n].id>e.id;)n--;tn.splice(n+1,0,e)}else tn.push(e);on||(on=!0,nt(dn))}}(this)},mn.prototype.run=function(){if(this.active){var e=this.get();if(e!==this.value||l(e)||this.deep){var t=this.value;if(this.value=e,this.user){var n='callback for watcher "'+this.expression+'"';Ye(this.cb,this.vm,[e,t],this.vm,n)}else this.cb.call(this.vm,e,t)}}},mn.prototype.evaluate=function(){this.value=this.get(),this.dirty=!1},mn.prototype.depend=function(){for(var e=this.deps.length;e--;)this.deps[e].depend()},mn.prototype.teardown=function(){if(this.active){this.vm._isBeingDestroyed||w(this.vm._watchers,this);for(var e=this.deps.length;e--;)this.deps[e].removeSub(this);this.active=!1}};var hn={enumerable:!0,configurable:!0,get:A,set:A};function gn(e,t,n){hn.get=function(){return this[t][n]},hn.set=function(e){this[t][n]=e},Object.defineProperty(e,n,hn)}function fn(e){e._watchers=[];var t=e.$options;t.props&&function(e,t){var n=e.$options.propsData||{},a=e._props={},o=e.$options._propKeys=[];e.$parent&&Te(!1);var r=function(r){o.push(r);var i=Ke(r,t,n,e);je(a,r,i),r in e||gn(e,"_props",r)};for(var i in t)r(i);Te(!0)}(e,t.props),t.methods&&function(e,t){e.$options.props;for(var n in t)e[n]="function"!=typeof t[n]?A:D(t[n],e)}(e,t.methods),t.data?function(e){var t=e.$options.data;u(t=e._data="function"==typeof t?function(e,t){pe();try{return e.call(t,t)}catch(e){return Fe(e,t,"data()"),{}}finally{me()}}(t,e):t||{})||(t={});var n=Object.keys(t),a=e.$options.props,o=(e.$options.methods,n.length);for(;o--;){var r=n[o];0,a&&b(a,r)||(i=void 0,36!==(i=(r+"").charCodeAt(0))&&95!==i&&gn(e,"_data",r))}var i;Ie(t,!0)}(e):Ie(e._data={},!0),t.computed&&function(e,t){var n=e._computedWatchers=Object.create(null),a=ae();for(var o in t){var r=t[o],i="function"==typeof r?r:r.get;0,a||(n[o]=new mn(e,i||A,A,yn)),o in e||wn(e,o,r)}}(e,t.computed),t.watch&&t.watch!==ee&&function(e,t){for(var n in t){var a=t[n];if(Array.isArray(a))for(var o=0;o<a.length;o++)kn(e,n,a[o]);else kn(e,n,a)}}(e,t.watch)}var yn={lazy:!0};function wn(e,t,n){var a=!ae();"function"==typeof n?(hn.get=a?vn(t):bn(n),hn.set=A):(hn.get=n.get?a&&!1!==n.cache?vn(t):bn(n.get):A,hn.set=n.set||A),Object.defineProperty(e,t,hn)}function vn(e){return function(){var t=this._computedWatchers&&this._computedWatchers[e];if(t)return t.dirty&&t.evaluate(),ue.target&&t.depend(),t.value}}function bn(e){return function(){return e.call(this,this)}}function kn(e,t,n,a){return u(n)&&(a=n,n=n.handler),"string"==typeof n&&(n=e[n]),e.$watch(t,n,a)}var xn=0;function Tn(e){var t=e.options;if(e.super){var n=Tn(e.super);if(n!==e.superOptions){e.superOptions=n;var a=function(e){var t,n=e.options,a=e.sealedOptions;for(var o in n)n[o]!==a[o]&&(t||(t={}),t[o]=n[o]);return t}(e);a&&S(e.extendOptions,a),(t=e.options=Oe(n,e.extendOptions)).name&&(t.components[t.name]=e)}}return t}function Mn(e){this._init(e)}function In(e){e.cid=0;var t=1;e.extend=function(e){e=e||{};var n=this,a=n.cid,o=e._Ctor||(e._Ctor={});if(o[a])return o[a];var r=e.name||n.options.name;var i=function(e){this._init(e)};return(i.prototype=Object.create(n.prototype)).constructor=i,i.cid=t++,i.options=Oe(n.options,e),i.super=n,i.options.props&&function(e){var t=e.options.props;for(var n in t)gn(e.prototype,"_props",n)}(i),i.options.computed&&function(e){var t=e.options.computed;for(var n in t)wn(e.prototype,n,t[n])}(i),i.extend=n.extend,i.mixin=n.mixin,i.use=n.use,P.forEach((function(e){i[e]=n[e]})),r&&(i.options.components[r]=i),i.superOptions=n.options,i.extendOptions=e,i.sealedOptions=S({},i.options),o[a]=i,i}}function jn(e){return e&&(e.Ctor.options.name||e.tag)}function Dn(e,t){return Array.isArray(e)?e.indexOf(t)>-1:"string"==typeof e?e.split(",").indexOf(t)>-1:!!d(e)&&e.test(t)}function zn(e,t){var n=e.cache,a=e.keys,o=e._vnode;for(var r in n){var i=n[r];if(i){var s=i.name;s&&!t(s)&&Sn(n,r,a,o)}}}function Sn(e,t,n,a){var o=e[t];!o||a&&o.tag===a.tag||o.componentInstance.$destroy(),e[t]=null,w(n,t)}!function(e){e.prototype._init=function(e){var t=this;t._uid=xn++,t._isVue=!0,e&&e._isComponent?function(e,t){var n=e.$options=Object.create(e.constructor.options),a=t._parentVnode;n.parent=t.parent,n._parentVnode=a;var o=a.componentOptions;n.propsData=o.propsData,n._parentListeners=o.listeners,n._renderChildren=o.children,n._componentTag=o.tag,t.render&&(n.render=t.render,n.staticRenderFns=t.staticRenderFns)}(t,e):t.$options=Oe(Tn(t.constructor),e||{},t),t._renderProxy=t,t._self=t,function(e){var t=e.$options,n=t.parent;if(n&&!t.abstract){for(;n.$options.abstract&&n.$parent;)n=n.$parent;n.$children.push(e)}e.$parent=n,e.$root=n?n.$root:e,e.$children=[],e.$refs={},e._watcher=null,e._inactive=null,e._directInactive=!1,e._isMounted=!1,e._isDestroyed=!1,e._isBeingDestroyed=!1}(t),function(e){e._events=Object.create(null),e._hasHookEvent=!1;var t=e.$options._parentListeners;t&&Qt(e,t)}(t),function(e){e._vnode=null,e._staticTrees=null;var t=e.$options,n=e.$vnode=t._parentVnode,o=n&&n.context;e.$slots=mt(t._renderChildren,o),e.$scopedSlots=a,e._c=function(t,n,a,o){return Ut(e,t,n,a,o,!1)},e.$createElement=function(t,n,a,o){return Ut(e,t,n,a,o,!0)};var r=n&&n.data;je(e,"$attrs",r&&r.attrs||a,null,!0),je(e,"$listeners",t._parentListeners||a,null,!0)}(t),en(t,"beforeCreate"),function(e){var t=pt(e.$options.inject,e);t&&(Te(!1),Object.keys(t).forEach((function(n){je(e,n,t[n])})),Te(!0))}(t),fn(t),function(e){var t=e.$options.provide;t&&(e._provided="function"==typeof t?t.call(e):t)}(t),en(t,"created"),t.$options.el&&t.$mount(t.$options.el)}}(Mn),function(e){var t={get:function(){return this._data}},n={get:function(){return this._props}};Object.defineProperty(e.prototype,"$data",t),Object.defineProperty(e.prototype,"$props",n),e.prototype.$set=De,e.prototype.$delete=ze,e.prototype.$watch=function(e,t,n){if(u(t))return kn(this,e,t,n);(n=n||{}).user=!0;var a=new mn(this,e,t,n);if(n.immediate){var o='callback for immediate watcher "'+a.expression+'"';pe(),Ye(t,this,[a.value],this,o),me()}return function(){a.teardown()}}}(Mn),function(e){var t=/^hook:/;e.prototype.$on=function(e,n){var a=this;if(Array.isArray(e))for(var o=0,r=e.length;o<r;o++)a.$on(e[o],n);else(a._events[e]||(a._events[e]=[])).push(n),t.test(e)&&(a._hasHookEvent=!0);return a},e.prototype.$once=function(e,t){var n=this;function a(){n.$off(e,a),t.apply(n,arguments)}return a.fn=t,n.$on(e,a),n},e.prototype.$off=function(e,t){var n=this;if(!arguments.length)return n._events=Object.create(null),n;if(Array.isArray(e)){for(var a=0,o=e.length;a<o;a++)n.$off(e[a],t);return n}var r,i=n._events[e];if(!i)return n;if(!t)return n._events[e]=null,n;for(var s=i.length;s--;)if((r=i[s])===t||r.fn===t){i.splice(s,1);break}return n},e.prototype.$emit=function(e){var t=this,n=t._events[e];if(n){n=n.length>1?z(n):n;for(var a=z(arguments,1),o='event handler for "'+e+'"',r=0,i=n.length;r<i;r++)Ye(n[r],t,a,t,o)}return t}}(Mn),function(e){e.prototype._update=function(e,t){var n=this,a=n.$el,o=n._vnode,r=Jt(n);n._vnode=e,n.$el=o?n.__patch__(o,e):n.__patch__(n.$el,e,t,!1),r(),a&&(a.__vue__=null),n.$el&&(n.$el.__vue__=n),n.$vnode&&n.$parent&&n.$vnode===n.$parent._vnode&&(n.$parent.$el=n.$el)},e.prototype.$forceUpdate=function(){this._watcher&&this._watcher.update()},e.prototype.$destroy=function(){var e=this;if(!e._isBeingDestroyed){en(e,"beforeDestroy"),e._isBeingDestroyed=!0;var t=e.$parent;!t||t._isBeingDestroyed||e.$options.abstract||w(t.$children,e),e._watcher&&e._watcher.teardown();for(var n=e._watchers.length;n--;)e._watchers[n].teardown();e._data.__ob__&&e._data.__ob__.vmCount--,e._isDestroyed=!0,e.__patch__(e._vnode,null),en(e,"destroyed"),e.$off(),e.$el&&(e.$el.__vue__=null),e.$vnode&&(e.$vnode.parent=null)}}}(Mn),function(e){Lt(e.prototype),e.prototype.$nextTick=function(e){return nt(e,this)},e.prototype._render=function(){var e,t=this,n=t.$options,a=n.render,o=n._parentVnode;o&&(t.$scopedSlots=ft(o.data.scopedSlots,t.$slots,t.$scopedSlots)),t.$vnode=o;try{Ft=t,e=a.call(t._renderProxy,t.$createElement)}catch(n){Fe(n,t,"render"),e=t._vnode}finally{Ft=null}return Array.isArray(e)&&1===e.length&&(e=e[0]),e instanceof he||(e=fe()),e.parent=o,e}}(Mn);var Cn=[String,RegExp,Array],An={KeepAlive:{name:"keep-alive",abstract:!0,props:{include:Cn,exclude:Cn,max:[String,Number]},methods:{cacheVNode:function(){var e=this.cache,t=this.keys,n=this.vnodeToCache,a=this.keyToCache;if(n){var o=n.tag,r=n.componentInstance,i=n.componentOptions;e[a]={name:jn(i),tag:o,componentInstance:r},t.push(a),this.max&&t.length>parseInt(this.max)&&Sn(e,t[0],t,this._vnode),this.vnodeToCache=null}}},created:function(){this.cache=Object.create(null),this.keys=[]},destroyed:function(){for(var e in this.cache)Sn(this.cache,e,this.keys)},mounted:function(){var e=this;this.cacheVNode(),this.$watch("include",(function(t){zn(e,(function(e){return Dn(t,e)}))})),this.$watch("exclude",(function(t){zn(e,(function(e){return!Dn(t,e)}))}))},updated:function(){this.cacheVNode()},render:function(){var e=this.$slots.default,t=Bt(e),n=t&&t.componentOptions;if(n){var a=jn(n),o=this.include,r=this.exclude;if(o&&(!a||!Dn(o,a))||r&&a&&Dn(r,a))return t;var i=this.cache,s=this.keys,l=null==t.key?n.Ctor.cid+(n.tag?"::"+n.tag:""):t.key;i[l]?(t.componentInstance=i[l].componentInstance,w(s,l),s.push(l)):(this.vnodeToCache=t,this.keyToCache=l),t.data.keepAlive=!0}return t||e&&e[0]}}};!function(e){var t={get:function(){return q}};Object.defineProperty(e,"config",t),e.util={warn:le,extend:S,mergeOptions:Oe,defineReactive:je},e.set=De,e.delete=ze,e.nextTick=nt,e.observable=function(e){return Ie(e),e},e.options=Object.create(null),P.forEach((function(t){e.options[t+"s"]=Object.create(null)})),e.options._base=e,S(e.options.components,An),function(e){e.use=function(e){var t=this._installedPlugins||(this._installedPlugins=[]);if(t.indexOf(e)>-1)return this;var n=z(arguments,1);return n.unshift(this),"function"==typeof e.install?e.install.apply(e,n):"function"==typeof e&&e.apply(null,n),t.push(e),this}}(e),function(e){e.mixin=function(e){return this.options=Oe(this.options,e),this}}(e),In(e),function(e){P.forEach((function(t){e[t]=function(e,n){return n?("component"===t&&u(n)&&(n.name=n.name||e,n=this.options._base.extend(n)),"directive"===t&&"function"==typeof n&&(n={bind:n,update:n}),this.options[t+"s"][e]=n,n):this.options[t+"s"][e]}}))}(e)}(Mn),Object.defineProperty(Mn.prototype,"$isServer",{get:ae}),Object.defineProperty(Mn.prototype,"$ssrContext",{get:function(){return this.$vnode&&this.$vnode.ssrContext}}),Object.defineProperty(Mn,"FunctionalRenderContext",{value:_t}),Mn.version="2.6.14";var En=f("style,class"),Ln=f("input,textarea,option,select,progress"),_n=f("contenteditable,draggable,spellcheck"),Nn=f("events,caret,typing,plaintext-only"),On=f("allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,default,defaultchecked,defaultmuted,defaultselected,defer,disabled,enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,required,reversed,scoped,seamless,selected,sortable,truespeed,typemustmatch,visible"),Pn="http://www.w3.org/1999/xlink",Kn=function(e){return":"===e.charAt(5)&&"xlink"===e.slice(0,5)},qn=function(e){return Kn(e)?e.slice(6,e.length):""},Rn=function(e){return null==e||!1===e};function Un(e){for(var t=e.data,n=e,a=e;r(a.componentInstance);)(a=a.componentInstance._vnode)&&a.data&&(t=Wn(a.data,t));for(;r(n=n.parent);)n&&n.data&&(t=Wn(t,n.data));return function(e,t){if(r(e)||r(t))return Fn(e,Yn(t));return""}(t.staticClass,t.class)}function Wn(e,t){return{staticClass:Fn(e.staticClass,t.staticClass),class:r(e.class)?[e.class,t.class]:t.class}}function Fn(e,t){return e?t?e+" "+t:e:t||""}function Yn(e){return Array.isArray(e)?function(e){for(var t,n="",a=0,o=e.length;a<o;a++)r(t=Yn(e[a]))&&""!==t&&(n&&(n+=" "),n+=t);return n}(e):l(e)?function(e){var t="";for(var n in e)e[n]&&(t&&(t+=" "),t+=n);return t}(e):"string"==typeof e?e:""}var Bn={svg:"http://www.w3.org/2000/svg",math:"http://www.w3.org/1998/Math/MathML"},Gn=f("html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,menuitem,summary,content,element,shadow,template,blockquote,iframe,tfoot"),Zn=f("svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,foreignobject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view",!0),Hn=function(e){return Gn(e)||Zn(e)};var Qn=Object.create(null);var $n=f("text,number,password,search,email,tel,url");var Jn=Object.freeze({createElement:function(e,t){var n=document.createElement(e);return"select"!==e||t.data&&t.data.attrs&&void 0!==t.data.attrs.multiple&&n.setAttribute("multiple","multiple"),n},createElementNS:function(e,t){return document.createElementNS(Bn[e],t)},createTextNode:function(e){return document.createTextNode(e)},createComment:function(e){return document.createComment(e)},insertBefore:function(e,t,n){e.insertBefore(t,n)},removeChild:function(e,t){e.removeChild(t)},appendChild:function(e,t){e.appendChild(t)},parentNode:function(e){return e.parentNode},nextSibling:function(e){return e.nextSibling},tagName:function(e){return e.tagName},setTextContent:function(e,t){e.textContent=t},setStyleScope:function(e,t){e.setAttribute(t,"")}}),Vn={create:function(e,t){Xn(t)},update:function(e,t){e.data.ref!==t.data.ref&&(Xn(e,!0),Xn(t))},destroy:function(e){Xn(e,!0)}};function Xn(e,t){var n=e.data.ref;if(r(n)){var a=e.context,o=e.componentInstance||e.elm,i=a.$refs;t?Array.isArray(i[n])?w(i[n],o):i[n]===o&&(i[n]=void 0):e.data.refInFor?Array.isArray(i[n])?i[n].indexOf(o)<0&&i[n].push(o):i[n]=[o]:i[n]=o}}var ea=new he("",{},[]),ta=["create","activate","update","remove","destroy"];function na(e,t){return e.key===t.key&&e.asyncFactory===t.asyncFactory&&(e.tag===t.tag&&e.isComment===t.isComment&&r(e.data)===r(t.data)&&function(e,t){if("input"!==e.tag)return!0;var n,a=r(n=e.data)&&r(n=n.attrs)&&n.type,o=r(n=t.data)&&r(n=n.attrs)&&n.type;return a===o||$n(a)&&$n(o)}(e,t)||i(e.isAsyncPlaceholder)&&o(t.asyncFactory.error))}function aa(e,t,n){var a,o,i={};for(a=t;a<=n;++a)r(o=e[a].key)&&(i[o]=a);return i}var oa={create:ra,update:ra,destroy:function(e){ra(e,ea)}};function ra(e,t){(e.data.directives||t.data.directives)&&function(e,t){var n,a,o,r=e===ea,i=t===ea,s=sa(e.data.directives,e.context),l=sa(t.data.directives,t.context),c=[],u=[];for(n in l)a=s[n],o=l[n],a?(o.oldValue=a.value,o.oldArg=a.arg,ca(o,"update",t,e),o.def&&o.def.componentUpdated&&u.push(o)):(ca(o,"bind",t,e),o.def&&o.def.inserted&&c.push(o));if(c.length){var d=function(){for(var n=0;n<c.length;n++)ca(c[n],"inserted",t,e)};r?lt(t,"insert",d):d()}u.length&&lt(t,"postpatch",(function(){for(var n=0;n<u.length;n++)ca(u[n],"componentUpdated",t,e)}));if(!r)for(n in s)l[n]||ca(s[n],"unbind",e,e,i)}(e,t)}var ia=Object.create(null);function sa(e,t){var n,a,o=Object.create(null);if(!e)return o;for(n=0;n<e.length;n++)(a=e[n]).modifiers||(a.modifiers=ia),o[la(a)]=a,a.def=Pe(t.$options,"directives",a.name);return o}function la(e){return e.rawName||e.name+"."+Object.keys(e.modifiers||{}).join(".")}function ca(e,t,n,a,o){var r=e.def&&e.def[t];if(r)try{r(n.elm,e,n,a,o)}catch(a){Fe(a,n.context,"directive "+e.name+" "+t+" hook")}}var ua=[Vn,oa];function da(e,t){var n=t.componentOptions;if(!(r(n)&&!1===n.Ctor.options.inheritAttrs||o(e.data.attrs)&&o(t.data.attrs))){var a,i,s=t.elm,l=e.data.attrs||{},c=t.data.attrs||{};for(a in r(c.__ob__)&&(c=t.data.attrs=S({},c)),c)i=c[a],l[a]!==i&&pa(s,a,i,t.data.pre);for(a in(Q||J)&&c.value!==l.value&&pa(s,"value",c.value),l)o(c[a])&&(Kn(a)?s.removeAttributeNS(Pn,qn(a)):_n(a)||s.removeAttribute(a))}}function pa(e,t,n,a){a||e.tagName.indexOf("-")>-1?ma(e,t,n):On(t)?Rn(n)?e.removeAttribute(t):(n="allowfullscreen"===t&&"EMBED"===e.tagName?"true":t,e.setAttribute(t,n)):_n(t)?e.setAttribute(t,function(e,t){return Rn(t)||"false"===t?"false":"contenteditable"===e&&Nn(t)?t:"true"}(t,n)):Kn(t)?Rn(n)?e.removeAttributeNS(Pn,qn(t)):e.setAttributeNS(Pn,t,n):ma(e,t,n)}function ma(e,t,n){if(Rn(n))e.removeAttribute(t);else{if(Q&&!$&&"TEXTAREA"===e.tagName&&"placeholder"===t&&""!==n&&!e.__ieph){var a=function(t){t.stopImmediatePropagation(),e.removeEventListener("input",a)};e.addEventListener("input",a),e.__ieph=!0}e.setAttribute(t,n)}}var ha={create:da,update:da};function ga(e,t){var n=t.elm,a=t.data,i=e.data;if(!(o(a.staticClass)&&o(a.class)&&(o(i)||o(i.staticClass)&&o(i.class)))){var s=Un(t),l=n._transitionClasses;r(l)&&(s=Fn(s,Yn(l))),s!==n._prevClass&&(n.setAttribute("class",s),n._prevClass=s)}}var fa,ya={create:ga,update:ga};function wa(e,t,n){var a=fa;return function o(){var r=t.apply(null,arguments);null!==r&&ka(e,o,n,a)}}var va=He&&!(X&&Number(X[1])<=53);function ba(e,t,n,a){if(va){var o=ln,r=t;t=r._wrapper=function(e){if(e.target===e.currentTarget||e.timeStamp>=o||e.timeStamp<=0||e.target.ownerDocument!==document)return r.apply(this,arguments)}}fa.addEventListener(e,t,te?{capture:n,passive:a}:n)}function ka(e,t,n,a){(a||fa).removeEventListener(e,t._wrapper||t,n)}function xa(e,t){if(!o(e.data.on)||!o(t.data.on)){var n=t.data.on||{},a=e.data.on||{};fa=t.elm,function(e){if(r(e.__r)){var t=Q?"change":"input";e[t]=[].concat(e.__r,e[t]||[]),delete e.__r}r(e.__c)&&(e.change=[].concat(e.__c,e.change||[]),delete e.__c)}(n),st(n,a,ba,ka,wa,t.context),fa=void 0}}var Ta,Ma={create:xa,update:xa};function Ia(e,t){if(!o(e.data.domProps)||!o(t.data.domProps)){var n,a,i=t.elm,s=e.data.domProps||{},l=t.data.domProps||{};for(n in r(l.__ob__)&&(l=t.data.domProps=S({},l)),s)n in l||(i[n]="");for(n in l){if(a=l[n],"textContent"===n||"innerHTML"===n){if(t.children&&(t.children.length=0),a===s[n])continue;1===i.childNodes.length&&i.removeChild(i.childNodes[0])}if("value"===n&&"PROGRESS"!==i.tagName){i._value=a;var c=o(a)?"":String(a);ja(i,c)&&(i.value=c)}else if("innerHTML"===n&&Zn(i.tagName)&&o(i.innerHTML)){(Ta=Ta||document.createElement("div")).innerHTML="<svg>"+a+"</svg>";for(var u=Ta.firstChild;i.firstChild;)i.removeChild(i.firstChild);for(;u.firstChild;)i.appendChild(u.firstChild)}else if(a!==s[n])try{i[n]=a}catch(e){}}}}function ja(e,t){return!e.composing&&("OPTION"===e.tagName||function(e,t){var n=!0;try{n=document.activeElement!==e}catch(e){}return n&&e.value!==t}(e,t)||function(e,t){var n=e.value,a=e._vModifiers;if(r(a)){if(a.number)return g(n)!==g(t);if(a.trim)return n.trim()!==t.trim()}return n!==t}(e,t))}var Da={create:Ia,update:Ia},za=k((function(e){var t={},n=/:(.+)/;return e.split(/;(?![^(]*\))/g).forEach((function(e){if(e){var a=e.split(n);a.length>1&&(t[a[0].trim()]=a[1].trim())}})),t}));function Sa(e){var t=Ca(e.style);return e.staticStyle?S(e.staticStyle,t):t}function Ca(e){return Array.isArray(e)?C(e):"string"==typeof e?za(e):e}var Aa,Ea=/^--/,La=/\s*!important$/,_a=function(e,t,n){if(Ea.test(t))e.style.setProperty(t,n);else if(La.test(n))e.style.setProperty(j(t),n.replace(La,""),"important");else{var a=Oa(t);if(Array.isArray(n))for(var o=0,r=n.length;o<r;o++)e.style[a]=n[o];else e.style[a]=n}},Na=["Webkit","Moz","ms"],Oa=k((function(e){if(Aa=Aa||document.createElement("div").style,"filter"!==(e=T(e))&&e in Aa)return e;for(var t=e.charAt(0).toUpperCase()+e.slice(1),n=0;n<Na.length;n++){var a=Na[n]+t;if(a in Aa)return a}}));function Pa(e,t){var n=t.data,a=e.data;if(!(o(n.staticStyle)&&o(n.style)&&o(a.staticStyle)&&o(a.style))){var i,s,l=t.elm,c=a.staticStyle,u=a.normalizedStyle||a.style||{},d=c||u,p=Ca(t.data.style)||{};t.data.normalizedStyle=r(p.__ob__)?S({},p):p;var m=function(e,t){var n,a={};if(t)for(var o=e;o.componentInstance;)(o=o.componentInstance._vnode)&&o.data&&(n=Sa(o.data))&&S(a,n);(n=Sa(e.data))&&S(a,n);for(var r=e;r=r.parent;)r.data&&(n=Sa(r.data))&&S(a,n);return a}(t,!0);for(s in d)o(m[s])&&_a(l,s,"");for(s in m)(i=m[s])!==d[s]&&_a(l,s,null==i?"":i)}}var Ka={create:Pa,update:Pa},qa=/\s+/;function Ra(e,t){if(t&&(t=t.trim()))if(e.classList)t.indexOf(" ")>-1?t.split(qa).forEach((function(t){return e.classList.add(t)})):e.classList.add(t);else{var n=" "+(e.getAttribute("class")||"")+" ";n.indexOf(" "+t+" ")<0&&e.setAttribute("class",(n+t).trim())}}function Ua(e,t){if(t&&(t=t.trim()))if(e.classList)t.indexOf(" ")>-1?t.split(qa).forEach((function(t){return e.classList.remove(t)})):e.classList.remove(t),e.classList.length||e.removeAttribute("class");else{for(var n=" "+(e.getAttribute("class")||"")+" ",a=" "+t+" ";n.indexOf(a)>=0;)n=n.replace(a," ");(n=n.trim())?e.setAttribute("class",n):e.removeAttribute("class")}}function Wa(e){if(e){if("object"==typeof e){var t={};return!1!==e.css&&S(t,Fa(e.name||"v")),S(t,e),t}return"string"==typeof e?Fa(e):void 0}}var Fa=k((function(e){return{enterClass:e+"-enter",enterToClass:e+"-enter-to",enterActiveClass:e+"-enter-active",leaveClass:e+"-leave",leaveToClass:e+"-leave-to",leaveActiveClass:e+"-leave-active"}})),Ya=B&&!$,Ba="transition",Ga="transitionend",Za="animation",Ha="animationend";Ya&&(void 0===window.ontransitionend&&void 0!==window.onwebkittransitionend&&(Ba="WebkitTransition",Ga="webkitTransitionEnd"),void 0===window.onanimationend&&void 0!==window.onwebkitanimationend&&(Za="WebkitAnimation",Ha="webkitAnimationEnd"));var Qa=B?window.requestAnimationFrame?window.requestAnimationFrame.bind(window):setTimeout:function(e){return e()};function $a(e){Qa((function(){Qa(e)}))}function Ja(e,t){var n=e._transitionClasses||(e._transitionClasses=[]);n.indexOf(t)<0&&(n.push(t),Ra(e,t))}function Va(e,t){e._transitionClasses&&w(e._transitionClasses,t),Ua(e,t)}function Xa(e,t,n){var a=to(e,t),o=a.type,r=a.timeout,i=a.propCount;if(!o)return n();var s="transition"===o?Ga:Ha,l=0,c=function(){e.removeEventListener(s,u),n()},u=function(t){t.target===e&&++l>=i&&c()};setTimeout((function(){l<i&&c()}),r+1),e.addEventListener(s,u)}var eo=/\b(transform|all)(,|$)/;function to(e,t){var n,a=window.getComputedStyle(e),o=(a[Ba+"Delay"]||"").split(", "),r=(a[Ba+"Duration"]||"").split(", "),i=no(o,r),s=(a[Za+"Delay"]||"").split(", "),l=(a[Za+"Duration"]||"").split(", "),c=no(s,l),u=0,d=0;return"transition"===t?i>0&&(n="transition",u=i,d=r.length):"animation"===t?c>0&&(n="animation",u=c,d=l.length):d=(n=(u=Math.max(i,c))>0?i>c?"transition":"animation":null)?"transition"===n?r.length:l.length:0,{type:n,timeout:u,propCount:d,hasTransform:"transition"===n&&eo.test(a[Ba+"Property"])}}function no(e,t){for(;e.length<t.length;)e=e.concat(e);return Math.max.apply(null,t.map((function(t,n){return ao(t)+ao(e[n])})))}function ao(e){return 1e3*Number(e.slice(0,-1).replace(",","."))}function oo(e,t){var n=e.elm;r(n._leaveCb)&&(n._leaveCb.cancelled=!0,n._leaveCb());var a=Wa(e.data.transition);if(!o(a)&&!r(n._enterCb)&&1===n.nodeType){for(var i=a.css,s=a.type,c=a.enterClass,u=a.enterToClass,d=a.enterActiveClass,p=a.appearClass,m=a.appearToClass,h=a.appearActiveClass,f=a.beforeEnter,y=a.enter,w=a.afterEnter,v=a.enterCancelled,b=a.beforeAppear,k=a.appear,x=a.afterAppear,T=a.appearCancelled,M=a.duration,I=$t,j=$t.$vnode;j&&j.parent;)I=j.context,j=j.parent;var D=!I._isMounted||!e.isRootInsert;if(!D||k||""===k){var z=D&&p?p:c,S=D&&h?h:d,C=D&&m?m:u,A=D&&b||f,E=D&&"function"==typeof k?k:y,L=D&&x||w,_=D&&T||v,N=g(l(M)?M.enter:M);0;var P=!1!==i&&!$,K=so(E),q=n._enterCb=O((function(){P&&(Va(n,C),Va(n,S)),q.cancelled?(P&&Va(n,z),_&&_(n)):L&&L(n),n._enterCb=null}));e.data.show||lt(e,"insert",(function(){var t=n.parentNode,a=t&&t._pending&&t._pending[e.key];a&&a.tag===e.tag&&a.elm._leaveCb&&a.elm._leaveCb(),E&&E(n,q)})),A&&A(n),P&&(Ja(n,z),Ja(n,S),$a((function(){Va(n,z),q.cancelled||(Ja(n,C),K||(io(N)?setTimeout(q,N):Xa(n,s,q)))}))),e.data.show&&(t&&t(),E&&E(n,q)),P||K||q()}}}function ro(e,t){var n=e.elm;r(n._enterCb)&&(n._enterCb.cancelled=!0,n._enterCb());var a=Wa(e.data.transition);if(o(a)||1!==n.nodeType)return t();if(!r(n._leaveCb)){var i=a.css,s=a.type,c=a.leaveClass,u=a.leaveToClass,d=a.leaveActiveClass,p=a.beforeLeave,m=a.leave,h=a.afterLeave,f=a.leaveCancelled,y=a.delayLeave,w=a.duration,v=!1!==i&&!$,b=so(m),k=g(l(w)?w.leave:w);0;var x=n._leaveCb=O((function(){n.parentNode&&n.parentNode._pending&&(n.parentNode._pending[e.key]=null),v&&(Va(n,u),Va(n,d)),x.cancelled?(v&&Va(n,c),f&&f(n)):(t(),h&&h(n)),n._leaveCb=null}));y?y(T):T()}function T(){x.cancelled||(!e.data.show&&n.parentNode&&((n.parentNode._pending||(n.parentNode._pending={}))[e.key]=e),p&&p(n),v&&(Ja(n,c),Ja(n,d),$a((function(){Va(n,c),x.cancelled||(Ja(n,u),b||(io(k)?setTimeout(x,k):Xa(n,s,x)))}))),m&&m(n,x),v||b||x())}}function io(e){return"number"==typeof e&&!isNaN(e)}function so(e){if(o(e))return!1;var t=e.fns;return r(t)?so(Array.isArray(t)?t[0]:t):(e._length||e.length)>1}function lo(e,t){!0!==t.data.show&&oo(t)}var co=function(e){var t,n,a={},l=e.modules,c=e.nodeOps;for(t=0;t<ta.length;++t)for(a[ta[t]]=[],n=0;n<l.length;++n)r(l[n][ta[t]])&&a[ta[t]].push(l[n][ta[t]]);function u(e){var t=c.parentNode(e);r(t)&&c.removeChild(t,e)}function d(e,t,n,o,s,l,u){if(r(e.elm)&&r(l)&&(e=l[u]=we(e)),e.isRootInsert=!s,!function(e,t,n,o){var s=e.data;if(r(s)){var l=r(e.componentInstance)&&s.keepAlive;if(r(s=s.hook)&&r(s=s.init)&&s(e,!1),r(e.componentInstance))return p(e,t),m(n,e.elm,o),i(l)&&function(e,t,n,o){var i,s=e;for(;s.componentInstance;)if(s=s.componentInstance._vnode,r(i=s.data)&&r(i=i.transition)){for(i=0;i<a.activate.length;++i)a.activate[i](ea,s);t.push(s);break}m(n,e.elm,o)}(e,t,n,o),!0}}(e,t,n,o)){var d=e.data,g=e.children,f=e.tag;r(f)?(e.elm=e.ns?c.createElementNS(e.ns,f):c.createElement(f,e),w(e),h(e,g,t),r(d)&&y(e,t),m(n,e.elm,o)):i(e.isComment)?(e.elm=c.createComment(e.text),m(n,e.elm,o)):(e.elm=c.createTextNode(e.text),m(n,e.elm,o))}}function p(e,t){r(e.data.pendingInsert)&&(t.push.apply(t,e.data.pendingInsert),e.data.pendingInsert=null),e.elm=e.componentInstance.$el,g(e)?(y(e,t),w(e)):(Xn(e),t.push(e))}function m(e,t,n){r(e)&&(r(n)?c.parentNode(n)===e&&c.insertBefore(e,t,n):c.appendChild(e,t))}function h(e,t,n){if(Array.isArray(t)){0;for(var a=0;a<t.length;++a)d(t[a],n,e.elm,null,!0,t,a)}else s(e.text)&&c.appendChild(e.elm,c.createTextNode(String(e.text)))}function g(e){for(;e.componentInstance;)e=e.componentInstance._vnode;return r(e.tag)}function y(e,n){for(var o=0;o<a.create.length;++o)a.create[o](ea,e);r(t=e.data.hook)&&(r(t.create)&&t.create(ea,e),r(t.insert)&&n.push(e))}function w(e){var t;if(r(t=e.fnScopeId))c.setStyleScope(e.elm,t);else for(var n=e;n;)r(t=n.context)&&r(t=t.$options._scopeId)&&c.setStyleScope(e.elm,t),n=n.parent;r(t=$t)&&t!==e.context&&t!==e.fnContext&&r(t=t.$options._scopeId)&&c.setStyleScope(e.elm,t)}function v(e,t,n,a,o,r){for(;a<=o;++a)d(n[a],r,e,t,!1,n,a)}function b(e){var t,n,o=e.data;if(r(o))for(r(t=o.hook)&&r(t=t.destroy)&&t(e),t=0;t<a.destroy.length;++t)a.destroy[t](e);if(r(t=e.children))for(n=0;n<e.children.length;++n)b(e.children[n])}function k(e,t,n){for(;t<=n;++t){var a=e[t];r(a)&&(r(a.tag)?(x(a),b(a)):u(a.elm))}}function x(e,t){if(r(t)||r(e.data)){var n,o=a.remove.length+1;for(r(t)?t.listeners+=o:t=function(e,t){function n(){0==--n.listeners&&u(e)}return n.listeners=t,n}(e.elm,o),r(n=e.componentInstance)&&r(n=n._vnode)&&r(n.data)&&x(n,t),n=0;n<a.remove.length;++n)a.remove[n](e,t);r(n=e.data.hook)&&r(n=n.remove)?n(e,t):t()}else u(e.elm)}function T(e,t,n,a){for(var o=n;o<a;o++){var i=t[o];if(r(i)&&na(e,i))return o}}function M(e,t,n,s,l,u){if(e!==t){r(t.elm)&&r(s)&&(t=s[l]=we(t));var p=t.elm=e.elm;if(i(e.isAsyncPlaceholder))r(t.asyncFactory.resolved)?D(e.elm,t,n):t.isAsyncPlaceholder=!0;else if(i(t.isStatic)&&i(e.isStatic)&&t.key===e.key&&(i(t.isCloned)||i(t.isOnce)))t.componentInstance=e.componentInstance;else{var m,h=t.data;r(h)&&r(m=h.hook)&&r(m=m.prepatch)&&m(e,t);var f=e.children,y=t.children;if(r(h)&&g(t)){for(m=0;m<a.update.length;++m)a.update[m](e,t);r(m=h.hook)&&r(m=m.update)&&m(e,t)}o(t.text)?r(f)&&r(y)?f!==y&&function(e,t,n,a,i){var s,l,u,p=0,m=0,h=t.length-1,g=t[0],f=t[h],y=n.length-1,w=n[0],b=n[y],x=!i;for(0;p<=h&&m<=y;)o(g)?g=t[++p]:o(f)?f=t[--h]:na(g,w)?(M(g,w,a,n,m),g=t[++p],w=n[++m]):na(f,b)?(M(f,b,a,n,y),f=t[--h],b=n[--y]):na(g,b)?(M(g,b,a,n,y),x&&c.insertBefore(e,g.elm,c.nextSibling(f.elm)),g=t[++p],b=n[--y]):na(f,w)?(M(f,w,a,n,m),x&&c.insertBefore(e,f.elm,g.elm),f=t[--h],w=n[++m]):(o(s)&&(s=aa(t,p,h)),o(l=r(w.key)?s[w.key]:T(w,t,p,h))?d(w,a,e,g.elm,!1,n,m):na(u=t[l],w)?(M(u,w,a,n,m),t[l]=void 0,x&&c.insertBefore(e,u.elm,g.elm)):d(w,a,e,g.elm,!1,n,m),w=n[++m]);p>h?v(e,o(n[y+1])?null:n[y+1].elm,n,m,y,a):m>y&&k(t,p,h)}(p,f,y,n,u):r(y)?(r(e.text)&&c.setTextContent(p,""),v(p,null,y,0,y.length-1,n)):r(f)?k(f,0,f.length-1):r(e.text)&&c.setTextContent(p,""):e.text!==t.text&&c.setTextContent(p,t.text),r(h)&&r(m=h.hook)&&r(m=m.postpatch)&&m(e,t)}}}function I(e,t,n){if(i(n)&&r(e.parent))e.parent.data.pendingInsert=t;else for(var a=0;a<t.length;++a)t[a].data.hook.insert(t[a])}var j=f("attrs,class,staticClass,staticStyle,key");function D(e,t,n,a){var o,s=t.tag,l=t.data,c=t.children;if(a=a||l&&l.pre,t.elm=e,i(t.isComment)&&r(t.asyncFactory))return t.isAsyncPlaceholder=!0,!0;if(r(l)&&(r(o=l.hook)&&r(o=o.init)&&o(t,!0),r(o=t.componentInstance)))return p(t,n),!0;if(r(s)){if(r(c))if(e.hasChildNodes())if(r(o=l)&&r(o=o.domProps)&&r(o=o.innerHTML)){if(o!==e.innerHTML)return!1}else{for(var u=!0,d=e.firstChild,m=0;m<c.length;m++){if(!d||!D(d,c[m],n,a)){u=!1;break}d=d.nextSibling}if(!u||d)return!1}else h(t,c,n);if(r(l)){var g=!1;for(var f in l)if(!j(f)){g=!0,y(t,n);break}!g&&l.class&&ot(l.class)}}else e.data!==t.text&&(e.data=t.text);return!0}return function(e,t,n,s){if(!o(t)){var l,u=!1,p=[];if(o(e))u=!0,d(t,p);else{var m=r(e.nodeType);if(!m&&na(e,t))M(e,t,p,null,null,s);else{if(m){if(1===e.nodeType&&e.hasAttribute("data-server-rendered")&&(e.removeAttribute("data-server-rendered"),n=!0),i(n)&&D(e,t,p))return I(t,p,!0),e;l=e,e=new he(c.tagName(l).toLowerCase(),{},[],void 0,l)}var h=e.elm,f=c.parentNode(h);if(d(t,p,h._leaveCb?null:f,c.nextSibling(h)),r(t.parent))for(var y=t.parent,w=g(t);y;){for(var v=0;v<a.destroy.length;++v)a.destroy[v](y);if(y.elm=t.elm,w){for(var x=0;x<a.create.length;++x)a.create[x](ea,y);var T=y.data.hook.insert;if(T.merged)for(var j=1;j<T.fns.length;j++)T.fns[j]()}else Xn(y);y=y.parent}r(f)?k([e],0,0):r(e.tag)&&b(e)}}return I(t,p,u),t.elm}r(e)&&b(e)}}({nodeOps:Jn,modules:[ha,ya,Ma,Da,Ka,B?{create:lo,activate:lo,remove:function(e,t){!0!==e.data.show?ro(e,t):t()}}:{}].concat(ua)});$&&document.addEventListener("selectionchange",(function(){var e=document.activeElement;e&&e.vmodel&&wo(e,"input")}));var uo={inserted:function(e,t,n,a){"select"===n.tag?(a.elm&&!a.elm._vOptions?lt(n,"postpatch",(function(){uo.componentUpdated(e,t,n)})):po(e,t,n.context),e._vOptions=[].map.call(e.options,go)):("textarea"===n.tag||$n(e.type))&&(e._vModifiers=t.modifiers,t.modifiers.lazy||(e.addEventListener("compositionstart",fo),e.addEventListener("compositionend",yo),e.addEventListener("change",yo),$&&(e.vmodel=!0)))},componentUpdated:function(e,t,n){if("select"===n.tag){po(e,t,n.context);var a=e._vOptions,o=e._vOptions=[].map.call(e.options,go);if(o.some((function(e,t){return!_(e,a[t])})))(e.multiple?t.value.some((function(e){return ho(e,o)})):t.value!==t.oldValue&&ho(t.value,o))&&wo(e,"change")}}};function po(e,t,n){mo(e,t,n),(Q||J)&&setTimeout((function(){mo(e,t,n)}),0)}function mo(e,t,n){var a=t.value,o=e.multiple;if(!o||Array.isArray(a)){for(var r,i,s=0,l=e.options.length;s<l;s++)if(i=e.options[s],o)r=N(a,go(i))>-1,i.selected!==r&&(i.selected=r);else if(_(go(i),a))return void(e.selectedIndex!==s&&(e.selectedIndex=s));o||(e.selectedIndex=-1)}}function ho(e,t){return t.every((function(t){return!_(t,e)}))}function go(e){return"_value"in e?e._value:e.value}function fo(e){e.target.composing=!0}function yo(e){e.target.composing&&(e.target.composing=!1,wo(e.target,"input"))}function wo(e,t){var n=document.createEvent("HTMLEvents");n.initEvent(t,!0,!0),e.dispatchEvent(n)}function vo(e){return!e.componentInstance||e.data&&e.data.transition?e:vo(e.componentInstance._vnode)}var bo={model:uo,show:{bind:function(e,t,n){var a=t.value,o=(n=vo(n)).data&&n.data.transition,r=e.__vOriginalDisplay="none"===e.style.display?"":e.style.display;a&&o?(n.data.show=!0,oo(n,(function(){e.style.display=r}))):e.style.display=a?r:"none"},update:function(e,t,n){var a=t.value;!a!=!t.oldValue&&((n=vo(n)).data&&n.data.transition?(n.data.show=!0,a?oo(n,(function(){e.style.display=e.__vOriginalDisplay})):ro(n,(function(){e.style.display="none"}))):e.style.display=a?e.__vOriginalDisplay:"none")},unbind:function(e,t,n,a,o){o||(e.style.display=e.__vOriginalDisplay)}}},ko={name:String,appear:Boolean,css:Boolean,mode:String,type:String,enterClass:String,leaveClass:String,enterToClass:String,leaveToClass:String,enterActiveClass:String,leaveActiveClass:String,appearClass:String,appearActiveClass:String,appearToClass:String,duration:[Number,String,Object]};function xo(e){var t=e&&e.componentOptions;return t&&t.Ctor.options.abstract?xo(Bt(t.children)):e}function To(e){var t={},n=e.$options;for(var a in n.propsData)t[a]=e[a];var o=n._parentListeners;for(var r in o)t[T(r)]=o[r];return t}function Mo(e,t){if(/\d-keep-alive$/.test(t.tag))return e("keep-alive",{props:t.componentOptions.propsData})}var Io=function(e){return e.tag||gt(e)},jo=function(e){return"show"===e.name},Do={name:"transition",props:ko,abstract:!0,render:function(e){var t=this,n=this.$slots.default;if(n&&(n=n.filter(Io)).length){0;var a=this.mode;0;var o=n[0];if(function(e){for(;e=e.parent;)if(e.data.transition)return!0}(this.$vnode))return o;var r=xo(o);if(!r)return o;if(this._leaving)return Mo(e,o);var i="__transition-"+this._uid+"-";r.key=null==r.key?r.isComment?i+"comment":i+r.tag:s(r.key)?0===String(r.key).indexOf(i)?r.key:i+r.key:r.key;var l=(r.data||(r.data={})).transition=To(this),c=this._vnode,u=xo(c);if(r.data.directives&&r.data.directives.some(jo)&&(r.data.show=!0),u&&u.data&&!function(e,t){return t.key===e.key&&t.tag===e.tag}(r,u)&&!gt(u)&&(!u.componentInstance||!u.componentInstance._vnode.isComment)){var d=u.data.transition=S({},l);if("out-in"===a)return this._leaving=!0,lt(d,"afterLeave",(function(){t._leaving=!1,t.$forceUpdate()})),Mo(e,o);if("in-out"===a){if(gt(r))return c;var p,m=function(){p()};lt(l,"afterEnter",m),lt(l,"enterCancelled",m),lt(d,"delayLeave",(function(e){p=e}))}}return o}}},zo=S({tag:String,moveClass:String},ko);function So(e){e.elm._moveCb&&e.elm._moveCb(),e.elm._enterCb&&e.elm._enterCb()}function Co(e){e.data.newPos=e.elm.getBoundingClientRect()}function Ao(e){var t=e.data.pos,n=e.data.newPos,a=t.left-n.left,o=t.top-n.top;if(a||o){e.data.moved=!0;var r=e.elm.style;r.transform=r.WebkitTransform="translate("+a+"px,"+o+"px)",r.transitionDuration="0s"}}delete zo.mode;var Eo={Transition:Do,TransitionGroup:{props:zo,beforeMount:function(){var e=this,t=this._update;this._update=function(n,a){var o=Jt(e);e.__patch__(e._vnode,e.kept,!1,!0),e._vnode=e.kept,o(),t.call(e,n,a)}},render:function(e){for(var t=this.tag||this.$vnode.data.tag||"span",n=Object.create(null),a=this.prevChildren=this.children,o=this.$slots.default||[],r=this.children=[],i=To(this),s=0;s<o.length;s++){var l=o[s];if(l.tag)if(null!=l.key&&0!==String(l.key).indexOf("__vlist"))r.push(l),n[l.key]=l,(l.data||(l.data={})).transition=i;else;}if(a){for(var c=[],u=[],d=0;d<a.length;d++){var p=a[d];p.data.transition=i,p.data.pos=p.elm.getBoundingClientRect(),n[p.key]?c.push(p):u.push(p)}this.kept=e(t,null,c),this.removed=u}return e(t,null,r)},updated:function(){var e=this.prevChildren,t=this.moveClass||(this.name||"v")+"-move";e.length&&this.hasMove(e[0].elm,t)&&(e.forEach(So),e.forEach(Co),e.forEach(Ao),this._reflow=document.body.offsetHeight,e.forEach((function(e){if(e.data.moved){var n=e.elm,a=n.style;Ja(n,t),a.transform=a.WebkitTransform=a.transitionDuration="",n.addEventListener(Ga,n._moveCb=function e(a){a&&a.target!==n||a&&!/transform$/.test(a.propertyName)||(n.removeEventListener(Ga,e),n._moveCb=null,Va(n,t))})}})))},methods:{hasMove:function(e,t){if(!Ya)return!1;if(this._hasMove)return this._hasMove;var n=e.cloneNode();e._transitionClasses&&e._transitionClasses.forEach((function(e){Ua(n,e)})),Ra(n,t),n.style.display="none",this.$el.appendChild(n);var a=to(n);return this.$el.removeChild(n),this._hasMove=a.hasTransform}}}};Mn.config.mustUseProp=function(e,t,n){return"value"===n&&Ln(e)&&"button"!==t||"selected"===n&&"option"===e||"checked"===n&&"input"===e||"muted"===n&&"video"===e},Mn.config.isReservedTag=Hn,Mn.config.isReservedAttr=En,Mn.config.getTagNamespace=function(e){return Zn(e)?"svg":"math"===e?"math":void 0},Mn.config.isUnknownElement=function(e){if(!B)return!0;if(Hn(e))return!1;if(e=e.toLowerCase(),null!=Qn[e])return Qn[e];var t=document.createElement(e);return e.indexOf("-")>-1?Qn[e]=t.constructor===window.HTMLUnknownElement||t.constructor===window.HTMLElement:Qn[e]=/HTMLUnknownElement/.test(t.toString())},S(Mn.options.directives,bo),S(Mn.options.components,Eo),Mn.prototype.__patch__=B?co:A,Mn.prototype.$mount=function(e,t){return function(e,t,n){var a;return e.$el=t,e.$options.render||(e.$options.render=fe),en(e,"beforeMount"),a=function(){e._update(e._render(),n)},new mn(e,a,A,{before:function(){e._isMounted&&!e._isDestroyed&&en(e,"beforeUpdate")}},!0),n=!1,null==e.$vnode&&(e._isMounted=!0,en(e,"mounted")),e}(this,e=e&&B?function(e){if("string"==typeof e){var t=document.querySelector(e);return t||document.createElement("div")}return e}(e):void 0,t)},B&&setTimeout((function(){q.devtools&&oe&&oe.emit("init",Mn)}),0),t.a=Mn},function(e,t){e.exports=function(e){return"function"==typeof e}},function(e,t,n){var a=n(0),o=n(71),r=n(11),i=n(72),s=n(101),l=n(145),c=o("wks"),u=a.Symbol,d=u&&u.for,p=l?u:u&&u.withoutSetter||i;e.exports=function(e){if(!r(c,e)||!s&&"string"!=typeof c[e]){var t="Symbol."+e;s&&r(u,e)?c[e]=u[e]:c[e]=l&&d?d(t):p(t)}return c[e]}},function(e,t,n){var a=n(5);e.exports=function(e){return"object"==typeof e?null!==e:a(e)}},function(e,t,n){var a=n(3);e.exports=!a((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]}))},function(e,t,n){var a=n(110),o=n(15),r=n(242);a||o(Object.prototype,"toString",r,{unsafe:!0})},function(e,t,n){var a=n(0),o=n(7),r=a.String,i=a.TypeError;e.exports=function(e){if(o(e))return e;throw i(r(e)+" is not an object")}},function(e,t,n){var a=n(2),o=n(16),r=a({}.hasOwnProperty);e.exports=Object.hasOwn||function(e,t){return r(o(e),t)}},function(e,t,n){var a=n(54),o=Function.prototype.call;e.exports=a?o.bind(o):function(){return o.apply(o,arguments)}},function(e,t,n){var a=n(0),o=n(69),r=a.String;e.exports=function(e){if("Symbol"===o(e))throw TypeError("Cannot convert a Symbol value to a string");return r(e)}},function(e,t,n){var a=n(0),o=n(8),r=n(147),i=n(146),s=n(10),l=n(74),c=a.TypeError,u=Object.defineProperty,d=Object.getOwnPropertyDescriptor;t.f=o?i?function(e,t,n){if(s(e),t=l(t),s(n),"function"==typeof e&&"prototype"===t&&"value"in n&&"writable"in n&&!n.writable){var a=d(e,t);a&&a.writable&&(e[t]=n.value,n={configurable:"configurable"in n?n.configurable:a.configurable,enumerable:"enumerable"in n?n.enumerable:a.enumerable,writable:!1})}return u(e,t,n)}:u:function(e,t,n){if(s(e),t=l(t),s(n),r)try{return u(e,t,n)}catch(e){}if("get"in n||"set"in n)throw c("Accessors not supported");return"value"in n&&(e[t]=n.value),e}},function(e,t,n){var a=n(0),o=n(5),r=n(11),i=n(25),s=n(100),l=n(78),c=n(41),u=n(94).CONFIGURABLE,d=c.get,p=c.enforce,m=String(String).split("String");(e.exports=function(e,t,n,l){var c,d=!!l&&!!l.unsafe,h=!!l&&!!l.enumerable,g=!!l&&!!l.noTargetGet,f=l&&void 0!==l.name?l.name:t;o(n)&&("Symbol("===String(f).slice(0,7)&&(f="["+String(f).replace(/^Symbol\(([^)]*)\)/,"$1")+"]"),(!r(n,"name")||u&&n.name!==f)&&i(n,"name",f),(c=p(n)).source||(c.source=m.join("string"==typeof f?f:""))),e!==a?(d?!g&&e[t]&&(h=!0):delete e[t],h?e[t]=n:i(e,t,n)):h?e[t]=n:s(t,n)})(Function.prototype,"toString",(function(){return o(this)&&d(this).source||l(this)}))},function(e,t,n){var a=n(0),o=n(20),r=a.Object;e.exports=function(e){return r(o(e))}},function(e,t,n){var a=n(0),o=n(5),r=function(e){return o(e)?e:void 0};e.exports=function(e,t){return arguments.length<2?r(a[e]):a[e]&&a[e][t]}},function(e,t,n){var a=n(53),o=n(20);e.exports=function(e){return a(o(e))}},function(e,t,n){"use strict";function a(e,t,n,a,o,r,i,s){var l,c="function"==typeof e?e.options:e;if(t&&(c.render=t,c.staticRenderFns=n,c._compiled=!0),a&&(c.functional=!0),r&&(c._scopeId="data-v-"+r),i?(l=function(e){(e=e||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(e=__VUE_SSR_CONTEXT__),o&&o.call(this,e),e&&e._registeredComponents&&e._registeredComponents.add(i)},c._ssrRegister=l):o&&(l=s?function(){o.call(this,(c.functional?this.parent:this).$root.$options.shadowRoot)}:o),l)if(c.functional){c._injectStyles=l;var u=c.render;c.render=function(e,t){return l.call(t),u(e,t)}}else{var d=c.beforeCreate;c.beforeCreate=d?[].concat(d,l):[l]}return{exports:e,options:c}}n.d(t,"a",(function(){return a}))},function(e,t,n){var a=n(0).TypeError;e.exports=function(e){if(null==e)throw a("Can't call method on "+e);return e}},function(e,t){e.exports=!1},function(e,t,n){var a=n(49);e.exports=function(e){return a(e.length)}},function(e,t,n){"use strict";var a=n(164).charAt,o=n(13),r=n(41),i=n(151),s=r.set,l=r.getterFor("String Iterator");i(String,"String",(function(e){s(this,{type:"String Iterator",string:o(e),index:0})}),(function(){var e,t=l(this),n=t.string,o=t.index;return o>=n.length?{value:void 0,done:!0}:(e=a(n,o),t.index+=e.length,{value:e,done:!1})}))},function(e,t){var n=Array.isArray;e.exports=n},function(e,t,n){var a=n(8),o=n(14),r=n(42);e.exports=a?function(e,t,n){return o.f(e,t,r(1,n))}:function(e,t,n){return e[t]=n,e}},function(e,t,n){var a=n(8),o=n(12),r=n(96),i=n(42),s=n(18),l=n(74),c=n(11),u=n(147),d=Object.getOwnPropertyDescriptor;t.f=a?d:function(e,t){if(e=s(e),t=l(t),u)try{return d(e,t)}catch(e){}if(c(e,t))return i(!o(r.f,e,t),e[t])}},function(e,t,n){var a=n(181),o="object"==typeof self&&self&&self.Object===Object&&self,r=a||o||Function("return this")();e.exports=r},function(e,t,n){var a=n(0),o=n(165),r=n(166),i=n(137),s=n(25),l=n(6),c=l("iterator"),u=l("toStringTag"),d=i.values,p=function(e,t){if(e){if(e[c]!==d)try{s(e,c,d)}catch(t){e[c]=d}if(e[u]||s(e,u,t),o[t])for(var n in i)if(e[n]!==i[n])try{s(e,n,i[n])}catch(t){e[n]=i[n]}}};for(var m in o)p(a[m]&&a[m].prototype,m);p(r,"DOMTokenList")},function(e,t,n){var a,o=n(10),r=n(102),i=n(105),s=n(55),l=n(150),c=n(73),u=n(77),d=u("IE_PROTO"),p=function(){},m=function(e){return"<script>"+e+"<\/script>"},h=function(e){e.write(m("")),e.close();var t=e.parentWindow.Object;return e=null,t},g=function(){try{a=new ActiveXObject("htmlfile")}catch(e){}var e,t;g="undefined"!=typeof document?document.domain&&a?h(a):((t=c("iframe")).style.display="none",l.appendChild(t),t.src=String("javascript:"),(e=t.contentWindow.document).open(),e.write(m("document.F=Object")),e.close(),e.F):h(a);for(var n=i.length;n--;)delete g.prototype[i[n]];return g()};s[d]=!0,e.exports=Object.create||function(e,t){var n;return null!==e?(p.prototype=o(e),n=new p,p.prototype=null,n[d]=e):n=g(),void 0===t?n:r.f(n,t)}},function(e,t,n){var a=n(54),o=Function.prototype,r=o.apply,i=o.call;e.exports="object"==typeof Reflect&&Reflect.apply||(a?i.bind(r):function(){return i.apply(r,arguments)})},function(e,t,n){var a=n(2),o=a({}.toString),r=a("".slice);e.exports=function(e){return r(o(e),8,-1)}},function(e,t,n){var a=n(17);e.exports=a("navigator","userAgent")||""},function(e,t,n){var a=n(0),o=n(5),r=n(76),i=a.TypeError;e.exports=function(e){if(o(e))return e;throw i(r(e)+" is not a function")}},function(e,t,n){"use strict";var a=n(1),o=n(83);a({target:"RegExp",proto:!0,forced:/./.exec!==o},{exec:o})},function(e,t,n){var a=n(2);e.exports=a({}.isPrototypeOf)},function(e,t,n){var a=n(15),o=n(259),r=Error.prototype;r.toString!==o&&a(r,"toString",o)},function(e,t,n){var a=n(1),o=n(0),r=n(30),i=n(255),s=o.WebAssembly,l=7!==Error("e",{cause:7}).cause,c=function(e,t){var n={};n[e]=i(e,t,l),a({global:!0,forced:l},n)},u=function(e,t){if(s&&s[e]){var n={};n[e]=i("WebAssembly."+e,t,l),a({target:"WebAssembly",stat:!0,forced:l},n)}};c("Error",(function(e){return function(t){return r(e,this,arguments)}})),c("EvalError",(function(e){return function(t){return r(e,this,arguments)}})),c("RangeError",(function(e){return function(t){return r(e,this,arguments)}})),c("ReferenceError",(function(e){return function(t){return r(e,this,arguments)}})),c("SyntaxError",(function(e){return function(t){return r(e,this,arguments)}})),c("TypeError",(function(e){return function(t){return r(e,this,arguments)}})),c("URIError",(function(e){return function(t){return r(e,this,arguments)}})),u("CompileError",(function(e){return function(t){return r(e,this,arguments)}})),u("LinkError",(function(e){return function(t){return r(e,this,arguments)}})),u("RuntimeError",(function(e){return function(t){return r(e,this,arguments)}}))},function(e,t,n){var a=n(280),o=n(283);e.exports=function(e,t){var n=o(e,t);return a(n)?n:void 0}},function(e,t,n){"use strict";var a=n(1),o=n(48).filter;a({target:"Array",proto:!0,forced:!n(81)("filter")},{filter:function(e){return o(this,e,arguments.length>1?arguments[1]:void 0)}})},function(e,t,n){"use strict";var a=n(3);e.exports=function(e,t){var n=[][e];return!!n&&a((function(){n.call(null,t||function(){return 1},1)}))}},function(e,t,n){var a,o,r,i=n(227),s=n(0),l=n(2),c=n(7),u=n(25),d=n(11),p=n(99),m=n(77),h=n(55),g=s.TypeError,f=s.WeakMap;if(i||p.state){var y=p.state||(p.state=new f),w=l(y.get),v=l(y.has),b=l(y.set);a=function(e,t){if(v(y,e))throw new g("Object already initialized");return t.facade=e,b(y,e,t),t},o=function(e){return w(y,e)||{}},r=function(e){return v(y,e)}}else{var k=m("state");h[k]=!0,a=function(e,t){if(d(e,k))throw new g("Object already initialized");return t.facade=e,u(e,k,t),t},o=function(e){return d(e,k)?e[k]:{}},r=function(e){return d(e,k)}}e.exports={set:a,get:o,has:r,enforce:function(e){return r(e)?o(e):a(e,{})},getterFor:function(e){return function(t){var n;if(!c(t)||(n=o(t)).type!==e)throw g("Incompatible receiver, "+e+" required");return n}}}},function(e,t){e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},function(e,t){e.exports=function(e){return null!=e&&"object"==typeof e}},function(e,t,n){var a,o,r=n(0),i=n(32),s=r.process,l=r.Deno,c=s&&s.versions||l&&l.version,u=c&&c.v8;u&&(o=(a=u.split("."))[0]>0&&a[0]<4?1:+(a[0]+a[1])),!o&&i&&(!(a=i.match(/Edge\/(\d+)/))||a[1]>=74)&&(a=i.match(/Chrome\/(\d+)/))&&(o=+a[1]),e.exports=o},function(e,t,n){var a=n(33);e.exports=function(e,t){var n=e[t];return null==n?void 0:a(n)}},function(e,t){var n=Math.ceil,a=Math.floor;e.exports=function(e){var t=+e;return t!=t||0===t?0:(t>0?a:n)(t)}},function(e,t,n){var a=n(2),o=n(33),r=n(54),i=a(a.bind);e.exports=function(e,t){return o(e),void 0===t?e:r?i(e,t):function(){return e.apply(t,arguments)}}},function(e,t,n){var a=n(47),o=n(2),r=n(53),i=n(16),s=n(22),l=n(140),c=o([].push),u=function(e){var t=1==e,n=2==e,o=3==e,u=4==e,d=6==e,p=7==e,m=5==e||d;return function(h,g,f,y){for(var w,v,b=i(h),k=r(b),x=a(g,f),T=s(k),M=0,I=y||l,j=t?I(h,T):n||p?I(h,0):void 0;T>M;M++)if((m||M in k)&&(v=x(w=k[M],M,b),e))if(t)j[M]=v;else if(v)switch(e){case 3:return!0;case 5:return w;case 6:return M;case 2:c(j,w)}else switch(e){case 4:return!1;case 7:c(j,w)}return d?-1:o||u?u:j}};e.exports={forEach:u(0),map:u(1),filter:u(2),some:u(3),every:u(4),find:u(5),findIndex:u(6),filterReject:u(7)}},function(e,t,n){var a=n(46),o=Math.min;e.exports=function(e){return e>0?o(a(e),9007199254740991):0}},function(e,t,n){var a=n(14).f,o=n(11),r=n(6)("toStringTag");e.exports=function(e,t,n){e&&!n&&(e=e.prototype),e&&!o(e,r)&&a(e,r,{configurable:!0,value:t})}},function(e,t,n){var a=n(31);e.exports=Array.isArray||function(e){return"Array"==a(e)}},function(e,t,n){var a=n(62),o=n(265),r=n(266),i=a?a.toStringTag:void 0;e.exports=function(e){return null==e?void 0===e?"[object Undefined]":"[object Null]":i&&i in Object(e)?o(e):r(e)}},function(e,t,n){var a=n(0),o=n(2),r=n(3),i=n(31),s=a.Object,l=o("".split);e.exports=r((function(){return!s("z").propertyIsEnumerable(0)}))?function(e){return"String"==i(e)?l(e,""):s(e)}:s},function(e,t,n){var a=n(3);e.exports=!a((function(){var e=function(){}.bind();return"function"!=typeof e||e.hasOwnProperty("prototype")}))},function(e,t){e.exports={}},function(e,t){e.exports={}},function(e,t,n){var a=n(149),o=n(105).concat("length","prototype");t.f=Object.getOwnPropertyNames||function(e){return a(e,o)}},function(e,t,n){var a=n(2),o=n(10),r=n(228);e.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var e,t=!1,n={};try{(e=a(Object.getOwnPropertyDescriptor(Object.prototype,"__proto__").set))(n,[]),t=n instanceof Array}catch(e){}return function(n,a){return o(n),r(a),t?e(n,a):n.__proto__=a,n}}():void 0)},function(e,t,n){var a=n(2);e.exports=a([].slice)},function(e,t,n){"use strict";var a=n(74),o=n(14),r=n(42);e.exports=function(e,t,n){var i=a(t);i in e?o.f(e,i,r(0,n)):e[i]=n}},function(e,t,n){"use strict";var a=n(1),o=n(0),r=n(17),i=n(30),s=n(12),l=n(2),c=n(21),u=n(8),d=n(101),p=n(3),m=n(11),h=n(51),g=n(5),f=n(7),y=n(35),w=n(75),v=n(10),b=n(16),k=n(18),x=n(74),T=n(13),M=n(42),I=n(29),j=n(68),D=n(57),z=n(172),S=n(107),C=n(26),A=n(14),E=n(102),L=n(96),_=n(59),N=n(15),O=n(71),P=n(77),K=n(55),q=n(72),R=n(6),U=n(173),W=n(174),F=n(50),Y=n(41),B=n(48).forEach,G=P("hidden"),Z=R("toPrimitive"),H=Y.set,Q=Y.getterFor("Symbol"),$=Object.prototype,J=o.Symbol,V=J&&J.prototype,X=o.TypeError,ee=o.QObject,te=r("JSON","stringify"),ne=C.f,ae=A.f,oe=z.f,re=L.f,ie=l([].push),se=O("symbols"),le=O("op-symbols"),ce=O("string-to-symbol-registry"),ue=O("symbol-to-string-registry"),de=O("wks"),pe=!ee||!ee.prototype||!ee.prototype.findChild,me=u&&p((function(){return 7!=I(ae({},"a",{get:function(){return ae(this,"a",{value:7}).a}})).a}))?function(e,t,n){var a=ne($,t);a&&delete $[t],ae(e,t,n),a&&e!==$&&ae($,t,a)}:ae,he=function(e,t){var n=se[e]=I(V);return H(n,{type:"Symbol",tag:e,description:t}),u||(n.description=t),n},ge=function(e,t,n){e===$&&ge(le,t,n),v(e);var a=x(t);return v(n),m(se,a)?(n.enumerable?(m(e,G)&&e[G][a]&&(e[G][a]=!1),n=I(n,{enumerable:M(0,!1)})):(m(e,G)||ae(e,G,M(1,{})),e[G][a]=!0),me(e,a,n)):ae(e,a,n)},fe=function(e,t){v(e);var n=k(t),a=j(n).concat(be(n));return B(a,(function(t){u&&!s(ye,n,t)||ge(e,t,n[t])})),e},ye=function(e){var t=x(e),n=s(re,this,t);return!(this===$&&m(se,t)&&!m(le,t))&&(!(n||!m(this,t)||!m(se,t)||m(this,G)&&this[G][t])||n)},we=function(e,t){var n=k(e),a=x(t);if(n!==$||!m(se,a)||m(le,a)){var o=ne(n,a);return!o||!m(se,a)||m(n,G)&&n[G][a]||(o.enumerable=!0),o}},ve=function(e){var t=oe(k(e)),n=[];return B(t,(function(e){m(se,e)||m(K,e)||ie(n,e)})),n},be=function(e){var t=e===$,n=oe(t?le:k(e)),a=[];return B(n,(function(e){!m(se,e)||t&&!m($,e)||ie(a,se[e])})),a};(d||(N(V=(J=function(){if(y(V,this))throw X("Symbol is not a constructor");var e=arguments.length&&void 0!==arguments[0]?T(arguments[0]):void 0,t=q(e),n=function(e){this===$&&s(n,le,e),m(this,G)&&m(this[G],t)&&(this[G][t]=!1),me(this,t,M(1,e))};return u&&pe&&me($,t,{configurable:!0,set:n}),he(t,e)}).prototype,"toString",(function(){return Q(this).tag})),N(J,"withoutSetter",(function(e){return he(q(e),e)})),L.f=ye,A.f=ge,E.f=fe,C.f=we,D.f=z.f=ve,S.f=be,U.f=function(e){return he(R(e),e)},u&&(ae(V,"description",{configurable:!0,get:function(){return Q(this).description}}),c||N($,"propertyIsEnumerable",ye,{unsafe:!0}))),a({global:!0,wrap:!0,forced:!d,sham:!d},{Symbol:J}),B(j(de),(function(e){W(e)})),a({target:"Symbol",stat:!0,forced:!d},{for:function(e){var t=T(e);if(m(ce,t))return ce[t];var n=J(t);return ce[t]=n,ue[n]=t,n},keyFor:function(e){if(!w(e))throw X(e+" is not a symbol");if(m(ue,e))return ue[e]},useSetter:function(){pe=!0},useSimple:function(){pe=!1}}),a({target:"Object",stat:!0,forced:!d,sham:!u},{create:function(e,t){return void 0===t?I(e):fe(I(e),t)},defineProperty:ge,defineProperties:fe,getOwnPropertyDescriptor:we}),a({target:"Object",stat:!0,forced:!d},{getOwnPropertyNames:ve,getOwnPropertySymbols:be}),a({target:"Object",stat:!0,forced:p((function(){S.f(1)}))},{getOwnPropertySymbols:function(e){return S.f(b(e))}}),te)&&a({target:"JSON",stat:!0,forced:!d||p((function(){var e=J();return"[null]"!=te([e])||"{}"!=te({a:e})||"{}"!=te(Object(e))}))},{stringify:function(e,t,n){var a=_(arguments),o=t;if((f(t)||void 0!==e)&&!w(e))return h(t)||(t=function(e,t){if(g(o)&&(t=s(o,this,e,t)),!w(t))return t}),a[1]=t,i(te,null,a)}});if(!V[Z]){var ke=V.valueOf;N(V,Z,(function(e){return s(ke,this)}))}F(J,"Symbol"),K[G]=!0},function(e,t,n){var a=n(27).Symbol;e.exports=a},function(e,t,n){"use strict";n.d(t,"a",(function(){return r}));n(133);var a=n(64);n(61),n(82),n(9),n(116),n(23),n(28),n(175);var o=n(90);n(37),n(36);function r(e){return function(e){if(Array.isArray(e))return Object(a.a)(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||Object(o.a)(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}},function(e,t,n){"use strict";function a(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,a=new Array(t);n<t;n++)a[n]=e[n];return a}n.d(t,"a",(function(){return a}))},function(e,t,n){"use strict";var a=n(1),o=n(170);a({target:"Array",proto:!0,forced:[].forEach!=o},{forEach:o})},function(e,t,n){var a=n(0),o=n(165),r=n(166),i=n(170),s=n(25),l=function(e){if(e&&e.forEach!==i)try{s(e,"forEach",i)}catch(t){e.forEach=i}};for(var c in o)o[c]&&l(a[c]&&a[c].prototype);l(r)},function(e,t,n){"use strict";var a=n(1),o=n(0),r=n(51),i=n(79),s=n(7),l=n(104),c=n(22),u=n(18),d=n(60),p=n(6),m=n(81),h=n(59),g=m("slice"),f=p("species"),y=o.Array,w=Math.max;a({target:"Array",proto:!0,forced:!g},{slice:function(e,t){var n,a,o,p=u(this),m=c(p),g=l(e,m),v=l(void 0===t?m:t,m);if(r(p)&&(n=p.constructor,(i(n)&&(n===y||r(n.prototype))||s(n)&&null===(n=n[f]))&&(n=void 0),n===y||void 0===n))return h(p,g,v);for(a=new(void 0===n?y:n)(w(v-g,0)),o=0;g<v;g++,o++)g in p&&d(a,o,p[g]);return a.length=o,a}})},function(e,t,n){var a=n(149),o=n(105);e.exports=Object.keys||function(e){return a(e,o)}},function(e,t,n){var a=n(0),o=n(110),r=n(5),i=n(31),s=n(6)("toStringTag"),l=a.Object,c="Arguments"==i(function(){return arguments}());e.exports=o?i:function(e){var t,n,a;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(n=function(e,t){try{return e[t]}catch(e){}}(t=l(e),s))?n:c?i(t):"Object"==(a=i(t))&&r(t.callee)?"Arguments":a}},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));n(9);function a(e,t,n,a,o,r,i){try{var s=e[r](i),l=s.value}catch(e){return void n(e)}s.done?t(l):Promise.resolve(l).then(a,o)}function o(e){return function(){var t=this,n=arguments;return new Promise((function(o,r){var i=e.apply(t,n);function s(e){a(i,o,r,s,l,"next",e)}function l(e){a(i,o,r,s,l,"throw",e)}s(void 0)}))}}},function(e,t,n){var a=n(21),o=n(99);(e.exports=function(e,t){return o[e]||(o[e]=void 0!==t?t:{})})("versions",[]).push({version:"3.21.1",mode:a?"pure":"global",copyright:"© 2014-2022 Denis Pushkarev (zloirock.ru)",license:"https://github.com/zloirock/core-js/blob/v3.21.1/LICENSE",source:"https://github.com/zloirock/core-js"})},function(e,t,n){var a=n(2),o=0,r=Math.random(),i=a(1..toString);e.exports=function(e){return"Symbol("+(void 0===e?"":e)+")_"+i(++o+r,36)}},function(e,t,n){var a=n(0),o=n(7),r=a.document,i=o(r)&&o(r.createElement);e.exports=function(e){return i?r.createElement(e):{}}},function(e,t,n){var a=n(148),o=n(75);e.exports=function(e){var t=a(e,"string");return o(t)?t:t+""}},function(e,t,n){var a=n(0),o=n(17),r=n(5),i=n(35),s=n(145),l=a.Object;e.exports=s?function(e){return"symbol"==typeof e}:function(e){var t=o("Symbol");return r(t)&&i(t.prototype,l(e))}},function(e,t,n){var a=n(0).String;e.exports=function(e){try{return a(e)}catch(e){return"Object"}}},function(e,t,n){var a=n(71),o=n(72),r=a("keys");e.exports=function(e){return r[e]||(r[e]=o(e))}},function(e,t,n){var a=n(2),o=n(5),r=n(99),i=a(Function.toString);o(r.inspectSource)||(r.inspectSource=function(e){return i(e)}),e.exports=r.inspectSource},function(e,t,n){var a=n(2),o=n(3),r=n(5),i=n(69),s=n(17),l=n(78),c=function(){},u=[],d=s("Reflect","construct"),p=/^\s*(?:class|function)\b/,m=a(p.exec),h=!p.exec(c),g=function(e){if(!r(e))return!1;try{return d(c,u,e),!0}catch(e){return!1}},f=function(e){if(!r(e))return!1;switch(i(e)){case"AsyncFunction":case"GeneratorFunction":case"AsyncGeneratorFunction":return!1}try{return h||!!m(p,l(e))}catch(e){return!0}};f.sham=!0,e.exports=!d||o((function(){var e;return g(g.call)||!g(Object)||!g((function(){e=!0}))||e}))?f:g},function(e,t,n){var a=n(31),o=n(0);e.exports="process"==a(o.process)},function(e,t,n){var a=n(3),o=n(6),r=n(44),i=o("species");e.exports=function(e){return r>=51||!a((function(){var t=[];return(t.constructor={})[i]=function(){return{foo:1}},1!==t[e](Boolean).foo}))}},function(e,t,n){"use strict";var a=n(1),o=n(8),r=n(0),i=n(2),s=n(11),l=n(5),c=n(35),u=n(13),d=n(14).f,p=n(106),m=r.Symbol,h=m&&m.prototype;if(o&&l(m)&&(!("description"in h)||void 0!==m().description)){var g={},f=function(){var e=arguments.length<1||void 0===arguments[0]?void 0:u(arguments[0]),t=c(h,this)?new m(e):void 0===e?m():m(e);return""===e&&(g[t]=!0),t};p(f,m),f.prototype=h,h.constructor=f;var y="Symbol(test)"==String(m("test")),w=i(h.toString),v=i(h.valueOf),b=/^Symbol\((.*)\)[^)]+$/,k=i("".replace),x=i("".slice);d(h,"description",{configurable:!0,get:function(){var e=v(this),t=w(e);if(s(g,e))return"";var n=y?x(t,7,-1):k(t,b,"$1");return""===n?void 0:n}}),a({global:!0,forced:!0},{Symbol:f})}},function(e,t,n){"use strict";var a,o,r=n(12),i=n(2),s=n(13),l=n(222),c=n(176),u=n(71),d=n(29),p=n(41).get,m=n(253),h=n(254),g=u("native-string-replace",String.prototype.replace),f=RegExp.prototype.exec,y=f,w=i("".charAt),v=i("".indexOf),b=i("".replace),k=i("".slice),x=(o=/b*/g,r(f,a=/a/,"a"),r(f,o,"a"),0!==a.lastIndex||0!==o.lastIndex),T=c.BROKEN_CARET,M=void 0!==/()??/.exec("")[1];(x||M||T||m||h)&&(y=function(e){var t,n,a,o,i,c,u,m=this,h=p(m),I=s(e),j=h.raw;if(j)return j.lastIndex=m.lastIndex,t=r(y,j,I),m.lastIndex=j.lastIndex,t;var D=h.groups,z=T&&m.sticky,S=r(l,m),C=m.source,A=0,E=I;if(z&&(S=b(S,"y",""),-1===v(S,"g")&&(S+="g"),E=k(I,m.lastIndex),m.lastIndex>0&&(!m.multiline||m.multiline&&"\n"!==w(I,m.lastIndex-1))&&(C="(?: "+C+")",E=" "+E,A++),n=new RegExp("^(?:"+C+")",S)),M&&(n=new RegExp("^"+C+"$(?!\\s)",S)),x&&(a=m.lastIndex),o=r(f,z?n:m,E),z?o?(o.input=k(o.input,A),o[0]=k(o[0],A),o.index=m.lastIndex,m.lastIndex+=o[0].length):m.lastIndex=0:x&&o&&(m.lastIndex=m.global?o.index+o[0].length:a),M&&o&&o.length>1&&r(g,o[0],n,(function(){for(i=1;i<arguments.length-2;i++)void 0===arguments[i]&&(o[i]=void 0)})),o&&D)for(o.groups=c=d(null),i=0;i<D.length;i++)c[(u=D[i])[0]]=o[u[1]];return o}),e.exports=y},function(e,t,n){var a=n(270),o=n(271),r=n(272),i=n(273),s=n(274);function l(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var a=e[t];this.set(a[0],a[1])}}l.prototype.clear=a,l.prototype.delete=o,l.prototype.get=r,l.prototype.has=i,l.prototype.set=s,e.exports=l},function(e,t,n){var a=n(183);e.exports=function(e,t){for(var n=e.length;n--;)if(a(e[n][0],t))return n;return-1}},function(e,t,n){var a=n(38)(Object,"create");e.exports=a},function(e,t,n){var a=n(292);e.exports=function(e,t){var n=e.__data__;return a(t)?n["string"==typeof t?"string":"hash"]:n.map}},function(e,t,n){var a=n(124);e.exports=function(e){if("string"==typeof e||a(e))return e;var t=e+"";return"0"==t&&1/e==-1/0?"-0":t}},function(e,t,n){var a=n(1),o=n(8),r=n(14).f;a({target:"Object",stat:!0,forced:Object.defineProperty!==r,sham:!o},{defineProperty:r})},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));n(67),n(9),n(95),n(175),n(23),n(34),n(129);var a=n(64);function o(e,t){if(e){if("string"==typeof e)return Object(a.a)(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Object(a.a)(e,t):void 0}}},function(e,t,n){var a,o;
/* NProgress, (c) 2013, 2014 Rico Sta. Cruz - http://ricostacruz.com/nprogress
 * @license MIT */void 0===(o="function"==typeof(a=function(){var e,t,n={version:"0.2.0"},a=n.settings={minimum:.08,easing:"ease",positionUsing:"",speed:200,trickle:!0,trickleRate:.02,trickleSpeed:800,showSpinner:!0,barSelector:'[role="bar"]',spinnerSelector:'[role="spinner"]',parent:"body",template:'<div class="bar" role="bar"><div class="peg"></div></div><div class="spinner" role="spinner"><div class="spinner-icon"></div></div>'};function o(e,t,n){return e<t?t:e>n?n:e}function r(e){return 100*(-1+e)}n.configure=function(e){var t,n;for(t in e)void 0!==(n=e[t])&&e.hasOwnProperty(t)&&(a[t]=n);return this},n.status=null,n.set=function(e){var t=n.isStarted();e=o(e,a.minimum,1),n.status=1===e?null:e;var l=n.render(!t),c=l.querySelector(a.barSelector),u=a.speed,d=a.easing;return l.offsetWidth,i((function(t){""===a.positionUsing&&(a.positionUsing=n.getPositioningCSS()),s(c,function(e,t,n){var o;return(o="translate3d"===a.positionUsing?{transform:"translate3d("+r(e)+"%,0,0)"}:"translate"===a.positionUsing?{transform:"translate("+r(e)+"%,0)"}:{"margin-left":r(e)+"%"}).transition="all "+t+"ms "+n,o}(e,u,d)),1===e?(s(l,{transition:"none",opacity:1}),l.offsetWidth,setTimeout((function(){s(l,{transition:"all "+u+"ms linear",opacity:0}),setTimeout((function(){n.remove(),t()}),u)}),u)):setTimeout(t,u)})),this},n.isStarted=function(){return"number"==typeof n.status},n.start=function(){n.status||n.set(0);var e=function(){setTimeout((function(){n.status&&(n.trickle(),e())}),a.trickleSpeed)};return a.trickle&&e(),this},n.done=function(e){return e||n.status?n.inc(.3+.5*Math.random()).set(1):this},n.inc=function(e){var t=n.status;return t?("number"!=typeof e&&(e=(1-t)*o(Math.random()*t,.1,.95)),t=o(t+e,0,.994),n.set(t)):n.start()},n.trickle=function(){return n.inc(Math.random()*a.trickleRate)},e=0,t=0,n.promise=function(a){return a&&"resolved"!==a.state()?(0===t&&n.start(),e++,t++,a.always((function(){0==--t?(e=0,n.done()):n.set((e-t)/e)})),this):this},n.render=function(e){if(n.isRendered())return document.getElementById("nprogress");c(document.documentElement,"nprogress-busy");var t=document.createElement("div");t.id="nprogress",t.innerHTML=a.template;var o,i=t.querySelector(a.barSelector),l=e?"-100":r(n.status||0),u=document.querySelector(a.parent);return s(i,{transition:"all 0 linear",transform:"translate3d("+l+"%,0,0)"}),a.showSpinner||(o=t.querySelector(a.spinnerSelector))&&p(o),u!=document.body&&c(u,"nprogress-custom-parent"),u.appendChild(t),t},n.remove=function(){u(document.documentElement,"nprogress-busy"),u(document.querySelector(a.parent),"nprogress-custom-parent");var e=document.getElementById("nprogress");e&&p(e)},n.isRendered=function(){return!!document.getElementById("nprogress")},n.getPositioningCSS=function(){var e=document.body.style,t="WebkitTransform"in e?"Webkit":"MozTransform"in e?"Moz":"msTransform"in e?"ms":"OTransform"in e?"O":"";return t+"Perspective"in e?"translate3d":t+"Transform"in e?"translate":"margin"};var i=function(){var e=[];function t(){var n=e.shift();n&&n(t)}return function(n){e.push(n),1==e.length&&t()}}(),s=function(){var e=["Webkit","O","Moz","ms"],t={};function n(n){return n=n.replace(/^-ms-/,"ms-").replace(/-([\da-z])/gi,(function(e,t){return t.toUpperCase()})),t[n]||(t[n]=function(t){var n=document.body.style;if(t in n)return t;for(var a,o=e.length,r=t.charAt(0).toUpperCase()+t.slice(1);o--;)if((a=e[o]+r)in n)return a;return t}(n))}function a(e,t,a){t=n(t),e.style[t]=a}return function(e,t){var n,o,r=arguments;if(2==r.length)for(n in t)void 0!==(o=t[n])&&t.hasOwnProperty(n)&&a(e,n,o);else a(e,r[1],r[2])}}();function l(e,t){return("string"==typeof e?e:d(e)).indexOf(" "+t+" ")>=0}function c(e,t){var n=d(e),a=n+t;l(n,t)||(e.className=a.substring(1))}function u(e,t){var n,a=d(e);l(e,t)&&(n=a.replace(" "+t+" "," "),e.className=n.substring(1,n.length-1))}function d(e){return(" "+(e.className||"")+" ").replace(/\s+/gi," ")}function p(e){e&&e.parentNode&&e.parentNode.removeChild(e)}return n})?a.call(t,n,t,e):a)||(e.exports=o)},function(e,t,n){"use strict";var a=n(8),o=n(0),r=n(2),i=n(108),s=n(15),l=n(11),c=n(177),u=n(35),d=n(75),p=n(148),m=n(3),h=n(57).f,g=n(26).f,f=n(14).f,y=n(358),w=n(143).trim,v=o.Number,b=v.prototype,k=o.TypeError,x=r("".slice),T=r("".charCodeAt),M=function(e){var t=p(e,"number");return"bigint"==typeof t?t:I(t)},I=function(e){var t,n,a,o,r,i,s,l,c=p(e,"number");if(d(c))throw k("Cannot convert a Symbol value to a number");if("string"==typeof c&&c.length>2)if(c=w(c),43===(t=T(c,0))||45===t){if(88===(n=T(c,2))||120===n)return NaN}else if(48===t){switch(T(c,1)){case 66:case 98:a=2,o=49;break;case 79:case 111:a=8,o=55;break;default:return+c}for(i=(r=x(c,2)).length,s=0;s<i;s++)if((l=T(r,s))<48||l>o)return NaN;return parseInt(r,a)}return+c};if(i("Number",!v(" 0o1")||!v("0b1")||v("+0x1"))){for(var j,D=function(e){var t=arguments.length<1?0:v(M(e)),n=this;return u(b,n)&&m((function(){y(n)}))?c(Object(t),n,D):t},z=a?h(v):"MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,isFinite,isInteger,isNaN,isSafeInteger,parseFloat,parseInt,fromString,range".split(","),S=0;z.length>S;S++)l(v,j=z[S])&&!l(D,j)&&f(D,j,g(v,j));D.prototype=b,b.constructor=D,s(o,"Number",D)}},function(e,t,n){"use strict";var a=n(1),o=n(48).map;a({target:"Array",proto:!0,forced:!n(81)("map")},{map:function(e){return o(this,e,arguments.length>1?arguments[1]:void 0)}})},function(e,t,n){var a=n(8),o=n(11),r=Function.prototype,i=a&&Object.getOwnPropertyDescriptor,s=o(r,"name"),l=s&&"something"===function(){}.name,c=s&&(!a||a&&i(r,"name").configurable);e.exports={EXISTS:s,PROPER:l,CONFIGURABLE:c}},function(e,t,n){var a=n(8),o=n(94).EXISTS,r=n(2),i=n(14).f,s=Function.prototype,l=r(s.toString),c=/function\b(?:\s|\/\*[\S\s]*?\*\/|\/\/[^\n\r]*[\n\r]+)*([^\s(/]*)/,u=r(c.exec);a&&!o&&i(s,"name",{configurable:!0,get:function(){try{return u(c,l(this))[1]}catch(e){return""}}})},function(e,t,n){"use strict";var a={}.propertyIsEnumerable,o=Object.getOwnPropertyDescriptor,r=o&&!a.call({1:2},1);t.f=r?function(e){var t=o(this,e);return!!t&&t.enumerable}:a},function(e,t,n){var a=n(69),o=n(45),r=n(56),i=n(6)("iterator");e.exports=function(e){if(null!=e)return o(e,i)||o(e,"@@iterator")||r[a(e)]}},function(e,t,n){var a=n(1),o=n(0),r=n(30),i=n(5),s=n(32),l=n(59),c=n(139),u=/MSIE .\./.test(s),d=o.Function,p=function(e){return function(t,n){var a=c(arguments.length,1)>2,o=i(t)?t:d(t),s=a?l(arguments,2):void 0;return e(a?function(){r(o,this,s)}:o,n)}};a({global:!0,bind:!0,forced:u},{setTimeout:p(o.setTimeout),setInterval:p(o.setInterval)})},function(e,t,n){var a=n(0),o=n(100),r=a["__core-js_shared__"]||o("__core-js_shared__",{});e.exports=r},function(e,t,n){var a=n(0),o=Object.defineProperty;e.exports=function(e,t){try{o(a,e,{value:t,configurable:!0,writable:!0})}catch(n){a[e]=t}return t}},function(e,t,n){var a=n(44),o=n(3);e.exports=!!Object.getOwnPropertySymbols&&!o((function(){var e=Symbol();return!String(e)||!(Object(e)instanceof Symbol)||!Symbol.sham&&a&&a<41}))},function(e,t,n){var a=n(8),o=n(146),r=n(14),i=n(10),s=n(18),l=n(68);t.f=a&&!o?Object.defineProperties:function(e,t){i(e);for(var n,a=s(t),o=l(t),c=o.length,u=0;c>u;)r.f(e,n=o[u++],a[n]);return e}},function(e,t,n){var a=n(18),o=n(104),r=n(22),i=function(e){return function(t,n,i){var s,l=a(t),c=r(l),u=o(i,c);if(e&&n!=n){for(;c>u;)if((s=l[u++])!=s)return!0}else for(;c>u;u++)if((e||u in l)&&l[u]===n)return e||u||0;return!e&&-1}};e.exports={includes:i(!0),indexOf:i(!1)}},function(e,t,n){var a=n(46),o=Math.max,r=Math.min;e.exports=function(e,t){var n=a(e);return n<0?o(n+t,0):r(n,t)}},function(e,t){e.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},function(e,t,n){var a=n(11),o=n(152),r=n(26),i=n(14);e.exports=function(e,t,n){for(var s=o(t),l=i.f,c=r.f,u=0;u<s.length;u++){var d=s[u];a(e,d)||n&&a(n,d)||l(e,d,c(t,d))}}},function(e,t){t.f=Object.getOwnPropertySymbols},function(e,t,n){var a=n(3),o=n(5),r=/#|\.prototype\./,i=function(e,t){var n=l[s(e)];return n==u||n!=c&&(o(t)?a(t):!!t)},s=i.normalize=function(e){return String(e).replace(r,".").toLowerCase()},l=i.data={},c=i.NATIVE="N",u=i.POLYFILL="P";e.exports=i},function(e,t,n){var a=n(0),o=n(11),r=n(5),i=n(16),s=n(77),l=n(154),c=s("IE_PROTO"),u=a.Object,d=u.prototype;e.exports=l?u.getPrototypeOf:function(e){var t=i(e);if(o(t,c))return t[c];var n=t.constructor;return r(n)&&t instanceof n?n.prototype:t instanceof u?d:null}},function(e,t,n){var a={};a[n(6)("toStringTag")]="z",e.exports="[object z]"===String(a)},function(e,t,n){var a=n(10),o=n(159),r=n(6)("species");e.exports=function(e,t){var n,i=a(e).constructor;return void 0===i||null==(n=a(i)[r])?t:o(n)}},function(e,t,n){var a=n(1),o=n(16),r=n(68);a({target:"Object",stat:!0,forced:n(3)((function(){r(1)}))},{keys:function(e){return r(o(e))}})},function(e,t,n){var a=n(0),o=n(169),r=a.TypeError;e.exports=function(e){if(o(e))throw r("The method doesn't accept regular expressions");return e}},function(e,t,n){var a=n(6)("match");e.exports=function(e){var t=/./;try{"/./"[e](t)}catch(n){try{return t[a]=!1,"/./"[e](t)}catch(e){}}return!1}},function(e,t,n){var a=n(0),o=n(104),r=n(22),i=n(60),s=a.Array,l=Math.max;e.exports=function(e,t,n){for(var a=r(e),c=o(t,a),u=o(void 0===n?a:n,a),d=s(l(u-c,0)),p=0;c<u;c++,p++)i(d,p,e[c]);return d.length=p,d}},function(e,t,n){n(174)("iterator")},function(e,t,n){var a=n(264),o=n(43),r=Object.prototype,i=r.hasOwnProperty,s=r.propertyIsEnumerable,l=a(function(){return arguments}())?a:function(e){return o(e)&&i.call(e,"callee")&&!s.call(e,"callee")};e.exports=l},function(e,t,n){var a=n(38)(n(27),"Map");e.exports=a},function(e,t){e.exports=function(e){var t=typeof e;return null!=e&&("object"==t||"function"==t)}},function(e,t,n){var a=n(284),o=n(291),r=n(293),i=n(294),s=n(295);function l(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var a=e[t];this.set(a[0],a[1])}}l.prototype.clear=a,l.prototype.delete=o,l.prototype.get=r,l.prototype.has=i,l.prototype.set=s,e.exports=l},function(e,t){e.exports=function(e){var t=-1,n=Array(e.size);return e.forEach((function(e){n[++t]=e})),n}},function(e,t){e.exports=function(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=9007199254740991}},function(e,t,n){var a=n(24),o=n(124),r=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,i=/^\w*$/;e.exports=function(e,t){if(a(e))return!1;var n=typeof e;return!("number"!=n&&"symbol"!=n&&"boolean"!=n&&null!=e&&!o(e))||(i.test(e)||!r.test(e)||null!=t&&e in Object(t))}},function(e,t,n){var a=n(52),o=n(43);e.exports=function(e){return"symbol"==typeof e||o(e)&&"[object Symbol]"==a(e)}},function(e,t){e.exports=function(e){return e}},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));n(133);n(61),n(82),n(9),n(116),n(23),n(28);var a=n(90);n(37),n(36);function o(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var a,o,r=[],i=!0,s=!1;try{for(n=n.call(e);!(i=(a=n.next()).done)&&(r.push(a.value),!t||r.length!==t);i=!0);}catch(e){s=!0,o=e}finally{try{i||null==n.return||n.return()}finally{if(s)throw o}}return r}}(e,t)||Object(a.a)(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}},function(e,t,n){"use strict";var a=n(30),o=n(12),r=n(2),i=n(134),s=n(3),l=n(10),c=n(5),u=n(46),d=n(49),p=n(13),m=n(20),h=n(141),g=n(45),f=n(260),y=n(135),w=n(6)("replace"),v=Math.max,b=Math.min,k=r([].concat),x=r([].push),T=r("".indexOf),M=r("".slice),I="$0"==="a".replace(/./,"$0"),j=!!/./[w]&&""===/./[w]("a","$0");i("replace",(function(e,t,n){var r=j?"$":"$0";return[function(e,n){var a=m(this),r=null==e?void 0:g(e,w);return r?o(r,e,a,n):o(t,p(a),e,n)},function(e,o){var i=l(this),s=p(e);if("string"==typeof o&&-1===T(o,r)&&-1===T(o,"$<")){var m=n(t,i,s,o);if(m.done)return m.value}var g=c(o);g||(o=p(o));var w=i.global;if(w){var I=i.unicode;i.lastIndex=0}for(var j=[];;){var D=y(i,s);if(null===D)break;if(x(j,D),!w)break;""===p(D[0])&&(i.lastIndex=h(s,d(i.lastIndex),I))}for(var z,S="",C=0,A=0;A<j.length;A++){for(var E=p((D=j[A])[0]),L=v(b(u(D.index),s.length),0),_=[],N=1;N<D.length;N++)x(_,void 0===(z=D[N])?z:String(z));var O=D.groups;if(g){var P=k([E],_,L,s);void 0!==O&&x(P,O);var K=p(a(o,void 0,P))}else K=f(E,s,L,_,O,o);L>=C&&(S+=M(s,C,L)+K,C=L+E.length)}return S+M(s,C)}]}),!!s((function(){var e=/./;return e.exec=function(){var e=[];return e.groups={a:"7"},e},"7"!=="".replace(e,"$<a>")}))||!I||j)},function(e,t,n){var a=function(e){"use strict";var t=Object.prototype,n=t.hasOwnProperty,a="function"==typeof Symbol?Symbol:{},o=a.iterator||"@@iterator",r=a.asyncIterator||"@@asyncIterator",i=a.toStringTag||"@@toStringTag";function s(e,t,n){return Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{s({},"")}catch(e){s=function(e,t,n){return e[t]=n}}function l(e,t,n,a){var o=t&&t.prototype instanceof d?t:d,r=Object.create(o.prototype),i=new T(a||[]);return r._invoke=function(e,t,n){var a="suspendedStart";return function(o,r){if("executing"===a)throw new Error("Generator is already running");if("completed"===a){if("throw"===o)throw r;return I()}for(n.method=o,n.arg=r;;){var i=n.delegate;if(i){var s=b(i,n);if(s){if(s===u)continue;return s}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if("suspendedStart"===a)throw a="completed",n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);a="executing";var l=c(e,t,n);if("normal"===l.type){if(a=n.done?"completed":"suspendedYield",l.arg===u)continue;return{value:l.arg,done:n.done}}"throw"===l.type&&(a="completed",n.method="throw",n.arg=l.arg)}}}(e,n,i),r}function c(e,t,n){try{return{type:"normal",arg:e.call(t,n)}}catch(e){return{type:"throw",arg:e}}}e.wrap=l;var u={};function d(){}function p(){}function m(){}var h={};s(h,o,(function(){return this}));var g=Object.getPrototypeOf,f=g&&g(g(M([])));f&&f!==t&&n.call(f,o)&&(h=f);var y=m.prototype=d.prototype=Object.create(h);function w(e){["next","throw","return"].forEach((function(t){s(e,t,(function(e){return this._invoke(t,e)}))}))}function v(e,t){var a;this._invoke=function(o,r){function i(){return new t((function(a,i){!function a(o,r,i,s){var l=c(e[o],e,r);if("throw"!==l.type){var u=l.arg,d=u.value;return d&&"object"==typeof d&&n.call(d,"__await")?t.resolve(d.__await).then((function(e){a("next",e,i,s)}),(function(e){a("throw",e,i,s)})):t.resolve(d).then((function(e){u.value=e,i(u)}),(function(e){return a("throw",e,i,s)}))}s(l.arg)}(o,r,a,i)}))}return a=a?a.then(i,i):i()}}function b(e,t){var n=e.iterator[t.method];if(void 0===n){if(t.delegate=null,"throw"===t.method){if(e.iterator.return&&(t.method="return",t.arg=void 0,b(e,t),"throw"===t.method))return u;t.method="throw",t.arg=new TypeError("The iterator does not provide a 'throw' method")}return u}var a=c(n,e.iterator,t.arg);if("throw"===a.type)return t.method="throw",t.arg=a.arg,t.delegate=null,u;var o=a.arg;return o?o.done?(t[e.resultName]=o.value,t.next=e.nextLoc,"return"!==t.method&&(t.method="next",t.arg=void 0),t.delegate=null,u):o:(t.method="throw",t.arg=new TypeError("iterator result is not an object"),t.delegate=null,u)}function k(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function x(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function T(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(k,this),this.reset(!0)}function M(e){if(e){var t=e[o];if(t)return t.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var a=-1,r=function t(){for(;++a<e.length;)if(n.call(e,a))return t.value=e[a],t.done=!1,t;return t.value=void 0,t.done=!0,t};return r.next=r}}return{next:I}}function I(){return{value:void 0,done:!0}}return p.prototype=m,s(y,"constructor",m),s(m,"constructor",p),p.displayName=s(m,i,"GeneratorFunction"),e.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===p||"GeneratorFunction"===(t.displayName||t.name))},e.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,m):(e.__proto__=m,s(e,i,"GeneratorFunction")),e.prototype=Object.create(y),e},e.awrap=function(e){return{__await:e}},w(v.prototype),s(v.prototype,r,(function(){return this})),e.AsyncIterator=v,e.async=function(t,n,a,o,r){void 0===r&&(r=Promise);var i=new v(l(t,n,a,o),r);return e.isGeneratorFunction(n)?i:i.next().then((function(e){return e.done?e.value:i.next()}))},w(y),s(y,i,"Generator"),s(y,o,(function(){return this})),s(y,"toString",(function(){return"[object Generator]"})),e.keys=function(e){var t=[];for(var n in e)t.push(n);return t.reverse(),function n(){for(;t.length;){var a=t.pop();if(a in e)return n.value=a,n.done=!1,n}return n.done=!0,n}},e.values=M,T.prototype={constructor:T,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(x),!e)for(var t in this)"t"===t.charAt(0)&&n.call(this,t)&&!isNaN(+t.slice(1))&&(this[t]=void 0)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var t=this;function a(n,a){return i.type="throw",i.arg=e,t.next=n,a&&(t.method="next",t.arg=void 0),!!a}for(var o=this.tryEntries.length-1;o>=0;--o){var r=this.tryEntries[o],i=r.completion;if("root"===r.tryLoc)return a("end");if(r.tryLoc<=this.prev){var s=n.call(r,"catchLoc"),l=n.call(r,"finallyLoc");if(s&&l){if(this.prev<r.catchLoc)return a(r.catchLoc,!0);if(this.prev<r.finallyLoc)return a(r.finallyLoc)}else if(s){if(this.prev<r.catchLoc)return a(r.catchLoc,!0)}else{if(!l)throw new Error("try statement without catch or finally");if(this.prev<r.finallyLoc)return a(r.finallyLoc)}}}},abrupt:function(e,t){for(var a=this.tryEntries.length-1;a>=0;--a){var o=this.tryEntries[a];if(o.tryLoc<=this.prev&&n.call(o,"finallyLoc")&&this.prev<o.finallyLoc){var r=o;break}}r&&("break"===e||"continue"===e)&&r.tryLoc<=t&&t<=r.finallyLoc&&(r=null);var i=r?r.completion:{};return i.type=e,i.arg=t,r?(this.method="next",this.next=r.finallyLoc,u):this.complete(i)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),u},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.finallyLoc===e)return this.complete(n.completion,n.afterLoc),x(n),u}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.tryLoc===e){var a=n.completion;if("throw"===a.type){var o=a.arg;x(n)}return o}}throw new Error("illegal catch attempt")},delegateYield:function(e,t,n){return this.delegate={iterator:M(e),resultName:t,nextLoc:n},"next"===this.method&&(this.arg=void 0),u}},e}(e.exports);try{regeneratorRuntime=a}catch(e){"object"==typeof globalThis?globalThis.regeneratorRuntime=a:Function("r","regeneratorRuntime = r")(a)}},function(e,t,n){"use strict";n(34);var a,o,r=n(1),i=n(0),s=n(12),l=n(2),c=n(5),u=n(7),d=(a=!1,(o=/[ac]/).exec=function(){return a=!0,/./.exec.apply(this,arguments)},!0===o.test("abc")&&a),p=i.Error,m=l(/./.test);r({target:"RegExp",proto:!0,forced:!d},{test:function(e){var t=this.exec;if(!c(t))return m(this,e);var n=s(t,this,e);if(null!==n&&!u(n))throw new p("RegExp exec method returned something other than an Object or null");return!!n}})},function(e,t,n){"use strict";var a=n(1),o=n(0),r=n(3),i=n(51),s=n(7),l=n(16),c=n(22),u=n(60),d=n(140),p=n(81),m=n(6),h=n(44),g=m("isConcatSpreadable"),f=o.TypeError,y=h>=51||!r((function(){var e=[];return e[g]=!1,e.concat()[0]!==e})),w=p("concat"),v=function(e){if(!s(e))return!1;var t=e[g];return void 0!==t?!!t:i(e)};a({target:"Array",proto:!0,forced:!y||!w},{concat:function(e){var t,n,a,o,r,i=l(this),s=d(i,0),p=0;for(t=-1,a=arguments.length;t<a;t++)if(v(r=-1===t?i:arguments[t])){if(p+(o=c(r))>9007199254740991)throw f("Maximum allowed index exceeded");for(n=0;n<o;n++,p++)n in r&&u(s,p,r[n])}else{if(p>=9007199254740991)throw f("Maximum allowed index exceeded");u(s,p++,r)}return s.length=p,s}})},function(e,t,n){var a=n(6),o=n(29),r=n(14),i=a("unscopables"),s=Array.prototype;null==s[i]&&r.f(s,i,{configurable:!0,value:o(null)}),e.exports=function(e){s[i][e]=!0}},function(e,t,n){"use strict";var a,o=n(1),r=n(2),i=n(26).f,s=n(49),l=n(13),c=n(113),u=n(20),d=n(114),p=n(21),m=r("".startsWith),h=r("".slice),g=Math.min,f=d("startsWith");o({target:"String",proto:!0,forced:!!(p||f||(a=i(String.prototype,"startsWith"),!a||a.writable))&&!f},{startsWith:function(e){var t=l(u(this));c(e);var n=s(g(arguments.length>1?arguments[1]:void 0,t.length)),a=l(e);return m?m(t,a,n):h(t,n,n+a.length)===a}})},function(e,t,n){n(1)({target:"Array",stat:!0},{isArray:n(51)})},function(e,t,n){"use strict";n(34);var a=n(2),o=n(15),r=n(83),i=n(3),s=n(6),l=n(25),c=s("species"),u=RegExp.prototype;e.exports=function(e,t,n,d){var p=s(e),m=!i((function(){var t={};return t[p]=function(){return 7},7!=""[e](t)})),h=m&&!i((function(){var t=!1,n=/a/;return"split"===e&&((n={}).constructor={},n.constructor[c]=function(){return n},n.flags="",n[p]=/./[p]),n.exec=function(){return t=!0,null},n[p](""),!t}));if(!m||!h||n){var g=a(/./[p]),f=t(p,""[e],(function(e,t,n,o,i){var s=a(e),l=t.exec;return l===r||l===u.exec?m&&!i?{done:!0,value:g(t,n,o)}:{done:!0,value:s(n,t,o)}:{done:!1}}));o(String.prototype,e,f[0]),o(u,p,f[1])}d&&l(u[p],"sham",!0)}},function(e,t,n){var a=n(0),o=n(12),r=n(10),i=n(5),s=n(31),l=n(83),c=a.TypeError;e.exports=function(e,t){var n=e.exec;if(i(n)){var a=o(n,e,t);return null!==a&&r(a),a}if("RegExp"===s(e))return o(l,e,t);throw c("RegExp#exec called on incompatible receiver")}},function(e,t,n){"use strict";n.d(t,"a",(function(){return r}));n(112),n(61),n(39),n(9),n(360),n(65),n(66),n(167),n(361),n(89);var a=n(200);function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){Object(a.a)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}},function(e,t,n){"use strict";var a=n(18),o=n(131),r=n(56),i=n(41),s=n(14).f,l=n(151),c=n(21),u=n(8),d=i.set,p=i.getterFor("Array Iterator");e.exports=l(Array,"Array",(function(e,t){d(this,{type:"Array Iterator",target:a(e),index:0,kind:t})}),(function(){var e=p(this),t=e.target,n=e.kind,a=e.index++;return!t||a>=t.length?(e.target=void 0,{value:void 0,done:!0}):"keys"==n?{value:a,done:!1}:"values"==n?{value:t[a],done:!1}:{value:[a,t[a]],done:!1}}),"values");var m=r.Arguments=r.Array;if(o("keys"),o("values"),o("entries"),!c&&u&&"values"!==m.name)try{s(m,"name",{value:"values"})}catch(e){}},function(e,t,n){var a=n(0),o=n(12),r=n(33),i=n(10),s=n(76),l=n(97),c=a.TypeError;e.exports=function(e,t){var n=arguments.length<2?l(e):t;if(r(n))return i(o(n,e));throw c(s(e)+" is not iterable")}},function(e,t,n){var a=n(0).TypeError;e.exports=function(e,t){if(e<t)throw a("Not enough arguments");return e}},function(e,t,n){var a=n(243);e.exports=function(e,t){return new(a(e))(0===t?0:t)}},function(e,t,n){"use strict";var a=n(164).charAt;e.exports=function(e,t,n){return t+(n?a(e,t).length:1)}},function(e,t){e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children||(e.children=[]),Object.defineProperty(e,"loaded",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return e.i}}),e.webpackPolyfill=1),e}},function(e,t,n){var a=n(2),o=n(20),r=n(13),i=n(144),s=a("".replace),l="["+i+"]",c=RegExp("^"+l+l+"*"),u=RegExp(l+l+"*$"),d=function(e){return function(t){var n=r(o(t));return 1&e&&(n=s(n,c,"")),2&e&&(n=s(n,u,"")),n}};e.exports={start:d(1),end:d(2),trim:d(3)}},function(e,t){e.exports="\t\n\v\f\r                　\u2028\u2029\ufeff"},function(e,t,n){var a=n(101);e.exports=a&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},function(e,t,n){var a=n(8),o=n(3);e.exports=a&&o((function(){return 42!=Object.defineProperty((function(){}),"prototype",{value:42,writable:!1}).prototype}))},function(e,t,n){var a=n(8),o=n(3),r=n(73);e.exports=!a&&!o((function(){return 7!=Object.defineProperty(r("div"),"a",{get:function(){return 7}}).a}))},function(e,t,n){var a=n(0),o=n(12),r=n(7),i=n(75),s=n(45),l=n(226),c=n(6),u=a.TypeError,d=c("toPrimitive");e.exports=function(e,t){if(!r(e)||i(e))return e;var n,a=s(e,d);if(a){if(void 0===t&&(t="default"),n=o(a,e,t),!r(n)||i(n))return n;throw u("Can't convert object to primitive value")}return void 0===t&&(t="number"),l(e,t)}},function(e,t,n){var a=n(2),o=n(11),r=n(18),i=n(103).indexOf,s=n(55),l=a([].push);e.exports=function(e,t){var n,a=r(e),c=0,u=[];for(n in a)!o(s,n)&&o(a,n)&&l(u,n);for(;t.length>c;)o(a,n=t[c++])&&(~i(u,n)||l(u,n));return u}},function(e,t,n){var a=n(17);e.exports=a("document","documentElement")},function(e,t,n){"use strict";var a=n(1),o=n(12),r=n(21),i=n(94),s=n(5),l=n(219),c=n(109),u=n(58),d=n(50),p=n(25),m=n(15),h=n(6),g=n(56),f=n(153),y=i.PROPER,w=i.CONFIGURABLE,v=f.IteratorPrototype,b=f.BUGGY_SAFARI_ITERATORS,k=h("iterator"),x=function(){return this};e.exports=function(e,t,n,i,h,f,T){l(n,t,i);var M,I,j,D=function(e){if(e===h&&E)return E;if(!b&&e in C)return C[e];switch(e){case"keys":case"values":case"entries":return function(){return new n(this,e)}}return function(){return new n(this)}},z=t+" Iterator",S=!1,C=e.prototype,A=C[k]||C["@@iterator"]||h&&C[h],E=!b&&A||D(h),L="Array"==t&&C.entries||A;if(L&&(M=c(L.call(new e)))!==Object.prototype&&M.next&&(r||c(M)===v||(u?u(M,v):s(M[k])||m(M,k,x)),d(M,z,!0,!0),r&&(g[z]=x)),y&&"values"==h&&A&&"values"!==A.name&&(!r&&w?p(C,"name","values"):(S=!0,E=function(){return o(A,this)})),h)if(I={values:D("values"),keys:f?E:D("keys"),entries:D("entries")},T)for(j in I)(b||S||!(j in C))&&m(C,j,I[j]);else a({target:t,proto:!0,forced:b||S},I);return r&&!T||C[k]===E||m(C,k,E,{name:h}),g[t]=E,I}},function(e,t,n){var a=n(17),o=n(2),r=n(57),i=n(107),s=n(10),l=o([].concat);e.exports=a("Reflect","ownKeys")||function(e){var t=r.f(s(e)),n=i.f;return n?l(t,n(e)):t}},function(e,t,n){"use strict";var a,o,r,i=n(3),s=n(5),l=n(29),c=n(109),u=n(15),d=n(6),p=n(21),m=d("iterator"),h=!1;[].keys&&("next"in(r=[].keys())?(o=c(c(r)))!==Object.prototype&&(a=o):h=!0),null==a||i((function(){var e={};return a[m].call(e)!==e}))?a={}:p&&(a=l(a)),s(a[m])||u(a,m,(function(){return this})),e.exports={IteratorPrototype:a,BUGGY_SAFARI_ITERATORS:h}},function(e,t,n){var a=n(3);e.exports=!a((function(){function e(){}return e.prototype.constructor=null,Object.getPrototypeOf(new e)!==e.prototype}))},function(e,t,n){var a=n(0);e.exports=a.Promise},function(e,t,n){var a=n(6),o=n(56),r=a("iterator"),i=Array.prototype;e.exports=function(e){return void 0!==e&&(o.Array===e||i[r]===e)}},function(e,t,n){var a=n(12),o=n(10),r=n(45);e.exports=function(e,t,n){var i,s;o(e);try{if(!(i=r(e,"return"))){if("throw"===t)throw n;return n}i=a(i,e)}catch(e){s=!0,i=e}if("throw"===t)throw n;if(s)throw i;return o(i),n}},function(e,t,n){var a=n(6)("iterator"),o=!1;try{var r=0,i={next:function(){return{done:!!r++}},return:function(){o=!0}};i[a]=function(){return this},Array.from(i,(function(){throw 2}))}catch(e){}e.exports=function(e,t){if(!t&&!o)return!1;var n=!1;try{var r={};r[a]=function(){return{next:function(){return{done:n=!0}}}},e(r)}catch(e){}return n}},function(e,t,n){var a=n(0),o=n(79),r=n(76),i=a.TypeError;e.exports=function(e){if(o(e))return e;throw i(r(e)+" is not a constructor")}},function(e,t,n){var a,o,r,i,s=n(0),l=n(30),c=n(47),u=n(5),d=n(11),p=n(3),m=n(150),h=n(59),g=n(73),f=n(139),y=n(161),w=n(80),v=s.setImmediate,b=s.clearImmediate,k=s.process,x=s.Dispatch,T=s.Function,M=s.MessageChannel,I=s.String,j=0,D={};try{a=s.location}catch(e){}var z=function(e){if(d(D,e)){var t=D[e];delete D[e],t()}},S=function(e){return function(){z(e)}},C=function(e){z(e.data)},A=function(e){s.postMessage(I(e),a.protocol+"//"+a.host)};v&&b||(v=function(e){f(arguments.length,1);var t=u(e)?e:T(e),n=h(arguments,1);return D[++j]=function(){l(t,void 0,n)},o(j),j},b=function(e){delete D[e]},w?o=function(e){k.nextTick(S(e))}:x&&x.now?o=function(e){x.now(S(e))}:M&&!y?(i=(r=new M).port2,r.port1.onmessage=C,o=c(i.postMessage,i)):s.addEventListener&&u(s.postMessage)&&!s.importScripts&&a&&"file:"!==a.protocol&&!p(A)?(o=A,s.addEventListener("message",C,!1)):o="onreadystatechange"in g("script")?function(e){m.appendChild(g("script")).onreadystatechange=function(){m.removeChild(this),z(e)}}:function(e){setTimeout(S(e),0)}),e.exports={set:v,clear:b}},function(e,t,n){var a=n(32);e.exports=/(?:ipad|iphone|ipod).*applewebkit/i.test(a)},function(e,t,n){var a=n(10),o=n(7),r=n(163);e.exports=function(e,t){if(a(e),o(t)&&t.constructor===e)return t;var n=r.f(e);return(0,n.resolve)(t),n.promise}},function(e,t,n){"use strict";var a=n(33),o=function(e){var t,n;this.promise=new e((function(e,a){if(void 0!==t||void 0!==n)throw TypeError("Bad Promise constructor");t=e,n=a})),this.resolve=a(t),this.reject=a(n)};e.exports.f=function(e){return new o(e)}},function(e,t,n){var a=n(2),o=n(46),r=n(13),i=n(20),s=a("".charAt),l=a("".charCodeAt),c=a("".slice),u=function(e){return function(t,n){var a,u,d=r(i(t)),p=o(n),m=d.length;return p<0||p>=m?e?"":void 0:(a=l(d,p))<55296||a>56319||p+1===m||(u=l(d,p+1))<56320||u>57343?e?s(d,p):a:e?c(d,p,p+2):u-56320+(a-55296<<10)+65536}};e.exports={codeAt:u(!1),charAt:u(!0)}},function(e,t){e.exports={CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0}},function(e,t,n){var a=n(73)("span").classList,o=a&&a.constructor&&a.constructor.prototype;e.exports=o===Object.prototype?void 0:o},function(e,t,n){var a=n(1),o=n(8),r=n(152),i=n(18),s=n(26),l=n(60);a({target:"Object",stat:!0,sham:!o},{getOwnPropertyDescriptors:function(e){for(var t,n,a=i(e),o=s.f,c=r(a),u={},d=0;c.length>d;)void 0!==(n=o(a,t=c[d++]))&&l(u,t,n);return u}})},function(e,t,n){var a=n(1),o=n(3),r=n(16),i=n(109),s=n(154);a({target:"Object",stat:!0,forced:o((function(){i(1)})),sham:!s},{getPrototypeOf:function(e){return i(r(e))}})},function(e,t,n){var a=n(7),o=n(31),r=n(6)("match");e.exports=function(e){var t;return a(e)&&(void 0!==(t=e[r])?!!t:"RegExp"==o(e))}},function(e,t,n){"use strict";var a=n(48).forEach,o=n(40)("forEach");e.exports=o?[].forEach:function(e){return a(this,e,arguments.length>1?arguments[1]:void 0)}},function(e,t,n){var a=n(3);e.exports=!a((function(){return Object.isExtensible(Object.preventExtensions({}))}))},function(e,t,n){var a=n(31),o=n(18),r=n(57).f,i=n(115),s="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];e.exports.f=function(e){return s&&"Window"==a(e)?function(e){try{return r(e)}catch(e){return i(s)}}(e):r(o(e))}},function(e,t,n){var a=n(6);t.f=a},function(e,t,n){var a=n(250),o=n(11),r=n(173),i=n(14).f;e.exports=function(e){var t=a.Symbol||(a.Symbol={});o(t,e)||i(t,e,{value:r.f(e)})}},function(e,t,n){var a=n(1),o=n(251);a({target:"Array",stat:!0,forced:!n(158)((function(e){Array.from(e)}))},{from:o})},function(e,t,n){var a=n(3),o=n(0).RegExp,r=a((function(){var e=o("a","y");return e.lastIndex=2,null!=e.exec("abcd")})),i=r||a((function(){return!o("a","y").sticky})),s=r||a((function(){var e=o("^r","gy");return e.lastIndex=2,null!=e.exec("str")}));e.exports={BROKEN_CARET:s,MISSED_STICKY:i,UNSUPPORTED_Y:r}},function(e,t,n){var a=n(5),o=n(7),r=n(58);e.exports=function(e,t,n){var i,s;return r&&a(i=t.constructor)&&i!==n&&o(s=i.prototype)&&s!==n.prototype&&r(e,s),e}},function(e,t,n){var a=n(13);e.exports=function(e,t){return void 0===e?arguments.length<2?"":t:a(e)}},function(e,t,n){n(1)({target:"Object",stat:!0,sham:!n(8)},{create:n(29)})},function(e,t){e.exports=function(e,t){for(var n=-1,a=t.length,o=e.length;++n<a;)e[o+n]=t[n];return e}},function(e,t){var n="object"==typeof global&&global&&global.Object===Object&&global;e.exports=n},function(e,t,n){var a=n(84),o=n(275),r=n(276),i=n(277),s=n(278),l=n(279);function c(e){var t=this.__data__=new a(e);this.size=t.size}c.prototype.clear=o,c.prototype.delete=r,c.prototype.get=i,c.prototype.has=s,c.prototype.set=l,e.exports=c},function(e,t){e.exports=function(e,t){return e===t||e!=e&&t!=t}},function(e,t,n){var a=n(52),o=n(119);e.exports=function(e){if(!o(e))return!1;var t=a(e);return"[object Function]"==t||"[object GeneratorFunction]"==t||"[object AsyncFunction]"==t||"[object Proxy]"==t}},function(e,t){var n=Function.prototype.toString;e.exports=function(e){if(null!=e){try{return n.call(e)}catch(e){}try{return e+""}catch(e){}}return""}},function(e,t,n){var a=n(296),o=n(43);e.exports=function e(t,n,r,i,s){return t===n||(null==t||null==n||!o(t)&&!o(n)?t!=t&&n!=n:a(t,n,r,i,e,s))}},function(e,t,n){var a=n(188),o=n(299),r=n(189);e.exports=function(e,t,n,i,s,l){var c=1&n,u=e.length,d=t.length;if(u!=d&&!(c&&d>u))return!1;var p=l.get(e),m=l.get(t);if(p&&m)return p==t&&m==e;var h=-1,g=!0,f=2&n?new a:void 0;for(l.set(e,t),l.set(t,e);++h<u;){var y=e[h],w=t[h];if(i)var v=c?i(w,y,h,t,e,l):i(y,w,h,e,t,l);if(void 0!==v){if(v)continue;g=!1;break}if(f){if(!o(t,(function(e,t){if(!r(f,t)&&(y===e||s(y,e,n,i,l)))return f.push(t)}))){g=!1;break}}else if(y!==w&&!s(y,w,n,i,l)){g=!1;break}}return l.delete(e),l.delete(t),g}},function(e,t,n){var a=n(120),o=n(297),r=n(298);function i(e){var t=-1,n=null==e?0:e.length;for(this.__data__=new a;++t<n;)this.add(e[t])}i.prototype.add=i.prototype.push=o,i.prototype.has=r,e.exports=i},function(e,t){e.exports=function(e,t){return e.has(t)}},function(e,t,n){var a=n(309),o=n(315),r=n(194);e.exports=function(e){return r(e)?a(e):o(e)}},function(e,t,n){(function(e){var a=n(27),o=n(311),r=t&&!t.nodeType&&t,i=r&&"object"==typeof e&&e&&!e.nodeType&&e,s=i&&i.exports===r?a.Buffer:void 0,l=(s?s.isBuffer:void 0)||o;e.exports=l}).call(this,n(142)(e))},function(e,t){var n=/^(?:0|[1-9]\d*)$/;e.exports=function(e,t){var a=typeof e;return!!(t=null==t?9007199254740991:t)&&("number"==a||"symbol"!=a&&n.test(e))&&e>-1&&e%1==0&&e<t}},function(e,t,n){var a=n(312),o=n(313),r=n(314),i=r&&r.isTypedArray,s=i?o(i):a;e.exports=s},function(e,t,n){var a=n(184),o=n(122);e.exports=function(e){return null!=e&&o(e.length)&&!a(e)}},function(e,t,n){var a=n(38)(n(27),"Set");e.exports=a},function(e,t,n){var a=n(119);e.exports=function(e){return e==e&&!a(e)}},function(e,t){e.exports=function(e,t){return function(n){return null!=n&&(n[e]===t&&(void 0!==t||e in Object(n)))}}},function(e,t,n){var a=n(199),o=n(88);e.exports=function(e,t){for(var n=0,r=(t=a(t,e)).length;null!=e&&n<r;)e=e[o(t[n++])];return n&&n==r?e:void 0}},function(e,t,n){var a=n(24),o=n(123),r=n(326),i=n(329);e.exports=function(e,t){return a(e)?e:o(e,t)?[e]:r(i(e))}},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));n(89);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}},function(e,t,n){},function(e,t,n){},function(e,t,n){n(1)({target:"Object",stat:!0},{setPrototypeOf:n(58)})},function(e,t,n){var a=n(1),o=n(17),r=n(30),i=n(374),s=n(159),l=n(10),c=n(7),u=n(29),d=n(3),p=o("Reflect","construct"),m=Object.prototype,h=[].push,g=d((function(){function e(){}return!(p((function(){}),[],e)instanceof e)})),f=!d((function(){p((function(){}))})),y=g||f;a({target:"Reflect",stat:!0,forced:y,sham:y},{construct:function(e,t){s(e),l(t);var n=arguments.length<3?e:s(arguments[2]);if(f&&!g)return p(e,t,n);if(e==n){switch(t.length){case 0:return new e;case 1:return new e(t[0]);case 2:return new e(t[0],t[1]);case 3:return new e(t[0],t[1],t[2]);case 4:return new e(t[0],t[1],t[2],t[3])}var a=[null];return r(h,a,t),new(r(i,e,a))}var o=n.prototype,d=u(c(o)?o:m),y=r(e,d,t);return c(y)?y:d}})},function(e,t,n){var a=n(1),o=n(0),r=n(50);a({global:!0},{Reflect:{}}),r(o.Reflect,"Reflect",!0)},function(e,t,n){},function(e,t,n){},function(e,t,n){var a=n(262),o=n(267),r=n(338),i=n(346),s=n(355),l=n(356),c=r((function(e){var t=l(e);return s(t)&&(t=void 0),i(a(e,1,s,!0),o(t,2))}));e.exports=c},function(e,t,n){"use strict";
/*!
 * escape-html
 * Copyright(c) 2012-2013 TJ Holowaychuk
 * Copyright(c) 2015 Andreas Lubbe
 * Copyright(c) 2015 Tiancheng "Timothy" Gu
 * MIT Licensed
 */var a=/["'&<>]/;e.exports=function(e){var t,n=""+e,o=a.exec(n);if(!o)return n;var r="",i=0,s=0;for(i=o.index;i<n.length;i++){switch(n.charCodeAt(i)){case 34:t="&quot;";break;case 38:t="&amp;";break;case 39:t="&#39;";break;case 60:t="&lt;";break;case 62:t="&gt;";break;default:continue}s!==i&&(r+=n.substring(s,i)),s=i+1,r+=t}return s!==i?r+n.substring(s,i):r}},function(e,t,n){!function(){"use strict";e.exports={polyfill:function(){var e=window,t=document;if(!("scrollBehavior"in t.documentElement.style)||!0===e.__forceSmoothScrollPolyfill__){var n,a=e.HTMLElement||e.Element,o={scroll:e.scroll||e.scrollTo,scrollBy:e.scrollBy,elementScroll:a.prototype.scroll||s,scrollIntoView:a.prototype.scrollIntoView},r=e.performance&&e.performance.now?e.performance.now.bind(e.performance):Date.now,i=(n=e.navigator.userAgent,new RegExp(["MSIE ","Trident/","Edge/"].join("|")).test(n)?1:0);e.scroll=e.scrollTo=function(){void 0!==arguments[0]&&(!0!==l(arguments[0])?h.call(e,t.body,void 0!==arguments[0].left?~~arguments[0].left:e.scrollX||e.pageXOffset,void 0!==arguments[0].top?~~arguments[0].top:e.scrollY||e.pageYOffset):o.scroll.call(e,void 0!==arguments[0].left?arguments[0].left:"object"!=typeof arguments[0]?arguments[0]:e.scrollX||e.pageXOffset,void 0!==arguments[0].top?arguments[0].top:void 0!==arguments[1]?arguments[1]:e.scrollY||e.pageYOffset))},e.scrollBy=function(){void 0!==arguments[0]&&(l(arguments[0])?o.scrollBy.call(e,void 0!==arguments[0].left?arguments[0].left:"object"!=typeof arguments[0]?arguments[0]:0,void 0!==arguments[0].top?arguments[0].top:void 0!==arguments[1]?arguments[1]:0):h.call(e,t.body,~~arguments[0].left+(e.scrollX||e.pageXOffset),~~arguments[0].top+(e.scrollY||e.pageYOffset)))},a.prototype.scroll=a.prototype.scrollTo=function(){if(void 0!==arguments[0])if(!0!==l(arguments[0])){var e=arguments[0].left,t=arguments[0].top;h.call(this,this,void 0===e?this.scrollLeft:~~e,void 0===t?this.scrollTop:~~t)}else{if("number"==typeof arguments[0]&&void 0===arguments[1])throw new SyntaxError("Value could not be converted");o.elementScroll.call(this,void 0!==arguments[0].left?~~arguments[0].left:"object"!=typeof arguments[0]?~~arguments[0]:this.scrollLeft,void 0!==arguments[0].top?~~arguments[0].top:void 0!==arguments[1]?~~arguments[1]:this.scrollTop)}},a.prototype.scrollBy=function(){void 0!==arguments[0]&&(!0!==l(arguments[0])?this.scroll({left:~~arguments[0].left+this.scrollLeft,top:~~arguments[0].top+this.scrollTop,behavior:arguments[0].behavior}):o.elementScroll.call(this,void 0!==arguments[0].left?~~arguments[0].left+this.scrollLeft:~~arguments[0]+this.scrollLeft,void 0!==arguments[0].top?~~arguments[0].top+this.scrollTop:~~arguments[1]+this.scrollTop))},a.prototype.scrollIntoView=function(){if(!0!==l(arguments[0])){var n=p(this),a=n.getBoundingClientRect(),r=this.getBoundingClientRect();n!==t.body?(h.call(this,n,n.scrollLeft+r.left-a.left,n.scrollTop+r.top-a.top),"fixed"!==e.getComputedStyle(n).position&&e.scrollBy({left:a.left,top:a.top,behavior:"smooth"})):e.scrollBy({left:r.left,top:r.top,behavior:"smooth"})}else o.scrollIntoView.call(this,void 0===arguments[0]||arguments[0])}}function s(e,t){this.scrollLeft=e,this.scrollTop=t}function l(e){if(null===e||"object"!=typeof e||void 0===e.behavior||"auto"===e.behavior||"instant"===e.behavior)return!0;if("object"==typeof e&&"smooth"===e.behavior)return!1;throw new TypeError("behavior member of ScrollOptions "+e.behavior+" is not a valid value for enumeration ScrollBehavior.")}function c(e,t){return"Y"===t?e.clientHeight+i<e.scrollHeight:"X"===t?e.clientWidth+i<e.scrollWidth:void 0}function u(t,n){var a=e.getComputedStyle(t,null)["overflow"+n];return"auto"===a||"scroll"===a}function d(e){var t=c(e,"Y")&&u(e,"Y"),n=c(e,"X")&&u(e,"X");return t||n}function p(e){for(;e!==t.body&&!1===d(e);)e=e.parentNode||e.host;return e}function m(t){var n,a,o,i,s=(r()-t.startTime)/468;i=s=s>1?1:s,n=.5*(1-Math.cos(Math.PI*i)),a=t.startX+(t.x-t.startX)*n,o=t.startY+(t.y-t.startY)*n,t.method.call(t.scrollable,a,o),a===t.x&&o===t.y||e.requestAnimationFrame(m.bind(e,t))}function h(n,a,i){var l,c,u,d,p=r();n===t.body?(l=e,c=e.scrollX||e.pageXOffset,u=e.scrollY||e.pageYOffset,d=o.scroll):(l=n,c=n.scrollLeft,u=n.scrollTop,d=s),m({scrollable:l,method:d,startTime:p,startX:c,startY:u,x:a,y:i})}}}}()},function(e,t){var n=/^\s+|\s+$/g,a=/^[-+]0x[0-9a-f]+$/i,o=/^0b[01]+$/i,r=/^0o[0-7]+$/i,i=parseInt,s="object"==typeof global&&global&&global.Object===Object&&global,l="object"==typeof self&&self&&self.Object===Object&&self,c=s||l||Function("return this")(),u=Object.prototype.toString,d=Math.max,p=Math.min,m=function(){return c.Date.now()};function h(e){var t=typeof e;return!!e&&("object"==t||"function"==t)}function g(e){if("number"==typeof e)return e;if(function(e){return"symbol"==typeof e||function(e){return!!e&&"object"==typeof e}(e)&&"[object Symbol]"==u.call(e)}(e))return NaN;if(h(e)){var t="function"==typeof e.valueOf?e.valueOf():e;e=h(t)?t+"":t}if("string"!=typeof e)return 0===e?e:+e;e=e.replace(n,"");var s=o.test(e);return s||r.test(e)?i(e.slice(2),s?2:8):a.test(e)?NaN:+e}e.exports=function(e,t,n){var a,o,r,i,s,l,c=0,u=!1,f=!1,y=!0;if("function"!=typeof e)throw new TypeError("Expected a function");function w(t){var n=a,r=o;return a=o=void 0,c=t,i=e.apply(r,n)}function v(e){return c=e,s=setTimeout(k,t),u?w(e):i}function b(e){var n=e-l;return void 0===l||n>=t||n<0||f&&e-c>=r}function k(){var e=m();if(b(e))return x(e);s=setTimeout(k,function(e){var n=t-(e-l);return f?p(n,r-(e-c)):n}(e))}function x(e){return s=void 0,y&&a?w(e):(a=o=void 0,i)}function T(){var e=m(),n=b(e);if(a=arguments,o=this,l=e,n){if(void 0===s)return v(l);if(f)return s=setTimeout(k,t),w(l)}return void 0===s&&(s=setTimeout(k,t)),i}return t=g(t)||0,h(n)&&(u=!!n.leading,r=(f="maxWait"in n)?d(g(n.maxWait)||0,t):r,y="trailing"in n?!!n.trailing:y),T.cancel=function(){void 0!==s&&clearTimeout(s),c=0,a=l=o=s=void 0},T.flush=function(){return void 0===s?i:x(m())},T}},function(e,t,n){var a=n(2),o=n(15),r=Date.prototype,i=a(r.toString),s=a(r.getTime);"Invalid Date"!=String(new Date(NaN))&&o(r,"toString",(function(){var e=s(this);return e==e?i(this):"Invalid Date"}))},function(e,t,n){"use strict";var a=n(1),o=n(2),r=n(33),i=n(16),s=n(22),l=n(13),c=n(3),u=n(224),d=n(40),p=n(369),m=n(370),h=n(44),g=n(371),f=[],y=o(f.sort),w=o(f.push),v=c((function(){f.sort(void 0)})),b=c((function(){f.sort(null)})),k=d("sort"),x=!c((function(){if(h)return h<70;if(!(p&&p>3)){if(m)return!0;if(g)return g<603;var e,t,n,a,o="";for(e=65;e<76;e++){switch(t=String.fromCharCode(e),e){case 66:case 69:case 70:case 72:n=3;break;case 68:case 71:n=4;break;default:n=2}for(a=0;a<47;a++)f.push({k:t+a,v:n})}for(f.sort((function(e,t){return t.v-e.v})),a=0;a<f.length;a++)t=f[a].k.charAt(0),o.charAt(o.length-1)!==t&&(o+=t);return"DGBEFHACIJK"!==o}}));a({target:"Array",proto:!0,forced:v||!b||!k||!x},{sort:function(e){void 0!==e&&r(e);var t=i(this);if(x)return void 0===e?y(t):y(t,e);var n,a,o=[],c=s(t);for(a=0;a<c;a++)a in t&&w(o,t[a]);for(u(o,function(e){return function(t,n){return void 0===n?-1:void 0===t?1:void 0!==e?+e(t,n)||0:l(t)>l(n)?1:-1}}(e)),n=o.length,a=0;a<n;)t[a]=o[a++];for(;a<c;)delete t[a++];return t}})},function(e,t,n){"use strict";var a=n(30),o=n(12),r=n(2),i=n(134),s=n(169),l=n(10),c=n(20),u=n(111),d=n(141),p=n(49),m=n(13),h=n(45),g=n(115),f=n(135),y=n(83),w=n(176),v=n(3),b=w.UNSUPPORTED_Y,k=Math.min,x=[].push,T=r(/./.exec),M=r(x),I=r("".slice);i("split",(function(e,t,n){var r;return r="c"=="abbc".split(/(b)*/)[1]||4!="test".split(/(?:)/,-1).length||2!="ab".split(/(?:ab)*/).length||4!=".".split(/(.?)(.?)/).length||".".split(/()()/).length>1||"".split(/.?/).length?function(e,n){var r=m(c(this)),i=void 0===n?4294967295:n>>>0;if(0===i)return[];if(void 0===e)return[r];if(!s(e))return o(t,r,e,i);for(var l,u,d,p=[],h=(e.ignoreCase?"i":"")+(e.multiline?"m":"")+(e.unicode?"u":"")+(e.sticky?"y":""),f=0,w=new RegExp(e.source,h+"g");(l=o(y,w,r))&&!((u=w.lastIndex)>f&&(M(p,I(r,f,l.index)),l.length>1&&l.index<r.length&&a(x,p,g(l,1)),d=l[0].length,f=u,p.length>=i));)w.lastIndex===l.index&&w.lastIndex++;return f===r.length?!d&&T(w,"")||M(p,""):M(p,I(r,f)),p.length>i?g(p,0,i):p}:"0".split(void 0,0).length?function(e,n){return void 0===e&&0===n?[]:o(t,this,e,n)}:t,[function(t,n){var a=c(this),i=null==t?void 0:h(t,e);return i?o(i,t,a,n):o(r,m(a),t,n)},function(e,a){var o=l(this),i=m(e),s=n(r,o,i,a,r!==t);if(s.done)return s.value;var c=u(o,RegExp),h=o.unicode,g=(o.ignoreCase?"i":"")+(o.multiline?"m":"")+(o.unicode?"u":"")+(b?"g":"y"),y=new c(b?"^(?:"+o.source+")":o,g),w=void 0===a?4294967295:a>>>0;if(0===w)return[];if(0===i.length)return null===f(y,i)?[i]:[];for(var v=0,x=0,T=[];x<i.length;){y.lastIndex=b?0:x;var j,D=f(y,b?I(i,x):i);if(null===D||(j=k(p(y.lastIndex+(b?x:0)),i.length))===v)x=d(i,x,h);else{if(M(T,I(i,v,x)),T.length===w)return T;for(var z=1;z<=D.length-1;z++)if(M(T,D[z]),T.length===w)return T;x=v=j}}return M(T,I(i,v)),T}]}),!!v((function(){var e=/(?:)/,t=e.exec;e.exec=function(){return t.apply(this,arguments)};var n="ab".split(e);return 2!==n.length||"a"!==n[0]||"b"!==n[1]})),b)},function(e,t,n){"use strict";var a=n(1),o=n(2),r=n(103).indexOf,i=n(40),s=o([].indexOf),l=!!s&&1/s([1],1,-0)<0,c=i("indexOf");a({target:"Array",proto:!0,forced:l||!c},{indexOf:function(e){var t=arguments.length>1?arguments[1]:void 0;return l?s(this,e,t)||0:r(this,e,t)}})},function(e,t,n){"use strict";var a=n(1),o=n(103).includes,r=n(131);a({target:"Array",proto:!0},{includes:function(e){return o(this,e,arguments.length>1?arguments[1]:void 0)}}),r("includes")},function(e,t,n){"use strict";var a=n(1),o=n(2),r=n(53),i=n(18),s=n(40),l=o([].join),c=r!=Object,u=s("join",",");a({target:"Array",proto:!0,forced:c||!u},{join:function(e){return l(i(this),void 0===e?",":e)}})},function(e,t,n){"use strict";var a=n(1),o=n(48).some;a({target:"Array",proto:!0,forced:!n(40)("some")},{some:function(e){return o(this,e,arguments.length>1?arguments[1]:void 0)}})},function(e,t,n){"use strict";var a=n(153).IteratorPrototype,o=n(29),r=n(42),i=n(50),s=n(56),l=function(){return this};e.exports=function(e,t,n,c){var u=t+" Iterator";return e.prototype=o(a,{next:r(+!c,n)}),i(e,u,!1,!0),s[u]=l,e}},function(e,t,n){var a=n(15);e.exports=function(e,t,n){for(var o in t)a(e,o,t[o],n);return e}},function(e,t,n){var a=n(0),o=n(35),r=a.TypeError;e.exports=function(e,t){if(o(t,e))return e;throw r("Incorrect invocation")}},function(e,t,n){"use strict";var a=n(10);e.exports=function(){var e=a(this),t="";return e.global&&(t+="g"),e.ignoreCase&&(t+="i"),e.multiline&&(t+="m"),e.dotAll&&(t+="s"),e.unicode&&(t+="u"),e.sticky&&(t+="y"),t}},function(e,t,n){"use strict";var a=n(1),o=n(2),r=n(113),i=n(20),s=n(13),l=n(114),c=o("".indexOf);a({target:"String",proto:!0,forced:!l("includes")},{includes:function(e){return!!~c(s(i(this)),s(r(e)),arguments.length>1?arguments[1]:void 0)}})},function(e,t,n){var a=n(115),o=Math.floor,r=function(e,t){var n=e.length,l=o(n/2);return n<8?i(e,t):s(e,r(a(e,0,l),t),r(a(e,l),t),t)},i=function(e,t){for(var n,a,o=e.length,r=1;r<o;){for(a=r,n=e[r];a&&t(e[a-1],n)>0;)e[a]=e[--a];a!==r++&&(e[a]=n)}return e},s=function(e,t,n,a){for(var o=t.length,r=n.length,i=0,s=0;i<o||s<r;)e[i+s]=i<o&&s<r?a(t[i],n[s])<=0?t[i++]:n[s++]:i<o?t[i++]:n[s++];return e};e.exports=r},function(e,t,n){e.exports=n(377)},function(e,t,n){var a=n(0),o=n(12),r=n(5),i=n(7),s=a.TypeError;e.exports=function(e,t){var n,a;if("string"===t&&r(n=e.toString)&&!i(a=o(n,e)))return a;if(r(n=e.valueOf)&&!i(a=o(n,e)))return a;if("string"!==t&&r(n=e.toString)&&!i(a=o(n,e)))return a;throw s("Can't convert object to primitive value")}},function(e,t,n){var a=n(0),o=n(5),r=n(78),i=a.WeakMap;e.exports=o(i)&&/native code/.test(r(i))},function(e,t,n){var a=n(0),o=n(5),r=a.String,i=a.TypeError;e.exports=function(e){if("object"==typeof e||o(e))return e;throw i("Can't set "+r(e)+" as a prototype")}},function(e,t,n){"use strict";var a,o,r,i,s=n(1),l=n(21),c=n(0),u=n(17),d=n(12),p=n(155),m=n(15),h=n(220),g=n(58),f=n(50),y=n(230),w=n(33),v=n(5),b=n(7),k=n(221),x=n(78),T=n(231),M=n(158),I=n(111),j=n(160).set,D=n(232),z=n(162),S=n(235),C=n(163),A=n(236),E=n(237),L=n(41),_=n(108),N=n(6),O=n(238),P=n(80),K=n(44),q=N("species"),R="Promise",U=L.getterFor(R),W=L.set,F=L.getterFor(R),Y=p&&p.prototype,B=p,G=Y,Z=c.TypeError,H=c.document,Q=c.process,$=C.f,J=$,V=!!(H&&H.createEvent&&c.dispatchEvent),X=v(c.PromiseRejectionEvent),ee=!1,te=_(R,(function(){var e=x(B),t=e!==String(B);if(!t&&66===K)return!0;if(l&&!G.finally)return!0;if(K>=51&&/native code/.test(e))return!1;var n=new B((function(e){e(1)})),a=function(e){e((function(){}),(function(){}))};return(n.constructor={})[q]=a,!(ee=n.then((function(){}))instanceof a)||!t&&O&&!X})),ne=te||!M((function(e){B.all(e).catch((function(){}))})),ae=function(e){var t;return!(!b(e)||!v(t=e.then))&&t},oe=function(e,t){var n,a,o,r=t.value,i=1==t.state,s=i?e.ok:e.fail,l=e.resolve,c=e.reject,u=e.domain;try{s?(i||(2===t.rejection&&ce(t),t.rejection=1),!0===s?n=r:(u&&u.enter(),n=s(r),u&&(u.exit(),o=!0)),n===e.promise?c(Z("Promise-chain cycle")):(a=ae(n))?d(a,n,l,c):l(n)):c(r)}catch(e){u&&!o&&u.exit(),c(e)}},re=function(e,t){e.notified||(e.notified=!0,D((function(){for(var n,a=e.reactions;n=a.get();)oe(n,e);e.notified=!1,t&&!e.rejection&&se(e)})))},ie=function(e,t,n){var a,o;V?((a=H.createEvent("Event")).promise=t,a.reason=n,a.initEvent(e,!1,!0),c.dispatchEvent(a)):a={promise:t,reason:n},!X&&(o=c["on"+e])?o(a):"unhandledrejection"===e&&S("Unhandled promise rejection",n)},se=function(e){d(j,c,(function(){var t,n=e.facade,a=e.value;if(le(e)&&(t=A((function(){P?Q.emit("unhandledRejection",a,n):ie("unhandledrejection",n,a)})),e.rejection=P||le(e)?2:1,t.error))throw t.value}))},le=function(e){return 1!==e.rejection&&!e.parent},ce=function(e){d(j,c,(function(){var t=e.facade;P?Q.emit("rejectionHandled",t):ie("rejectionhandled",t,e.value)}))},ue=function(e,t,n){return function(a){e(t,a,n)}},de=function(e,t,n){e.done||(e.done=!0,n&&(e=n),e.value=t,e.state=2,re(e,!0))},pe=function(e,t,n){if(!e.done){e.done=!0,n&&(e=n);try{if(e.facade===t)throw Z("Promise can't be resolved itself");var a=ae(t);a?D((function(){var n={done:!1};try{d(a,t,ue(pe,n,e),ue(de,n,e))}catch(t){de(n,t,e)}})):(e.value=t,e.state=1,re(e,!1))}catch(t){de({done:!1},t,e)}}};if(te&&(G=(B=function(e){k(this,G),w(e),d(a,this);var t=U(this);try{e(ue(pe,t),ue(de,t))}catch(e){de(t,e)}}).prototype,(a=function(e){W(this,{type:R,done:!1,notified:!1,parent:!1,reactions:new E,rejection:!1,state:0,value:void 0})}).prototype=h(G,{then:function(e,t){var n=F(this),a=$(I(this,B));return n.parent=!0,a.ok=!v(e)||e,a.fail=v(t)&&t,a.domain=P?Q.domain:void 0,0==n.state?n.reactions.add(a):D((function(){oe(a,n)})),a.promise},catch:function(e){return this.then(void 0,e)}}),o=function(){var e=new a,t=U(e);this.promise=e,this.resolve=ue(pe,t),this.reject=ue(de,t)},C.f=$=function(e){return e===B||e===r?new o(e):J(e)},!l&&v(p)&&Y!==Object.prototype)){i=Y.then,ee||(m(Y,"then",(function(e,t){var n=this;return new B((function(e,t){d(i,n,e,t)})).then(e,t)}),{unsafe:!0}),m(Y,"catch",G.catch,{unsafe:!0}));try{delete Y.constructor}catch(e){}g&&g(Y,G)}s({global:!0,wrap:!0,forced:te},{Promise:B}),f(B,R,!1,!0),y(R),r=u(R),s({target:R,stat:!0,forced:te},{reject:function(e){var t=$(this);return d(t.reject,void 0,e),t.promise}}),s({target:R,stat:!0,forced:l||te},{resolve:function(e){return z(l&&this===r?B:this,e)}}),s({target:R,stat:!0,forced:ne},{all:function(e){var t=this,n=$(t),a=n.resolve,o=n.reject,r=A((function(){var n=w(t.resolve),r=[],i=0,s=1;T(e,(function(e){var l=i++,c=!1;s++,d(n,t,e).then((function(e){c||(c=!0,r[l]=e,--s||a(r))}),o)})),--s||a(r)}));return r.error&&o(r.value),n.promise},race:function(e){var t=this,n=$(t),a=n.reject,o=A((function(){var o=w(t.resolve);T(e,(function(e){d(o,t,e).then(n.resolve,a)}))}));return o.error&&a(o.value),n.promise}})},function(e,t,n){"use strict";var a=n(17),o=n(14),r=n(6),i=n(8),s=r("species");e.exports=function(e){var t=a(e),n=o.f;i&&t&&!t[s]&&n(t,s,{configurable:!0,get:function(){return this}})}},function(e,t,n){var a=n(0),o=n(47),r=n(12),i=n(10),s=n(76),l=n(156),c=n(22),u=n(35),d=n(138),p=n(97),m=n(157),h=a.TypeError,g=function(e,t){this.stopped=e,this.result=t},f=g.prototype;e.exports=function(e,t,n){var a,y,w,v,b,k,x,T=n&&n.that,M=!(!n||!n.AS_ENTRIES),I=!(!n||!n.IS_ITERATOR),j=!(!n||!n.INTERRUPTED),D=o(t,T),z=function(e){return a&&m(a,"normal",e),new g(!0,e)},S=function(e){return M?(i(e),j?D(e[0],e[1],z):D(e[0],e[1])):j?D(e,z):D(e)};if(I)a=e;else{if(!(y=p(e)))throw h(s(e)+" is not iterable");if(l(y)){for(w=0,v=c(e);v>w;w++)if((b=S(e[w]))&&u(f,b))return b;return new g(!1)}a=d(e,y)}for(k=a.next;!(x=r(k,a)).done;){try{b=S(x.value)}catch(e){m(a,"throw",e)}if("object"==typeof b&&b&&u(f,b))return b}return new g(!1)}},function(e,t,n){var a,o,r,i,s,l,c,u,d=n(0),p=n(47),m=n(26).f,h=n(160).set,g=n(161),f=n(233),y=n(234),w=n(80),v=d.MutationObserver||d.WebKitMutationObserver,b=d.document,k=d.process,x=d.Promise,T=m(d,"queueMicrotask"),M=T&&T.value;M||(a=function(){var e,t;for(w&&(e=k.domain)&&e.exit();o;){t=o.fn,o=o.next;try{t()}catch(e){throw o?i():r=void 0,e}}r=void 0,e&&e.enter()},g||w||y||!v||!b?!f&&x&&x.resolve?((c=x.resolve(void 0)).constructor=x,u=p(c.then,c),i=function(){u(a)}):w?i=function(){k.nextTick(a)}:(h=p(h,d),i=function(){h(a)}):(s=!0,l=b.createTextNode(""),new v(a).observe(l,{characterData:!0}),i=function(){l.data=s=!s})),e.exports=M||function(e){var t={fn:e,next:void 0};r&&(r.next=t),o||(o=t,i()),r=t}},function(e,t,n){var a=n(32),o=n(0);e.exports=/ipad|iphone|ipod/i.test(a)&&void 0!==o.Pebble},function(e,t,n){var a=n(32);e.exports=/web0s(?!.*chrome)/i.test(a)},function(e,t,n){var a=n(0);e.exports=function(e,t){var n=a.console;n&&n.error&&(1==arguments.length?n.error(e):n.error(e,t))}},function(e,t){e.exports=function(e){try{return{error:!1,value:e()}}catch(e){return{error:!0,value:e}}}},function(e,t){var n=function(){this.head=null,this.tail=null};n.prototype={add:function(e){var t={item:e,next:null};this.head?this.tail.next=t:this.head=t,this.tail=t},get:function(){var e=this.head;if(e)return this.head=e.next,this.tail===e&&(this.tail=null),e.item}},e.exports=n},function(e,t){e.exports="object"==typeof window},function(e,t,n){var a=n(1),o=n(240);a({target:"Object",stat:!0,forced:Object.assign!==o},{assign:o})},function(e,t,n){"use strict";var a=n(8),o=n(2),r=n(12),i=n(3),s=n(68),l=n(107),c=n(96),u=n(16),d=n(53),p=Object.assign,m=Object.defineProperty,h=o([].concat);e.exports=!p||i((function(){if(a&&1!==p({b:1},p(m({},"a",{enumerable:!0,get:function(){m(this,"b",{value:3,enumerable:!1})}}),{b:2})).b)return!0;var e={},t={},n=Symbol();return e[n]=7,"abcdefghijklmnopqrst".split("").forEach((function(e){t[e]=e})),7!=p({},e)[n]||"abcdefghijklmnopqrst"!=s(p({},t)).join("")}))?function(e,t){for(var n=u(e),o=arguments.length,i=1,p=l.f,m=c.f;o>i;)for(var g,f=d(arguments[i++]),y=p?h(s(f),p(f)):s(f),w=y.length,v=0;w>v;)g=y[v++],a&&!r(m,f,g)||(n[g]=f[g]);return n}:p},function(e,t,n){"use strict";var a=n(1),o=n(21),r=n(155),i=n(3),s=n(17),l=n(5),c=n(111),u=n(162),d=n(15);if(a({target:"Promise",proto:!0,real:!0,forced:!!r&&i((function(){r.prototype.finally.call({then:function(){}},(function(){}))}))},{finally:function(e){var t=c(this,s("Promise")),n=l(e);return this.then(n?function(n){return u(t,e()).then((function(){return n}))}:e,n?function(n){return u(t,e()).then((function(){throw n}))}:e)}}),!o&&l(r)){var p=s("Promise").prototype.finally;r.prototype.finally!==p&&d(r.prototype,"finally",p,{unsafe:!0})}},function(e,t,n){"use strict";var a=n(110),o=n(69);e.exports=a?{}.toString:function(){return"[object "+o(this)+"]"}},function(e,t,n){var a=n(0),o=n(51),r=n(79),i=n(7),s=n(6)("species"),l=a.Array;e.exports=function(e){var t;return o(e)&&(t=e.constructor,(r(t)&&(t===l||o(t.prototype))||i(t)&&null===(t=t[s]))&&(t=void 0)),void 0===t?l:t}},function(e,t,n){"use strict";var a=n(1),o=n(245).left,r=n(40),i=n(44),s=n(80);a({target:"Array",proto:!0,forced:!r("reduce")||!s&&i>79&&i<83},{reduce:function(e){var t=arguments.length;return o(this,e,t,t>1?arguments[1]:void 0)}})},function(e,t,n){var a=n(0),o=n(33),r=n(16),i=n(53),s=n(22),l=a.TypeError,c=function(e){return function(t,n,a,c){o(n);var u=r(t),d=i(u),p=s(u),m=e?p-1:0,h=e?-1:1;if(a<2)for(;;){if(m in d){c=d[m],m+=h;break}if(m+=h,e?m<0:p<=m)throw l("Reduce of empty array with no initial value")}for(;e?m>=0:p>m;m+=h)m in d&&(c=n(c,d[m],m,u));return c}};e.exports={left:c(!1),right:c(!0)}},function(e,t,n){var a=n(1),o=n(171),r=n(3),i=n(7),s=n(247).onFreeze,l=Object.freeze;a({target:"Object",stat:!0,forced:r((function(){l(1)})),sham:!o},{freeze:function(e){return l&&i(e)?l(s(e)):e}})},function(e,t,n){var a=n(1),o=n(2),r=n(55),i=n(7),s=n(11),l=n(14).f,c=n(57),u=n(172),d=n(248),p=n(72),m=n(171),h=!1,g=p("meta"),f=0,y=function(e){l(e,g,{value:{objectID:"O"+f++,weakData:{}}})},w=e.exports={enable:function(){w.enable=function(){},h=!0;var e=c.f,t=o([].splice),n={};n[g]=1,e(n).length&&(c.f=function(n){for(var a=e(n),o=0,r=a.length;o<r;o++)if(a[o]===g){t(a,o,1);break}return a},a({target:"Object",stat:!0,forced:!0},{getOwnPropertyNames:u.f}))},fastKey:function(e,t){if(!i(e))return"symbol"==typeof e?e:("string"==typeof e?"S":"P")+e;if(!s(e,g)){if(!d(e))return"F";if(!t)return"E";y(e)}return e[g].objectID},getWeakData:function(e,t){if(!s(e,g)){if(!d(e))return!0;if(!t)return!1;y(e)}return e[g].weakData},onFreeze:function(e){return m&&h&&d(e)&&!s(e,g)&&y(e),e}};r[g]=!0},function(e,t,n){var a=n(3),o=n(7),r=n(31),i=n(249),s=Object.isExtensible,l=a((function(){s(1)}));e.exports=l||i?function(e){return!!o(e)&&((!i||"ArrayBuffer"!=r(e))&&(!s||s(e)))}:s},function(e,t,n){var a=n(3);e.exports=a((function(){if("function"==typeof ArrayBuffer){var e=new ArrayBuffer(8);Object.isExtensible(e)&&Object.defineProperty(e,"a",{value:8})}}))},function(e,t,n){var a=n(0);e.exports=a},function(e,t,n){"use strict";var a=n(0),o=n(47),r=n(12),i=n(16),s=n(252),l=n(156),c=n(79),u=n(22),d=n(60),p=n(138),m=n(97),h=a.Array;e.exports=function(e){var t=i(e),n=c(this),a=arguments.length,g=a>1?arguments[1]:void 0,f=void 0!==g;f&&(g=o(g,a>2?arguments[2]:void 0));var y,w,v,b,k,x,T=m(t),M=0;if(!T||this==h&&l(T))for(y=u(t),w=n?new this(y):h(y);y>M;M++)x=f?g(t[M],M):t[M],d(w,M,x);else for(k=(b=p(t,T)).next,w=n?new this:[];!(v=r(k,b)).done;M++)x=f?s(b,g,[v.value,M],!0):v.value,d(w,M,x);return w.length=M,w}},function(e,t,n){var a=n(10),o=n(157);e.exports=function(e,t,n,r){try{return r?t(a(n)[0],n[1]):t(n)}catch(t){o(e,"throw",t)}}},function(e,t,n){var a=n(3),o=n(0).RegExp;e.exports=a((function(){var e=o(".","s");return!(e.dotAll&&e.exec("\n")&&"s"===e.flags)}))},function(e,t,n){var a=n(3),o=n(0).RegExp;e.exports=a((function(){var e=o("(?<a>b)","g");return"b"!==e.exec("b").groups.a||"bc"!=="b".replace(e,"$<a>c")}))},function(e,t,n){"use strict";var a=n(17),o=n(11),r=n(25),i=n(35),s=n(58),l=n(106),c=n(177),u=n(178),d=n(256),p=n(257),m=n(258),h=n(21);e.exports=function(e,t,n,g){var f=g?2:1,y=e.split("."),w=y[y.length-1],v=a.apply(null,y);if(v){var b=v.prototype;if(!h&&o(b,"cause")&&delete b.cause,!n)return v;var k=a("Error"),x=t((function(e,t){var n=u(g?t:e,void 0),a=g?new v(e):new v;return void 0!==n&&r(a,"message",n),m&&r(a,"stack",p(a.stack,2)),this&&i(b,this)&&c(a,this,x),arguments.length>f&&d(a,arguments[f]),a}));if(x.prototype=b,"Error"!==w&&(s?s(x,k):l(x,k,{name:!0})),l(x,v),!h)try{b.name!==w&&r(b,"name",w),b.constructor=x}catch(e){}return x}}},function(e,t,n){var a=n(7),o=n(25);e.exports=function(e,t){a(t)&&"cause"in t&&o(e,"cause",t.cause)}},function(e,t,n){var a=n(2)("".replace),o=String(Error("zxcasd").stack),r=/\n\s*at [^:]*:[^\n]*/,i=r.test(o);e.exports=function(e,t){if(i&&"string"==typeof e)for(;t--;)e=a(e,r,"");return e}},function(e,t,n){var a=n(3),o=n(42);e.exports=!a((function(){var e=Error("a");return!("stack"in e)||(Object.defineProperty(e,"stack",o(1,7)),7!==e.stack)}))},function(e,t,n){"use strict";var a=n(8),o=n(3),r=n(10),i=n(29),s=n(178),l=Error.prototype.toString,c=o((function(){if(a){var e=i(Object.defineProperty({},"name",{get:function(){return this===e}}));if("true"!==l.call(e))return!0}return"2: 1"!==l.call({message:1,name:2})||"Error"!==l.call({})}));e.exports=c?function(){var e=r(this),t=s(e.name,"Error"),n=s(e.message);return t?n?t+": "+n:t:n}:l},function(e,t,n){var a=n(2),o=n(16),r=Math.floor,i=a("".charAt),s=a("".replace),l=a("".slice),c=/\$([$&'`]|\d{1,2}|<[^>]*>)/g,u=/\$([$&'`]|\d{1,2})/g;e.exports=function(e,t,n,a,d,p){var m=n+e.length,h=a.length,g=u;return void 0!==d&&(d=o(d),g=c),s(p,g,(function(o,s){var c;switch(i(s,0)){case"$":return"$";case"&":return e;case"`":return l(t,0,n);case"'":return l(t,m);case"<":c=d[l(s,1,-1)];break;default:var u=+s;if(0===u)return o;if(u>h){var p=r(u/10);return 0===p?o:p<=h?void 0===a[p-1]?i(s,1):a[p-1]+i(s,1):o}c=a[u-1]}return void 0===c?"":c}))}},function(e,t,n){var a=n(1),o=n(0),r=n(17),i=n(30),s=n(2),l=n(3),c=o.Array,u=r("JSON","stringify"),d=s(/./.exec),p=s("".charAt),m=s("".charCodeAt),h=s("".replace),g=s(1..toString),f=/[\uD800-\uDFFF]/g,y=/^[\uD800-\uDBFF]$/,w=/^[\uDC00-\uDFFF]$/,v=function(e,t,n){var a=p(n,t-1),o=p(n,t+1);return d(y,e)&&!d(w,o)||d(w,e)&&!d(y,a)?"\\u"+g(m(e,0),16):e},b=l((function(){return'"\\udf06\\ud834"'!==u("\udf06\ud834")||'"\\udead"'!==u("\udead")}));u&&a({target:"JSON",stat:!0,forced:b},{stringify:function(e,t,n){for(var a=0,o=arguments.length,r=c(o);a<o;a++)r[a]=arguments[a];var s=i(u,null,r);return"string"==typeof s?h(s,f,v):s}})},function(e,t,n){var a=n(180),o=n(263);e.exports=function e(t,n,r,i,s){var l=-1,c=t.length;for(r||(r=o),s||(s=[]);++l<c;){var u=t[l];n>0&&r(u)?n>1?e(u,n-1,r,i,s):a(s,u):i||(s[s.length]=u)}return s}},function(e,t,n){var a=n(62),o=n(117),r=n(24),i=a?a.isConcatSpreadable:void 0;e.exports=function(e){return r(e)||o(e)||!!(i&&e&&e[i])}},function(e,t,n){var a=n(52),o=n(43);e.exports=function(e){return o(e)&&"[object Arguments]"==a(e)}},function(e,t,n){var a=n(62),o=Object.prototype,r=o.hasOwnProperty,i=o.toString,s=a?a.toStringTag:void 0;e.exports=function(e){var t=r.call(e,s),n=e[s];try{e[s]=void 0;var a=!0}catch(e){}var o=i.call(e);return a&&(t?e[s]=n:delete e[s]),o}},function(e,t){var n=Object.prototype.toString;e.exports=function(e){return n.call(e)}},function(e,t,n){var a=n(268),o=n(324),r=n(125),i=n(24),s=n(335);e.exports=function(e){return"function"==typeof e?e:null==e?r:"object"==typeof e?i(e)?o(e[0],e[1]):a(e):s(e)}},function(e,t,n){var a=n(269),o=n(323),r=n(197);e.exports=function(e){var t=o(e);return 1==t.length&&t[0][2]?r(t[0][0],t[0][1]):function(n){return n===e||a(n,e,t)}}},function(e,t,n){var a=n(182),o=n(186);e.exports=function(e,t,n,r){var i=n.length,s=i,l=!r;if(null==e)return!s;for(e=Object(e);i--;){var c=n[i];if(l&&c[2]?c[1]!==e[c[0]]:!(c[0]in e))return!1}for(;++i<s;){var u=(c=n[i])[0],d=e[u],p=c[1];if(l&&c[2]){if(void 0===d&&!(u in e))return!1}else{var m=new a;if(r)var h=r(d,p,u,e,t,m);if(!(void 0===h?o(p,d,3,r,m):h))return!1}}return!0}},function(e,t){e.exports=function(){this.__data__=[],this.size=0}},function(e,t,n){var a=n(85),o=Array.prototype.splice;e.exports=function(e){var t=this.__data__,n=a(t,e);return!(n<0)&&(n==t.length-1?t.pop():o.call(t,n,1),--this.size,!0)}},function(e,t,n){var a=n(85);e.exports=function(e){var t=this.__data__,n=a(t,e);return n<0?void 0:t[n][1]}},function(e,t,n){var a=n(85);e.exports=function(e){return a(this.__data__,e)>-1}},function(e,t,n){var a=n(85);e.exports=function(e,t){var n=this.__data__,o=a(n,e);return o<0?(++this.size,n.push([e,t])):n[o][1]=t,this}},function(e,t,n){var a=n(84);e.exports=function(){this.__data__=new a,this.size=0}},function(e,t){e.exports=function(e){var t=this.__data__,n=t.delete(e);return this.size=t.size,n}},function(e,t){e.exports=function(e){return this.__data__.get(e)}},function(e,t){e.exports=function(e){return this.__data__.has(e)}},function(e,t,n){var a=n(84),o=n(118),r=n(120);e.exports=function(e,t){var n=this.__data__;if(n instanceof a){var i=n.__data__;if(!o||i.length<199)return i.push([e,t]),this.size=++n.size,this;n=this.__data__=new r(i)}return n.set(e,t),this.size=n.size,this}},function(e,t,n){var a=n(184),o=n(281),r=n(119),i=n(185),s=/^\[object .+?Constructor\]$/,l=Function.prototype,c=Object.prototype,u=l.toString,d=c.hasOwnProperty,p=RegExp("^"+u.call(d).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");e.exports=function(e){return!(!r(e)||o(e))&&(a(e)?p:s).test(i(e))}},function(e,t,n){var a,o=n(282),r=(a=/[^.]+$/.exec(o&&o.keys&&o.keys.IE_PROTO||""))?"Symbol(src)_1."+a:"";e.exports=function(e){return!!r&&r in e}},function(e,t,n){var a=n(27)["__core-js_shared__"];e.exports=a},function(e,t){e.exports=function(e,t){return null==e?void 0:e[t]}},function(e,t,n){var a=n(285),o=n(84),r=n(118);e.exports=function(){this.size=0,this.__data__={hash:new a,map:new(r||o),string:new a}}},function(e,t,n){var a=n(286),o=n(287),r=n(288),i=n(289),s=n(290);function l(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var a=e[t];this.set(a[0],a[1])}}l.prototype.clear=a,l.prototype.delete=o,l.prototype.get=r,l.prototype.has=i,l.prototype.set=s,e.exports=l},function(e,t,n){var a=n(86);e.exports=function(){this.__data__=a?a(null):{},this.size=0}},function(e,t){e.exports=function(e){var t=this.has(e)&&delete this.__data__[e];return this.size-=t?1:0,t}},function(e,t,n){var a=n(86),o=Object.prototype.hasOwnProperty;e.exports=function(e){var t=this.__data__;if(a){var n=t[e];return"__lodash_hash_undefined__"===n?void 0:n}return o.call(t,e)?t[e]:void 0}},function(e,t,n){var a=n(86),o=Object.prototype.hasOwnProperty;e.exports=function(e){var t=this.__data__;return a?void 0!==t[e]:o.call(t,e)}},function(e,t,n){var a=n(86);e.exports=function(e,t){var n=this.__data__;return this.size+=this.has(e)?0:1,n[e]=a&&void 0===t?"__lodash_hash_undefined__":t,this}},function(e,t,n){var a=n(87);e.exports=function(e){var t=a(this,e).delete(e);return this.size-=t?1:0,t}},function(e,t){e.exports=function(e){var t=typeof e;return"string"==t||"number"==t||"symbol"==t||"boolean"==t?"__proto__"!==e:null===e}},function(e,t,n){var a=n(87);e.exports=function(e){return a(this,e).get(e)}},function(e,t,n){var a=n(87);e.exports=function(e){return a(this,e).has(e)}},function(e,t,n){var a=n(87);e.exports=function(e,t){var n=a(this,e),o=n.size;return n.set(e,t),this.size+=n.size==o?0:1,this}},function(e,t,n){var a=n(182),o=n(187),r=n(300),i=n(303),s=n(319),l=n(24),c=n(191),u=n(193),d="[object Object]",p=Object.prototype.hasOwnProperty;e.exports=function(e,t,n,m,h,g){var f=l(e),y=l(t),w=f?"[object Array]":s(e),v=y?"[object Array]":s(t),b=(w="[object Arguments]"==w?d:w)==d,k=(v="[object Arguments]"==v?d:v)==d,x=w==v;if(x&&c(e)){if(!c(t))return!1;f=!0,b=!1}if(x&&!b)return g||(g=new a),f||u(e)?o(e,t,n,m,h,g):r(e,t,w,n,m,h,g);if(!(1&n)){var T=b&&p.call(e,"__wrapped__"),M=k&&p.call(t,"__wrapped__");if(T||M){var I=T?e.value():e,j=M?t.value():t;return g||(g=new a),h(I,j,n,m,g)}}return!!x&&(g||(g=new a),i(e,t,n,m,h,g))}},function(e,t){e.exports=function(e){return this.__data__.set(e,"__lodash_hash_undefined__"),this}},function(e,t){e.exports=function(e){return this.__data__.has(e)}},function(e,t){e.exports=function(e,t){for(var n=-1,a=null==e?0:e.length;++n<a;)if(t(e[n],n,e))return!0;return!1}},function(e,t,n){var a=n(62),o=n(301),r=n(183),i=n(187),s=n(302),l=n(121),c=a?a.prototype:void 0,u=c?c.valueOf:void 0;e.exports=function(e,t,n,a,c,d,p){switch(n){case"[object DataView]":if(e.byteLength!=t.byteLength||e.byteOffset!=t.byteOffset)return!1;e=e.buffer,t=t.buffer;case"[object ArrayBuffer]":return!(e.byteLength!=t.byteLength||!d(new o(e),new o(t)));case"[object Boolean]":case"[object Date]":case"[object Number]":return r(+e,+t);case"[object Error]":return e.name==t.name&&e.message==t.message;case"[object RegExp]":case"[object String]":return e==t+"";case"[object Map]":var m=s;case"[object Set]":var h=1&a;if(m||(m=l),e.size!=t.size&&!h)return!1;var g=p.get(e);if(g)return g==t;a|=2,p.set(e,t);var f=i(m(e),m(t),a,c,d,p);return p.delete(e),f;case"[object Symbol]":if(u)return u.call(e)==u.call(t)}return!1}},function(e,t,n){var a=n(27).Uint8Array;e.exports=a},function(e,t){e.exports=function(e){var t=-1,n=Array(e.size);return e.forEach((function(e,a){n[++t]=[a,e]})),n}},function(e,t,n){var a=n(304),o=Object.prototype.hasOwnProperty;e.exports=function(e,t,n,r,i,s){var l=1&n,c=a(e),u=c.length;if(u!=a(t).length&&!l)return!1;for(var d=u;d--;){var p=c[d];if(!(l?p in t:o.call(t,p)))return!1}var m=s.get(e),h=s.get(t);if(m&&h)return m==t&&h==e;var g=!0;s.set(e,t),s.set(t,e);for(var f=l;++d<u;){var y=e[p=c[d]],w=t[p];if(r)var v=l?r(w,y,p,t,e,s):r(y,w,p,e,t,s);if(!(void 0===v?y===w||i(y,w,n,r,s):v)){g=!1;break}f||(f="constructor"==p)}if(g&&!f){var b=e.constructor,k=t.constructor;b==k||!("constructor"in e)||!("constructor"in t)||"function"==typeof b&&b instanceof b&&"function"==typeof k&&k instanceof k||(g=!1)}return s.delete(e),s.delete(t),g}},function(e,t,n){var a=n(305),o=n(306),r=n(190);e.exports=function(e){return a(e,r,o)}},function(e,t,n){var a=n(180),o=n(24);e.exports=function(e,t,n){var r=t(e);return o(e)?r:a(r,n(e))}},function(e,t,n){var a=n(307),o=n(308),r=Object.prototype.propertyIsEnumerable,i=Object.getOwnPropertySymbols,s=i?function(e){return null==e?[]:(e=Object(e),a(i(e),(function(t){return r.call(e,t)})))}:o;e.exports=s},function(e,t){e.exports=function(e,t){for(var n=-1,a=null==e?0:e.length,o=0,r=[];++n<a;){var i=e[n];t(i,n,e)&&(r[o++]=i)}return r}},function(e,t){e.exports=function(){return[]}},function(e,t,n){var a=n(310),o=n(117),r=n(24),i=n(191),s=n(192),l=n(193),c=Object.prototype.hasOwnProperty;e.exports=function(e,t){var n=r(e),u=!n&&o(e),d=!n&&!u&&i(e),p=!n&&!u&&!d&&l(e),m=n||u||d||p,h=m?a(e.length,String):[],g=h.length;for(var f in e)!t&&!c.call(e,f)||m&&("length"==f||d&&("offset"==f||"parent"==f)||p&&("buffer"==f||"byteLength"==f||"byteOffset"==f)||s(f,g))||h.push(f);return h}},function(e,t){e.exports=function(e,t){for(var n=-1,a=Array(e);++n<e;)a[n]=t(n);return a}},function(e,t){e.exports=function(){return!1}},function(e,t,n){var a=n(52),o=n(122),r=n(43),i={};i["[object Float32Array]"]=i["[object Float64Array]"]=i["[object Int8Array]"]=i["[object Int16Array]"]=i["[object Int32Array]"]=i["[object Uint8Array]"]=i["[object Uint8ClampedArray]"]=i["[object Uint16Array]"]=i["[object Uint32Array]"]=!0,i["[object Arguments]"]=i["[object Array]"]=i["[object ArrayBuffer]"]=i["[object Boolean]"]=i["[object DataView]"]=i["[object Date]"]=i["[object Error]"]=i["[object Function]"]=i["[object Map]"]=i["[object Number]"]=i["[object Object]"]=i["[object RegExp]"]=i["[object Set]"]=i["[object String]"]=i["[object WeakMap]"]=!1,e.exports=function(e){return r(e)&&o(e.length)&&!!i[a(e)]}},function(e,t){e.exports=function(e){return function(t){return e(t)}}},function(e,t,n){(function(e){var a=n(181),o=t&&!t.nodeType&&t,r=o&&"object"==typeof e&&e&&!e.nodeType&&e,i=r&&r.exports===o&&a.process,s=function(){try{var e=r&&r.require&&r.require("util").types;return e||i&&i.binding&&i.binding("util")}catch(e){}}();e.exports=s}).call(this,n(142)(e))},function(e,t,n){var a=n(316),o=n(317),r=Object.prototype.hasOwnProperty;e.exports=function(e){if(!a(e))return o(e);var t=[];for(var n in Object(e))r.call(e,n)&&"constructor"!=n&&t.push(n);return t}},function(e,t){var n=Object.prototype;e.exports=function(e){var t=e&&e.constructor;return e===("function"==typeof t&&t.prototype||n)}},function(e,t,n){var a=n(318)(Object.keys,Object);e.exports=a},function(e,t){e.exports=function(e,t){return function(n){return e(t(n))}}},function(e,t,n){var a=n(320),o=n(118),r=n(321),i=n(195),s=n(322),l=n(52),c=n(185),u=c(a),d=c(o),p=c(r),m=c(i),h=c(s),g=l;(a&&"[object DataView]"!=g(new a(new ArrayBuffer(1)))||o&&"[object Map]"!=g(new o)||r&&"[object Promise]"!=g(r.resolve())||i&&"[object Set]"!=g(new i)||s&&"[object WeakMap]"!=g(new s))&&(g=function(e){var t=l(e),n="[object Object]"==t?e.constructor:void 0,a=n?c(n):"";if(a)switch(a){case u:return"[object DataView]";case d:return"[object Map]";case p:return"[object Promise]";case m:return"[object Set]";case h:return"[object WeakMap]"}return t}),e.exports=g},function(e,t,n){var a=n(38)(n(27),"DataView");e.exports=a},function(e,t,n){var a=n(38)(n(27),"Promise");e.exports=a},function(e,t,n){var a=n(38)(n(27),"WeakMap");e.exports=a},function(e,t,n){var a=n(196),o=n(190);e.exports=function(e){for(var t=o(e),n=t.length;n--;){var r=t[n],i=e[r];t[n]=[r,i,a(i)]}return t}},function(e,t,n){var a=n(186),o=n(325),r=n(332),i=n(123),s=n(196),l=n(197),c=n(88);e.exports=function(e,t){return i(e)&&s(t)?l(c(e),t):function(n){var i=o(n,e);return void 0===i&&i===t?r(n,e):a(t,i,3)}}},function(e,t,n){var a=n(198);e.exports=function(e,t,n){var o=null==e?void 0:a(e,t);return void 0===o?n:o}},function(e,t,n){var a=n(327),o=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,r=/\\(\\)?/g,i=a((function(e){var t=[];return 46===e.charCodeAt(0)&&t.push(""),e.replace(o,(function(e,n,a,o){t.push(a?o.replace(r,"$1"):n||e)})),t}));e.exports=i},function(e,t,n){var a=n(328);e.exports=function(e){var t=a(e,(function(e){return 500===n.size&&n.clear(),e})),n=t.cache;return t}},function(e,t,n){var a=n(120);function o(e,t){if("function"!=typeof e||null!=t&&"function"!=typeof t)throw new TypeError("Expected a function");var n=function(){var a=arguments,o=t?t.apply(this,a):a[0],r=n.cache;if(r.has(o))return r.get(o);var i=e.apply(this,a);return n.cache=r.set(o,i)||r,i};return n.cache=new(o.Cache||a),n}o.Cache=a,e.exports=o},function(e,t,n){var a=n(330);e.exports=function(e){return null==e?"":a(e)}},function(e,t,n){var a=n(62),o=n(331),r=n(24),i=n(124),s=a?a.prototype:void 0,l=s?s.toString:void 0;e.exports=function e(t){if("string"==typeof t)return t;if(r(t))return o(t,e)+"";if(i(t))return l?l.call(t):"";var n=t+"";return"0"==n&&1/t==-1/0?"-0":n}},function(e,t){e.exports=function(e,t){for(var n=-1,a=null==e?0:e.length,o=Array(a);++n<a;)o[n]=t(e[n],n,e);return o}},function(e,t,n){var a=n(333),o=n(334);e.exports=function(e,t){return null!=e&&o(e,t,a)}},function(e,t){e.exports=function(e,t){return null!=e&&t in Object(e)}},function(e,t,n){var a=n(199),o=n(117),r=n(24),i=n(192),s=n(122),l=n(88);e.exports=function(e,t,n){for(var c=-1,u=(t=a(t,e)).length,d=!1;++c<u;){var p=l(t[c]);if(!(d=null!=e&&n(e,p)))break;e=e[p]}return d||++c!=u?d:!!(u=null==e?0:e.length)&&s(u)&&i(p,u)&&(r(e)||o(e))}},function(e,t,n){var a=n(336),o=n(337),r=n(123),i=n(88);e.exports=function(e){return r(e)?a(i(e)):o(e)}},function(e,t){e.exports=function(e){return function(t){return null==t?void 0:t[e]}}},function(e,t,n){var a=n(198);e.exports=function(e){return function(t){return a(t,e)}}},function(e,t,n){var a=n(125),o=n(339),r=n(341);e.exports=function(e,t){return r(o(e,t,a),e+"")}},function(e,t,n){var a=n(340),o=Math.max;e.exports=function(e,t,n){return t=o(void 0===t?e.length-1:t,0),function(){for(var r=arguments,i=-1,s=o(r.length-t,0),l=Array(s);++i<s;)l[i]=r[t+i];i=-1;for(var c=Array(t+1);++i<t;)c[i]=r[i];return c[t]=n(l),a(e,this,c)}}},function(e,t){e.exports=function(e,t,n){switch(n.length){case 0:return e.call(t);case 1:return e.call(t,n[0]);case 2:return e.call(t,n[0],n[1]);case 3:return e.call(t,n[0],n[1],n[2])}return e.apply(t,n)}},function(e,t,n){var a=n(342),o=n(345)(a);e.exports=o},function(e,t,n){var a=n(343),o=n(344),r=n(125),i=o?function(e,t){return o(e,"toString",{configurable:!0,enumerable:!1,value:a(t),writable:!0})}:r;e.exports=i},function(e,t){e.exports=function(e){return function(){return e}}},function(e,t,n){var a=n(38),o=function(){try{var e=a(Object,"defineProperty");return e({},"",{}),e}catch(e){}}();e.exports=o},function(e,t){var n=Date.now;e.exports=function(e){var t=0,a=0;return function(){var o=n(),r=16-(o-a);if(a=o,r>0){if(++t>=800)return arguments[0]}else t=0;return e.apply(void 0,arguments)}}},function(e,t,n){var a=n(188),o=n(347),r=n(352),i=n(189),s=n(353),l=n(121);e.exports=function(e,t,n){var c=-1,u=o,d=e.length,p=!0,m=[],h=m;if(n)p=!1,u=r;else if(d>=200){var g=t?null:s(e);if(g)return l(g);p=!1,u=i,h=new a}else h=t?[]:m;e:for(;++c<d;){var f=e[c],y=t?t(f):f;if(f=n||0!==f?f:0,p&&y==y){for(var w=h.length;w--;)if(h[w]===y)continue e;t&&h.push(y),m.push(f)}else u(h,y,n)||(h!==m&&h.push(y),m.push(f))}return m}},function(e,t,n){var a=n(348);e.exports=function(e,t){return!!(null==e?0:e.length)&&a(e,t,0)>-1}},function(e,t,n){var a=n(349),o=n(350),r=n(351);e.exports=function(e,t,n){return t==t?r(e,t,n):a(e,o,n)}},function(e,t){e.exports=function(e,t,n,a){for(var o=e.length,r=n+(a?1:-1);a?r--:++r<o;)if(t(e[r],r,e))return r;return-1}},function(e,t){e.exports=function(e){return e!=e}},function(e,t){e.exports=function(e,t,n){for(var a=n-1,o=e.length;++a<o;)if(e[a]===t)return a;return-1}},function(e,t){e.exports=function(e,t,n){for(var a=-1,o=null==e?0:e.length;++a<o;)if(n(t,e[a]))return!0;return!1}},function(e,t,n){var a=n(195),o=n(354),r=n(121),i=a&&1/r(new a([,-0]))[1]==1/0?function(e){return new a(e)}:o;e.exports=i},function(e,t){e.exports=function(){}},function(e,t,n){var a=n(194),o=n(43);e.exports=function(e){return o(e)&&a(e)}},function(e,t){e.exports=function(e){var t=null==e?0:e.length;return t?e[t-1]:void 0}},function(e,t,n){},function(e,t,n){var a=n(2);e.exports=a(1..valueOf)},function(e,t,n){},function(e,t,n){var a=n(1),o=n(3),r=n(18),i=n(26).f,s=n(8),l=o((function(){i(1)}));a({target:"Object",stat:!0,forced:!s||l,sham:!s},{getOwnPropertyDescriptor:function(e,t){return i(r(e),t)}})},function(e,t,n){var a=n(1),o=n(8),r=n(102).f;a({target:"Object",stat:!0,forced:Object.defineProperties!==r,sham:!o},{defineProperties:r})},function(e,t,n){var a=n(1),o=n(363);a({global:!0,forced:parseInt!=o},{parseInt:o})},function(e,t,n){var a=n(0),o=n(3),r=n(2),i=n(13),s=n(143).trim,l=n(144),c=a.parseInt,u=a.Symbol,d=u&&u.iterator,p=/^[+-]?0x/i,m=r(p.exec),h=8!==c(l+"08")||22!==c(l+"0x16")||d&&!o((function(){c(Object(d))}));e.exports=h?function(e,t){var n=s(i(e));return c(n,t>>>0||(m(p,n)?16:10))}:c},function(e,t,n){"use strict";n(201)},function(e,t,n){},function(e,t,n){},function(e,t,n){"use strict";n(202)},function(e,t,n){},function(e,t,n){var a=n(32).match(/firefox\/(\d+)/i);e.exports=!!a&&+a[1]},function(e,t,n){var a=n(32);e.exports=/MSIE|Trident/.test(a)},function(e,t,n){var a=n(32).match(/AppleWebKit\/(\d+)\./);e.exports=!!a&&+a[1]},function(e,t,n){"use strict";var a=n(1),o=n(2),r=n(20),i=n(46),s=n(13),l=o("".slice),c=Math.max,u=Math.min;a({target:"String",proto:!0,forced:!"".substr||"b"!=="ab".substr(-1)},{substr:function(e,t){var n,a,o=s(r(this)),d=o.length,p=i(e);return p===1/0&&(p=0),p<0&&(p=c(d+p,0)),(n=void 0===t?d:i(t))<=0||n===1/0||p>=(a=u(p+n,d))?"":l(o,p,a)}})},function(e,t,n){"use strict";var a,o=n(1),r=n(2),i=n(26).f,s=n(49),l=n(13),c=n(113),u=n(20),d=n(114),p=n(21),m=r("".endsWith),h=r("".slice),g=Math.min,f=d("endsWith");o({target:"String",proto:!0,forced:!!(p||f||(a=i(String.prototype,"endsWith"),!a||a.writable))&&!f},{endsWith:function(e){var t=l(u(this));c(e);var n=arguments.length>1?arguments[1]:void 0,a=t.length,o=void 0===n?a:g(s(n),a),r=l(e);return m?m(t,r,o):h(t,o-r.length,o)===r}})},function(e,t,n){"use strict";var a=n(0),o=n(2),r=n(33),i=n(7),s=n(11),l=n(59),c=n(54),u=a.Function,d=o([].concat),p=o([].join),m={},h=function(e,t,n){if(!s(m,t)){for(var a=[],o=0;o<t;o++)a[o]="a["+o+"]";m[t]=u("C,a","return new C("+p(a,",")+")")}return m[t](e,n)};e.exports=c?u.bind:function(e){var t=r(this),n=t.prototype,a=l(arguments,1),o=function(){var n=d(a,l(arguments));return this instanceof o?h(t,n.length,n):t.apply(e,n)};return i(n)&&(o.prototype=n),o}},function(e,t,n){"use strict";n(206)},function(e,t,n){"use strict";n(207)},function(e,t,n){"use strict";n.r(t);n(137),n(229),n(239),n(241);var a=n(70),o=(n(128),n(67),n(9),n(23),n(28),n(93),n(39),n(4));function r(e,t){for(var n in t)e[n]=t[n];return e}var i=/[!'()*]/g,s=function(e){return"%"+e.charCodeAt(0).toString(16)},l=/%2C/g,c=function(e){return encodeURIComponent(e).replace(i,s).replace(l,",")};function u(e){try{return decodeURIComponent(e)}catch(e){0}return e}var d=function(e){return null==e||"object"==typeof e?e:String(e)};function p(e){var t={};return(e=e.trim().replace(/^(\?|#|&)/,""))?(e.split("&").forEach((function(e){var n=e.replace(/\+/g," ").split("="),a=u(n.shift()),o=n.length>0?u(n.join("=")):null;void 0===t[a]?t[a]=o:Array.isArray(t[a])?t[a].push(o):t[a]=[t[a],o]})),t):t}function m(e){var t=e?Object.keys(e).map((function(t){var n=e[t];if(void 0===n)return"";if(null===n)return c(t);if(Array.isArray(n)){var a=[];return n.forEach((function(e){void 0!==e&&(null===e?a.push(c(t)):a.push(c(t)+"="+c(e)))})),a.join("&")}return c(t)+"="+c(n)})).filter((function(e){return e.length>0})).join("&"):null;return t?"?"+t:""}var h=/\/?$/;function g(e,t,n,a){var o=a&&a.options.stringifyQuery,r=t.query||{};try{r=f(r)}catch(e){}var i={name:t.name||e&&e.name,meta:e&&e.meta||{},path:t.path||"/",hash:t.hash||"",query:r,params:t.params||{},fullPath:v(t,o),matched:e?w(e):[]};return n&&(i.redirectedFrom=v(n,o)),Object.freeze(i)}function f(e){if(Array.isArray(e))return e.map(f);if(e&&"object"==typeof e){var t={};for(var n in e)t[n]=f(e[n]);return t}return e}var y=g(null,{path:"/"});function w(e){for(var t=[];e;)t.unshift(e),e=e.parent;return t}function v(e,t){var n=e.path,a=e.query;void 0===a&&(a={});var o=e.hash;return void 0===o&&(o=""),(n||"/")+(t||m)(a)+o}function b(e,t,n){return t===y?e===t:!!t&&(e.path&&t.path?e.path.replace(h,"")===t.path.replace(h,"")&&(n||e.hash===t.hash&&k(e.query,t.query)):!(!e.name||!t.name)&&(e.name===t.name&&(n||e.hash===t.hash&&k(e.query,t.query)&&k(e.params,t.params))))}function k(e,t){if(void 0===e&&(e={}),void 0===t&&(t={}),!e||!t)return e===t;var n=Object.keys(e).sort(),a=Object.keys(t).sort();return n.length===a.length&&n.every((function(n,o){var r=e[n];if(a[o]!==n)return!1;var i=t[n];return null==r||null==i?r===i:"object"==typeof r&&"object"==typeof i?k(r,i):String(r)===String(i)}))}function x(e){for(var t=0;t<e.matched.length;t++){var n=e.matched[t];for(var a in n.instances){var o=n.instances[a],r=n.enteredCbs[a];if(o&&r){delete n.enteredCbs[a];for(var i=0;i<r.length;i++)o._isBeingDestroyed||r[i](o)}}}}var T={name:"RouterView",functional:!0,props:{name:{type:String,default:"default"}},render:function(e,t){var n=t.props,a=t.children,o=t.parent,i=t.data;i.routerView=!0;for(var s=o.$createElement,l=n.name,c=o.$route,u=o._routerViewCache||(o._routerViewCache={}),d=0,p=!1;o&&o._routerRoot!==o;){var m=o.$vnode?o.$vnode.data:{};m.routerView&&d++,m.keepAlive&&o._directInactive&&o._inactive&&(p=!0),o=o.$parent}if(i.routerViewDepth=d,p){var h=u[l],g=h&&h.component;return g?(h.configProps&&M(g,i,h.route,h.configProps),s(g,i,a)):s()}var f=c.matched[d],y=f&&f.components[l];if(!f||!y)return u[l]=null,s();u[l]={component:y},i.registerRouteInstance=function(e,t){var n=f.instances[l];(t&&n!==e||!t&&n===e)&&(f.instances[l]=t)},(i.hook||(i.hook={})).prepatch=function(e,t){f.instances[l]=t.componentInstance},i.hook.init=function(e){e.data.keepAlive&&e.componentInstance&&e.componentInstance!==f.instances[l]&&(f.instances[l]=e.componentInstance),x(c)};var w=f.props&&f.props[l];return w&&(r(u[l],{route:c,configProps:w}),M(y,i,c,w)),s(y,i,a)}};function M(e,t,n,a){var o=t.props=function(e,t){switch(typeof t){case"undefined":return;case"object":return t;case"function":return t(e);case"boolean":return t?e.params:void 0;default:0}}(n,a);if(o){o=t.props=r({},o);var i=t.attrs=t.attrs||{};for(var s in o)e.props&&s in e.props||(i[s]=o[s],delete o[s])}}function I(e,t,n){var a=e.charAt(0);if("/"===a)return e;if("?"===a||"#"===a)return t+e;var o=t.split("/");n&&o[o.length-1]||o.pop();for(var r=e.replace(/^\//,"").split("/"),i=0;i<r.length;i++){var s=r[i];".."===s?o.pop():"."!==s&&o.push(s)}return""!==o[0]&&o.unshift(""),o.join("/")}function j(e){return e.replace(/\/+/g,"/")}var D=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)},z=W,S=_,C=function(e,t){return O(_(e,t),t)},A=O,E=U,L=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function _(e,t){for(var n,a=[],o=0,r=0,i="",s=t&&t.delimiter||"/";null!=(n=L.exec(e));){var l=n[0],c=n[1],u=n.index;if(i+=e.slice(r,u),r=u+l.length,c)i+=c[1];else{var d=e[r],p=n[2],m=n[3],h=n[4],g=n[5],f=n[6],y=n[7];i&&(a.push(i),i="");var w=null!=p&&null!=d&&d!==p,v="+"===f||"*"===f,b="?"===f||"*"===f,k=n[2]||s,x=h||g;a.push({name:m||o++,prefix:p||"",delimiter:k,optional:b,repeat:v,partial:w,asterisk:!!y,pattern:x?K(x):y?".*":"[^"+P(k)+"]+?"})}}return r<e.length&&(i+=e.substr(r)),i&&a.push(i),a}function N(e){return encodeURI(e).replace(/[\/?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function O(e,t){for(var n=new Array(e.length),a=0;a<e.length;a++)"object"==typeof e[a]&&(n[a]=new RegExp("^(?:"+e[a].pattern+")$",R(t)));return function(t,a){for(var o="",r=t||{},i=(a||{}).pretty?N:encodeURIComponent,s=0;s<e.length;s++){var l=e[s];if("string"!=typeof l){var c,u=r[l.name];if(null==u){if(l.optional){l.partial&&(o+=l.prefix);continue}throw new TypeError('Expected "'+l.name+'" to be defined')}if(D(u)){if(!l.repeat)throw new TypeError('Expected "'+l.name+'" to not repeat, but received `'+JSON.stringify(u)+"`");if(0===u.length){if(l.optional)continue;throw new TypeError('Expected "'+l.name+'" to not be empty')}for(var d=0;d<u.length;d++){if(c=i(u[d]),!n[s].test(c))throw new TypeError('Expected all "'+l.name+'" to match "'+l.pattern+'", but received `'+JSON.stringify(c)+"`");o+=(0===d?l.prefix:l.delimiter)+c}}else{if(c=l.asterisk?encodeURI(u).replace(/[?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})):i(u),!n[s].test(c))throw new TypeError('Expected "'+l.name+'" to match "'+l.pattern+'", but received "'+c+'"');o+=l.prefix+c}}else o+=l}return o}}function P(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function K(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function q(e,t){return e.keys=t,e}function R(e){return e&&e.sensitive?"":"i"}function U(e,t,n){D(t)||(n=t||n,t=[]);for(var a=(n=n||{}).strict,o=!1!==n.end,r="",i=0;i<e.length;i++){var s=e[i];if("string"==typeof s)r+=P(s);else{var l=P(s.prefix),c="(?:"+s.pattern+")";t.push(s),s.repeat&&(c+="(?:"+l+c+")*"),r+=c=s.optional?s.partial?l+"("+c+")?":"(?:"+l+"("+c+"))?":l+"("+c+")"}}var u=P(n.delimiter||"/"),d=r.slice(-u.length)===u;return a||(r=(d?r.slice(0,-u.length):r)+"(?:"+u+"(?=$))?"),r+=o?"$":a&&d?"":"(?="+u+"|$)",q(new RegExp("^"+r,R(n)),t)}function W(e,t,n){return D(t)||(n=t||n,t=[]),n=n||{},e instanceof RegExp?function(e,t){var n=e.source.match(/\((?!\?)/g);if(n)for(var a=0;a<n.length;a++)t.push({name:a,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return q(e,t)}(e,t):D(e)?function(e,t,n){for(var a=[],o=0;o<e.length;o++)a.push(W(e[o],t,n).source);return q(new RegExp("(?:"+a.join("|")+")",R(n)),t)}(e,t,n):function(e,t,n){return U(_(e,n),t,n)}(e,t,n)}z.parse=S,z.compile=C,z.tokensToFunction=A,z.tokensToRegExp=E;var F=Object.create(null);function Y(e,t,n){t=t||{};try{var a=F[e]||(F[e]=z.compile(e));return"string"==typeof t.pathMatch&&(t[0]=t.pathMatch),a(t,{pretty:!0})}catch(e){return""}finally{delete t[0]}}function B(e,t,n,a){var o="string"==typeof e?{path:e}:e;if(o._normalized)return o;if(o.name){var i=(o=r({},e)).params;return i&&"object"==typeof i&&(o.params=r({},i)),o}if(!o.path&&o.params&&t){(o=r({},o))._normalized=!0;var s=r(r({},t.params),o.params);if(t.name)o.name=t.name,o.params=s;else if(t.matched.length){var l=t.matched[t.matched.length-1].path;o.path=Y(l,s,t.path)}else 0;return o}var c=function(e){var t="",n="",a=e.indexOf("#");a>=0&&(t=e.slice(a),e=e.slice(0,a));var o=e.indexOf("?");return o>=0&&(n=e.slice(o+1),e=e.slice(0,o)),{path:e,query:n,hash:t}}(o.path||""),u=t&&t.path||"/",m=c.path?I(c.path,u,n||o.append):u,h=function(e,t,n){void 0===t&&(t={});var a,o=n||p;try{a=o(e||"")}catch(e){a={}}for(var r in t){var i=t[r];a[r]=Array.isArray(i)?i.map(d):d(i)}return a}(c.query,o.query,a&&a.options.parseQuery),g=o.hash||c.hash;return g&&"#"!==g.charAt(0)&&(g="#"+g),{_normalized:!0,path:m,query:h,hash:g}}var G,Z=function(){},H={name:"RouterLink",props:{to:{type:[String,Object],required:!0},tag:{type:String,default:"a"},custom:Boolean,exact:Boolean,exactPath:Boolean,append:Boolean,replace:Boolean,activeClass:String,exactActiveClass:String,ariaCurrentValue:{type:String,default:"page"},event:{type:[String,Array],default:"click"}},render:function(e){var t=this,n=this.$router,a=this.$route,o=n.resolve(this.to,a,this.append),i=o.location,s=o.route,l=o.href,c={},u=n.options.linkActiveClass,d=n.options.linkExactActiveClass,p=null==u?"router-link-active":u,m=null==d?"router-link-exact-active":d,f=null==this.activeClass?p:this.activeClass,y=null==this.exactActiveClass?m:this.exactActiveClass,w=s.redirectedFrom?g(null,B(s.redirectedFrom),null,n):s;c[y]=b(a,w,this.exactPath),c[f]=this.exact||this.exactPath?c[y]:function(e,t){return 0===e.path.replace(h,"/").indexOf(t.path.replace(h,"/"))&&(!t.hash||e.hash===t.hash)&&function(e,t){for(var n in t)if(!(n in e))return!1;return!0}(e.query,t.query)}(a,w);var v=c[y]?this.ariaCurrentValue:null,k=function(e){Q(e)&&(t.replace?n.replace(i,Z):n.push(i,Z))},x={click:Q};Array.isArray(this.event)?this.event.forEach((function(e){x[e]=k})):x[this.event]=k;var T={class:c},M=!this.$scopedSlots.$hasNormal&&this.$scopedSlots.default&&this.$scopedSlots.default({href:l,route:s,navigate:k,isActive:c[f],isExactActive:c[y]});if(M){if(1===M.length)return M[0];if(M.length>1||!M.length)return 0===M.length?e():e("span",{},M)}if("a"===this.tag)T.on=x,T.attrs={href:l,"aria-current":v};else{var I=function e(t){var n;if(t)for(var a=0;a<t.length;a++){if("a"===(n=t[a]).tag)return n;if(n.children&&(n=e(n.children)))return n}}(this.$slots.default);if(I){I.isStatic=!1;var j=I.data=r({},I.data);for(var D in j.on=j.on||{},j.on){var z=j.on[D];D in x&&(j.on[D]=Array.isArray(z)?z:[z])}for(var S in x)S in j.on?j.on[S].push(x[S]):j.on[S]=k;var C=I.data.attrs=r({},I.data.attrs);C.href=l,C["aria-current"]=v}else T.on=x}return e(this.tag,T,this.$slots.default)}};function Q(e){if(!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey||e.defaultPrevented||void 0!==e.button&&0!==e.button)){if(e.currentTarget&&e.currentTarget.getAttribute){var t=e.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(t))return}return e.preventDefault&&e.preventDefault(),!0}}var $="undefined"!=typeof window;function J(e,t,n,a,o){var r=t||[],i=n||Object.create(null),s=a||Object.create(null);e.forEach((function(e){!function e(t,n,a,o,r,i){var s=o.path,l=o.name;0;var c=o.pathToRegexpOptions||{},u=function(e,t,n){n||(e=e.replace(/\/$/,""));if("/"===e[0])return e;if(null==t)return e;return j(t.path+"/"+e)}(s,r,c.strict);"boolean"==typeof o.caseSensitive&&(c.sensitive=o.caseSensitive);var d={path:u,regex:V(u,c),components:o.components||{default:o.component},alias:o.alias?"string"==typeof o.alias?[o.alias]:o.alias:[],instances:{},enteredCbs:{},name:l,parent:r,matchAs:i,redirect:o.redirect,beforeEnter:o.beforeEnter,meta:o.meta||{},props:null==o.props?{}:o.components?o.props:{default:o.props}};o.children&&o.children.forEach((function(o){var r=i?j(i+"/"+o.path):void 0;e(t,n,a,o,d,r)}));n[d.path]||(t.push(d.path),n[d.path]=d);if(void 0!==o.alias)for(var p=Array.isArray(o.alias)?o.alias:[o.alias],m=0;m<p.length;++m){0;var h={path:p[m],children:o.children};e(t,n,a,h,r,d.path||"/")}l&&(a[l]||(a[l]=d))}(r,i,s,e,o)}));for(var l=0,c=r.length;l<c;l++)"*"===r[l]&&(r.push(r.splice(l,1)[0]),c--,l--);return{pathList:r,pathMap:i,nameMap:s}}function V(e,t){return z(e,[],t)}function X(e,t){var n=J(e),a=n.pathList,o=n.pathMap,r=n.nameMap;function i(e,n,i){var s=B(e,n,!1,t),c=s.name;if(c){var u=r[c];if(!u)return l(null,s);var d=u.regex.keys.filter((function(e){return!e.optional})).map((function(e){return e.name}));if("object"!=typeof s.params&&(s.params={}),n&&"object"==typeof n.params)for(var p in n.params)!(p in s.params)&&d.indexOf(p)>-1&&(s.params[p]=n.params[p]);return s.path=Y(u.path,s.params),l(u,s,i)}if(s.path){s.params={};for(var m=0;m<a.length;m++){var h=a[m],g=o[h];if(ee(g.regex,s.path,s.params))return l(g,s,i)}}return l(null,s)}function s(e,n){var a=e.redirect,o="function"==typeof a?a(g(e,n,null,t)):a;if("string"==typeof o&&(o={path:o}),!o||"object"!=typeof o)return l(null,n);var s=o,c=s.name,u=s.path,d=n.query,p=n.hash,m=n.params;if(d=s.hasOwnProperty("query")?s.query:d,p=s.hasOwnProperty("hash")?s.hash:p,m=s.hasOwnProperty("params")?s.params:m,c){r[c];return i({_normalized:!0,name:c,query:d,hash:p,params:m},void 0,n)}if(u){var h=function(e,t){return I(e,t.parent?t.parent.path:"/",!0)}(u,e);return i({_normalized:!0,path:Y(h,m),query:d,hash:p},void 0,n)}return l(null,n)}function l(e,n,a){return e&&e.redirect?s(e,a||n):e&&e.matchAs?function(e,t,n){var a=i({_normalized:!0,path:Y(n,t.params)});if(a){var o=a.matched,r=o[o.length-1];return t.params=a.params,l(r,t)}return l(null,t)}(0,n,e.matchAs):g(e,n,a,t)}return{match:i,addRoute:function(e,t){var n="object"!=typeof e?r[e]:void 0;J([t||e],a,o,r,n),n&&n.alias.length&&J(n.alias.map((function(e){return{path:e,children:[t]}})),a,o,r,n)},getRoutes:function(){return a.map((function(e){return o[e]}))},addRoutes:function(e){J(e,a,o,r)}}}function ee(e,t,n){var a=t.match(e);if(!a)return!1;if(!n)return!0;for(var o=1,r=a.length;o<r;++o){var i=e.keys[o-1];i&&(n[i.name||"pathMatch"]="string"==typeof a[o]?u(a[o]):a[o])}return!0}var te=$&&window.performance&&window.performance.now?window.performance:Date;function ne(){return te.now().toFixed(3)}var ae=ne();function oe(){return ae}function re(e){return ae=e}var ie=Object.create(null);function se(){"scrollRestoration"in window.history&&(window.history.scrollRestoration="manual");var e=window.location.protocol+"//"+window.location.host,t=window.location.href.replace(e,""),n=r({},window.history.state);return n.key=oe(),window.history.replaceState(n,"",t),window.addEventListener("popstate",ue),function(){window.removeEventListener("popstate",ue)}}function le(e,t,n,a){if(e.app){var o=e.options.scrollBehavior;o&&e.app.$nextTick((function(){var r=function(){var e=oe();if(e)return ie[e]}(),i=o.call(e,t,n,a?r:null);i&&("function"==typeof i.then?i.then((function(e){ge(e,r)})).catch((function(e){0})):ge(i,r))}))}}function ce(){var e=oe();e&&(ie[e]={x:window.pageXOffset,y:window.pageYOffset})}function ue(e){ce(),e.state&&e.state.key&&re(e.state.key)}function de(e){return me(e.x)||me(e.y)}function pe(e){return{x:me(e.x)?e.x:window.pageXOffset,y:me(e.y)?e.y:window.pageYOffset}}function me(e){return"number"==typeof e}var he=/^#\d/;function ge(e,t){var n,a="object"==typeof e;if(a&&"string"==typeof e.selector){var o=he.test(e.selector)?document.getElementById(e.selector.slice(1)):document.querySelector(e.selector);if(o){var r=e.offset&&"object"==typeof e.offset?e.offset:{};t=function(e,t){var n=document.documentElement.getBoundingClientRect(),a=e.getBoundingClientRect();return{x:a.left-n.left-t.x,y:a.top-n.top-t.y}}(o,r={x:me((n=r).x)?n.x:0,y:me(n.y)?n.y:0})}else de(e)&&(t=pe(e))}else a&&de(e)&&(t=pe(e));t&&("scrollBehavior"in document.documentElement.style?window.scrollTo({left:t.x,top:t.y,behavior:e.behavior}):window.scrollTo(t.x,t.y))}var fe,ye=$&&((-1===(fe=window.navigator.userAgent).indexOf("Android 2.")&&-1===fe.indexOf("Android 4.0")||-1===fe.indexOf("Mobile Safari")||-1!==fe.indexOf("Chrome")||-1!==fe.indexOf("Windows Phone"))&&window.history&&"function"==typeof window.history.pushState);function we(e,t){ce();var n=window.history;try{if(t){var a=r({},n.state);a.key=oe(),n.replaceState(a,"",e)}else n.pushState({key:re(ne())},"",e)}catch(n){window.location[t?"replace":"assign"](e)}}function ve(e){we(e,!0)}function be(e,t,n){var a=function(o){o>=e.length?n():e[o]?t(e[o],(function(){a(o+1)})):a(o+1)};a(0)}var ke={redirected:2,aborted:4,cancelled:8,duplicated:16};function xe(e,t){return Me(e,t,ke.redirected,'Redirected when going from "'+e.fullPath+'" to "'+function(e){if("string"==typeof e)return e;if("path"in e)return e.path;var t={};return Ie.forEach((function(n){n in e&&(t[n]=e[n])})),JSON.stringify(t,null,2)}(t)+'" via a navigation guard.')}function Te(e,t){return Me(e,t,ke.cancelled,'Navigation cancelled from "'+e.fullPath+'" to "'+t.fullPath+'" with a new navigation.')}function Me(e,t,n,a){var o=new Error(a);return o._isRouter=!0,o.from=e,o.to=t,o.type=n,o}var Ie=["params","query","hash"];function je(e){return Object.prototype.toString.call(e).indexOf("Error")>-1}function De(e,t){return je(e)&&e._isRouter&&(null==t||e.type===t)}function ze(e){return function(t,n,a){var o=!1,r=0,i=null;Se(e,(function(e,t,n,s){if("function"==typeof e&&void 0===e.cid){o=!0,r++;var l,c=Ee((function(t){var o;((o=t).__esModule||Ae&&"Module"===o[Symbol.toStringTag])&&(t=t.default),e.resolved="function"==typeof t?t:G.extend(t),n.components[s]=t,--r<=0&&a()})),u=Ee((function(e){var t="Failed to resolve async component "+s+": "+e;i||(i=je(e)?e:new Error(t),a(i))}));try{l=e(c,u)}catch(e){u(e)}if(l)if("function"==typeof l.then)l.then(c,u);else{var d=l.component;d&&"function"==typeof d.then&&d.then(c,u)}}})),o||a()}}function Se(e,t){return Ce(e.map((function(e){return Object.keys(e.components).map((function(n){return t(e.components[n],e.instances[n],e,n)}))})))}function Ce(e){return Array.prototype.concat.apply([],e)}var Ae="function"==typeof Symbol&&"symbol"==typeof Symbol.toStringTag;function Ee(e){var t=!1;return function(){for(var n=[],a=arguments.length;a--;)n[a]=arguments[a];if(!t)return t=!0,e.apply(this,n)}}var Le=function(e,t){this.router=e,this.base=function(e){if(!e)if($){var t=document.querySelector("base");e=(e=t&&t.getAttribute("href")||"/").replace(/^https?:\/\/[^\/]+/,"")}else e="/";"/"!==e.charAt(0)&&(e="/"+e);return e.replace(/\/$/,"")}(t),this.current=y,this.pending=null,this.ready=!1,this.readyCbs=[],this.readyErrorCbs=[],this.errorCbs=[],this.listeners=[]};function _e(e,t,n,a){var o=Se(e,(function(e,a,o,r){var i=function(e,t){"function"!=typeof e&&(e=G.extend(e));return e.options[t]}(e,t);if(i)return Array.isArray(i)?i.map((function(e){return n(e,a,o,r)})):n(i,a,o,r)}));return Ce(a?o.reverse():o)}function Ne(e,t){if(t)return function(){return e.apply(t,arguments)}}Le.prototype.listen=function(e){this.cb=e},Le.prototype.onReady=function(e,t){this.ready?e():(this.readyCbs.push(e),t&&this.readyErrorCbs.push(t))},Le.prototype.onError=function(e){this.errorCbs.push(e)},Le.prototype.transitionTo=function(e,t,n){var a,o=this;try{a=this.router.match(e,this.current)}catch(e){throw this.errorCbs.forEach((function(t){t(e)})),e}var r=this.current;this.confirmTransition(a,(function(){o.updateRoute(a),t&&t(a),o.ensureURL(),o.router.afterHooks.forEach((function(e){e&&e(a,r)})),o.ready||(o.ready=!0,o.readyCbs.forEach((function(e){e(a)})))}),(function(e){n&&n(e),e&&!o.ready&&(De(e,ke.redirected)&&r===y||(o.ready=!0,o.readyErrorCbs.forEach((function(t){t(e)}))))}))},Le.prototype.confirmTransition=function(e,t,n){var a=this,o=this.current;this.pending=e;var r,i,s=function(e){!De(e)&&je(e)&&(a.errorCbs.length?a.errorCbs.forEach((function(t){t(e)})):console.error(e)),n&&n(e)},l=e.matched.length-1,c=o.matched.length-1;if(b(e,o)&&l===c&&e.matched[l]===o.matched[c])return this.ensureURL(),e.hash&&le(this.router,o,e,!1),s(((i=Me(r=o,e,ke.duplicated,'Avoided redundant navigation to current location: "'+r.fullPath+'".')).name="NavigationDuplicated",i));var u=function(e,t){var n,a=Math.max(e.length,t.length);for(n=0;n<a&&e[n]===t[n];n++);return{updated:t.slice(0,n),activated:t.slice(n),deactivated:e.slice(n)}}(this.current.matched,e.matched),d=u.updated,p=u.deactivated,m=u.activated,h=[].concat(function(e){return _e(e,"beforeRouteLeave",Ne,!0)}(p),this.router.beforeHooks,function(e){return _e(e,"beforeRouteUpdate",Ne)}(d),m.map((function(e){return e.beforeEnter})),ze(m)),g=function(t,n){if(a.pending!==e)return s(Te(o,e));try{t(e,o,(function(t){!1===t?(a.ensureURL(!0),s(function(e,t){return Me(e,t,ke.aborted,'Navigation aborted from "'+e.fullPath+'" to "'+t.fullPath+'" via a navigation guard.')}(o,e))):je(t)?(a.ensureURL(!0),s(t)):"string"==typeof t||"object"==typeof t&&("string"==typeof t.path||"string"==typeof t.name)?(s(xe(o,e)),"object"==typeof t&&t.replace?a.replace(t):a.push(t)):n(t)}))}catch(e){s(e)}};be(h,g,(function(){be(function(e){return _e(e,"beforeRouteEnter",(function(e,t,n,a){return function(e,t,n){return function(a,o,r){return e(a,o,(function(e){"function"==typeof e&&(t.enteredCbs[n]||(t.enteredCbs[n]=[]),t.enteredCbs[n].push(e)),r(e)}))}}(e,n,a)}))}(m).concat(a.router.resolveHooks),g,(function(){if(a.pending!==e)return s(Te(o,e));a.pending=null,t(e),a.router.app&&a.router.app.$nextTick((function(){x(e)}))}))}))},Le.prototype.updateRoute=function(e){this.current=e,this.cb&&this.cb(e)},Le.prototype.setupListeners=function(){},Le.prototype.teardown=function(){this.listeners.forEach((function(e){e()})),this.listeners=[],this.current=y,this.pending=null};var Oe=function(e){function t(t,n){e.call(this,t,n),this._startLocation=Pe(this.base)}return e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t,t.prototype.setupListeners=function(){var e=this;if(!(this.listeners.length>0)){var t=this.router,n=t.options.scrollBehavior,a=ye&&n;a&&this.listeners.push(se());var o=function(){var n=e.current,o=Pe(e.base);e.current===y&&o===e._startLocation||e.transitionTo(o,(function(e){a&&le(t,e,n,!0)}))};window.addEventListener("popstate",o),this.listeners.push((function(){window.removeEventListener("popstate",o)}))}},t.prototype.go=function(e){window.history.go(e)},t.prototype.push=function(e,t,n){var a=this,o=this.current;this.transitionTo(e,(function(e){we(j(a.base+e.fullPath)),le(a.router,e,o,!1),t&&t(e)}),n)},t.prototype.replace=function(e,t,n){var a=this,o=this.current;this.transitionTo(e,(function(e){ve(j(a.base+e.fullPath)),le(a.router,e,o,!1),t&&t(e)}),n)},t.prototype.ensureURL=function(e){if(Pe(this.base)!==this.current.fullPath){var t=j(this.base+this.current.fullPath);e?we(t):ve(t)}},t.prototype.getCurrentLocation=function(){return Pe(this.base)},t}(Le);function Pe(e){var t=window.location.pathname,n=t.toLowerCase(),a=e.toLowerCase();return!e||n!==a&&0!==n.indexOf(j(a+"/"))||(t=t.slice(e.length)),(t||"/")+window.location.search+window.location.hash}var Ke=function(e){function t(t,n,a){e.call(this,t,n),a&&function(e){var t=Pe(e);if(!/^\/#/.test(t))return window.location.replace(j(e+"/#"+t)),!0}(this.base)||qe()}return e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t,t.prototype.setupListeners=function(){var e=this;if(!(this.listeners.length>0)){var t=this.router.options.scrollBehavior,n=ye&&t;n&&this.listeners.push(se());var a=function(){var t=e.current;qe()&&e.transitionTo(Re(),(function(a){n&&le(e.router,a,t,!0),ye||Fe(a.fullPath)}))},o=ye?"popstate":"hashchange";window.addEventListener(o,a),this.listeners.push((function(){window.removeEventListener(o,a)}))}},t.prototype.push=function(e,t,n){var a=this,o=this.current;this.transitionTo(e,(function(e){We(e.fullPath),le(a.router,e,o,!1),t&&t(e)}),n)},t.prototype.replace=function(e,t,n){var a=this,o=this.current;this.transitionTo(e,(function(e){Fe(e.fullPath),le(a.router,e,o,!1),t&&t(e)}),n)},t.prototype.go=function(e){window.history.go(e)},t.prototype.ensureURL=function(e){var t=this.current.fullPath;Re()!==t&&(e?We(t):Fe(t))},t.prototype.getCurrentLocation=function(){return Re()},t}(Le);function qe(){var e=Re();return"/"===e.charAt(0)||(Fe("/"+e),!1)}function Re(){var e=window.location.href,t=e.indexOf("#");return t<0?"":e=e.slice(t+1)}function Ue(e){var t=window.location.href,n=t.indexOf("#");return(n>=0?t.slice(0,n):t)+"#"+e}function We(e){ye?we(Ue(e)):window.location.hash=e}function Fe(e){ye?ve(Ue(e)):window.location.replace(Ue(e))}var Ye=function(e){function t(t,n){e.call(this,t,n),this.stack=[],this.index=-1}return e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t,t.prototype.push=function(e,t,n){var a=this;this.transitionTo(e,(function(e){a.stack=a.stack.slice(0,a.index+1).concat(e),a.index++,t&&t(e)}),n)},t.prototype.replace=function(e,t,n){var a=this;this.transitionTo(e,(function(e){a.stack=a.stack.slice(0,a.index).concat(e),t&&t(e)}),n)},t.prototype.go=function(e){var t=this,n=this.index+e;if(!(n<0||n>=this.stack.length)){var a=this.stack[n];this.confirmTransition(a,(function(){var e=t.current;t.index=n,t.updateRoute(a),t.router.afterHooks.forEach((function(t){t&&t(a,e)}))}),(function(e){De(e,ke.duplicated)&&(t.index=n)}))}},t.prototype.getCurrentLocation=function(){var e=this.stack[this.stack.length-1];return e?e.fullPath:"/"},t.prototype.ensureURL=function(){},t}(Le),Be=function(e){void 0===e&&(e={}),this.app=null,this.apps=[],this.options=e,this.beforeHooks=[],this.resolveHooks=[],this.afterHooks=[],this.matcher=X(e.routes||[],this);var t=e.mode||"hash";switch(this.fallback="history"===t&&!ye&&!1!==e.fallback,this.fallback&&(t="hash"),$||(t="abstract"),this.mode=t,t){case"history":this.history=new Oe(this,e.base);break;case"hash":this.history=new Ke(this,e.base,this.fallback);break;case"abstract":this.history=new Ye(this,e.base);break;default:0}},Ge={currentRoute:{configurable:!0}};function Ze(e,t){return e.push(t),function(){var n=e.indexOf(t);n>-1&&e.splice(n,1)}}Be.prototype.match=function(e,t,n){return this.matcher.match(e,t,n)},Ge.currentRoute.get=function(){return this.history&&this.history.current},Be.prototype.init=function(e){var t=this;if(this.apps.push(e),e.$once("hook:destroyed",(function(){var n=t.apps.indexOf(e);n>-1&&t.apps.splice(n,1),t.app===e&&(t.app=t.apps[0]||null),t.app||t.history.teardown()})),!this.app){this.app=e;var n=this.history;if(n instanceof Oe||n instanceof Ke){var a=function(e){n.setupListeners(),function(e){var a=n.current,o=t.options.scrollBehavior;ye&&o&&"fullPath"in e&&le(t,e,a,!1)}(e)};n.transitionTo(n.getCurrentLocation(),a,a)}n.listen((function(e){t.apps.forEach((function(t){t._route=e}))}))}},Be.prototype.beforeEach=function(e){return Ze(this.beforeHooks,e)},Be.prototype.beforeResolve=function(e){return Ze(this.resolveHooks,e)},Be.prototype.afterEach=function(e){return Ze(this.afterHooks,e)},Be.prototype.onReady=function(e,t){this.history.onReady(e,t)},Be.prototype.onError=function(e){this.history.onError(e)},Be.prototype.push=function(e,t,n){var a=this;if(!t&&!n&&"undefined"!=typeof Promise)return new Promise((function(t,n){a.history.push(e,t,n)}));this.history.push(e,t,n)},Be.prototype.replace=function(e,t,n){var a=this;if(!t&&!n&&"undefined"!=typeof Promise)return new Promise((function(t,n){a.history.replace(e,t,n)}));this.history.replace(e,t,n)},Be.prototype.go=function(e){this.history.go(e)},Be.prototype.back=function(){this.go(-1)},Be.prototype.forward=function(){this.go(1)},Be.prototype.getMatchedComponents=function(e){var t=e?e.matched?e:this.resolve(e).route:this.currentRoute;return t?[].concat.apply([],t.matched.map((function(e){return Object.keys(e.components).map((function(t){return e.components[t]}))}))):[]},Be.prototype.resolve=function(e,t,n){var a=B(e,t=t||this.history.current,n,this),o=this.match(a,t),r=o.redirectedFrom||o.fullPath;return{location:a,route:o,href:function(e,t,n){var a="hash"===n?"#"+t:t;return e?j(e+"/"+a):a}(this.history.base,r,this.mode),normalizedTo:a,resolved:o}},Be.prototype.getRoutes=function(){return this.matcher.getRoutes()},Be.prototype.addRoute=function(e,t){this.matcher.addRoute(e,t),this.history.current!==y&&this.history.transitionTo(this.history.getCurrentLocation())},Be.prototype.addRoutes=function(e){this.matcher.addRoutes(e),this.history.current!==y&&this.history.transitionTo(this.history.getCurrentLocation())},Object.defineProperties(Be.prototype,Ge),Be.install=function e(t){if(!e.installed||G!==t){e.installed=!0,G=t;var n=function(e){return void 0!==e},a=function(e,t){var a=e.$options._parentVnode;n(a)&&n(a=a.data)&&n(a=a.registerRouteInstance)&&a(e,t)};t.mixin({beforeCreate:function(){n(this.$options.router)?(this._routerRoot=this,this._router=this.$options.router,this._router.init(this),t.util.defineReactive(this,"_route",this._router.history.current)):this._routerRoot=this.$parent&&this.$parent._routerRoot||this,a(this,this)},destroyed:function(){a(this)}}),Object.defineProperty(t.prototype,"$router",{get:function(){return this._routerRoot._router}}),Object.defineProperty(t.prototype,"$route",{get:function(){return this._routerRoot._route}}),t.component("RouterView",T),t.component("RouterLink",H);var o=t.config.optionMergeStrategies;o.beforeRouteEnter=o.beforeRouteLeave=o.beforeRouteUpdate=o.created}},Be.version="3.5.3",Be.isNavigationFailure=De,Be.NavigationFailureType=ke,Be.START_LOCATION=y,$&&window.Vue&&window.Vue.use(Be);var He=Be;n(167),n(168),n(244),n(112),n(132),n(65),n(66),n(246);function Qe(e){e.locales&&Object.keys(e.locales).forEach((function(t){e.locales[t].path=t})),Object.freeze(e)}n(61),n(82),n(116);function $e(e){return($e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var Je=n(63),Ve=(n(179),n(34),n(127),n(216),n(223),n(37),n(36),{BlogsList:function(){return Promise.all([n.e(0),n.e(1),n.e(2),n.e(25)]).then(n.bind(null,722))},BlogsPost:function(){return Promise.all([n.e(0),n.e(1),n.e(2),n.e(3),n.e(31)]).then(n.bind(null,724))},CareerDetail:function(){return Promise.all([n.e(0),n.e(1),n.e(2),n.e(3),n.e(20)]).then(n.bind(null,720))},Community:function(){return Promise.all([n.e(0),n.e(1),n.e(13),n.e(2),n.e(26)]).then(n.bind(null,725))},CompanyAbout:function(){return Promise.all([n.e(0),n.e(1),n.e(2),n.e(14)]).then(n.bind(null,726))},CompanyCareers:function(){return Promise.all([n.e(0),n.e(1),n.e(16),n.e(2),n.e(19)]).then(n.bind(null,727))},CompanyContact:function(){return Promise.all([n.e(0),n.e(1),n.e(29),n.e(2),n.e(21)]).then(n.bind(null,728))},CompanyLegals:function(){return Promise.all([n.e(0),n.e(1),n.e(2),n.e(32)]).then(n.bind(null,729))},FeaturesEnterprise:function(){return Promise.all([n.e(0),n.e(1),n.e(2),n.e(18)]).then(n.bind(null,723))},FeaturesFeatures:function(){return Promise.all([n.e(0),n.e(1),n.e(4),n.e(2),n.e(17)]).then(n.bind(null,718))},FeaturesUsage:function(){return Promise.all([n.e(0),n.e(1),n.e(2),n.e(10)]).then(n.bind(null,730))},Home:function(){return Promise.all([n.e(0),n.e(1),n.e(4),n.e(9),n.e(6)]).then(n.bind(null,717))},Layout:function(){return Promise.all([n.e(0),n.e(1),n.e(8),n.e(7)]).then(n.bind(null,731))},NotFound:function(){return Promise.all([n.e(0),n.e(1),n.e(2),n.e(15)]).then(n.bind(null,721))}}),Xe={"v-3140ed9c":function(){return n.e(211).then(n.bind(null,733))},"v-5ff30963":function(){return n.e(35).then(n.bind(null,734))},"v-92cbb91e":function(){return n.e(22).then(n.bind(null,735))},"v-20b6d043":function(){return n.e(12).then(n.bind(null,736))},"v-a0b325ba":function(){return n.e(24).then(n.bind(null,737))},"v-b5fa0b7a":function(){return n.e(27).then(n.bind(null,738))},"v-5f52623a":function(){return n.e(33).then(n.bind(null,739))},"v-4b2ede63":function(){return n.e(36).then(n.bind(null,740))},"v-bbb01a3a":function(){return n.e(37).then(n.bind(null,741))},"v-1af8f4dc":function(){return n.e(41).then(n.bind(null,742))},"v-d54e12fa":function(){return n.e(42).then(n.bind(null,743))},"v-79ae536f":function(){return n.e(43).then(n.bind(null,744))},"v-aab5aafa":function(){return n.e(44).then(n.bind(null,745))},"v-15a50223":function(){return n.e(45).then(n.bind(null,746))},"v-9438ad9a":function(){return n.e(46).then(n.bind(null,747))},"v-2414668d":function(){return n.e(47).then(n.bind(null,748))},"v-0b50773a":function(){return n.e(48).then(n.bind(null,749))},"v-135cabfa":function(){return n.e(49).then(n.bind(null,750))},"v-f3216c06":function(){return n.e(50).then(n.bind(null,751))},"v-24306408":function(){return n.e(51).then(n.bind(null,752))},"v-04b425b0":function(){return n.e(52).then(n.bind(null,753))},"v-c4be06f0":function(){return n.e(53).then(n.bind(null,754))},"v-65f94028":function(){return n.e(54).then(n.bind(null,755))},"v-6e805448":function(){return n.e(55).then(n.bind(null,756))},"v-3bf54632":function(){return n.e(56).then(n.bind(null,757))},"v-72b722e0":function(){return n.e(57).then(n.bind(null,758))},"v-6c45e6ad":function(){return n.e(58).then(n.bind(null,759))},"v-f088926c":function(){return n.e(59).then(n.bind(null,760))},"v-940495a4":function(){return n.e(60).then(n.bind(null,761))},"v-68229fc4":function(){return n.e(61).then(n.bind(null,762))},"v-f1ea5734":function(){return n.e(62).then(n.bind(null,763))},"v-67c3e868":function(){return n.e(63).then(n.bind(null,764))},"v-636e3ee8":function(){return n.e(64).then(n.bind(null,765))},"v-3ef378d0":function(){return n.e(65).then(n.bind(null,766))},"v-f99b39f0":function(){return n.e(66).then(n.bind(null,767))},"v-55acd5fe":function(){return n.e(67).then(n.bind(null,768))},"v-6842f008":function(){return n.e(68).then(n.bind(null,769))},"v-7854a970":function(){return n.e(69).then(n.bind(null,770))},"v-026cac48":function(){return n.e(70).then(n.bind(null,771))},"v-db882e10":function(){return n.e(71).then(n.bind(null,772))},"v-69b05e43":function(){return n.e(72).then(n.bind(null,773))},"v-12b44ec8":function(){return n.e(73).then(n.bind(null,774))},"v-10c3a470":function(){return n.e(74).then(n.bind(null,775))},"v-be84a670":function(){return n.e(34).then(n.bind(null,776))},"v-11cc6b58":function(){return n.e(75).then(n.bind(null,777))},"v-a42a4c0e":function(){return n.e(76).then(n.bind(null,778))},"v-631e077a":function(){return n.e(77).then(n.bind(null,779))},"v-477f7948":function(){return n.e(78).then(n.bind(null,780))},"v-2bdad6a8":function(){return n.e(79).then(n.bind(null,781))},"v-587c915c":function(){return n.e(80).then(n.bind(null,782))},"v-5a7b3ee8":function(){return n.e(28).then(n.bind(null,783))},"v-550d8c48":function(){return n.e(81).then(n.bind(null,784))},"v-8488a8b4":function(){return n.e(82).then(n.bind(null,785))},"v-2a1991f2":function(){return n.e(83).then(n.bind(null,786))},"v-7db39c08":function(){return n.e(84).then(n.bind(null,787))},"v-019a6270":function(){return n.e(38).then(n.bind(null,788))},"v-a824f470":function(){return n.e(85).then(n.bind(null,789))},"v-92b626b0":function(){return n.e(86).then(n.bind(null,790))},"v-7e6b41b0":function(){return n.e(87).then(n.bind(null,791))},"v-2b85cc88":function(){return n.e(88).then(n.bind(null,792))},"v-084d894c":function(){return n.e(89).then(n.bind(null,793))},"v-801f5ac2":function(){return n.e(90).then(n.bind(null,794))},"v-4a03194d":function(){return n.e(91).then(n.bind(null,795))},"v-53d2e383":function(){return n.e(92).then(n.bind(null,796))},"v-472d66c8":function(){return n.e(93).then(n.bind(null,797))},"v-64153d4f":function(){return n.e(94).then(n.bind(null,798))},"v-854686b0":function(){return n.e(95).then(n.bind(null,799))},"v-23612046":function(){return n.e(96).then(n.bind(null,800))},"v-379f3ffa":function(){return n.e(97).then(n.bind(null,801))},"v-500babc3":function(){return n.e(98).then(n.bind(null,802))},"v-a9bb447a":function(){return n.e(99).then(n.bind(null,803))},"v-375945a3":function(){return n.e(100).then(n.bind(null,804))},"v-5ce9c2ba":function(){return n.e(101).then(n.bind(null,805))},"v-2d82e9df":function(){return n.e(102).then(n.bind(null,806))},"v-6ad1b17a":function(){return n.e(103).then(n.bind(null,807))},"v-03cc083c":function(){return n.e(104).then(n.bind(null,808))},"v-7048180f":function(){return n.e(105).then(n.bind(null,809))},"v-f7b823fa":function(){return n.e(106).then(n.bind(null,810))},"v-32f7ff6b":function(){return n.e(107).then(n.bind(null,811))},"v-1d9a471b":function(){return n.e(108).then(n.bind(null,812))},"v-25d11766":function(){return n.e(109).then(n.bind(null,813))},"v-37ca54ba":function(){return n.e(110).then(n.bind(null,814))},"v-407e4c63":function(){return n.e(111).then(n.bind(null,815))},"v-ee9465ee":function(){return n.e(112).then(n.bind(null,816))},"v-0c942c63":function(){return n.e(113).then(n.bind(null,817))},"v-6a7e2aba":function(){return n.e(114).then(n.bind(null,818))},"v-b5fc07fa":function(){return n.e(115).then(n.bind(null,819))},"v-6aaaa611":function(){return n.e(116).then(n.bind(null,820))},"v-a23bbe52":function(){return n.e(117).then(n.bind(null,821))},"v-013a3ed6":function(){return n.e(118).then(n.bind(null,822))},"v-2436c27d":function(){return n.e(119).then(n.bind(null,823))},"v-7ca4bf39":function(){return n.e(120).then(n.bind(null,824))},"v-9b3e234e":function(){return n.e(121).then(n.bind(null,825))},"v-2727b023":function(){return n.e(122).then(n.bind(null,826))},"v-1ff105fa":function(){return n.e(123).then(n.bind(null,827))},"v-4b35295a":function(){return n.e(124).then(n.bind(null,828))},"v-8d2ddbb6":function(){return n.e(125).then(n.bind(null,829))},"v-e365f37a":function(){return n.e(126).then(n.bind(null,830))},"v-eb0176fa":function(){return n.e(127).then(n.bind(null,831))},"v-a0e5effa":function(){return n.e(128).then(n.bind(null,832))},"v-277041d2":function(){return n.e(129).then(n.bind(null,833))},"v-4aab2c43":function(){return n.e(130).then(n.bind(null,834))},"v-6a8b44a3":function(){return n.e(131).then(n.bind(null,835))},"v-05829129":function(){return n.e(132).then(n.bind(null,836))},"v-e36ba57a":function(){return n.e(133).then(n.bind(null,837))},"v-74595f62":function(){return n.e(134).then(n.bind(null,838))},"v-3b433f3a":function(){return n.e(135).then(n.bind(null,839))},"v-c3d3ac7a":function(){return n.e(136).then(n.bind(null,840))},"v-43215b83":function(){return n.e(137).then(n.bind(null,841))},"v-af16fdfa":function(){return n.e(141).then(n.bind(null,842))},"v-290ae021":function(){return n.e(142).then(n.bind(null,843))},"v-a615a37a":function(){return n.e(143).then(n.bind(null,844))},"v-8e6978ba":function(){return n.e(144).then(n.bind(null,845))},"v-1fe614e2":function(){return n.e(145).then(n.bind(null,846))},"v-0194b523":function(){return n.e(146).then(n.bind(null,847))},"v-028c2615":function(){return n.e(147).then(n.bind(null,848))},"v-5abd22fa":function(){return n.e(148).then(n.bind(null,849))},"v-95584f7a":function(){return n.e(149).then(n.bind(null,850))},"v-26ff90c3":function(){return n.e(150).then(n.bind(null,851))},"v-2afbd45e":function(){return n.e(151).then(n.bind(null,852))},"v-2d2dbf23":function(){return n.e(152).then(n.bind(null,853))},"v-33246d6c":function(){return n.e(153).then(n.bind(null,854))},"v-97f5f47a":function(){return n.e(154).then(n.bind(null,855))},"v-34f53695":function(){return n.e(155).then(n.bind(null,856))},"v-c8549002":function(){return n.e(156).then(n.bind(null,857))},"v-b544102e":function(){return n.e(157).then(n.bind(null,858))},"v-0d071783":function(){return n.e(158).then(n.bind(null,859))},"v-6fab4526":function(){return n.e(159).then(n.bind(null,860))},"v-a066783a":function(){return n.e(160).then(n.bind(null,861))},"v-68153c43":function(){return n.e(161).then(n.bind(null,862))},"v-0aa012d1":function(){return n.e(162).then(n.bind(null,863))},"v-781b89e8":function(){return n.e(163).then(n.bind(null,864))},"v-2652c323":function(){return n.e(164).then(n.bind(null,865))},"v-8587667a":function(){return n.e(165).then(n.bind(null,866))},"v-e12df7aa":function(){return n.e(166).then(n.bind(null,867))},"v-33b417a3":function(){return n.e(167).then(n.bind(null,868))},"v-2b9b85e5":function(){return n.e(168).then(n.bind(null,869))},"v-f3d3490e":function(){return n.e(169).then(n.bind(null,870))},"v-6fae6643":function(){return n.e(170).then(n.bind(null,871))},"v-2c735824":function(){return n.e(171).then(n.bind(null,872))},"v-4fe9ff3a":function(){return n.e(172).then(n.bind(null,873))},"v-562d6fe3":function(){return n.e(173).then(n.bind(null,874))},"v-416ac725":function(){return n.e(174).then(n.bind(null,875))},"v-f8095e16":function(){return n.e(175).then(n.bind(null,876))},"v-47b2e3ee":function(){return n.e(176).then(n.bind(null,877))},"v-0b5d6643":function(){return n.e(177).then(n.bind(null,878))},"v-3d85960b":function(){return n.e(178).then(n.bind(null,879))},"v-720f7fba":function(){return n.e(179).then(n.bind(null,880))},"v-787eb528":function(){return n.e(23).then(n.bind(null,881))},"v-4e9ad7a0":function(){return n.e(39).then(n.bind(null,882))},"v-af19e69c":function(){return n.e(180).then(n.bind(null,883))},"v-e5195c30":function(){return n.e(181).then(n.bind(null,884))},"v-74d8f83a":function(){return n.e(182).then(n.bind(null,885))},"v-e228dff0":function(){return n.e(183).then(n.bind(null,886))},"v-51cba32a":function(){return n.e(184).then(n.bind(null,887))},"v-c38cdba0":function(){return n.e(185).then(n.bind(null,888))},"v-5cb2b138":function(){return n.e(186).then(n.bind(null,889))},"v-2e06cf88":function(){return n.e(187).then(n.bind(null,890))},"v-528bedd8":function(){return n.e(188).then(n.bind(null,891))},"v-219eff68":function(){return n.e(189).then(n.bind(null,892))},"v-7f4ed1e3":function(){return n.e(190).then(n.bind(null,893))},"v-66dc4b5d":function(){return n.e(191).then(n.bind(null,894))},"v-3711fea3":function(){return n.e(192).then(n.bind(null,895))},"v-6a782823":function(){return n.e(193).then(n.bind(null,896))},"v-27b76acd":function(){return n.e(194).then(n.bind(null,897))},"v-2725e445":function(){return n.e(195).then(n.bind(null,898))},"v-1eda64e3":function(){return n.e(196).then(n.bind(null,899))},"v-19d6ff43":function(){return n.e(197).then(n.bind(null,900))},"v-3a854743":function(){return n.e(198).then(n.bind(null,901))},"v-dc92b792":function(){return n.e(199).then(n.bind(null,902))},"v-738f2343":function(){return n.e(200).then(n.bind(null,903))},"v-7f0a4243":function(){return n.e(201).then(n.bind(null,904))},"v-43eb08ea":function(){return n.e(202).then(n.bind(null,905))},"v-3d69dc03":function(){return n.e(203).then(n.bind(null,906))},"v-8f9c8b7a":function(){return n.e(204).then(n.bind(null,907))},"v-01ccd343":function(){return n.e(205).then(n.bind(null,908))},"v-575b40ba":function(){return n.e(206).then(n.bind(null,909))},"v-e2dba7ba":function(){return n.e(207).then(n.bind(null,910))},"v-209f3a3c":function(){return n.e(11).then(n.bind(null,911))},"v-147fc603":function(){return n.e(208).then(n.bind(null,912))},"v-ce2ac07a":function(){return n.e(209).then(n.bind(null,913))},"v-4d379c23":function(){return n.e(210).then(n.bind(null,914))},"v-8c82ad54":function(){return n.e(212).then(n.bind(null,915))},"v-cb94d530":function(){return n.e(213).then(n.bind(null,916))},"v-afdbda3a":function(){return n.e(214).then(n.bind(null,917))},"v-16365a03":function(){return n.e(215).then(n.bind(null,918))},"v-077dee92":function(){return n.e(216).then(n.bind(null,919))},"v-1813e7fa":function(){return n.e(217).then(n.bind(null,920))},"v-01b63a32":function(){return n.e(218).then(n.bind(null,921))},"v-2ad254c3":function(){return n.e(219).then(n.bind(null,922))},"v-62e587fd":function(){return n.e(220).then(n.bind(null,923))},"v-26cecde3":function(){return n.e(221).then(n.bind(null,924))},"v-44d81fa3":function(){return n.e(222).then(n.bind(null,925))},"v-61ce6341":function(){return n.e(223).then(n.bind(null,926))},"v-71a5b7ba":function(){return n.e(224).then(n.bind(null,927))},"v-8448cf32":function(){return n.e(225).then(n.bind(null,928))},"v-a441d7ce":function(){return n.e(226).then(n.bind(null,929))},"v-775e78a3":function(){return n.e(227).then(n.bind(null,930))},"v-40d34635":function(){return n.e(228).then(n.bind(null,931))},"v-a09528c2":function(){return n.e(229).then(n.bind(null,932))},"v-19408c3a":function(){return n.e(230).then(n.bind(null,933))},"v-23bac36d":function(){return n.e(231).then(n.bind(null,934))},"v-1b25d55f":function(){return n.e(232).then(n.bind(null,935))},"v-1827886f":function(){return n.e(233).then(n.bind(null,936))},"v-3fc91bd3":function(){return n.e(234).then(n.bind(null,937))},"v-4162bd61":function(){return n.e(235).then(n.bind(null,938))},"v-49f10763":function(){return n.e(236).then(n.bind(null,939))},"v-dd1e609e":function(){return n.e(237).then(n.bind(null,940))},"v-797da7c7":function(){return n.e(238).then(n.bind(null,941))},"v-6717a943":function(){return n.e(239).then(n.bind(null,942))},"v-52208f8a":function(){return n.e(240).then(n.bind(null,943))},"v-3a8e0133":function(){return n.e(241).then(n.bind(null,944))},"v-1efc3447":function(){return n.e(242).then(n.bind(null,945))},"v-1c59ef6b":function(){return n.e(243).then(n.bind(null,946))},"v-6a588fb7":function(){return n.e(244).then(n.bind(null,947))},"v-97922f1e":function(){return n.e(245).then(n.bind(null,948))},"v-72837be3":function(){return n.e(246).then(n.bind(null,949))},"v-be375f3a":function(){return n.e(247).then(n.bind(null,950))},"v-0943ab37":function(){return n.e(248).then(n.bind(null,951))},"v-66fcc649":function(){return n.e(249).then(n.bind(null,952))},"v-541b8ec5":function(){return n.e(251).then(n.bind(null,953))},"v-ae992146":function(){return n.e(252).then(n.bind(null,954))},"v-3888f63a":function(){return n.e(253).then(n.bind(null,955))},"v-719322e3":function(){return n.e(254).then(n.bind(null,956))},"v-19cb5103":function(){return n.e(255).then(n.bind(null,957))},"v-33989629":function(){return n.e(256).then(n.bind(null,958))},"v-77a02e83":function(){return n.e(250).then(n.bind(null,959))},"v-413ff743":function(){return n.e(138).then(n.bind(null,960))},"v-42c49689":function(){return n.e(139).then(n.bind(null,961))},"v-12a41843":function(){return n.e(140).then(n.bind(null,962))}};function et(e){var t=Object.create(null);return function(n){return t[n]||(t[n]=e(n))}}var tt=/-(\w)/g,nt=et((function(e){return e.replace(tt,(function(e,t){return t?t.toUpperCase():""}))})),at=/\B([A-Z])/g,ot=et((function(e){return e.replace(at,"-$1").toLowerCase()})),rt=et((function(e){return e.charAt(0).toUpperCase()+e.slice(1)}));function it(e,t){if(t)return e(t)?e(t):t.includes("-")?e(rt(nt(t))):e(rt(t))||e(ot(t))}var st=Object.assign({},Ve,Xe),lt=function(e){return st[e]},ct=function(e){return Xe[e]},ut=function(e){return Ve[e]},dt=function(e){return o.a.component(e)};function pt(e){return it(ct,e)}function mt(e){return it(ut,e)}function ht(e){return it(lt,e)}function gt(e){return it(dt,e)}function ft(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Promise.all(t.filter((function(e){return e})).map(function(){var e=Object(a.a)(regeneratorRuntime.mark((function e(t){var n;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(gt(t)||!ht(t)){e.next=5;break}return e.next=3,ht(t)();case 3:n=e.sent,o.a.component(t,n.default);case 5:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}()))}function yt(e,t){"undefined"!=typeof window&&window.__VUEPRESS__&&(window.__VUEPRESS__[e]=t)}var wt=n(126),vt=(n(261),n(217),n(130),n(208)),bt=n.n(vt),kt=n(209),xt=n.n(kt),Tt={created:function(){if(this.siteMeta=this.$site.headTags.filter((function(e){return"meta"===Object(wt.a)(e,1)[0]})).map((function(e){var t=Object(wt.a)(e,2);t[0];return t[1]})),this.$ssrContext){var e=this.getMergedMetaTags();this.$ssrContext.title=this.$title,this.$ssrContext.lang=this.$lang,this.$ssrContext.pageMeta=(t=e)?t.map((function(e){var t="<meta";return Object.keys(e).forEach((function(n){t+=" ".concat(n,'="').concat(xt()(e[n]),'"')})),t+">"})).join("\n    "):"",this.$ssrContext.canonicalLink=It(this.$canonicalUrl)}var t},mounted:function(){this.currentMetaTags=Object(Je.a)(document.querySelectorAll("meta")),this.updateMeta(),this.updateCanonicalLink()},methods:{updateMeta:function(){document.title=this.$title,document.documentElement.lang=this.$lang;var e=this.getMergedMetaTags();this.currentMetaTags=jt(e,this.currentMetaTags)},getMergedMetaTags:function(){var e=this.$page.frontmatter.meta||[];return bt()([{name:"description",content:this.$description}],e,this.siteMeta,Dt)},updateCanonicalLink:function(){Mt(),this.$canonicalUrl&&document.head.insertAdjacentHTML("beforeend",It(this.$canonicalUrl))}},watch:{$page:function(){this.updateMeta(),this.updateCanonicalLink()}},beforeDestroy:function(){jt(null,this.currentMetaTags),Mt()}};function Mt(){var e=document.querySelector("link[rel='canonical']");e&&e.remove()}function It(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return e?'<link href="'.concat(e,'" rel="canonical" />'):""}function jt(e,t){if(t&&Object(Je.a)(t).filter((function(e){return e.parentNode===document.head})).forEach((function(e){return document.head.removeChild(e)})),e)return e.map((function(e){var t=document.createElement("meta");return Object.keys(e).forEach((function(n){t.setAttribute(n,e[n])})),document.head.appendChild(t),t}))}function Dt(e){for(var t=0,n=["name","property","itemprop"];t<n.length;t++){var a=n[t];if(e.hasOwnProperty(a))return e[a]+a}return JSON.stringify(e)}var zt=n(210),St=n.n(zt),Ct=(n(357),{mounted:function(){St.a.polyfill()}}),At=(n(95),n(91)),Et=n.n(At),Lt={mounted:function(){var e=this;Et.a.configure({showSpinner:!1}),this.$router.beforeEach((function(e,t,n){e.path===t.path||o.a.component(e.name)||Et.a.start(),n()})),this.$router.afterEach((function(){Et.a.done(),e.isSidebarOpen=!1}))}};function _t(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}n(89);function Nt(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function Ot(e,t,n){return t&&Nt(e.prototype,t),n&&Nt(e,n),Object.defineProperty(e,"prototype",{writable:!1}),e}n(92),n(98);var Pt=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},Kt=function(e){return"IMG"===e.tagName},qt=function(e){return e&&1===e.nodeType},Rt=function(e){return".svg"===(e.currentSrc||e.src).substr(-4).toLowerCase()},Ut=function(e){try{return Array.isArray(e)?e.filter(Kt):function(e){return NodeList.prototype.isPrototypeOf(e)}(e)?[].slice.call(e).filter(Kt):qt(e)?[e].filter(Kt):"string"==typeof e?[].slice.call(document.querySelectorAll(e)).filter(Kt):[]}catch(e){throw new TypeError("The provided selector is invalid.\nExpects a CSS selector, a Node element, a NodeList or an array.\nSee: https://github.com/francoischalifour/medium-zoom")}},Wt=function(e){var t=document.createElement("div");return t.classList.add("medium-zoom-overlay"),t.style.background=e,t},Ft=function(e){var t=e.getBoundingClientRect(),n=t.top,a=t.left,o=t.width,r=t.height,i=e.cloneNode(),s=window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0,l=window.pageXOffset||document.documentElement.scrollLeft||document.body.scrollLeft||0;return i.removeAttribute("id"),i.style.position="absolute",i.style.top=n+s+"px",i.style.left=a+l+"px",i.style.width=o+"px",i.style.height=r+"px",i.style.transform="",i},Yt=function(e,t){var n=Pt({bubbles:!1,cancelable:!1,detail:void 0},t);if("function"==typeof window.CustomEvent)return new CustomEvent(e,n);var a=document.createEvent("CustomEvent");return a.initCustomEvent(e,n.bubbles,n.cancelable,n.detail),a};!function(e,t){void 0===t&&(t={});var n=t.insertAt;if(e&&"undefined"!=typeof document){var a=document.head||document.getElementsByTagName("head")[0],o=document.createElement("style");o.type="text/css","top"===n&&a.firstChild?a.insertBefore(o,a.firstChild):a.appendChild(o),o.styleSheet?o.styleSheet.cssText=e:o.appendChild(document.createTextNode(e))}}(".medium-zoom-overlay{position:fixed;top:0;right:0;bottom:0;left:0;opacity:0;transition:opacity .3s;will-change:opacity}.medium-zoom--opened .medium-zoom-overlay{cursor:pointer;cursor:zoom-out;opacity:1}.medium-zoom-image{cursor:pointer;cursor:zoom-in;transition:transform .3s cubic-bezier(.2,0,.2,1)!important}.medium-zoom-image--hidden{visibility:hidden}.medium-zoom-image--opened{position:relative;cursor:pointer;cursor:zoom-out;will-change:transform}");var Bt=function e(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},a=window.Promise||function(e){function t(){}e(t,t)},o=function(e){var t=e.target;t!==I?-1!==v.indexOf(t)&&g({target:t}):h()},r=function(){if(!k&&M.original){var e=window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0;Math.abs(x-e)>T.scrollOffset&&setTimeout(h,150)}},i=function(e){var t=e.key||e.keyCode;"Escape"!==t&&"Esc"!==t&&27!==t||h()},s=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e;if(e.background&&(I.style.background=e.background),e.container&&e.container instanceof Object&&(t.container=Pt({},T.container,e.container)),e.template){var n=qt(e.template)?e.template:document.querySelector(e.template);t.template=n}return T=Pt({},T,t),v.forEach((function(e){e.dispatchEvent(Yt("medium-zoom:update",{detail:{zoom:j}}))})),j},l=function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return e(Pt({},T,t))},c=function(){for(var e=arguments.length,t=Array(e),n=0;n<e;n++)t[n]=arguments[n];var a=t.reduce((function(e,t){return[].concat(e,Ut(t))}),[]);return a.filter((function(e){return-1===v.indexOf(e)})).forEach((function(e){v.push(e),e.classList.add("medium-zoom-image")})),b.forEach((function(e){var t=e.type,n=e.listener,o=e.options;a.forEach((function(e){e.addEventListener(t,n,o)}))})),j},u=function(){for(var e=arguments.length,t=Array(e),n=0;n<e;n++)t[n]=arguments[n];M.zoomed&&h();var a=t.length>0?t.reduce((function(e,t){return[].concat(e,Ut(t))}),[]):v;return a.forEach((function(e){e.classList.remove("medium-zoom-image"),e.dispatchEvent(Yt("medium-zoom:detach",{detail:{zoom:j}}))})),v=v.filter((function(e){return-1===a.indexOf(e)})),j},d=function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return v.forEach((function(a){a.addEventListener("medium-zoom:"+e,t,n)})),b.push({type:"medium-zoom:"+e,listener:t,options:n}),j},p=function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return v.forEach((function(a){a.removeEventListener("medium-zoom:"+e,t,n)})),b=b.filter((function(n){return!(n.type==="medium-zoom:"+e&&n.listener.toString()===t.toString())})),j},m=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e.target,n=function(){var e={width:document.documentElement.clientWidth,height:document.documentElement.clientHeight,left:0,top:0,right:0,bottom:0},t=void 0,n=void 0;if(T.container)if(T.container instanceof Object)t=(e=Pt({},e,T.container)).width-e.left-e.right-2*T.margin,n=e.height-e.top-e.bottom-2*T.margin;else{var a=(qt(T.container)?T.container:document.querySelector(T.container)).getBoundingClientRect(),o=a.width,r=a.height,i=a.left,s=a.top;e=Pt({},e,{width:o,height:r,left:i,top:s})}t=t||e.width-2*T.margin,n=n||e.height-2*T.margin;var l=M.zoomedHd||M.original,c=Rt(l)?t:l.naturalWidth||t,u=Rt(l)?n:l.naturalHeight||n,d=l.getBoundingClientRect(),p=d.top,m=d.left,h=d.width,g=d.height,f=Math.min(c,t)/h,y=Math.min(u,n)/g,w=Math.min(f,y),v="scale("+w+") translate3d("+((t-h)/2-m+T.margin+e.left)/w+"px, "+((n-g)/2-p+T.margin+e.top)/w+"px, 0)";M.zoomed.style.transform=v,M.zoomedHd&&(M.zoomedHd.style.transform=v)};return new a((function(e){if(t&&-1===v.indexOf(t))e(j);else{if(M.zoomed)e(j);else{if(t)M.original=t;else{if(!(v.length>0))return void e(j);var a=v;M.original=a[0]}if(M.original.dispatchEvent(Yt("medium-zoom:open",{detail:{zoom:j}})),x=window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0,k=!0,M.zoomed=Ft(M.original),document.body.appendChild(I),T.template){var o=qt(T.template)?T.template:document.querySelector(T.template);M.template=document.createElement("div"),M.template.appendChild(o.content.cloneNode(!0)),document.body.appendChild(M.template)}if(document.body.appendChild(M.zoomed),window.requestAnimationFrame((function(){document.body.classList.add("medium-zoom--opened")})),M.original.classList.add("medium-zoom-image--hidden"),M.zoomed.classList.add("medium-zoom-image--opened"),M.zoomed.addEventListener("click",h),M.zoomed.addEventListener("transitionend",(function t(){k=!1,M.zoomed.removeEventListener("transitionend",t),M.original.dispatchEvent(Yt("medium-zoom:opened",{detail:{zoom:j}})),e(j)})),M.original.getAttribute("data-zoom-src")){M.zoomedHd=M.zoomed.cloneNode(),M.zoomedHd.removeAttribute("srcset"),M.zoomedHd.removeAttribute("sizes"),M.zoomedHd.src=M.zoomed.getAttribute("data-zoom-src"),M.zoomedHd.onerror=function(){clearInterval(r),console.warn("Unable to reach the zoom image target "+M.zoomedHd.src),M.zoomedHd=null,n()};var r=setInterval((function(){M.zoomedHd.complete&&(clearInterval(r),M.zoomedHd.classList.add("medium-zoom-image--opened"),M.zoomedHd.addEventListener("click",h),document.body.appendChild(M.zoomedHd),n())}),10)}else if(M.original.hasAttribute("srcset")){M.zoomedHd=M.zoomed.cloneNode(),M.zoomedHd.removeAttribute("sizes"),M.zoomedHd.removeAttribute("loading");var i=M.zoomedHd.addEventListener("load",(function(){M.zoomedHd.removeEventListener("load",i),M.zoomedHd.classList.add("medium-zoom-image--opened"),M.zoomedHd.addEventListener("click",h),document.body.appendChild(M.zoomedHd),n()}))}else n()}}}))},h=function(){return new a((function(e){if(!k&&M.original){k=!0,document.body.classList.remove("medium-zoom--opened"),M.zoomed.style.transform="",M.zoomedHd&&(M.zoomedHd.style.transform=""),M.template&&(M.template.style.transition="opacity 150ms",M.template.style.opacity=0),M.original.dispatchEvent(Yt("medium-zoom:close",{detail:{zoom:j}})),M.zoomed.addEventListener("transitionend",(function t(){M.original.classList.remove("medium-zoom-image--hidden"),document.body.removeChild(M.zoomed),M.zoomedHd&&document.body.removeChild(M.zoomedHd),document.body.removeChild(I),M.zoomed.classList.remove("medium-zoom-image--opened"),M.template&&document.body.removeChild(M.template),k=!1,M.zoomed.removeEventListener("transitionend",t),M.original.dispatchEvent(Yt("medium-zoom:closed",{detail:{zoom:j}})),M.original=null,M.zoomed=null,M.zoomedHd=null,M.template=null,e(j)}))}else e(j)}))},g=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e.target;return M.original?h():m({target:t})},f=function(){return T},y=function(){return v},w=function(){return M.original},v=[],b=[],k=!1,x=0,T=n,M={original:null,zoomed:null,zoomedHd:null,template:null};"[object Object]"===Object.prototype.toString.call(t)?T=t:(t||"string"==typeof t)&&c(t),T=Pt({margin:0,background:"#fff",scrollOffset:40,container:null,template:null},T);var I=Wt(T.background);document.addEventListener("click",o),document.addEventListener("keyup",i),document.addEventListener("scroll",r),window.addEventListener("resize",h);var j={open:m,close:h,toggle:g,update:s,clone:l,attach:c,detach:u,on:d,off:p,getOptions:f,getImages:y,getZoomedImage:w};return j},Gt=".content__default img",Zt=JSON.parse("{}"),Ht=Number("500"),Qt=function(){function e(){_t(this,e),this.instance=null}return Ot(e,[{key:"update",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:Gt;"undefined"!=typeof window&&(null===this.instance?this.instance=Bt(e,Zt):(this.instance.detach(),this.instance.attach(e)))}},{key:"updateDelay",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:Gt,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Ht;setTimeout((function(){return e.update(t)}),n)}}]),e}(),$t=(n(359),{watch:{"$page.path":function(){void 0!==this.$vuepress.mediumZoom&&this.$vuepress.mediumZoom.updateDelay()}},mounted:function(){this.$vuepress.mediumZoom=new Qt,this.$vuepress.mediumZoom.updateDelay()}}),Jt=n(136),Vt=(n(362),{props:{parent:Object,code:String,options:{align:String,color:String,backgroundTransition:Boolean,backgroundColor:String,successText:String,staticIcon:Boolean}},data:function(){return{success:!1,originalBackground:null,originalTransition:null}},computed:{alignStyle:function(){var e={};return e[this.options.align]="7.5px",e},iconClass:function(){return this.options.staticIcon?"":"hover"}},mounted:function(){this.originalTransition=this.parent.style.transition,this.originalBackground=this.parent.style.background},beforeDestroy:function(){this.parent.style.transition=this.originalTransition,this.parent.style.background=this.originalBackground},methods:{hexToRgb:function(e){var t=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(e);return t?{r:parseInt(t[1],16),g:parseInt(t[2],16),b:parseInt(t[3],16)}:null},copyToClipboard:function(e){var t=this;if(navigator.clipboard)navigator.clipboard.writeText(this.code).then((function(){t.setSuccessTransitions()}),(function(){}));else{var n=document.createElement("textarea");document.body.appendChild(n),n.value=this.code,n.select(),document.execCommand("Copy"),n.remove(),this.setSuccessTransitions()}},setSuccessTransitions:function(){var e=this;if(clearTimeout(this.successTimeout),this.options.backgroundTransition){this.parent.style.transition="background 350ms";var t=this.hexToRgb(this.options.backgroundColor);this.parent.style.background="rgba(".concat(t.r,", ").concat(t.g,", ").concat(t.b,", 0.1)")}this.success=!0,this.successTimeout=setTimeout((function(){e.options.backgroundTransition&&(e.parent.style.background=e.originalBackground,e.parent.style.transition=e.originalTransition),e.success=!1}),500)}}}),Xt=(n(364),n(19)),en=Object(Xt.a)(Vt,(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"code-copy"},[n("svg",{class:e.iconClass,style:e.alignStyle,attrs:{xmlns:"http://www.w3.org/2000/svg",width:"24",height:"24",viewBox:"0 0 24 24"},on:{click:e.copyToClipboard}},[n("path",{attrs:{fill:"none",d:"M0 0h24v24H0z"}}),e._v(" "),n("path",{attrs:{fill:e.options.color,d:"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm-1 4l6 6v10c0 1.1-.9 2-2 2H7.99C6.89 23 6 22.1 6 21l.01-14c0-1.1.89-2 1.99-2h7zm-1 7h5.5L14 6.5V12z"}})]),e._v(" "),n("span",{class:e.success?"success":"",style:e.alignStyle},[e._v("\n        "+e._s(e.options.successText)+"\n    ")])])}),[],!1,null,"49140617",null).exports,tn=(n(365),[Tt,Ct,Lt,$t,{updated:function(){this.update()},methods:{update:function(){setTimeout((function(){document.querySelectorAll('div[class*="language-"] pre').forEach((function(e){if(!e.classList.contains("code-copy-added")){var t=new(o.a.extend(en));t.options=Object(Jt.a)({},{align:"bottom",color:"#27b1ff",backgroundTransition:!0,backgroundColor:"#0075b8",successText:"Copied!",staticIcon:!1}),t.code=e.innerText,t.parent=e,t.$mount(),e.classList.add("code-copy-added"),e.appendChild(t.$el)}}))}),100)}}}]),nn={name:"GlobalLayout",computed:{layout:function(){var e=this.getLayout();return yt("layout",e),o.a.component(e)}},methods:{getLayout:function(){if(this.$page.path){var e=this.$page.frontmatter.layout;return e&&(this.$vuepress.getLayoutAsyncComponent(e)||this.$vuepress.getVueComponent(e))?e:"Layout"}return"NotFound"}}},an=Object(Xt.a)(nn,(function(){var e=this.$createElement;return(this._self._c||e)(this.layout,{tag:"component"})}),[],!1,null,null,null).exports;!function(e,t,n){var a;switch(t){case"components":e[t]||(e[t]={}),Object.assign(e[t],n);break;case"mixins":e[t]||(e[t]=[]),(a=e[t]).push.apply(a,Object(Je.a)(n));break;default:throw new Error("Unknown option name.")}}(an,"mixins",tn);var on=[{name:"v-3140ed9c",path:"/",component:an,beforeEnter:function(e,t,n){ft("Home","v-3140ed9c").then(n)}},{path:"/index.html",redirect:"/"},{name:"v-5ff30963",path:"/blogs/2022-02-01-kestra-opensource.html",component:an,beforeEnter:function(e,t,n){ft("BlogsPost","v-5ff30963").then(n)}},{name:"v-92cbb91e",path:"/blogs/2022-02-22-leroy-merlin-usage-kestra.html",component:an,beforeEnter:function(e,t,n){ft("BlogsPost","v-92cbb91e").then(n)}},{name:"v-20b6d043",path:"/blogs/2022-03-14-kestra-0.4.0-jdbc-batch-vertexai-flow-dependencies.html",component:an,beforeEnter:function(e,t,n){ft("BlogsPost","v-20b6d043").then(n)}},{name:"v-a0b325ba",path:"/blogs/2022-04-05-debezium-without-kafka-connect.html",component:an,beforeEnter:function(e,t,n){ft("BlogsPost","v-a0b325ba").then(n)}},{name:"v-b5fa0b7a",path:"/blogs/2022-04-27-etl-vs-elt.html",component:an,beforeEnter:function(e,t,n){ft("BlogsPost","v-b5fa0b7a").then(n)}},{name:"v-5f52623a",path:"/blogs/2022-06-21-light-architecture.html",component:an,beforeEnter:function(e,t,n){ft("BlogsPost","v-5f52623a").then(n)}},{name:"v-4b2ede63",path:"/blogs/2022-06-28-tips-kafka-streams-distributed.html",component:an,beforeEnter:function(e,t,n){ft("BlogsPost","v-4b2ede63").then(n)}},{name:"v-bbb01a3a",path:"/blogs/2022-10-05-kestra-snowflake.html",component:an,beforeEnter:function(e,t,n){ft("BlogsPost","v-bbb01a3a").then(n)}},{name:"v-1af8f4dc",path:"/blogs/",component:an,beforeEnter:function(e,t,n){ft("BlogsList","v-1af8f4dc").then(n)}},{path:"/blogs/index.html",redirect:"/blogs/"},{name:"v-d54e12fa",path:"/community.html",component:an,beforeEnter:function(e,t,n){ft("Community","v-d54e12fa").then(n)}},{name:"v-79ae536f",path:"/company/about-us.html",component:an,beforeEnter:function(e,t,n){ft("CompanyAbout","v-79ae536f").then(n)}},{name:"v-aab5aafa",path:"/company/careers.html",component:an,beforeEnter:function(e,t,n){ft("CompanyCareers","v-aab5aafa").then(n)}},{name:"v-15a50223",path:"/company/careers/developper-advocate.html",component:an,beforeEnter:function(e,t,n){ft("CareerDetail","v-15a50223").then(n)}},{name:"v-9438ad9a",path:"/company/careers/senior-devops-engineer.html",component:an,beforeEnter:function(e,t,n){ft("CareerDetail","v-9438ad9a").then(n)}},{name:"v-2414668d",path:"/company/careers/senior-full-stack-engineer.html",component:an,beforeEnter:function(e,t,n){ft("CareerDetail","v-2414668d").then(n)}},{name:"v-0b50773a",path:"/company/contact.html",component:an,beforeEnter:function(e,t,n){ft("CompanyContact","v-0b50773a").then(n)}},{name:"v-135cabfa",path:"/company/cookie-policy.html",component:an,beforeEnter:function(e,t,n){ft("CompanyLegals","v-135cabfa").then(n)}},{name:"v-f3216c06",path:"/company/privacy-policy.html",component:an,beforeEnter:function(e,t,n){ft("CompanyLegals","v-f3216c06").then(n)}},{name:"v-24306408",path:"/docs/",component:an,beforeEnter:function(e,t,n){ft("Layout","v-24306408").then(n)}},{path:"/docs/index.html",redirect:"/docs/"},{name:"v-04b425b0",path:"/docs/administrator-guide/",component:an,beforeEnter:function(e,t,n){ft("Layout","v-04b425b0").then(n)}},{path:"/docs/administrator-guide/index.html",redirect:"/docs/administrator-guide/"},{name:"v-c4be06f0",path:"/docs/administrator-guide/configuration/",component:an,beforeEnter:function(e,t,n){ft("Layout","v-c4be06f0").then(n)}},{path:"/docs/administrator-guide/configuration/index.html",redirect:"/docs/administrator-guide/configuration/"},{name:"v-65f94028",path:"/docs/administrator-guide/configuration/databases/",component:an,beforeEnter:function(e,t,n){ft("Layout","v-65f94028").then(n)}},{path:"/docs/administrator-guide/configuration/databases/index.html",redirect:"/docs/administrator-guide/configuration/databases/"},{name:"v-6e805448",path:"/docs/administrator-guide/configuration/elasticsearch/",component:an,beforeEnter:function(e,t,n){ft("Layout","v-6e805448").then(n)}},{path:"/docs/administrator-guide/configuration/elasticsearch/index.html",redirect:"/docs/administrator-guide/configuration/elasticsearch/"},{name:"v-3bf54632",path:"/docs/administrator-guide/configuration/enterprise-edition/",component:an,beforeEnter:function(e,t,n){ft("Layout","v-3bf54632").then(n)}},{path:"/docs/administrator-guide/configuration/enterprise-edition/index.html",redirect:"/docs/administrator-guide/configuration/enterprise-edition/"},{name:"v-72b722e0",path:"/docs/administrator-guide/configuration/enterprise-edition/authentifications/",component:an,beforeEnter:function(e,t,n){ft("Layout","v-72b722e0").then(n)}},{path:"/docs/administrator-guide/configuration/enterprise-edition/authentifications/index.html",redirect:"/docs/administrator-guide/configuration/enterprise-edition/authentifications/"},{name:"v-6c45e6ad",path:"/docs/administrator-guide/configuration/enterprise-edition/authentifications/auths/oidc.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-6c45e6ad").then(n)}},{name:"v-f088926c",path:"/docs/administrator-guide/configuration/enterprise-edition/secrets/",component:an,beforeEnter:function(e,t,n){ft("Layout","v-f088926c").then(n)}},{path:"/docs/administrator-guide/configuration/enterprise-edition/secrets/index.html",redirect:"/docs/administrator-guide/configuration/enterprise-edition/secrets/"},{name:"v-940495a4",path:"/docs/administrator-guide/configuration/enterprise-edition/secrets/elasticsearch/",component:an,beforeEnter:function(e,t,n){ft("Layout","v-940495a4").then(n)}},{path:"/docs/administrator-guide/configuration/enterprise-edition/secrets/elasticsearch/index.html",redirect:"/docs/administrator-guide/configuration/enterprise-edition/secrets/elasticsearch/"},{name:"v-68229fc4",path:"/docs/administrator-guide/configuration/enterprise-edition/secrets/vault/",component:an,beforeEnter:function(e,t,n){ft("Layout","v-68229fc4").then(n)}},{path:"/docs/administrator-guide/configuration/enterprise-edition/secrets/vault/index.html",redirect:"/docs/administrator-guide/configuration/enterprise-edition/secrets/vault/"},{name:"v-f1ea5734",path:"/docs/administrator-guide/configuration/enterprise-edition/workers/",component:an,beforeEnter:function(e,t,n){ft("Layout","v-f1ea5734").then(n)}},{path:"/docs/administrator-guide/configuration/enterprise-edition/workers/index.html",redirect:"/docs/administrator-guide/configuration/enterprise-edition/workers/"},{name:"v-67c3e868",path:"/docs/administrator-guide/configuration/kafka/",component:an,beforeEnter:function(e,t,n){ft("Layout","v-67c3e868").then(n)}},{path:"/docs/administrator-guide/configuration/kafka/index.html",redirect:"/docs/administrator-guide/configuration/kafka/"},{name:"v-636e3ee8",path:"/docs/administrator-guide/configuration/micronaut/",component:an,beforeEnter:function(e,t,n){ft("Layout","v-636e3ee8").then(n)}},{path:"/docs/administrator-guide/configuration/micronaut/index.html",redirect:"/docs/administrator-guide/configuration/micronaut/"},{name:"v-3ef378d0",path:"/docs/administrator-guide/configuration/others/",component:an,beforeEnter:function(e,t,n){ft("Layout","v-3ef378d0").then(n)}},{path:"/docs/administrator-guide/configuration/others/index.html",redirect:"/docs/administrator-guide/configuration/others/"},{name:"v-f99b39f0",path:"/docs/administrator-guide/configuration/storage/",component:an,beforeEnter:function(e,t,n){ft("Layout","v-f99b39f0").then(n)}},{path:"/docs/administrator-guide/configuration/storage/index.html",redirect:"/docs/administrator-guide/configuration/storage/"},{name:"v-55acd5fe",path:"/docs/administrator-guide/deployment/",component:an,beforeEnter:function(e,t,n){ft("Layout","v-55acd5fe").then(n)}},{path:"/docs/administrator-guide/deployment/index.html",redirect:"/docs/administrator-guide/deployment/"},{name:"v-6842f008",path:"/docs/administrator-guide/deployment/docker/",component:an,beforeEnter:function(e,t,n){ft("Layout","v-6842f008").then(n)}},{path:"/docs/administrator-guide/deployment/docker/index.html",redirect:"/docs/administrator-guide/deployment/docker/"},{name:"v-7854a970",path:"/docs/administrator-guide/deployment/kubernetes/",component:an,beforeEnter:function(e,t,n){ft("Layout","v-7854a970").then(n)}},{path:"/docs/administrator-guide/deployment/kubernetes/index.html",redirect:"/docs/administrator-guide/deployment/kubernetes/"},{name:"v-026cac48",path:"/docs/administrator-guide/deployment/manual/",component:an,beforeEnter:function(e,t,n){ft("Layout","v-026cac48").then(n)}},{path:"/docs/administrator-guide/deployment/manual/index.html",redirect:"/docs/administrator-guide/deployment/manual/"},{name:"v-db882e10",path:"/docs/administrator-guide/monitoring/",component:an,beforeEnter:function(e,t,n){ft("Layout","v-db882e10").then(n)}},{path:"/docs/administrator-guide/monitoring/index.html",redirect:"/docs/administrator-guide/monitoring/"},{name:"v-69b05e43",path:"/docs/administrator-guide/monitoring/debug.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-69b05e43").then(n)}},{name:"v-12b44ec8",path:"/docs/administrator-guide/servers/",component:an,beforeEnter:function(e,t,n){ft("Layout","v-12b44ec8").then(n)}},{path:"/docs/administrator-guide/servers/index.html",redirect:"/docs/administrator-guide/servers/"},{name:"v-10c3a470",path:"/docs/api-guide/",component:an,beforeEnter:function(e,t,n){ft("Layout","v-10c3a470").then(n)}},{path:"/docs/api-guide/index.html",redirect:"/docs/api-guide/"},{name:"v-be84a670",path:"/docs/architecture/",component:an,beforeEnter:function(e,t,n){ft("Layout","v-be84a670").then(n)}},{path:"/docs/architecture/index.html",redirect:"/docs/architecture/"},{name:"v-11cc6b58",path:"/docs/concepts/",component:an,beforeEnter:function(e,t,n){ft("Layout","v-11cc6b58").then(n)}},{path:"/docs/concepts/index.html",redirect:"/docs/concepts/"},{name:"v-a42a4c0e",path:"/docs/concepts/executions.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-a42a4c0e").then(n)}},{name:"v-631e077a",path:"/docs/concepts/flows.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-631e077a").then(n)}},{name:"v-477f7948",path:"/docs/developer-guide/",component:an,beforeEnter:function(e,t,n){ft("Layout","v-477f7948").then(n)}},{path:"/docs/developer-guide/index.html",redirect:"/docs/developer-guide/"},{name:"v-2bdad6a8",path:"/docs/developer-guide/best-practice/",component:an,beforeEnter:function(e,t,n){ft("Layout","v-2bdad6a8").then(n)}},{path:"/docs/developer-guide/best-practice/index.html",redirect:"/docs/developer-guide/best-practice/"},{name:"v-587c915c",path:"/docs/developer-guide/conditions/",component:an,beforeEnter:function(e,t,n){ft("Layout","v-587c915c").then(n)}},{path:"/docs/developer-guide/conditions/index.html",redirect:"/docs/developer-guide/conditions/"},{name:"v-5a7b3ee8",path:"/docs/developer-guide/documentation/",component:an,beforeEnter:function(e,t,n){ft("Layout","v-5a7b3ee8").then(n)}},{path:"/docs/developer-guide/documentation/index.html",redirect:"/docs/developer-guide/documentation/"},{name:"v-550d8c48",path:"/docs/developer-guide/errors-handling/",component:an,beforeEnter:function(e,t,n){ft("Layout","v-550d8c48").then(n)}},{path:"/docs/developer-guide/errors-handling/index.html",redirect:"/docs/developer-guide/errors-handling/"},{name:"v-8488a8b4",path:"/docs/developer-guide/flow/",component:an,beforeEnter:function(e,t,n){ft("Layout","v-8488a8b4").then(n)}},{path:"/docs/developer-guide/flow/index.html",redirect:"/docs/developer-guide/flow/"},{name:"v-2a1991f2",path:"/docs/developer-guide/flowable/",component:an,beforeEnter:function(e,t,n){ft("Layout","v-2a1991f2").then(n)}},{path:"/docs/developer-guide/flowable/index.html",redirect:"/docs/developer-guide/flowable/"},{name:"v-7db39c08",path:"/docs/developer-guide/helpers/",component:an,beforeEnter:function(e,t,n){ft("Layout","v-7db39c08").then(n)}},{path:"/docs/developer-guide/helpers/index.html",redirect:"/docs/developer-guide/helpers/"},{name:"v-019a6270",path:"/docs/developer-guide/inputs/",component:an,beforeEnter:function(e,t,n){ft("Layout","v-019a6270").then(n)}},{path:"/docs/developer-guide/inputs/index.html",redirect:"/docs/developer-guide/inputs/"},{name:"v-a824f470",path:"/docs/developer-guide/listeners/",component:an,beforeEnter:function(e,t,n){ft("Layout","v-a824f470").then(n)}},{path:"/docs/developer-guide/listeners/index.html",redirect:"/docs/developer-guide/listeners/"},{name:"v-92b626b0",path:"/docs/developer-guide/outputs/",component:an,beforeEnter:function(e,t,n){ft("Layout","v-92b626b0").then(n)}},{path:"/docs/developer-guide/outputs/index.html",redirect:"/docs/developer-guide/outputs/"},{name:"v-7e6b41b0",path:"/docs/developer-guide/retries/",component:an,beforeEnter:function(e,t,n){ft("Layout","v-7e6b41b0").then(n)}},{path:"/docs/developer-guide/retries/index.html",redirect:"/docs/developer-guide/retries/"},{name:"v-2b85cc88",path:"/docs/developer-guide/templates/",component:an,beforeEnter:function(e,t,n){ft("Layout","v-2b85cc88").then(n)}},{path:"/docs/developer-guide/templates/index.html",redirect:"/docs/developer-guide/templates/"},{name:"v-084d894c",path:"/docs/developer-guide/triggers/",component:an,beforeEnter:function(e,t,n){ft("Layout","v-084d894c").then(n)}},{path:"/docs/developer-guide/triggers/index.html",redirect:"/docs/developer-guide/triggers/"},{name:"v-801f5ac2",path:"/docs/developer-guide/triggers/flow.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-801f5ac2").then(n)}},{name:"v-4a03194d",path:"/docs/developer-guide/triggers/schedule.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-4a03194d").then(n)}},{name:"v-53d2e383",path:"/docs/developer-guide/triggers/webhook.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-53d2e383").then(n)}},{name:"v-472d66c8",path:"/docs/developer-guide/variables/",component:an,beforeEnter:function(e,t,n){ft("Layout","v-472d66c8").then(n)}},{path:"/docs/developer-guide/variables/index.html",redirect:"/docs/developer-guide/variables/"},{name:"v-64153d4f",path:"/docs/developer-guide/variables/basic-usage.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-64153d4f").then(n)}},{name:"v-854686b0",path:"/docs/developer-guide/variables/deprecated-handlebars/",component:an,beforeEnter:function(e,t,n){ft("Layout","v-854686b0").then(n)}},{path:"/docs/developer-guide/variables/deprecated-handlebars/index.html",redirect:"/docs/developer-guide/variables/deprecated-handlebars/"},{name:"v-23612046",path:"/docs/developer-guide/variables/deprecated-handlebars/boolean.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-23612046").then(n)}},{name:"v-379f3ffa",path:"/docs/developer-guide/variables/deprecated-handlebars/date.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-379f3ffa").then(n)}},{name:"v-500babc3",path:"/docs/developer-guide/variables/deprecated-handlebars/iterations.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-500babc3").then(n)}},{name:"v-a9bb447a",path:"/docs/developer-guide/variables/deprecated-handlebars/json.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-a9bb447a").then(n)}},{name:"v-375945a3",path:"/docs/developer-guide/variables/deprecated-handlebars/number.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-375945a3").then(n)}},{name:"v-5ce9c2ba",path:"/docs/developer-guide/variables/deprecated-handlebars/string.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-5ce9c2ba").then(n)}},{name:"v-2d82e9df",path:"/docs/developer-guide/variables/deprecated-handlebars/use.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-2d82e9df").then(n)}},{name:"v-6ad1b17a",path:"/docs/developer-guide/variables/deprecated-handlebars/vars.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-6ad1b17a").then(n)}},{name:"v-03cc083c",path:"/docs/developer-guide/variables/filter/",component:an,beforeEnter:function(e,t,n){ft("Layout","v-03cc083c").then(n)}},{path:"/docs/developer-guide/variables/filter/index.html",redirect:"/docs/developer-guide/variables/filter/"},{name:"v-7048180f",path:"/docs/developer-guide/variables/filter/abbreviate.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-7048180f").then(n)}},{name:"v-f7b823fa",path:"/docs/developer-guide/variables/filter/abs.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-f7b823fa").then(n)}},{name:"v-32f7ff6b",path:"/docs/developer-guide/variables/filter/base64decode.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-32f7ff6b").then(n)}},{name:"v-1d9a471b",path:"/docs/developer-guide/variables/filter/base64encode.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-1d9a471b").then(n)}},{name:"v-25d11766",path:"/docs/developer-guide/variables/filter/capitalize.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-25d11766").then(n)}},{name:"v-37ca54ba",path:"/docs/developer-guide/variables/filter/chunk.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-37ca54ba").then(n)}},{name:"v-407e4c63",path:"/docs/developer-guide/variables/filter/className.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-407e4c63").then(n)}},{name:"v-ee9465ee",path:"/docs/developer-guide/variables/filter/date.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-ee9465ee").then(n)}},{name:"v-0c942c63",path:"/docs/developer-guide/variables/filter/dateAdd.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-0c942c63").then(n)}},{name:"v-6a7e2aba",path:"/docs/developer-guide/variables/filter/default.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-6a7e2aba").then(n)}},{name:"v-b5fc07fa",path:"/docs/developer-guide/variables/filter/first.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-b5fc07fa").then(n)}},{name:"v-6aaaa611",path:"/docs/developer-guide/variables/filter/join.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-6aaaa611").then(n)}},{name:"v-a23bbe52",path:"/docs/developer-guide/variables/filter/jq.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-a23bbe52").then(n)}},{name:"v-013a3ed6",path:"/docs/developer-guide/variables/filter/json.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-013a3ed6").then(n)}},{name:"v-2436c27d",path:"/docs/developer-guide/variables/filter/keys.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-2436c27d").then(n)}},{name:"v-7ca4bf39",path:"/docs/developer-guide/variables/filter/last.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-7ca4bf39").then(n)}},{name:"v-9b3e234e",path:"/docs/developer-guide/variables/filter/length.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-9b3e234e").then(n)}},{name:"v-2727b023",path:"/docs/developer-guide/variables/filter/lower.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-2727b023").then(n)}},{name:"v-1ff105fa",path:"/docs/developer-guide/variables/filter/merge.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-1ff105fa").then(n)}},{name:"v-4b35295a",path:"/docs/developer-guide/variables/filter/number.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-4b35295a").then(n)}},{name:"v-8d2ddbb6",path:"/docs/developer-guide/variables/filter/numberFormat.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-8d2ddbb6").then(n)}},{name:"v-e365f37a",path:"/docs/developer-guide/variables/filter/replace.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-e365f37a").then(n)}},{name:"v-eb0176fa",path:"/docs/developer-guide/variables/filter/reverse.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-eb0176fa").then(n)}},{name:"v-a0e5effa",path:"/docs/developer-guide/variables/filter/rsort.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-a0e5effa").then(n)}},{name:"v-277041d2",path:"/docs/developer-guide/variables/filter/sha256.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-277041d2").then(n)}},{name:"v-4aab2c43",path:"/docs/developer-guide/variables/filter/slice.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-4aab2c43").then(n)}},{name:"v-6a8b44a3",path:"/docs/developer-guide/variables/filter/slugify.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-6a8b44a3").then(n)}},{name:"v-05829129",path:"/docs/developer-guide/variables/filter/sort.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-05829129").then(n)}},{name:"v-e36ba57a",path:"/docs/developer-guide/variables/filter/split.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-e36ba57a").then(n)}},{name:"v-74595f62",path:"/docs/developer-guide/variables/filter/substringAfter.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-74595f62").then(n)}},{name:"v-3b433f3a",path:"/docs/developer-guide/variables/filter/substringAfterLast.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-3b433f3a").then(n)}},{name:"v-c3d3ac7a",path:"/docs/developer-guide/variables/filter/substringBefore.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-c3d3ac7a").then(n)}},{name:"v-43215b83",path:"/docs/developer-guide/variables/filter/substringBeforeLast.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-43215b83").then(n)}},{name:"v-af16fdfa",path:"/docs/developer-guide/variables/filter/title.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-af16fdfa").then(n)}},{name:"v-290ae021",path:"/docs/developer-guide/variables/filter/trim.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-290ae021").then(n)}},{name:"v-a615a37a",path:"/docs/developer-guide/variables/filter/upper.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-a615a37a").then(n)}},{name:"v-8e6978ba",path:"/docs/developer-guide/variables/filter/urlencode.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-8e6978ba").then(n)}},{name:"v-1fe614e2",path:"/docs/developer-guide/variables/function/",component:an,beforeEnter:function(e,t,n){ft("Layout","v-1fe614e2").then(n)}},{path:"/docs/developer-guide/variables/function/index.html",redirect:"/docs/developer-guide/variables/function/"},{name:"v-0194b523",path:"/docs/developer-guide/variables/function/block.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-0194b523").then(n)}},{name:"v-028c2615",path:"/docs/developer-guide/variables/function/json.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-028c2615").then(n)}},{name:"v-5abd22fa",path:"/docs/developer-guide/variables/function/max.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-5abd22fa").then(n)}},{name:"v-95584f7a",path:"/docs/developer-guide/variables/function/min.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-95584f7a").then(n)}},{name:"v-26ff90c3",path:"/docs/developer-guide/variables/function/now.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-26ff90c3").then(n)}},{name:"v-2afbd45e",path:"/docs/developer-guide/variables/function/parent.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-2afbd45e").then(n)}},{name:"v-2d2dbf23",path:"/docs/developer-guide/variables/function/range.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-2d2dbf23").then(n)}},{name:"v-33246d6c",path:"/docs/developer-guide/variables/operator/",component:an,beforeEnter:function(e,t,n){ft("Layout","v-33246d6c").then(n)}},{path:"/docs/developer-guide/variables/operator/index.html",redirect:"/docs/developer-guide/variables/operator/"},{name:"v-97f5f47a",path:"/docs/developer-guide/variables/operator/comparisons.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-97f5f47a").then(n)}},{name:"v-34f53695",path:"/docs/developer-guide/variables/operator/concat.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-34f53695").then(n)}},{name:"v-c8549002",path:"/docs/developer-guide/variables/operator/contains.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-c8549002").then(n)}},{name:"v-b544102e",path:"/docs/developer-guide/variables/operator/is.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-b544102e").then(n)}},{name:"v-0d071783",path:"/docs/developer-guide/variables/operator/logic.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-0d071783").then(n)}},{name:"v-6fab4526",path:"/docs/developer-guide/variables/operator/math.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-6fab4526").then(n)}},{name:"v-a066783a",path:"/docs/developer-guide/variables/operator/not.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-a066783a").then(n)}},{name:"v-68153c43",path:"/docs/developer-guide/variables/operator/null-coalescing.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-68153c43").then(n)}},{name:"v-0aa012d1",path:"/docs/developer-guide/variables/operator/ternary-operator.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-0aa012d1").then(n)}},{name:"v-781b89e8",path:"/docs/developer-guide/variables/tag/",component:an,beforeEnter:function(e,t,n){ft("Layout","v-781b89e8").then(n)}},{path:"/docs/developer-guide/variables/tag/index.html",redirect:"/docs/developer-guide/variables/tag/"},{name:"v-2652c323",path:"/docs/developer-guide/variables/tag/block.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-2652c323").then(n)}},{name:"v-8587667a",path:"/docs/developer-guide/variables/tag/filter.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-8587667a").then(n)}},{name:"v-e12df7aa",path:"/docs/developer-guide/variables/tag/for.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-e12df7aa").then(n)}},{name:"v-33b417a3",path:"/docs/developer-guide/variables/tag/if.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-33b417a3").then(n)}},{name:"v-2b9b85e5",path:"/docs/developer-guide/variables/tag/macro.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-2b9b85e5").then(n)}},{name:"v-f3d3490e",path:"/docs/developer-guide/variables/tag/set.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-f3d3490e").then(n)}},{name:"v-6fae6643",path:"/docs/developer-guide/variables/tag/verbatim.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-6fae6643").then(n)}},{name:"v-2c735824",path:"/docs/developer-guide/variables/test/",component:an,beforeEnter:function(e,t,n){ft("Layout","v-2c735824").then(n)}},{path:"/docs/developer-guide/variables/test/index.html",redirect:"/docs/developer-guide/variables/test/"},{name:"v-4fe9ff3a",path:"/docs/developer-guide/variables/test/defined.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-4fe9ff3a").then(n)}},{name:"v-562d6fe3",path:"/docs/developer-guide/variables/test/empty.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-562d6fe3").then(n)}},{name:"v-416ac725",path:"/docs/developer-guide/variables/test/even.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-416ac725").then(n)}},{name:"v-f8095e16",path:"/docs/developer-guide/variables/test/iterable.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-f8095e16").then(n)}},{name:"v-47b2e3ee",path:"/docs/developer-guide/variables/test/json.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-47b2e3ee").then(n)}},{name:"v-0b5d6643",path:"/docs/developer-guide/variables/test/map.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-0b5d6643").then(n)}},{name:"v-3d85960b",path:"/docs/developer-guide/variables/test/null.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-3d85960b").then(n)}},{name:"v-720f7fba",path:"/docs/developer-guide/variables/test/odd.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-720f7fba").then(n)}},{name:"v-787eb528",path:"/docs/getting-started/",component:an,beforeEnter:function(e,t,n){ft("Layout","v-787eb528").then(n)}},{path:"/docs/getting-started/index.html",redirect:"/docs/getting-started/"},{name:"v-4e9ad7a0",path:"/docs/plugin-developer-guide/",component:an,beforeEnter:function(e,t,n){ft("Layout","v-4e9ad7a0").then(n)}},{path:"/docs/plugin-developer-guide/index.html",redirect:"/docs/plugin-developer-guide/"},{name:"v-af19e69c",path:"/docs/plugin-developer-guide/build/",component:an,beforeEnter:function(e,t,n){ft("Layout","v-af19e69c").then(n)}},{path:"/docs/plugin-developer-guide/build/index.html",redirect:"/docs/plugin-developer-guide/build/"},{name:"v-e5195c30",path:"/docs/plugin-developer-guide/conditions/",component:an,beforeEnter:function(e,t,n){ft("Layout","v-e5195c30").then(n)}},{path:"/docs/plugin-developer-guide/conditions/index.html",redirect:"/docs/plugin-developer-guide/conditions/"},{name:"v-74d8f83a",path:"/docs/plugin-developer-guide/flowable-task/",component:an,beforeEnter:function(e,t,n){ft("Layout","v-74d8f83a").then(n)}},{path:"/docs/plugin-developer-guide/flowable-task/index.html",redirect:"/docs/plugin-developer-guide/flowable-task/"},{name:"v-e228dff0",path:"/docs/plugin-developer-guide/gradle/",component:an,beforeEnter:function(e,t,n){ft("Layout","v-e228dff0").then(n)}},{path:"/docs/plugin-developer-guide/gradle/index.html",redirect:"/docs/plugin-developer-guide/gradle/"},{name:"v-51cba32a",path:"/docs/plugin-developer-guide/outputs/",component:an,beforeEnter:function(e,t,n){ft("Layout","v-51cba32a").then(n)}},{path:"/docs/plugin-developer-guide/outputs/index.html",redirect:"/docs/plugin-developer-guide/outputs/"},{name:"v-c38cdba0",path:"/docs/plugin-developer-guide/publish/",component:an,beforeEnter:function(e,t,n){ft("Layout","v-c38cdba0").then(n)}},{path:"/docs/plugin-developer-guide/publish/index.html",redirect:"/docs/plugin-developer-guide/publish/"},{name:"v-5cb2b138",path:"/docs/plugin-developer-guide/runnable-task/",component:an,beforeEnter:function(e,t,n){ft("Layout","v-5cb2b138").then(n)}},{path:"/docs/plugin-developer-guide/runnable-task/index.html",redirect:"/docs/plugin-developer-guide/runnable-task/"},{name:"v-2e06cf88",path:"/docs/plugin-developer-guide/triggers/",component:an,beforeEnter:function(e,t,n){ft("Layout","v-2e06cf88").then(n)}},{path:"/docs/plugin-developer-guide/triggers/index.html",redirect:"/docs/plugin-developer-guide/triggers/"},{name:"v-528bedd8",path:"/docs/plugin-developer-guide/unit-test/",component:an,beforeEnter:function(e,t,n){ft("Layout","v-528bedd8").then(n)}},{path:"/docs/plugin-developer-guide/unit-test/index.html",redirect:"/docs/plugin-developer-guide/unit-test/"},{name:"v-219eff68",path:"/docs/terraform/",component:an,beforeEnter:function(e,t,n){ft("Layout","v-219eff68").then(n)}},{path:"/docs/terraform/index.html",redirect:"/docs/terraform/"},{name:"v-7f4ed1e3",path:"/docs/terraform/data-sources/binding.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-7f4ed1e3").then(n)}},{name:"v-66dc4b5d",path:"/docs/terraform/data-sources/flow.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-66dc4b5d").then(n)}},{name:"v-3711fea3",path:"/docs/terraform/data-sources/group.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-3711fea3").then(n)}},{name:"v-6a782823",path:"/docs/terraform/data-sources/namespace.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-6a782823").then(n)}},{name:"v-27b76acd",path:"/docs/terraform/data-sources/role.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-27b76acd").then(n)}},{name:"v-2725e445",path:"/docs/terraform/data-sources/template.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-2725e445").then(n)}},{name:"v-1eda64e3",path:"/docs/terraform/data-sources/user.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-1eda64e3").then(n)}},{name:"v-19d6ff43",path:"/docs/terraform/guides/configurations.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-19d6ff43").then(n)}},{name:"v-3a854743",path:"/docs/terraform/guides/working-with-yaml.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-3a854743").then(n)}},{name:"v-dc92b792",path:"/docs/terraform/resources/binding.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-dc92b792").then(n)}},{name:"v-738f2343",path:"/docs/terraform/resources/flow.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-738f2343").then(n)}},{name:"v-7f0a4243",path:"/docs/terraform/resources/group.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-7f0a4243").then(n)}},{name:"v-43eb08ea",path:"/docs/terraform/resources/namespace.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-43eb08ea").then(n)}},{name:"v-3d69dc03",path:"/docs/terraform/resources/namespace_secret.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-3d69dc03").then(n)}},{name:"v-8f9c8b7a",path:"/docs/terraform/resources/role.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-8f9c8b7a").then(n)}},{name:"v-01ccd343",path:"/docs/terraform/resources/template.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-01ccd343").then(n)}},{name:"v-575b40ba",path:"/docs/terraform/resources/user.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-575b40ba").then(n)}},{name:"v-e2dba7ba",path:"/docs/terraform/resources/user_password.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-e2dba7ba").then(n)}},{name:"v-209f3a3c",path:"/docs/user-interface-guide/",component:an,beforeEnter:function(e,t,n){ft("Layout","v-209f3a3c").then(n)}},{path:"/docs/user-interface-guide/index.html",redirect:"/docs/user-interface-guide/"},{name:"v-147fc603",path:"/features/enterprise.html",component:an,beforeEnter:function(e,t,n){ft("FeaturesEnterprise","v-147fc603").then(n)}},{name:"v-ce2ac07a",path:"/features/features.html",component:an,beforeEnter:function(e,t,n){ft("FeaturesFeatures","v-ce2ac07a").then(n)}},{name:"v-4d379c23",path:"/features/usages.html",component:an,beforeEnter:function(e,t,n){ft("FeaturesUsage","v-4d379c23").then(n)}},{name:"v-8c82ad54",path:"/plugins/",component:an,beforeEnter:function(e,t,n){ft("Layout","v-8c82ad54").then(n)}},{path:"/plugins/index.html",redirect:"/plugins/"},{name:"v-cb94d530",path:"/plugins/core/",component:an,beforeEnter:function(e,t,n){ft("Layout","v-cb94d530").then(n)}},{path:"/plugins/core/index.html",redirect:"/plugins/core/"},{name:"v-afdbda3a",path:"/plugins/core/conditions/io.kestra.core.models.conditions.types.DateTimeBetweenCondition.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-afdbda3a").then(n)}},{name:"v-16365a03",path:"/plugins/core/conditions/io.kestra.core.models.conditions.types.DayWeekCondition.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-16365a03").then(n)}},{name:"v-077dee92",path:"/plugins/core/conditions/io.kestra.core.models.conditions.types.DayWeekInMonthCondition.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-077dee92").then(n)}},{name:"v-1813e7fa",path:"/plugins/core/conditions/io.kestra.core.models.conditions.types.ExecutionFlowCondition.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-1813e7fa").then(n)}},{name:"v-01b63a32",path:"/plugins/core/conditions/io.kestra.core.models.conditions.types.ExecutionNamespaceCondition.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-01b63a32").then(n)}},{name:"v-2ad254c3",path:"/plugins/core/conditions/io.kestra.core.models.conditions.types.ExecutionStatusCondition.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-2ad254c3").then(n)}},{name:"v-62e587fd",path:"/plugins/core/conditions/io.kestra.core.models.conditions.types.FlowCondition.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-62e587fd").then(n)}},{name:"v-26cecde3",path:"/plugins/core/conditions/io.kestra.core.models.conditions.types.FlowNamespaceCondition.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-26cecde3").then(n)}},{name:"v-44d81fa3",path:"/plugins/core/conditions/io.kestra.core.models.conditions.types.HasRetryAttemptCondition.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-44d81fa3").then(n)}},{name:"v-61ce6341",path:"/plugins/core/conditions/io.kestra.core.models.conditions.types.MultipleCondition.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-61ce6341").then(n)}},{name:"v-71a5b7ba",path:"/plugins/core/conditions/io.kestra.core.models.conditions.types.NotCondition.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-71a5b7ba").then(n)}},{name:"v-8448cf32",path:"/plugins/core/conditions/io.kestra.core.models.conditions.types.OrCondition.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-8448cf32").then(n)}},{name:"v-a441d7ce",path:"/plugins/core/conditions/io.kestra.core.models.conditions.types.VariableCondition.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-a441d7ce").then(n)}},{name:"v-775e78a3",path:"/plugins/core/conditions/io.kestra.core.models.conditions.types.WeekendCondition.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-775e78a3").then(n)}},{name:"v-40d34635",path:"/plugins/core/tasks/debugs/io.kestra.core.tasks.debugs.Echo.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-40d34635").then(n)}},{name:"v-a09528c2",path:"/plugins/core/tasks/debugs/io.kestra.core.tasks.debugs.Return.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-a09528c2").then(n)}},{name:"v-19408c3a",path:"/plugins/core/tasks/executions/io.kestra.core.tasks.executions.Counts.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-19408c3a").then(n)}},{name:"v-23bac36d",path:"/plugins/core/tasks/flows/io.kestra.core.tasks.flows.AllowFailure.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-23bac36d").then(n)}},{name:"v-1b25d55f",path:"/plugins/core/tasks/flows/io.kestra.core.tasks.flows.EachParallel.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-1b25d55f").then(n)}},{name:"v-1827886f",path:"/plugins/core/tasks/flows/io.kestra.core.tasks.flows.EachSequential.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-1827886f").then(n)}},{name:"v-3fc91bd3",path:"/plugins/core/tasks/flows/io.kestra.core.tasks.flows.Flow.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-3fc91bd3").then(n)}},{name:"v-4162bd61",path:"/plugins/core/tasks/flows/io.kestra.core.tasks.flows.Parallel.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-4162bd61").then(n)}},{name:"v-49f10763",path:"/plugins/core/tasks/flows/io.kestra.core.tasks.flows.Pause.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-49f10763").then(n)}},{name:"v-dd1e609e",path:"/plugins/core/tasks/flows/io.kestra.core.tasks.flows.Sequential.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-dd1e609e").then(n)}},{name:"v-797da7c7",path:"/plugins/core/tasks/flows/io.kestra.core.tasks.flows.Switch.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-797da7c7").then(n)}},{name:"v-6717a943",path:"/plugins/core/tasks/flows/io.kestra.core.tasks.flows.Template$ExecutorTemplate.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-6717a943").then(n)}},{name:"v-52208f8a",path:"/plugins/core/tasks/flows/io.kestra.core.tasks.flows.Template.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-52208f8a").then(n)}},{name:"v-3a8e0133",path:"/plugins/core/tasks/flows/io.kestra.core.tasks.flows.Worker.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-3a8e0133").then(n)}},{name:"v-1efc3447",path:"/plugins/core/tasks/scripts/io.kestra.core.tasks.scripts.Bash.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-1efc3447").then(n)}},{name:"v-1c59ef6b",path:"/plugins/core/tasks/scripts/io.kestra.core.tasks.scripts.Node.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-1c59ef6b").then(n)}},{name:"v-6a588fb7",path:"/plugins/core/tasks/scripts/io.kestra.core.tasks.scripts.Python.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-6a588fb7").then(n)}},{name:"v-97922f1e",path:"/plugins/core/tasks/states/io.kestra.core.tasks.states.Delete.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-97922f1e").then(n)}},{name:"v-72837be3",path:"/plugins/core/tasks/states/io.kestra.core.tasks.states.Get.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-72837be3").then(n)}},{name:"v-be375f3a",path:"/plugins/core/tasks/states/io.kestra.core.tasks.states.Set.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-be375f3a").then(n)}},{name:"v-0943ab37",path:"/plugins/core/tasks/storages/io.kestra.core.tasks.storages.Concat.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-0943ab37").then(n)}},{name:"v-66fcc649",path:"/plugins/core/tasks/storages/io.kestra.core.tasks.storages.Delete.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-66fcc649").then(n)}},{name:"v-541b8ec5",path:"/plugins/core/tasks/storages/io.kestra.core.tasks.storages.PurgeExecution.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-541b8ec5").then(n)}},{name:"v-ae992146",path:"/plugins/core/tasks/storages/io.kestra.core.tasks.storages.Size.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-ae992146").then(n)}},{name:"v-3888f63a",path:"/plugins/core/tasks/storages/io.kestra.core.tasks.storages.Split.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-3888f63a").then(n)}},{name:"v-719322e3",path:"/plugins/core/triggers/io.kestra.core.models.triggers.types.Flow.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-719322e3").then(n)}},{name:"v-19cb5103",path:"/plugins/core/triggers/io.kestra.core.models.triggers.types.Schedule.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-19cb5103").then(n)}},{name:"v-33989629",path:"/plugins/core/triggers/io.kestra.core.models.triggers.types.Webhook.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-33989629").then(n)}},{name:"v-77a02e83",path:"/plugins/core/tasks/storages/io.kestra.core.tasks.storages.Purge.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-77a02e83").then(n)}},{name:"v-413ff743",path:"/docs/developer-guide/variables/filter/timestamp.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-413ff743").then(n)}},{name:"v-42c49689",path:"/docs/developer-guide/variables/filter/timestampMicro.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-42c49689").then(n)}},{name:"v-12a41843",path:"/docs/developer-guide/variables/filter/timestampNano.html",component:an,beforeEnter:function(e,t,n){ft("Layout","v-12a41843").then(n)}},{path:"*",component:an}],rn={title:"Kestra",description:"",base:"/",headTags:[["link",{rel:"apple-touch-icon",sizes:"180x180",href:"/apple-touch-icon.png"}],["link",{rel:"icon",type:"image/png",sizes:"32x32",href:"/favicon-32x32.png"}],["link",{rel:"icon",type:"image/png",sizes:"16x16",href:"/favicon-16x16.png"}],["link",{rel:"manifest",href:"/site.webmanifest"}],["link",{rel:"mask-icon",href:"/safari-pinned-tab.svg",color:"#192a4e"}],["meta",{name:"msapplication-TileColor",content:"#192a4e"}],["meta",{name:"theme-color",content:"#192a4e"}],["script",{src:"https://unpkg.com/rapidoc/dist/rapidoc-min.js"}],["link",{rel:"sitemap",type:"application/xml",href:"/sitemap.xml",title:"Sitemap"}]],pages:[{title:"Kestra, infinitely scalable open source orchestration & scheduling platform.",frontmatter:{title:"Kestra, infinitely scalable open source orchestration & scheduling platform.",description:"Kestra is an infinitely scalable orchestrator & scheduler platform, in order to create, run, schedule and monitor millions of complex pipelines.",layout:"Home",meta:[{property:"article:modified_time",content:"2022-01-13T21:18:21.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:description",content:"Kestra is an infinitely scalable orchestrator & scheduler platform, in order to create, run, schedule and monitor millions of complex pipelines. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:description",content:"Kestra is an infinitely scalable orchestrator & scheduler platform, in order to create, run, schedule and monitor millions of complex pipelines. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/",relativePath:"index.md",key:"v-3140ed9c",path:"/",lastUpdated:"1/13/2022, 9:18:21 PM",lastUpdatedTimestamp:1642108701e3,headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"Introducing Kestra first public release 🎉",frontmatter:{title:"Introducing Kestra first public release :tada:",description:"Today, our team is proud to announce a first public release of Kestra — an open-source platform to orchestrate and schedule any kind of workflow at scale.",date:"2022-02-01T10:00:00.000Z",layout:"BlogsPost",author:{name:"Ludovic Dehon",image:"ldehon",twitter:"@tchiotludo"},image:"/blogs/2022-02-01-kestra-opensource.jpg",meta:[{property:"article:published_time",content:"2022-02-01T10:00:00.000Z"},{property:"article:modified_time",content:"2022-02-22T12:05:39.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Introducing Kestra first public release 🎉"},{property:"og:description",content:"Today, our team is proud to announce a first public release of Kestra — an open-source platform to orchestrate and schedule any kind of workflow at scale. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"article"},{property:"og:url",content:"https://kestra.io/blogs/2022-02-01-kestra-opensource.html"},{property:"og:image",content:"https://kestra.io/blogs/2022-02-01-kestra-opensource.jpg"},{name:"twitter:title",content:"Introducing Kestra first public release 🎉"},{name:"twitter:description",content:"Today, our team is proud to announce a first public release of Kestra — an open-source platform to orchestrate and schedule any kind of workflow at scale. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/blogs/2022-02-01-kestra-opensource.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/blogs/2022-02-01-kestra-opensource.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Ludovic Dehon"},{name:"twitter:creator",content:"@tchiotludo"}]},regularPath:"/blogs/2022-02-01-kestra-opensource.html",relativePath:"blogs/2022-02-01-kestra-opensource.md",key:"v-5ff30963",path:"/blogs/2022-02-01-kestra-opensource.html",headers:[{level:2,title:"What is Kestra?",slug:"what-is-kestra",normalizedTitle:"what is kestra?",charIndex:157},{level:2,title:"The History of Kestra!",slug:"the-history-of-kestra",normalizedTitle:"the history of kestra!",charIndex:811},{level:2,title:"Kestra is Open Source!",slug:"kestra-is-open-source",normalizedTitle:"kestra is open source!",charIndex:2860},{level:2,title:"Kestra Plugins are also Open Source!",slug:"kestra-plugins-are-also-open-source",normalizedTitle:"kestra plugins are also open source!",charIndex:4288},{level:2,title:"First Public Release and Production Ready!",slug:"first-public-release-and-production-ready",normalizedTitle:"first public release and production ready!",charIndex:5868}],lastUpdated:"2/22/2022, 12:05:39 PM",lastUpdatedTimestamp:1645531539e3,headersStr:"What is Kestra? The History of Kestra! Kestra is Open Source! Kestra Plugins are also Open Source! First Public Release and Production Ready!",content:"Today, our team is proud to announce a first public release of Kestra, an open-source platform to orchestrate & schedule any kinds of workflow at scale.\n\n\n# What is Kestra?\n\nKestra is :\n\n * an orchestrator: Build a complex pipeline in couple of minutes.\n * a scheduler: Launch your flows whatever your need!\n * a rich ui: Create, run, and monitor all your flows with a real-time user interface.\n * a data orchestrator: With its many plugins, build your data orchestration directly.\n * cloud native & scalable: Scale to millions of executions without stress or hassle.\n * an all-in-one platform: No need to use multiple tools to deliver a complete pipeline.\n * a pluggable platform with the option to choose from several plugins or to build your own.\n\nAs you can see, Kestra will handle all your pipelines !\n\n\n# The History of Kestra!\n\nKestra started in 2019 with this initial commit. At this time, Kestra was at the proof-of-concept stage.\n\nTo provide a bit of a background: I was working for Leroy Merlin as a consultant. We needed to build a new cloud-based data platform from scratch (destination: mostly Google Cloud Platform). We tried a lot of things and failed with some of our attempts. The biggest setback was the orchestration software that we tried to deliver with Apache Airflow: a lot of instability (tasks that failed simply due to the Airflow scheduler), performance issues (unable to handle a light workload), and a lack of features (scaling, data processing). After many tests (Google Composer, Open source Airflow on Kubernetes), the decision was final: Airflow was rejected by Leroy Merlin.\n\nI did some research on the orchestrator ecosystem; most are proprietary and license based (far from my mindset), some are open source (at this time, only Apache Airflow seemed to be active — and it was rejected). I was really surprised by this discovery and faced this challenge from a co-worker:\n\n> If you think Airflow is bad, do better!\n\nIt was decided: I set myself the task of producing a proof of concept for our own open-source workflow management system. It took a lot of time to build this software, and the task seemed to be never ending; but I continued to work on it for several months by:\n\n * Choosing Kafka as database and queue\n * Implementing storage for task processing\n * Choosing ElasticSearch as a repository for UI\n * Adding some dynamic templating with HandleBar and changing it later to Peeble\n * Starting some Google Cloud plugins\n * Introducing the UI — built with Vue.js\n\nAnd so on !\n\nDuring a thirty-month period I built a variety of features, numerous plugins, and countless bug fixes — mostly during the night as I was still working as a full-time consultant for Leroy Merlin. It took a lot of effort, investment, and time that I could have spent with my family.\n\nBut now we are really proud of what we’ve achieved!\n\n\n# Kestra is Open Source!\n\nI'm a real open-source enthusiast. As an architect, I’ve been interested in open source solutions in IT for twenty years. I started as an open source consumer (using it without adding contributions, as is the case with most users). I then decided that the time was right to start out with the permissive Apache License.\n\nThree years ago, I started another open source project, AKHQ, with the same license. Working with a successful project was an invaluable experience for me as I was able to learn how to build a community around a project. I've also learnt that an open source system won't pay the bills on its own. AKHQ required a lot of personal investment; Kestra has required a lot more and will continue to do so in the future! This means you will have to ensure that you have the financial resources in place to enable your project to be viable and sustainable — we decided to create a company alongside Kestra in order to raise the required funds to support the development of the open source software.\n\nThe open source license is not limited and allows you to install and run it as you want on your server on premise or your cloud. We have also built our Enterprise Edition , bringing added security and productivity to your Kestra clusters. In addition, we plan to deliver Kestra in the form of software as a service in the near future (don't hesitate to contact us for more information).\n\n\n# Kestra Plugins are also Open Source!\n\nWhen implementing the deep integration of the tools and databases you are using, the connectors (what we call “plugins”) can present the biggest challenge. Most orchestrators (even proprietary and licensed based) only talk bash or cmd. You have to manage all of your needs with simple commands, often requiring you to use another tool in order to have access to the underlying resource (such as Talend). With Kestra, we want to have a deep integration with your tools and let bash deal solely with edge cases a plugin can't cover.\n\nAn example for a query to Google BigQuery:\n\n> with Bash\n\nDATE=$(date --iso-8601=seconds)\nbq --format=json query 'SELECT name FROM \\`project.dataset.table\\` WHERE shippedDate=${DATE} AND shippedCountry = \\'FR\\'' > /tmp/query.json\njq -r '.name' /tmp/query.json\n\n\n> with Kestra\n\n- id: query\n  type: io.kestra.plugin.gcp.bigquery.Query\n  fetchOne: true\n  sql: |\n    SELECT name\n    FROM `kestra-prd.demo.salesOrder` AS s\n    WHERE shippedDate = '{{ now() }}'\n    AND shippedCountry = 'FR'\n- id: \"return\"\n  type: \"io.kestra.core.tasks.debugs.Return\"\n  format: \"{{ outputs.query.row.name }}\"\n\n\nKestra avoids the rigmarole of installing the software on the system, handling dependencies and conflicts, dealing with Python, etc. — just install a plugin (a simple jar) and speak directly with your database.\n\nWe have a number of plugins and the process of developing your own is very simple. We also hope that a community will help us to maintain new plugins/connectors (contact us if you require help or support).\n\n\n# First Public Release and Production Ready!\n\nFirst public release doesn't mean that Kestra is not production ready. In fact, it has been used in production since August 2020 at Leroy Merlin — take a deeper look at the case study if you want more detail. Here are some figures to give a picture of Kestra’s credentials:\n\n * 4 clusters one for every environment\n * 200+ users/developers\n * 2000+ flows in production\n * 350,000 executions every month\n * 3,000,000 tasks every month\n * Equivalent of 1,500 days of task processing time every month (yeah, that’s the equivalent of fifty days of task processing every single day)\n\nSo, your next question is: why are you waiting so long for the first public release?\n\nThe answer is simple: we want to deliver the first impression as best as possible and this led to a lot of work: missing features, missing plugins, new UI design, polish of documentation and website. Now we are proud and confident enough in our product to display the result of our labor.\n\nThe road is not finished; we still have a lot to do. Stay tuned for the journey.",normalizedContent:"today, our team is proud to announce a first public release of kestra, an open-source platform to orchestrate & schedule any kinds of workflow at scale.\n\n\n# what is kestra?\n\nkestra is :\n\n * an orchestrator: build a complex pipeline in couple of minutes.\n * a scheduler: launch your flows whatever your need!\n * a rich ui: create, run, and monitor all your flows with a real-time user interface.\n * a data orchestrator: with its many plugins, build your data orchestration directly.\n * cloud native & scalable: scale to millions of executions without stress or hassle.\n * an all-in-one platform: no need to use multiple tools to deliver a complete pipeline.\n * a pluggable platform with the option to choose from several plugins or to build your own.\n\nas you can see, kestra will handle all your pipelines !\n\n\n# the history of kestra!\n\nkestra started in 2019 with this initial commit. at this time, kestra was at the proof-of-concept stage.\n\nto provide a bit of a background: i was working for leroy merlin as a consultant. we needed to build a new cloud-based data platform from scratch (destination: mostly google cloud platform). we tried a lot of things and failed with some of our attempts. the biggest setback was the orchestration software that we tried to deliver with apache airflow: a lot of instability (tasks that failed simply due to the airflow scheduler), performance issues (unable to handle a light workload), and a lack of features (scaling, data processing). after many tests (google composer, open source airflow on kubernetes), the decision was final: airflow was rejected by leroy merlin.\n\ni did some research on the orchestrator ecosystem; most are proprietary and license based (far from my mindset), some are open source (at this time, only apache airflow seemed to be active — and it was rejected). i was really surprised by this discovery and faced this challenge from a co-worker:\n\n> if you think airflow is bad, do better!\n\nit was decided: i set myself the task of producing a proof of concept for our own open-source workflow management system. it took a lot of time to build this software, and the task seemed to be never ending; but i continued to work on it for several months by:\n\n * choosing kafka as database and queue\n * implementing storage for task processing\n * choosing elasticsearch as a repository for ui\n * adding some dynamic templating with handlebar and changing it later to peeble\n * starting some google cloud plugins\n * introducing the ui — built with vue.js\n\nand so on !\n\nduring a thirty-month period i built a variety of features, numerous plugins, and countless bug fixes — mostly during the night as i was still working as a full-time consultant for leroy merlin. it took a lot of effort, investment, and time that i could have spent with my family.\n\nbut now we are really proud of what we’ve achieved!\n\n\n# kestra is open source!\n\ni'm a real open-source enthusiast. as an architect, i’ve been interested in open source solutions in it for twenty years. i started as an open source consumer (using it without adding contributions, as is the case with most users). i then decided that the time was right to start out with the permissive apache license.\n\nthree years ago, i started another open source project, akhq, with the same license. working with a successful project was an invaluable experience for me as i was able to learn how to build a community around a project. i've also learnt that an open source system won't pay the bills on its own. akhq required a lot of personal investment; kestra has required a lot more and will continue to do so in the future! this means you will have to ensure that you have the financial resources in place to enable your project to be viable and sustainable — we decided to create a company alongside kestra in order to raise the required funds to support the development of the open source software.\n\nthe open source license is not limited and allows you to install and run it as you want on your server on premise or your cloud. we have also built our enterprise edition , bringing added security and productivity to your kestra clusters. in addition, we plan to deliver kestra in the form of software as a service in the near future (don't hesitate to contact us for more information).\n\n\n# kestra plugins are also open source!\n\nwhen implementing the deep integration of the tools and databases you are using, the connectors (what we call “plugins”) can present the biggest challenge. most orchestrators (even proprietary and licensed based) only talk bash or cmd. you have to manage all of your needs with simple commands, often requiring you to use another tool in order to have access to the underlying resource (such as talend). with kestra, we want to have a deep integration with your tools and let bash deal solely with edge cases a plugin can't cover.\n\nan example for a query to google bigquery:\n\n> with bash\n\ndate=$(date --iso-8601=seconds)\nbq --format=json query 'select name from \\`project.dataset.table\\` where shippeddate=${date} and shippedcountry = \\'fr\\'' > /tmp/query.json\njq -r '.name' /tmp/query.json\n\n\n> with kestra\n\n- id: query\n  type: io.kestra.plugin.gcp.bigquery.query\n  fetchone: true\n  sql: |\n    select name\n    from `kestra-prd.demo.salesorder` as s\n    where shippeddate = '{{ now() }}'\n    and shippedcountry = 'fr'\n- id: \"return\"\n  type: \"io.kestra.core.tasks.debugs.return\"\n  format: \"{{ outputs.query.row.name }}\"\n\n\nkestra avoids the rigmarole of installing the software on the system, handling dependencies and conflicts, dealing with python, etc. — just install a plugin (a simple jar) and speak directly with your database.\n\nwe have a number of plugins and the process of developing your own is very simple. we also hope that a community will help us to maintain new plugins/connectors (contact us if you require help or support).\n\n\n# first public release and production ready!\n\nfirst public release doesn't mean that kestra is not production ready. in fact, it has been used in production since august 2020 at leroy merlin — take a deeper look at the case study if you want more detail. here are some figures to give a picture of kestra’s credentials:\n\n * 4 clusters one for every environment\n * 200+ users/developers\n * 2000+ flows in production\n * 350,000 executions every month\n * 3,000,000 tasks every month\n * equivalent of 1,500 days of task processing time every month (yeah, that’s the equivalent of fifty days of task processing every single day)\n\nso, your next question is: why are you waiting so long for the first public release?\n\nthe answer is simple: we want to deliver the first impression as best as possible and this led to a lot of work: missing features, missing plugins, new ui design, polish of documentation and website. now we are proud and confident enough in our product to display the result of our labor.\n\nthe road is not finished; we still have a lot to do. stay tuned for the journey.",charsets:{cjk:!0}},{title:"How Leroy Merlin managed their cloud data pipelines with Kestra",frontmatter:{title:"How Leroy Merlin managed their cloud data pipelines with Kestra",description:"Discover how Leroy Merlin moved all their data pipelines to Google Cloud with Kestra",date:"2022-02-22T18:00:00.000Z",layout:"BlogsPost",author:{name:"Ludovic Dehon",image:"ldehon",twitter:"@tchiotludo"},image:"/blogs/2022-02-22-leroy-merlin-usage-kestra.jpg",meta:[{property:"article:published_time",content:"2022-02-22T18:00:00.000Z"},{property:"article:modified_time",content:"2022-04-17T20:03:03.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"How Leroy Merlin managed their cloud data pipelines with Kestra"},{property:"og:description",content:"Discover how Leroy Merlin moved all their data pipelines to Google Cloud with Kestra | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"article"},{property:"og:url",content:"https://kestra.io/blogs/2022-02-22-leroy-merlin-usage-kestra.html"},{property:"og:image",content:"https://kestra.io/blogs/2022-02-22-leroy-merlin-usage-kestra.jpg"},{name:"twitter:title",content:"How Leroy Merlin managed their cloud data pipelines with Kestra"},{name:"twitter:description",content:"Discover how Leroy Merlin moved all their data pipelines to Google Cloud with Kestra | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/blogs/2022-02-22-leroy-merlin-usage-kestra.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/blogs/2022-02-22-leroy-merlin-usage-kestra.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Ludovic Dehon"},{name:"twitter:creator",content:"@tchiotludo"}]},regularPath:"/blogs/2022-02-22-leroy-merlin-usage-kestra.html",relativePath:"blogs/2022-02-22-leroy-merlin-usage-kestra.md",key:"v-92cbb91e",path:"/blogs/2022-02-22-leroy-merlin-usage-kestra.html",headers:[{level:2,title:"Before the Cloud: The On-premise Choice",slug:"before-the-cloud-the-on-premise-choice",normalizedTitle:"before the cloud: the on-premise choice",charIndex:819},{level:2,title:"Going to the Cloud",slug:"going-to-the-cloud",normalizedTitle:"going to the cloud",charIndex:2160},{level:2,title:"On the Cloud After Few Months",slug:"on-the-cloud-after-few-months",normalizedTitle:"on the cloud after few months",charIndex:3700},{level:3,title:"Transfer of Data",slug:"transfer-of-data",normalizedTitle:"transfer of data",charIndex:4026},{level:3,title:"Orchestration",slug:"orchestration",normalizedTitle:"orchestration",charIndex:4987},{level:2,title:"Kestra to the Rescue",slug:"kestra-to-the-rescue",normalizedTitle:"kestra to the rescue",charIndex:8054},{level:3,title:"Simplifying the Adoption Process with Custom Plugins",slug:"simplifying-the-adoption-process-with-custom-plugins",normalizedTitle:"simplifying the adoption process with custom plugins",charIndex:8429},{level:3,title:"Adoption by the Team",slug:"adoption-by-the-team",normalizedTitle:"adoption by the team",charIndex:10769},{level:3,title:"Go Production",slug:"go-production",normalizedTitle:"go production",charIndex:12077},{level:3,title:"Some Testimonials",slug:"some-testimonials",normalizedTitle:"some testimonials",charIndex:13232},{level:2,title:"Conclusion",slug:"conclusion",normalizedTitle:"conclusion",charIndex:14713}],lastUpdated:"4/17/2022, 8:03:03 PM",lastUpdatedTimestamp:1650225783e3,headersStr:"Before the Cloud: The On-premise Choice Going to the Cloud On the Cloud After Few Months Transfer of Data Orchestration Kestra to the Rescue Simplifying the Adoption Process with Custom Plugins Adoption by the Team Go Production Some Testimonials Conclusion",content:'Adeo is the leading French company in the international DIY and home improvement market; it is also one of the world’s top three companies in the industry, and is moving from strength to strength.\n\nLeroy Merlin is the leading brand of the Adeo Group and helps residents around the world with all their home improvement projects - from renovations and extensions, to decoration and repairs. With more than 450 stores across the globe and 140 in France alone, Leroy Merlin France has strong data values and a need to deliver on their KPI to their 80,000+ employees to drive their expansion.\n\nIn this article, we will explore Leroy Merlin\'s data architecture, their development project in the cloud, and how our Kestra orchestration platform contributed to perfectly meet the constraints and ambitions of our partner.\n\n\n# Before the Cloud: The On-premise Choice\n\nLeroy Merlin, has historically used the following stacks in order to manage their data pipelines:\n\n * Teradata for the data warehouse\n * VectorWise as a database for API\n * Stambia for ELT ingestion\n * Dollar U and Automic Workload Automation as an orchestrator and scheduler.\n * Custom development for the transfer of data\n\nThese methods were at one time commonplace, but today are outdated. This became more and more obvious in recent years with competitors ever increasing cloud adoption. Below are just some of the challenges to their on-premise approach:\n\n * Vectorwise and Teradata were not serverless and needed to be scaled manually\n * Stambia did not have many native connectors for the cloud. It therefore was not able to schedule tasks and required additional tools to get the job done.\n * Dollar U and AWA is led by Adeo (the group). To run an orchestration job, you had to go to the internal ticket service, then wait for other people to handle it — this could take up to a few days, if not more. Moreover, the monitoring of the pipeline was conducted by a variety of tools that did not talk to each other, which further complicated matters.\n\nThese issues could be directly attributed to tools that no longer performed adequately, and the solution\'s general lack of cloud readiness.\n\n\n# Going to the Cloud\n\nIn 2019, Leroy Merlin and Adeo decided to move from an on-premise server to a cloud-based system. They needed a solution that could not only handle all the previous use cases, but improve upon them, and find a new way to work, all with an ambitious objective: being a fully cloud-based operation by 2022!\n\nThey decided to create an entirely new team with that goal in mind, and took an empty page and filled it with a brand new solution for the migration process. They needed to define each component of the future data platform (from storage, pipeline, source code, etc.), build the platform, and demonstrate how to use it for all data engineers (approximately fifty people).\n\nAdeo has a strong partnership with Google, and since Leroy Merlin is a subsidiary, the storage choice was Google BigQuery. Second decision: everything needed to be hosted on GitHub and to have a strong CI/CD process in order to go to production. Terraform was the obvious choice here due to the large ecosystem and native integration with BigQuery and other GCP resources.\n\nNext, they needed to decide on how to transfer the data, load it in BigQuery, and transform and aggregate the data. For the transport layer and load, no obvious choice had presented itself. So, they decided to build a custom solution (based on the GCP (Google Cloud Platform) service). For the orchestration, a lot of people were using Airflow, so why not use such a popular system? What’s more, GCP even had a fully managed orchestration service: Cloud composer.\n\n\n# On the Cloud After Few Months\n\nLeroy Merlin decided to start each of these new projects on the cloud directly before beginning the migration of existing projects. The first projects were coming along, the build was done, and more projects were in production — now they could start the process of concluding past projects.\n\n\n# Transfer of Data\n\nWhilst not entirely successful, the initial process revealed some points that helped them to find their direction; the following findings were particularly helpful:\n\n * The transfer layer had to be over HTTPS. This wasn\'t an issue, because nearly every system can send an HTTPS request in order to send the data — even the legacy ones on the old system.\n * The data had to be validated: Irrelevant data could not be accepted on the data warehouse. The format was an Avro schema which would validate before loading in order to parse primitive data — you also had the option to carry out an additional check.\n\nOne major flaw: The custom tools were made in Python and needed to be installed on the system that would send the data. Since Python has a complicated lifecycle, there are systems that just can\'t install Python 3, leaving only one option: develop multiple versions of the tools to target all systems, which would be unsustainable.\n\n\n# Orchestration\n\nThe choice of Airflow seemed to be a good one as it gave us the ability to handle a lot of complex workflows with simple Python code. So, the custom transfer tools would trigger Airflow DAG after the load on BigQuery. Airflow would handle all the other tasks: transform/aggregate/reverse ETL, and so on.\n\nBut it failed at Leroy Merlin. First, the implementation by Google: Google Cloud Composer had various limitations and was quickly rejected. So Leroy Merlin decided to install their own Airflow on Kubernetes Clusters. This appeared to have been a better option; more control, more stability. However, it still presented a lot of issues:\n\n * After a simple benchmark of a thousand tasks with only sleep 1, we saw failed tasks. Sleep 1 tasks should never have failed, and this forced us to question the product. How were we to monitor our DAGs if we had failed tasks simply due to the orchestrator?\n * The workflow as a Python code was clearly not a good choice — one DAG produced by a team member introduced some code out code evaluated by an Airflow worker. This led to codes being executed every five seconds by each and every Airflow component and slowed down the cluster (this example established that we could not allow users to build DAGs by themselves without a strong code review, as 1 DAG could potentially crash the whole cluster).\n * The CPU usage of an Airflow cluster was really high, even when the tasks were only calling the API (BigQuery API in our case) — If the waiting tasks are causing high CPU usage, how could it cope with more CPU-intensive tasks?\n * The Airflow API at this time was experimental, and we needed to trigger the flow externally. This API had no control on the passed parameter.\n * Sensors are a mechanism on Airflow that simply wait for something to happen (a file, DAG, etc.). Every sensor will eat one worker slot, and we planned to have several so we needed to add even more workers to handle the load.\n * Airflow didn\'t allow us to pass large data between tasks (XCOM was present, but only for small amounts of data). This is a poor design that resulted in the need to multiply the destinations for one source (ex: BigQueryToGCSOperator, BigQueryToMySqlOperator, BigQueryToBigQueryOperator, ...). - It would not scale to develop many operators.\n * RBAC on Airflow was very limited and only available to users that own a DAG. This presented challenges for group work. In a team, we needed to be able to have multiple people on the same resources.\n * ...\n\nEven when we persevered with it, the performance level was not there; Airflow failed on the first project; the duration of the flow was twenty times longer than the same flow with Stambia, and the analysis showed that this duration would increase over time and would not scale to the number of DAGs and executions wanted.\n\nDecision\n\nBy this time, Terraform and BigQuery had demonstrated their strengths and, Airflow, custom transfer and load tools had been rejected. Leroy Merlin needed to find another option, and no solution had presented itself.\n\n\n# Kestra to the Rescue\n\n\n\n\nIn the meantime, the Kestra team had started working on the Kestra platform and presented the first version to Leroy Merlin. The LM team leaders were very interested and decided to test the solution for a few months. Since some features were missing at this point, they also decided to contribute to the open-source project and some new plugins.\n\n\n# Simplifying the Adoption Process with Custom Plugins\n\nThey also moved with great speed to develop a Kestra plugin to help simplify the ingestion process called DataPlatformIngest. Removing the burden of loading data, the plugins:\n\n * could archive the incoming data to a Google Cloud Storage Bucket\n * validate the data technically with an Avro schema; they didn\'t want bad incoming data and wanted to be sure that the data was at least given a type (integer, date, etc.)\n * versioned the data (if the schema is breaking change)\n * appended the technical column (loaded data, execution ID) in order to have a full lineage on the data warehouse.\n * loaded the data in a temporary table\n * applied some qualities with rejection of records based on business rules (upper/lower bound, validate key with referential, deduplication, etc.)\n * loaded the data in ODS (Operational Data Store) — meaning the image of the data from the incoming system\n\nThe transfer of the data was in HTTPS directly to the Kestra API in order to free any dependencies. The operational system used most frequently was a simple curl command in order to trigger ingestion or develop a simple HTTP client reaching the Kestra API.\n\nThis single task handled all the complexities of loading data — it would create ten to twenty tasks:\n\nid: lock\nnamespace: fr.leroymerlin.services.product.orchestrator\n-\ninputs:\n  - type: FILE\n    name: stock\ntasks:\n  - id: 01_ingest_ods_stock\n    type: com.leroymerlin.dataplatform.dcp.tasks.DataPlatformIngest\n    avroOptions:\n      dateFormat: yyyy-MM-dd\n      datetimeFormat: yyyy-MM-dd\' \'HH:mm:ss\n      nullValues:\n        - \\N\n        - "1900-01-00 00:00:00"\n      schema: |-\n        {\n            "type": "record",\n            "name": "stock",\n            "namespace": "org.kestra",\n            "fields": [\n                { "name": "name", "type": "string" },\n                { "name": "lock_until", "type": [ "null", { "type": "long", "logicalType": "timestamp-millis"} ] },\n                { "name": "locked_at", "type": [ "null", { "type": "long", "logicalType": "timestamp-millis"} ] },\n                { "name": "locked_by", "type": [ "null", "string" ] }\n            ]\n        }\n    csvOptions:\n      fieldSeparator: "|"\n    dataset: supply\n    fileType: CSV\n    from: "{{ inputs.stock }}"\n    table: stock\n    version: 1\n\n\n\n# Adoption by the Team\n\nAt Leroy Merlin, there are over eighty data engineers and data scientists. They each needed to learn how to use Kestra; but since it was based on a simple declarative language (based on YAML), this process was quick and people were able to use it within a few hours.\n\nAlso, as there was a rich UI, the deployment process was really easy at the beginning — just save on the UI, and you’re good to go!\n\nSubsequently, Leroy Merlin started using Terraform in order to deploy every cloud resource; they also deploy Kestra resources using terraform providers. They were able to reach a full DataOps lifecycle, all deployment is atomic with a git push and a strong CI/CD applying resources from terraform.\n\nReach a fast time to market\n\nBefore this DataOps lifecycle was implemented, the deployment involved a number of teams: a transfer team that moved the files between systems, an orchestration team which triggered the job after the transfer, a data team that would develop the loading of the data in addition to a manual operation in order to create a resource on the data warehouse. All these operations needed to synchronize with the internal ticket that was now in service.\n\nThanks to Kestra, they moved to full autonomy and reduced the time to market from days to only a few hours\n\n\n# Go Production\n\nAfter a few months, Kestra was confirmed and was deployed to a production environment in May of 2020. They also decided to move to the Enterprise Edition of Kestra in August 2020 as they needed to have fine-grained security, role-based access control and single sign-on.\n\nThe usage grew exponentially over the coming months, and the kinds of usage are becoming increasingly varied: (starting flows based on file detection from buckets, syncing data warehouses directly from operation postgres database, developing a simple python program to fetch APIs from a partner, starting long-running data science processes over Kubernetes, fetching data from Google Drive and writing results back to Google Sheets, and so on.).\n\nHere are some numbers that show the current usage for January 2022 ( for production environment only):\n\n * 4 clusters one for every environment\n * 200+ users / developers\n * 2000+ flows in production\n * 400,000+ executions every month\n * 3,000,000+ tasks every month\n * Equivalent of 2,300 days of task processing time every month (yep, that’s the equivalent of seventy-five days of task processing every single day)\n\n\n# Some Testimonials\n\nLeroy Merlin has strongly supported the development of Kestra. As with any software, its young age could be a source of frustration for users. They needed to handle missing features, report some bugs, suffer some time loss from instability. But what was astounding was the realization that the pain was far less than the gain, and we obtained many good reports on software internal notation tools. It proved to be a solution that users really love and uphold.\n\nHere\'s what people shared with us:\n\n> "Tool responds perfectly to the need. Very easy to use; it manages all the complexity behind to offer a saving of time and huge savings."\n\n> "Kestra is a tool that is very easy to use with constant improvement in functionality. It covers almost all data pipeline setup needs."\n\n> "Kestra is very easy to learn, with a large number of functionalities covering a large number of use cases (scheduled workflows, API calls, triggers, flow synchronization, data and file transfers, etc.). The Web interface facilitates the monitoring of flows and the consultation of logs. New features are added very regularly, often in response to needs. Kestra is evolving rapidly."\n\n> "After suffering with Airflow to schedule different treatments, Kestra\'s arrival was more than saving. The ecosystem of plugins is evolving rapidly and greatly facilitates integration with different bricks, especially on GCP (BQ, GCS, Cloud SQL, etc.) A tool that deserves to be known more."\n\n\n# Conclusion\n\nLeroy Merlin was a great help to Kestra by supporting it in its infancy; but we really think it was a win-win partnership. Kestra is a tool that allowed Leroy Merlin to successfully conduct its cloud migration and embrace the DataOps development design.\n\nAccording to the Leroy Merlin manager, the true revolution was:\n\n> "Kestra is the first tool that allowed us to develop without installation, use your browser and start to build a true business use case within few hours. Since the learning curve is easy, you can easily onboard new teammates due to its descriptive language. And, moreover, it handles all parts of the data pipeline: the transport, load, transform, data modeling, data quality and monitoring of all our data pipeline. Since the tool offers strong role-based access and security on the Enterprise Edition, we are safe to share it in Software as a Service to all applications allowing us to also embrace the Data Mesh pattern."',normalizedContent:'adeo is the leading french company in the international diy and home improvement market; it is also one of the world’s top three companies in the industry, and is moving from strength to strength.\n\nleroy merlin is the leading brand of the adeo group and helps residents around the world with all their home improvement projects - from renovations and extensions, to decoration and repairs. with more than 450 stores across the globe and 140 in france alone, leroy merlin france has strong data values and a need to deliver on their kpi to their 80,000+ employees to drive their expansion.\n\nin this article, we will explore leroy merlin\'s data architecture, their development project in the cloud, and how our kestra orchestration platform contributed to perfectly meet the constraints and ambitions of our partner.\n\n\n# before the cloud: the on-premise choice\n\nleroy merlin, has historically used the following stacks in order to manage their data pipelines:\n\n * teradata for the data warehouse\n * vectorwise as a database for api\n * stambia for elt ingestion\n * dollar u and automic workload automation as an orchestrator and scheduler.\n * custom development for the transfer of data\n\nthese methods were at one time commonplace, but today are outdated. this became more and more obvious in recent years with competitors ever increasing cloud adoption. below are just some of the challenges to their on-premise approach:\n\n * vectorwise and teradata were not serverless and needed to be scaled manually\n * stambia did not have many native connectors for the cloud. it therefore was not able to schedule tasks and required additional tools to get the job done.\n * dollar u and awa is led by adeo (the group). to run an orchestration job, you had to go to the internal ticket service, then wait for other people to handle it — this could take up to a few days, if not more. moreover, the monitoring of the pipeline was conducted by a variety of tools that did not talk to each other, which further complicated matters.\n\nthese issues could be directly attributed to tools that no longer performed adequately, and the solution\'s general lack of cloud readiness.\n\n\n# going to the cloud\n\nin 2019, leroy merlin and adeo decided to move from an on-premise server to a cloud-based system. they needed a solution that could not only handle all the previous use cases, but improve upon them, and find a new way to work, all with an ambitious objective: being a fully cloud-based operation by 2022!\n\nthey decided to create an entirely new team with that goal in mind, and took an empty page and filled it with a brand new solution for the migration process. they needed to define each component of the future data platform (from storage, pipeline, source code, etc.), build the platform, and demonstrate how to use it for all data engineers (approximately fifty people).\n\nadeo has a strong partnership with google, and since leroy merlin is a subsidiary, the storage choice was google bigquery. second decision: everything needed to be hosted on github and to have a strong ci/cd process in order to go to production. terraform was the obvious choice here due to the large ecosystem and native integration with bigquery and other gcp resources.\n\nnext, they needed to decide on how to transfer the data, load it in bigquery, and transform and aggregate the data. for the transport layer and load, no obvious choice had presented itself. so, they decided to build a custom solution (based on the gcp (google cloud platform) service). for the orchestration, a lot of people were using airflow, so why not use such a popular system? what’s more, gcp even had a fully managed orchestration service: cloud composer.\n\n\n# on the cloud after few months\n\nleroy merlin decided to start each of these new projects on the cloud directly before beginning the migration of existing projects. the first projects were coming along, the build was done, and more projects were in production — now they could start the process of concluding past projects.\n\n\n# transfer of data\n\nwhilst not entirely successful, the initial process revealed some points that helped them to find their direction; the following findings were particularly helpful:\n\n * the transfer layer had to be over https. this wasn\'t an issue, because nearly every system can send an https request in order to send the data — even the legacy ones on the old system.\n * the data had to be validated: irrelevant data could not be accepted on the data warehouse. the format was an avro schema which would validate before loading in order to parse primitive data — you also had the option to carry out an additional check.\n\none major flaw: the custom tools were made in python and needed to be installed on the system that would send the data. since python has a complicated lifecycle, there are systems that just can\'t install python 3, leaving only one option: develop multiple versions of the tools to target all systems, which would be unsustainable.\n\n\n# orchestration\n\nthe choice of airflow seemed to be a good one as it gave us the ability to handle a lot of complex workflows with simple python code. so, the custom transfer tools would trigger airflow dag after the load on bigquery. airflow would handle all the other tasks: transform/aggregate/reverse etl, and so on.\n\nbut it failed at leroy merlin. first, the implementation by google: google cloud composer had various limitations and was quickly rejected. so leroy merlin decided to install their own airflow on kubernetes clusters. this appeared to have been a better option; more control, more stability. however, it still presented a lot of issues:\n\n * after a simple benchmark of a thousand tasks with only sleep 1, we saw failed tasks. sleep 1 tasks should never have failed, and this forced us to question the product. how were we to monitor our dags if we had failed tasks simply due to the orchestrator?\n * the workflow as a python code was clearly not a good choice — one dag produced by a team member introduced some code out code evaluated by an airflow worker. this led to codes being executed every five seconds by each and every airflow component and slowed down the cluster (this example established that we could not allow users to build dags by themselves without a strong code review, as 1 dag could potentially crash the whole cluster).\n * the cpu usage of an airflow cluster was really high, even when the tasks were only calling the api (bigquery api in our case) — if the waiting tasks are causing high cpu usage, how could it cope with more cpu-intensive tasks?\n * the airflow api at this time was experimental, and we needed to trigger the flow externally. this api had no control on the passed parameter.\n * sensors are a mechanism on airflow that simply wait for something to happen (a file, dag, etc.). every sensor will eat one worker slot, and we planned to have several so we needed to add even more workers to handle the load.\n * airflow didn\'t allow us to pass large data between tasks (xcom was present, but only for small amounts of data). this is a poor design that resulted in the need to multiply the destinations for one source (ex: bigquerytogcsoperator, bigquerytomysqloperator, bigquerytobigqueryoperator, ...). - it would not scale to develop many operators.\n * rbac on airflow was very limited and only available to users that own a dag. this presented challenges for group work. in a team, we needed to be able to have multiple people on the same resources.\n * ...\n\neven when we persevered with it, the performance level was not there; airflow failed on the first project; the duration of the flow was twenty times longer than the same flow with stambia, and the analysis showed that this duration would increase over time and would not scale to the number of dags and executions wanted.\n\ndecision\n\nby this time, terraform and bigquery had demonstrated their strengths and, airflow, custom transfer and load tools had been rejected. leroy merlin needed to find another option, and no solution had presented itself.\n\n\n# kestra to the rescue\n\n\n\n\nin the meantime, the kestra team had started working on the kestra platform and presented the first version to leroy merlin. the lm team leaders were very interested and decided to test the solution for a few months. since some features were missing at this point, they also decided to contribute to the open-source project and some new plugins.\n\n\n# simplifying the adoption process with custom plugins\n\nthey also moved with great speed to develop a kestra plugin to help simplify the ingestion process called dataplatformingest. removing the burden of loading data, the plugins:\n\n * could archive the incoming data to a google cloud storage bucket\n * validate the data technically with an avro schema; they didn\'t want bad incoming data and wanted to be sure that the data was at least given a type (integer, date, etc.)\n * versioned the data (if the schema is breaking change)\n * appended the technical column (loaded data, execution id) in order to have a full lineage on the data warehouse.\n * loaded the data in a temporary table\n * applied some qualities with rejection of records based on business rules (upper/lower bound, validate key with referential, deduplication, etc.)\n * loaded the data in ods (operational data store) — meaning the image of the data from the incoming system\n\nthe transfer of the data was in https directly to the kestra api in order to free any dependencies. the operational system used most frequently was a simple curl command in order to trigger ingestion or develop a simple http client reaching the kestra api.\n\nthis single task handled all the complexities of loading data — it would create ten to twenty tasks:\n\nid: lock\nnamespace: fr.leroymerlin.services.product.orchestrator\n-\ninputs:\n  - type: file\n    name: stock\ntasks:\n  - id: 01_ingest_ods_stock\n    type: com.leroymerlin.dataplatform.dcp.tasks.dataplatformingest\n    avrooptions:\n      dateformat: yyyy-mm-dd\n      datetimeformat: yyyy-mm-dd\' \'hh:mm:ss\n      nullvalues:\n        - \\n\n        - "1900-01-00 00:00:00"\n      schema: |-\n        {\n            "type": "record",\n            "name": "stock",\n            "namespace": "org.kestra",\n            "fields": [\n                { "name": "name", "type": "string" },\n                { "name": "lock_until", "type": [ "null", { "type": "long", "logicaltype": "timestamp-millis"} ] },\n                { "name": "locked_at", "type": [ "null", { "type": "long", "logicaltype": "timestamp-millis"} ] },\n                { "name": "locked_by", "type": [ "null", "string" ] }\n            ]\n        }\n    csvoptions:\n      fieldseparator: "|"\n    dataset: supply\n    filetype: csv\n    from: "{{ inputs.stock }}"\n    table: stock\n    version: 1\n\n\n\n# adoption by the team\n\nat leroy merlin, there are over eighty data engineers and data scientists. they each needed to learn how to use kestra; but since it was based on a simple declarative language (based on yaml), this process was quick and people were able to use it within a few hours.\n\nalso, as there was a rich ui, the deployment process was really easy at the beginning — just save on the ui, and you’re good to go!\n\nsubsequently, leroy merlin started using terraform in order to deploy every cloud resource; they also deploy kestra resources using terraform providers. they were able to reach a full dataops lifecycle, all deployment is atomic with a git push and a strong ci/cd applying resources from terraform.\n\nreach a fast time to market\n\nbefore this dataops lifecycle was implemented, the deployment involved a number of teams: a transfer team that moved the files between systems, an orchestration team which triggered the job after the transfer, a data team that would develop the loading of the data in addition to a manual operation in order to create a resource on the data warehouse. all these operations needed to synchronize with the internal ticket that was now in service.\n\nthanks to kestra, they moved to full autonomy and reduced the time to market from days to only a few hours\n\n\n# go production\n\nafter a few months, kestra was confirmed and was deployed to a production environment in may of 2020. they also decided to move to the enterprise edition of kestra in august 2020 as they needed to have fine-grained security, role-based access control and single sign-on.\n\nthe usage grew exponentially over the coming months, and the kinds of usage are becoming increasingly varied: (starting flows based on file detection from buckets, syncing data warehouses directly from operation postgres database, developing a simple python program to fetch apis from a partner, starting long-running data science processes over kubernetes, fetching data from google drive and writing results back to google sheets, and so on.).\n\nhere are some numbers that show the current usage for january 2022 ( for production environment only):\n\n * 4 clusters one for every environment\n * 200+ users / developers\n * 2000+ flows in production\n * 400,000+ executions every month\n * 3,000,000+ tasks every month\n * equivalent of 2,300 days of task processing time every month (yep, that’s the equivalent of seventy-five days of task processing every single day)\n\n\n# some testimonials\n\nleroy merlin has strongly supported the development of kestra. as with any software, its young age could be a source of frustration for users. they needed to handle missing features, report some bugs, suffer some time loss from instability. but what was astounding was the realization that the pain was far less than the gain, and we obtained many good reports on software internal notation tools. it proved to be a solution that users really love and uphold.\n\nhere\'s what people shared with us:\n\n> "tool responds perfectly to the need. very easy to use; it manages all the complexity behind to offer a saving of time and huge savings."\n\n> "kestra is a tool that is very easy to use with constant improvement in functionality. it covers almost all data pipeline setup needs."\n\n> "kestra is very easy to learn, with a large number of functionalities covering a large number of use cases (scheduled workflows, api calls, triggers, flow synchronization, data and file transfers, etc.). the web interface facilitates the monitoring of flows and the consultation of logs. new features are added very regularly, often in response to needs. kestra is evolving rapidly."\n\n> "after suffering with airflow to schedule different treatments, kestra\'s arrival was more than saving. the ecosystem of plugins is evolving rapidly and greatly facilitates integration with different bricks, especially on gcp (bq, gcs, cloud sql, etc.) a tool that deserves to be known more."\n\n\n# conclusion\n\nleroy merlin was a great help to kestra by supporting it in its infancy; but we really think it was a win-win partnership. kestra is a tool that allowed leroy merlin to successfully conduct its cloud migration and embrace the dataops development design.\n\naccording to the leroy merlin manager, the true revolution was:\n\n> "kestra is the first tool that allowed us to develop without installation, use your browser and start to build a true business use case within few hours. since the learning curve is easy, you can easily onboard new teammates due to its descriptive language. and, moreover, it handles all parts of the data pipeline: the transport, load, transform, data modeling, data quality and monitoring of all our data pipeline. since the tool offers strong role-based access and security on the enterprise edition, we are safe to share it in software as a service to all applications allowing us to also embrace the data mesh pattern."',charsets:{cjk:!0}},{title:"Kestra 0.4 release, Performance & Kafka, JDBC and Singer plugins",frontmatter:{title:"Kestra 0.4 release, Performance & Kafka, JDBC and Singer plugins",description:"Kestra 0.4 release | Kafka, JDBC, Singer plugins | Flows dependencies | Performance",date:"2022-03-14T10:00:00.000Z",layout:"BlogsPost",author:{name:"Ludovic Dehon",image:"ldehon",twitter:"@tchiotludo"},image:"/blogs/2022-03-14-kestra-0.4.0.jpg",meta:[{property:"article:published_time",content:"2022-03-14T10:00:00.000Z"},{property:"article:modified_time",content:"2022-06-20T07:54:31.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Kestra 0.4 release, Performance & Kafka, JDBC and Singer plugins"},{property:"og:description",content:"Kestra 0.4 release | Kafka, JDBC, Singer plugins | Flows dependencies | Performance | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"article"},{property:"og:url",content:"https://kestra.io/blogs/2022-03-14-kestra-0.4.0-jdbc-batch-vertexai-flow-dependencies.html"},{property:"og:image",content:"https://kestra.io/blogs/2022-03-14-kestra-0.4.0.jpg"},{name:"twitter:title",content:"Kestra 0.4 release, Performance & Kafka, JDBC and Singer plugins"},{name:"twitter:description",content:"Kestra 0.4 release | Kafka, JDBC, Singer plugins | Flows dependencies | Performance | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/blogs/2022-03-14-kestra-0.4.0-jdbc-batch-vertexai-flow-dependencies.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/blogs/2022-03-14-kestra-0.4.0.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Ludovic Dehon"},{name:"twitter:creator",content:"@tchiotludo"}]},regularPath:"/blogs/2022-03-14-kestra-0.4.0-jdbc-batch-vertexai-flow-dependencies.html",relativePath:"blogs/2022-03-14-kestra-0.4.0-jdbc-batch-vertexai-flow-dependencies.md",key:"v-20b6d043",path:"/blogs/2022-03-14-kestra-0.4.0-jdbc-batch-vertexai-flow-dependencies.html",headers:[{level:2,title:"Performance for large clusters",slug:"performance-for-large-clusters",normalizedTitle:"performance for large clusters",charIndex:293},{level:2,title:"Resilience",slug:"resilience",normalizedTitle:"resilience",charIndex:2754},{level:2,title:"New plugins & improvement",slug:"new-plugins-improvement",normalizedTitle:"new plugins &amp; improvement",charIndex:null},{level:3,title:"JDBC plugins",slug:"jdbc-plugins",normalizedTitle:"jdbc plugins",charIndex:2799},{level:2,title:"Kafka",slug:"kafka",normalizedTitle:"kafka",charIndex:1185},{level:2,title:"Singer plugins",slug:"singer-plugins",normalizedTitle:"singer plugins",charIndex:5103},{level:2,title:"GCP",slug:"gcp",normalizedTitle:"gcp",charIndex:7171},{level:3,title:"Vertex AI Custom Job",slug:"vertex-ai-custom-job",normalizedTitle:"vertex ai custom job",charIndex:7179},{level:3,title:"BigQuery retry",slug:"bigquery-retry",normalizedTitle:"bigquery retry",charIndex:8651},{level:2,title:"Flow dependencies in Enterprise Edition",slug:"flow-dependencies-in-enterprise-edition",normalizedTitle:"flow dependencies in enterprise edition",charIndex:9236},{level:2,title:"Conclusion",slug:"conclusion",normalizedTitle:"conclusion",charIndex:9864}],lastUpdated:"6/20/2022, 7:54:31 AM",lastUpdatedTimestamp:1655711671e3,headersStr:"Performance for large clusters Resilience New plugins & improvement JDBC plugins Kafka Singer plugins GCP Vertex AI Custom Job BigQuery retry Flow dependencies in Enterprise Edition Conclusion",content:'Since our public launch, we\'ve done a lot of work to give you the best possible experience, something we hope you will come to expect from Kestra. This latest release brings performance improvements to provide a smooth experience with large clusters, as well as some other great features.\n\n\n# Performance for large clusters\n\nSince we already have a large deployment at Leroy Merlin, we have often encountered performance issues, but this one was more complicated to find. Here, we\'ll outline some metrics based on our large deployment on Leroy Merlin\'s production environment and show you some before and after graphs for the same workload. Leroy Merlin\'s usage is mostly processed overnight, with all flows starting simultaneously around 3AM with 4000+ executions and 40,000+ tasks.\n\nWe have done a lot of work to reduce CPU usage and latency.\n\nAs you can see, the same workload previously used 3 executors (we used autoscaling), with a total usage of 2.5 cores for over 6 hours.\nAfter, only 0.5 cores were necessary through most of the runtime, with a peak of only 1.5 cores for 1 hour, the whole workload was managed by only 2 executors (minimum autoscaling).\n\nBefore After\n\nOn the Kafka side, we also see improved latency.\nThe system had a lot of flow triggers, which needed to be analyzed for each completed execution. When you have a high volume of execution, a lot of messages are sent by Kafka and if your consumer is too slow, the queue fills up and increases latency.\nPreviously, we had a large message lag that led to a late start of flow executions (a few minutes). The optimization allowed us to keep the start of the flow to within a few seconds.\n\nBefore After\n\nThe last graph shows the delay between the creation of the task and the task launched by the worker. Since we have optimized Kafka processing globally, we avoid queuing messages on Kafka and reduce the delay between task creation and worker processing.\n\nBefore After\n\nAll of these improvements also provide a significant reduction in total execution time. As all messages are consumed quickly, the time between each task is reduced and the total runtime is reduced.\n\nBefore After\n\nKeep in mind that Leroy Merlin\'s workflow is unbalanced, and all executions take place at the same time, more than 3000 executions and more than 35,000 tasks in a short period of time, making up 50% of the entire day\'s workload. We have to provide the same requirement for night processing, even if we are all asleep.\nWe have more optimizations pending, but this provided a big improvement that will allow us to handle more complex clusters with lots of streams and concurrent executions. A full blog post is coming soon to expose what we discovered while scaling a Kafka Streams application.\n\n\n# Resilience\n\n\n# New plugins & improvement\n\n\n# JDBC plugins\n\n# Batch query\n\nJDBC plugins have been given a major update that allows for bulk queries. This update allows you to use any file generated by Kestra storage to generate a batch query.\nYou can now read data from any task and generate a batch query to insert or update data in most JDBC databases.\n\nHere is an example:\n\ntasks:\n  - id: query\n    type: "io.kestra.plugin.jdbc.mysql.Query"\n    url: jdbc:mysql://127.0.0.1:56982/\n    username: mysql_user\n    password: mysql_passwd\n    sql: select * from users\n    store: true\n  - id: load\n    type: "io.kestra.plugin.jdbc.sqlserver.Batch"\n    url: jdbc:sqlserver://localhost:41433;trustServerCertificate=true\n    username: sa\n    password: Sqls3rv3r_Pa55word!\n    from: "{{ inputs.query.uri }}"\n    sql: "insert into users values( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? )"\n\n\nIn this example, we read a table from a mysql database using a Query and store it on internal storage, after generating a bulk insert that will load the resulting dataset into a Microsoft SQL Server database.\n\nEasily move data to jdbc\n\nSince we rely on Kestra\'s internal storage, any task that produces Kestra internal storage, such as JsonReader, AvroReader, ... can be used as a source. You can now move data from any source and any format thanks to Kestra plugins.\n\n# New Jdbc plugin\n\nWe also introduced 2 new jdbc plugins:\n\n * Microsoft SQL Server\n * Actian Vectorwise\n\nBoth support Query and Batch queries, so you can imagine many more use cases.\n\n\n# Kafka\n\nThe Kafka plugin is now also released with a first Produce (Consume will come soon). Like the other plugins (jdbc, json, csv, ...), the Kafka plugins rely on Kestra\'s internal storage, allowing you to send from any source to Kafka.\n\nWe currently support many types of serializers inside Kafka, the most notable ones are STRING, JSON & AVRO with support for Kafka schema registry.\n\nThis is just the beginning for this plugin but we plan to support JSON and the Protobuf schema with the schema registry. Also, as mentioned before, we want to support Consume tasks (with OU without of consumer groups). We may also want a Trigger based on Consume that allows you to start executions based on an incoming topic, we are waiting for more feedback from the community for this part.\n\n\n# Singer plugins\n\nWe have made an evolutionary improvement on our Singer plugins. Singer operates based on 2 concepts: taps (data source) and targets (destination, where you load the data). This model is smart, since you can work with many different sources, and each can be loaded to as many destinations as you need thanks to Singer specifications.\n\nPreviously, plugins had a single target task that incorporated a tap to load from one source to a single destination. Now we have 2 different tasks that allow you to download one time from a tap and send the same result to multiple destinations.\n\nHere is an example of loading GitHub from a repository to a BigQuery Dataset:\n\ntasks:\n  - id: github\n    type: io.kestra.plugin.singer.taps.GitHub\n    accessToken: "{{ vars.github.token }}"\n    repositories:\n      - kestra-io/kestra\n    startDate: "2019-07-01"\n    raw: true\n    streamsConfigurations:\n      - replicationMethod: INCREMENTAL\n        selected: true\n      - selected: false\n        stream: projects\n      - selected: false\n        stream: project_cards\n      - selected: false\n        stream: project_columns\n    runner: DOCKER\n    dockerOptions:\n      image: python:3.8\n  - id: bigquery\n    type: io.kestra.plugin.singer.targets.AdswerveBigQuery\n    addMetadataColumns: true\n    from: "{{ outputs.github.raw }}"\n    datasetId: github\n    location: EU\n    projectId: "{{ vars.serviceAccount }}"\n    serviceAccount: "{{ vars.projectId }}"\n    runner: DOCKER\n    dockerOptions:\n      image: python:3.8\n\n\nYou can still use Kestra\'s internal storage with any singer taps and use the data with any Kestra tasks:\n\n  - id: github\n    # same as above\n    raw: false\n  - id: update\n    type: "io.kestra.plugin.jdbc.sqlserver.Batch"\n    url: jdbc:sqlserver://localhost:41433;trustServerCertificate=true\n    username: sa\n    password: Sqls3rv3r_Pa55word!\n    from: "{{ outputs.github.streams.commit }}"\n    sql: "insert into commit values( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? )"\n\n\n\n\nWe also added another singer destination Oracle.\n\n\n# GCP\n\n\n# Vertex AI Custom Job\n\nVertexAI is a complete suite for machine learning that allows you to build, deploy and scale ML models faster.\n\nWe\'ve added a CustomJob that starts a Vertex AI Custom Job. This one is based on a docker image that you can launch on any type of instance, with or without a GPU. It allows you to deploy any kind of custom code to be run in ephemeral clusters and will be stopped when the job is finished. This is perfect for large-scale machine learning, but it can be used for any Docker image that requires a large compute engine without having to create a Kubernetes cluster or compute engine.\n\nThe integration will start the vertex job and wait for the job to finish before passing the job status to Kestra. We have done a deep integration, so you will also receive real-time logs for your running jobs.\n\ntasks:\n  - id: tableAnalysis\n    type: io.kestra.plugin.gcp.vertexai.CustomJob\n    delete: false\n    displayName: "{{ task.id }}"\n    projectId: "{{ vars.serviceAccount }}"\n    serviceAccount: "{{ vars.projectId }}"\n    region: europe-west1\n    spec:\n      serviceAccount: service-account-name@project-name.iam.gserviceaccount.com\n      workerPoolSpecs:\n        - containerSpec:\n            args:\n              - "-e"\n              - "{{ globals.env }}"\n            commands:\n              - /app/start.sh\n            imageUri: "{{ vars.imageUri }}"\n          machineSpec:\n            machineType: n1-standard-4\n          replicaCount: 1\n\n\n\n\n# BigQuery retry\n\nWe also improved the retry of all BigQuery tasks. By default, we retry all operations with an internal error for Google servers, but also some errors that could happen in real life, including: rateLimitExceeded, due to concurrent update, and more... These are many cases in which a simple retry will make the task successful. So we enable it by default. For a large use of BigQuery, such as our implementation at Leroy Merlin, this avoids unexpected failures that a simple retry could solve.\n\nNow we catch many errors automatically on BigQuery that can be retried.\n\n\n# Flow dependencies in Enterprise Edition\n\nFor the Enterprise Edition, we delivered the most requested features: the ability to see all flow dependencies recursively.\n\nWe also added a confirmation when deleting a flow that has dependencies, which warns the user that deleting it might break the whole production plan.\n\n\n\nThis is a valuable feature that provides a complete view of your entire data pipeline across teams. With many teams consuming data from other teams, no one can be sure whether if this flow is changed, another flow will be impacted. Impact analysis is greatly simplified with this powerful user interface.\n\n\n# Conclusion\n\nIn the meantime, we have released versions 0.4.1 and 0.4.2 to fix a few minor bugs and to provide some nice polish to our UX and UI.\n\nWe are working on the next step with a lot of new plugins allowing stronger integrations with the ecosystem.\nStay connected and follow us on GitHub, Twitter or Slack.',normalizedContent:'since our public launch, we\'ve done a lot of work to give you the best possible experience, something we hope you will come to expect from kestra. this latest release brings performance improvements to provide a smooth experience with large clusters, as well as some other great features.\n\n\n# performance for large clusters\n\nsince we already have a large deployment at leroy merlin, we have often encountered performance issues, but this one was more complicated to find. here, we\'ll outline some metrics based on our large deployment on leroy merlin\'s production environment and show you some before and after graphs for the same workload. leroy merlin\'s usage is mostly processed overnight, with all flows starting simultaneously around 3am with 4000+ executions and 40,000+ tasks.\n\nwe have done a lot of work to reduce cpu usage and latency.\n\nas you can see, the same workload previously used 3 executors (we used autoscaling), with a total usage of 2.5 cores for over 6 hours.\nafter, only 0.5 cores were necessary through most of the runtime, with a peak of only 1.5 cores for 1 hour, the whole workload was managed by only 2 executors (minimum autoscaling).\n\nbefore after\n\non the kafka side, we also see improved latency.\nthe system had a lot of flow triggers, which needed to be analyzed for each completed execution. when you have a high volume of execution, a lot of messages are sent by kafka and if your consumer is too slow, the queue fills up and increases latency.\npreviously, we had a large message lag that led to a late start of flow executions (a few minutes). the optimization allowed us to keep the start of the flow to within a few seconds.\n\nbefore after\n\nthe last graph shows the delay between the creation of the task and the task launched by the worker. since we have optimized kafka processing globally, we avoid queuing messages on kafka and reduce the delay between task creation and worker processing.\n\nbefore after\n\nall of these improvements also provide a significant reduction in total execution time. as all messages are consumed quickly, the time between each task is reduced and the total runtime is reduced.\n\nbefore after\n\nkeep in mind that leroy merlin\'s workflow is unbalanced, and all executions take place at the same time, more than 3000 executions and more than 35,000 tasks in a short period of time, making up 50% of the entire day\'s workload. we have to provide the same requirement for night processing, even if we are all asleep.\nwe have more optimizations pending, but this provided a big improvement that will allow us to handle more complex clusters with lots of streams and concurrent executions. a full blog post is coming soon to expose what we discovered while scaling a kafka streams application.\n\n\n# resilience\n\n\n# new plugins & improvement\n\n\n# jdbc plugins\n\n# batch query\n\njdbc plugins have been given a major update that allows for bulk queries. this update allows you to use any file generated by kestra storage to generate a batch query.\nyou can now read data from any task and generate a batch query to insert or update data in most jdbc databases.\n\nhere is an example:\n\ntasks:\n  - id: query\n    type: "io.kestra.plugin.jdbc.mysql.query"\n    url: jdbc:mysql://127.0.0.1:56982/\n    username: mysql_user\n    password: mysql_passwd\n    sql: select * from users\n    store: true\n  - id: load\n    type: "io.kestra.plugin.jdbc.sqlserver.batch"\n    url: jdbc:sqlserver://localhost:41433;trustservercertificate=true\n    username: sa\n    password: sqls3rv3r_pa55word!\n    from: "{{ inputs.query.uri }}"\n    sql: "insert into users values( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? )"\n\n\nin this example, we read a table from a mysql database using a query and store it on internal storage, after generating a bulk insert that will load the resulting dataset into a microsoft sql server database.\n\neasily move data to jdbc\n\nsince we rely on kestra\'s internal storage, any task that produces kestra internal storage, such as jsonreader, avroreader, ... can be used as a source. you can now move data from any source and any format thanks to kestra plugins.\n\n# new jdbc plugin\n\nwe also introduced 2 new jdbc plugins:\n\n * microsoft sql server\n * actian vectorwise\n\nboth support query and batch queries, so you can imagine many more use cases.\n\n\n# kafka\n\nthe kafka plugin is now also released with a first produce (consume will come soon). like the other plugins (jdbc, json, csv, ...), the kafka plugins rely on kestra\'s internal storage, allowing you to send from any source to kafka.\n\nwe currently support many types of serializers inside kafka, the most notable ones are string, json & avro with support for kafka schema registry.\n\nthis is just the beginning for this plugin but we plan to support json and the protobuf schema with the schema registry. also, as mentioned before, we want to support consume tasks (with ou without of consumer groups). we may also want a trigger based on consume that allows you to start executions based on an incoming topic, we are waiting for more feedback from the community for this part.\n\n\n# singer plugins\n\nwe have made an evolutionary improvement on our singer plugins. singer operates based on 2 concepts: taps (data source) and targets (destination, where you load the data). this model is smart, since you can work with many different sources, and each can be loaded to as many destinations as you need thanks to singer specifications.\n\npreviously, plugins had a single target task that incorporated a tap to load from one source to a single destination. now we have 2 different tasks that allow you to download one time from a tap and send the same result to multiple destinations.\n\nhere is an example of loading github from a repository to a bigquery dataset:\n\ntasks:\n  - id: github\n    type: io.kestra.plugin.singer.taps.github\n    accesstoken: "{{ vars.github.token }}"\n    repositories:\n      - kestra-io/kestra\n    startdate: "2019-07-01"\n    raw: true\n    streamsconfigurations:\n      - replicationmethod: incremental\n        selected: true\n      - selected: false\n        stream: projects\n      - selected: false\n        stream: project_cards\n      - selected: false\n        stream: project_columns\n    runner: docker\n    dockeroptions:\n      image: python:3.8\n  - id: bigquery\n    type: io.kestra.plugin.singer.targets.adswervebigquery\n    addmetadatacolumns: true\n    from: "{{ outputs.github.raw }}"\n    datasetid: github\n    location: eu\n    projectid: "{{ vars.serviceaccount }}"\n    serviceaccount: "{{ vars.projectid }}"\n    runner: docker\n    dockeroptions:\n      image: python:3.8\n\n\nyou can still use kestra\'s internal storage with any singer taps and use the data with any kestra tasks:\n\n  - id: github\n    # same as above\n    raw: false\n  - id: update\n    type: "io.kestra.plugin.jdbc.sqlserver.batch"\n    url: jdbc:sqlserver://localhost:41433;trustservercertificate=true\n    username: sa\n    password: sqls3rv3r_pa55word!\n    from: "{{ outputs.github.streams.commit }}"\n    sql: "insert into commit values( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? )"\n\n\n\n\nwe also added another singer destination oracle.\n\n\n# gcp\n\n\n# vertex ai custom job\n\nvertexai is a complete suite for machine learning that allows you to build, deploy and scale ml models faster.\n\nwe\'ve added a customjob that starts a vertex ai custom job. this one is based on a docker image that you can launch on any type of instance, with or without a gpu. it allows you to deploy any kind of custom code to be run in ephemeral clusters and will be stopped when the job is finished. this is perfect for large-scale machine learning, but it can be used for any docker image that requires a large compute engine without having to create a kubernetes cluster or compute engine.\n\nthe integration will start the vertex job and wait for the job to finish before passing the job status to kestra. we have done a deep integration, so you will also receive real-time logs for your running jobs.\n\ntasks:\n  - id: tableanalysis\n    type: io.kestra.plugin.gcp.vertexai.customjob\n    delete: false\n    displayname: "{{ task.id }}"\n    projectid: "{{ vars.serviceaccount }}"\n    serviceaccount: "{{ vars.projectid }}"\n    region: europe-west1\n    spec:\n      serviceaccount: service-account-name@project-name.iam.gserviceaccount.com\n      workerpoolspecs:\n        - containerspec:\n            args:\n              - "-e"\n              - "{{ globals.env }}"\n            commands:\n              - /app/start.sh\n            imageuri: "{{ vars.imageuri }}"\n          machinespec:\n            machinetype: n1-standard-4\n          replicacount: 1\n\n\n\n\n# bigquery retry\n\nwe also improved the retry of all bigquery tasks. by default, we retry all operations with an internal error for google servers, but also some errors that could happen in real life, including: ratelimitexceeded, due to concurrent update, and more... these are many cases in which a simple retry will make the task successful. so we enable it by default. for a large use of bigquery, such as our implementation at leroy merlin, this avoids unexpected failures that a simple retry could solve.\n\nnow we catch many errors automatically on bigquery that can be retried.\n\n\n# flow dependencies in enterprise edition\n\nfor the enterprise edition, we delivered the most requested features: the ability to see all flow dependencies recursively.\n\nwe also added a confirmation when deleting a flow that has dependencies, which warns the user that deleting it might break the whole production plan.\n\n\n\nthis is a valuable feature that provides a complete view of your entire data pipeline across teams. with many teams consuming data from other teams, no one can be sure whether if this flow is changed, another flow will be impacted. impact analysis is greatly simplified with this powerful user interface.\n\n\n# conclusion\n\nin the meantime, we have released versions 0.4.1 and 0.4.2 to fix a few minor bugs and to provide some nice polish to our ux and ui.\n\nwe are working on the next step with a lot of new plugins allowing stronger integrations with the ecosystem.\nstay connected and follow us on github, twitter or slack.',charsets:{}},{title:"Integrating Kestra and Debezium to capture database changes without Kafka Connect",frontmatter:{title:"Integrating Kestra and Debezium to capture database changes without Kafka Connect",description:"Discover how Leroy Merlin moved all their data pipelines to Google Cloud with Kestra",date:"2022-04-05T12:00:00.000Z",layout:"BlogsPost",author:{name:"Ludovic Dehon",image:"ldehon",twitter:"@tchiotludo"},image:"/blogs/2022-04-05-debezium-without-kafka-connect.jpg",meta:[{property:"article:published_time",content:"2022-04-05T12:00:00.000Z"},{property:"article:modified_time",content:"2022-04-05T08:47:37.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Integrating Kestra and Debezium to capture database changes without Kafka Connect"},{property:"og:description",content:"Discover how Leroy Merlin moved all their data pipelines to Google Cloud with Kestra | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"article"},{property:"og:url",content:"https://kestra.io/blogs/2022-04-05-debezium-without-kafka-connect.html"},{property:"og:image",content:"https://kestra.io/blogs/2022-04-05-debezium-without-kafka-connect.jpg"},{name:"twitter:title",content:"Integrating Kestra and Debezium to capture database changes without Kafka Connect"},{name:"twitter:description",content:"Discover how Leroy Merlin moved all their data pipelines to Google Cloud with Kestra | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/blogs/2022-04-05-debezium-without-kafka-connect.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/blogs/2022-04-05-debezium-without-kafka-connect.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Ludovic Dehon"},{name:"twitter:creator",content:"@tchiotludo"}]},regularPath:"/blogs/2022-04-05-debezium-without-kafka-connect.html",relativePath:"blogs/2022-04-05-debezium-without-kafka-connect.md",key:"v-a0b325ba",path:"/blogs/2022-04-05-debezium-without-kafka-connect.html",headers:[{level:2,title:"Real-Time Delivery",slug:"real-time-delivery",normalizedTitle:"real-time delivery",charIndex:1476},{level:2,title:"Trouble in Paradise",slug:"trouble-in-paradise",normalizedTitle:"trouble in paradise",charIndex:3107},{level:2,title:"Kestra and Micro-Batch to the Rescue",slug:"kestra-and-micro-batch-to-the-rescue",normalizedTitle:"kestra and micro-batch to the rescue",charIndex:4651}],lastUpdated:"4/5/2022, 8:47:37 AM",lastUpdatedTimestamp:1649148457e3,headersStr:"Real-Time Delivery Trouble in Paradise Kestra and Micro-Batch to the Rescue",content:'There are several products on the market to help you with your data pipeline management and data orchestration. Each handles data differently, and it can be difficult to determine the differences because many perform the same tasks, but with different methods. In this article, we will be discussing the differences between Debezium with Kafka Connect and our own product, Kestra (an open-source orchestration and scheduling platform with a robust set of plugins) and how they can integrate to provide a more efficient and cost-effective hybrid solution.\n\n\n\nFirst, let’s discuss Debezium. Debezium is an open-source change data capture platform from Red Hat, offering a set of distributed services that captures row-level changes in your databases so that connected applications can see and respond to those changes in real-time. All changes (row-level) are recorded in a transaction log, and each application simply reads the transaction logs that are pertinent to them.\n\nDebezium ensures exactly-once delivery of all changes and ensures that changes arrive in the order they were sent.\n\nIn other words, Debezium is essentially a modernized method of Change Data Capture (CDC). CDC is the process of identifying and capturing changes made to data in a database, and then delivering those changes in real-time to a downstream process or system. Debezium allows the monitoring of changes in data from multiple sources and can monitor multiple databases of different types.\n\n\n# Real-Time Delivery\n\nThe key selling point of Debezium is the real-time delivery of data changes whether from streaming sources or databases with heavy workloads. To support modern high-volume workloads, particularly streaming workloads, sources require constant monitoring, which means that connectors for Debezium must operate continuously. Debezium leverages Kafka Connect to establish this always-on connection, capturing data changes whenever they occur. This can consume a fair bit of bandwidth, as well as resources (CPU, memory) to process the events pushed through the pipeline.\n\nDebezium continuously monitors upstream databases, and for each row-level change, produces a corresponding event that completely describes those changes. Because the Kafka Connect connectors operate continuously, and because events have to make sense even if the structure of the tables change over time, events can grow quite large. The larger and more complex an event, the more resources it requires.\n\nAdd to this that even in the simplest Debezium deployment, there are at least two Kafka Connect connectors running at any given time. One pulls data from the upstream source, whatever that may be, and the second pushes data changes out to various destinations data warehouses, databases, applications, etc). These connectors operate continuously, at a steady bandwidth, with dedicated processing and memory power to ensure that data is both received and delivered as close to instantaneously as possible. When this capacity is warranted, Debezium is an efficient and performance-oriented machine, perfect for real-time CDC use cases.\n\n\n# Trouble in Paradise\n\nWhile Debezium offers clear advantages for real-time CDC use cases, it may not be efficient if the requirements are not strictly real-time. Depending on the complexity of your deployment, the number of persistent connectors (all Kafka Connect) required can become a drain on system resources. This is because for each process that consumes a Debezium event, a corresponding process consumes the same event from Kafka to the data warehouse. Each additional source requires two Kafka Connect connectors. Each process consumes a set minimum resource amount, regardless of the traffic.\n\nFor example, from Amazon MSK connect documentation :\n\n> Each MCU represents 1 vCPU of compute and 4 GiB of memory.\n\n\n\nThis lead to $160 for 1 source and 1 destination per month.\n\nChances are, in a complex deployment, a fair number of sources may not generate much traffic. It might only be a few rows per hour. For such a source, having a persistent, always-on process does not make much sense.\n\nThis situation can be exacerbated by your company ACLS. Because you do not want every user in your organization consuming the entirety of your dataset, you may need to define fine-grained role-based access control, and these rules, once applied, can necessitate numerous additional connectors (Kafka Connect), each requiring and competing for the same system resources.\n\nIn short, the same features that make Debezium’s performance in streaming / high volume scenarios can quickly become inefficient if the requirements are less stringent.\n\n\n# Kestra and Micro-Batch to the Rescue\n\nKestra is an orchestration and scheduling platform that is designed to simplify the building, running, scheduling, and monitoring of complex data pipelines. Data pipelines can be built in real-time, no matter how complex the workflow, and can connect to multiple resources as needed (including Debezium).\n\nReal-time change data capture is an amazing accomplishment, and a valuable tool to have in your toolbox, to be sure. But a racecar is not very useful on a highway, or in a school zone, and in the same way, real-time delivery of data changes is not required for every use case. A dashboard or KPI might only need to be refreshed once a day, or every few hours, for example. Whether it is cloud services or on-premises, resources cost money, and the challenge is to make the most efficient use of resources based on your requirements. Bandwidth, compute resources, or services based on throughput (such as BigQuery) are all expensive commodities, especially if they are always running. If real-time performance is not necessary, then why waste money on resources you do not need?\n\n\n\nKestra is perfect for such situations and can scale performance up or down as needed from periodic updates to near-real-time scenarios. This functionality is possible due to the use of batch or micro-batch processing. Batch processing sends data at intervals, rather than in real-time. It is typically used when data freshness is not a mission-critical issue, and when you are working with large datasets and running complex algorithms that require a full dataset (sorting for example). Micro-batch processing is a similar process but on much smaller data sets, typically about a minute or so’s worth of data. This allows for near-real-time processing of datasets and is perfect for low-flow situations where a few minutes of delay is acceptable. In many cases, micro-batch processing and stream processing are used interchangeably in data architecture descriptions, because, depending on configuration, they can offer nearly the same performance.\n\nA complex use case involving multiple data sources might have varying requirements, some real-time, some more forgiving. For these, a hybrid solution might be advisable. Debezium can be used (with the Kafka Connect service) for those streams that require real-time CDC. For near-real-time or batch processing, you can leverage Kestra. Kestra can consume events directly (without configuring a Kafka Connect service) by leveraging Debezium Engine and forward to any destination supported by Kestra (BigQuery, JDBC, Cloud Storage, and more), without a streaming pipeline. Changes/transfers can be scheduled for any interval, every 5 minutes, every hour, every day, whatever is required. Triggers can also be used to create an execution whenever there is data available. Kestra can also be leveraged to transform data before sending it to the destination.\n\nDebezium leverages Kafka and Kafka Connect to deliver streaming performance, and the larger and more complex the deployment, the more challenging it can be to deliver enterprise-grade 99.9% availability while still managing resources and costs. Managing it in the cloud can be even more challenging. This involves picking the appropriate compute instance for the brokers, sizing the non-ephemeral storage accordingly, applying end-to-end security, ensuring high availability across availability zones, and more. These same challenges apply when Kafka is a component of another service as well - there is a reason that many organizations turn to managed services rather than deploying their own instance on-premise. There are challenges to visibility as well - users must be familiar with Kafka eccentricities to troubleshoot issues via logs and dashboards.\n\nBy leveraging Kestra for near-real-time or batch workloads, and Debezium for streaming, some of the advantages are obvious. This allows for a solution that leverages only the resources required for the use case in question, rather than applying resource-intensive streaming resources to every process. For workflows that are not real-time, CPU and memory resources are limited or shut down when not in use. Services that charge based on the throughput, such as BigQuery, are only charged when in use. All of this combines to create an efficient solution that wastes no resources and saves money. All row-level changes are still captured, and with Debezium, a built-in feature snapshots the database on the first start.\n\n\n\nBut there are less obvious advantages to adding Kestra to the mix. Pipelines are visibly presented, ensuring that dependencies are continuously monitored, and you can see exactly where in a data pipeline the problem lies. This monitoring capacity provides a great deal of peace of mind when managing different data flow requirements, and mitigates the complexity of clustered Kafka deployments (such as those that make part of more complex Debezium deployments).\n\nChanges to pipelines can be iterative as well with Kestra. A working data pipeline can be modified on the fly with a few lines of yaml code, adding new components and integrations without disrupting a working flow. A new pipeline of data can be applied in minutes.\n\nid: debezium-mysql\nnamespace: com.kestra.lde\n\ntasks:\n  - id: capture\n    type: io.kestra.plugin.debezium.mysql.Capture\n    hostname: 192.168.0.1\n    maxDuration: "PT1M"\n    password: mysql_passwd\n    username: root\n  - id: fileTransform\n    type: io.kestra.plugin.scripts.nashorn.FileTransform\n    from: "{{ outputs.capture.uris.users }}"\n    script: |\n      if (row[\'contactName\']) {\n        row[\'contactName\'] = "*".repeat(row[\'contactName\'].length);\n      }\n  - id: jsonWriter\n    type: io.kestra.plugin.serdes.json.JsonWriter\n    from: "{{ outputs.fileTransform.uri }}"\n  - id: load\n    type: io.kestra.plugin.gcp.bigquery.Load\n    destinationTable: my-project.demo.users\n    format: JSON\n    from: "{{outputs.jsonWriter.uri }}"\n    writeDisposition: WRITE_APPEND\n\n\nKestra’s flexibility is key to this potential solution and many others. With numerous plugins, Kestra offers deep integrations with multiple systems to create complex workflows. Systems without existing plugins can be integrated with simple-to-create containers such as Docker and Kubernetes. The only limit is your imagination. We hope to highlight many such possibilities in the coming weeks.\n\nOur newly created Debezium plugins include connectors for Postgres and MySQL, and we are steadily working to include additional connectors to improve our product. Our current roadmap includes connectors for MongoDB, PostgresSQL, Oracle, SQL Server, Cassandra, and more. What connectors do you think we should work on first? We’d love to hear from you!\n\nGive us your opinion on this Twitter poll.',normalizedContent:'there are several products on the market to help you with your data pipeline management and data orchestration. each handles data differently, and it can be difficult to determine the differences because many perform the same tasks, but with different methods. in this article, we will be discussing the differences between debezium with kafka connect and our own product, kestra (an open-source orchestration and scheduling platform with a robust set of plugins) and how they can integrate to provide a more efficient and cost-effective hybrid solution.\n\n\n\nfirst, let’s discuss debezium. debezium is an open-source change data capture platform from red hat, offering a set of distributed services that captures row-level changes in your databases so that connected applications can see and respond to those changes in real-time. all changes (row-level) are recorded in a transaction log, and each application simply reads the transaction logs that are pertinent to them.\n\ndebezium ensures exactly-once delivery of all changes and ensures that changes arrive in the order they were sent.\n\nin other words, debezium is essentially a modernized method of change data capture (cdc). cdc is the process of identifying and capturing changes made to data in a database, and then delivering those changes in real-time to a downstream process or system. debezium allows the monitoring of changes in data from multiple sources and can monitor multiple databases of different types.\n\n\n# real-time delivery\n\nthe key selling point of debezium is the real-time delivery of data changes whether from streaming sources or databases with heavy workloads. to support modern high-volume workloads, particularly streaming workloads, sources require constant monitoring, which means that connectors for debezium must operate continuously. debezium leverages kafka connect to establish this always-on connection, capturing data changes whenever they occur. this can consume a fair bit of bandwidth, as well as resources (cpu, memory) to process the events pushed through the pipeline.\n\ndebezium continuously monitors upstream databases, and for each row-level change, produces a corresponding event that completely describes those changes. because the kafka connect connectors operate continuously, and because events have to make sense even if the structure of the tables change over time, events can grow quite large. the larger and more complex an event, the more resources it requires.\n\nadd to this that even in the simplest debezium deployment, there are at least two kafka connect connectors running at any given time. one pulls data from the upstream source, whatever that may be, and the second pushes data changes out to various destinations data warehouses, databases, applications, etc). these connectors operate continuously, at a steady bandwidth, with dedicated processing and memory power to ensure that data is both received and delivered as close to instantaneously as possible. when this capacity is warranted, debezium is an efficient and performance-oriented machine, perfect for real-time cdc use cases.\n\n\n# trouble in paradise\n\nwhile debezium offers clear advantages for real-time cdc use cases, it may not be efficient if the requirements are not strictly real-time. depending on the complexity of your deployment, the number of persistent connectors (all kafka connect) required can become a drain on system resources. this is because for each process that consumes a debezium event, a corresponding process consumes the same event from kafka to the data warehouse. each additional source requires two kafka connect connectors. each process consumes a set minimum resource amount, regardless of the traffic.\n\nfor example, from amazon msk connect documentation :\n\n> each mcu represents 1 vcpu of compute and 4 gib of memory.\n\n\n\nthis lead to $160 for 1 source and 1 destination per month.\n\nchances are, in a complex deployment, a fair number of sources may not generate much traffic. it might only be a few rows per hour. for such a source, having a persistent, always-on process does not make much sense.\n\nthis situation can be exacerbated by your company acls. because you do not want every user in your organization consuming the entirety of your dataset, you may need to define fine-grained role-based access control, and these rules, once applied, can necessitate numerous additional connectors (kafka connect), each requiring and competing for the same system resources.\n\nin short, the same features that make debezium’s performance in streaming / high volume scenarios can quickly become inefficient if the requirements are less stringent.\n\n\n# kestra and micro-batch to the rescue\n\nkestra is an orchestration and scheduling platform that is designed to simplify the building, running, scheduling, and monitoring of complex data pipelines. data pipelines can be built in real-time, no matter how complex the workflow, and can connect to multiple resources as needed (including debezium).\n\nreal-time change data capture is an amazing accomplishment, and a valuable tool to have in your toolbox, to be sure. but a racecar is not very useful on a highway, or in a school zone, and in the same way, real-time delivery of data changes is not required for every use case. a dashboard or kpi might only need to be refreshed once a day, or every few hours, for example. whether it is cloud services or on-premises, resources cost money, and the challenge is to make the most efficient use of resources based on your requirements. bandwidth, compute resources, or services based on throughput (such as bigquery) are all expensive commodities, especially if they are always running. if real-time performance is not necessary, then why waste money on resources you do not need?\n\n\n\nkestra is perfect for such situations and can scale performance up or down as needed from periodic updates to near-real-time scenarios. this functionality is possible due to the use of batch or micro-batch processing. batch processing sends data at intervals, rather than in real-time. it is typically used when data freshness is not a mission-critical issue, and when you are working with large datasets and running complex algorithms that require a full dataset (sorting for example). micro-batch processing is a similar process but on much smaller data sets, typically about a minute or so’s worth of data. this allows for near-real-time processing of datasets and is perfect for low-flow situations where a few minutes of delay is acceptable. in many cases, micro-batch processing and stream processing are used interchangeably in data architecture descriptions, because, depending on configuration, they can offer nearly the same performance.\n\na complex use case involving multiple data sources might have varying requirements, some real-time, some more forgiving. for these, a hybrid solution might be advisable. debezium can be used (with the kafka connect service) for those streams that require real-time cdc. for near-real-time or batch processing, you can leverage kestra. kestra can consume events directly (without configuring a kafka connect service) by leveraging debezium engine and forward to any destination supported by kestra (bigquery, jdbc, cloud storage, and more), without a streaming pipeline. changes/transfers can be scheduled for any interval, every 5 minutes, every hour, every day, whatever is required. triggers can also be used to create an execution whenever there is data available. kestra can also be leveraged to transform data before sending it to the destination.\n\ndebezium leverages kafka and kafka connect to deliver streaming performance, and the larger and more complex the deployment, the more challenging it can be to deliver enterprise-grade 99.9% availability while still managing resources and costs. managing it in the cloud can be even more challenging. this involves picking the appropriate compute instance for the brokers, sizing the non-ephemeral storage accordingly, applying end-to-end security, ensuring high availability across availability zones, and more. these same challenges apply when kafka is a component of another service as well - there is a reason that many organizations turn to managed services rather than deploying their own instance on-premise. there are challenges to visibility as well - users must be familiar with kafka eccentricities to troubleshoot issues via logs and dashboards.\n\nby leveraging kestra for near-real-time or batch workloads, and debezium for streaming, some of the advantages are obvious. this allows for a solution that leverages only the resources required for the use case in question, rather than applying resource-intensive streaming resources to every process. for workflows that are not real-time, cpu and memory resources are limited or shut down when not in use. services that charge based on the throughput, such as bigquery, are only charged when in use. all of this combines to create an efficient solution that wastes no resources and saves money. all row-level changes are still captured, and with debezium, a built-in feature snapshots the database on the first start.\n\n\n\nbut there are less obvious advantages to adding kestra to the mix. pipelines are visibly presented, ensuring that dependencies are continuously monitored, and you can see exactly where in a data pipeline the problem lies. this monitoring capacity provides a great deal of peace of mind when managing different data flow requirements, and mitigates the complexity of clustered kafka deployments (such as those that make part of more complex debezium deployments).\n\nchanges to pipelines can be iterative as well with kestra. a working data pipeline can be modified on the fly with a few lines of yaml code, adding new components and integrations without disrupting a working flow. a new pipeline of data can be applied in minutes.\n\nid: debezium-mysql\nnamespace: com.kestra.lde\n\ntasks:\n  - id: capture\n    type: io.kestra.plugin.debezium.mysql.capture\n    hostname: 192.168.0.1\n    maxduration: "pt1m"\n    password: mysql_passwd\n    username: root\n  - id: filetransform\n    type: io.kestra.plugin.scripts.nashorn.filetransform\n    from: "{{ outputs.capture.uris.users }}"\n    script: |\n      if (row[\'contactname\']) {\n        row[\'contactname\'] = "*".repeat(row[\'contactname\'].length);\n      }\n  - id: jsonwriter\n    type: io.kestra.plugin.serdes.json.jsonwriter\n    from: "{{ outputs.filetransform.uri }}"\n  - id: load\n    type: io.kestra.plugin.gcp.bigquery.load\n    destinationtable: my-project.demo.users\n    format: json\n    from: "{{outputs.jsonwriter.uri }}"\n    writedisposition: write_append\n\n\nkestra’s flexibility is key to this potential solution and many others. with numerous plugins, kestra offers deep integrations with multiple systems to create complex workflows. systems without existing plugins can be integrated with simple-to-create containers such as docker and kubernetes. the only limit is your imagination. we hope to highlight many such possibilities in the coming weeks.\n\nour newly created debezium plugins include connectors for postgres and mysql, and we are steadily working to include additional connectors to improve our product. our current roadmap includes connectors for mongodb, postgressql, oracle, sql server, cassandra, and more. what connectors do you think we should work on first? we’d love to hear from you!\n\ngive us your opinion on this twitter poll.',charsets:{cjk:!0}},{title:"ELT vs ETL: Why not both?",frontmatter:{title:"ELT vs ETL: Why not both?",description:"A conversation about data pipelines is never complete without discussing ingestion practices, such as ETL and ELT. You might want to consider a hybrid solution.",date:"2022-04-27T07:00:00.000Z",layout:"BlogsPost",author:{name:"Ludovic Dehon",image:"ldehon",twitter:"@tchiotludo"},image:"/blogs/2022-04-27-etl-vs-elt.jpg",meta:[{property:"article:published_time",content:"2022-04-27T07:00:00.000Z"},{property:"article:modified_time",content:"2022-04-27T05:44:28.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"ELT vs ETL: Why not both?"},{property:"og:description",content:"A conversation about data pipelines is never complete without discussing ingestion practices, such as ETL and ELT. You might want to consider a hybrid solution. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"article"},{property:"og:url",content:"https://kestra.io/blogs/2022-04-27-etl-vs-elt.html"},{property:"og:image",content:"https://kestra.io/blogs/2022-04-27-etl-vs-elt.jpg"},{name:"twitter:title",content:"ELT vs ETL: Why not both?"},{name:"twitter:description",content:"A conversation about data pipelines is never complete without discussing ingestion practices, such as ETL and ELT. You might want to consider a hybrid solution. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/blogs/2022-04-27-etl-vs-elt.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/blogs/2022-04-27-etl-vs-elt.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Ludovic Dehon"},{name:"twitter:creator",content:"@tchiotludo"}]},regularPath:"/blogs/2022-04-27-etl-vs-elt.html",relativePath:"blogs/2022-04-27-etl-vs-elt.md",key:"v-b5fa0b7a",path:"/blogs/2022-04-27-etl-vs-elt.html",headers:[{level:2,title:"ETL",slug:"etl",normalizedTitle:"etl",charIndex:102},{level:2,title:"ELT",slug:"elt",normalizedTitle:"elt",charIndex:110},{level:2,title:"Drawbacks",slug:"drawbacks",normalizedTitle:"drawbacks",charIndex:7641},{level:2,title:"Kestra Handles Complexity",slug:"kestra-handles-complexity",normalizedTitle:"kestra handles complexity",charIndex:8715}],lastUpdated:"4/27/2022, 5:44:28 AM",lastUpdatedTimestamp:1651038268e3,headersStr:"ETL ELT Drawbacks Kestra Handles Complexity",content:"A conversation about data pipelines is never complete without discussing ingestion practices, such as ETL and ELT (extract, transform, load, or extract, load, and transform). ETL transforms the data before loading it into a data warehouse, while ELT loads the data and allows the transformation to be handled within the data warehouse.\n\nEach practice is rooted in strong business needs, and are necessary parts of modern data flow practices. However, discussion of these practices is often couched in a competitive narrative, asking which one is better. You'll find any number of blogs out there with a title including \"ETL vs ELT\" in some way, shape or form. However, there are strong reasons why both are seen in use today, and neither one is going away anytime soon. So in this article, we'll cover these two methods, the reasons they are so often pitted against one another, the situations in which one or the other thrive, and why, with Kestra's unique capabilities, you might want to consider a hybrid solution. Let's get started, shall we?\n\n\n# ETL\n\n\n\nFirst, let's look at the stages involved in both processes. As you might guess from the acronyms, both use the same stages, just in a different order.\n\n * Extract: This refers to pulling the source data from the original database or data source. With ETL, the data goes into a temporary staging area. With ELT, it goes immediately into a data lake storage system.\n * Transform: This refers to the process of changing the format/structure of the information so that it can integrate with the target system and the rest of the data within that system.\n * Load: This refers to the process of inserting the information into a data storage system. In ELT scenarios, raw/unstructured data is loaded, then transformed within the target system. In ETL, the raw data is transformed into structured data prior to reaching the target.\n\nETL emerged as early as the 1970s, in a response to the high cost of storage in what used to pass for datacenters in those days. Co-location facilities were rare, the cloud was not even a glimmer in the developer's eye, and most large organizations maintained their own centralized data for many years. Storage was, compared to today, highly expensive, and moving large amounts of data between systems was both costly and time-consuming, so simply storing raw unprocessed data was not very useful. For this reason, it was important to transform raw data before it was delivered to any system that would analyse the data, ensuring it was in a usable format for the system it was delivered to.\n\nTo this day, ETL is primarily used for on-premise solutions in which there is finite processing power and/or memory. Rather than wasting resources by moving or storing large amounts of data that is not useful, the data is sorted and transformed prior to being ingested by a storage destination where it can be analyzed by a business intelligence tool.\n\nOriginally, the ETL process was often coded by hand to collect data from relational databases. Now there are specialized tools for ETL that can gather and process data from multiple sources and automate these operations. Some common tools used in this space include Oracle Data Integrator, Talend, and Pentaho Data Integration, among many others. Because of the prevalence of tools specifically designed to simplify the ETL process, Many organizations end up with centralized data engineer teams specialized in a particular tool or toolset, rather than being trained to create an ETL pipeline. This can be a challenge because:\n\n 1. A new employee not trained on the platform can become a bottle-neck, slowing or stopping the creation of new pipelines.\n 2. The organization is often locked into a particular product or method, and may not be able to easily integrate newer best practices.\n\nThere are many reasons to implement ETL processes in the modern era, reasons that the availability of cheaper cloud storage, streaming processes and other advances have not superseded. Some of these include:\n\n * Technology Debt/Investment --- Your organization may be invested in solutions that require a particular format of data, or the raw data your organization gathers may be for a very specific purpose, and the format in which it is received may be important to internal processes. Modern ETL solutions are faster and easier than in the past, and there may be little impetus to change.\n * Continuous processes with a well-defined workflow --- ETL first extracts data from homogeneous or heterogeneous data sources. Next, it deposits the data into a staging area. From there, the data goes through a cleansing process, gets enriched and transformed, and is finally stored in a data warehouse. Cleansed and formatted data is essential to a defined workflow.\n * Compliance --- Some regulations prohibit storing information (particularly unencrypted information) in servers outside of a specific region or country's borders. Companies governed by GDPR, HIPAA, or CCPA protocols often need to remove, mask or encrypt data fields. It is more secure to perform such operations via an ETL process, rather than ELT. ELT requires the upload of potentially sensitive data first, prior to transformation to secure it. This means it appears in logs, where sysadmins can access it. In addition, GDPR compliance may be violated because non-compliant data might leave the EU prior to reaching a data lake or other storage medium.\n\n\n# ELT\n\n\n\nWith the advent of much cheaper storage, and cloud advances such as data lakes, ELT has gained a great deal of popularity in the past decade or so. It is often considered the more modern solution. There is no need for data staging, and because the target storage can essentially be anything, including data lakes, it can make use of any or multiple data types, unstructured, structured, semi-structured, or even raw data. This flexibility is key to its strong adoption in modern solutions, particularly when large datasets and streaming are involved.\n\nThe ELT process is particularly suited to data lakes. Data Lakes are large repositories that are data agnostic --- in other words, capable of storing data in any and all formats. Because of this, it can be far more efficient to avoid the bottleneck of a staging area capable of handling a comparatively limited dataset.\n\nThe key advantages are:\n\n * Low maintenance: Database resources can be used to transform the data, and there are many different options ready and available.\n * Quicker loading: No previous transformation means that the data can simply be ingested without bottlenecks.\n * As Needed Transformation: In ELT, the data is transformed after loading, but it does not have to be immediately transformed, only when it is needed for a particular purpose.\n * High Data Availability: Once loaded, the data is always available. Tools that can use unstructured data can be leveraged as well as those that rely on structured data.\n\nELT democratizes data gathering processes, because the source can equally be anything. Just as the target (usually a data lake or large scale database) should be able to handle any type of data, the sources can be equally disparate. This is important for modern workloads, because modern use cases stream data from IoT sources, raw data, video, documents, files, and more. This is not to mention multi-cloud processes. Sometimes data integrations occur across organizations, across different cloud platforms, across regions. Flexibility is key to making these modern processes work. ETL processes simply cannot handle the volume, nor the variances involved. Certainly not in a real-time scenario.\n\n\n# Drawbacks\n\n\n\nETL processes, while a more modern and flexible solution, is not suitable in every situation, for some of the reasons we already covered. The most important of which is the previously mentioned compliance issue. Because no transformation is performed upon the data, raw, unencrypted data is available at any time prior to reaching the database. Records that can be used to reconstruct the data or at least the metadata can be retrieved from logs by administrators for the system. Because data can traverse international boundaries, encryption is often the least requirement with regards to compliance.\n\nDeletion of data is not enough of a precaution in these scenarios, because delete processes can often crash, particularly when dealing with large chunks of information. Often, the data can be personal in nature, ie hospital records, financial information, and more, which is the reason these regulations are so strict. Many data warehouses are not equipped with adequate transaction support to ensure the query required to delete the data is successful.\n\n\n# Kestra Handles Complexity\n\nWhether you need ETL or ELT processes in your solution, Kestra can handle it. Indeed, Kestra can manage both in the same solution, handling even the most complex workflows. ETL processes can be used to scrub sensitive data, ensuring compliance, loading the transformed data within a temporary table. With Kestra's capacity for parallel flows, the rest of the data can be handled by ELT.\n\nKestra is able to perform ELT workloads on its own or with integrations to many popular solutions. It can handle loading data from BigQuery, CopyIn, Postgres, and more. A simple query can be performed to move the data, for example, SQL INSERT INTO SELECT statements. Dependencies between flows can be handled with Kestra's trigger mechanisms to transform the data within the database (cloud or physical).\n\nETL is just as easily managed by Kestra's flexible workflows. FileTransform plugins are one possible method. You can write a simple Python/Javascript/Groovy script to transform an extracted dataset data row per row. For example, you can remove columns with personal data, clean columns by removing dates, and more. Integrating a custom docker image into your workflow is another method that can be used to transform the data. Not only can you transform data row per row, you can potentially handle conversion of data between formats, for example, transforming AVRO data to JSON or CSV, or vice versa.\n\nid: my-first-flow\nnamespace: my.company.teams\ninputs:\n  - type: FILE\n    name: uploaded\ntasks:\n  - id: csvReader\n    type: io.kestra.plugin.serdes.csv.CsvReader\n    from: \"{{ inputs.uploaded }}\"\n  - id: fileTransform\n    type: io.kestra.plugin.scripts.nashorn.FileTransform\n    description: This task will anonymize the contactName with a custom nashorn script (javascript over jvm). This show that you able to handle custom transformation or remapping in the ETL way\n    from: \"{{ outputs.csvReader.uri }}\"\n    script: |\n      if (row['contactName']) {\n        row['contactName'] = \"*\".repeat(row['contactName'].length);\n      }\n\n\nThis is not usually possible with most solutions. Most ELT tools often prevent ETL processes by design because they cannot handle heavy transform operations. Kestra is able to handle both because all transformations are considered to be row per row, and therefore do not use any memory to perform the function, only CPU.\n\n\n\nWith Kestra's innate flexibility, and many integrations, you are not locked into the choice of one ingestion method or the other. Complex workflows can be developed, whether in parallel or sequentially, to deliver both ELT and ETL processes. Simple descriptive yaml is used to connect plugins, and to create flows. Because workflows created in Kestra are represented visually, and issues can be seen in relation to individual tasks, there is no need to fear complexity. Trouble can be traced to its source in an instant, allowing you to try new things and come up with a new solution without fear. Give it a try, and let us know what you come up with!\n\nPerhaps your unique solution can become our next showcase!",normalizedContent:"a conversation about data pipelines is never complete without discussing ingestion practices, such as etl and elt (extract, transform, load, or extract, load, and transform). etl transforms the data before loading it into a data warehouse, while elt loads the data and allows the transformation to be handled within the data warehouse.\n\neach practice is rooted in strong business needs, and are necessary parts of modern data flow practices. however, discussion of these practices is often couched in a competitive narrative, asking which one is better. you'll find any number of blogs out there with a title including \"etl vs elt\" in some way, shape or form. however, there are strong reasons why both are seen in use today, and neither one is going away anytime soon. so in this article, we'll cover these two methods, the reasons they are so often pitted against one another, the situations in which one or the other thrive, and why, with kestra's unique capabilities, you might want to consider a hybrid solution. let's get started, shall we?\n\n\n# etl\n\n\n\nfirst, let's look at the stages involved in both processes. as you might guess from the acronyms, both use the same stages, just in a different order.\n\n * extract: this refers to pulling the source data from the original database or data source. with etl, the data goes into a temporary staging area. with elt, it goes immediately into a data lake storage system.\n * transform: this refers to the process of changing the format/structure of the information so that it can integrate with the target system and the rest of the data within that system.\n * load: this refers to the process of inserting the information into a data storage system. in elt scenarios, raw/unstructured data is loaded, then transformed within the target system. in etl, the raw data is transformed into structured data prior to reaching the target.\n\netl emerged as early as the 1970s, in a response to the high cost of storage in what used to pass for datacenters in those days. co-location facilities were rare, the cloud was not even a glimmer in the developer's eye, and most large organizations maintained their own centralized data for many years. storage was, compared to today, highly expensive, and moving large amounts of data between systems was both costly and time-consuming, so simply storing raw unprocessed data was not very useful. for this reason, it was important to transform raw data before it was delivered to any system that would analyse the data, ensuring it was in a usable format for the system it was delivered to.\n\nto this day, etl is primarily used for on-premise solutions in which there is finite processing power and/or memory. rather than wasting resources by moving or storing large amounts of data that is not useful, the data is sorted and transformed prior to being ingested by a storage destination where it can be analyzed by a business intelligence tool.\n\noriginally, the etl process was often coded by hand to collect data from relational databases. now there are specialized tools for etl that can gather and process data from multiple sources and automate these operations. some common tools used in this space include oracle data integrator, talend, and pentaho data integration, among many others. because of the prevalence of tools specifically designed to simplify the etl process, many organizations end up with centralized data engineer teams specialized in a particular tool or toolset, rather than being trained to create an etl pipeline. this can be a challenge because:\n\n 1. a new employee not trained on the platform can become a bottle-neck, slowing or stopping the creation of new pipelines.\n 2. the organization is often locked into a particular product or method, and may not be able to easily integrate newer best practices.\n\nthere are many reasons to implement etl processes in the modern era, reasons that the availability of cheaper cloud storage, streaming processes and other advances have not superseded. some of these include:\n\n * technology debt/investment --- your organization may be invested in solutions that require a particular format of data, or the raw data your organization gathers may be for a very specific purpose, and the format in which it is received may be important to internal processes. modern etl solutions are faster and easier than in the past, and there may be little impetus to change.\n * continuous processes with a well-defined workflow --- etl first extracts data from homogeneous or heterogeneous data sources. next, it deposits the data into a staging area. from there, the data goes through a cleansing process, gets enriched and transformed, and is finally stored in a data warehouse. cleansed and formatted data is essential to a defined workflow.\n * compliance --- some regulations prohibit storing information (particularly unencrypted information) in servers outside of a specific region or country's borders. companies governed by gdpr, hipaa, or ccpa protocols often need to remove, mask or encrypt data fields. it is more secure to perform such operations via an etl process, rather than elt. elt requires the upload of potentially sensitive data first, prior to transformation to secure it. this means it appears in logs, where sysadmins can access it. in addition, gdpr compliance may be violated because non-compliant data might leave the eu prior to reaching a data lake or other storage medium.\n\n\n# elt\n\n\n\nwith the advent of much cheaper storage, and cloud advances such as data lakes, elt has gained a great deal of popularity in the past decade or so. it is often considered the more modern solution. there is no need for data staging, and because the target storage can essentially be anything, including data lakes, it can make use of any or multiple data types, unstructured, structured, semi-structured, or even raw data. this flexibility is key to its strong adoption in modern solutions, particularly when large datasets and streaming are involved.\n\nthe elt process is particularly suited to data lakes. data lakes are large repositories that are data agnostic --- in other words, capable of storing data in any and all formats. because of this, it can be far more efficient to avoid the bottleneck of a staging area capable of handling a comparatively limited dataset.\n\nthe key advantages are:\n\n * low maintenance: database resources can be used to transform the data, and there are many different options ready and available.\n * quicker loading: no previous transformation means that the data can simply be ingested without bottlenecks.\n * as needed transformation: in elt, the data is transformed after loading, but it does not have to be immediately transformed, only when it is needed for a particular purpose.\n * high data availability: once loaded, the data is always available. tools that can use unstructured data can be leveraged as well as those that rely on structured data.\n\nelt democratizes data gathering processes, because the source can equally be anything. just as the target (usually a data lake or large scale database) should be able to handle any type of data, the sources can be equally disparate. this is important for modern workloads, because modern use cases stream data from iot sources, raw data, video, documents, files, and more. this is not to mention multi-cloud processes. sometimes data integrations occur across organizations, across different cloud platforms, across regions. flexibility is key to making these modern processes work. etl processes simply cannot handle the volume, nor the variances involved. certainly not in a real-time scenario.\n\n\n# drawbacks\n\n\n\netl processes, while a more modern and flexible solution, is not suitable in every situation, for some of the reasons we already covered. the most important of which is the previously mentioned compliance issue. because no transformation is performed upon the data, raw, unencrypted data is available at any time prior to reaching the database. records that can be used to reconstruct the data or at least the metadata can be retrieved from logs by administrators for the system. because data can traverse international boundaries, encryption is often the least requirement with regards to compliance.\n\ndeletion of data is not enough of a precaution in these scenarios, because delete processes can often crash, particularly when dealing with large chunks of information. often, the data can be personal in nature, ie hospital records, financial information, and more, which is the reason these regulations are so strict. many data warehouses are not equipped with adequate transaction support to ensure the query required to delete the data is successful.\n\n\n# kestra handles complexity\n\nwhether you need etl or elt processes in your solution, kestra can handle it. indeed, kestra can manage both in the same solution, handling even the most complex workflows. etl processes can be used to scrub sensitive data, ensuring compliance, loading the transformed data within a temporary table. with kestra's capacity for parallel flows, the rest of the data can be handled by elt.\n\nkestra is able to perform elt workloads on its own or with integrations to many popular solutions. it can handle loading data from bigquery, copyin, postgres, and more. a simple query can be performed to move the data, for example, sql insert into select statements. dependencies between flows can be handled with kestra's trigger mechanisms to transform the data within the database (cloud or physical).\n\netl is just as easily managed by kestra's flexible workflows. filetransform plugins are one possible method. you can write a simple python/javascript/groovy script to transform an extracted dataset data row per row. for example, you can remove columns with personal data, clean columns by removing dates, and more. integrating a custom docker image into your workflow is another method that can be used to transform the data. not only can you transform data row per row, you can potentially handle conversion of data between formats, for example, transforming avro data to json or csv, or vice versa.\n\nid: my-first-flow\nnamespace: my.company.teams\ninputs:\n  - type: file\n    name: uploaded\ntasks:\n  - id: csvreader\n    type: io.kestra.plugin.serdes.csv.csvreader\n    from: \"{{ inputs.uploaded }}\"\n  - id: filetransform\n    type: io.kestra.plugin.scripts.nashorn.filetransform\n    description: this task will anonymize the contactname with a custom nashorn script (javascript over jvm). this show that you able to handle custom transformation or remapping in the etl way\n    from: \"{{ outputs.csvreader.uri }}\"\n    script: |\n      if (row['contactname']) {\n        row['contactname'] = \"*\".repeat(row['contactname'].length);\n      }\n\n\nthis is not usually possible with most solutions. most elt tools often prevent etl processes by design because they cannot handle heavy transform operations. kestra is able to handle both because all transformations are considered to be row per row, and therefore do not use any memory to perform the function, only cpu.\n\n\n\nwith kestra's innate flexibility, and many integrations, you are not locked into the choice of one ingestion method or the other. complex workflows can be developed, whether in parallel or sequentially, to deliver both elt and etl processes. simple descriptive yaml is used to connect plugins, and to create flows. because workflows created in kestra are represented visually, and issues can be seen in relation to individual tasks, there is no need to fear complexity. trouble can be traced to its source in an instant, allowing you to try new things and come up with a new solution without fear. give it a try, and let us know what you come up with!\n\nperhaps your unique solution can become our next showcase!",charsets:{cjk:!0}},{title:"Introducing new Kestra light architecture for open source data orchestration.",frontmatter:{title:"Introducing new Kestra light architecture for open source data orchestration.",description:"A new very light architecture for Kestra, open-source orchestration and scheduling platform.",date:"2022-06-21T07:00:00.000Z",layout:"BlogsPost",author:{name:"Ludovic Dehon",image:"ldehon",twitter:"@tchiotludo"},image:"/blogs/2022-06-21-kestra-light.jpg",meta:[{property:"article:published_time",content:"2022-06-21T07:00:00.000Z"},{property:"article:modified_time",content:"2022-06-20T20:48:03.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Introducing new Kestra light architecture for open source data orchestration."},{property:"og:description",content:"A new very light architecture for Kestra, open-source orchestration and scheduling platform. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"article"},{property:"og:url",content:"https://kestra.io/blogs/2022-06-21-light-architecture.html"},{property:"og:image",content:"https://kestra.io/blogs/2022-06-21-kestra-light.jpg"},{name:"twitter:title",content:"Introducing new Kestra light architecture for open source data orchestration."},{name:"twitter:description",content:"A new very light architecture for Kestra, open-source orchestration and scheduling platform. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/blogs/2022-06-21-light-architecture.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/blogs/2022-06-21-kestra-light.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Ludovic Dehon"},{name:"twitter:creator",content:"@tchiotludo"}]},regularPath:"/blogs/2022-06-21-light-architecture.html",relativePath:"blogs/2022-06-21-light-architecture.md",key:"v-5f52623a",path:"/blogs/2022-06-21-light-architecture.html",headers:[{level:2,title:"We have heard you all!",slug:"we-have-heard-you-all",normalizedTitle:"we have heard you all!",charIndex:949},{level:2,title:"Tradeoff using a Database",slug:"tradeoff-using-a-database",normalizedTitle:"tradeoff using a database",charIndex:1911},{level:2,title:"This is not the end",slug:"this-is-not-the-end",normalizedTitle:"this is not the end",charIndex:2949},{level:2,title:"Conclusion",slug:"conclusion",normalizedTitle:"conclusion",charIndex:4037}],lastUpdated:"6/20/2022, 8:48:03 PM",lastUpdatedTimestamp:1655758083e3,headersStr:"We have heard you all! Tradeoff using a Database This is not the end Conclusion",content:"When we have launch Kestra officially few month ago, we wanted to have the most complete, reliable, scalable product to show you. We are really proud to have the first cloud native orchestration & scheduling platform running only with technologies like Kafka and ElasticSearch. Theses bring an architecture with no single point of failure and high throughput in order to scale to millions of executions without the pain.\n\nSince this is pretty cool, not everyone is Uber, LinkedIn, (add any another big tech startup) that need to have these hard requirements of scalability, and we see some comments about the product that ElasticSearch or Kafka can be a pain to manage. In fact, we already know that, but we don't even think that this one can a stopper.\n\nWe have interview many people on our slack community, twitter, ... also that confirm us that the stack can be a real blocker for small company as they are afraid of managing a full cluster.\n\n\n# We have heard you all!\n\nFor now, we continue to think a high-availability solution is a must-have, a solution that can ensure you that if your needs increase, you will have a solution to scale without having to do without the features. So we decide to create a new version of Kestra (in Beta for now) that will work for a Medium-sized environment.\n\n\n\nThe solution is to remove the dependencies of Kafka & ElasticSearch and to allow to replace them with a simple MySQL of Postgres database for the both of them.\n\nSince MySQL or Postgres are largely common, people are not feared of hosting these services. In general, multiple instances are already running on your company. Moreover, the most cloud provider can offer you this as managed service, or you can easily find one provider handling that.\n\nThe new version is possible since Kestra thought since its inception as pluggable architecture, and we only need to implement a new repository and a new queue.\n\n\n# Tradeoff using a Database\n\n\n\nWe have worked harder to be able to have the more fluent change using a database, but we have made some tradeoffs for now (maybe you can go deeper depending on your feedback for a certain point).\n\nHere is some tradeoff now:\n\n * The Task Runs page is not available for database implementation.\n * We are not able to detect dead workers (for example, when you restart Kestra and there is still a task running or other unexpected failures): in the Kafka implementation, we detect dead workers and resubmit the task currently running. This is possible since Kafka has a heartbeat mechanism to detect this kind of failure, that is not the case for the database version (ping us if this one is really important).\n * You can't scale the scheduler at more than one instance, dispatching a list of flow between multiple instances is hard since we need a heartbeat feature for dead workers.\n * The database is often the single point of failure of the most common architecture.\n\nAll the other features are the same!\n\n\n# This is not the end\n\nSince we have implemented MySQL and Postgres, and java has a strong abstraction of database (with JDBC and JOOQ), we are also able to bring you the last version with no database at all.\n\nThis implementation relies on an H2 database that is an in-memory database or file-based one. To illustrate this, just grab the executable from Kestra, install java 11+ and start the server with:\n\n# unix or macos\n./kestra server local\n\n## windows\nrename kestra-0.5.0 kestra-0.5.0.cmd\nkestra.cmd server local\n\n\nGo to the UI on http://localhost:8080, you are up and running. This one is suitable for the development environment and will allow all your developer to have a running version of Kestra without any painful setup.\n\nPlease go here for the full getting started for local server.\n\nFor this implementation, just note that you will need to have a docker daemon running to be able to use Bash or Python with runner: DOCKER. A special warning for Windows users, since Kestra was thought to be deployed on a Linux server, but our primer test seems to be nice and functional.\n\n\n# Conclusion\n\nThis feature needs a large refactoring of Kestra to remove some assumptions (for example, we used Lucene query of ElasticSearch on the whole UI). So we have released a new BETA version 0.5.0-BETA to gather the much feedback as possible and to be sure to avoid bugs introduce by this major version. Please go ahead, test it and send as much feedback as possible.\n\nWe hope that will enjoy this new feature and that you will imagine more use cases with Kestra, stay connected and follow us on GitHub, Twitter, or Slack.",normalizedContent:"when we have launch kestra officially few month ago, we wanted to have the most complete, reliable, scalable product to show you. we are really proud to have the first cloud native orchestration & scheduling platform running only with technologies like kafka and elasticsearch. theses bring an architecture with no single point of failure and high throughput in order to scale to millions of executions without the pain.\n\nsince this is pretty cool, not everyone is uber, linkedin, (add any another big tech startup) that need to have these hard requirements of scalability, and we see some comments about the product that elasticsearch or kafka can be a pain to manage. in fact, we already know that, but we don't even think that this one can a stopper.\n\nwe have interview many people on our slack community, twitter, ... also that confirm us that the stack can be a real blocker for small company as they are afraid of managing a full cluster.\n\n\n# we have heard you all!\n\nfor now, we continue to think a high-availability solution is a must-have, a solution that can ensure you that if your needs increase, you will have a solution to scale without having to do without the features. so we decide to create a new version of kestra (in beta for now) that will work for a medium-sized environment.\n\n\n\nthe solution is to remove the dependencies of kafka & elasticsearch and to allow to replace them with a simple mysql of postgres database for the both of them.\n\nsince mysql or postgres are largely common, people are not feared of hosting these services. in general, multiple instances are already running on your company. moreover, the most cloud provider can offer you this as managed service, or you can easily find one provider handling that.\n\nthe new version is possible since kestra thought since its inception as pluggable architecture, and we only need to implement a new repository and a new queue.\n\n\n# tradeoff using a database\n\n\n\nwe have worked harder to be able to have the more fluent change using a database, but we have made some tradeoffs for now (maybe you can go deeper depending on your feedback for a certain point).\n\nhere is some tradeoff now:\n\n * the task runs page is not available for database implementation.\n * we are not able to detect dead workers (for example, when you restart kestra and there is still a task running or other unexpected failures): in the kafka implementation, we detect dead workers and resubmit the task currently running. this is possible since kafka has a heartbeat mechanism to detect this kind of failure, that is not the case for the database version (ping us if this one is really important).\n * you can't scale the scheduler at more than one instance, dispatching a list of flow between multiple instances is hard since we need a heartbeat feature for dead workers.\n * the database is often the single point of failure of the most common architecture.\n\nall the other features are the same!\n\n\n# this is not the end\n\nsince we have implemented mysql and postgres, and java has a strong abstraction of database (with jdbc and jooq), we are also able to bring you the last version with no database at all.\n\nthis implementation relies on an h2 database that is an in-memory database or file-based one. to illustrate this, just grab the executable from kestra, install java 11+ and start the server with:\n\n# unix or macos\n./kestra server local\n\n## windows\nrename kestra-0.5.0 kestra-0.5.0.cmd\nkestra.cmd server local\n\n\ngo to the ui on http://localhost:8080, you are up and running. this one is suitable for the development environment and will allow all your developer to have a running version of kestra without any painful setup.\n\nplease go here for the full getting started for local server.\n\nfor this implementation, just note that you will need to have a docker daemon running to be able to use bash or python with runner: docker. a special warning for windows users, since kestra was thought to be deployed on a linux server, but our primer test seems to be nice and functional.\n\n\n# conclusion\n\nthis feature needs a large refactoring of kestra to remove some assumptions (for example, we used lucene query of elasticsearch on the whole ui). so we have released a new beta version 0.5.0-beta to gather the much feedback as possible and to be sure to avoid bugs introduce by this major version. please go ahead, test it and send as much feedback as possible.\n\nwe hope that will enjoy this new feature and that you will imagine more use cases with kestra, stay connected and follow us on github, twitter, or slack.",charsets:{}},{title:"Advanced tips and techniques for Kafka Streams",frontmatter:{title:"Advanced tips and techniques for Kafka Streams",description:"Discover some tips and nice techniques that will help you build a resilient and distributed applications",date:"2022-06-27T10:00:00.000Z",layout:"BlogsPost",author:{name:"Ludovic Dehon",image:"ldehon",twitter:"@tchiotludo"},image:"/blogs/2022-06-28-tips-kafka-streams-distributed.jpg",draft:!0,meta:[{property:"article:published_time",content:"2022-06-27T10:00:00.000Z"},{property:"article:modified_time",content:"2022-06-23T20:42:55.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Advanced tips and techniques for Kafka Streams"},{property:"og:description",content:"Discover some tips and nice techniques that will help you build a resilient and distributed applications | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"article"},{property:"og:url",content:"https://kestra.io/blogs/2022-06-28-tips-kafka-streams-distributed.html"},{property:"og:image",content:"https://kestra.io/blogs/2022-06-28-tips-kafka-streams-distributed.jpg"},{name:"twitter:title",content:"Advanced tips and techniques for Kafka Streams"},{name:"twitter:description",content:"Discover some tips and nice techniques that will help you build a resilient and distributed applications | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/blogs/2022-06-28-tips-kafka-streams-distributed.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/blogs/2022-06-28-tips-kafka-streams-distributed.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Ludovic Dehon"},{name:"twitter:creator",content:"@tchiotludo"}]},regularPath:"/blogs/2022-06-28-tips-kafka-streams-distributed.html",relativePath:"blogs/2022-06-28-tips-kafka-streams-distributed.md",key:"v-4b2ede63",path:"/blogs/2022-06-28-tips-kafka-streams-distributed.html",headers:[{level:2,title:"Same topic as source and destination",slug:"same-topic-as-source-and-destination",normalizedTitle:"same topic as source and destination",charIndex:637},{level:2,title:"Custom Joiner",slug:"custom-joiner",normalizedTitle:"custom joiner",charIndex:2470},{level:2,title:"Easy distributed workload between multiple backends",slug:"easy-distributed-workload-between-multiple-backends",normalizedTitle:"easy distributed workload between multiple backends",charIndex:4216},{level:2,title:"Use partitions to detect dead consumers",slug:"use-partitions-to-detect-dead-consumers",normalizedTitle:"use partitions to detect dead consumers",charIndex:5526},{level:2,title:"State store all()",slug:"state-store-all",normalizedTitle:"state store all()",charIndex:6846},{level:2,title:"Many source topics within a stream",slug:"many-source-topics-within-a-stream",normalizedTitle:"many source topics within a stream",charIndex:8872},{level:2,title:"Conclusion",slug:"conclusion",normalizedTitle:"conclusion",charIndex:10035}],lastUpdated:"6/23/2022, 8:42:55 PM",lastUpdatedTimestamp:1656016975e3,headersStr:"Same topic as source and destination Custom Joiner Easy distributed workload between multiple backends Use partitions to detect dead consumers State store all() Many source topics within a stream Conclusion",content:'While building Kestra, an open-source data orchestration and scheduling platform, we decided to use Kafka as the main database to build a scalable architecture. Since Kafka allows gigabytes of throughput, we are confident to have a fully scalable solution, but we need to adapt to Kafka.\n\nSince we heavily rely on Kafka Streams for most of our services (executor and scheduler mostly), we have made some assumptions on how it handles the workload. This blog post is here to show some advanced techniques we have to use to have a Kafka Stream reliable, we want to share with you the tips we have discovered during the last two years.\n\n\n# Same topic as source and destination\n\nIn Kestra, we have a topic with the current execution that is the source and also the destination, we only update the current execution to add some information and send it back to Kafka to further processing (New tasks status for example). We are not sure that this design is possible with Kafka which lead to asking Matthias J. Sax, one of the main maintainers of Kafka Streams, that respond to me on Stack Overflow\n\nThe short response: YES it\'s possible\n\nThe long one: YES it\'s possible IF you are sure at 100% that for the same key (the execution in our case), you must have only one process that can write. If you see this warning in the console Detected out-of-order KTable update for execution at offset 10, partition 7., you are probably in that case and this can lead to unexpected behavior (like overwrite of previous values).\n\nLet me explain, imagine a topology with topic as source, some branching logic, and to different process writing to the same destinations:\n\nKStream<String, Execution> executions = builder\n    .stream("executions", Consumed.with(Serdes.String(), JsonSerde.of(Execution.class)));\n\nexecutions\n    .mapValues((readOnlyKey, value) -> value)\n    .to("executions", Produced.with(Serdes.String(), JsonSerde.of(Execution.class)));\n\nexecutions\n    .leftJoin(\n        builder.table("results", Consumed.with(Serdes.String(), JsonSerde.of(WorkerTaskResult.class))),\n        (readOnlyKey, value1, value2) -> value1\n    )\n    .to("executions", Produced.with(Serdes.String(), JsonSerde.of(Execution.class)));\n\n\nIn that case, a concurrent process can write on the same topic, overwriting the previous value and destroying the previous computed methods.\nFor that usage, you must define a single writer for a Key at the same time. That led to our next part: a custom joiner\n\n\n# Custom Joiner\n\nIn order to process execution, we have separated microservice as multiple topics, the easier topology to understand is:\n\n * a topic with the executions (with multiple tasks)\n * a topic with task results.\n\nTo allow the next task to start, we need to create a state with all task results merge into the current execution. The first choice was to use a simple join() from Kafka Streams, what a terrible choice!\n\nAll join provided by Kafka Streams were designed thinking with aggregation in minds (like sum, avg, ...) and works well for that case. How? It will simply process all the incoming data from both topics 1 per 1, we will see all the changes on the streams on both sides, as seen below :\n\n# timeline\n--A-------- > Execution\n-----B--C-- > Task Result\n\n# join result timeline\n- (A,null)\n- (A, B) => emit (A+B)\n- (A, C) => emit (A+C) <=== you have overwrite the result of A+B\n- (A+B, null)\n- (A+C, null) <== we will never have (A+B+C)\n\n\nIn our case, we are building a state machine, and we want to keep the last state of execution, meaning we don\'t want to see all intermediate states (like in aggregation). In that case, we have no other choice but to build a custom joiner since Kafka Stream doesn\'t have any one built-in.\n\nTo handle this case, we need to :\n\n * create a manually a store that will save the last state of an execution\n * create a custom merge function that will merge the execution stream with the task results stream\n * get the last value from the state, add the task result and emit the new state that will be saved finally on the store and the final topics.\n\nWith all of that, we are sure that the execution state will always be the last version whatever the number of tasks results coming in parallel.\n\n\n# Easy distributed workload between multiple backends\n\nIn Kestra, we have a scheduler that will look up all flows to schedule (timed-based) execution or with a long-pooling mechanism (detect file on file systems like S3 or SFTP). As we wanted to have no single point of failure also on this service, we need to split all the flow between all instances of schedulers.\n\nTo handle that case, we rely on Kafka\'s consumer groups that will handle the whole complexity of a distributed system for us. The logic is :\n\n * Create a Kafka stream that will read in a KTable and transmit all the result to a Consumer\n * Listen to state change, meaning mostly REBALANCED Streams, and empty all the flows for the Consumer\n * On the READY state, read all the KTable again.\n\nWith these, all flows will be dispatched on all listeners, that\'s mean if you have 1,000 flows, approximately every consumer will have ~ 500 flows (depending on the repartition of keys). Kafka will handle all the heavy parts of the distributed systems :\n\n * Heartbeat to detect failure for a consumer\n * Notifying of rebalancing\n * Ensure exactly-once pattern for a topic, giving the assurance that only one consumer will handle the data.\n\nThis way you will have a fully distributed system thanks to Kafka without the pain to pass a Jespen analysis.\n\n\n# Use partitions to detect dead consumers\n\nFor Kestra, we need to detect when a worker was processing a task and died (many cases possible through outage to simple restart during processing works).\n\nThanks to Kafka consumer, we can know the partition that is affected this consumer. We use these nice features to detect dead workers. How? Here is the logic :\n\n * We create a UUID a startup for the worker\n * When a consumer connects to Kafka, we listen to partitions affected using a ConsumerRebalanceListener and we publish to Kafka a WorkerInstance with UUID and partition assigned.\n * For each task run, we publish a message with TaskRunning with the Worker UUID\n\nNow, let\'s handle the data stored in Kafka. The main logic is a Kafka Stream that:\n\n * Create a global KTable with all the WorkerInstance\n * On every change, it will listen to WorkerInstance changed\n * If there is a new WorkerInstance, we look at the partition assigned on this one, if there is an overlap between this instance partitions and the previous, we are sure that the previous WorkerInstance is dead (in Kafka, you can\'t have 2 consumers on the same partition).\n * We only need to look at the Task affected to this WorkerInstance and resend them for processing.\n\nEt voila 🎉 We have detection of dead consumers for free only with Kafka API.\n\n\n# State store all()\n\nWe need to use a GlobalKTable in order to detect flow trigger: for all the flow on the cluster, we test all the flows conditions in order to find matching flows. For this, we are using an API to fetch all flows from a GlobalKTable using store.all() that returned all the flows, fetching RockDb.\n\nThe first assumption is that all() returned is an object (Flow in our case), as the API return Object, but we discovered that the all() will:\n\n * fetch all the data from RockDB (ok for that)\n * deserialize the data from RockDB that is stored as byte and map it to concrete Java POJO\n\nSo each time we call all() on the method, all values are deserialized, which can lead to high CPU usage and latency on your stream. For our usage case, we are talking about all flows revision on our cluster, 2,500 flows (last revision) in our cases, but we don\'t see people are creating a lot of revisions (100,000), imagine 100,000 byte[] to deserialize to POJO for every call (mostly all the execution end).\n\nSince we only need the last revision in our use case, we create an in-memory Map with all the flows using:\n\nbuilder.addGlobalStore(\n    Stores.keyValueStoreBuilder(\n        Stores.persistentKeyValueStore(FLOW_STATE_STORE_NAME),\n        Serdes.String(),\n        JsonSerde.of(Flow.class)\n    ),\n    kafkaAdminService.getTopicName(Flow.class),\n    Consumed.with(Serdes.String(), JsonSerde.of(Flow.class)).withName("GlobalStore.Flow"),\n    () -> new GlobalInMemoryStateProcessor<>(\n        FLOW_STATE_STORE_NAME,\n        flows -> kafkaFlowExecutor.setFlows(flows),\n        store -> kafkaFlowExecutor.setStore(store)\n    )\n);\n\n\nwith GlobalInMemoryStateProcessor a simple wrapper that saves to state store and sends a full list on every change (not so frequent) and decided to gather all flow in memory. This works well on our use cases because we know that an instance of Kestra will not have millions of flows.\n\nBut keep in mind, all store operations (also get) will lead to deserialization that costs you some CPU.\n\n\n# Many source topics within a stream\n\nAt first, we designed Kestra to have only one huge stream for all the processing from the executor. At first, it seems to be cool but this lead to some drawback.\n\nHere is the last version of our main and only one Kafka Stream with many topics 🙉:\n\nYes, this is some kind of very large Kafka Streams. It was working almost despite the complexity of this one. But the major drawback was :\n\n * Monitoring: all the metrics are under the same consumer groups\n * Debugging: during a crash, each topic is consumed independently, when a message failed, the whole process is crashed\n * and the most important is lag: since Kafka Stream optimizes the consumption of messages by themselves, a topic with large outputs could lead to lag on other topics unrelated topics. In that case, impossible to understand properly the lag on our consumer.\n\nNow, we have decided to split into multiple streams to be able to monitors and understand properly the lag on our Kafka Streams.\n\nHow to split your evil streams? We simply choose to consume only one time a topic (to avoid large network transit), so we grouped all streams by source topics.\n\n\n# Conclusion\n\nWe have covered here some tips that took us a large amount of time to find the way to deal with the issue. Kestra is the only infinitely scalable data orchestration and scheduling platform, that used Kafka as backend, that allows millions of executions.\n\nWe hope you have enjoyed this one, stay connected, and follow Kestra on GitHub, Twitter, or Slack.',normalizedContent:'while building kestra, an open-source data orchestration and scheduling platform, we decided to use kafka as the main database to build a scalable architecture. since kafka allows gigabytes of throughput, we are confident to have a fully scalable solution, but we need to adapt to kafka.\n\nsince we heavily rely on kafka streams for most of our services (executor and scheduler mostly), we have made some assumptions on how it handles the workload. this blog post is here to show some advanced techniques we have to use to have a kafka stream reliable, we want to share with you the tips we have discovered during the last two years.\n\n\n# same topic as source and destination\n\nin kestra, we have a topic with the current execution that is the source and also the destination, we only update the current execution to add some information and send it back to kafka to further processing (new tasks status for example). we are not sure that this design is possible with kafka which lead to asking matthias j. sax, one of the main maintainers of kafka streams, that respond to me on stack overflow\n\nthe short response: yes it\'s possible\n\nthe long one: yes it\'s possible if you are sure at 100% that for the same key (the execution in our case), you must have only one process that can write. if you see this warning in the console detected out-of-order ktable update for execution at offset 10, partition 7., you are probably in that case and this can lead to unexpected behavior (like overwrite of previous values).\n\nlet me explain, imagine a topology with topic as source, some branching logic, and to different process writing to the same destinations:\n\nkstream<string, execution> executions = builder\n    .stream("executions", consumed.with(serdes.string(), jsonserde.of(execution.class)));\n\nexecutions\n    .mapvalues((readonlykey, value) -> value)\n    .to("executions", produced.with(serdes.string(), jsonserde.of(execution.class)));\n\nexecutions\n    .leftjoin(\n        builder.table("results", consumed.with(serdes.string(), jsonserde.of(workertaskresult.class))),\n        (readonlykey, value1, value2) -> value1\n    )\n    .to("executions", produced.with(serdes.string(), jsonserde.of(execution.class)));\n\n\nin that case, a concurrent process can write on the same topic, overwriting the previous value and destroying the previous computed methods.\nfor that usage, you must define a single writer for a key at the same time. that led to our next part: a custom joiner\n\n\n# custom joiner\n\nin order to process execution, we have separated microservice as multiple topics, the easier topology to understand is:\n\n * a topic with the executions (with multiple tasks)\n * a topic with task results.\n\nto allow the next task to start, we need to create a state with all task results merge into the current execution. the first choice was to use a simple join() from kafka streams, what a terrible choice!\n\nall join provided by kafka streams were designed thinking with aggregation in minds (like sum, avg, ...) and works well for that case. how? it will simply process all the incoming data from both topics 1 per 1, we will see all the changes on the streams on both sides, as seen below :\n\n# timeline\n--a-------- > execution\n-----b--c-- > task result\n\n# join result timeline\n- (a,null)\n- (a, b) => emit (a+b)\n- (a, c) => emit (a+c) <=== you have overwrite the result of a+b\n- (a+b, null)\n- (a+c, null) <== we will never have (a+b+c)\n\n\nin our case, we are building a state machine, and we want to keep the last state of execution, meaning we don\'t want to see all intermediate states (like in aggregation). in that case, we have no other choice but to build a custom joiner since kafka stream doesn\'t have any one built-in.\n\nto handle this case, we need to :\n\n * create a manually a store that will save the last state of an execution\n * create a custom merge function that will merge the execution stream with the task results stream\n * get the last value from the state, add the task result and emit the new state that will be saved finally on the store and the final topics.\n\nwith all of that, we are sure that the execution state will always be the last version whatever the number of tasks results coming in parallel.\n\n\n# easy distributed workload between multiple backends\n\nin kestra, we have a scheduler that will look up all flows to schedule (timed-based) execution or with a long-pooling mechanism (detect file on file systems like s3 or sftp). as we wanted to have no single point of failure also on this service, we need to split all the flow between all instances of schedulers.\n\nto handle that case, we rely on kafka\'s consumer groups that will handle the whole complexity of a distributed system for us. the logic is :\n\n * create a kafka stream that will read in a ktable and transmit all the result to a consumer\n * listen to state change, meaning mostly rebalanced streams, and empty all the flows for the consumer\n * on the ready state, read all the ktable again.\n\nwith these, all flows will be dispatched on all listeners, that\'s mean if you have 1,000 flows, approximately every consumer will have ~ 500 flows (depending on the repartition of keys). kafka will handle all the heavy parts of the distributed systems :\n\n * heartbeat to detect failure for a consumer\n * notifying of rebalancing\n * ensure exactly-once pattern for a topic, giving the assurance that only one consumer will handle the data.\n\nthis way you will have a fully distributed system thanks to kafka without the pain to pass a jespen analysis.\n\n\n# use partitions to detect dead consumers\n\nfor kestra, we need to detect when a worker was processing a task and died (many cases possible through outage to simple restart during processing works).\n\nthanks to kafka consumer, we can know the partition that is affected this consumer. we use these nice features to detect dead workers. how? here is the logic :\n\n * we create a uuid a startup for the worker\n * when a consumer connects to kafka, we listen to partitions affected using a consumerrebalancelistener and we publish to kafka a workerinstance with uuid and partition assigned.\n * for each task run, we publish a message with taskrunning with the worker uuid\n\nnow, let\'s handle the data stored in kafka. the main logic is a kafka stream that:\n\n * create a global ktable with all the workerinstance\n * on every change, it will listen to workerinstance changed\n * if there is a new workerinstance, we look at the partition assigned on this one, if there is an overlap between this instance partitions and the previous, we are sure that the previous workerinstance is dead (in kafka, you can\'t have 2 consumers on the same partition).\n * we only need to look at the task affected to this workerinstance and resend them for processing.\n\net voila 🎉 we have detection of dead consumers for free only with kafka api.\n\n\n# state store all()\n\nwe need to use a globalktable in order to detect flow trigger: for all the flow on the cluster, we test all the flows conditions in order to find matching flows. for this, we are using an api to fetch all flows from a globalktable using store.all() that returned all the flows, fetching rockdb.\n\nthe first assumption is that all() returned is an object (flow in our case), as the api return object, but we discovered that the all() will:\n\n * fetch all the data from rockdb (ok for that)\n * deserialize the data from rockdb that is stored as byte and map it to concrete java pojo\n\nso each time we call all() on the method, all values are deserialized, which can lead to high cpu usage and latency on your stream. for our usage case, we are talking about all flows revision on our cluster, 2,500 flows (last revision) in our cases, but we don\'t see people are creating a lot of revisions (100,000), imagine 100,000 byte[] to deserialize to pojo for every call (mostly all the execution end).\n\nsince we only need the last revision in our use case, we create an in-memory map with all the flows using:\n\nbuilder.addglobalstore(\n    stores.keyvaluestorebuilder(\n        stores.persistentkeyvaluestore(flow_state_store_name),\n        serdes.string(),\n        jsonserde.of(flow.class)\n    ),\n    kafkaadminservice.gettopicname(flow.class),\n    consumed.with(serdes.string(), jsonserde.of(flow.class)).withname("globalstore.flow"),\n    () -> new globalinmemorystateprocessor<>(\n        flow_state_store_name,\n        flows -> kafkaflowexecutor.setflows(flows),\n        store -> kafkaflowexecutor.setstore(store)\n    )\n);\n\n\nwith globalinmemorystateprocessor a simple wrapper that saves to state store and sends a full list on every change (not so frequent) and decided to gather all flow in memory. this works well on our use cases because we know that an instance of kestra will not have millions of flows.\n\nbut keep in mind, all store operations (also get) will lead to deserialization that costs you some cpu.\n\n\n# many source topics within a stream\n\nat first, we designed kestra to have only one huge stream for all the processing from the executor. at first, it seems to be cool but this lead to some drawback.\n\nhere is the last version of our main and only one kafka stream with many topics 🙉:\n\nyes, this is some kind of very large kafka streams. it was working almost despite the complexity of this one. but the major drawback was :\n\n * monitoring: all the metrics are under the same consumer groups\n * debugging: during a crash, each topic is consumed independently, when a message failed, the whole process is crashed\n * and the most important is lag: since kafka stream optimizes the consumption of messages by themselves, a topic with large outputs could lead to lag on other topics unrelated topics. in that case, impossible to understand properly the lag on our consumer.\n\nnow, we have decided to split into multiple streams to be able to monitors and understand properly the lag on our kafka streams.\n\nhow to split your evil streams? we simply choose to consume only one time a topic (to avoid large network transit), so we grouped all streams by source topics.\n\n\n# conclusion\n\nwe have covered here some tips that took us a large amount of time to find the way to deal with the issue. kestra is the only infinitely scalable data orchestration and scheduling platform, that used kafka as backend, that allows millions of executions.\n\nwe hope you have enjoyed this one, stay connected, and follow kestra on github, twitter, or slack.',charsets:{}},{title:"Snowflake data pipeline with Kestra",frontmatter:{title:"Snowflake data pipeline with Kestra",description:"Kestra’s Snowflake plugin makes data warehousing simple. Even non-developers can write relevant flows and data pipeline",date:"2022-10-05T10:00:00.000Z",layout:"BlogsPost",author:{name:"Ludovic Dehon",image:"ldehon",twitter:"@tchiotludo"},image:"/blogs/2022-10-05-kestra-snowflake.jpg",meta:[{property:"article:published_time",content:"2022-10-05T10:00:00.000Z"},{property:"article:modified_time",content:"2022-10-05T06:03:06.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Snowflake data pipeline with Kestra"},{property:"og:description",content:"Kestra’s Snowflake plugin makes data warehousing simple. Even non-developers can write relevant flows and data pipeline | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"article"},{property:"og:url",content:"https://kestra.io/blogs/2022-10-05-kestra-snowflake.html"},{property:"og:image",content:"https://kestra.io/blogs/2022-10-05-kestra-snowflake.jpg"},{name:"twitter:title",content:"Snowflake data pipeline with Kestra"},{name:"twitter:description",content:"Kestra’s Snowflake plugin makes data warehousing simple. Even non-developers can write relevant flows and data pipeline | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/blogs/2022-10-05-kestra-snowflake.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/blogs/2022-10-05-kestra-snowflake.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Ludovic Dehon"},{name:"twitter:creator",content:"@tchiotludo"}]},regularPath:"/blogs/2022-10-05-kestra-snowflake.html",relativePath:"blogs/2022-10-05-kestra-snowflake.md",key:"v-bbb01a3a",path:"/blogs/2022-10-05-kestra-snowflake.html",headers:[{level:3,title:"What is Snowflake?",slug:"what-is-snowflake",normalizedTitle:"what is snowflake?",charIndex:583},{level:3,title:"Why is Snowflake Popular?",slug:"why-is-snowflake-popular",normalizedTitle:"why is snowflake popular?",charIndex:1449},{level:3,title:"Where does kestra fit in?",slug:"where-does-kestra-fit-in",normalizedTitle:"where does kestra fit in?",charIndex:2317},{level:3,title:"Dissecting Kestra's Snowflake Plugin.",slug:"dissecting-kestra-s-snowflake-plugin",normalizedTitle:"dissecting kestra's snowflake plugin.",charIndex:3647},{level:3,title:"Query Snowflake table",slug:"query-snowflake-table",normalizedTitle:"query snowflake table",charIndex:4466},{level:3,title:"Download from Snowflake stage",slug:"download-from-snowflake-stage",normalizedTitle:"download from snowflake stage",charIndex:5727},{level:3,title:"Upload to Snowflake stage",slug:"upload-to-snowflake-stage",normalizedTitle:"upload to snowflake stage",charIndex:6366},{level:3,title:"Building Dynamic Data Workflows With Kestra",slug:"building-dynamic-data-workflows-with-kestra",normalizedTitle:"building dynamic data workflows with kestra",charIndex:6846}],lastUpdated:"10/5/2022, 6:03:06 AM",lastUpdatedTimestamp:1664949786e3,headersStr:"What is Snowflake? Why is Snowflake Popular? Where does kestra fit in? Dissecting Kestra's Snowflake Plugin. Query Snowflake table Download from Snowflake stage Upload to Snowflake stage Building Dynamic Data Workflows With Kestra",content:"The 21st century is the golden age of data. Today, modern data stacks offer numerous tools and workloads for data warehousing, data lakes, data analytics, and data engineering to manage massive amounts of data inflow. One such platform is Snowflake, a robust data cloud tool that streamlines many operations in a modern data stack.\n\nIn this article, we'll discuss how Snowflake integrates with Kestra (an open-source, scalable orchestration and scheduling platform) using Snowflake plugin to create a seamless and scalable data pipeline.\n\nFirst, let's discuss Snowflake briefly.\n\n\n# What is Snowflake?\n\n\n\nLeveraged by thousands of organizations worldwide, Snowflake is a top-of-the-line SaaS cloud data warehousing and data lake platform offering reliable data pipelines with high performance, concurrency, and scale across multiple cloud providers like AWS, Azure, and GCP.\n\nSnowflake is a unified cloud-native platform that enables teams to avoid data silos by sharing and collaborating on data pipelines securely. It offers a flexible architecture with three components, i.e., robust cloud storage, query processing engine, and a layer of cloud services with numerous third-party integrations.\n\nSnowflake is a multi-cloud, multi-cluster warehouse platform that can auto-scale to manage virtual warehouses dynamically. In the auto-scale mode, it starts and stops warehouses to govern cloud resource usage and their corresponding cost credits.\n\n\n# Why is Snowflake Popular?\n\nIn the last few years, Snowflake has had huge traction. Today more than 5900+ companies (as of March 2022) are running their critical data pipelines on Snowflake.\n\nWith Snowflake, companies don't have to pay for huge and expensive licenses for using data warehousing tools. Unlike conventional data warehousing tools, Snowflake charges on a pay-as-you-basis for storage and compute, enabling small and medium-scale companies to leverage cloud data pipelines for improved data management.\n\nNow, companies can build scalable data workloads that can perform strong data analysis on structured, unstructured, and semi-structured data to derive valuable business insights and make data-driven decisions. Additionally, Snowflake Data Marketplace allows customers to access numerous ready-to-query datasets, further reducing integration costs.\n\n\n# Where does kestra fit in?\n\n\n\nTypically, data warehouse workloads are part of a bigger technology stack within an organization or across organizations. To streamlines various operations, data pipelines should be orchestrated and scheduled. Data orchestration unifies data from disparate sources and transforms it to enable analytics. This is where Kestra jumps in.\n\nKestra is a state-of-the-art, open-source, cloud-native platform built to orchestrate & schedule scalable data workflows, aiming to improve the productivity of DataOps teams. Kestra's orchestration platform can build, run, manage, and monitor all kinds of complex workflows sequentially and in parallel. It offers numerous plugin integrations to build advanced data workflows, including our Snowflake plugin, discussed below.\n\nMoreover, Kestra can execute workflows based on event-based, time-based, and API-based scheduling, giving complete control to the data teams. With a unified end-to-end platform, companies save time and money on storage, compute, and development costs.\n\nSnowflake already offers many cost optimization processes like data compression and auto-scaling. However, Kestra makes it simpler to download, upload, and query data by integrating with Snowflake's storage and compute resources. Let's discuss Kestra's Snowflake plugin in detail.\n\n\n# Dissecting Kestra's Snowflake Plugin.\n\nKestra's Snowflake plugin can create complex data pipelines, whether Snowflake is a target or simply storing data as a part of a larger workflow for downstream applications.\n\nBesides the Snowflake plugin, Kestra offers numerous JDBC plugin integrations, including ClickHouse, DuckDb, MySQL, Oracle, Apache Pinot, PostgreSQL, Redshift, Rockset, SQL Server, Trino, Vectorwise, and Vertica. These plugins can effectively process and transform tabular data within relational databases, reducing the processing cost of platforms like Snowflake.\n\nUsing Kestra, the data teams are at liberty to decide where certain data, plugins, and connectors would fit. As mentioned above, the Snowflake plugin can perform the download, upload, and query tasks. Let's discuss each of them below.\n\n\n# Query Snowflake table\n\nKestra can query the Snowflake server using this task to insert, update, and delete data. The Query task offers numerous properties, including auto-committing SQL statements, different fetching operations, specifying access-control roles, and storing fetch results. When the storevalue is true, Kestra allows storage of large results as an output of the Query task.\n\nThe plugin allows the usage of multi-SQL statements in the same transaction as a full SQL script with isolation support. It allows simple queries and fetches results with fetch or fetchOne properties, enabling teams to reuse the output on the next tasks from tools like Kafka Consume, Elastic Search, Mongo Find, and more. Some Query task instances are:\n\n * Fetch a row from the database, and define multiple flows depending on the output\n * Fetch the count of a store and iterate through the list. If an item doesn't exist, perform a particular task.\n\nThe following code snippet executes a query to fetch results from one table into Kestra internal storage.\n\nid: select\ntype: io.kestra.plugin.jdbc.snowflake.Query\nurl: jdbc:snowflake://<account_identifier>.snowflakecomputing.com\nusername: snowflake\npassword: snowflake_passwd\nsql: select * from source\nfetch: true\n\n\n\n# Download from Snowflake stage\n\nAs the name suggests, this task downloads data from the Snowflake server to an internal Kestra stage, which is based on Amazon ION. The Download task offers properties such as data compression and access control role to streamline the download process of the connected database. The Download task outputs the URL of the downloaded file available on the Kestra storage server.\n\nThe following code snippet downloads default database to specified fileName location on internal Kestra server.\n\nid: \"download\"\ntype: \"io.kestra.plugin.jdbc.snowflake.Download\"\nstageName: MYSTAGE\nfileName: prefix/destFile.csv\n\n\n\n# Upload to Snowflake stage\n\nThis task uploads data to an internal Snowflake stage. Similar to Download task, Upload can perform data compression and set access control role. Snowflake also support data transformation while loading data, which simplifies the ETL process.\n\nThe following code snippet uploads data to the specified fileName location.\n\nid: \"upload\"\ntype: \"io.kestra.plugin.jdbc.snowflake.Upload\"\nstageName: MYSTAGE\nprefix: testUploadStream\nfileName: destFile.csv\n\n\n\n# Building Dynamic Data Workflows With Kestra\n\n\n\nKestra has quickly become an essential piece of the modern data stack. Kestra provides unprecedented flexibility and control to data teams. It can orchestrate any kind of workflow with ease using a rich UI that monitors all flows.\n\nKestra's Snowflake plugin makes data warehousing simple. Even non-developers can write relevant flows using descriptive YAML. Your Snowflake storage pipeline accommodates raw data from multiple sources and transforms it using ETL operations. Additionally, you can skip the transformation and directly load data into the warehouse using the ELT pipeline. Kestra can manage both workflows simultaneously. In any case, Kestra ensures that the data is readily available to perform analysis and learn valuable patterns.\n\nIf you need any guidance with your Snowflake deployment, our experts at Kestra would love to hear from you. Let us know if you would like us to add more plugins to the list. Or start building your custom Kestra plugin today and send it our way. We always welcome contributions!",normalizedContent:"the 21st century is the golden age of data. today, modern data stacks offer numerous tools and workloads for data warehousing, data lakes, data analytics, and data engineering to manage massive amounts of data inflow. one such platform is snowflake, a robust data cloud tool that streamlines many operations in a modern data stack.\n\nin this article, we'll discuss how snowflake integrates with kestra (an open-source, scalable orchestration and scheduling platform) using snowflake plugin to create a seamless and scalable data pipeline.\n\nfirst, let's discuss snowflake briefly.\n\n\n# what is snowflake?\n\n\n\nleveraged by thousands of organizations worldwide, snowflake is a top-of-the-line saas cloud data warehousing and data lake platform offering reliable data pipelines with high performance, concurrency, and scale across multiple cloud providers like aws, azure, and gcp.\n\nsnowflake is a unified cloud-native platform that enables teams to avoid data silos by sharing and collaborating on data pipelines securely. it offers a flexible architecture with three components, i.e., robust cloud storage, query processing engine, and a layer of cloud services with numerous third-party integrations.\n\nsnowflake is a multi-cloud, multi-cluster warehouse platform that can auto-scale to manage virtual warehouses dynamically. in the auto-scale mode, it starts and stops warehouses to govern cloud resource usage and their corresponding cost credits.\n\n\n# why is snowflake popular?\n\nin the last few years, snowflake has had huge traction. today more than 5900+ companies (as of march 2022) are running their critical data pipelines on snowflake.\n\nwith snowflake, companies don't have to pay for huge and expensive licenses for using data warehousing tools. unlike conventional data warehousing tools, snowflake charges on a pay-as-you-basis for storage and compute, enabling small and medium-scale companies to leverage cloud data pipelines for improved data management.\n\nnow, companies can build scalable data workloads that can perform strong data analysis on structured, unstructured, and semi-structured data to derive valuable business insights and make data-driven decisions. additionally, snowflake data marketplace allows customers to access numerous ready-to-query datasets, further reducing integration costs.\n\n\n# where does kestra fit in?\n\n\n\ntypically, data warehouse workloads are part of a bigger technology stack within an organization or across organizations. to streamlines various operations, data pipelines should be orchestrated and scheduled. data orchestration unifies data from disparate sources and transforms it to enable analytics. this is where kestra jumps in.\n\nkestra is a state-of-the-art, open-source, cloud-native platform built to orchestrate & schedule scalable data workflows, aiming to improve the productivity of dataops teams. kestra's orchestration platform can build, run, manage, and monitor all kinds of complex workflows sequentially and in parallel. it offers numerous plugin integrations to build advanced data workflows, including our snowflake plugin, discussed below.\n\nmoreover, kestra can execute workflows based on event-based, time-based, and api-based scheduling, giving complete control to the data teams. with a unified end-to-end platform, companies save time and money on storage, compute, and development costs.\n\nsnowflake already offers many cost optimization processes like data compression and auto-scaling. however, kestra makes it simpler to download, upload, and query data by integrating with snowflake's storage and compute resources. let's discuss kestra's snowflake plugin in detail.\n\n\n# dissecting kestra's snowflake plugin.\n\nkestra's snowflake plugin can create complex data pipelines, whether snowflake is a target or simply storing data as a part of a larger workflow for downstream applications.\n\nbesides the snowflake plugin, kestra offers numerous jdbc plugin integrations, including clickhouse, duckdb, mysql, oracle, apache pinot, postgresql, redshift, rockset, sql server, trino, vectorwise, and vertica. these plugins can effectively process and transform tabular data within relational databases, reducing the processing cost of platforms like snowflake.\n\nusing kestra, the data teams are at liberty to decide where certain data, plugins, and connectors would fit. as mentioned above, the snowflake plugin can perform the download, upload, and query tasks. let's discuss each of them below.\n\n\n# query snowflake table\n\nkestra can query the snowflake server using this task to insert, update, and delete data. the query task offers numerous properties, including auto-committing sql statements, different fetching operations, specifying access-control roles, and storing fetch results. when the storevalue is true, kestra allows storage of large results as an output of the query task.\n\nthe plugin allows the usage of multi-sql statements in the same transaction as a full sql script with isolation support. it allows simple queries and fetches results with fetch or fetchone properties, enabling teams to reuse the output on the next tasks from tools like kafka consume, elastic search, mongo find, and more. some query task instances are:\n\n * fetch a row from the database, and define multiple flows depending on the output\n * fetch the count of a store and iterate through the list. if an item doesn't exist, perform a particular task.\n\nthe following code snippet executes a query to fetch results from one table into kestra internal storage.\n\nid: select\ntype: io.kestra.plugin.jdbc.snowflake.query\nurl: jdbc:snowflake://<account_identifier>.snowflakecomputing.com\nusername: snowflake\npassword: snowflake_passwd\nsql: select * from source\nfetch: true\n\n\n\n# download from snowflake stage\n\nas the name suggests, this task downloads data from the snowflake server to an internal kestra stage, which is based on amazon ion. the download task offers properties such as data compression and access control role to streamline the download process of the connected database. the download task outputs the url of the downloaded file available on the kestra storage server.\n\nthe following code snippet downloads default database to specified filename location on internal kestra server.\n\nid: \"download\"\ntype: \"io.kestra.plugin.jdbc.snowflake.download\"\nstagename: mystage\nfilename: prefix/destfile.csv\n\n\n\n# upload to snowflake stage\n\nthis task uploads data to an internal snowflake stage. similar to download task, upload can perform data compression and set access control role. snowflake also support data transformation while loading data, which simplifies the etl process.\n\nthe following code snippet uploads data to the specified filename location.\n\nid: \"upload\"\ntype: \"io.kestra.plugin.jdbc.snowflake.upload\"\nstagename: mystage\nprefix: testuploadstream\nfilename: destfile.csv\n\n\n\n# building dynamic data workflows with kestra\n\n\n\nkestra has quickly become an essential piece of the modern data stack. kestra provides unprecedented flexibility and control to data teams. it can orchestrate any kind of workflow with ease using a rich ui that monitors all flows.\n\nkestra's snowflake plugin makes data warehousing simple. even non-developers can write relevant flows using descriptive yaml. your snowflake storage pipeline accommodates raw data from multiple sources and transforms it using etl operations. additionally, you can skip the transformation and directly load data into the warehouse using the elt pipeline. kestra can manage both workflows simultaneously. in any case, kestra ensures that the data is readily available to perform analysis and learn valuable patterns.\n\nif you need any guidance with your snowflake deployment, our experts at kestra would love to hear from you. let us know if you would like us to add more plugins to the list. or start building your custom kestra plugin today and send it our way. we always welcome contributions!",charsets:{}},{title:"Blogs",frontmatter:{title:"Blogs",layout:"BlogsList",meta:[{property:"article:modified_time",content:"2020-12-03T20:59:28.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Blogs"},{property:"og:description",content:"Blogs | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"article"},{property:"og:url",content:"https://kestra.io/blogs/"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Blogs"},{name:"twitter:description",content:"Blogs | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/blogs/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/blogs/",relativePath:"blogs/index.md",key:"v-1af8f4dc",path:"/blogs/",lastUpdated:"12/3/2020, 8:59:28 PM",lastUpdatedTimestamp:1607029168e3,headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"Community",frontmatter:{title:"Community",layout:"Community",meta:[{property:"article:modified_time",content:"2022-09-30T11:39:33.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Community"},{property:"og:description",content:"Community | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/community.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Community"},{name:"twitter:description",content:"Community | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/community.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/community.html",relativePath:"community.md",key:"v-d54e12fa",path:"/community.html",lastUpdated:"9/30/2022, 11:39:33 AM",lastUpdatedTimestamp:1664537973e3,headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"About us",frontmatter:{title:"About us",layout:"CompanyAbout",meta:[{property:"article:modified_time",content:"2021-11-23T08:57:12.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"About us"},{property:"og:description",content:"About us | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/company/about-us.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"About us"},{name:"twitter:description",content:"About us | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/company/about-us.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/company/about-us.html",relativePath:"company/about-us.md",key:"v-79ae536f",path:"/company/about-us.html",lastUpdated:"11/23/2021, 8:57:12 AM",lastUpdatedTimestamp:1637657832e3,headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"Careers",frontmatter:{title:"Careers",layout:"CompanyCareers",meta:[{property:"article:modified_time",content:"2022-11-03T13:46:24.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Careers"},{property:"og:description",content:"Careers | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/company/careers.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Careers"},{name:"twitter:description",content:"Careers | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/company/careers.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/company/careers.html",relativePath:"company/careers.md",key:"v-aab5aafa",path:"/company/careers.html",lastUpdated:"11/3/2022, 1:46:24 PM",lastUpdatedTimestamp:1667483184e3,headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"Developer Advocate",frontmatter:{title:"Developer Advocate",layout:"CareerDetail",type:"Engineering",meta:[{property:"article:modified_time",content:"2022-11-03T13:46:24.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Developer Advocate"},{property:"og:description",content:"Developer Advocate | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/company/careers/developper-advocate.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Developer Advocate"},{name:"twitter:description",content:"Developer Advocate | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/company/careers/developper-advocate.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/company/careers/developper-advocate.html",relativePath:"company/careers/developper-advocate.md",key:"v-15a50223",path:"/company/careers/developper-advocate.html",headers:[{level:2,title:"👀 What you will do:",slug:"👀-what-you-will-do",normalizedTitle:"👀 what you will do:",charIndex:2},{level:2,title:"🚀 What we’re looking for:",slug:"🚀-what-we-re-looking-for",normalizedTitle:"🚀 what we’re looking for:",charIndex:962},{level:2,title:"🤩 Bonus points:",slug:"🤩-bonus-points",normalizedTitle:"🤩 bonus points:",charIndex:1466}],lastUpdated:"11/3/2022, 1:46:24 PM",lastUpdatedTimestamp:1667483184e3,headersStr:"👀 What you will do: 🚀 What we’re looking for: 🤩 Bonus points:",content:"# 👀 What you will do:\n\nKestra is looking for a Developer Advocate who loves to educate and engage with developers, and has a passion for open source communities.\n\n * Content: Create and deliver engaging content, such as, but not limited to, blog posts, technical content, presentations, live streams, etc.\n * Advocate: While still representing as a thought leader in different communities, you will still advocate for Kestra’s community internally, and promote Kestra externally\n * Communities: Attend, speak at, and sponsor in-person and/or virtual events at various developer communities. Be a thought leader in the #DevRel space\n * Fun: Create fun and engaging content for various social media platforms. Whether it’s writing, video creation and technical or soft skills to educate developers\n * Community: Actively engaging with developers on various social media platforms (ie: Twitter, Slack, LinkedIn, GitHub Discussions, Reddit, StackOverflow, etc)\n\n\n# 🚀 What we’re looking for:\n\n * 2+ years experience as a Developer Advocate, or similar activities\n * Some experience in at least two programming languages or frameworks (JS, TS, Java, Python, …)\n * Native US/UK with excellent spoken and written English\n * You love to teach developers how to build cool stuff\n * Entrepreneurial mindset\n * Ability to work with a diverse company (and team) located globally, working across different time zones\n * Ability to take the initiative and work independently\n\n\n# 🤩 Bonus points:\n\n * Professional prior experience as a Data Engineer with extensive knowledge of the big data ecosystem, key technologies (especially Python, Kafka, Flink, Spark, data lakes and warehouses)\n * Experience building demo apps and producing developer-centric content\n * Experience speaking at community events and participating in online forums\n * Experience growing and nurturing open source community projects",normalizedContent:"# 👀 what you will do:\n\nkestra is looking for a developer advocate who loves to educate and engage with developers, and has a passion for open source communities.\n\n * content: create and deliver engaging content, such as, but not limited to, blog posts, technical content, presentations, live streams, etc.\n * advocate: while still representing as a thought leader in different communities, you will still advocate for kestra’s community internally, and promote kestra externally\n * communities: attend, speak at, and sponsor in-person and/or virtual events at various developer communities. be a thought leader in the #devrel space\n * fun: create fun and engaging content for various social media platforms. whether it’s writing, video creation and technical or soft skills to educate developers\n * community: actively engaging with developers on various social media platforms (ie: twitter, slack, linkedin, github discussions, reddit, stackoverflow, etc)\n\n\n# 🚀 what we’re looking for:\n\n * 2+ years experience as a developer advocate, or similar activities\n * some experience in at least two programming languages or frameworks (js, ts, java, python, …)\n * native us/uk with excellent spoken and written english\n * you love to teach developers how to build cool stuff\n * entrepreneurial mindset\n * ability to work with a diverse company (and team) located globally, working across different time zones\n * ability to take the initiative and work independently\n\n\n# 🤩 bonus points:\n\n * professional prior experience as a data engineer with extensive knowledge of the big data ecosystem, key technologies (especially python, kafka, flink, spark, data lakes and warehouses)\n * experience building demo apps and producing developer-centric content\n * experience speaking at community events and participating in online forums\n * experience growing and nurturing open source community projects",charsets:{}},{title:"Senior DevOps Engineer",frontmatter:{title:"Senior DevOps Engineer",layout:"CareerDetail",type:"Engineering",meta:[{property:"article:modified_time",content:"2022-11-03T13:46:24.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Senior DevOps Engineer"},{property:"og:description",content:"Senior DevOps Engineer | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/company/careers/senior-devops-engineer.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Senior DevOps Engineer"},{name:"twitter:description",content:"Senior DevOps Engineer | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/company/careers/senior-devops-engineer.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/company/careers/senior-devops-engineer.html",relativePath:"company/careers/senior-devops-engineer.md",key:"v-9438ad9a",path:"/company/careers/senior-devops-engineer.html",headers:[{level:2,title:"👀 What you will do:",slug:"👀-what-you-will-do",normalizedTitle:"👀 what you will do:",charIndex:2},{level:2,title:"🚀 What we’re looking for:",slug:"🚀-what-we-re-looking-for",normalizedTitle:"🚀 what we’re looking for:",charIndex:715},{level:2,title:"🤩 Bonus points:",slug:"🤩-bonus-points",normalizedTitle:"🤩 bonus points:",charIndex:1702}],lastUpdated:"11/3/2022, 1:46:24 PM",lastUpdatedTimestamp:1667483184e3,headersStr:"👀 What you will do: 🚀 What we’re looking for: 🤩 Bonus points:",content:"# 👀 What you will do:\n\n * Design, Architect & Implement our SAAS offering for Kestra.\n * Automate the provisioning of customer Kestra environnement.\n * Assists in defining automated monitoring, deployment and repair strategies using a wide variety of Ops tools and monitoring platforms\n * Assists with the Continuous Integration and Continuous Deployment (CI/CD) processes\n * Diagnoses, isolates, and debugs application problems and performs problem resolution\n * Design and implement novel technical solutions that raises engineering productivity throughout your team\n * Relentlessly improve your team’s DORA metrics including cycle time, deployment frequency, change failure rate, and mean time to recovery.\n\n\n# 🚀 What we’re looking for:\n\n * 7+ years experience operating in a SRE/DevOps/Infra role.\n * Speaking/writing in English and preferably French as well\n * Experience with one or more general purpose programming languages including but not limited to: Bash, Python or Go.\n * Experience with AWS, GCP, or Azure technologies\n * Experience with containers and Kubernetes based applications running in the public cloud or in on premises data centers (you’ll have both available to you)\n * Comprehension of GitOps and managing Infrastructure as Code (IaC) such as Terraform, CloudFormation, Chef, or Ansible.\n * Comfortable working on distributed systems, databases, networking, storage, and multi-tenant services, and Unix/Linux environments.\n * Familiarity with Linux fundamentals and Bash scripting.\n * Track record of learning new technologies and concepts quickly.\n * Ability to work both autonomously and collaboratively, as needed.\n * Strong written and verbal communications skills.\n\n\n# 🤩 Bonus points:\n\n * Work previously on the SAAS offering that needs deployment for each customer\n * Excellent analytical, decision-making, and problem-solving skills\n * Experience working on highly scalable cloud infrastructures\n * Open-source contributions with a variety of technologies\n * Startup or small company experience\n * Ability to work in an advisory capacity to identify key technical and business problems, develop and evaluate alternative solutions and make recommendations,\n * The ability to understand situations or problems by organizing information in a logical way. This includes anticipating problems for root causes and alternative solutions.",normalizedContent:"# 👀 what you will do:\n\n * design, architect & implement our saas offering for kestra.\n * automate the provisioning of customer kestra environnement.\n * assists in defining automated monitoring, deployment and repair strategies using a wide variety of ops tools and monitoring platforms\n * assists with the continuous integration and continuous deployment (ci/cd) processes\n * diagnoses, isolates, and debugs application problems and performs problem resolution\n * design and implement novel technical solutions that raises engineering productivity throughout your team\n * relentlessly improve your team’s dora metrics including cycle time, deployment frequency, change failure rate, and mean time to recovery.\n\n\n# 🚀 what we’re looking for:\n\n * 7+ years experience operating in a sre/devops/infra role.\n * speaking/writing in english and preferably french as well\n * experience with one or more general purpose programming languages including but not limited to: bash, python or go.\n * experience with aws, gcp, or azure technologies\n * experience with containers and kubernetes based applications running in the public cloud or in on premises data centers (you’ll have both available to you)\n * comprehension of gitops and managing infrastructure as code (iac) such as terraform, cloudformation, chef, or ansible.\n * comfortable working on distributed systems, databases, networking, storage, and multi-tenant services, and unix/linux environments.\n * familiarity with linux fundamentals and bash scripting.\n * track record of learning new technologies and concepts quickly.\n * ability to work both autonomously and collaboratively, as needed.\n * strong written and verbal communications skills.\n\n\n# 🤩 bonus points:\n\n * work previously on the saas offering that needs deployment for each customer\n * excellent analytical, decision-making, and problem-solving skills\n * experience working on highly scalable cloud infrastructures\n * open-source contributions with a variety of technologies\n * startup or small company experience\n * ability to work in an advisory capacity to identify key technical and business problems, develop and evaluate alternative solutions and make recommendations,\n * the ability to understand situations or problems by organizing information in a logical way. this includes anticipating problems for root causes and alternative solutions.",charsets:{}},{title:"Senior Full-Stack Engineer",frontmatter:{title:"Senior Full-Stack Engineer",layout:"CareerDetail",type:"Engineering",meta:[{property:"article:modified_time",content:"2022-11-03T13:46:24.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Senior Full-Stack Engineer"},{property:"og:description",content:"Senior Full-Stack Engineer | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/company/careers/senior-full-stack-engineer.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Senior Full-Stack Engineer"},{name:"twitter:description",content:"Senior Full-Stack Engineer | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/company/careers/senior-full-stack-engineer.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/company/careers/senior-full-stack-engineer.html",relativePath:"company/careers/senior-full-stack-engineer.md",key:"v-2414668d",path:"/company/careers/senior-full-stack-engineer.html",headers:[{level:2,title:"👀 What you will do:",slug:"👀-what-you-will-do",normalizedTitle:"👀 what you will do:",charIndex:2},{level:2,title:"🌕 Our stack",slug:"🌕-our-stack",normalizedTitle:"🌕 our stack",charIndex:446},{level:2,title:"🚀 What we’re looking for:",slug:"🚀-what-we-re-looking-for",normalizedTitle:"🚀 what we’re looking for:",charIndex:792},{level:2,title:"🤩 Bonus points:",slug:"🤩-bonus-points",normalizedTitle:"🤩 bonus points:",charIndex:1551}],lastUpdated:"11/3/2022, 1:46:24 PM",lastUpdatedTimestamp:1667483184e3,headersStr:"👀 What you will do: 🌕 Our stack 🚀 What we’re looking for: 🤩 Bonus points:",content:"# 👀 What you will do:\n\nThis role involves working closely alongside the CTO and to be able to quickly learn the whole project, and quickly become its counterpart.\n\nAs a full stack engineer at Kestra, you'll work on developing:\n\n * The open source projects backend (java)\n * The open source project frontend (vue.js)\n * The open source plugins (Java)\n * The enterprise editions (Java, vue.js)\n * Private enterprise products (Java, vue.js, …)\n\n\n# 🌕 Our stack\n\n * Backend: Java, Micronaut\n * Frontend: Vue.js, Bootstrap\n * Datastore: Kafka, Elasticsearch, PostgreSQL, Mysql\n * Infrastructure: Docker, Kubernetes, Terraform (go for our own providers)\n * Cloud: GCP, AWS, Azure\n * Project: Github (repository, actions, issues)\n * You will work on many technologies, look at our plugins list\n\n\n# 🚀 What we’re looking for:\n\n * 7+ years of software engineering experience in both Backend (Java) and Frontend (Vue.js, react, …)\n * Speaking/writing in English and preferably French as well\n * Experience architecting and implementing backend systems.\n * An ability to lead major architecture decisions and initiatives.\n * Experience with writing good tests for applications, automation of testing, agile development, Git and Github workflows.\n * Interest in the data space, and a love of shipping great products and building tools that empower end users to do more.\n * Track record of learning new technologies and concepts quickly.\n * Ability to work both autonomously and collaboratively, as needed.\n * Strong written and verbal communications skills.\n\n\n# 🤩 Bonus points:\n\n * Experience with contributing to or the maintenance of an open-source project.\n * Experience with Kafka & Kafka Streams.\n * Experience with Micronaut\n * Familiarity or experience with public cloud (aws, gcp, azure, …)\n * Familiarity or experience with infrastructure especially Docker and Kubernetes\n * Familiarity with relational databases such as PostgreSQL or MySQL and NoSQL solutions\n * Experience writing high-performance and distributed systems is a plus.",normalizedContent:"# 👀 what you will do:\n\nthis role involves working closely alongside the cto and to be able to quickly learn the whole project, and quickly become its counterpart.\n\nas a full stack engineer at kestra, you'll work on developing:\n\n * the open source projects backend (java)\n * the open source project frontend (vue.js)\n * the open source plugins (java)\n * the enterprise editions (java, vue.js)\n * private enterprise products (java, vue.js, …)\n\n\n# 🌕 our stack\n\n * backend: java, micronaut\n * frontend: vue.js, bootstrap\n * datastore: kafka, elasticsearch, postgresql, mysql\n * infrastructure: docker, kubernetes, terraform (go for our own providers)\n * cloud: gcp, aws, azure\n * project: github (repository, actions, issues)\n * you will work on many technologies, look at our plugins list\n\n\n# 🚀 what we’re looking for:\n\n * 7+ years of software engineering experience in both backend (java) and frontend (vue.js, react, …)\n * speaking/writing in english and preferably french as well\n * experience architecting and implementing backend systems.\n * an ability to lead major architecture decisions and initiatives.\n * experience with writing good tests for applications, automation of testing, agile development, git and github workflows.\n * interest in the data space, and a love of shipping great products and building tools that empower end users to do more.\n * track record of learning new technologies and concepts quickly.\n * ability to work both autonomously and collaboratively, as needed.\n * strong written and verbal communications skills.\n\n\n# 🤩 bonus points:\n\n * experience with contributing to or the maintenance of an open-source project.\n * experience with kafka & kafka streams.\n * experience with micronaut\n * familiarity or experience with public cloud (aws, gcp, azure, …)\n * familiarity or experience with infrastructure especially docker and kubernetes\n * familiarity with relational databases such as postgresql or mysql and nosql solutions\n * experience writing high-performance and distributed systems is a plus.",charsets:{}},{title:"Contact us",frontmatter:{title:"Contact us",layout:"CompanyContact",meta:[{property:"article:modified_time",content:"2021-12-14T12:54:53.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Contact us"},{property:"og:description",content:"Contact us | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/company/contact.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Contact us"},{name:"twitter:description",content:"Contact us | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/company/contact.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/company/contact.html",relativePath:"company/contact.md",key:"v-0b50773a",path:"/company/contact.html",lastUpdated:"12/14/2021, 12:54:53 PM",lastUpdatedTimestamp:1639486493e3,headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"Cookie Policy",frontmatter:{title:"Cookie Policy",layout:"CompanyLegals",meta:[{property:"article:modified_time",content:"2022-01-31T17:48:50.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Cookie Policy"},{property:"og:description",content:"Cookie Policy | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/company/cookie-policy.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Cookie Policy"},{name:"twitter:description",content:"Cookie Policy | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/company/cookie-policy.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/company/cookie-policy.html",relativePath:"company/cookie-policy.md",key:"v-135cabfa",path:"/company/cookie-policy.html",headers:[{level:3,title:"Interpretation and Definitions",slug:"interpretation-and-definitions",normalizedTitle:"interpretation and definitions",charIndex:660},{level:3,title:"The use of the Cookies",slug:"the-use-of-the-cookies",normalizedTitle:"the use of the cookies",charIndex:1595},{level:3,title:"Your Choices Regarding Cookies",slug:"your-choices-regarding-cookies",normalizedTitle:"your choices regarding cookies",charIndex:3849},{level:3,title:"Contact Us",slug:"contact-us",normalizedTitle:"contact us",charIndex:5056}],lastUpdated:"1/31/2022, 5:48:50 PM",lastUpdatedTimestamp:164365133e4,headersStr:"Interpretation and Definitions The use of the Cookies Your Choices Regarding Cookies Contact Us",content:'This Cookies Policy explains what Cookies are and how We use them. You should read this policy so You can understand what type of cookies We use, or the information We collect using Cookies and how that information is used.\n\nCookies do not typically contain any information that personally identifies a user, but personal information that we store about You may be linked to the information stored in and obtained from Cookies. For further information on how We use, store and keep your personal data secure, see our Privacy Policy.\n\nWe do not store sensitive personal information, such as mailing addresses, account passwords, etc. in the Cookies We use.\n\n\n# Interpretation and Definitions\n\n# Interpretation\n\nThe words of which the initial letter is capitalized have meanings defined under the following conditions. The following definitions shall have the same meaning regardless of whether they appear in singular or in plural.\n\n# Definitions\n\nFor the purposes of this Cookies Policy:\n\n * Company (referred to as either "the Company", "We", "Us" or "Our" in this Cookies Policy) refers to Kestra Technologies, 81 RUE DU PRE CATELAN, 59110 LA MADELEINE.\n * Cookies means small files that are placed on Your computer, mobile device or any other device by a website, containing details of your browsing history on that website among its many uses.\n * Website refers to Kestra, accessible from https://kestra.io/\n * You means the individual accessing or using the Website, or a company, or any legal entity on behalf of which such individual is accessing or using the Website, as applicable.\n\n\n# The use of the Cookies\n\n# Type of Cookies We Use\n\nCookies can be "Persistent" or "Session" Cookies. Persistent Cookies remain on your personal computer or mobile device when You go offline, while Session Cookies are deleted as soon as You close your web browser.\n\nWe use both session and persistent Cookies for the purposes set out below:\n\n# Necessary / Essential Cookies\n\n * Type: Session Cookies\n * Administered by: Us\n * Purpose: These Cookies are essential to provide You with services available through the Website and to enable You to use some of its features. They help to authenticate users and prevent fraudulent use of user accounts. Without these Cookies, the services that You have asked for cannot be provided, and We only use these Cookies to provide You with those services.\n\n# Functionality Cookies\n\n * Type: Persistent Cookies\n * Administered by: Us\n * Purpose: These Cookies allow us to remember choices You make when You use the Website, such as remembering your login details or language preference. The purpose of these Cookies is to provide You with a more personal experience and to avoid You having to re-enter your preferences every time You use the Website.\n\n# Third-party cookies on our site\n\nWe may employ third-party companies and individuals on our websites — for example, analytics providers and content partners. We grant these third parties access to selected information to perform specific tasks on our behalf. They may also set third-party cookies in order to deliver the services they are providing. Third-party cookies can be used to track you on other websites that use the same third-party service. As we have no control over third-party cookies, they are not covered by Kestra\'s cookie policy.\n\n# Google Analytics’ Cookies\n\nIn order to collect data on the usage of our website and visits to the website, we use Google Analytics. Google Analytics stores a permanent cookie on your terminal which is subsequently used to register your use of the website. This enables us to get more insight in the way in which the website is used and, based on this information, to make adjustments to the website or the provided services.\n\nWe use Google Analytics IP Anonymization, so we don\'t store any personal information.\n\n\n# Your Choices Regarding Cookies\n\nIf You prefer to avoid the use of Cookies on the Website, first You must disable the use of Cookies in your browser and then delete the Cookies saved in your browser associated with this website. You may use this option for preventing the use of Cookies at any time.\n\nIf You do not accept Our Cookies, You may experience some inconvenience in your use of the Website and some features may not function properly.\n\nIf You\'d like to delete Cookies or instruct your web browser to delete or refuse Cookies, please visit the help pages of your web browser.\n\n * For the Chrome web browser, please visit this page from Google: https://support.google.com/accounts/answer/32050\n * For the Internet Explorer web browser, please visit this page from Microsoft: http://support.microsoft.com/kb/278835\n * For the Firefox web browser, please visit this page from Mozilla: https://support.mozilla.org/en-US/kb/delete-cookies-remove-info-websites-stored\n * For the Safari web browser, please visit this page from Apple: https://support.apple.com/guide/safari/manage-cookies-and-website-data-sfri11471/mac\n * For any other web browser, please visit your web browser\'s official web pages.\n\n\n# Contact Us\n\nIf you have any questions about this Cookies Policy, You can contact us:\n\n * By email: hello@kestra.io',normalizedContent:'this cookies policy explains what cookies are and how we use them. you should read this policy so you can understand what type of cookies we use, or the information we collect using cookies and how that information is used.\n\ncookies do not typically contain any information that personally identifies a user, but personal information that we store about you may be linked to the information stored in and obtained from cookies. for further information on how we use, store and keep your personal data secure, see our privacy policy.\n\nwe do not store sensitive personal information, such as mailing addresses, account passwords, etc. in the cookies we use.\n\n\n# interpretation and definitions\n\n# interpretation\n\nthe words of which the initial letter is capitalized have meanings defined under the following conditions. the following definitions shall have the same meaning regardless of whether they appear in singular or in plural.\n\n# definitions\n\nfor the purposes of this cookies policy:\n\n * company (referred to as either "the company", "we", "us" or "our" in this cookies policy) refers to kestra technologies, 81 rue du pre catelan, 59110 la madeleine.\n * cookies means small files that are placed on your computer, mobile device or any other device by a website, containing details of your browsing history on that website among its many uses.\n * website refers to kestra, accessible from https://kestra.io/\n * you means the individual accessing or using the website, or a company, or any legal entity on behalf of which such individual is accessing or using the website, as applicable.\n\n\n# the use of the cookies\n\n# type of cookies we use\n\ncookies can be "persistent" or "session" cookies. persistent cookies remain on your personal computer or mobile device when you go offline, while session cookies are deleted as soon as you close your web browser.\n\nwe use both session and persistent cookies for the purposes set out below:\n\n# necessary / essential cookies\n\n * type: session cookies\n * administered by: us\n * purpose: these cookies are essential to provide you with services available through the website and to enable you to use some of its features. they help to authenticate users and prevent fraudulent use of user accounts. without these cookies, the services that you have asked for cannot be provided, and we only use these cookies to provide you with those services.\n\n# functionality cookies\n\n * type: persistent cookies\n * administered by: us\n * purpose: these cookies allow us to remember choices you make when you use the website, such as remembering your login details or language preference. the purpose of these cookies is to provide you with a more personal experience and to avoid you having to re-enter your preferences every time you use the website.\n\n# third-party cookies on our site\n\nwe may employ third-party companies and individuals on our websites — for example, analytics providers and content partners. we grant these third parties access to selected information to perform specific tasks on our behalf. they may also set third-party cookies in order to deliver the services they are providing. third-party cookies can be used to track you on other websites that use the same third-party service. as we have no control over third-party cookies, they are not covered by kestra\'s cookie policy.\n\n# google analytics’ cookies\n\nin order to collect data on the usage of our website and visits to the website, we use google analytics. google analytics stores a permanent cookie on your terminal which is subsequently used to register your use of the website. this enables us to get more insight in the way in which the website is used and, based on this information, to make adjustments to the website or the provided services.\n\nwe use google analytics ip anonymization, so we don\'t store any personal information.\n\n\n# your choices regarding cookies\n\nif you prefer to avoid the use of cookies on the website, first you must disable the use of cookies in your browser and then delete the cookies saved in your browser associated with this website. you may use this option for preventing the use of cookies at any time.\n\nif you do not accept our cookies, you may experience some inconvenience in your use of the website and some features may not function properly.\n\nif you\'d like to delete cookies or instruct your web browser to delete or refuse cookies, please visit the help pages of your web browser.\n\n * for the chrome web browser, please visit this page from google: https://support.google.com/accounts/answer/32050\n * for the internet explorer web browser, please visit this page from microsoft: http://support.microsoft.com/kb/278835\n * for the firefox web browser, please visit this page from mozilla: https://support.mozilla.org/en-us/kb/delete-cookies-remove-info-websites-stored\n * for the safari web browser, please visit this page from apple: https://support.apple.com/guide/safari/manage-cookies-and-website-data-sfri11471/mac\n * for any other web browser, please visit your web browser\'s official web pages.\n\n\n# contact us\n\nif you have any questions about this cookies policy, you can contact us:\n\n * by email: hello@kestra.io',charsets:{}},{title:"Privacy Policy",frontmatter:{title:"Privacy Policy",layout:"CompanyLegals",meta:[{property:"article:modified_time",content:"2022-01-09T20:58:17.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Privacy Policy"},{property:"og:description",content:"Privacy Policy | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/company/privacy-policy.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Privacy Policy"},{name:"twitter:description",content:"Privacy Policy | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/company/privacy-policy.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/company/privacy-policy.html",relativePath:"company/privacy-policy.md",key:"v-f3216c06",path:"/company/privacy-policy.html",headers:[{level:3,title:"Consent",slug:"consent",normalizedTitle:"consent",charIndex:713},{level:3,title:"Information we collect",slug:"information-we-collect",normalizedTitle:"information we collect",charIndex:813},{level:3,title:"How we use your information",slug:"how-we-use-your-information",normalizedTitle:"how we use your information",charIndex:1442},{level:3,title:"Log Files",slug:"log-files",normalizedTitle:"log files",charIndex:2016},{level:3,title:"Cookies and Web Beacons",slug:"cookies-and-web-beacons",normalizedTitle:"cookies and web beacons",charIndex:2650},{level:3,title:"Advertising Partners Privacy Policies",slug:"advertising-partners-privacy-policies",normalizedTitle:"advertising partners privacy policies",charIndex:3132},{level:3,title:"Third Party Privacy Policies",slug:"third-party-privacy-policies",normalizedTitle:"third party privacy policies",charIndex:3842},{level:3,title:"CCPA Privacy Rights (Do Not Sell My Personal Information)",slug:"ccpa-privacy-rights-do-not-sell-my-personal-information",normalizedTitle:"ccpa privacy rights (do not sell my personal information)",charIndex:4386},{level:3,title:"General Data Protection Regulation (GDPR)",slug:"general-data-protection-regulation-gdpr",normalizedTitle:"general data protection regulation (gdpr)",charIndex:5040},{level:3,title:"Children's Information",slug:"children-s-information",normalizedTitle:"children's information",charIndex:6448}],lastUpdated:"1/9/2022, 8:58:17 PM",lastUpdatedTimestamp:1641761897e3,headersStr:"Consent Information we collect How we use your information Log Files Cookies and Web Beacons Advertising Partners Privacy Policies Third Party Privacy Policies CCPA Privacy Rights (Do Not Sell My Personal Information) General Data Protection Regulation (GDPR) Children's Information",content:"At Kestra, accessible from https://kestra.io, one of our main priorities is the privacy of our visitors. This Privacy Policy document contains types of information that is collected and recorded by Kestra and how we use it.\n\nIf you have additional questions or require more information about our Privacy Policy, do not hesitate to contact us.\n\nThis Privacy Policy applies only to our online activities and is valid for visitors to our website with regards to the information that they shared and/or collect in Kestra. This policy is not applicable to any information collected offline or via channels other than this website. Our Privacy Policy was created with the help of the Free Privacy Policy Generator.\n\n\n# Consent\n\nBy using our website, you hereby consent to our Privacy Policy and agree to its terms.\n\n\n# Information we collect\n\nThe personal information that you are asked to provide, and the reasons why you are asked to provide it, will be made clear to you at the point we ask you to provide your personal information.\n\nIf you contact us directly, we may receive additional information about you such as your name, email address, phone number, the contents of the message and/or attachments you may send us, and any other information you may choose to provide.\n\nWhen you register for an Account, we may ask for your contact information, including items such as name, company name, address, email address, and telephone number.\n\n\n# How we use your information\n\nWe use the information we collect in various ways, including to:\n\n * Provide, operate, and maintain our website\n * Improve, personalize, and expand our website\n * Understand and analyze how you use our website\n * Develop new products, services, features, and functionality\n * Communicate with you, either directly or through one of our partners, including for customer service, to provide you with updates and other information relating to the website, and for marketing and promotional purposes\n * Send you emails\n * Find and prevent fraud\n\n\n# Log Files\n\nKestra follows a standard procedure of using log files. These files log visitors when they visit websites. All hosting companies do this and a part of hosting services' analytics. The information collected by log files include internet protocol (IP) addresses, browser type, Internet Service Provider (ISP), date and time stamp, referring/exit pages, and possibly the number of clicks. These are not linked to any information that is personally identifiable. The purpose of the information is for analyzing trends, administering the site, tracking users' movement on the website, and gathering demographic information.\n\n\n# Cookies and Web Beacons\n\nLike any other website, Kestra uses 'cookies'. These cookies are used to store information including visitors' preferences, and the pages on the website that the visitor accessed or visited. The information is used to optimize the users' experience by customizing our web page content based on visitors' browser type and/or other information.\n\nFor more general information on cookies, please read the Cookies article on Generate Privacy Policy website.\n\n\n# Advertising Partners Privacy Policies\n\nYou may consult this list to find the Privacy Policy for each of the advertising partners of Kestra.\n\nThird-party ad servers or ad networks uses technologies like cookies, JavaScript, or Web Beacons that are used in their respective advertisements and links that appear on Kestra, which are sent directly to users' browser. They automatically receive your IP address when this occurs. These technologies are used to measure the effectiveness of their advertising campaigns and/or to personalize the advertising content that you see on websites that you visit.\n\nNote that Kestra has no access to or control over these cookies that are used by third-party advertisers.\n\n\n# Third Party Privacy Policies\n\nKestra's Privacy Policy does not apply to other advertisers or websites. Thus, we are advising you to consult the respective Privacy Policies of these third-party ad servers for more detailed information. It may include their practices and instructions about how to opt-out of certain options.\n\nYou can choose to disable cookies through your individual browser options. To know more detailed information about cookie management with specific web browsers, it can be found at the browsers' respective websites.\n\n\n# CCPA Privacy Rights (Do Not Sell My Personal Information)\n\nUnder the CCPA, among other rights, California consumers have the right to:\n\n * Request that a business that collects a consumer's personal data disclose the categories and specific pieces of personal data that a business has collected about consumers.\n * Request that a business delete any personal data about the consumer that a business has collected.\n * Request that a business that sells a consumer's personal data, not sell the consumer's personal data.\n\nIf you make a request, we have one month to respond to you. If you would like to exercise any of these rights, please contact us.\n\n\n# General Data Protection Regulation (GDPR)\n\nWe are a Data Controller of your information.\n\nKestra Technologies legal basis for collecting and using the personal information described in this Privacy Policy depends on the Personal Information we collect and the specific context in which we collect the information:\n\n * Kestra Technologies needs to perform a contract with you\n * You have given Kestra Technologies permission to do so\n * Processing your personal information is in Kestra Technologies legitimate interests\n * Kestra Technologies needs to comply with the law\n * Kestra Technologies will retain your personal information only for as long as is necessary for the purposes set out in this Privacy Policy. We will retain and use your information to the extent necessary to comply with our legal obligations, resolve disputes, and enforce our policies.\n\nIf you are a resident of the European Economic Area (EEA), you have certain data protection rights. If you wish to be informed what Personal Information we hold about you and if you want it to be removed from our systems, please contact us.\n\nIn certain circumstances, you have the following data protection rights:\n\n * The right to access, update or to delete the information we have on you.\n * The right of rectification.\n * The right to object.\n * The right of restriction.\n * The right to data portability\n * The right to withdraw consent\n\n\n# Children's Information\n\nAnother part of our priority is adding protection for children while using the internet. We encourage parents and guardians to observe, participate in, and/or monitor and guide their online activity.\n\nKestra does not knowingly collect any Personal Identifiable Information from children under the age of 13. If you think that your child provided this kind of information on our website, we strongly encourage you to contact us immediately and we will do our best efforts to promptly remove such information from our records",normalizedContent:"at kestra, accessible from https://kestra.io, one of our main priorities is the privacy of our visitors. this privacy policy document contains types of information that is collected and recorded by kestra and how we use it.\n\nif you have additional questions or require more information about our privacy policy, do not hesitate to contact us.\n\nthis privacy policy applies only to our online activities and is valid for visitors to our website with regards to the information that they shared and/or collect in kestra. this policy is not applicable to any information collected offline or via channels other than this website. our privacy policy was created with the help of the free privacy policy generator.\n\n\n# consent\n\nby using our website, you hereby consent to our privacy policy and agree to its terms.\n\n\n# information we collect\n\nthe personal information that you are asked to provide, and the reasons why you are asked to provide it, will be made clear to you at the point we ask you to provide your personal information.\n\nif you contact us directly, we may receive additional information about you such as your name, email address, phone number, the contents of the message and/or attachments you may send us, and any other information you may choose to provide.\n\nwhen you register for an account, we may ask for your contact information, including items such as name, company name, address, email address, and telephone number.\n\n\n# how we use your information\n\nwe use the information we collect in various ways, including to:\n\n * provide, operate, and maintain our website\n * improve, personalize, and expand our website\n * understand and analyze how you use our website\n * develop new products, services, features, and functionality\n * communicate with you, either directly or through one of our partners, including for customer service, to provide you with updates and other information relating to the website, and for marketing and promotional purposes\n * send you emails\n * find and prevent fraud\n\n\n# log files\n\nkestra follows a standard procedure of using log files. these files log visitors when they visit websites. all hosting companies do this and a part of hosting services' analytics. the information collected by log files include internet protocol (ip) addresses, browser type, internet service provider (isp), date and time stamp, referring/exit pages, and possibly the number of clicks. these are not linked to any information that is personally identifiable. the purpose of the information is for analyzing trends, administering the site, tracking users' movement on the website, and gathering demographic information.\n\n\n# cookies and web beacons\n\nlike any other website, kestra uses 'cookies'. these cookies are used to store information including visitors' preferences, and the pages on the website that the visitor accessed or visited. the information is used to optimize the users' experience by customizing our web page content based on visitors' browser type and/or other information.\n\nfor more general information on cookies, please read the cookies article on generate privacy policy website.\n\n\n# advertising partners privacy policies\n\nyou may consult this list to find the privacy policy for each of the advertising partners of kestra.\n\nthird-party ad servers or ad networks uses technologies like cookies, javascript, or web beacons that are used in their respective advertisements and links that appear on kestra, which are sent directly to users' browser. they automatically receive your ip address when this occurs. these technologies are used to measure the effectiveness of their advertising campaigns and/or to personalize the advertising content that you see on websites that you visit.\n\nnote that kestra has no access to or control over these cookies that are used by third-party advertisers.\n\n\n# third party privacy policies\n\nkestra's privacy policy does not apply to other advertisers or websites. thus, we are advising you to consult the respective privacy policies of these third-party ad servers for more detailed information. it may include their practices and instructions about how to opt-out of certain options.\n\nyou can choose to disable cookies through your individual browser options. to know more detailed information about cookie management with specific web browsers, it can be found at the browsers' respective websites.\n\n\n# ccpa privacy rights (do not sell my personal information)\n\nunder the ccpa, among other rights, california consumers have the right to:\n\n * request that a business that collects a consumer's personal data disclose the categories and specific pieces of personal data that a business has collected about consumers.\n * request that a business delete any personal data about the consumer that a business has collected.\n * request that a business that sells a consumer's personal data, not sell the consumer's personal data.\n\nif you make a request, we have one month to respond to you. if you would like to exercise any of these rights, please contact us.\n\n\n# general data protection regulation (gdpr)\n\nwe are a data controller of your information.\n\nkestra technologies legal basis for collecting and using the personal information described in this privacy policy depends on the personal information we collect and the specific context in which we collect the information:\n\n * kestra technologies needs to perform a contract with you\n * you have given kestra technologies permission to do so\n * processing your personal information is in kestra technologies legitimate interests\n * kestra technologies needs to comply with the law\n * kestra technologies will retain your personal information only for as long as is necessary for the purposes set out in this privacy policy. we will retain and use your information to the extent necessary to comply with our legal obligations, resolve disputes, and enforce our policies.\n\nif you are a resident of the european economic area (eea), you have certain data protection rights. if you wish to be informed what personal information we hold about you and if you want it to be removed from our systems, please contact us.\n\nin certain circumstances, you have the following data protection rights:\n\n * the right to access, update or to delete the information we have on you.\n * the right of rectification.\n * the right to object.\n * the right of restriction.\n * the right to data portability\n * the right to withdraw consent\n\n\n# children's information\n\nanother part of our priority is adding protection for children while using the internet. we encourage parents and guardians to observe, participate in, and/or monitor and guide their online activity.\n\nkestra does not knowingly collect any personal identifiable information from children under the age of 13. if you think that your child provided this kind of information on our website, we strongly encourage you to contact us immediately and we will do our best efforts to promptly remove such information from our records",charsets:{}},{title:"What’s Kestra?",frontmatter:{order:0,meta:[{property:"article:modified_time",content:"2022-04-03T19:32:39.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"What’s Kestra?"},{property:"og:description",content:"What’s Kestra? | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"What’s Kestra?"},{name:"twitter:description",content:"What’s Kestra? | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/",relativePath:"docs/README.md",key:"v-24306408",path:"/docs/",headers:[{level:2,title:"Principles",slug:"principles",normalizedTitle:"principles",charIndex:497},{level:2,title:"Usages",slug:"usages",normalizedTitle:"usages",charIndex:1350}],lastUpdated:"4/3/2022, 7:32:39 PM",lastUpdatedTimestamp:1649014359e3,headersStr:"Principles Usages",content:"# What’s Kestra?\n\nKestra is an orchestration & scheduler platform that helps you to build, run, schedule, and monitor complex pipelines.\n\n\n\nKestra makes it simple to create a flow, requiring only a few lines of code in yaml. All other complexities are handled by Kestra, including:\n\n * Deploying\n * Scaling\n * Monitoring\n * Handling errors\n * ...\n\n> Simply define the flow with a simple succession of tasks, decide when and how the flow should be launched, and monitor execution in real time.\n\n\n# Principles\n\n * Simple: Kestra workflows are defined as yaml, no code here, just a simple declarative syntax allowing even complex workflows.\n * Extensible: The entire foundation of Kestra is built upon plugins, find an existing one or build your own to fit your business needs.\n * Real time: Kestra is built by thinking in real time. Simply create a flow, run it and see all the logs in realtime.\n * Scalable: Kestra users enjoy its almost infinite scalability. It is built with top technologies like Kafka & Elasticsearch, and can scale to millions of executions without any difficulty.\n * Cloud Native: Built with the cloud in mind, Kestra uses top cloud native technology and allows you to deploy everywhere, whether in cloud or on-premise.\n * Open source: Kestra is built with the Apache 2 license, contribute on our core or plugins as you can.\n\n\n# Usages\n\nKestra can be used as:\n\n * Data orchestrator: Handle complex workflows, and move large datasets, extracting, transforming and loading them in the manner of your choice (ETL or ELT).\n * Distributed crontab: Schedule work on multiple workloads and monitor each and every process.\n * Events Driven workflow: React to external events such as api calls to get things done instantly.\n * ...\n\nNow get started and keep it flowing!",normalizedContent:"# what’s kestra?\n\nkestra is an orchestration & scheduler platform that helps you to build, run, schedule, and monitor complex pipelines.\n\n\n\nkestra makes it simple to create a flow, requiring only a few lines of code in yaml. all other complexities are handled by kestra, including:\n\n * deploying\n * scaling\n * monitoring\n * handling errors\n * ...\n\n> simply define the flow with a simple succession of tasks, decide when and how the flow should be launched, and monitor execution in real time.\n\n\n# principles\n\n * simple: kestra workflows are defined as yaml, no code here, just a simple declarative syntax allowing even complex workflows.\n * extensible: the entire foundation of kestra is built upon plugins, find an existing one or build your own to fit your business needs.\n * real time: kestra is built by thinking in real time. simply create a flow, run it and see all the logs in realtime.\n * scalable: kestra users enjoy its almost infinite scalability. it is built with top technologies like kafka & elasticsearch, and can scale to millions of executions without any difficulty.\n * cloud native: built with the cloud in mind, kestra uses top cloud native technology and allows you to deploy everywhere, whether in cloud or on-premise.\n * open source: kestra is built with the apache 2 license, contribute on our core or plugins as you can.\n\n\n# usages\n\nkestra can be used as:\n\n * data orchestrator: handle complex workflows, and move large datasets, extracting, transforming and loading them in the manner of your choice (etl or elt).\n * distributed crontab: schedule work on multiple workloads and monitor each and every process.\n * events driven workflow: react to external events such as api calls to get things done instantly.\n * ...\n\nnow get started and keep it flowing!",charsets:{}},{title:"Administrator Guide",frontmatter:{order:5,meta:[{property:"article:modified_time",content:"2020-11-09T20:39:04.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Administrator Guide"},{property:"og:description",content:"Administrator Guide | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/administrator-guide/"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Administrator Guide"},{name:"twitter:description",content:"Administrator Guide | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/administrator-guide/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/administrator-guide/",relativePath:"docs/administrator-guide/README.md",key:"v-04b425b0",path:"/docs/administrator-guide/",lastUpdated:"11/9/2020, 8:39:04 PM",lastUpdatedTimestamp:1604954344e3,headersStr:null,content:"# Administrator Guide\n\nHere, you will find the necessary information in order to deploy & configure your Kestra cluster.\n\nMore information :",normalizedContent:"# administrator guide\n\nhere, you will find the necessary information in order to deploy & configure your kestra cluster.\n\nmore information :",charsets:{}},{title:"Configuration",frontmatter:{order:3,meta:[{property:"article:modified_time",content:"2022-04-10T20:45:29.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Configuration"},{property:"og:description",content:"Configuration | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/administrator-guide/configuration/"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Configuration"},{name:"twitter:description",content:"Configuration | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/administrator-guide/configuration/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/administrator-guide/configuration/",relativePath:"docs/administrator-guide/configuration/README.md",key:"v-c4be06f0",path:"/docs/administrator-guide/configuration/",headers:[{level:2,title:"Kestra configuration",slug:"kestra-configuration",normalizedTitle:"kestra configuration",charIndex:108},{level:3,title:"Kafka configuration",slug:"kafka-configuration",normalizedTitle:"kafka configuration",charIndex:221},{level:3,title:"ElasticSearch configuration",slug:"elasticsearch-configuration",normalizedTitle:"elasticsearch configuration",charIndex:417},{level:3,title:"Storage configuration",slug:"storage-configuration",normalizedTitle:"storage configuration",charIndex:640},{level:3,title:"Others Kestra configuration",slug:"others-kestra-configuration",normalizedTitle:"others kestra configuration",charIndex:996},{level:3,title:"Micronaut configuration",slug:"micronaut-configuration",normalizedTitle:"micronaut configuration",charIndex:1076}],lastUpdated:"4/10/2022, 8:45:29 PM",lastUpdatedTimestamp:1649623529e3,headersStr:"Kestra configuration Kafka configuration ElasticSearch configuration Storage configuration Others Kestra configuration Micronaut configuration",content:"# Configuration\n\nKestra offers a lot of configuration options in order to customize the way you use it.\n\n\n# Kestra configuration\n\nFirst things first, you will need to configure the queue type and the repository type.\n\n\n# Kafka configuration\n\nTo enable Kafka Queue, we need add the following to your configuration files:\n\nkestra:\n  queue:\n    type: kafka\n\n\nDetails about your Kafka configuration can be found here\n\n\n# ElasticSearch configuration\n\nTo enable ElasticSearch Repository, we need add the following to your configuration files:\n\nkestra:\n  repository:\n    type: elasticsearch\n\n\nDetails about ElasticSearch configuration is here\n\n\n# Storage configuration\n\nKestra supports multiple storage options, the default being local storage (only for local testing)\nTo choose new storage types, you will need to add the below to your configuration files, and be sure to download the corresponding plugins.\n\nkestra:\n  storage:\n    type: gcs\n\n\nDetails about Storage configuration can be found here\n\n\n# Others Kestra configuration\n\nOthers Kestra configurations can be found here\n\n\n# Micronaut configuration\n\nSince Kestra is a Java based app on micronaut, you can configure it to fit your needs, more details here",normalizedContent:"# configuration\n\nkestra offers a lot of configuration options in order to customize the way you use it.\n\n\n# kestra configuration\n\nfirst things first, you will need to configure the queue type and the repository type.\n\n\n# kafka configuration\n\nto enable kafka queue, we need add the following to your configuration files:\n\nkestra:\n  queue:\n    type: kafka\n\n\ndetails about your kafka configuration can be found here\n\n\n# elasticsearch configuration\n\nto enable elasticsearch repository, we need add the following to your configuration files:\n\nkestra:\n  repository:\n    type: elasticsearch\n\n\ndetails about elasticsearch configuration is here\n\n\n# storage configuration\n\nkestra supports multiple storage options, the default being local storage (only for local testing)\nto choose new storage types, you will need to add the below to your configuration files, and be sure to download the corresponding plugins.\n\nkestra:\n  storage:\n    type: gcs\n\n\ndetails about storage configuration can be found here\n\n\n# others kestra configuration\n\nothers kestra configurations can be found here\n\n\n# micronaut configuration\n\nsince kestra is a java based app on micronaut, you can configure it to fit your needs, more details here",charsets:{}},{title:"Databases configuration",frontmatter:{order:1,meta:[{property:"article:modified_time",content:"2022-07-04T09:19:26.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Databases configuration"},{property:"og:description",content:"Databases configuration | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/administrator-guide/configuration/databases/"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Databases configuration"},{name:"twitter:description",content:"Databases configuration | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/administrator-guide/configuration/databases/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/administrator-guide/configuration/databases/",relativePath:"docs/administrator-guide/configuration/databases/README.md",key:"v-65f94028",path:"/docs/administrator-guide/configuration/databases/",headers:[{level:2,title:"Minimal examples",slug:"minimal-examples",normalizedTitle:"minimal examples",charIndex:30},{level:2,title:"datasources.* properties",slug:"datasources-properties",normalizedTitle:"datasources.* properties",charIndex:731},{level:2,title:"Queues configuration",slug:"queues-configuration",normalizedTitle:"queues configuration",charIndex:3486},{level:3,title:"kestra.jdbc.queues",slug:"kestra-jdbc-queues",normalizedTitle:"kestra.jdbc.queues",charIndex:3511},{level:3,title:"kestra.jdbc.cleaner",slug:"kestra-jdbc-cleaner",normalizedTitle:"kestra.jdbc.cleaner",charIndex:4298}],lastUpdated:"7/4/2022, 9:19:26 AM",lastUpdatedTimestamp:1656926366e3,headersStr:"Minimal examples datasources.* properties Queues configuration kestra.jdbc.queues kestra.jdbc.cleaner",content:"# Databases configuration\n\n\n# Minimal examples\n\nMost important configuration is to configure the way Kestra connect to a database. For now, Kestra support Postgres and Mysql.\n\nHere is a minimal mysql configuration example :\n\ndatasources:\n  mysql:\n    url: jdbc:mysql://local:3306/kestra\n    driverClassName: com.mysql.cj.jdbc.Driver\n    username: kestra\n    password: k3str4\n    dialect: MYSQL\n\nkestra:\n  queue:\n    type: mysql\n  repository:\n    type: mysql\n\n\nHere is minimal Postgres configuration:\n\ndatasources:\n  postgres:\n    url: jdbc:postgresql://local:5432/kestra\n    driverClassName: org.postgresql.Driver\n    username: kestra\n    password: k3str4\n\nkestra:\n  queue:\n    type: postgres\n  repository:\n    type: postgres\n\n\n\n# datasources.* properties\n\nSince Kestra is built upon micronaut and HikariCP, many configurations are available in order to configure the database pool:\n\nPROPERTIES                    TYPE     DESCRIPTION\nurl                           String   Set the jdbc connection string.\ncatalog                       String   Set the default schema name to be set on connections.\nschema                        String   Set the default catalog name to be set on connections.\nusername                      String   Set the default username used.\npassword                      String   Set the default password to use.\ntransaction-isolation         String   Set the default transaction isolation level.\npool-name                     String   Set the name of the connection pool.\nconnection-init-sql           String   Set the SQL string that will be executed on all new\n                                       connections when they are created, before they are added to\n                                       the pool.\nconnection-test-query         String   Set the SQL query to be executed to test the validity of\n                                       connections.\nconnection-timeout            Long     Set the maximum number of milliseconds that a client will\n                                       wait for a connection from the pool.\nidle-timeout                  Long     This property controls the maximum amount of time (in\n                                       milliseconds) that a connection is allowed to sit idle in\n                                       the pool.\nminimum-idle                  Long     The property controls the minimum number of idle connections\n                                       that HikariCP tries to maintain in the pool, including both\n                                       idle and in-use connections.\ninitialization-fail-timeout   Long     Set the pool initialization failure timeout.\nleak-detection-threshold      Long     This property controls the amount of time that a connection\n                                       can be out of the pool before a message is logged indicating\n                                       a possible connection leak.\nmaximum-pool-size             Int      The property controls the maximum size that the pool is\n                                       allowed to reach, including both idle and in-use\n                                       connections.\nmax-lifetime                  Long     This property controls the maximum lifetime of a connection\n                                       in the pool.\nvalidation-timeout            Long     Sets the maximum number of milliseconds that the pool will\n                                       wait for a connection to be validated as alive.\n\n\n# Queues configuration\n\n\n# kestra.jdbc.queues\n\nKestra queues based on database simulate queues doing long polling. It queries a queues table to detect new message. Change these parameters to reduce the latency (but increase load on the database).\n\n * kestra.jdbc.queues.min-poll-interval: is the minimum duration between 2 polls\n * kestra.jdbc.queues.max-poll-interval: is the maximum duration between 2 polls\n * kestra.jdbc.queues.poll-switch-interval: is the duration when no message are received switching from min polling to max polling (ex: one message received, the min-poll-interval is used, if no new message arrived with poll-switch-interval, we switch to max-poll-interval).\n\nkestra:\n  jdbc:\n    queues:\n      min-poll-interval: 100ms\n      max-poll-interval: 1000ms\n      poll-switch-interval: 5s\n\n\n\n\n# kestra.jdbc.cleaner\n\nWe clean the queues table to avoid infinite grow of this table. You can control how often you want this cleaning to happen, and how many times we will keep message in the queue with retention.\n\nkestra:\n  jdbc:\n    cleaner:\n      initial-delay: 1h\n      fixed-delay: 1h\n      retention: 7d\n",normalizedContent:"# databases configuration\n\n\n# minimal examples\n\nmost important configuration is to configure the way kestra connect to a database. for now, kestra support postgres and mysql.\n\nhere is a minimal mysql configuration example :\n\ndatasources:\n  mysql:\n    url: jdbc:mysql://local:3306/kestra\n    driverclassname: com.mysql.cj.jdbc.driver\n    username: kestra\n    password: k3str4\n    dialect: mysql\n\nkestra:\n  queue:\n    type: mysql\n  repository:\n    type: mysql\n\n\nhere is minimal postgres configuration:\n\ndatasources:\n  postgres:\n    url: jdbc:postgresql://local:5432/kestra\n    driverclassname: org.postgresql.driver\n    username: kestra\n    password: k3str4\n\nkestra:\n  queue:\n    type: postgres\n  repository:\n    type: postgres\n\n\n\n# datasources.* properties\n\nsince kestra is built upon micronaut and hikaricp, many configurations are available in order to configure the database pool:\n\nproperties                    type     description\nurl                           string   set the jdbc connection string.\ncatalog                       string   set the default schema name to be set on connections.\nschema                        string   set the default catalog name to be set on connections.\nusername                      string   set the default username used.\npassword                      string   set the default password to use.\ntransaction-isolation         string   set the default transaction isolation level.\npool-name                     string   set the name of the connection pool.\nconnection-init-sql           string   set the sql string that will be executed on all new\n                                       connections when they are created, before they are added to\n                                       the pool.\nconnection-test-query         string   set the sql query to be executed to test the validity of\n                                       connections.\nconnection-timeout            long     set the maximum number of milliseconds that a client will\n                                       wait for a connection from the pool.\nidle-timeout                  long     this property controls the maximum amount of time (in\n                                       milliseconds) that a connection is allowed to sit idle in\n                                       the pool.\nminimum-idle                  long     the property controls the minimum number of idle connections\n                                       that hikaricp tries to maintain in the pool, including both\n                                       idle and in-use connections.\ninitialization-fail-timeout   long     set the pool initialization failure timeout.\nleak-detection-threshold      long     this property controls the amount of time that a connection\n                                       can be out of the pool before a message is logged indicating\n                                       a possible connection leak.\nmaximum-pool-size             int      the property controls the maximum size that the pool is\n                                       allowed to reach, including both idle and in-use\n                                       connections.\nmax-lifetime                  long     this property controls the maximum lifetime of a connection\n                                       in the pool.\nvalidation-timeout            long     sets the maximum number of milliseconds that the pool will\n                                       wait for a connection to be validated as alive.\n\n\n# queues configuration\n\n\n# kestra.jdbc.queues\n\nkestra queues based on database simulate queues doing long polling. it queries a queues table to detect new message. change these parameters to reduce the latency (but increase load on the database).\n\n * kestra.jdbc.queues.min-poll-interval: is the minimum duration between 2 polls\n * kestra.jdbc.queues.max-poll-interval: is the maximum duration between 2 polls\n * kestra.jdbc.queues.poll-switch-interval: is the duration when no message are received switching from min polling to max polling (ex: one message received, the min-poll-interval is used, if no new message arrived with poll-switch-interval, we switch to max-poll-interval).\n\nkestra:\n  jdbc:\n    queues:\n      min-poll-interval: 100ms\n      max-poll-interval: 1000ms\n      poll-switch-interval: 5s\n\n\n\n\n# kestra.jdbc.cleaner\n\nwe clean the queues table to avoid infinite grow of this table. you can control how often you want this cleaning to happen, and how many times we will keep message in the queue with retention.\n\nkestra:\n  jdbc:\n    cleaner:\n      initial-delay: 1h\n      fixed-delay: 1h\n      retention: 7d\n",charsets:{}},{title:"ElasticSearch configuration",frontmatter:{order:4,meta:[{property:"article:modified_time",content:"2022-06-17T19:21:58.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"ElasticSearch configuration"},{property:"og:description",content:"ElasticSearch configuration | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/administrator-guide/configuration/elasticsearch/"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"ElasticSearch configuration"},{name:"twitter:description",content:"ElasticSearch configuration | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/administrator-guide/configuration/elasticsearch/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/administrator-guide/configuration/elasticsearch/",relativePath:"docs/administrator-guide/configuration/elasticsearch/README.md",key:"v-6e805448",path:"/docs/administrator-guide/configuration/elasticsearch/",headers:[{level:2,title:"kestra.elasticsearch.client.trust-all-ssl",slug:"kestra-elasticsearch-client-trust-all-ssl",normalizedTitle:"kestra.elasticsearch.client.trust-all-ssl",charIndex:553},{level:2,title:"kestra.elasticsearch.defaults.indice-prefix",slug:"kestra-elasticsearch-defaults-indice-prefix",normalizedTitle:"kestra.elasticsearch.defaults.indice-prefix",charIndex:862}],lastUpdated:"6/17/2022, 7:21:58 PM",lastUpdatedTimestamp:1655493718e3,headersStr:"kestra.elasticsearch.client.trust-all-ssl kestra.elasticsearch.defaults.indice-prefix",content:'# ElasticSearch configuration\n\nAnother important configuration is to configure the way Kestra connects to the ElasticSearch cluster.\n\nHere is a minimal configuration example :\n\nkestra:\n  elasticsearch:\n    client:\n      http-hosts: http://localhost:9200\n  repository:\n    type: elasticsearch\n\n\nHere is another example with a secure ElasticSearch cluster with basic authentication.\n\nkestra:\n  elasticsearch:\n    client:\n      http-hosts: "https://localhost:9200"\n      basic-auth:\n        username: "<your-user>"\n        password: "<your-password>"\n\n\n\n# kestra.elasticsearch.client.trust-all-ssl\n\nDefault false, if you enable this options, we trust all certificate during connection. Useful mostly for development server with self signed certificate.\n\nkestra:\n  elasticsearch:\n    client:\n      http-hosts: "https://localhost:9200"\n      trust-all-ssl: true\n\n\n\n# kestra.elasticsearch.defaults.indice-prefix\n\nThis configuration allows you to change the indices prefix. By default, the prefix will be kestra_.\n\nFor example, if you want to share a common Elasticsearch cluster for the multiple instance of Kestra, just add another prefix like this :\n\nkestra:\n  elasticsearch:\n    defaults:\n      topic-prefix: "uat_kestra"\n',normalizedContent:'# elasticsearch configuration\n\nanother important configuration is to configure the way kestra connects to the elasticsearch cluster.\n\nhere is a minimal configuration example :\n\nkestra:\n  elasticsearch:\n    client:\n      http-hosts: http://localhost:9200\n  repository:\n    type: elasticsearch\n\n\nhere is another example with a secure elasticsearch cluster with basic authentication.\n\nkestra:\n  elasticsearch:\n    client:\n      http-hosts: "https://localhost:9200"\n      basic-auth:\n        username: "<your-user>"\n        password: "<your-password>"\n\n\n\n# kestra.elasticsearch.client.trust-all-ssl\n\ndefault false, if you enable this options, we trust all certificate during connection. useful mostly for development server with self signed certificate.\n\nkestra:\n  elasticsearch:\n    client:\n      http-hosts: "https://localhost:9200"\n      trust-all-ssl: true\n\n\n\n# kestra.elasticsearch.defaults.indice-prefix\n\nthis configuration allows you to change the indices prefix. by default, the prefix will be kestra_.\n\nfor example, if you want to share a common elasticsearch cluster for the multiple instance of kestra, just add another prefix like this :\n\nkestra:\n  elasticsearch:\n    defaults:\n      topic-prefix: "uat_kestra"\n',charsets:{}},{title:"Kestra Enterprise Edition",frontmatter:{order:5,meta:[{property:"article:modified_time",content:"2022-06-17T19:21:58.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Kestra Enterprise Edition"},{property:"og:description",content:"Kestra Enterprise Edition | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/administrator-guide/configuration/enterprise-edition/"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Kestra Enterprise Edition"},{name:"twitter:description",content:"Kestra Enterprise Edition | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/administrator-guide/configuration/enterprise-edition/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/administrator-guide/configuration/enterprise-edition/",relativePath:"docs/administrator-guide/configuration/enterprise-edition/README.md",key:"v-3bf54632",path:"/docs/administrator-guide/configuration/enterprise-edition/",lastUpdated:"6/17/2022, 7:21:58 PM",lastUpdatedTimestamp:1655493718e3,headersStr:null,content:"# Kestra Enterprise Edition\n\nKestra Enterprise offers many enhancements over the Open Source edition, adding authentication, security & productivity.\nHere is how to configure them:",normalizedContent:"# kestra enterprise edition\n\nkestra enterprise offers many enhancements over the open source edition, adding authentication, security & productivity.\nhere is how to configure them:",charsets:{}},{title:"Authentications",frontmatter:{order:2,meta:[{property:"article:modified_time",content:"2022-04-11T08:59:15.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Authentications"},{property:"og:description",content:"Authentications | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/administrator-guide/configuration/enterprise-edition/authentifications/"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Authentications"},{name:"twitter:description",content:"Authentications | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/administrator-guide/configuration/enterprise-edition/authentifications/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/administrator-guide/configuration/enterprise-edition/authentifications/",relativePath:"docs/administrator-guide/configuration/enterprise-edition/authentifications/README.md",key:"v-72b722e0",path:"/docs/administrator-guide/configuration/enterprise-edition/authentifications/",lastUpdated:"4/11/2022, 8:59:15 AM",lastUpdatedTimestamp:1649667555e3,headersStr:null,content:'# Authentications\n\nKestra provides 2 authentification methods for the moment:\n\n * Basic Auth: enabled by default\n * OIDC\n\nFirst, you must configure the JWT token security:\nPlease generate a secret that is at least 256 bits and change the configuration like this:\n\nmicronaut:\n  security:\n    token:\n      jwt:\n        signatures:\n          secret:\n            generator:\n              secret: "{{ Your secret here }}"\n\n\nThis secret must be the same on all your webservers instances and will be used to encode the JWT cookie of Kestra.',normalizedContent:'# authentications\n\nkestra provides 2 authentification methods for the moment:\n\n * basic auth: enabled by default\n * oidc\n\nfirst, you must configure the jwt token security:\nplease generate a secret that is at least 256 bits and change the configuration like this:\n\nmicronaut:\n  security:\n    token:\n      jwt:\n        signatures:\n          secret:\n            generator:\n              secret: "{{ your secret here }}"\n\n\nthis secret must be the same on all your webservers instances and will be used to encode the jwt cookie of kestra.',charsets:{}},{title:"Open Id Connect (OIDC)",frontmatter:{meta:[{property:"article:modified_time",content:"2022-04-11T08:58:32.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Open Id Connect (OIDC)"},{property:"og:description",content:"Open Id Connect (OIDC) | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/administrator-guide/configuration/enterprise-edition/authentifications/auths/oidc.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Open Id Connect (OIDC)"},{name:"twitter:description",content:"Open Id Connect (OIDC) | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/administrator-guide/configuration/enterprise-edition/authentifications/auths/oidc.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/administrator-guide/configuration/enterprise-edition/authentifications/auths/oidc.html",relativePath:"docs/administrator-guide/configuration/enterprise-edition/authentifications/auths/oidc.md",key:"v-6c45e6ad",path:"/docs/administrator-guide/configuration/enterprise-edition/authentifications/auths/oidc.html",lastUpdated:"4/11/2022, 8:58:32 AM",lastUpdatedTimestamp:1649667512e3,headersStr:null,content:'# Open Id Connect (OIDC)\n\nTo enable OIDC in the application, you will first have to enable OIDC in micronaut:\n\nmicronaut:\n  security:\n    oauth2:\n      enabled: true\n      clients:\n        google:\n          client-id: "{{ clientId }}"\n          client-secret: "{{ clientSecret }}"\n          openid:\n            issuer: "{{ issueUrl }}"\n\n\nMore information can be found on micronaut oidc configuration\n\n> Google Auth\n\nmicronaut:\n  security:\n    oauth2:\n      enabled: true\n      clients:\n        google:\n          client-id: "{{ clientId }}"\n          client-secret: "{{ clientSecret }}"\n          openid:\n            issuer: \'https://accounts.google.com\'\n\n\n> Microsoft Auth\n\nmicronaut:\n  security:\n    oauth2:\n      enabled: true\n      clients:\n        microsoft:\n          client-id: "{{ clientId }}"\n          client-secret: "{{ clientSecret }}"\n          openid:\n            issuer: \'https://login.microsoftonline.com/common/v2.0/\'\n',normalizedContent:'# open id connect (oidc)\n\nto enable oidc in the application, you will first have to enable oidc in micronaut:\n\nmicronaut:\n  security:\n    oauth2:\n      enabled: true\n      clients:\n        google:\n          client-id: "{{ clientid }}"\n          client-secret: "{{ clientsecret }}"\n          openid:\n            issuer: "{{ issueurl }}"\n\n\nmore information can be found on micronaut oidc configuration\n\n> google auth\n\nmicronaut:\n  security:\n    oauth2:\n      enabled: true\n      clients:\n        google:\n          client-id: "{{ clientid }}"\n          client-secret: "{{ clientsecret }}"\n          openid:\n            issuer: \'https://accounts.google.com\'\n\n\n> microsoft auth\n\nmicronaut:\n  security:\n    oauth2:\n      enabled: true\n      clients:\n        microsoft:\n          client-id: "{{ clientid }}"\n          client-secret: "{{ clientsecret }}"\n          openid:\n            issuer: \'https://login.microsoftonline.com/common/v2.0/\'\n',charsets:{}},{title:"Secret Manager configuration",frontmatter:{order:1,meta:[{property:"article:modified_time",content:"2022-07-04T09:41:54.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Secret Manager configuration"},{property:"og:description",content:"Secret Manager configuration | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/administrator-guide/configuration/enterprise-edition/secrets/"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Secret Manager configuration"},{name:"twitter:description",content:"Secret Manager configuration | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/administrator-guide/configuration/enterprise-edition/secrets/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/administrator-guide/configuration/enterprise-edition/secrets/",relativePath:"docs/administrator-guide/configuration/enterprise-edition/secrets/README.md",key:"v-f088926c",path:"/docs/administrator-guide/configuration/enterprise-edition/secrets/",lastUpdated:"7/4/2022, 9:41:54 AM",lastUpdatedTimestamp:1656927714e3,headersStr:null,content:"# Secret Manager configuration\n\nKestra offers integration with secret manager. Secrets will be stored directly on a secret back-end and workers will read them at runtime only (in memory only).\n\nSecrets can be set using the user interface or via terraform\n\nFor now, we provide integration only using Vault or Elasticsearch, but other options will be added in the future.",normalizedContent:"# secret manager configuration\n\nkestra offers integration with secret manager. secrets will be stored directly on a secret back-end and workers will read them at runtime only (in memory only).\n\nsecrets can be set using the user interface or via terraform\n\nfor now, we provide integration only using vault or elasticsearch, but other options will be added in the future.",charsets:{}},{title:"Elasticsearch configuration",frontmatter:{meta:[{property:"article:modified_time",content:"2022-07-04T09:41:54.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Elasticsearch configuration"},{property:"og:description",content:"Elasticsearch configuration | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/administrator-guide/configuration/enterprise-edition/secrets/elasticsearch/"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Elasticsearch configuration"},{name:"twitter:description",content:"Elasticsearch configuration | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/administrator-guide/configuration/enterprise-edition/secrets/elasticsearch/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/administrator-guide/configuration/enterprise-edition/secrets/elasticsearch/",relativePath:"docs/administrator-guide/configuration/enterprise-edition/secrets/elasticsearch/README.md",key:"v-940495a4",path:"/docs/administrator-guide/configuration/enterprise-edition/secrets/elasticsearch/",lastUpdated:"7/4/2022, 9:41:54 AM",lastUpdatedTimestamp:1656927714e3,headersStr:null,content:'# Elasticsearch configuration\n\nThe integration will store secrets in ElasticSearch. Since ElasticSearch is not a secured secret store, kestra will store the password using AES encryption,, and you will need to provide a secret key in order to encrypt and decrypt secret stored inside elasticsearch. The secret key must be at least a 32 characters password.\n\nkestra:\n  secret:\n    type: elasticsearch\n    elasticsearch:\n      secret: "wvgeQ(!]p[5^/{\')pEs;xcm.LXwAxbyJ"\n',normalizedContent:'# elasticsearch configuration\n\nthe integration will store secrets in elasticsearch. since elasticsearch is not a secured secret store, kestra will store the password using aes encryption,, and you will need to provide a secret key in order to encrypt and decrypt secret stored inside elasticsearch. the secret key must be at least a 32 characters password.\n\nkestra:\n  secret:\n    type: elasticsearch\n    elasticsearch:\n      secret: "wvgeq(!]p[5^/{\')pes;xcm.lxwaxbyj"\n',charsets:{}},{title:"Vault configuration",frontmatter:{meta:[{property:"article:modified_time",content:"2022-04-11T08:58:02.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Vault configuration"},{property:"og:description",content:"Vault configuration | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/administrator-guide/configuration/enterprise-edition/secrets/vault/"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Vault configuration"},{name:"twitter:description",content:"Vault configuration | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/administrator-guide/configuration/enterprise-edition/secrets/vault/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/administrator-guide/configuration/enterprise-edition/secrets/vault/",relativePath:"docs/administrator-guide/configuration/enterprise-edition/secrets/vault/README.md",key:"v-68229fc4",path:"/docs/administrator-guide/configuration/enterprise-edition/secrets/vault/",headers:[{level:2,title:"Authentication",slug:"authentication",normalizedTitle:"authentication",charIndex:277},{level:3,title:"Password authentification",slug:"password-authentification",normalizedTitle:"password authentification",charIndex:296},{level:3,title:"Token authentification",slug:"token-authentification",normalizedTitle:"token authentification",charIndex:540},{level:3,title:"AppRole authentification",slug:"approle-authentification",normalizedTitle:"approle authentification",charIndex:767},{level:2,title:"Others configurations",slug:"others-configurations",normalizedTitle:"others configurations",charIndex:1055},{level:3,title:"kestra.secret.vault.address",slug:"kestra-secret-vault-address",normalizedTitle:"kestra.secret.vault.address",charIndex:1081},{level:3,title:"kestra.secret.vault.namespace",slug:"kestra-secret-vault-namespace",normalizedTitle:"kestra.secret.vault.namespace",charIndex:1185},{level:3,title:"kestra.secret.vault.engine-version",slug:"kestra-secret-vault-engine-version",normalizedTitle:"kestra.secret.vault.engine-version",charIndex:1332},{level:3,title:"kestra.secret.vault.root-engine",slug:"kestra-secret-vault-root-engine",normalizedTitle:"kestra.secret.vault.root-engine",charIndex:1460}],lastUpdated:"4/11/2022, 8:58:02 AM",lastUpdatedTimestamp:1649667482e3,headersStr:"Authentication Password authentification Token authentification AppRole authentification Others configurations kestra.secret.vault.address kestra.secret.vault.namespace kestra.secret.vault.engine-version kestra.secret.vault.root-engine",content:'# Vault configuration\n\nThe integration will store secrets in the vault KV Secrets Engine - Version 2. Kestra authentications must have full read & write policies on this secrets store. You can optionally change root-engine or namespace (if you are using Vault Enterprise).\n\n\n# Authentication\n\n\n# Password authentification\n\nWe can use a Userpass Auth Method using the following configuration:\n\nkestra:\n  secret:\n    type: vault\n    vault:\n      address: "http://localhostt:8200"\n      password:\n        user: john\n        password: foo\n\n\n\n# Token authentification\n\nWe can use a Token Auth Method using the following configuration:\n\nkestra:\n  secret:\n    type: vault\n    vault:\n      address: "http://localhostt:8200"\n      token:\n        token: your-secret-token\n\n\n\n# AppRole authentification\n\nWe can use an AppRole Auth Method using the following configuration:\n\nkestra:\n  secret:\n    type: vault\n    vault:\n      address: "http://localhostt:8200"\n      app-role:\n        path: approle\n        role-id: your-role-id\n        secret-id: your-secret-id\n\n\n\n# Others configurations\n\n\n# kestra.secret.vault.address\n\nThe fully qualified address with scheme & port to your vault instance.\n\n\n# kestra.secret.vault.namespace\n\nOptional. Sets a global namespace to the Vault server instance. Namespace support requires Vault Enterprise Pro\n\n\n# kestra.secret.vault.engine-version\n\nOptional. Sets the KV Secrets Engine version of the Vault server instance. Default is 2\n\n\n# kestra.secret.vault.root-engine\n\nOptional. Sets the KV Secrets Engine of the Vault server instance. Default is secret',normalizedContent:'# vault configuration\n\nthe integration will store secrets in the vault kv secrets engine - version 2. kestra authentications must have full read & write policies on this secrets store. you can optionally change root-engine or namespace (if you are using vault enterprise).\n\n\n# authentication\n\n\n# password authentification\n\nwe can use a userpass auth method using the following configuration:\n\nkestra:\n  secret:\n    type: vault\n    vault:\n      address: "http://localhostt:8200"\n      password:\n        user: john\n        password: foo\n\n\n\n# token authentification\n\nwe can use a token auth method using the following configuration:\n\nkestra:\n  secret:\n    type: vault\n    vault:\n      address: "http://localhostt:8200"\n      token:\n        token: your-secret-token\n\n\n\n# approle authentification\n\nwe can use an approle auth method using the following configuration:\n\nkestra:\n  secret:\n    type: vault\n    vault:\n      address: "http://localhostt:8200"\n      app-role:\n        path: approle\n        role-id: your-role-id\n        secret-id: your-secret-id\n\n\n\n# others configurations\n\n\n# kestra.secret.vault.address\n\nthe fully qualified address with scheme & port to your vault instance.\n\n\n# kestra.secret.vault.namespace\n\noptional. sets a global namespace to the vault server instance. namespace support requires vault enterprise pro\n\n\n# kestra.secret.vault.engine-version\n\noptional. sets the kv secrets engine version of the vault server instance. default is 2\n\n\n# kestra.secret.vault.root-engine\n\noptional. sets the kv secrets engine of the vault server instance. default is secret',charsets:{}},{title:"Worker Isolation configuration",frontmatter:{order:3,meta:[{property:"article:modified_time",content:"2022-04-11T08:58:52.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Worker Isolation configuration"},{property:"og:description",content:"Worker Isolation configuration | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/administrator-guide/configuration/enterprise-edition/workers/"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Worker Isolation configuration"},{name:"twitter:description",content:"Worker Isolation configuration | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/administrator-guide/configuration/enterprise-edition/workers/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/administrator-guide/configuration/enterprise-edition/workers/",relativePath:"docs/administrator-guide/configuration/enterprise-edition/workers/README.md",key:"v-f1ea5734",path:"/docs/administrator-guide/configuration/enterprise-edition/workers/",headers:[{level:2,title:"Java security",slug:"java-security",normalizedTitle:"java security",charIndex:37},{level:3,title:"kestra.ee.java-security.forbidden-paths",slug:"kestra-ee-java-security-forbidden-paths",normalizedTitle:"kestra.ee.java-security.forbidden-paths",charIndex:686},{level:3,title:"kestra.ee.java-security.authorized-class-prefix",slug:"kestra-ee-java-security-authorized-class-prefix",normalizedTitle:"kestra.ee.java-security.authorized-class-prefix",charIndex:908},{level:2,title:"Scripting isolation",slug:"scripting-isolation",normalizedTitle:"scripting isolation",charIndex:1753}],lastUpdated:"4/11/2022, 8:58:52 AM",lastUpdatedTimestamp:1649667532e3,headersStr:"Java security kestra.ee.java-security.forbidden-paths kestra.ee.java-security.authorized-class-prefix Scripting isolation",content:"# Worker Isolation configuration\n\n\n# Java security\n\nBy default, Kestra uses a shared worker in order to handle workloads. This is fine for most use cases, but when you are using a shared Kestra instance between multiple teams, since the worker shares the same file systems, this can allow people to access temporary files created by Kestra with powerful tasks like Groovy, Jython...\n\nYou can use the following to opt-in to real isolation of file systems using advanced Kestra EE java security :\n\nkestra:\n  ee:\n    java-security:\n      enabled: true\n      forbidden-paths:\n        - /etc/\n      authorized-class-prefix:\n        - io.kestra.core.tasks\n        - io.kestra.plugin.gcp\n\n\n\n# kestra.ee.java-security.forbidden-paths\n\nThis is the filepath on the system that the Kestra Worker will be forbidden to read or write at all times. This can be useful to protect Kestra configuration files for example.\n\n\n# kestra.ee.java-security.authorized-class-prefix\n\nThis security prevents access to file system or thread creation (that would prevent us to check file system access). Most of the plugins will never need to have file system access (except on temporary directories that are created & isolated for a task, and are whitelisted by default). Here you can set a list of prefixes (namespace) classes that will be allowed, all others will be refused.\n\nFor example, GCP plugins will need to create a thread in order to reach the GCP api. Since this whole plugin is deemed safe, you can whitelist it.\n\nWARNING\n\nAt this time, all the Kestra official plugins are safe to be whitelisted except all scripts plugins since it allows custom code to be created that can read & write on the file system. This one must not be added to the authorized-class-prefix\n\n\n# Scripting isolation\n\nFor Bash tasks & other script tasks in the core, we advise you to force DOCKER isolation and to configure global cluster taskDefaults:\n\nkestra:\n  tasks:\n    defaults:\n      - type: org.kestra.core.tasks.scripts.Bash\n        forced: true\n        values:\n          dockerOptions:\n            image: ubuntu\n          runner: DOCKER\n\n\nWARNING\n\nYou will need to add all script plugins tasks (like Python & Node) to be sure that no tasks can bypass the docker isolation.",normalizedContent:"# worker isolation configuration\n\n\n# java security\n\nby default, kestra uses a shared worker in order to handle workloads. this is fine for most use cases, but when you are using a shared kestra instance between multiple teams, since the worker shares the same file systems, this can allow people to access temporary files created by kestra with powerful tasks like groovy, jython...\n\nyou can use the following to opt-in to real isolation of file systems using advanced kestra ee java security :\n\nkestra:\n  ee:\n    java-security:\n      enabled: true\n      forbidden-paths:\n        - /etc/\n      authorized-class-prefix:\n        - io.kestra.core.tasks\n        - io.kestra.plugin.gcp\n\n\n\n# kestra.ee.java-security.forbidden-paths\n\nthis is the filepath on the system that the kestra worker will be forbidden to read or write at all times. this can be useful to protect kestra configuration files for example.\n\n\n# kestra.ee.java-security.authorized-class-prefix\n\nthis security prevents access to file system or thread creation (that would prevent us to check file system access). most of the plugins will never need to have file system access (except on temporary directories that are created & isolated for a task, and are whitelisted by default). here you can set a list of prefixes (namespace) classes that will be allowed, all others will be refused.\n\nfor example, gcp plugins will need to create a thread in order to reach the gcp api. since this whole plugin is deemed safe, you can whitelist it.\n\nwarning\n\nat this time, all the kestra official plugins are safe to be whitelisted except all scripts plugins since it allows custom code to be created that can read & write on the file system. this one must not be added to the authorized-class-prefix\n\n\n# scripting isolation\n\nfor bash tasks & other script tasks in the core, we advise you to force docker isolation and to configure global cluster taskdefaults:\n\nkestra:\n  tasks:\n    defaults:\n      - type: org.kestra.core.tasks.scripts.bash\n        forced: true\n        values:\n          dockeroptions:\n            image: ubuntu\n          runner: docker\n\n\nwarning\n\nyou will need to add all script plugins tasks (like python & node) to be sure that no tasks can bypass the docker isolation.",charsets:{}},{title:"Kafka configuration",frontmatter:{order:3,meta:[{property:"article:modified_time",content:"2022-09-26T16:42:27.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Kafka configuration"},{property:"og:description",content:"Kafka configuration | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/administrator-guide/configuration/kafka/"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Kafka configuration"},{name:"twitter:description",content:"Kafka configuration | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/administrator-guide/configuration/kafka/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/administrator-guide/configuration/kafka/",relativePath:"docs/administrator-guide/configuration/kafka/README.md",key:"v-67c3e868",path:"/docs/administrator-guide/configuration/kafka/",headers:[{level:2,title:"kestra.kafka.client.properties",slug:"kestra-kafka-client-properties",normalizedTitle:"kestra.kafka.client.properties",charIndex:26},{level:2,title:"kestra.kafka.defaults.topic",slug:"kestra-kafka-defaults-topic",normalizedTitle:"kestra.kafka.defaults.topic",charIndex:1014},{level:2,title:"kestra.kafka.defaults.[consumer|producer|stream].properties",slug:"kestra-kafka-defaults-consumer-producer-stream-properties",normalizedTitle:"kestra.kafka.defaults.[consumer|producer|stream].properties",charIndex:1294},{level:2,title:"kestra.kafka.defaults.topics",slug:"kestra-kafka-defaults-topics",normalizedTitle:"kestra.kafka.defaults.topics",charIndex:2104},{level:2,title:"kestra.kafka.defaults.consumer-prefix",slug:"kestra-kafka-defaults-consumer-prefix",normalizedTitle:"kestra.kafka.defaults.consumer-prefix",charIndex:2497},{level:2,title:"kestra.kafka.defaults.topic-prefix",slug:"kestra-kafka-defaults-topic-prefix",normalizedTitle:"kestra.kafka.defaults.topic-prefix",charIndex:2845},{level:2,title:"kestra.kafka.client.loggers",slug:"kestra-kafka-client-loggers",normalizedTitle:"kestra.kafka.client.loggers",charIndex:3179}],lastUpdated:"9/26/2022, 4:42:27 PM",lastUpdatedTimestamp:1664210547e3,headersStr:"kestra.kafka.client.properties kestra.kafka.defaults.topic kestra.kafka.defaults.[consumer|producer|stream].properties kestra.kafka.defaults.topics kestra.kafka.defaults.consumer-prefix kestra.kafka.defaults.topic-prefix kestra.kafka.client.loggers",content:'# Kafka configuration\n\n\n# kestra.kafka.client.properties\n\nMost important configuration is to configure the way Kestra connect to Kafka cluster.\n\nHere is a minimal configuration example :\n\nkestra:\n  kafka:\n    client:\n      properties:\n        bootstrap.servers: "localhost:9092"\n  queue:\n    type: kafka\n\n\nHere is another example with a secure kafka cluster hosted by aiven:\n\nkestra:\n  kafka:\n    client:\n      properties:\n        bootstrap.servers: "your-host.aivencloud.com:12835"\n        security.protocol: "SSL"\n        ssl.endpoint.identification.algorithm: ""\n        ssl.key.password: "<your-password>"\n        ssl.keystore.location: "/etc/ssl/private/keystore.p12"\n        ssl.keystore.password: "<your-password>"\n        ssl.keystore.type: "PKCS12"\n        ssl.truststore.location: "/etc/ssl/private/truststore.jks"\n        ssl.truststore.password: "<your-password>"\n\n  queue:\n    type: kafka\n\n\nproperties is the standard java kafka client properties, more details can be found on Kafka Documentation\n\n\n# kestra.kafka.defaults.topic\n\nBy default, Kestra automatically create all the topics needed, you can change partition & replication factor of these topics :\n\n * kestra.kafka.defaults.topic.partitions: (default 16)\n * kestra.kafka.defaults.topic.replication-factor: (default 1)\n\n\n# kestra.kafka.defaults.[consumer|producer|stream].properties\n\nYou can change the default properties of Kafka client from Kestra. These allow you to change compression, max request, etc...\n\nHere is the default configuration :\n\nkestra:\n  kafka:\n    defaults:\n      consumer:\n        properties:\n          isolation.level: "read_committed"\n          auto.offset.reset: "earliest"\n          enable.auto.commit: "false"\n\n      producer:\n        properties:\n          acks: "all"\n          compression.type: "lz4"\n          max.request.size: "10485760"\n\n      stream:\n        properties:\n          processing.guarantee: "exactly_once"\n          replication.factor: "${kestra.kafka.defaults.topic.replication-factor}"\n          acks: "all"\n          compression.type: "lz4"\n          max.request.size: "10485760"\n\n\n\n# kestra.kafka.defaults.topics\n\nAll the topic used by Kestra are declared with default name & properties. You can change the default values:\n\n * kestra.kafka.defaults.topics.{{topic}}.name: Change the name of this topic.\n * kestra.kafka.defaults.topics.{{topic}}.properties: Change the default properties used during topic automatic creation.\n\nYou can see default configuration on this file\n\n\n# kestra.kafka.defaults.consumer-prefix\n\nThis configuration allow you to change the consumer-group prefix. By default, the prefix will be kestra.\n\nFor example, if you want to share a common Kafka cluster for the multiple instance of Kestra, just add another prefix like this :\n\nkestra:\n  kafka:\n    defaults:\n      consumer-prefix: "uat_kestra"\n\n\n\n# kestra.kafka.defaults.topic-prefix\n\nThis configuration allow you to change the topic prefix. By default, the prefix will be kestra_.\n\nFor example, if you want to share a common Kafka cluster for the multiple instance of Kestra, just add another prefix like this :\n\nkestra:\n  kafka:\n    defaults:\n      topic-prefix: "uat_kestra"\n\n\n\n# kestra.kafka.client.loggers\n\nThis configuration allow you to enable log for all messages from or to Kafka. Use this one to debug all the messages consume, produce or both from Kafka.\n\nWARNING\n\nThis configuration have a huge performance impact, using regexp & serialization for most of the message\n\nkestra:\n  kafka:\n    client:\n      loggers:\n        - level: INFO # mandatory: ERROR, WARN, INFO, DEBUG, TRACE, the logger must be configured at least at this level for class io.kestra.runner.kafka.AbstractInterceptor\n          type: PRODUCER # optional: CONSUMER or PRODUCER\n          topic-regexp: "kestra_(executions|workertaskresult)" # optional: a regexp validating the topic\n          key-regexp: .*parallel.* # optional: a regexp validating the key\n          value-regexp: .*parallel.* # optional: a regexp validating the json full body\n',normalizedContent:'# kafka configuration\n\n\n# kestra.kafka.client.properties\n\nmost important configuration is to configure the way kestra connect to kafka cluster.\n\nhere is a minimal configuration example :\n\nkestra:\n  kafka:\n    client:\n      properties:\n        bootstrap.servers: "localhost:9092"\n  queue:\n    type: kafka\n\n\nhere is another example with a secure kafka cluster hosted by aiven:\n\nkestra:\n  kafka:\n    client:\n      properties:\n        bootstrap.servers: "your-host.aivencloud.com:12835"\n        security.protocol: "ssl"\n        ssl.endpoint.identification.algorithm: ""\n        ssl.key.password: "<your-password>"\n        ssl.keystore.location: "/etc/ssl/private/keystore.p12"\n        ssl.keystore.password: "<your-password>"\n        ssl.keystore.type: "pkcs12"\n        ssl.truststore.location: "/etc/ssl/private/truststore.jks"\n        ssl.truststore.password: "<your-password>"\n\n  queue:\n    type: kafka\n\n\nproperties is the standard java kafka client properties, more details can be found on kafka documentation\n\n\n# kestra.kafka.defaults.topic\n\nby default, kestra automatically create all the topics needed, you can change partition & replication factor of these topics :\n\n * kestra.kafka.defaults.topic.partitions: (default 16)\n * kestra.kafka.defaults.topic.replication-factor: (default 1)\n\n\n# kestra.kafka.defaults.[consumer|producer|stream].properties\n\nyou can change the default properties of kafka client from kestra. these allow you to change compression, max request, etc...\n\nhere is the default configuration :\n\nkestra:\n  kafka:\n    defaults:\n      consumer:\n        properties:\n          isolation.level: "read_committed"\n          auto.offset.reset: "earliest"\n          enable.auto.commit: "false"\n\n      producer:\n        properties:\n          acks: "all"\n          compression.type: "lz4"\n          max.request.size: "10485760"\n\n      stream:\n        properties:\n          processing.guarantee: "exactly_once"\n          replication.factor: "${kestra.kafka.defaults.topic.replication-factor}"\n          acks: "all"\n          compression.type: "lz4"\n          max.request.size: "10485760"\n\n\n\n# kestra.kafka.defaults.topics\n\nall the topic used by kestra are declared with default name & properties. you can change the default values:\n\n * kestra.kafka.defaults.topics.{{topic}}.name: change the name of this topic.\n * kestra.kafka.defaults.topics.{{topic}}.properties: change the default properties used during topic automatic creation.\n\nyou can see default configuration on this file\n\n\n# kestra.kafka.defaults.consumer-prefix\n\nthis configuration allow you to change the consumer-group prefix. by default, the prefix will be kestra.\n\nfor example, if you want to share a common kafka cluster for the multiple instance of kestra, just add another prefix like this :\n\nkestra:\n  kafka:\n    defaults:\n      consumer-prefix: "uat_kestra"\n\n\n\n# kestra.kafka.defaults.topic-prefix\n\nthis configuration allow you to change the topic prefix. by default, the prefix will be kestra_.\n\nfor example, if you want to share a common kafka cluster for the multiple instance of kestra, just add another prefix like this :\n\nkestra:\n  kafka:\n    defaults:\n      topic-prefix: "uat_kestra"\n\n\n\n# kestra.kafka.client.loggers\n\nthis configuration allow you to enable log for all messages from or to kafka. use this one to debug all the messages consume, produce or both from kafka.\n\nwarning\n\nthis configuration have a huge performance impact, using regexp & serialization for most of the message\n\nkestra:\n  kafka:\n    client:\n      loggers:\n        - level: info # mandatory: error, warn, info, debug, trace, the logger must be configured at least at this level for class io.kestra.runner.kafka.abstractinterceptor\n          type: producer # optional: consumer or producer\n          topic-regexp: "kestra_(executions|workertaskresult)" # optional: a regexp validating the topic\n          key-regexp: .*parallel.* # optional: a regexp validating the key\n          value-regexp: .*parallel.* # optional: a regexp validating the json full body\n',charsets:{cjk:!0}},{title:"Micronaut configuration",frontmatter:{order:6,meta:[{property:"article:modified_time",content:"2022-08-22T12:15:04.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Micronaut configuration"},{property:"og:description",content:"Micronaut configuration | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/administrator-guide/configuration/micronaut/"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Micronaut configuration"},{name:"twitter:description",content:"Micronaut configuration | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/administrator-guide/configuration/micronaut/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/administrator-guide/configuration/micronaut/",relativePath:"docs/administrator-guide/configuration/micronaut/README.md",key:"v-636e3ee8",path:"/docs/administrator-guide/configuration/micronaut/",headers:[{level:2,title:"Configure log Level",slug:"configure-log-level",normalizedTitle:"configure log level",charIndex:273},{level:2,title:"Configure port and scheme",slug:"configure-port-and-scheme",normalizedTitle:"configure port and scheme",charIndex:489},{level:2,title:"Configure the timeout or max uploaded file size",slug:"configure-the-timeout-or-max-uploaded-file-size",normalizedTitle:"configure the timeout or max uploaded file size",charIndex:675},{level:2,title:"Changing base path",slug:"changing-base-path",normalizedTitle:"changing base path",charIndex:1024},{level:2,title:"Changing host resolution",slug:"changing-host-resolution",normalizedTitle:"changing host resolution",charIndex:1159}],lastUpdated:"8/22/2022, 12:15:04 PM",lastUpdatedTimestamp:1661170504e3,headersStr:"Configure log Level Configure port and scheme Configure the timeout or max uploaded file size Changing base path Changing host resolution",content:'# Micronaut configuration\n\nSince Kestra is a Java app based on micronaut, you can configure micronaut to fit your needs.\nWe will not explain all the configuration values possible, these are available here. However, we will provide some tips on the most useful options:\n\n\n# Configure log Level\n\nlogger:\n  levels:\n    io.kestra.runner: TRACE\n    org.elasticsearch.client: TRACE\n    org.elasticsearch.client.sniffer: TRACE\n    org.apache.kafka: DEBUG\n    io.netty.handler.logging: TRACE\n\n\n\n# Configure port and scheme\n\nmicronaut:\n  server:\n    port: 8086\n  ssl:\n    enabled: true\n    keyStore:\n      path: classpath:server.p12\n      password: mypassword\n      type: PKCS12\n\n\n\n# Configure the timeout or max uploaded file size\n\nA lot of configurations affect these, here is the default configuration:\n\nmicronaut:\n  server:\n    max-request-size: 10GB\n    multipart:\n      max-file-size: 10GB\n      disk: true\n    read-idle-timeout: 60m\n    write-idle-timeout: 60m\n    idle-timeout: 60m\n    netty:\n      max-chunk-size: 10MB\n\n\n\n# Changing base path\n\nIf behind a reverse proxy, you can change the base path:\n\nmicronaut:\n  server:\n    context-path: "kestra-prd"\n\n\n\n# Changing host resolution\n\nIf behind a reverse proxy, you can change host resolution (http / https / domain name) providing the header sent by your reverse proxy:\n\nmicronaut:\n  server:\n    host-resolution:\n      host-header: Host\n      protocol-header: X-Forwarded-Proto\n',normalizedContent:'# micronaut configuration\n\nsince kestra is a java app based on micronaut, you can configure micronaut to fit your needs.\nwe will not explain all the configuration values possible, these are available here. however, we will provide some tips on the most useful options:\n\n\n# configure log level\n\nlogger:\n  levels:\n    io.kestra.runner: trace\n    org.elasticsearch.client: trace\n    org.elasticsearch.client.sniffer: trace\n    org.apache.kafka: debug\n    io.netty.handler.logging: trace\n\n\n\n# configure port and scheme\n\nmicronaut:\n  server:\n    port: 8086\n  ssl:\n    enabled: true\n    keystore:\n      path: classpath:server.p12\n      password: mypassword\n      type: pkcs12\n\n\n\n# configure the timeout or max uploaded file size\n\na lot of configurations affect these, here is the default configuration:\n\nmicronaut:\n  server:\n    max-request-size: 10gb\n    multipart:\n      max-file-size: 10gb\n      disk: true\n    read-idle-timeout: 60m\n    write-idle-timeout: 60m\n    idle-timeout: 60m\n    netty:\n      max-chunk-size: 10mb\n\n\n\n# changing base path\n\nif behind a reverse proxy, you can change the base path:\n\nmicronaut:\n  server:\n    context-path: "kestra-prd"\n\n\n\n# changing host resolution\n\nif behind a reverse proxy, you can change host resolution (http / https / domain name) providing the header sent by your reverse proxy:\n\nmicronaut:\n  server:\n    host-resolution:\n      host-header: host\n      protocol-header: x-forwarded-proto\n',charsets:{}},{title:"Others Kestra configuration",frontmatter:{order:7,meta:[{property:"article:modified_time",content:"2022-06-28T12:16:07.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Others Kestra configuration"},{property:"og:description",content:"Others Kestra configuration | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/administrator-guide/configuration/others/"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Others Kestra configuration"},{name:"twitter:description",content:"Others Kestra configuration | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/administrator-guide/configuration/others/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/administrator-guide/configuration/others/",relativePath:"docs/administrator-guide/configuration/others/README.md",key:"v-3ef378d0",path:"/docs/administrator-guide/configuration/others/",headers:[{level:2,title:"Url configuration",slug:"url-configuration",normalizedTitle:"url configuration",charIndex:34},{level:2,title:"Plugins configuration",slug:"plugins-configuration",normalizedTitle:"plugins configuration",charIndex:280},{level:2,title:"Docker configurations",slug:"docker-configurations",normalizedTitle:"docker configurations",charIndex:760},{level:3,title:"kestra.tasks.scripts.docker.volume-enabled",slug:"kestra-tasks-scripts-docker-volume-enabled",normalizedTitle:"kestra.tasks.scripts.docker.volume-enabled",charIndex:786},{level:2,title:"Variables configurations",slug:"variables-configurations",normalizedTitle:"variables configurations",charIndex:1014},{level:3,title:"kestra.variables.env-vars-prefix",slug:"kestra-variables-env-vars-prefix",normalizedTitle:"kestra.variables.env-vars-prefix",charIndex:1043},{level:3,title:"kestra.variables.globals",slug:"kestra-variables-globals",normalizedTitle:"kestra.variables.globals",charIndex:1374},{level:3,title:"kestra.variables.disable-handlebars",slug:"kestra-variables-disable-handlebars",normalizedTitle:"kestra.variables.disable-handlebars",charIndex:1743},{level:3,title:"kestra.variables.cache-enabled",slug:"kestra-variables-cache-enabled",normalizedTitle:"kestra.variables.cache-enabled",charIndex:1866},{level:3,title:"kestra.variables.cache-size",slug:"kestra-variables-cache-size",normalizedTitle:"kestra.variables.cache-size",charIndex:2077},{level:3,title:"kestra.tasks.defaults",slug:"kestra-tasks-defaults",normalizedTitle:"kestra.tasks.defaults",charIndex:2410},{level:2,title:"Metrics configuration",slug:"metrics-configuration",normalizedTitle:"metrics configuration",charIndex:3007},{level:2,title:"Servers configuration",slug:"servers-configuration",normalizedTitle:"servers configuration",charIndex:3122},{level:3,title:"kestra.server.access-log: Access Log configuration",slug:"kestra-server-access-log-access-log-configuration",normalizedTitle:"kestra.server.access-log: access log configuration",charIndex:3148},{level:3,title:"kestra.configurations.delete-files-on-start: Delete configurations files",slug:"kestra-configurations-delete-files-on-start-delete-configurations-files",normalizedTitle:"kestra.configurations.delete-files-on-start: delete configurations files",charIndex:3938},{level:2,title:"Endpoint configuration",slug:"endpoint-configuration",normalizedTitle:"endpoint configuration",charIndex:4341},{level:2,title:"Temporary storage configuration",slug:"temporary-storage-configuration",normalizedTitle:"temporary storage configuration",charIndex:4647},{level:2,title:"JVM configuration",slug:"jvm-configuration",normalizedTitle:"jvm configuration",charIndex:4898},{level:3,title:"user.timezone: Timezone",slug:"user-timezone-timezone",normalizedTitle:"user.timezone: timezone",charIndex:5135},{level:2,title:"Anonymous usage report",slug:"anonymous-usage-report",normalizedTitle:"anonymous usage report",charIndex:5509},{level:3,title:"Collected Data",slug:"collected-data",normalizedTitle:"collected data",charIndex:6046},{level:2,title:"Webserver configuration",slug:"webserver-configuration",normalizedTitle:"webserver configuration",charIndex:6623},{level:3,title:"kestra.webserver.google-analytics: Google Analytics ID",slug:"kestra-webserver-google-analytics-google-analytics-id",normalizedTitle:"kestra.webserver.google-analytics: google analytics id",charIndex:6651},{level:3,title:"kestra.webserver.html-head: Append some head tags on the webserver application",slug:"kestra-webserver-html-head-append-some-head-tags-on-the-webserver-application",normalizedTitle:"kestra.webserver.html-head: append some head tags on the webserver application",charIndex:6794}],lastUpdated:"6/28/2022, 12:16:07 PM",lastUpdatedTimestamp:1656418567e3,headersStr:"Url configuration Plugins configuration Docker configurations kestra.tasks.scripts.docker.volume-enabled Variables configurations kestra.variables.env-vars-prefix kestra.variables.globals kestra.variables.disable-handlebars kestra.variables.cache-enabled kestra.variables.cache-size kestra.tasks.defaults Metrics configuration Servers configuration kestra.server.access-log: Access Log configuration kestra.configurations.delete-files-on-start: Delete configurations files Endpoint configuration Temporary storage configuration JVM configuration user.timezone: Timezone Anonymous usage report Collected Data Webserver configuration kestra.webserver.google-analytics: Google Analytics ID kestra.webserver.html-head: Append some head tags on the webserver application",content:'# Others Kestra configuration\n\n\n# Url configuration\n\nSome notification services require a URL configuration defined in order to add some links directly to the Web UI. Use a full uri here with a trailing / (without ui or api).\n\nkestra:\n  url: https://www.my-host.com/kestra/\n\n\n\n\n# Plugins configuration\n\nConfiguration of maven repositories used for the command plugins install.\nDefaults are necessary for Kestra and plugins, but you can add your own custom maven registries in order to download your own plugins with this command.\n\nkestra:\n  plugins:\n    repositories:\n      central:\n        url: https://repo.maven.apache.org/maven2/\n      jcenter:\n        url: https://jcenter.bintray.com/\n      kestra:\n        url: https://dl.bintray.com/kestra/maven\n\n\n\n\n# Docker configurations\n\n\n# kestra.tasks.scripts.docker.volume-enabled\n\nVolumes mount are disabled by default for security reasons, you can enabled it with this configurations:\n\nkestra:\n  tasks:\n    scripts:\n      docker:\n        volume-enabled: true\n\n\n\n# Variables configurations\n\n\n# kestra.variables.env-vars-prefix\n\nKestra provides a way to use environment variables in your flow.\nBy default, we only get environment variables that start with KESTRA_.\n\nThese variables will be accessible on flow with {{ env.your_env }}\n\nFor example, env vars with the name KESTRA_MY_ENV will be usable with {{ envs.my_env }}\n\n\n# kestra.variables.globals\n\nYou can also provide globals variables from the configuration files that will be accessible in all your flows.\nMostly these will be used to declare the environment on your instance, such as global datasets, for example\n\nkestra:\n  variables:\n    globals:\n      env: dev\n\n\n\nThese variables will be accessible on flows with {{ globals.env }}\n\n\n# kestra.variables.disable-handlebars\n\nBy default, deprecated handlebars is disabled, it can be enabled with true value.\n\n\n# kestra.variables.cache-enabled\n\nThe rendering of template variables can be cpu intensive, and by default we enable a cache of "templates". You can disable it, but it\'s really recommended keeping it enabled.\n\n\n# kestra.variables.cache-size\n\nThe rendering of template variables cache is an LRU cache (keep most used) and will be in memory (default 1000). You can change the size of the template cache (in number of template), take care that more this number will be high, the more memory server will use, maybe for not so many use templates.\n\n\n# kestra.tasks.defaults\n\nYou can also provide from configuration files tasks defaults that will be applied on each tasks on your cluster if not defined on flow or tasks.\nMostly it will allow you to be sure a value was defined at a default value for these task types.\n\nkestra:\n  tasks:\n    defaults:\n    - type: io.kestra.core.tasks.debugs.Echo\n      level: ERROR\n\n\nThese variables will be accessible on flow with {{ globals.env }}\n\nkestra:\n  tasks:\n    defaults:\n    - type: io.kestra.core.tasks.debugs.Echo\n      level: ERROR\n\n\nThese variables will be accessible on flow with {{ globals.env }}\n\n\n# Metrics configuration\n\n * kestra.metrics.prefix: Change the prefix for all metrics for Kestra(default: kestra)\n\n\n# Servers configuration\n\n\n# kestra.server.access-log: Access Log configuration\n\n * kestra.server.access-log.enabled: Enabled access log from webserver (default true)\n * kestra.server.access-log.name: Logger name (default io.kestra.webserver.access)\n * kestra.server.access-log.format: Access log format (default [Date: {}] [Duration: {} ms] [Method: {}] [Url: {}] [Status: {}] [Length: {}] [Ip: {}] [Port: {}])\n * kestra.server.access-log.filters: list of regexp that will log, use .* to enable all (default - ".*\\\\[Url: /api/.*")\n\nHere is the default values:\n\nkestra:\n  server:\n    access-log:\n      enabled: true\n      name: io.kestra.webserver.access\n      format: "[Date: {}] [Duration: {} ms] [Method: {}] [Url: {}] [Status: {}] [Length: {}] [Ip: {}] [Port: {}]"\n      filters:\n        - ".*\\\\[Url: /api/.*"\n\n\n\n# kestra.configurations.delete-files-on-start: Delete configurations files\n\nThis setting allows you to delete all configurations just after the server startup. It prevents the ability to read configurations files (that may contain your secrets) from a Bash task for example. The server will keep this value on memory and won\'t be accessible from tasks. Values are either true or false (default false)\n\n\n# Endpoint configuration\n\nEndpoint configuration can be done with micronaut configuration from micronaut.\nYou can also secure all endpoints with a basic auth authentification using this additional configuration:\n\nendpoints:\n  all:\n    basic-auth:\n      username: your-user\n      password: your-password\n\n\n\n# Temporary storage configuration\n\nKestra writes temporary files during task processing. By default files will be created on /tmp, but you can change the location with this configuration:\n\nkestra:\n  tasks:\n    tmp-dir:\n      path: /home/kestra/tmp\n\n\n\n# JVM configuration\n\nAll JVM options can be passed as environmental vars named JAVA_OPTS. You can use it to change all JVM options available, such as memory, encoding, etc...\n\nExample:\n\nexport JAVA_OPTS="-Duser.timezone=Europe/Paris"\n\n\n\n# user.timezone: Timezone\n\nBy default, Kestra will handle all dates using your system\'s timezone. You can change the timezone with JVM options.\n\nChanging the timezone will mostly affect:\n\n * scheduler: by default, all schedule dates are UTC, changing the java timezone will allow you to schedule the flow in your timezone.\n * log: that will be displayed on your timezone.\n\n\n# Anonymous usage report\n\nUnderstanding how you use Kestra is very important to us: it helps us improve the solution in many ways.\nFor this very reason, the kestra.anonymous-usage-report.enabled option is mandatory: we want you to take time to consider whether you wish to share anonymous data with us, so we can benefit from your experience and use cases.\n\n * kestra.anonymous-usage-report.enabled: (default true)\n * kestra.anonymous-usage-report.initial-delay: (default 5m)\n * kestra.anonymous-usage-report.fixed-delay: (default 1h)\n\n\n# Collected Data\n\nThe collected data can be found here. We collect only anonymous data that allows us to understand how you used Kestra. The data collected includes:\n\n * host data: cpu, ram, os, jvm and a fingerprint of the machine\n * plugins data: the list of plugins installed and the current version\n * flow data: the namespace count, flow count, the task type and the trigger type used.\n * execution data: the execution & taskruns count for last 2 days with count and duration grouped by status\n * common data: the server type, version, timezone, env, start time and url\n\n\n# Webserver configuration\n\n\n# kestra.webserver.google-analytics: Google Analytics ID\n\nAdd Google Analytics tracking ID (ex: UA-12345678-1) and report all page tracking.\n\n\n# kestra.webserver.html-head: Append some head tags on the webserver application\n\nMostly useful for injecting css or javascript to customize a web application.\n\nFor example, you can add a red banner on production environments:\n\nkestra:\n  webserver:\n    html-head: |\n      <style type="text/css">\n        .v-sidebar-menu .logo:after {\n          background: var(--danger);\n          display: block;\n          content: "Local";\n          position: relative;\n          text-transform: uppercase;\n          bottom: -65px;\n          text-align: center;\n          color: var(--white-always);\n        }\n      </style>\n',normalizedContent:'# others kestra configuration\n\n\n# url configuration\n\nsome notification services require a url configuration defined in order to add some links directly to the web ui. use a full uri here with a trailing / (without ui or api).\n\nkestra:\n  url: https://www.my-host.com/kestra/\n\n\n\n\n# plugins configuration\n\nconfiguration of maven repositories used for the command plugins install.\ndefaults are necessary for kestra and plugins, but you can add your own custom maven registries in order to download your own plugins with this command.\n\nkestra:\n  plugins:\n    repositories:\n      central:\n        url: https://repo.maven.apache.org/maven2/\n      jcenter:\n        url: https://jcenter.bintray.com/\n      kestra:\n        url: https://dl.bintray.com/kestra/maven\n\n\n\n\n# docker configurations\n\n\n# kestra.tasks.scripts.docker.volume-enabled\n\nvolumes mount are disabled by default for security reasons, you can enabled it with this configurations:\n\nkestra:\n  tasks:\n    scripts:\n      docker:\n        volume-enabled: true\n\n\n\n# variables configurations\n\n\n# kestra.variables.env-vars-prefix\n\nkestra provides a way to use environment variables in your flow.\nby default, we only get environment variables that start with kestra_.\n\nthese variables will be accessible on flow with {{ env.your_env }}\n\nfor example, env vars with the name kestra_my_env will be usable with {{ envs.my_env }}\n\n\n# kestra.variables.globals\n\nyou can also provide globals variables from the configuration files that will be accessible in all your flows.\nmostly these will be used to declare the environment on your instance, such as global datasets, for example\n\nkestra:\n  variables:\n    globals:\n      env: dev\n\n\n\nthese variables will be accessible on flows with {{ globals.env }}\n\n\n# kestra.variables.disable-handlebars\n\nby default, deprecated handlebars is disabled, it can be enabled with true value.\n\n\n# kestra.variables.cache-enabled\n\nthe rendering of template variables can be cpu intensive, and by default we enable a cache of "templates". you can disable it, but it\'s really recommended keeping it enabled.\n\n\n# kestra.variables.cache-size\n\nthe rendering of template variables cache is an lru cache (keep most used) and will be in memory (default 1000). you can change the size of the template cache (in number of template), take care that more this number will be high, the more memory server will use, maybe for not so many use templates.\n\n\n# kestra.tasks.defaults\n\nyou can also provide from configuration files tasks defaults that will be applied on each tasks on your cluster if not defined on flow or tasks.\nmostly it will allow you to be sure a value was defined at a default value for these task types.\n\nkestra:\n  tasks:\n    defaults:\n    - type: io.kestra.core.tasks.debugs.echo\n      level: error\n\n\nthese variables will be accessible on flow with {{ globals.env }}\n\nkestra:\n  tasks:\n    defaults:\n    - type: io.kestra.core.tasks.debugs.echo\n      level: error\n\n\nthese variables will be accessible on flow with {{ globals.env }}\n\n\n# metrics configuration\n\n * kestra.metrics.prefix: change the prefix for all metrics for kestra(default: kestra)\n\n\n# servers configuration\n\n\n# kestra.server.access-log: access log configuration\n\n * kestra.server.access-log.enabled: enabled access log from webserver (default true)\n * kestra.server.access-log.name: logger name (default io.kestra.webserver.access)\n * kestra.server.access-log.format: access log format (default [date: {}] [duration: {} ms] [method: {}] [url: {}] [status: {}] [length: {}] [ip: {}] [port: {}])\n * kestra.server.access-log.filters: list of regexp that will log, use .* to enable all (default - ".*\\\\[url: /api/.*")\n\nhere is the default values:\n\nkestra:\n  server:\n    access-log:\n      enabled: true\n      name: io.kestra.webserver.access\n      format: "[date: {}] [duration: {} ms] [method: {}] [url: {}] [status: {}] [length: {}] [ip: {}] [port: {}]"\n      filters:\n        - ".*\\\\[url: /api/.*"\n\n\n\n# kestra.configurations.delete-files-on-start: delete configurations files\n\nthis setting allows you to delete all configurations just after the server startup. it prevents the ability to read configurations files (that may contain your secrets) from a bash task for example. the server will keep this value on memory and won\'t be accessible from tasks. values are either true or false (default false)\n\n\n# endpoint configuration\n\nendpoint configuration can be done with micronaut configuration from micronaut.\nyou can also secure all endpoints with a basic auth authentification using this additional configuration:\n\nendpoints:\n  all:\n    basic-auth:\n      username: your-user\n      password: your-password\n\n\n\n# temporary storage configuration\n\nkestra writes temporary files during task processing. by default files will be created on /tmp, but you can change the location with this configuration:\n\nkestra:\n  tasks:\n    tmp-dir:\n      path: /home/kestra/tmp\n\n\n\n# jvm configuration\n\nall jvm options can be passed as environmental vars named java_opts. you can use it to change all jvm options available, such as memory, encoding, etc...\n\nexample:\n\nexport java_opts="-duser.timezone=europe/paris"\n\n\n\n# user.timezone: timezone\n\nby default, kestra will handle all dates using your system\'s timezone. you can change the timezone with jvm options.\n\nchanging the timezone will mostly affect:\n\n * scheduler: by default, all schedule dates are utc, changing the java timezone will allow you to schedule the flow in your timezone.\n * log: that will be displayed on your timezone.\n\n\n# anonymous usage report\n\nunderstanding how you use kestra is very important to us: it helps us improve the solution in many ways.\nfor this very reason, the kestra.anonymous-usage-report.enabled option is mandatory: we want you to take time to consider whether you wish to share anonymous data with us, so we can benefit from your experience and use cases.\n\n * kestra.anonymous-usage-report.enabled: (default true)\n * kestra.anonymous-usage-report.initial-delay: (default 5m)\n * kestra.anonymous-usage-report.fixed-delay: (default 1h)\n\n\n# collected data\n\nthe collected data can be found here. we collect only anonymous data that allows us to understand how you used kestra. the data collected includes:\n\n * host data: cpu, ram, os, jvm and a fingerprint of the machine\n * plugins data: the list of plugins installed and the current version\n * flow data: the namespace count, flow count, the task type and the trigger type used.\n * execution data: the execution & taskruns count for last 2 days with count and duration grouped by status\n * common data: the server type, version, timezone, env, start time and url\n\n\n# webserver configuration\n\n\n# kestra.webserver.google-analytics: google analytics id\n\nadd google analytics tracking id (ex: ua-12345678-1) and report all page tracking.\n\n\n# kestra.webserver.html-head: append some head tags on the webserver application\n\nmostly useful for injecting css or javascript to customize a web application.\n\nfor example, you can add a red banner on production environments:\n\nkestra:\n  webserver:\n    html-head: |\n      <style type="text/css">\n        .v-sidebar-menu .logo:after {\n          background: var(--danger);\n          display: block;\n          content: "local";\n          position: relative;\n          text-transform: uppercase;\n          bottom: -65px;\n          text-align: center;\n          color: var(--white-always);\n        }\n      </style>\n',charsets:{cjk:!0}},{title:"Storage configuration",frontmatter:{order:2,meta:[{property:"article:modified_time",content:"2022-09-07T22:20:24.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Storage configuration"},{property:"og:description",content:"Storage configuration | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/administrator-guide/configuration/storage/"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Storage configuration"},{name:"twitter:description",content:"Storage configuration | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/administrator-guide/configuration/storage/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/administrator-guide/configuration/storage/",relativePath:"docs/administrator-guide/configuration/storage/README.md",key:"v-f99b39f0",path:"/docs/administrator-guide/configuration/storage/",headers:[{level:2,title:"GCS",slug:"gcs",normalizedTitle:"gcs",charIndex:231},{level:2,title:"Minio",slug:"minio",normalizedTitle:"minio",charIndex:271},{level:2,title:"Azure",slug:"azure",normalizedTitle:"azure",charIndex:342}],lastUpdated:"9/7/2022, 10:20:24 PM",lastUpdatedTimestamp:1662589224e3,headersStr:"GCS Minio Azure",content:'# Storage configuration\n\nKestra needs internal storage in order to store file proceeds (uploaded files & between tasks).\n\nThe default storage is Local storage (not production ready).\n\nAvailable storage options include:\n\n * Storage GCS for Google Cloud Storage\n * Storage Minio compatible with AWS S3 and all others S3 like storage\n * Storage Azure for Azure Blob Storage\n\n\n# GCS\n\nBecause you need to be sure to have the GCS storage plugins installed, you can install it with the following Kestra command:\n./kestra plugins install io.kestra.storage.gcs:storage-gcs:LATEST, it will download the plugins jar on kestra plugins directory.\n\nAfter, you need to enable the storage with this configuration:\n\n\nkestra:\n  storage:\n    type: gcs\n    gcs:\n      bucket: "<your-bucket-name>"\n      service-account: "<service-account key as json or use default credentials>"\n      project-id: "<project-id or use default projectId>"\n\n\nKestra will use the default service account \'GCP service account\', meaning that it will :\n\n * use the service account defined on the cluster for GKE\n * use the service account defined on the VM for GCE .\n\nYou can also provide the environmental variable GOOGLE_APPLICATION_CREDENTIALS with a path to a json GCP service account key.\n\nMore details can be found here.\n\n\n# Minio\n\nBecause you need to be sure to have the Minio storage plugins installed, you can install it with the following Kestra command :\n./kestra plugins install io.kestra.storage.minio:storage-minio:LATEST, it will download the plugins jar on kestra plugins directory.\n\nAfter, you need to enable the storage with this configuration:\n\n\nkestra:\n  storage:\n    type: minio\n    minio:\n      endpoint: "<your-endpoint>"\n      port: "<your-port>"\n      accessKey: "<your-accessKey>"\n      secretKey: "<your-secretKey>"\n      region: "<your-region>"\n      secure: "<your-secure>"\n      bucket: "<your-bucket>"\n\n\n\n# Azure\n\nBecause you need to be sure to have the Azure storage plugins installed, you can install it with the following Kestra command :\n./kestra plugins install io.kestra.storage.azure:storage-azure:LATEST, it will download the plugins jar on kestra plugins directory.\n\nAfter, you need to enable the storage with this configuration (adapt depending on authentication method):\n\n\nkestra:\n  storage:\n    type: azure\n    azure:\n      endpoint: "https://unittestkt.blob.core.windows.net"\n      container: storage\n      connection-string: "<connection-string>"\n      shared-key-account-name: "<shared-key-account-name>"\n      shared-key-account-access-key: "<shared-key-account-access-key>"\n      sas-token: "<sas-token>"\n\n',normalizedContent:'# storage configuration\n\nkestra needs internal storage in order to store file proceeds (uploaded files & between tasks).\n\nthe default storage is local storage (not production ready).\n\navailable storage options include:\n\n * storage gcs for google cloud storage\n * storage minio compatible with aws s3 and all others s3 like storage\n * storage azure for azure blob storage\n\n\n# gcs\n\nbecause you need to be sure to have the gcs storage plugins installed, you can install it with the following kestra command:\n./kestra plugins install io.kestra.storage.gcs:storage-gcs:latest, it will download the plugins jar on kestra plugins directory.\n\nafter, you need to enable the storage with this configuration:\n\n\nkestra:\n  storage:\n    type: gcs\n    gcs:\n      bucket: "<your-bucket-name>"\n      service-account: "<service-account key as json or use default credentials>"\n      project-id: "<project-id or use default projectid>"\n\n\nkestra will use the default service account \'gcp service account\', meaning that it will :\n\n * use the service account defined on the cluster for gke\n * use the service account defined on the vm for gce .\n\nyou can also provide the environmental variable google_application_credentials with a path to a json gcp service account key.\n\nmore details can be found here.\n\n\n# minio\n\nbecause you need to be sure to have the minio storage plugins installed, you can install it with the following kestra command :\n./kestra plugins install io.kestra.storage.minio:storage-minio:latest, it will download the plugins jar on kestra plugins directory.\n\nafter, you need to enable the storage with this configuration:\n\n\nkestra:\n  storage:\n    type: minio\n    minio:\n      endpoint: "<your-endpoint>"\n      port: "<your-port>"\n      accesskey: "<your-accesskey>"\n      secretkey: "<your-secretkey>"\n      region: "<your-region>"\n      secure: "<your-secure>"\n      bucket: "<your-bucket>"\n\n\n\n# azure\n\nbecause you need to be sure to have the azure storage plugins installed, you can install it with the following kestra command :\n./kestra plugins install io.kestra.storage.azure:storage-azure:latest, it will download the plugins jar on kestra plugins directory.\n\nafter, you need to enable the storage with this configuration (adapt depending on authentication method):\n\n\nkestra:\n  storage:\n    type: azure\n    azure:\n      endpoint: "https://unittestkt.blob.core.windows.net"\n      container: storage\n      connection-string: "<connection-string>"\n      shared-key-account-name: "<shared-key-account-name>"\n      shared-key-account-access-key: "<shared-key-account-access-key>"\n      sas-token: "<sas-token>"\n\n',charsets:{}},{title:"Installation guide",frontmatter:{order:1,meta:[{property:"article:modified_time",content:"2020-11-09T20:39:04.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Installation guide"},{property:"og:description",content:"Installation guide | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/administrator-guide/deployment/"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Installation guide"},{name:"twitter:description",content:"Installation guide | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/administrator-guide/deployment/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/administrator-guide/deployment/",relativePath:"docs/administrator-guide/deployment/README.md",key:"v-55acd5fe",path:"/docs/administrator-guide/deployment/",lastUpdated:"11/9/2020, 8:39:04 PM",lastUpdatedTimestamp:1604954344e3,headersStr:null,content:"# Installation guide\n\nWe provide different way to deploy kestra, the recommended way are :\n\n * Docker for a local installation\n * Kubernetes for a production installation\n\nMore information :",normalizedContent:"# installation guide\n\nwe provide different way to deploy kestra, the recommended way are :\n\n * docker for a local installation\n * kubernetes for a production installation\n\nmore information :",charsets:{}},{title:"Deployment with Docker",frontmatter:{order:1,meta:[{property:"article:modified_time",content:"2022-04-18T13:46:56.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Deployment with Docker"},{property:"og:description",content:"Deployment with Docker | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/administrator-guide/deployment/docker/"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Deployment with Docker"},{name:"twitter:description",content:"Deployment with Docker | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/administrator-guide/deployment/docker/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/administrator-guide/deployment/docker/",relativePath:"docs/administrator-guide/deployment/docker/README.md",key:"v-6842f008",path:"/docs/administrator-guide/deployment/docker/",headers:[{level:2,title:"Before you begin",slug:"before-you-begin",normalizedTitle:"before you begin",charIndex:158},{level:2,title:"Launch Kestra",slug:"launch-kestra",normalizedTitle:"launch kestra",charIndex:248},{level:2,title:"Docker Image",slug:"docker-image",normalizedTitle:"docker image",charIndex:659},{level:3,title:"Use official image",slug:"use-official-image",normalizedTitle:"use official image",charIndex:676},{level:3,title:"Create a new image with more binaries",slug:"create-a-new-image-with-more-binaries",normalizedTitle:"create a new image with more binaries",charIndex:1331},{level:3,title:"Create a new image with plugins",slug:"create-a-new-image-with-plugins",normalizedTitle:"create a new image with plugins",charIndex:1711},{level:3,title:"Docker image tag",slug:"docker-image-tag",normalizedTitle:"docker image tag",charIndex:2115}],lastUpdated:"4/18/2022, 1:46:56 PM",lastUpdatedTimestamp:1650289616e3,headersStr:"Before you begin Launch Kestra Docker Image Use official image Create a new image with more binaries Create a new image with plugins Docker image tag",content:"# Deployment with Docker\n\nThe quickest way to install Kestra is to use Docker Compose. This will start a non-production Kestra with all the dependencies.\n\n\n# Before you begin\n\nMake sure you have already installed :\n\n * Docker\n * Docker Compose\n\n\n# Launch Kestra\n\n * Download the compose file here\n * Run docker-compose up\n * Open http://localhost:8080 in your browser\n\nThis will start all the dependencies with a preconfigured Kestra that is connected to everything!\n\nKestra will start a Standalone server (all the different servers in one JVM).\nThis is clearly not meant for production workloads, but is certainly sufficient to test on a local computer.\n\n\n# Docker Image\n\n\n# Use official image\n\nThe Kestra docker image is available in Docker hub.\n\nWe provide 2 images :\n\n * kestra/kestra:latest\n * kestra/kestra:latest-full\n\nThe docker image is based on openjdk:11-jre-slim docker image.\n\n# kestra/kestra:latest\n\nThis image :\n\n * does't contain any kestra plugins.\n * does't contain a lot of binaries to work with your Bash task.\n * does't contain some binaries for Python task or Node task.\n\n# kestra/kestra:latest-full\n\nThis image contains all the kestra plugins and all the binaries for Python task or Node task.\nTake care that this image will always contain the last version of plugins that can have some breaking change.\n\n\n# Create a new image with more binaries\n\nIf the base or full image does not contain binaries, you can easily create a new one with the below DockerFile:\n\nARG IMAGE_TAG=latest\nFROM kestra/kestra:$IMAGE_TAG\n\nRUN mkdir -p /app/plugins && \\\n  apt-get update -y && \\\n  apt-get install -y --no-install-recommends golang && \\\n  apt-get clean && rm -rf /var/lib/apt/lists/* /var/tmp/*\n\n\n\n# Create a new image with plugins\n\nBy default, the Kestra base docker image does not contain any plugins, but you can create a new image with all the plugins you want:\n\nARG IMAGE_TAG=latest\nFROM kestra/kestra:$IMAGE_TAG\n\nRUN /app/kestra plugins install \\\n  io.kestra.plugin.notifications:task-notifications:LATEST \\\n  io.kestra.storage.gcs:storage-gcs:LATEST \\\n  io.kestra.plugin.gcp:task-gcp:LATEST \n\n\n\n# Docker image tag\n\nWe provide 3 tags for a docker image :\n\n * latest: this will contain the latest default image along with its full variant latest-full.\n * release: an image with a preview of the next release along with its full variant release-full.\n * develop: an image based on the develop branch that will change every day and contain all unstable features we are working on, along with its full variant develop-full.",normalizedContent:"# deployment with docker\n\nthe quickest way to install kestra is to use docker compose. this will start a non-production kestra with all the dependencies.\n\n\n# before you begin\n\nmake sure you have already installed :\n\n * docker\n * docker compose\n\n\n# launch kestra\n\n * download the compose file here\n * run docker-compose up\n * open http://localhost:8080 in your browser\n\nthis will start all the dependencies with a preconfigured kestra that is connected to everything!\n\nkestra will start a standalone server (all the different servers in one jvm).\nthis is clearly not meant for production workloads, but is certainly sufficient to test on a local computer.\n\n\n# docker image\n\n\n# use official image\n\nthe kestra docker image is available in docker hub.\n\nwe provide 2 images :\n\n * kestra/kestra:latest\n * kestra/kestra:latest-full\n\nthe docker image is based on openjdk:11-jre-slim docker image.\n\n# kestra/kestra:latest\n\nthis image :\n\n * does't contain any kestra plugins.\n * does't contain a lot of binaries to work with your bash task.\n * does't contain some binaries for python task or node task.\n\n# kestra/kestra:latest-full\n\nthis image contains all the kestra plugins and all the binaries for python task or node task.\ntake care that this image will always contain the last version of plugins that can have some breaking change.\n\n\n# create a new image with more binaries\n\nif the base or full image does not contain binaries, you can easily create a new one with the below dockerfile:\n\narg image_tag=latest\nfrom kestra/kestra:$image_tag\n\nrun mkdir -p /app/plugins && \\\n  apt-get update -y && \\\n  apt-get install -y --no-install-recommends golang && \\\n  apt-get clean && rm -rf /var/lib/apt/lists/* /var/tmp/*\n\n\n\n# create a new image with plugins\n\nby default, the kestra base docker image does not contain any plugins, but you can create a new image with all the plugins you want:\n\narg image_tag=latest\nfrom kestra/kestra:$image_tag\n\nrun /app/kestra plugins install \\\n  io.kestra.plugin.notifications:task-notifications:latest \\\n  io.kestra.storage.gcs:storage-gcs:latest \\\n  io.kestra.plugin.gcp:task-gcp:latest \n\n\n\n# docker image tag\n\nwe provide 3 tags for a docker image :\n\n * latest: this will contain the latest default image along with its full variant latest-full.\n * release: an image with a preview of the next release along with its full variant release-full.\n * develop: an image based on the develop branch that will change every day and contain all unstable features we are working on, along with its full variant develop-full.",charsets:{}},{title:"Deployment on Kubernetes",frontmatter:{order:2,meta:[{property:"article:modified_time",content:"2022-09-29T18:31:53.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Deployment on Kubernetes"},{property:"og:description",content:"Deployment on Kubernetes | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/administrator-guide/deployment/kubernetes/"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Deployment on Kubernetes"},{name:"twitter:description",content:"Deployment on Kubernetes | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/administrator-guide/deployment/kubernetes/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/administrator-guide/deployment/kubernetes/",relativePath:"docs/administrator-guide/deployment/kubernetes/README.md",key:"v-7854a970",path:"/docs/administrator-guide/deployment/kubernetes/",headers:[{level:2,title:"Quick Start",slug:"quick-start",normalizedTitle:"quick start",charIndex:260},{level:2,title:"Details",slug:"details",normalizedTitle:"details",charIndex:343}],lastUpdated:"9/29/2022, 6:31:53 PM",lastUpdatedTimestamp:1664476313e3,headersStr:"Quick Start Details",content:"# Deployment on Kubernetes\n\nThe recommended deployment environment for production workloads is Kubernetes.\nWe provide a Helm Chart in order to deploy your cluster.\n\n * The chart repository is available here.\n * The source code of the charts is found here.\n\n\n# Quick Start\n\nhelm repo add kestra https://helm.kestra.io/\nhelm install kestra\n\n\n\n# Details\n\nYou can change the default behaviour and configuring your cluster changing the defaults values.\n\nBy default, charts will only deploy one kestra standalone service (all kestra servers in only one pod) with only 1 replica.\n\nYou can also deploy each server independently , using these values:\n\nkestra:\n  deployments:\n    webserver:\n      enabled: true\n    executor:\n      enabled: true\n    indexer:\n      enabled: true\n    scheduler:\n      enabled: true\n    worker:\n      enabled: true\n    standalone:\n      enabled: true\n\n\nThe charts could also deploy all needed services:\n\n * Zookeeper using kafka.enabled: true\n * Kafka cluster using kafka.enabled: true\n * Elasticsearch cluster using elasticsearch.enabled: true\n * Minio standalone using minio.enabled: true\n * Postgres using postgresql.enabled: true\n\nBy default, we enable minio & postgres to have a working version.\n\nWARNING\n\nAll services (kafka, elasticsearch, zookeeper, minio, postgresql) are deployed using unsecured configurations (no authentification, no tls, ...). When installing for a production environnement, you need to secure all these services and adapt all service configurations to be production ready.\n\nThe most important values to adapt are the configuration files, including the following values:\n\n * configuration: used to apply the entire configuration files from Kestra\n * secrets: this will be merged with configuration but kept as secret on your k8s cluster.",normalizedContent:"# deployment on kubernetes\n\nthe recommended deployment environment for production workloads is kubernetes.\nwe provide a helm chart in order to deploy your cluster.\n\n * the chart repository is available here.\n * the source code of the charts is found here.\n\n\n# quick start\n\nhelm repo add kestra https://helm.kestra.io/\nhelm install kestra\n\n\n\n# details\n\nyou can change the default behaviour and configuring your cluster changing the defaults values.\n\nby default, charts will only deploy one kestra standalone service (all kestra servers in only one pod) with only 1 replica.\n\nyou can also deploy each server independently , using these values:\n\nkestra:\n  deployments:\n    webserver:\n      enabled: true\n    executor:\n      enabled: true\n    indexer:\n      enabled: true\n    scheduler:\n      enabled: true\n    worker:\n      enabled: true\n    standalone:\n      enabled: true\n\n\nthe charts could also deploy all needed services:\n\n * zookeeper using kafka.enabled: true\n * kafka cluster using kafka.enabled: true\n * elasticsearch cluster using elasticsearch.enabled: true\n * minio standalone using minio.enabled: true\n * postgres using postgresql.enabled: true\n\nby default, we enable minio & postgres to have a working version.\n\nwarning\n\nall services (kafka, elasticsearch, zookeeper, minio, postgresql) are deployed using unsecured configurations (no authentification, no tls, ...). when installing for a production environnement, you need to secure all these services and adapt all service configurations to be production ready.\n\nthe most important values to adapt are the configuration files, including the following values:\n\n * configuration: used to apply the entire configuration files from kestra\n * secrets: this will be merged with configuration but kept as secret on your k8s cluster.",charsets:{}},{title:"Manual deployment",frontmatter:{order:3,meta:[{property:"article:modified_time",content:"2022-04-10T20:44:41.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Manual deployment"},{property:"og:description",content:"Manual deployment | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/administrator-guide/deployment/manual/"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Manual deployment"},{name:"twitter:description",content:"Manual deployment | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/administrator-guide/deployment/manual/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/administrator-guide/deployment/manual/",relativePath:"docs/administrator-guide/deployment/manual/README.md",key:"v-026cac48",path:"/docs/administrator-guide/deployment/manual/",lastUpdated:"4/10/2022, 8:44:41 PM",lastUpdatedTimestamp:1649623481e3,headersStr:null,content:"# Manual deployment\n\nIf you want to deploy Kestra for your self (within your own environment) , we provide a Standalone jar that allows deployment on any environment you want.\n\nThe latest jar can be downloaded here.\n\nThis is an executable jar:\n\n * For Linux & MacOs, we run it ./kestra-VERSION\n * For Windows, rename the file ./kestra-VERSION to ./kestra-VERSION.bat and call it from CMD.",normalizedContent:"# manual deployment\n\nif you want to deploy kestra for your self (within your own environment) , we provide a standalone jar that allows deployment on any environment you want.\n\nthe latest jar can be downloaded here.\n\nthis is an executable jar:\n\n * for linux & macos, we run it ./kestra-version\n * for windows, rename the file ./kestra-version to ./kestra-version.bat and call it from cmd.",charsets:{}},{title:"Monitoring & Alerting",frontmatter:{order:4,meta:[{property:"article:modified_time",content:"2022-07-06T15:52:30.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Monitoring & Alerting"},{property:"og:description",content:"Monitoring & Alerting | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/administrator-guide/monitoring/"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Monitoring & Alerting"},{name:"twitter:description",content:"Monitoring & Alerting | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/administrator-guide/monitoring/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/administrator-guide/monitoring/",relativePath:"docs/administrator-guide/monitoring/README.md",key:"v-db882e10",path:"/docs/administrator-guide/monitoring/",headers:[{level:2,title:"Prometheus",slug:"prometheus",normalizedTitle:"prometheus",charIndex:255},{level:3,title:"Kestra metrics",slug:"kestra-metrics",normalizedTitle:"kestra metrics",charIndex:359},{level:3,title:"Others metrics",slug:"others-metrics",normalizedTitle:"others metrics",charIndex:2164},{level:2,title:"Grafana or Kibana",slug:"grafana-or-kibana",normalizedTitle:"grafana or kibana",charIndex:2365},{level:2,title:"Kestra endpoint",slug:"kestra-endpoint",normalizedTitle:"kestra endpoint",charIndex:2621},{level:2,title:"Others micronaut default endpoint",slug:"others-micronaut-default-endpoint",normalizedTitle:"others micronaut default endpoint",charIndex:3127}],lastUpdated:"7/6/2022, 3:52:30 PM",lastUpdatedTimestamp:165712275e4,headersStr:"Prometheus Kestra metrics Others metrics Grafana or Kibana Kestra endpoint Others micronaut default endpoint",content:"# Monitoring & Alerting\n\nKestra will deploy a monitoring endpoint on port 8081 by default. (You can change this port with\nconfiguration options endpoints:.all.port)\n\nThis monitoring endpoint will expose some helpful routes in order to monitor Kestra:\n\n\n# Prometheus\n\nIf you have any Prometheus monitoring systems, Kestra exposes this endpoint /prometheus\n\n\n# Kestra metrics\n\nKestra expose some internal metrics allowing to add some alert. Each one declare many timeseries with tags allowing\nto track at least namespace & flow. But also some others tags depending on available tasks.\n\nAlso each task type can expose custom metrics that will be exposed on Prometheus.\n\n# Worker\n\nMETRICS                 TYPE      DESCRIPTION\nworker.running.count    GAUGE     Task actually running\nworker.started.count    COUNTER   Count of tasks started\nworker.retryed.count    COUNTER   Count of tasks retried\nworker.ended.count      COUNTER   Count of tasks ended\nworker.ended.duration   TIMER     Duration of tasks ended\n\n# Executor\n\nMETRICS                            TYPE      DESCRIPTION\nexecutor.taskrun.next.count        COUNTER   Count of tasks found\nexecutor.taskrun.ended.count       COUNTER   Count of tasks ended\nexecutor.taskrun.ended.duration    TOMER     Duration of tasks ended\nexecutor.workertaskresult.count    COUNTER   Count of task result send by worker\nexecutor.execution.started.count   COUNTER   Count of executions started\nexecutor.execution.end.count       COUNTER   Count of executions ended\nexecutor.execution.duration        TIMER     Duration of executions ended\n\n# Indexer\n\nMETRICS            TYPE       DESCRIPTION\nindexer.count      COUNTER    Count of indexation sent to repository\nindexer.duration   DURATION   Duration of indexation sent to repository\n\n# Scheduler\n\nMETRICS                            TYPE      DESCRIPTION\nscheduler.trigger.count            COUNTER   Count of trigger found\nscheduler.evaluate.running.count   COUNTER   Evaluation of trigger actually running (aka: number of\n                                             thread used by scheduler)\nscheduler.evaluate.duration        TIMER     Duration of evaluation of trigger\n\n\n# Others metrics\n\nIt will also expose all internal metrics from :\n\n * Micronaut\n * Kafka\n * Thread pool on the application\n * ...\n\nSome additional information can be found on Micronaut documentation\n\n\n# Grafana or Kibana\n\nSince Elasticsearch is used to store all executions & metrics, you can easily make a dashboard with\nGrafana or Kibana in order to follow your Kestra instance.\n\nIn a near future, we will provide a template dashboard as a quick start.\n\n\n# Kestra endpoint\n\nKestra expose some internal endpoint on the management port (8081 by default), depending on servers:\n\n * /worker: will expose all current running task on this worker\n * /scheduler: will expose all current scheduled flows on this scheduler with next date\n * /kafkastreams: will expose all kafka stream state and aggregated store lag.\n * /kafkastreams/{clientId}/lag: will expose details lag for a clientId\n * /kafkastreams/{clientId}/metrics: will expose details metrics for a clientId\n\n\n# Others micronaut default endpoint\n\nSince Kestra is based on Micronaut, the default micronaut endpoint\nis enabled by default on port 8081 :\n\n * /info Info Endpoint with git status informations.\n * /health Health Endpoint usable for add an external heathcheck on application.\n * /loggers Loggers Endpoint allowing changing logger level during runtime.\n * /metrics Metrics Endpoint metrics in json format.\n * /env Env Endpoint to debug configuration files.\n\nYou can disabled some endpoint following micronaut configuration above.",normalizedContent:"# monitoring & alerting\n\nkestra will deploy a monitoring endpoint on port 8081 by default. (you can change this port with\nconfiguration options endpoints:.all.port)\n\nthis monitoring endpoint will expose some helpful routes in order to monitor kestra:\n\n\n# prometheus\n\nif you have any prometheus monitoring systems, kestra exposes this endpoint /prometheus\n\n\n# kestra metrics\n\nkestra expose some internal metrics allowing to add some alert. each one declare many timeseries with tags allowing\nto track at least namespace & flow. but also some others tags depending on available tasks.\n\nalso each task type can expose custom metrics that will be exposed on prometheus.\n\n# worker\n\nmetrics                 type      description\nworker.running.count    gauge     task actually running\nworker.started.count    counter   count of tasks started\nworker.retryed.count    counter   count of tasks retried\nworker.ended.count      counter   count of tasks ended\nworker.ended.duration   timer     duration of tasks ended\n\n# executor\n\nmetrics                            type      description\nexecutor.taskrun.next.count        counter   count of tasks found\nexecutor.taskrun.ended.count       counter   count of tasks ended\nexecutor.taskrun.ended.duration    tomer     duration of tasks ended\nexecutor.workertaskresult.count    counter   count of task result send by worker\nexecutor.execution.started.count   counter   count of executions started\nexecutor.execution.end.count       counter   count of executions ended\nexecutor.execution.duration        timer     duration of executions ended\n\n# indexer\n\nmetrics            type       description\nindexer.count      counter    count of indexation sent to repository\nindexer.duration   duration   duration of indexation sent to repository\n\n# scheduler\n\nmetrics                            type      description\nscheduler.trigger.count            counter   count of trigger found\nscheduler.evaluate.running.count   counter   evaluation of trigger actually running (aka: number of\n                                             thread used by scheduler)\nscheduler.evaluate.duration        timer     duration of evaluation of trigger\n\n\n# others metrics\n\nit will also expose all internal metrics from :\n\n * micronaut\n * kafka\n * thread pool on the application\n * ...\n\nsome additional information can be found on micronaut documentation\n\n\n# grafana or kibana\n\nsince elasticsearch is used to store all executions & metrics, you can easily make a dashboard with\ngrafana or kibana in order to follow your kestra instance.\n\nin a near future, we will provide a template dashboard as a quick start.\n\n\n# kestra endpoint\n\nkestra expose some internal endpoint on the management port (8081 by default), depending on servers:\n\n * /worker: will expose all current running task on this worker\n * /scheduler: will expose all current scheduled flows on this scheduler with next date\n * /kafkastreams: will expose all kafka stream state and aggregated store lag.\n * /kafkastreams/{clientid}/lag: will expose details lag for a clientid\n * /kafkastreams/{clientid}/metrics: will expose details metrics for a clientid\n\n\n# others micronaut default endpoint\n\nsince kestra is based on micronaut, the default micronaut endpoint\nis enabled by default on port 8081 :\n\n * /info info endpoint with git status informations.\n * /health health endpoint usable for add an external heathcheck on application.\n * /loggers loggers endpoint allowing changing logger level during runtime.\n * /metrics metrics endpoint metrics in json format.\n * /env env endpoint to debug configuration files.\n\nyou can disabled some endpoint following micronaut configuration above.",charsets:{}},{title:"Debugging techniques",frontmatter:{order:4,meta:[{property:"article:modified_time",content:"2022-07-06T15:52:30.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Debugging techniques"},{property:"og:description",content:"Debugging techniques | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/administrator-guide/monitoring/debug.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Debugging techniques"},{name:"twitter:description",content:"Debugging techniques | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/administrator-guide/monitoring/debug.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/administrator-guide/monitoring/debug.html",relativePath:"docs/administrator-guide/monitoring/debug.md",key:"v-69b05e43",path:"/docs/administrator-guide/monitoring/debug.html",headers:[{level:2,title:"Enable verbose log",slug:"enable-verbose-log",normalizedTitle:"enable verbose log",charIndex:130}],lastUpdated:"7/6/2022, 3:52:30 PM",lastUpdatedTimestamp:165712275e4,headersStr:"Enable verbose log",content:'# Debugging techniques\n\nWithout any order, find debugging techniques that administrator can used to understand theirs issues:\n\n\n# Enable verbose log\n\nKestra had some endpoints and one for allowing change logging verbosity at run time.\n\nInside the container (or in local if standalone jar is used), just send this command to enable very verbose logging:\n\ncurl -i -X POST -H "Content-Type: application/json" \\\n  -d \'{ "configuredLevel": "TRACE" }\' \\\n  http://localhost:8081/loggers/io.kestra\n\n\nAlernatively, you can change logging on configuration files:\n\nlogger:\n  levels:\n    io.kestra.core.runners: TRACE\n\n\n * ',normalizedContent:'# debugging techniques\n\nwithout any order, find debugging techniques that administrator can used to understand theirs issues:\n\n\n# enable verbose log\n\nkestra had some endpoints and one for allowing change logging verbosity at run time.\n\ninside the container (or in local if standalone jar is used), just send this command to enable very verbose logging:\n\ncurl -i -x post -h "content-type: application/json" \\\n  -d \'{ "configuredlevel": "trace" }\' \\\n  http://localhost:8081/loggers/io.kestra\n\n\nalernatively, you can change logging on configuration files:\n\nlogger:\n  levels:\n    io.kestra.core.runners: trace\n\n\n * ',charsets:{}},{title:"Kestra servers",frontmatter:{order:2,meta:[{property:"article:modified_time",content:"2022-06-20T15:13:20.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Kestra servers"},{property:"og:description",content:"Kestra servers | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/administrator-guide/servers/"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Kestra servers"},{name:"twitter:description",content:"Kestra servers | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/administrator-guide/servers/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/administrator-guide/servers/",relativePath:"docs/administrator-guide/servers/README.md",key:"v-12b44ec8",path:"/docs/administrator-guide/servers/",headers:[{level:2,title:"Separate servers",slug:"separate-servers",normalizedTitle:"separate servers",charIndex:121},{level:3,title:"Kestra Executor",slug:"kestra-executor",normalizedTitle:"kestra executor",charIndex:142},{level:3,title:"Kestra Indexer",slug:"kestra-indexer",normalizedTitle:"kestra indexer",charIndex:235},{level:3,title:"Kestra Scheduler",slug:"kestra-scheduler",normalizedTitle:"kestra scheduler",charIndex:326},{level:3,title:"Kestra Worker",slug:"kestra-worker",normalizedTitle:"kestra worker",charIndex:421},{level:3,title:"Kestra Webserver",slug:"kestra-webserver",normalizedTitle:"kestra webserver",charIndex:547},{level:2,title:"Kestra standalone, all servers in one process",slug:"kestra-standalone-all-servers-in-one-process",normalizedTitle:"kestra standalone, all servers in one process",charIndex:641},{level:2,title:"Kestra local, development servers and no dependencies",slug:"kestra-local-development-servers-and-no-dependencies",normalizedTitle:"kestra local, development servers and no dependencies",charIndex:1136},{level:2,title:"Options for all server command",slug:"options-for-all-server-command",normalizedTitle:"options for all server command",charIndex:1742},{level:3,title:"Log Level",slug:"log-level",normalizedTitle:"log level",charIndex:1777},{level:3,title:"Internal Log",slug:"internal-log",normalizedTitle:"internal log",charIndex:2018},{level:3,title:"Configuration Files",slug:"configuration-files",normalizedTitle:"configuration files",charIndex:2147},{level:3,title:"Plugins directory",slug:"plugins-directory",normalizedTitle:"plugins directory",charIndex:2283},{level:3,title:"Server port",slug:"server-port",normalizedTitle:"server port",charIndex:2408}],lastUpdated:"6/20/2022, 3:13:20 PM",lastUpdatedTimestamp:1655738e6,headersStr:"Separate servers Kestra Executor Kestra Indexer Kestra Scheduler Kestra Worker Kestra Webserver Kestra standalone, all servers in one process Kestra local, development servers and no dependencies Options for all server command Log Level Internal Log Configuration Files Plugins directory Server port",content:"# Kestra servers\n\nKestra leverages five different servers in order to provide a fully working Kestra implementation.\n\n\n# Separate servers\n\n\n# Kestra Executor\n\n./kestra server executor\n\nOptions:\n\nNo special options for this server.\n\n\n# Kestra Indexer\n\n./kestra server indexer\n\nOptions:\n\nNo special options for this server.\n\n\n# Kestra Scheduler\n\n./kestra server scheduler\n\nOptions:\n\nNo special options for this server.\n\n\n# Kestra Worker\n\n./kestra server worker\n\nOptions:\n\n * -thread: the number of threads that can handle tasks at the same time\n\n\n# Kestra Webserver\n\n./kestra server Webserver\n\nOptions:\n\nNo special options for this server\n\n\n# Kestra standalone, all servers in one process\n\n./kestra server standalone\n\nThis server is a special server, since it will contain all the servers in one jvm.\nBut this works well for development or medium-sized environments.\n\nOptions:\n\n * -f or --flow-path: the path to a directory will flow file as yaml, these files will be loaded on the repository at the startup.\n * --worker-thread: the number of worker thread, by default, the worker embedded will start 1 thread per cpu core available.\n\n\n# Kestra local, development servers and no dependencies\n\n./kestra server local\n\nThis server is a local development server, it will contain all the servers in one jvm, and use a local database (h2), and local storage, perfect to start a development server. All the data will be saved in a data directory on the current working directory.\n\nOptions:\n\n * -f or --flow-path: the path to a directory will flow file as yaml, these files will be loaded on the repository at the startup.\n * --worker-thread: the number of worker thread, by default, the worker embedded will start 1 thread per cpu core available.\n\n\n# Options for all server command\n\n\n# Log Level\n\nLog level can be changed with 2 options :\n\n * --log-level: possible value: [TRACE, DEBUG, INFO, WARN, ERROR], default: INFO\n * --verbose or -v for DEBUG, -vv for TRACE\n\nThis option affects global log levels for all flows only\n\n\n# Internal Log\n\n--internal-log: Kestra hides internal logs by default, use this option to enable these logs (High verbosity !)\n\n\n# Configuration Files\n\n-c or --config: you can change the location of kestra configuration files, the default is ~/.kestra/config.yml\n\n\n# Plugins directory\n\n-p or --plugins: Path to plugins directory, default is plugins directory near your kestra executable.\n\n\n# Server port\n\n--server-port: The server port, default is 8080.",normalizedContent:"# kestra servers\n\nkestra leverages five different servers in order to provide a fully working kestra implementation.\n\n\n# separate servers\n\n\n# kestra executor\n\n./kestra server executor\n\noptions:\n\nno special options for this server.\n\n\n# kestra indexer\n\n./kestra server indexer\n\noptions:\n\nno special options for this server.\n\n\n# kestra scheduler\n\n./kestra server scheduler\n\noptions:\n\nno special options for this server.\n\n\n# kestra worker\n\n./kestra server worker\n\noptions:\n\n * -thread: the number of threads that can handle tasks at the same time\n\n\n# kestra webserver\n\n./kestra server webserver\n\noptions:\n\nno special options for this server\n\n\n# kestra standalone, all servers in one process\n\n./kestra server standalone\n\nthis server is a special server, since it will contain all the servers in one jvm.\nbut this works well for development or medium-sized environments.\n\noptions:\n\n * -f or --flow-path: the path to a directory will flow file as yaml, these files will be loaded on the repository at the startup.\n * --worker-thread: the number of worker thread, by default, the worker embedded will start 1 thread per cpu core available.\n\n\n# kestra local, development servers and no dependencies\n\n./kestra server local\n\nthis server is a local development server, it will contain all the servers in one jvm, and use a local database (h2), and local storage, perfect to start a development server. all the data will be saved in a data directory on the current working directory.\n\noptions:\n\n * -f or --flow-path: the path to a directory will flow file as yaml, these files will be loaded on the repository at the startup.\n * --worker-thread: the number of worker thread, by default, the worker embedded will start 1 thread per cpu core available.\n\n\n# options for all server command\n\n\n# log level\n\nlog level can be changed with 2 options :\n\n * --log-level: possible value: [trace, debug, info, warn, error], default: info\n * --verbose or -v for debug, -vv for trace\n\nthis option affects global log levels for all flows only\n\n\n# internal log\n\n--internal-log: kestra hides internal logs by default, use this option to enable these logs (high verbosity !)\n\n\n# configuration files\n\n-c or --config: you can change the location of kestra configuration files, the default is ~/.kestra/config.yml\n\n\n# plugins directory\n\n-p or --plugins: path to plugins directory, default is plugins directory near your kestra executable.\n\n\n# server port\n\n--server-port: the server port, default is 8080.",charsets:{}},{title:"Api Guide",frontmatter:{title:"Api Guide",order:8,rightBar:!1,editLink:!1,meta:[{property:"article:modified_time",content:"2022-05-04T06:03:21.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Api Guide"},{property:"og:description",content:"Api Guide | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/api-guide/"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Api Guide"},{name:"twitter:description",content:"Api Guide | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/api-guide/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/api-guide/",relativePath:"docs/api-guide/README.md",key:"v-10c3a470",path:"/docs/api-guide/",lastUpdated:"5/4/2022, 6:03:21 AM",lastUpdatedTimestamp:1651644201e3,headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"Architecture",frontmatter:{order:3,meta:[{property:"article:modified_time",content:"2022-06-19T19:09:53.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Architecture"},{property:"og:description",content:"Architecture | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/architecture/"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Architecture"},{name:"twitter:description",content:"Architecture | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/architecture/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/architecture/",relativePath:"docs/architecture/README.md",key:"v-be84a670",path:"/docs/architecture/",headers:[{level:2,title:"Dependencies",slug:"dependencies",normalizedTitle:"dependencies",charIndex:19},{level:3,title:"Medium-sized environment",slug:"medium-sized-environment",normalizedTitle:"medium-sized environment",charIndex:355},{level:3,title:"High Availability and No Single Point of Failure",slug:"high-availability-and-no-single-point-of-failure",normalizedTitle:"high availability and no single point of failure",charIndex:712},{level:3,title:"Storage",slug:"storage",normalizedTitle:"storage",charIndex:1414},{level:2,title:"Servers",slug:"servers",normalizedTitle:"servers",charIndex:2223},{level:3,title:"Executor",slug:"executor",normalizedTitle:"executor",charIndex:1978},{level:3,title:"Worker",slug:"worker",normalizedTitle:"worker",charIndex:2967},{level:3,title:"Scheduler",slug:"scheduler",normalizedTitle:"scheduler",charIndex:4041},{level:3,title:"Indexer",slug:"indexer",normalizedTitle:"indexer",charIndex:1993},{level:3,title:"Webserver",slug:"webserver",normalizedTitle:"webserver",charIndex:5006},{level:2,title:"Plugins",slug:"plugins",normalizedTitle:"plugins",charIndex:5686},{level:2,title:"Repositories",slug:"repositories",normalizedTitle:"repositories",charIndex:4896}],lastUpdated:"6/19/2022, 7:09:53 PM",lastUpdatedTimestamp:1655665793e3,headersStr:"Dependencies Medium-sized environment High Availability and No Single Point of Failure Storage Servers Executor Worker Scheduler Indexer Webserver Plugins Repositories",content:"# Architecture\n\n\n# Dependencies\n\nKestra is a simple Java application that is provided as executable. You have many execution options :\n\n * Docker\n * Kubernetes\n * Manual deployment\n\nAt its heart, Kestra has a pluggable system allowing some dependencies to be switched out, for now there is two different production environment architecture available:\n\n\n# Medium-sized environment\n\n\n\nFor medium-sized deployment where high availability is not a strict requirements, you can use a simple database (Postgres or MySQL) as only dependencies. This allows to run Kestra with a minimal stack to maintain. We have for now 2 databases available:\n\n * Postgres\n * Mysql\n\nMore detail on configurations are available here\n\n\n# High Availability and No Single Point of Failure\n\n\n\nIn order to support higher throughput, and full horizontal and vertical scaling of the clusters, we can replace the database with Kafka and Elasticsearch. In that case, all the process can be scaled without any single point of failure.\n\n# Kafka\n\nKafka is Kestra's primary dependency. Each of the most important servers in a deployment need to have a Kafka instance up & running. Kafka allows Kestra to be an infinitely scalable solution.\n\n# ElasticSearch\n\nElasticSearch Kestra's user interface database, allowing the display, search and aggregation of all Kestra's data (Flows, Executions, etc...). This one is only used by webserver (api & ui).\n\n\n# Storage\n\nAs with most systems, Kestra requires storage to handle incoming and outgoing files of varying sizes. This notion is included in the heart of Kestra. Nowadays, storage availability is backed up by many file systems, we rely on these to guarantee scalability of Kestra. This Kestra Internal Storage will transmit all the files between the different tasks.\n\nThe storage is a simple plugin that you need to include and configure, by default only local (not scalable) storage is available.\n\nAny storage designated can be used by any Kestra servers except the Executor & the Indexer which don't need it.\n\nAvailable storages are :\n\n * Storage Minio for Minio, which is compatible with AWS S3 and all other S3 Like storage\n * Storage GCS for Google Cloud Storage\n * Storage Azure for Azure Blob Storage\n\n\n# Servers\n\nKestra consists of multiple servers that can be scaled independently:\n\n\n# Executor\n\nExecutors handle all executions and flowable tasks. The only goal of the Executor is to receive created executions and look for the next tasks. There is no heavy computing required (and no capacity for it) for this server. The only purpose of the Executor is looking at current executions and finding the next tasks.\n\nThe executor also handles special execution cases:\n\n * Listeners\n * Flow Trigger\n * Template\n\nInternally, the executor is a heavy Kafka Stream. The executor processes all events coming from Kafka in the right order, and keeps an internal state of the execution and merges taskrun results coming from the worker.\nIt also detects dead Workers and resubmits the tasks run by a dead worker.\n\nSince the application is a Kafka Stream, the application can be scaled infinitely (within the limits of partition count on Kafka) but since no heavy computations are done on the executor, this server does not require alot of resources (unless you have a very high rate of executions).\n\n\n# Worker\n\nA worker is where the task is done. A Worker will receive a task from the Executor and will process it. Since tasks can be nearly anything(heavy computations, simple api calls, etc.), the worker is essentially a ThreadPool where you can configure the amount of threads you need.\n\nInternally, workers are a simple Kafka Consumer that will process any Task Run submitted. Workers will receive all tasks and dispatch internally in its Thread Pool.\n\nYou can also scale workers as necessary, and have many instances on multiple servers (within the limits of the partition count on Kafka), each with its own Thread Pool. If a worker is dead, the Executor will detect it and resubmit their current taskrun to another worker.\n\n\n# Scheduler\n\nScheduler will handle most of the triggers (except the Flow Trigger handle by executor). It will continuously watch all triggers and detect if all the conditions are met to trigger an Execution (submitted to Executor).\n\nInternally, a Scheduler has two ThreadPools:\n\n * ScheduledExecutorService : This Threadpool will tick every second and try to find an available job.\n * CachedThreadPool : This Threadpool will compute in a separate Thread for all the triggers.\n\nWARNING\n\nBy default, Kestra will handle all dates based on your system timezone. You can change the timezone with JVM options.\n\nWARNING\n\nWith MySQL or Postgres as database, you can't scale the replicas count for the scheduler, and you must have only one instance for the whole cluster.\n\n\n# Indexer\n\nThe Indexer will watch for many Kafka topics and will simply copy the content to Repositories. This will save all the executions & flows to ElasticSearch providing Kestra with a rich UI.\n\n\n# Webserver\n\nThe Webserver offers 2 main modules in the same server :\n\n * Api: All the apis allowed to trigger executions for any system, and to interact with Kestra.\n * UI: The User Interface (UI) is also served by the same webserver.\n\nThe webserver interacts mostly with Elasticsearch to deliver a rich API/UI. It also interacts with Kafka in order to trigger new executions, follow executions in real-time, etc...\n\nTIP\n\nEach Application/Server (other than the Scheduler)can continue to function, provided Kafka and its Storage is up and running. ElasticSearch is only used to help provide our rich Web UI, and even if ElasticSearch is down, workloads can continue on Kestra.\n\n\n# Plugins\n\nKestra's core is not by itself able to handle many task types. We have therefore included a Plugins system that allow you to develop as many tasks as you need.\nA wide range of plugins is already available, and many more will be delivered by the Kestra team !\n\n\n# Repositories\n\nRepositories are the internal way to fetch data. On production servers, these will fetch data from ElasticSearch. There is a memory repository that is used during internal Kestra unit tests and this has an incomplete API. Never use this repository for production.",normalizedContent:"# architecture\n\n\n# dependencies\n\nkestra is a simple java application that is provided as executable. you have many execution options :\n\n * docker\n * kubernetes\n * manual deployment\n\nat its heart, kestra has a pluggable system allowing some dependencies to be switched out, for now there is two different production environment architecture available:\n\n\n# medium-sized environment\n\n\n\nfor medium-sized deployment where high availability is not a strict requirements, you can use a simple database (postgres or mysql) as only dependencies. this allows to run kestra with a minimal stack to maintain. we have for now 2 databases available:\n\n * postgres\n * mysql\n\nmore detail on configurations are available here\n\n\n# high availability and no single point of failure\n\n\n\nin order to support higher throughput, and full horizontal and vertical scaling of the clusters, we can replace the database with kafka and elasticsearch. in that case, all the process can be scaled without any single point of failure.\n\n# kafka\n\nkafka is kestra's primary dependency. each of the most important servers in a deployment need to have a kafka instance up & running. kafka allows kestra to be an infinitely scalable solution.\n\n# elasticsearch\n\nelasticsearch kestra's user interface database, allowing the display, search and aggregation of all kestra's data (flows, executions, etc...). this one is only used by webserver (api & ui).\n\n\n# storage\n\nas with most systems, kestra requires storage to handle incoming and outgoing files of varying sizes. this notion is included in the heart of kestra. nowadays, storage availability is backed up by many file systems, we rely on these to guarantee scalability of kestra. this kestra internal storage will transmit all the files between the different tasks.\n\nthe storage is a simple plugin that you need to include and configure, by default only local (not scalable) storage is available.\n\nany storage designated can be used by any kestra servers except the executor & the indexer which don't need it.\n\navailable storages are :\n\n * storage minio for minio, which is compatible with aws s3 and all other s3 like storage\n * storage gcs for google cloud storage\n * storage azure for azure blob storage\n\n\n# servers\n\nkestra consists of multiple servers that can be scaled independently:\n\n\n# executor\n\nexecutors handle all executions and flowable tasks. the only goal of the executor is to receive created executions and look for the next tasks. there is no heavy computing required (and no capacity for it) for this server. the only purpose of the executor is looking at current executions and finding the next tasks.\n\nthe executor also handles special execution cases:\n\n * listeners\n * flow trigger\n * template\n\ninternally, the executor is a heavy kafka stream. the executor processes all events coming from kafka in the right order, and keeps an internal state of the execution and merges taskrun results coming from the worker.\nit also detects dead workers and resubmits the tasks run by a dead worker.\n\nsince the application is a kafka stream, the application can be scaled infinitely (within the limits of partition count on kafka) but since no heavy computations are done on the executor, this server does not require alot of resources (unless you have a very high rate of executions).\n\n\n# worker\n\na worker is where the task is done. a worker will receive a task from the executor and will process it. since tasks can be nearly anything(heavy computations, simple api calls, etc.), the worker is essentially a threadpool where you can configure the amount of threads you need.\n\ninternally, workers are a simple kafka consumer that will process any task run submitted. workers will receive all tasks and dispatch internally in its thread pool.\n\nyou can also scale workers as necessary, and have many instances on multiple servers (within the limits of the partition count on kafka), each with its own thread pool. if a worker is dead, the executor will detect it and resubmit their current taskrun to another worker.\n\n\n# scheduler\n\nscheduler will handle most of the triggers (except the flow trigger handle by executor). it will continuously watch all triggers and detect if all the conditions are met to trigger an execution (submitted to executor).\n\ninternally, a scheduler has two threadpools:\n\n * scheduledexecutorservice : this threadpool will tick every second and try to find an available job.\n * cachedthreadpool : this threadpool will compute in a separate thread for all the triggers.\n\nwarning\n\nby default, kestra will handle all dates based on your system timezone. you can change the timezone with jvm options.\n\nwarning\n\nwith mysql or postgres as database, you can't scale the replicas count for the scheduler, and you must have only one instance for the whole cluster.\n\n\n# indexer\n\nthe indexer will watch for many kafka topics and will simply copy the content to repositories. this will save all the executions & flows to elasticsearch providing kestra with a rich ui.\n\n\n# webserver\n\nthe webserver offers 2 main modules in the same server :\n\n * api: all the apis allowed to trigger executions for any system, and to interact with kestra.\n * ui: the user interface (ui) is also served by the same webserver.\n\nthe webserver interacts mostly with elasticsearch to deliver a rich api/ui. it also interacts with kafka in order to trigger new executions, follow executions in real-time, etc...\n\ntip\n\neach application/server (other than the scheduler)can continue to function, provided kafka and its storage is up and running. elasticsearch is only used to help provide our rich web ui, and even if elasticsearch is down, workloads can continue on kestra.\n\n\n# plugins\n\nkestra's core is not by itself able to handle many task types. we have therefore included a plugins system that allow you to develop as many tasks as you need.\na wide range of plugins is already available, and many more will be delivered by the kestra team !\n\n\n# repositories\n\nrepositories are the internal way to fetch data. on production servers, these will fetch data from elasticsearch. there is a memory repository that is used during internal kestra unit tests and this has an incomplete api. never use this repository for production.",charsets:{}},{title:"Concepts",frontmatter:{order:2,meta:[{property:"article:modified_time",content:"2022-04-03T19:46:45.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Concepts"},{property:"og:description",content:"Concepts | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/concepts/"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Concepts"},{name:"twitter:description",content:"Concepts | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/concepts/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/concepts/",relativePath:"docs/concepts/README.md",key:"v-11cc6b58",path:"/docs/concepts/",lastUpdated:"4/3/2022, 7:46:45 PM",lastUpdatedTimestamp:1649015205e3,headersStr:null,content:"# Concepts\n\nThis section describes some specific terms used within the Kestra system. Our goal is to make understanding our system as simple as possible:",normalizedContent:"# concepts\n\nthis section describes some specific terms used within the kestra system. our goal is to make understanding our system as simple as possible:",charsets:{}},{title:"Execution",frontmatter:{order:2,meta:[{property:"article:modified_time",content:"2022-04-03T19:56:28.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Execution"},{property:"og:description",content:"Execution | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/concepts/executions.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Execution"},{name:"twitter:description",content:"Execution | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/concepts/executions.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/concepts/executions.html",relativePath:"docs/concepts/executions.md",key:"v-a42a4c0e",path:"/docs/concepts/executions.html",headers:[{level:2,title:"Task Run",slug:"task-run",normalizedTitle:"task run",charIndex:219},{level:2,title:"Attempts",slug:"attempts",normalizedTitle:"attempts",charIndex:375},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:599},{level:2,title:"Metrics",slug:"metrics",normalizedTitle:"metrics",charIndex:707},{level:2,title:"State",slug:"state",normalizedTitle:"state",charIndex:952}],lastUpdated:"4/3/2022, 7:56:28 PM",lastUpdatedTimestamp:1649015788e3,headersStr:"Task Run Attempts Outputs Metrics State",content:"# Execution\n\nAn execution is a flow that is currently processing or has already finished performing a task. It is a task set processing all elements together to achieve the flow goal that is to be run successfully.\n\n\n# Task Run\n\nA Task Run is a task that has been executed and associated to its operational data, such as execution_id, state, start_date, end_date, etc...\n\n\n# Attempts\n\nEach task run will produce 1 or more attempts. Most common tasks run will have only 1 attempt, but you can add Retries to a task. If retries are added, they will generate new attempts for each failed task run.\n\n\n# Outputs\n\nEach task can generate output data that can be reused in other tasks of the current execution.\n\n\n# Metrics\n\nEach task can generate metrics data that may be useful in understanding what the current task is doing.\nExamples of metrics you might see include: file.size, row.count, etc...\n\nThere are 2 kinds of metrics :\n\n * Duration\n * Counter\n\n\n# State\n\nA Task Run or Execution can be defined as being in a particular state.\n\nThe possible States are defined below:\n\n * CREATED: The Task Run or Execution is not yet handled internally, waiting to be treated. This usually means the Execution is in a queue.\n * RUNNING: The Task or Execution is currently running.\n * SUCCESS: The Task or Execution has completed without a recorded failure.\n * WARNING: The Task Run or Execution is exhibiting unintended behaviour, but the execution continued and was flagged with a warning.\n * FAILED: The Task Run or Execution exhibited unintended behaviour that caused the execution to fail.\n * KILLING: A command was run asking the the Task Run or Execution to be killed, and the system is in the process of killing the associated tasks.\n * KILLED: A Task Run or Execution was killed (upon request), and no more tasks will be run for that process.\n * RESTARTED: This status is a transitive status that essentially means CREATED, but for a process that has already been executed and failed, and has been restarted.",normalizedContent:"# execution\n\nan execution is a flow that is currently processing or has already finished performing a task. it is a task set processing all elements together to achieve the flow goal that is to be run successfully.\n\n\n# task run\n\na task run is a task that has been executed and associated to its operational data, such as execution_id, state, start_date, end_date, etc...\n\n\n# attempts\n\neach task run will produce 1 or more attempts. most common tasks run will have only 1 attempt, but you can add retries to a task. if retries are added, they will generate new attempts for each failed task run.\n\n\n# outputs\n\neach task can generate output data that can be reused in other tasks of the current execution.\n\n\n# metrics\n\neach task can generate metrics data that may be useful in understanding what the current task is doing.\nexamples of metrics you might see include: file.size, row.count, etc...\n\nthere are 2 kinds of metrics :\n\n * duration\n * counter\n\n\n# state\n\na task run or execution can be defined as being in a particular state.\n\nthe possible states are defined below:\n\n * created: the task run or execution is not yet handled internally, waiting to be treated. this usually means the execution is in a queue.\n * running: the task or execution is currently running.\n * success: the task or execution has completed without a recorded failure.\n * warning: the task run or execution is exhibiting unintended behaviour, but the execution continued and was flagged with a warning.\n * failed: the task run or execution exhibited unintended behaviour that caused the execution to fail.\n * killing: a command was run asking the the task run or execution to be killed, and the system is in the process of killing the associated tasks.\n * killed: a task run or execution was killed (upon request), and no more tasks will be run for that process.\n * restarted: this status is a transitive status that essentially means created, but for a process that has already been executed and failed, and has been restarted.",charsets:{}},{title:"Flow",frontmatter:{order:1,meta:[{property:"article:modified_time",content:"2022-04-03T19:48:28.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Flow"},{property:"og:description",content:"Flow | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/concepts/flows.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Flow"},{name:"twitter:description",content:"Flow | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/concepts/flows.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/concepts/flows.html",relativePath:"docs/concepts/flows.md",key:"v-631e077a",path:"/docs/concepts/flows.html",headers:[{level:2,title:"Task",slug:"task",normalizedTitle:"task",charIndex:138},{level:3,title:"Flowable Task",slug:"flowable-task",normalizedTitle:"flowable task",charIndex:297},{level:3,title:"Runnable Task",slug:"runnable-task",normalizedTitle:"runnable task",charIndex:812},{level:2,title:"Namespace",slug:"namespace",normalizedTitle:"namespace",charIndex:1163},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:1437},{level:2,title:"Revision",slug:"revision",normalizedTitle:"revision",charIndex:1754},{level:2,title:"Listeners",slug:"listeners",normalizedTitle:"listeners",charIndex:1983},{level:2,title:"Triggers",slug:"triggers",normalizedTitle:"triggers",charIndex:2332},{level:2,title:"Templates",slug:"templates",normalizedTitle:"templates",charIndex:2567}],lastUpdated:"4/3/2022, 7:48:28 PM",lastUpdatedTimestamp:1649015308e3,headersStr:"Task Flowable Task Runnable Task Namespace Inputs Revision Listeners Triggers Templates",content:"# Flow\n\nA flow is a simple list of tasks for Kestra, grouped by namespace. It defines all the behavior you want for the current flow.\n\n\n# Task\n\nA Task is single action in a flow.\nA task can optionally take inputs, perform an action, or produce an output.\n\nThere are 2 kind of Tasks in Kestra:\n\n\n# Flowable Task\n\nFlowable Tasks are tasks that only handle workflow states and trigger new tasks. They will handle the logic of the flow enabling complex workflow like branching, parallel tasks, etc...\nA simple example is a Switch task that can take any inputs and decide which are the next tasks to run (and to allow branching).\n\nA Flowable Task is handled by Executors and can be called very often, so these tasks cannot include intensive computations.\n\nThe most common Flowable Tasks will be kept in the core.\n\n\n# Runnable Task\n\nRunnable Tasks are used to handle any computational work. This can be anything, including file systems operations, api calls, database queries, and more. These tasks can be compute intensive since they will be handled by Workers. By default, Kestra does not operate a lot of Runnable Tasks. Most tasks will be available as Plugins.\n\n\n# Namespace\n\nA namespace is a like a folder for file systems. It aims to group flows in a limitless hierarchy.\nA Namespace is composed of word and letters separated by .. The hierarchy depth is not limited and is free for Kestra users to modify to fit their organization.\n\n\n# Inputs\n\nInputs are mandatory or optional parameters sent to a flow in order for it to be successfully run. It can be anything (string, int, file, ...) that will be sent when the execution is created. The Flow must define possible inputs, and mandatory ones will be validated before the creation of the execution.\n\n\n# Revision\n\nEach flow modification will produce a new revision. A revision is a simple incremental number that will update after each change made to the flow. Internally, Kestra will track and manage all revisions of the flow.\n\n\n# Listeners\n\nListeners are special tasks that can listen to the current flow and launch tasks outside of the flow.\nThe result of these tasks will not change the execution status. For the most part, Listeners are applied to send notifications or handle special end-task behaviour that you do not want to be considered as part of the main workflow.\n\n\n# Triggers\n\nTriggers are a way to start a flow from external events. For example, a trigger might initiate a flow on a scheduled date or at a particular time of day, or it can be dependent on external events (such as file creation).\n\n\n# Templates\n\nTemplates are lists of tasks that can be shared between flows. You can define a template and call upon it from other flows, allowing you to share a list of tasks and keep these task updated without changing your flow.",normalizedContent:"# flow\n\na flow is a simple list of tasks for kestra, grouped by namespace. it defines all the behavior you want for the current flow.\n\n\n# task\n\na task is single action in a flow.\na task can optionally take inputs, perform an action, or produce an output.\n\nthere are 2 kind of tasks in kestra:\n\n\n# flowable task\n\nflowable tasks are tasks that only handle workflow states and trigger new tasks. they will handle the logic of the flow enabling complex workflow like branching, parallel tasks, etc...\na simple example is a switch task that can take any inputs and decide which are the next tasks to run (and to allow branching).\n\na flowable task is handled by executors and can be called very often, so these tasks cannot include intensive computations.\n\nthe most common flowable tasks will be kept in the core.\n\n\n# runnable task\n\nrunnable tasks are used to handle any computational work. this can be anything, including file systems operations, api calls, database queries, and more. these tasks can be compute intensive since they will be handled by workers. by default, kestra does not operate a lot of runnable tasks. most tasks will be available as plugins.\n\n\n# namespace\n\na namespace is a like a folder for file systems. it aims to group flows in a limitless hierarchy.\na namespace is composed of word and letters separated by .. the hierarchy depth is not limited and is free for kestra users to modify to fit their organization.\n\n\n# inputs\n\ninputs are mandatory or optional parameters sent to a flow in order for it to be successfully run. it can be anything (string, int, file, ...) that will be sent when the execution is created. the flow must define possible inputs, and mandatory ones will be validated before the creation of the execution.\n\n\n# revision\n\neach flow modification will produce a new revision. a revision is a simple incremental number that will update after each change made to the flow. internally, kestra will track and manage all revisions of the flow.\n\n\n# listeners\n\nlisteners are special tasks that can listen to the current flow and launch tasks outside of the flow.\nthe result of these tasks will not change the execution status. for the most part, listeners are applied to send notifications or handle special end-task behaviour that you do not want to be considered as part of the main workflow.\n\n\n# triggers\n\ntriggers are a way to start a flow from external events. for example, a trigger might initiate a flow on a scheduled date or at a particular time of day, or it can be dependent on external events (such as file creation).\n\n\n# templates\n\ntemplates are lists of tasks that can be shared between flows. you can define a template and call upon it from other flows, allowing you to share a list of tasks and keep these task updated without changing your flow.",charsets:{}},{title:"Developer Guide",frontmatter:{order:4,meta:[{property:"article:modified_time",content:"2020-11-09T20:39:04.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Developer Guide"},{property:"og:description",content:"Developer Guide | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Developer Guide"},{name:"twitter:description",content:"Developer Guide | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/",relativePath:"docs/developer-guide/README.md",key:"v-477f7948",path:"/docs/developer-guide/",lastUpdated:"11/9/2020, 8:39:04 PM",lastUpdatedTimestamp:1604954344e3,headersStr:null,content:"# Developer Guide\n\nHere, you will find the necessary information in order to develop flows for Kestra.\n\nMore information :",normalizedContent:"# developer guide\n\nhere, you will find the necessary information in order to develop flows for kestra.\n\nmore information :",charsets:{}},{title:"Flow best practice",frontmatter:{order:12,meta:[{property:"article:modified_time",content:"2022-06-17T19:21:58.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Flow best practice"},{property:"og:description",content:"Flow best practice | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/best-practice/"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Flow best practice"},{name:"twitter:description",content:"Flow best practice | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/best-practice/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/best-practice/",relativePath:"docs/developer-guide/best-practice/README.md",key:"v-2bdad6a8",path:"/docs/developer-guide/best-practice/",headers:[{level:2,title:"Understand what is an execution internally for Kestra",slug:"understand-what-is-an-execution-internally-for-kestra",normalizedTitle:"understand what is an execution internally for kestra",charIndex:284},{level:2,title:"Task on the same execution",slug:"task-on-the-same-execution",normalizedTitle:"task on the same execution",charIndex:3348},{level:2,title:"Volume of data from your outputs",slug:"volume-of-data-from-your-outputs",normalizedTitle:"volume of data from your outputs",charIndex:4439},{level:2,title:"Parallel Task",slug:"parallel-task",normalizedTitle:"parallel task",charIndex:5264},{level:2,title:"Duration of Tasks",slug:"duration-of-tasks",normalizedTitle:"duration of tasks",charIndex:5703}],lastUpdated:"6/17/2022, 7:21:58 PM",lastUpdatedTimestamp:1655493718e3,headersStr:"Understand what is an execution internally for Kestra Task on the same execution Volume of data from your outputs Parallel Task Duration of Tasks",content:'# Flow best practice\n\nWhile Kestra allows you to create almost every kind of flow, there are some cases that will not function well, or worse, can break the Kestra application.\nIn this section, we will describe the best way to create efficient flows as well as patterns to avoid.\n\n\n# Understand what is an execution internally for Kestra\n\nThe execution of a flow is an object that will contain :\n\n * all the TaskRuns for this flow, with each having :\n   * theirs attempts, with each having :\n     * theirs metrics\n     * theirs state histories\n   * theirs outputs\n   * theirs state histories\n\nHere is an example of a taskRun :\n\n{\n  "id": "5cBZ1JF8kim8fbFg13bumX",\n  "executionId": "6s1egIkxu3gpzzILDnyxTn",\n  "namespace": "org.kestra.tests",\n  "flowId": "each-sequential-nested",\n  "taskId": "1-1_return",\n  "parentTaskRunId": "5ABxhOwhpd2X8DtwUPKERJ",\n  "value": "s1",\n  "attempts": [\n    {\n      "metrics": [\n        {\n          "name": "length",\n          "tags": {\n            "format": "{{task.id}} > {{taskrun.value}} ⬅ {{taskrun.startDate}}"\n          },\n          "value": 45.0,\n          "type": "counter"\n        },\n        {\n          "name": "duration",\n          "tags": {\n            "format": "{{task.id}} > {{taskrun.value}} ⬅ {{taskrun.startDate}}"\n          },\n          "type": "timer",\n          "value": "PT0.007213673S"\n        }\n      ],\n      "state": {\n        "current": "SUCCESS",\n        "histories": [\n          {\n            "state": "CREATED",\n            "date": "2021-05-04T12:02:54.121836Z"\n          },\n          {\n            "state": "RUNNING",\n            "date": "2021-05-04T12:02:54.121841Z"\n          },\n          {\n            "state": "SUCCESS",\n            "date": "2021-05-04T12:02:54.131892Z"\n          }\n        ],\n        "duration": "PT0.010056S",\n        "endDate": "2021-05-04T12:02:54.131892Z",\n        "startDate": "2021-05-04T12:02:54.121836Z"\n      }\n    }\n  ],\n  "outputs": {\n    "value": "1-1_return > s1 ⬅ 2021-05-04T12:02:53.938333Z"\n  },\n  "state": {\n    "current": "SUCCESS",\n    "histories": [\n      {\n        "state": "CREATED",\n        "date": "2021-05-04T12:02:53.938333Z"\n      },\n      {\n        "state": "RUNNING",\n        "date": "2021-05-04T12:02:54.116336Z"\n      },\n      {\n        "state": "SUCCESS",\n        "date": "2021-05-04T12:02:54.144135Z"\n      }\n    ],\n    "duration": "PT0.205802S",\n    "endDate": "2021-05-04T12:02:54.144135Z",\n    "startDate": "2021-05-04T12:02:53.938333Z"\n  }\n}\n\n\nInternally:\n\n * Each taskRun on a flow will be added on the same object that contains all tasks executed on this flow.\n * Each TaskRun status changed is read by the Kestra Executor (at most 3 for a task = CREATED, RUNNING, SUCCESS)\n * For each state on the Executor, we need\n   * to fetch the serialized object over the network\n   * deserialize the object, find the next task or tasks and serialize the execution object\n   * to send the serialized object over the network\n * The bigger the execution object, the longer it will take to handle this serialization phase.\n * Since we rely on Kafka or a database for storing the object, large message will lead to slow the execution (due to network transmission or deserialization). Moreover, Kafka has a size limit on messages it can accept (default: 1MB). Larger messages will not be accepted and will lead to a FAILED execution.\n\n\n# Task on the same execution\n\nBased on previous observation, here are some recommendations to avoid such cases:\n\nWhile it is possible to code a flow with many tasks, it is not recommended to have a lot of tasks on the same flow.\n\nA flow can be comprised of manually generated tasks or dynamic ones. While EachSequential & EachParallel are really powerful tasks to loop over the result of a previous task, there are some drawbacks. If the task you are looping over is too large, you can easily end up with hundreds of tasks created. If, for example, you were using a pattern with Each inside Each (nested looping), it would take only a 20 taskRuns X 20 taskRuns flow to reach 400 taskRuns.\n\nWARNING\n\nBased on our observations, we have seen that in cases where there are more than 100 tasks on a flow, we see a decrease in performance and longer executions.\n\nTo avoid reaching these limits, you can easily create a sub-flow with Flow passing arguments from parent to child. In this case, since the Flow create a new execution, the sub-flow tasks will be isolated and won\'t hurt performance.\n\n\n# Volume of data from your outputs\n\nSome tasks allow you to fetch results on outputs in order to be reused on the next tasks.\nWhile this is powerful, this is not intended to be used to transport a lot of data!\nFor example with Query from BigQuery, there is a parameter fetch that allow us to fetch a resultset as output.\n\nImagine a big table with many mo / go of data. If you use fetch, the outputs will be on the execution object and will be need to be serialized on each task state change. This is not the idea behind fetch, this serves mostly to query a fews rows in order use it on a Switch or a EachParallel to loop over.\n\nTIP\n\nIn most cases, there are counter properties called stores that can handle a large volume of data. These serve as storage within Kestra, and only the url of this file is available as output.\n\n\n# Parallel Task\n\nUsing EachParallel & Parallel serves as a convenient way to optimize flow duration, but keep in mind, that by default all the tasks are launched at the same time (unless you specify the concurrent properties). The only limit will be the number of worker threads you have configured.\nKeep this in mind, because you cannot allow parallel tasks to reach the limits of external systems, such as connection limits or quotas.\n\n\n# Duration of Tasks\n\nBy default, Kestra never limits the duration (unless specified explicitly on the tasks documentation) of the tasks. If you have a long running process or an infinite loop, the tasks will never end. We can control the timeout on RunnableTask with the properties timeout: PT15M',normalizedContent:'# flow best practice\n\nwhile kestra allows you to create almost every kind of flow, there are some cases that will not function well, or worse, can break the kestra application.\nin this section, we will describe the best way to create efficient flows as well as patterns to avoid.\n\n\n# understand what is an execution internally for kestra\n\nthe execution of a flow is an object that will contain :\n\n * all the taskruns for this flow, with each having :\n   * theirs attempts, with each having :\n     * theirs metrics\n     * theirs state histories\n   * theirs outputs\n   * theirs state histories\n\nhere is an example of a taskrun :\n\n{\n  "id": "5cbz1jf8kim8fbfg13bumx",\n  "executionid": "6s1egikxu3gpzzildnyxtn",\n  "namespace": "org.kestra.tests",\n  "flowid": "each-sequential-nested",\n  "taskid": "1-1_return",\n  "parenttaskrunid": "5abxhowhpd2x8dtwupkerj",\n  "value": "s1",\n  "attempts": [\n    {\n      "metrics": [\n        {\n          "name": "length",\n          "tags": {\n            "format": "{{task.id}} > {{taskrun.value}} ⬅ {{taskrun.startdate}}"\n          },\n          "value": 45.0,\n          "type": "counter"\n        },\n        {\n          "name": "duration",\n          "tags": {\n            "format": "{{task.id}} > {{taskrun.value}} ⬅ {{taskrun.startdate}}"\n          },\n          "type": "timer",\n          "value": "pt0.007213673s"\n        }\n      ],\n      "state": {\n        "current": "success",\n        "histories": [\n          {\n            "state": "created",\n            "date": "2021-05-04t12:02:54.121836z"\n          },\n          {\n            "state": "running",\n            "date": "2021-05-04t12:02:54.121841z"\n          },\n          {\n            "state": "success",\n            "date": "2021-05-04t12:02:54.131892z"\n          }\n        ],\n        "duration": "pt0.010056s",\n        "enddate": "2021-05-04t12:02:54.131892z",\n        "startdate": "2021-05-04t12:02:54.121836z"\n      }\n    }\n  ],\n  "outputs": {\n    "value": "1-1_return > s1 ⬅ 2021-05-04t12:02:53.938333z"\n  },\n  "state": {\n    "current": "success",\n    "histories": [\n      {\n        "state": "created",\n        "date": "2021-05-04t12:02:53.938333z"\n      },\n      {\n        "state": "running",\n        "date": "2021-05-04t12:02:54.116336z"\n      },\n      {\n        "state": "success",\n        "date": "2021-05-04t12:02:54.144135z"\n      }\n    ],\n    "duration": "pt0.205802s",\n    "enddate": "2021-05-04t12:02:54.144135z",\n    "startdate": "2021-05-04t12:02:53.938333z"\n  }\n}\n\n\ninternally:\n\n * each taskrun on a flow will be added on the same object that contains all tasks executed on this flow.\n * each taskrun status changed is read by the kestra executor (at most 3 for a task = created, running, success)\n * for each state on the executor, we need\n   * to fetch the serialized object over the network\n   * deserialize the object, find the next task or tasks and serialize the execution object\n   * to send the serialized object over the network\n * the bigger the execution object, the longer it will take to handle this serialization phase.\n * since we rely on kafka or a database for storing the object, large message will lead to slow the execution (due to network transmission or deserialization). moreover, kafka has a size limit on messages it can accept (default: 1mb). larger messages will not be accepted and will lead to a failed execution.\n\n\n# task on the same execution\n\nbased on previous observation, here are some recommendations to avoid such cases:\n\nwhile it is possible to code a flow with many tasks, it is not recommended to have a lot of tasks on the same flow.\n\na flow can be comprised of manually generated tasks or dynamic ones. while eachsequential & eachparallel are really powerful tasks to loop over the result of a previous task, there are some drawbacks. if the task you are looping over is too large, you can easily end up with hundreds of tasks created. if, for example, you were using a pattern with each inside each (nested looping), it would take only a 20 taskruns x 20 taskruns flow to reach 400 taskruns.\n\nwarning\n\nbased on our observations, we have seen that in cases where there are more than 100 tasks on a flow, we see a decrease in performance and longer executions.\n\nto avoid reaching these limits, you can easily create a sub-flow with flow passing arguments from parent to child. in this case, since the flow create a new execution, the sub-flow tasks will be isolated and won\'t hurt performance.\n\n\n# volume of data from your outputs\n\nsome tasks allow you to fetch results on outputs in order to be reused on the next tasks.\nwhile this is powerful, this is not intended to be used to transport a lot of data!\nfor example with query from bigquery, there is a parameter fetch that allow us to fetch a resultset as output.\n\nimagine a big table with many mo / go of data. if you use fetch, the outputs will be on the execution object and will be need to be serialized on each task state change. this is not the idea behind fetch, this serves mostly to query a fews rows in order use it on a switch or a eachparallel to loop over.\n\ntip\n\nin most cases, there are counter properties called stores that can handle a large volume of data. these serve as storage within kestra, and only the url of this file is available as output.\n\n\n# parallel task\n\nusing eachparallel & parallel serves as a convenient way to optimize flow duration, but keep in mind, that by default all the tasks are launched at the same time (unless you specify the concurrent properties). the only limit will be the number of worker threads you have configured.\nkeep this in mind, because you cannot allow parallel tasks to reach the limits of external systems, such as connection limits or quotas.\n\n\n# duration of tasks\n\nby default, kestra never limits the duration (unless specified explicitly on the tasks documentation) of the tasks. if you have a long running process or an infinite loop, the tasks will never end. we can control the timeout on runnabletask with the properties timeout: pt15m',charsets:{}},{title:"Conditions",frontmatter:{order:7,meta:[{property:"article:modified_time",content:"2022-04-10T20:42:14.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Conditions"},{property:"og:description",content:"Conditions | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/conditions/"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Conditions"},{name:"twitter:description",content:"Conditions | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/conditions/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/conditions/",relativePath:"docs/developer-guide/conditions/README.md",key:"v-587c915c",path:"/docs/developer-guide/conditions/",lastUpdated:"4/10/2022, 8:42:14 PM",lastUpdatedTimestamp:1649623334e3,headersStr:null,content:"# Conditions\n\nConditions are used in Triggers & Listeners in order to limit the cases in which a task/execution is triggered.\nFor example:\n\n * you can limit the listeners to only a specified status\n * you can limit triggers to specified namespace prefix\n * ....\n\nYou can pass a list of conditions and all the conditions must match to enable the current action.\n\nAvailable conditions include:\n\n * ExecutionFlowCondition\n * ExecutionNamespaceCondition\n * ExecutionStatusCondition\n * FlowCondition\n * FlowNamespaceCondition\n * VariableCondition",normalizedContent:"# conditions\n\nconditions are used in triggers & listeners in order to limit the cases in which a task/execution is triggered.\nfor example:\n\n * you can limit the listeners to only a specified status\n * you can limit triggers to specified namespace prefix\n * ....\n\nyou can pass a list of conditions and all the conditions must match to enable the current action.\n\navailable conditions include:\n\n * executionflowcondition\n * executionnamespacecondition\n * executionstatuscondition\n * flowcondition\n * flownamespacecondition\n * variablecondition",charsets:{}},{title:"Document your flow",frontmatter:{order:11,meta:[{property:"article:modified_time",content:"2020-11-03T13:38:34.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Document your flow"},{property:"og:description",content:"Document your flow | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/documentation/"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Document your flow"},{name:"twitter:description",content:"Document your flow | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/documentation/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/documentation/",relativePath:"docs/developer-guide/documentation/README.md",key:"v-5a7b3ee8",path:"/docs/developer-guide/documentation/",lastUpdated:"11/3/2020, 1:38:34 PM",lastUpdatedTimestamp:1604410714e3,headersStr:null,content:"# Document your flow\n\nYou can document from flow, task, ... in order to explain what is the goal of the current element.\n\nFor this, Kestra allow to add a description attribute where you can write some documentation of the current element.\nDescription must be written on Markdown.\n\nYou can add description attribute on :\n\n * Flow\n * Task\n * Listeners\n * Triggers\n\nAll description will be visible on the ui :\n\n\n\n\n\n",normalizedContent:"# document your flow\n\nyou can document from flow, task, ... in order to explain what is the goal of the current element.\n\nfor this, kestra allow to add a description attribute where you can write some documentation of the current element.\ndescription must be written on markdown.\n\nyou can add description attribute on :\n\n * flow\n * task\n * listeners\n * triggers\n\nall description will be visible on the ui :\n\n\n\n\n\n",charsets:{}},{title:"Errors handling",frontmatter:{order:5,meta:[{property:"article:modified_time",content:"2022-04-10T20:40:14.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Errors handling"},{property:"og:description",content:"Errors handling | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/errors-handling/"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Errors handling"},{name:"twitter:description",content:"Errors handling | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/errors-handling/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/errors-handling/",relativePath:"docs/developer-guide/errors-handling/README.md",key:"v-550d8c48",path:"/docs/developer-guide/errors-handling/",headers:[{level:2,title:"Global Error",slug:"global-error",normalizedTitle:"global error",charIndex:330},{level:2,title:"Local Error",slug:"local-error",normalizedTitle:"local error",charIndex:721}],lastUpdated:"4/10/2022, 8:40:14 PM",lastUpdatedTimestamp:1649623214e3,headersStr:"Global Error Local Error",content:'# Errors handling\n\nErrors are a special branch of your flow, where you can define how to handle them if any tasks failed.\n\n2 kinds of errors can be defined :\n\n * Global: for the flow and must be at root of the flow.\n * Local: these are available for all Flowable Task, and are only allowed for these tasks and their children.\n\n\n# Global Error\n\nThis example processes a task which fails immediately. Then a task sequence is processed in the error branch of the flow.\n\nid: errors\nnamespace: io.kestra.tests\n\ntasks:\n  - id: failed\n    type: io.kestra.core.tasks.scripts.Bash\n    commands:\n      - exit 1\nerrors:\n  - id: 2nd\n    type: io.kestra.core.tasks.debugs.Echo\n    format: I\'m failing {{task.id}}\n    level: INFO\n\n\n\n# Local Error\n\nIn this case, the error branch will be used only if all children of task t2 have errors.\nIn this specific example, if the task t1 failed, no error will be used. This is really useful to perform cleanup of resources for this task only.\n\nid: errors\nnamespace: io.kestra.tests\n\ntasks:\n  - id: parent-seq\n    type: io.kestra.core.tasks.flows.Sequential\n    tasks:\n      - id: t1\n        type: io.kestra.core.tasks.debugs.Return\n        format: "{{task.id}} > {{taskrun.startDate}}"\n      - id: t2\n        type: io.kestra.core.tasks.flows.Sequential\n        tasks:\n          - id: t2-t1\n            type: io.kestra.core.tasks.scripts.Bash\n            commands:\n              - \'exit 1\'\n        errors:\n          - id: error-t1\n            type: io.kestra.core.tasks.debugs.Return\n            format: "Error Trigger ! {{task.id}}"\n',normalizedContent:'# errors handling\n\nerrors are a special branch of your flow, where you can define how to handle them if any tasks failed.\n\n2 kinds of errors can be defined :\n\n * global: for the flow and must be at root of the flow.\n * local: these are available for all flowable task, and are only allowed for these tasks and their children.\n\n\n# global error\n\nthis example processes a task which fails immediately. then a task sequence is processed in the error branch of the flow.\n\nid: errors\nnamespace: io.kestra.tests\n\ntasks:\n  - id: failed\n    type: io.kestra.core.tasks.scripts.bash\n    commands:\n      - exit 1\nerrors:\n  - id: 2nd\n    type: io.kestra.core.tasks.debugs.echo\n    format: i\'m failing {{task.id}}\n    level: info\n\n\n\n# local error\n\nin this case, the error branch will be used only if all children of task t2 have errors.\nin this specific example, if the task t1 failed, no error will be used. this is really useful to perform cleanup of resources for this task only.\n\nid: errors\nnamespace: io.kestra.tests\n\ntasks:\n  - id: parent-seq\n    type: io.kestra.core.tasks.flows.sequential\n    tasks:\n      - id: t1\n        type: io.kestra.core.tasks.debugs.return\n        format: "{{task.id}} > {{taskrun.startdate}}"\n      - id: t2\n        type: io.kestra.core.tasks.flows.sequential\n        tasks:\n          - id: t2-t1\n            type: io.kestra.core.tasks.scripts.bash\n            commands:\n              - \'exit 1\'\n        errors:\n          - id: error-t1\n            type: io.kestra.core.tasks.debugs.return\n            format: "error trigger ! {{task.id}}"\n',charsets:{}},{title:"Flow",frontmatter:{order:1,meta:[{property:"article:modified_time",content:"2022-06-17T19:24:22.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Flow"},{property:"og:description",content:"Flow | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/flow/"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Flow"},{name:"twitter:description",content:"Flow | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/flow/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/flow/",relativePath:"docs/developer-guide/flow/README.md",key:"v-8488a8b4",path:"/docs/developer-guide/flow/",headers:[{level:2,title:"Flow sample",slug:"flow-sample",normalizedTitle:"flow sample",charIndex:139},{level:2,title:"Flow Properties",slug:"flow-properties",normalizedTitle:"flow properties",charIndex:398}],lastUpdated:"6/17/2022, 7:24:22 PM",lastUpdatedTimestamp:1655493862e3,headersStr:"Flow sample Flow Properties",content:'# Flow\n\n> The Flow is the base of your workload, it defines all the tasks you want to perform and the order in which they will be run.\n\n\n# Flow sample\n\nThe flow model is a yaml document describing how Kestra will schedule and compute your workload.\n\nHere is a full sample flow demonstrating the flow definition.\nThe following code is a sample existing task in Kestra used for testing purposes.\n\n\n# Flow Properties\n\nid: samples\nnamespace: io.kestra.tests\nrevision: 8\n\ndescription: "Some flow **documentation** in *Markdown*"\n\nlabels:\n  env: prd\n  country: FR\n\ninputs:\n  - name: my-value\n    type: STRING\n    required: false\n    defaults: "default value"\n    description: This is a not required my-value\n\nvariables:\n  first: "1"\n  second: "{{vars.first}} > 2"\n  third: "{{vars.second}} > 3"\n\ntasks:\n  - id: date\n    type: io.kestra.core.tasks.debugs.Return\n    description: "Some tasks **documentation** in *Markdown*"\n    disabled: false\n    format: "A log line content with a contextual date variable {{taskrun.startDate}}"\n\nerrors:\n  - id: failed-echo\n    type: io.kestra.core.tasks.debugs.Echo\n    format: I\'m failing {{task.id}}\n\nlisteners:\n  - description: "some listener **documentation** in *Markdown*"\n    conditions:\n      - type: io.kestra.core.models.conditions.types.ExecutionStatusCondition\n        in:\n          - SUCCESS\n    tasks:\n      - id: execution-failed-listener\n        type: io.kestra.core.tasks.scripts.Bash\n        commands:\n          - echo "I\'m a listeners"\n\ntriggers:\n  - id: monthly\n    type: io.kestra.core.models.triggers.types.Schedule\n    description: "some trigger **documentation** in *Markdown*"\n    cron: 0 0 1 * *\n    backfill:\n      start: 2020-01-01T00:00:00+02:00\n\ntaskDefaults:\n  - type: io.kestra.core.tasks.debugs.Echo\n    level: ERROR\n\ndisabled: false\n\n\nFIELD                        DESCRIPTION\nid                           Flow identifier, must be unique across namespaces.\nnamespace                    Each task lives in one arbitrary namespace, this is useful\n                             for task organization. A Namespace is required.\nrevision                     A Flow version, handled internally by kestra, and is\n                             incremented for each modification save, not a required field\n                             since it is autogenerated.\ndescription                  Description for documentation, more details here\nlabels                       List of labels (key & value as string) for this flow.\ninputs                       List of inputs for the current flow, more details here\ninputs.[].name               The name for this input, allowing it to be used as\n                             variables(vars) on the current flow\ninputs.[].type               The type for this input, for example (STRING, FILE, etc...)\ninputs.[].required           Determines if the input is required (and prevents the flow\n                             from executing without this input)\ninputs.[].defaults           The default value of the input if no value is provided\ninputs.[].description        Description for documentation, more details here\nvariables                    A list of variables (such as key, value, etc) for the\n                             current flow that can be reached with {{ vars.name }}\ntasks                        A list of related tasks for the current flow, all tasks will\n                             be run sequentially.\ntasks.[].id                  The unique task id for the current flow.\ntasks.[].type                The task type is a full java class name.\ntasks.[].description         Description for documentation, more details here\ntasks.[].disabled            This task is disabled, and will be kept on the flow source,\n                             but never executed.\ntasks.[].timeout             This is the max duration of the current task, in a Duration\n                             format like PT15M.\ntasks.[].xxx                 Each task type comes with a specific field that is\n                             documented on the plugins page\nerrors                       A list of error tasks for the current flow, all listed tasks\n                             will be run sequentially only if there is an error on the\n                             current execution.\nerrors.[].xxx                The same property as tasks, error can be any normal tasks,\n                             more details here\nlisteners                    List of listeners for the current flow, more details here\nlisteners.[].description     Description for documentation, more details here\nlisteners.[].condition       The condition that will be validated in order to launch or\n                             skip this listener\nlisteners.[].tasks.[].xxx    The same property as tasks, the task to run for this\n                             listener\ntriggers                     Triggers are external events (such as date and/or time, for\n                             example) to launch this job, more details here\ntriggers.[].id               A unique trigger id which can\'t be updated.\ntriggers.[].type             The trigger type is a full java class name.\ntriggers.[].description      Description for documentation, more details here\ntriggers.[].disabled         Disabled the triggers\ntriggers.[].xxx              Like tasks, each trigger has its own properties\ntaskDefaults                 Default value for current tasks, in order to avoid repeat\n                             the same properties on each tasks\ntaskDefaults.[].type         The task type is a full java class name.\ntaskDefaults.[].forced       If the default value is set to Forced, the taskDefault will\n                             always overwrite the user properties for the task (default\n                             false).\ntaskDefaults.[].values.xxx   The properties (just like Tasks) that you want to be set as\n                             default.\ndisabled                     The flow can be disabled to prevent any executions.',normalizedContent:'# flow\n\n> the flow is the base of your workload, it defines all the tasks you want to perform and the order in which they will be run.\n\n\n# flow sample\n\nthe flow model is a yaml document describing how kestra will schedule and compute your workload.\n\nhere is a full sample flow demonstrating the flow definition.\nthe following code is a sample existing task in kestra used for testing purposes.\n\n\n# flow properties\n\nid: samples\nnamespace: io.kestra.tests\nrevision: 8\n\ndescription: "some flow **documentation** in *markdown*"\n\nlabels:\n  env: prd\n  country: fr\n\ninputs:\n  - name: my-value\n    type: string\n    required: false\n    defaults: "default value"\n    description: this is a not required my-value\n\nvariables:\n  first: "1"\n  second: "{{vars.first}} > 2"\n  third: "{{vars.second}} > 3"\n\ntasks:\n  - id: date\n    type: io.kestra.core.tasks.debugs.return\n    description: "some tasks **documentation** in *markdown*"\n    disabled: false\n    format: "a log line content with a contextual date variable {{taskrun.startdate}}"\n\nerrors:\n  - id: failed-echo\n    type: io.kestra.core.tasks.debugs.echo\n    format: i\'m failing {{task.id}}\n\nlisteners:\n  - description: "some listener **documentation** in *markdown*"\n    conditions:\n      - type: io.kestra.core.models.conditions.types.executionstatuscondition\n        in:\n          - success\n    tasks:\n      - id: execution-failed-listener\n        type: io.kestra.core.tasks.scripts.bash\n        commands:\n          - echo "i\'m a listeners"\n\ntriggers:\n  - id: monthly\n    type: io.kestra.core.models.triggers.types.schedule\n    description: "some trigger **documentation** in *markdown*"\n    cron: 0 0 1 * *\n    backfill:\n      start: 2020-01-01t00:00:00+02:00\n\ntaskdefaults:\n  - type: io.kestra.core.tasks.debugs.echo\n    level: error\n\ndisabled: false\n\n\nfield                        description\nid                           flow identifier, must be unique across namespaces.\nnamespace                    each task lives in one arbitrary namespace, this is useful\n                             for task organization. a namespace is required.\nrevision                     a flow version, handled internally by kestra, and is\n                             incremented for each modification save, not a required field\n                             since it is autogenerated.\ndescription                  description for documentation, more details here\nlabels                       list of labels (key & value as string) for this flow.\ninputs                       list of inputs for the current flow, more details here\ninputs.[].name               the name for this input, allowing it to be used as\n                             variables(vars) on the current flow\ninputs.[].type               the type for this input, for example (string, file, etc...)\ninputs.[].required           determines if the input is required (and prevents the flow\n                             from executing without this input)\ninputs.[].defaults           the default value of the input if no value is provided\ninputs.[].description        description for documentation, more details here\nvariables                    a list of variables (such as key, value, etc) for the\n                             current flow that can be reached with {{ vars.name }}\ntasks                        a list of related tasks for the current flow, all tasks will\n                             be run sequentially.\ntasks.[].id                  the unique task id for the current flow.\ntasks.[].type                the task type is a full java class name.\ntasks.[].description         description for documentation, more details here\ntasks.[].disabled            this task is disabled, and will be kept on the flow source,\n                             but never executed.\ntasks.[].timeout             this is the max duration of the current task, in a duration\n                             format like pt15m.\ntasks.[].xxx                 each task type comes with a specific field that is\n                             documented on the plugins page\nerrors                       a list of error tasks for the current flow, all listed tasks\n                             will be run sequentially only if there is an error on the\n                             current execution.\nerrors.[].xxx                the same property as tasks, error can be any normal tasks,\n                             more details here\nlisteners                    list of listeners for the current flow, more details here\nlisteners.[].description     description for documentation, more details here\nlisteners.[].condition       the condition that will be validated in order to launch or\n                             skip this listener\nlisteners.[].tasks.[].xxx    the same property as tasks, the task to run for this\n                             listener\ntriggers                     triggers are external events (such as date and/or time, for\n                             example) to launch this job, more details here\ntriggers.[].id               a unique trigger id which can\'t be updated.\ntriggers.[].type             the trigger type is a full java class name.\ntriggers.[].description      description for documentation, more details here\ntriggers.[].disabled         disabled the triggers\ntriggers.[].xxx              like tasks, each trigger has its own properties\ntaskdefaults                 default value for current tasks, in order to avoid repeat\n                             the same properties on each tasks\ntaskdefaults.[].type         the task type is a full java class name.\ntaskdefaults.[].forced       if the default value is set to forced, the taskdefault will\n                             always overwrite the user properties for the task (default\n                             false).\ntaskdefaults.[].values.xxx   the properties (just like tasks) that you want to be set as\n                             default.\ndisabled                     the flow can be disabled to prevent any executions.',charsets:{}},{title:"Flowable Task",frontmatter:{order:2,meta:[{property:"article:modified_time",content:"2022-04-12T15:42:51.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Flowable Task"},{property:"og:description",content:"Flowable Task | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/flowable/"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Flowable Task"},{name:"twitter:description",content:"Flowable Task | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/flowable/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/flowable/",relativePath:"docs/developer-guide/flowable/README.md",key:"v-2a1991f2",path:"/docs/developer-guide/flowable/",headers:[{level:2,title:"Sequential",slug:"sequential",normalizedTitle:"sequential",charIndex:487},{level:2,title:"Parallel",slug:"parallel",normalizedTitle:"parallel",charIndex:1104},{level:2,title:"Switch",slug:"switch",normalizedTitle:"switch",charIndex:392},{level:2,title:"EachSequential",slug:"eachsequential",normalizedTitle:"eachsequential",charIndex:2654},{level:2,title:"EachParallel",slug:"eachparallel",normalizedTitle:"eachparallel",charIndex:3522},{level:2,title:"AllowFailure",slug:"allowfailure",normalizedTitle:"allowfailure",charIndex:4259},{level:2,title:"Flow",slug:"flow",normalizedTitle:"flow",charIndex:2},{level:2,title:"Worker",slug:"worker",normalizedTitle:"worker",charIndex:5749},{level:2,title:"Pause",slug:"pause",normalizedTitle:"pause",charIndex:6563},{level:2,title:"Templates",slug:"templates",normalizedTitle:"templates",charIndex:7247}],lastUpdated:"4/12/2022, 3:42:51 PM",lastUpdatedTimestamp:1649778171e3,headersStr:"Sequential Parallel Switch EachSequential EachParallel AllowFailure Flow Worker Pause Templates",content:'# Flowable Task\n\nIn Kestra, we orchestrate your workflows using Flowable Tasks. These tasks do not compute anything, but allow you to build more complex workflows.\nFlowable Tasks are used for things like branching, doing tasks in parallel, etc...\n\nFlowable Tasks mostly use context with variables in order to define the next tasks.\nFor example, you can use the outputs of a variable to run a Switch task to move to the next defined task.\n\nHere is the current list of Flowable Tasks:\n\n\n# Sequential\n\nThis flow processes tasks one after another sequentially. It is mostly used in order to group tasks.\n\nid: sequential\nnamespace: io.kestra.tests\n\ntasks:\n  - id: sequential\n    type: io.kestra.core.tasks.flows.Sequential\n    tasks:\n      - id: 1st\n        type: io.kestra.core.tasks.debugs.Return\n        format: "{{task.id}} > {{taskrun.startDate}}"\n      - id: 2nd\n        type: io.kestra.core.tasks.debugs.Return\n        format: "{{task.id}} > {{taskrun.id}}"\n  - id: last\n    type: io.kestra.core.tasks.debugs.Return\n    format: "{{task.id}} > {{taskrun.startDate}}"\n\n\nSequential Task documentation\n\n\n# Parallel\n\nThis flow processes tasks in parallel. It makes it convenient to process many tasks at once.\n\nid: parallel\nnamespace: io.kestra.tests\n\ntasks:\n  - id: parallel\n    type: io.kestra.core.tasks.flows.Parallel\n    tasks:\n      - id: 1st\n        type: io.kestra.core.tasks.debugs.Return\n        format: "{{task.id}} > {{taskrun.startDate}}"\n      - id: 2nd\n        type: io.kestra.core.tasks.debugs.Return\n        format: "{{task.id}} > {{taskrun.id}}"\n  - id: last\n    type: io.kestra.core.tasks.debugs.Return\n    format: "{{task.id}} > {{taskrun.startDate}}"\n\n\nParallel Task documentation\n\n\n# Switch\n\nThis flow processes some tasks conditionally depending on a contextual value.\nIn this case, an input value will trigger only some parts of the flow.\n\nid: switch\nnamespace: io.kestra.tests\n\ninputs:\n  - name: string\n    type: STRING\n    required: true\n\ntasks:\n  - id: switch\n    type: io.kestra.core.tasks.flows.Switch\n    value: "{{inputs.string}}"\n    cases:\n      FIRST:\n        - id: 1st\n          type: io.kestra.core.tasks.debugs.Return\n          format: "{{task.id}} > {{taskrun.startDate}}"\n      SECOND:\n        - id: 2nd\n          type: io.kestra.core.tasks.debugs.Return\n          format: "{{task.id}} > {{taskrun.startDate}}"\n      THIRD:\n        - id: 3th\n          type: io.kestra.core.tasks.debugs.Return\n          format: "{{task.id}} > {{taskrun.startDate}}"\n    defaults:\n      - id: default\n        type: io.kestra.core.tasks.debugs.Return\n        format: "{{task.id}} > {{taskrun.startDate}}"\n\n\nSwitch Task documentation\n\n\n# EachSequential\n\nThis flow will generate many tasks at runtime depending on a value field.\nHere this field is static, but the field can be generated from a previous task output and\ntrigger an arbitrary number of subtasks. Each subtask will run after the others sequentially.\n\nid: each\nnamespace: io.kestra.tests\n\ntasks:\n  - id: each\n    type: io.kestra.core.tasks.flows.EachSequential\n    value: \'["value 1", "value 2", "value 3"]\'\n    tasks:\n      - id: 1st\n        type: io.kestra.core.tasks.debugs.Return\n        format: "{{task.id}} > {{taskrun.value}} > {{taskrun.startDate}}"\n      - id: 2nd\n        type: io.kestra.core.tasks.debugs.Return\n        format: "{{task.id}} > {{taskrun.value}} > {{taskrun.startDate}}"\n  - id: last\n    type: io.kestra.core.tasks.debugs.Return\n    format: "{{task.id}} > {{taskrun.startDate}}"\n\n\nEachSequential Task documentation\n\n\n# EachParallel\n\nThis flow is the same as EachSequential but each subtask will instead run in parallel.\n\nid: each-parallel\nnamespace: io.kestra.tests\n\ntasks:\n  - id: 1_each\n    type: io.kestra.core.tasks.flows.EachParallel\n    value: \'["value 1", "value 2", "value 3"]\'\n    tasks:\n      - id: 1-1\n        type: io.kestra.core.tasks.scripts.Bash\n        commands:\n          - \'echo "{{task.id}} > $(date +"%T.%N")"\'\n          - \'sleep 1\'\n      - id: 1-2\n        type: io.kestra.core.tasks.scripts.Bash\n        commands:\n          - \'echo "{{task.id}} > $(date +"%T.%N")"\'\n          - \'sleep 1\'\n  - id: 2_end\n    type: io.kestra.core.tasks.debugs.Return\n    format: "{{task.id}} > {{taskrun.startDate}}"\n\n\nEachParallel Task documentation\n\n\n# AllowFailure\n\nThis task will allow a failed child task. If any child task fails:\n\n * The AllowFailure failed task will be marked as a WARNING\n * All children tasks inside the AllowFailure will be stopped immediately.\n * The Execution will continue for all others tasks.\n * At the end, the execution as a whole will be also marked as status WARNING\n\nIn this example:\n\n * allow-failure will be labelled WARNING\n * ko will be labelled as FAILED\n * next will not be run\n * end will be run and labelled SUCCESS\n\nid: each\nnamespace: io.kestra.tests\n\ntasks:\n  - id: allow-failure\n    type: io.kestra.core.tasks.flows.AllowFailure\n    tasks:\n      - id: ko\n        type: io.kestra.core.tasks.scripts.Bash\n        commands:\n          - \'exit 1\'\n      - id: next\n        type: io.kestra.core.tasks.debugs.Return\n        format: "{{task.id}} > {{taskrun.startDate}}"\n  - id: end\n    type: io.kestra.core.tasks.debugs.Return\n    format: "{{task.id}} > {{taskrun.startDate}}"\n\n\nAllowFailure Task documentation\n\n\n# Flow\n\nThis flow will trigger another one.\nThis allows you to decouple the first flow from the second and to monitor each flow individually.\n\nYou can pass outputs to the trigger flow as inputs (that must be declared in the subflow).\n\nid: subflow\nnamespace: io.kestra.tests\n\ntasks:\n  - id: "subflow"\n    type: io.kestra.core.tasks.flows.Flow\n    namespace: io.kestra.tests\n    flowId: my-sub-flows\n    inputs:\n      file: "{{ inputs.myFile\' }}"\n      store: 12\n\n\nFlow Task documentation\n\n\n# Worker\n\nBy default, Kestra will launch each task on a fresh filesystem and on a new worker instance.\n\nThis task will run sequentially keeping the same filesystem allowing reuse previous task file on next tasks and keep tracking of execution time for each task. This task is mostly useful when working with large filesystem operation.\n\nid: worker\nnamespace: io.kestra.tests\n\ntasks:\n  - id: worker\n    type: io.kestra.core.tasks.flows.Worker\n    tasks:\n      - id: first\n        type: io.kestra.core.tasks.scripts.Bash\n        commands:\n          - \'echo "{{ taskrun.id }}" > {{ workingDir }}/stay.txt\'\n      - id: second\n        type: io.kestra.core.tasks.scripts.Bash\n        commands:\n          - |\n            echo \'::{"outputs": {"stay":"\'$(cat {{ workingDir }}/stay.txt)\'"}}::\'\n\n\nWorker Task documentation\n\n\n# Pause\n\nKestra flow run task till the end of all task, but sometime, you need :\n\n * add a manual validation before continue the execution\n * wait some duration before continue the execution\n\nid: pause\nnamespace: io.kestra.tests\n\ntasks:\n  - id: validation\n    type: io.kestra.core.tasks.flows.Pause\n    tasks:\n      - id: ok\n        type: io.kestra.core.tasks.scripts.Bash\n        commands:\n          - \'echo "started after manual validation"\'\n  - id: wait\n    type: io.kestra.core.tasks.flows.Pause\n    delay: PT5M\n    tasks:\n      - id: waited\n        type: io.kestra.core.tasks.scripts.Bash\n        commands:\n          - \'echo "start after 5 minutes"\'\n\n\nPause Task documentation\n\n\n# Templates\n\nTemplates are special tasks that will include tasks from a template at runtime.\nYou defined the template and can now use it on every flow you want, allowing it to share the common tasks between your flows.\n\nid: template\nnamespace: io.kestra.tests\n\ntasks:\n  - id: template\n    type: io.kestra.core.tasks.flows.Template\n    namespace: io.kestra.tests\n    templateId: template\n\n\nTemplate Task documentation',normalizedContent:'# flowable task\n\nin kestra, we orchestrate your workflows using flowable tasks. these tasks do not compute anything, but allow you to build more complex workflows.\nflowable tasks are used for things like branching, doing tasks in parallel, etc...\n\nflowable tasks mostly use context with variables in order to define the next tasks.\nfor example, you can use the outputs of a variable to run a switch task to move to the next defined task.\n\nhere is the current list of flowable tasks:\n\n\n# sequential\n\nthis flow processes tasks one after another sequentially. it is mostly used in order to group tasks.\n\nid: sequential\nnamespace: io.kestra.tests\n\ntasks:\n  - id: sequential\n    type: io.kestra.core.tasks.flows.sequential\n    tasks:\n      - id: 1st\n        type: io.kestra.core.tasks.debugs.return\n        format: "{{task.id}} > {{taskrun.startdate}}"\n      - id: 2nd\n        type: io.kestra.core.tasks.debugs.return\n        format: "{{task.id}} > {{taskrun.id}}"\n  - id: last\n    type: io.kestra.core.tasks.debugs.return\n    format: "{{task.id}} > {{taskrun.startdate}}"\n\n\nsequential task documentation\n\n\n# parallel\n\nthis flow processes tasks in parallel. it makes it convenient to process many tasks at once.\n\nid: parallel\nnamespace: io.kestra.tests\n\ntasks:\n  - id: parallel\n    type: io.kestra.core.tasks.flows.parallel\n    tasks:\n      - id: 1st\n        type: io.kestra.core.tasks.debugs.return\n        format: "{{task.id}} > {{taskrun.startdate}}"\n      - id: 2nd\n        type: io.kestra.core.tasks.debugs.return\n        format: "{{task.id}} > {{taskrun.id}}"\n  - id: last\n    type: io.kestra.core.tasks.debugs.return\n    format: "{{task.id}} > {{taskrun.startdate}}"\n\n\nparallel task documentation\n\n\n# switch\n\nthis flow processes some tasks conditionally depending on a contextual value.\nin this case, an input value will trigger only some parts of the flow.\n\nid: switch\nnamespace: io.kestra.tests\n\ninputs:\n  - name: string\n    type: string\n    required: true\n\ntasks:\n  - id: switch\n    type: io.kestra.core.tasks.flows.switch\n    value: "{{inputs.string}}"\n    cases:\n      first:\n        - id: 1st\n          type: io.kestra.core.tasks.debugs.return\n          format: "{{task.id}} > {{taskrun.startdate}}"\n      second:\n        - id: 2nd\n          type: io.kestra.core.tasks.debugs.return\n          format: "{{task.id}} > {{taskrun.startdate}}"\n      third:\n        - id: 3th\n          type: io.kestra.core.tasks.debugs.return\n          format: "{{task.id}} > {{taskrun.startdate}}"\n    defaults:\n      - id: default\n        type: io.kestra.core.tasks.debugs.return\n        format: "{{task.id}} > {{taskrun.startdate}}"\n\n\nswitch task documentation\n\n\n# eachsequential\n\nthis flow will generate many tasks at runtime depending on a value field.\nhere this field is static, but the field can be generated from a previous task output and\ntrigger an arbitrary number of subtasks. each subtask will run after the others sequentially.\n\nid: each\nnamespace: io.kestra.tests\n\ntasks:\n  - id: each\n    type: io.kestra.core.tasks.flows.eachsequential\n    value: \'["value 1", "value 2", "value 3"]\'\n    tasks:\n      - id: 1st\n        type: io.kestra.core.tasks.debugs.return\n        format: "{{task.id}} > {{taskrun.value}} > {{taskrun.startdate}}"\n      - id: 2nd\n        type: io.kestra.core.tasks.debugs.return\n        format: "{{task.id}} > {{taskrun.value}} > {{taskrun.startdate}}"\n  - id: last\n    type: io.kestra.core.tasks.debugs.return\n    format: "{{task.id}} > {{taskrun.startdate}}"\n\n\neachsequential task documentation\n\n\n# eachparallel\n\nthis flow is the same as eachsequential but each subtask will instead run in parallel.\n\nid: each-parallel\nnamespace: io.kestra.tests\n\ntasks:\n  - id: 1_each\n    type: io.kestra.core.tasks.flows.eachparallel\n    value: \'["value 1", "value 2", "value 3"]\'\n    tasks:\n      - id: 1-1\n        type: io.kestra.core.tasks.scripts.bash\n        commands:\n          - \'echo "{{task.id}} > $(date +"%t.%n")"\'\n          - \'sleep 1\'\n      - id: 1-2\n        type: io.kestra.core.tasks.scripts.bash\n        commands:\n          - \'echo "{{task.id}} > $(date +"%t.%n")"\'\n          - \'sleep 1\'\n  - id: 2_end\n    type: io.kestra.core.tasks.debugs.return\n    format: "{{task.id}} > {{taskrun.startdate}}"\n\n\neachparallel task documentation\n\n\n# allowfailure\n\nthis task will allow a failed child task. if any child task fails:\n\n * the allowfailure failed task will be marked as a warning\n * all children tasks inside the allowfailure will be stopped immediately.\n * the execution will continue for all others tasks.\n * at the end, the execution as a whole will be also marked as status warning\n\nin this example:\n\n * allow-failure will be labelled warning\n * ko will be labelled as failed\n * next will not be run\n * end will be run and labelled success\n\nid: each\nnamespace: io.kestra.tests\n\ntasks:\n  - id: allow-failure\n    type: io.kestra.core.tasks.flows.allowfailure\n    tasks:\n      - id: ko\n        type: io.kestra.core.tasks.scripts.bash\n        commands:\n          - \'exit 1\'\n      - id: next\n        type: io.kestra.core.tasks.debugs.return\n        format: "{{task.id}} > {{taskrun.startdate}}"\n  - id: end\n    type: io.kestra.core.tasks.debugs.return\n    format: "{{task.id}} > {{taskrun.startdate}}"\n\n\nallowfailure task documentation\n\n\n# flow\n\nthis flow will trigger another one.\nthis allows you to decouple the first flow from the second and to monitor each flow individually.\n\nyou can pass outputs to the trigger flow as inputs (that must be declared in the subflow).\n\nid: subflow\nnamespace: io.kestra.tests\n\ntasks:\n  - id: "subflow"\n    type: io.kestra.core.tasks.flows.flow\n    namespace: io.kestra.tests\n    flowid: my-sub-flows\n    inputs:\n      file: "{{ inputs.myfile\' }}"\n      store: 12\n\n\nflow task documentation\n\n\n# worker\n\nby default, kestra will launch each task on a fresh filesystem and on a new worker instance.\n\nthis task will run sequentially keeping the same filesystem allowing reuse previous task file on next tasks and keep tracking of execution time for each task. this task is mostly useful when working with large filesystem operation.\n\nid: worker\nnamespace: io.kestra.tests\n\ntasks:\n  - id: worker\n    type: io.kestra.core.tasks.flows.worker\n    tasks:\n      - id: first\n        type: io.kestra.core.tasks.scripts.bash\n        commands:\n          - \'echo "{{ taskrun.id }}" > {{ workingdir }}/stay.txt\'\n      - id: second\n        type: io.kestra.core.tasks.scripts.bash\n        commands:\n          - |\n            echo \'::{"outputs": {"stay":"\'$(cat {{ workingdir }}/stay.txt)\'"}}::\'\n\n\nworker task documentation\n\n\n# pause\n\nkestra flow run task till the end of all task, but sometime, you need :\n\n * add a manual validation before continue the execution\n * wait some duration before continue the execution\n\nid: pause\nnamespace: io.kestra.tests\n\ntasks:\n  - id: validation\n    type: io.kestra.core.tasks.flows.pause\n    tasks:\n      - id: ok\n        type: io.kestra.core.tasks.scripts.bash\n        commands:\n          - \'echo "started after manual validation"\'\n  - id: wait\n    type: io.kestra.core.tasks.flows.pause\n    delay: pt5m\n    tasks:\n      - id: waited\n        type: io.kestra.core.tasks.scripts.bash\n        commands:\n          - \'echo "start after 5 minutes"\'\n\n\npause task documentation\n\n\n# templates\n\ntemplates are special tasks that will include tasks from a template at runtime.\nyou defined the template and can now use it on every flow you want, allowing it to share the common tasks between your flows.\n\nid: template\nnamespace: io.kestra.tests\n\ntasks:\n  - id: template\n    type: io.kestra.core.tasks.flows.template\n    namespace: io.kestra.tests\n    templateid: template\n\n\ntemplate task documentation',charsets:{cjk:!0}},{title:"Helpers",frontmatter:{order:10,meta:[{property:"article:modified_time",content:"2021-03-26T21:33:01.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Helpers"},{property:"og:description",content:"Helpers | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/helpers/"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Helpers"},{name:"twitter:description",content:"Helpers | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/helpers/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/helpers/",relativePath:"docs/developer-guide/helpers/README.md",key:"v-7db39c08",path:"/docs/developer-guide/helpers/",headers:[{level:2,title:"Expand the flow to be uploaded to the server",slug:"expand-the-flow-to-be-uploaded-to-the-server",normalizedTitle:"expand the flow to be uploaded to the server",charIndex:270},{level:2,title:"[[> file.txt]]: Include another file",slug:"file-txt-include-another-file",normalizedTitle:"[[&gt; file.txt]]: include another file",charIndex:null}],lastUpdated:"3/26/2021, 9:33:01 PM",lastUpdatedTimestamp:1616794381e3,headersStr:"Expand the flow to be uploaded to the server [[> file.txt]]: Include another file",content:"# Helpers\n\nKestra have some helpers function that can help during flow development.\n\nWARNING\n\nThese helpers are only available during flow development in order to test on your local installation.\nYou must expand the flow definition before sending it to your server.\n\n\n# Expand the flow to be uploaded to the server\n\nThere is a convient task on Kestra executable that allow validation of the current flow and\nwill output the expanded version of your flow without any helper :\n\n./kestra flow validate path-to-your-flow.yaml \n\n\n\n# [[> file.txt]]: Include another file\n\nWhen doing a large flow, the flow can be messy when a lot of tasks are defined and\nspecially when you have some big text inside the flow (example, sql statement, ...).\n\nLet's take an example :\n\nid: include\nnamespace: io.kestra.tests\n\ntasks:\n- id: t1\n  type: io.kestra.core.tasks.debugs.Return\n  format: |\n    Lorem Ipsum is simply dummy text of the printing \n    .....\n    500 lines later\n\n\nYou can replace the flow with this one :\n\nid: include\nnamespace: io.kestra.tests\n\ntasks:\n- id: t1\n  type: io.kestra.core.tasks.debugs.Return\n  format: \"[[> lorem.txt]]\"\n\n\nand have a local file lorem.txt with the large content.\n\nThe path can be :\n\n * [[> lorem.txt]]: a relative path from the flow (flow.yaml & lorem.txt are on the same directory)\n * [[> /path/to/lorem.txt]]: an absolute path\n * [[> path/to/lorem.txt]]: a relative path from the flow (flow.yaml with a subdirectory path/to/)\n\nWARNING\n\nIncludes are resolved recursively, so you can include a file from another include.\nSince this allow more complex things, you need to take care that included files don't contain [[ .. ]] . If you need to have the character in included files escape it with \\[[ ...]] !",normalizedContent:"# helpers\n\nkestra have some helpers function that can help during flow development.\n\nwarning\n\nthese helpers are only available during flow development in order to test on your local installation.\nyou must expand the flow definition before sending it to your server.\n\n\n# expand the flow to be uploaded to the server\n\nthere is a convient task on kestra executable that allow validation of the current flow and\nwill output the expanded version of your flow without any helper :\n\n./kestra flow validate path-to-your-flow.yaml \n\n\n\n# [[> file.txt]]: include another file\n\nwhen doing a large flow, the flow can be messy when a lot of tasks are defined and\nspecially when you have some big text inside the flow (example, sql statement, ...).\n\nlet's take an example :\n\nid: include\nnamespace: io.kestra.tests\n\ntasks:\n- id: t1\n  type: io.kestra.core.tasks.debugs.return\n  format: |\n    lorem ipsum is simply dummy text of the printing \n    .....\n    500 lines later\n\n\nyou can replace the flow with this one :\n\nid: include\nnamespace: io.kestra.tests\n\ntasks:\n- id: t1\n  type: io.kestra.core.tasks.debugs.return\n  format: \"[[> lorem.txt]]\"\n\n\nand have a local file lorem.txt with the large content.\n\nthe path can be :\n\n * [[> lorem.txt]]: a relative path from the flow (flow.yaml & lorem.txt are on the same directory)\n * [[> /path/to/lorem.txt]]: an absolute path\n * [[> path/to/lorem.txt]]: a relative path from the flow (flow.yaml with a subdirectory path/to/)\n\nwarning\n\nincludes are resolved recursively, so you can include a file from another include.\nsince this allow more complex things, you need to take care that included files don't contain [[ .. ]] . if you need to have the character in included files escape it with \\[[ ...]] !",charsets:{cjk:!0}},{title:"Inputs",frontmatter:{order:3,meta:[{property:"article:modified_time",content:"2022-10-02T21:05:23.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Inputs"},{property:"og:description",content:"Inputs | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/inputs/"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Inputs"},{name:"twitter:description",content:"Inputs | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/inputs/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/inputs/",relativePath:"docs/developer-guide/inputs/README.md",key:"v-019a6270",path:"/docs/developer-guide/inputs/",headers:[{level:2,title:"Declaring inputs",slug:"declaring-inputs",normalizedTitle:"declaring inputs",charIndex:323},{level:2,title:"Input types",slug:"input-types",normalizedTitle:"input types",charIndex:1621},{level:3,title:"STRING",slug:"string",normalizedTitle:"string",charIndex:896},{level:3,title:"INT",slug:"int",normalizedTitle:"int",charIndex:983},{level:3,title:"FLOAT",slug:"float",normalizedTitle:"float",charIndex:1046},{level:3,title:"BOOLEAN",slug:"boolean",normalizedTitle:"boolean",charIndex:1012},{level:3,title:"DATETIME",slug:"datetime",normalizedTitle:"datetime",charIndex:1080},{level:3,title:"DATE",slug:"date",normalizedTitle:"date",charIndex:1080},{level:3,title:"TIME",slug:"time",normalizedTitle:"time",charIndex:1084},{level:3,title:"DURATION",slug:"duration",normalizedTitle:"duration",charIndex:1178},{level:3,title:"FILE",slug:"file",normalizedTitle:"file",charIndex:1212},{level:3,title:"JSON",slug:"json",normalizedTitle:"json",charIndex:1382},{level:3,title:"URI",slug:"uri",normalizedTitle:"uri",charIndex:1411},{level:2,title:"Input properties",slug:"input-properties",normalizedTitle:"input properties",charIndex:2810},{level:3,title:"name",slug:"name",normalizedTitle:"name",charIndex:834},{level:3,title:"required",slug:"required",normalizedTitle:"required",charIndex:412},{level:3,title:"defaults",slug:"defaults",normalizedTitle:"defaults",charIndex:1324},{level:3,title:"description",slug:"description",normalizedTitle:"description",charIndex:3159},{level:2,title:"Nested Inputs",slug:"nested-inputs",normalizedTitle:"nested inputs",charIndex:3232},{level:2,title:"Using input value in flow",slug:"using-input-value-in-flow",normalizedTitle:"using input value in flow",charIndex:3620},{level:2,title:"Send inputs programmatically",slug:"send-inputs-programmatically",normalizedTitle:"send inputs programmatically",charIndex:3932},{level:2,title:"Send inputs via WebUI",slug:"send-inputs-via-webui",normalizedTitle:"send inputs via webui",charIndex:5127}],lastUpdated:"10/2/2022, 9:05:23 PM",lastUpdatedTimestamp:1664744723e3,headersStr:"Declaring inputs Input types STRING INT FLOAT BOOLEAN DATETIME DATE TIME DURATION FILE JSON URI Input properties name required defaults description Nested Inputs Using input value in flow Send inputs programmatically Send inputs via WebUI",content:'# Inputs\n\nKestra\'s flow can be parameterized using inputs. Inputs will be available in variable context and can be used during the whole flow, in order to customize it depending on inputs.\n\nA good example is when an identifier is needed (ex: storeId, paymentId) in order to change the save path for the uploaded files.\n\n\n# Declaring inputs\n\nYou can declare as many inputs as necessary for any flow. Input can be required or not.\nIf the input is required, the flow cannot start if the input is not provided during the creation of the execution.\nAlso, every input will be parsed during the creation of the execution and any invalid inputs will cause a refusal to create the execution.\n\nWARNING\n\nIf the execution is not created due to invalid or missing inputs, no execution will be found on the executions list.\n\nExamples:\n\nid: my-flow\nnamespace: io.kestra.docs\n\ninputs:\n  - name: string\n    type: STRING\n  - name: optional\n    type: STRING\n    required: false\n  - name: int\n    type: INT\n  - name: bool\n    type: BOOLEAN\n  - name: float\n    type: FLOAT\n  - name: instant\n    type: DATETIME\n  - name: date\n    type: DATE\n  - name: time\n    type: TIME\n  - name: duration\n    type: DURATION\n  - name: file\n    type: FILE\n  - name: optionalFile\n    type: FILE\n    required: false\n  - name: instantDefaults\n    type: DATETIME\n    defaults: "2013-08-09T14:19:00Z"\n  - name: json\n    type: JSON\n  - name: uri\n    type: URI\n    required: false\n  - name: nested.string\n    type: STRING\n    required: false\n  - name: nested.more.int\n    type: INT\n    required: false\n  - name: nested.bool\n    type: BOOLEAN\n    required: false\n\n\n\n# Input types\n\nThe available input fields available are as follows:\n\n\n# STRING\n\nNo control is done on this input type (no parsing), can be any string.\n\n\n# INT\n\nMust be a valid integer (without any decimals).\n\n\n# FLOAT\n\nMust be a valid float (with any decimals).\n\n\n# BOOLEAN\n\nMust be a valid true or false as string.\n\n\n# DATETIME\n\nMust be a valid full ISO 8601 datetime with the timezone expressed in UTC from a text string such as\n2007-12-03T10:15:30.00Z.\n\n\n# DATE\n\nMust be a valid full ISO 8601 date without the timezone from a text string such as 2007-12-03.\n\n\n# TIME\n\nMust be a valid full ISO 8601 time without the timezone from a text string such as 10:15:30.\n\n\n# DURATION\n\nMust be a valid full ISO 8601 duration from a text string such as PT5M6S.\n\n\n# FILE\n\nMust be a file sent with multipart/form-data. All the files are automatically uploaded to Storage and are available for further tasks. The return will be a fully qualified url with the form kestra:///.../.../. Kestra is able to handle this url and this input can be passed as is to task.\n\n\n# JSON\n\nMust be a valid json as string and will be converted to typed form.\n\n\n# URI\n\nMust be a valid uri and will be kept as a string.\n\n\n# Input properties\n\nThese are the properties available for all input types :\n\n\n# name\n\nThe input name to be used with vars {{ inputs.my-name }}\n\n\n# required\n\nIf the input is required. If required, no defaults value and no input provide, the execution will not be created.\n\n\n# defaults\n\nThe default value if no input is provided. Must be a string.\n\n\n# description\n\nA markdown description in order to document the inputs.\n\n\n# Nested Inputs\n\nIf you use a . inside the name of the inputs, the input will be nested. For example, when you declated the input with:\n\n  - name: nested.string\n    type: STRING\n    required: false\n\n\nYou can reach this input with: {{ inputs.nested.string }}. This is a convenient way to handle strong typing on input (with validation) without using raw JSON that will not be validated.\n\n\n# Using input value in flow\n\nEvery input is available with dynamic variables such as: {{ inputs.NAME }}.\n\nFor example, if you declare your input :\n\ninputs:\n  - name: my-file\n    type: FILE\n  - name: my-value\n    type: STRING\n    required: true\n\n\nYou can use the value of the inputs with {{ inputs.my-value }}.\n\n\n# Send inputs programmatically\n\nThe flow my-flow above can be triggered programmatically. Here is an example with curl:\n\ncurl -v "http://kestra:8080/api/v1/executions/trigger/io.kestra.docs/my-flow" \\\n    -H "Transfer-Encoding:chunked" \\\n    -H "Content-Type:multipart/form-data" \\\n    -F string="a string"  \\\n    -F optional="an optionnal string"  \\\n    -F int=1  \\\n    -F float=1.255  \\\n    -F instant=2020-01-14T23:00:00.000Z \\\n    -F "files=@/tmp/128M.txt;filename=my-file"\n\n\nAll files must be sent in the form of data files with a header filename=my-file, which will be the name of the input.\n\nHere is an example with python:\n\nimport io\nimport requests\nfrom requests_toolbelt.multipart.encoder import MultipartEncoder\n\nwith open("/tmp/128M.txt", \'rb\') as fh:\n  url = f"http://kestra:8080/api/v1/executions/trigger/io.kestra.docs/my-flow"\n  mp_encoder = MultipartEncoder(fields={\n    "string": "a string",\n    "optional": "an optionnal string",\n    "int": 1,\n    "float": 1.255,\n    "instant": "2020-01-14T23:00:00.000Z",\n    "files": ("file", fh, "text/plain")\n  })\n  result = requests.post(\n      url,\n      data=mp_encoder,\n      headers={"Content-Type": mp_encoder.content_type},\n  )\n\n\n\n# Send inputs via WebUI\n\nWith such a flow, the web ui lets you enter some inputs by generating a form accordingly on the flow > trigger view. The input form for the task above looks like below:\n\n\n\nOnce the inputs are provided, you can trigger an execution flow that will run with contextual inputs as variables.',normalizedContent:'# inputs\n\nkestra\'s flow can be parameterized using inputs. inputs will be available in variable context and can be used during the whole flow, in order to customize it depending on inputs.\n\na good example is when an identifier is needed (ex: storeid, paymentid) in order to change the save path for the uploaded files.\n\n\n# declaring inputs\n\nyou can declare as many inputs as necessary for any flow. input can be required or not.\nif the input is required, the flow cannot start if the input is not provided during the creation of the execution.\nalso, every input will be parsed during the creation of the execution and any invalid inputs will cause a refusal to create the execution.\n\nwarning\n\nif the execution is not created due to invalid or missing inputs, no execution will be found on the executions list.\n\nexamples:\n\nid: my-flow\nnamespace: io.kestra.docs\n\ninputs:\n  - name: string\n    type: string\n  - name: optional\n    type: string\n    required: false\n  - name: int\n    type: int\n  - name: bool\n    type: boolean\n  - name: float\n    type: float\n  - name: instant\n    type: datetime\n  - name: date\n    type: date\n  - name: time\n    type: time\n  - name: duration\n    type: duration\n  - name: file\n    type: file\n  - name: optionalfile\n    type: file\n    required: false\n  - name: instantdefaults\n    type: datetime\n    defaults: "2013-08-09t14:19:00z"\n  - name: json\n    type: json\n  - name: uri\n    type: uri\n    required: false\n  - name: nested.string\n    type: string\n    required: false\n  - name: nested.more.int\n    type: int\n    required: false\n  - name: nested.bool\n    type: boolean\n    required: false\n\n\n\n# input types\n\nthe available input fields available are as follows:\n\n\n# string\n\nno control is done on this input type (no parsing), can be any string.\n\n\n# int\n\nmust be a valid integer (without any decimals).\n\n\n# float\n\nmust be a valid float (with any decimals).\n\n\n# boolean\n\nmust be a valid true or false as string.\n\n\n# datetime\n\nmust be a valid full iso 8601 datetime with the timezone expressed in utc from a text string such as\n2007-12-03t10:15:30.00z.\n\n\n# date\n\nmust be a valid full iso 8601 date without the timezone from a text string such as 2007-12-03.\n\n\n# time\n\nmust be a valid full iso 8601 time without the timezone from a text string such as 10:15:30.\n\n\n# duration\n\nmust be a valid full iso 8601 duration from a text string such as pt5m6s.\n\n\n# file\n\nmust be a file sent with multipart/form-data. all the files are automatically uploaded to storage and are available for further tasks. the return will be a fully qualified url with the form kestra:///.../.../. kestra is able to handle this url and this input can be passed as is to task.\n\n\n# json\n\nmust be a valid json as string and will be converted to typed form.\n\n\n# uri\n\nmust be a valid uri and will be kept as a string.\n\n\n# input properties\n\nthese are the properties available for all input types :\n\n\n# name\n\nthe input name to be used with vars {{ inputs.my-name }}\n\n\n# required\n\nif the input is required. if required, no defaults value and no input provide, the execution will not be created.\n\n\n# defaults\n\nthe default value if no input is provided. must be a string.\n\n\n# description\n\na markdown description in order to document the inputs.\n\n\n# nested inputs\n\nif you use a . inside the name of the inputs, the input will be nested. for example, when you declated the input with:\n\n  - name: nested.string\n    type: string\n    required: false\n\n\nyou can reach this input with: {{ inputs.nested.string }}. this is a convenient way to handle strong typing on input (with validation) without using raw json that will not be validated.\n\n\n# using input value in flow\n\nevery input is available with dynamic variables such as: {{ inputs.name }}.\n\nfor example, if you declare your input :\n\ninputs:\n  - name: my-file\n    type: file\n  - name: my-value\n    type: string\n    required: true\n\n\nyou can use the value of the inputs with {{ inputs.my-value }}.\n\n\n# send inputs programmatically\n\nthe flow my-flow above can be triggered programmatically. here is an example with curl:\n\ncurl -v "http://kestra:8080/api/v1/executions/trigger/io.kestra.docs/my-flow" \\\n    -h "transfer-encoding:chunked" \\\n    -h "content-type:multipart/form-data" \\\n    -f string="a string"  \\\n    -f optional="an optionnal string"  \\\n    -f int=1  \\\n    -f float=1.255  \\\n    -f instant=2020-01-14t23:00:00.000z \\\n    -f "files=@/tmp/128m.txt;filename=my-file"\n\n\nall files must be sent in the form of data files with a header filename=my-file, which will be the name of the input.\n\nhere is an example with python:\n\nimport io\nimport requests\nfrom requests_toolbelt.multipart.encoder import multipartencoder\n\nwith open("/tmp/128m.txt", \'rb\') as fh:\n  url = f"http://kestra:8080/api/v1/executions/trigger/io.kestra.docs/my-flow"\n  mp_encoder = multipartencoder(fields={\n    "string": "a string",\n    "optional": "an optionnal string",\n    "int": 1,\n    "float": 1.255,\n    "instant": "2020-01-14t23:00:00.000z",\n    "files": ("file", fh, "text/plain")\n  })\n  result = requests.post(\n      url,\n      data=mp_encoder,\n      headers={"content-type": mp_encoder.content_type},\n  )\n\n\n\n# send inputs via webui\n\nwith such a flow, the web ui lets you enter some inputs by generating a form accordingly on the flow > trigger view. the input form for the task above looks like below:\n\n\n\nonce the inputs are provided, you can trigger an execution flow that will run with contextual inputs as variables.',charsets:{}},{title:"Listeners",frontmatter:{order:8,meta:[{property:"article:modified_time",content:"2022-04-10T20:42:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Listeners"},{property:"og:description",content:"Listeners | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/listeners/"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Listeners"},{name:"twitter:description",content:"Listeners | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/listeners/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/listeners/",relativePath:"docs/developer-guide/listeners/README.md",key:"v-a824f470",path:"/docs/developer-guide/listeners/",headers:[{level:2,title:"Example",slug:"example",normalizedTitle:"example",charIndex:335},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:736},{level:3,title:"conditions",slug:"conditions",normalizedTitle:"conditions",charIndex:610},{level:3,title:"tasks",slug:"tasks",normalizedTitle:"tasks",charIndex:35},{level:3,title:"description",slug:"description",normalizedTitle:"description",charIndex:1353}],lastUpdated:"4/10/2022, 8:42:57 PM",lastUpdatedTimestamp:1649623377e3,headersStr:"Example Properties conditions tasks description",content:"# Listeners\n\nListeners are special tasks that can listen to the current flow and launch tasks from outside the flow.\nThe result of the tasks will not change the execution status. In most cases, Listeners are used to send notifications or handle special end-task behavior that should not be considered as part of the main workflow.\n\n\n# Example\n\n> A listener that sends a Slack notification for a failed task (this would require slack plugins).\n\nlisteners:\n  - tasks:\n      - id: mail\n        type: org.kestra.task.notifications.slack.SlackExecution\n        url: https://hooks.slack.com/services/XXX/YYY/ZZZ\n    conditions:\n      - type: org.kestra.core.models.listeners.types.ExecutionStatusCondition\n        in:\n          - FAILED\n\n\n\n# Properties\n\n\n# conditions\n\n * Type: array\n * SubType: Condition\n * Required: ❌\n\n> A list of Conditions that must be validated in order to execute tasks. If you don't provide any conditions, the listeners will always be executed.\n\n\n# tasks\n\n * Type: array\n * SubType: Task\n * Required: ❌\n\n> A list of tasks that will be executed and the end of the flows. The status of these tasks will not impact the main execution and will not change the execution status even if they fail.\n> \n> You can use every tasks you need here, even Flowable\n> All task id must be unique for the whole flow even for main tasks and errors.\n\n\n# description\n\n * Type: string\n * Required: ❌\n\n> Description for documentation, more details here",normalizedContent:"# listeners\n\nlisteners are special tasks that can listen to the current flow and launch tasks from outside the flow.\nthe result of the tasks will not change the execution status. in most cases, listeners are used to send notifications or handle special end-task behavior that should not be considered as part of the main workflow.\n\n\n# example\n\n> a listener that sends a slack notification for a failed task (this would require slack plugins).\n\nlisteners:\n  - tasks:\n      - id: mail\n        type: org.kestra.task.notifications.slack.slackexecution\n        url: https://hooks.slack.com/services/xxx/yyy/zzz\n    conditions:\n      - type: org.kestra.core.models.listeners.types.executionstatuscondition\n        in:\n          - failed\n\n\n\n# properties\n\n\n# conditions\n\n * type: array\n * subtype: condition\n * required: ❌\n\n> a list of conditions that must be validated in order to execute tasks. if you don't provide any conditions, the listeners will always be executed.\n\n\n# tasks\n\n * type: array\n * subtype: task\n * required: ❌\n\n> a list of tasks that will be executed and the end of the flows. the status of these tasks will not impact the main execution and will not change the execution status even if they fail.\n> \n> you can use every tasks you need here, even flowable\n> all task id must be unique for the whole flow even for main tasks and errors.\n\n\n# description\n\n * type: string\n * required: ❌\n\n> description for documentation, more details here",charsets:{}},{title:"Outputs",frontmatter:{order:4,meta:[{property:"article:modified_time",content:"2022-04-22T11:55:56.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Outputs"},{property:"og:description",content:"Outputs | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/outputs/"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Outputs"},{name:"twitter:description",content:"Outputs | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/outputs/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/outputs/",relativePath:"docs/developer-guide/outputs/README.md",key:"v-92b626b0",path:"/docs/developer-guide/outputs/",headers:[{level:2,title:"Using outputs",slug:"using-outputs",normalizedTitle:"using outputs",charIndex:359},{level:2,title:"Dynamic variables",slug:"dynamic-variables",normalizedTitle:"dynamic variables",charIndex:1650},{level:3,title:"Specific outputs for dynamic tasks",slug:"specific-outputs-for-dynamic-tasks",normalizedTitle:"specific outputs for dynamic tasks",charIndex:2032}],lastUpdated:"4/22/2022, 11:55:56 AM",lastUpdatedTimestamp:1650628556e3,headersStr:"Using outputs Dynamic variables Specific outputs for dynamic tasks",content:'# Outputs\n\nKestra\'s flow can produce outputs when processing tasks. Output data is stored in execution flow context and can be handled and used by tasks next to the output producer task.\n\nYou can use outputs everywhere variables are allowed, so they can be used as next task values for iteration or conditional processing or even as extra output content.\n\n\n# Using outputs\n\nYou can declare as many outputs as desired for any flow. Outputs context variables are stored following each task declaration.\n\nHere how to use an output between tasks into a flow:\n\ntasks:\n- id: produceOutput\n  type: io.kestra.core.tasks.debugs.Return\n  format: my output {{ execution.id }}\n- id: use-output\n  type: io.kestra.core.tasks.debugs.Echo\n  format: This task display previous task output {{ outputs.produceOutput.value }}\n\n\nIn the example above the first task produces an output with the format of a yaml property. The ouput content is then used in the second task output formatting. Indeed, the use-output task uses the templating system {{ outputs.produce-output.value }} to reference the previous task output.\n\nUsing this template context variable interpolates the bracket reference with the entire output generated by the first task.\n\nnote\n\nThe .value in the template bracket that reaches another task\'s output content is a value that depends on what data is produced per value. In our case, for the Return task, the value content is filled with the output. It could be bq_table for another task implemented for BigQuery management. Have a look at each task documentation for specific information about what context variables are filled with ouput contents.\n\n\n# Dynamic variables\n\n# Current value\n\nYou can access the current value with {{ taskrun.value }} like this:\n\ntasks:\n  - id: each\n    type: io.kestra.core.tasks.flows.EachSequential\n    value: \'["value 1", "value 2", "value 3"]\'\n    tasks:\n      - id: inner\n        type: io.kestra.core.tasks.debugs.Return\n        format: "{{task.id}} > {{taskrun.value}} > {{taskrun.startDate}}"\n\n\n\n# Specific outputs for dynamic tasks\n\nAnother more specific case for output management is the runtime generated tasks output variable. This is the case for the EachSequential or EachParallel task, which produces other tasks dynamically, depending on it\'s value property. In this case it is possible to reach each iteration output individually using the following syntax:\n\nid: output-sample\nnamespace: io.kestra.tests\n\ntasks:\n  - id: each\n    type: io.kestra.core.tasks.flows.EachSequential\n    tasks:\n      - id: sub\n        type: io.kestra.core.tasks.debugs.Return\n        format: "{{ task.id }} > {{ taskrun.value }} > {{ taskrun.startDate }}"\n    value: "[\\"s1\\", \\"s2\\", \\"s3\\"]"\n  - id: use\n    type: io.kestra.core.tasks.debugs.Return\n    format: "Previous task produced output : {{ outputs.sub.s1.value }}"\n\n\nHere the outputs.1_1-produce_output.s1.a.value reach the first 1-output task element.\n\n# Previous task lookup\n\nIt is also possible to locate a special task by its value:\n\ntasks:\n  - id: each\n    type: io.kestra.core.tasks.flows.EachSequential\n    tasks:\n      - id: inner\n        type: io.kestra.core.tasks.debugs.Return\n        format: "{{ task.id }}"\n    value: "[\\"value 1\\", \\"value 2\\", \\"value 3\\"]"\n  - id: end\n    type: io.kestra.core.tasks.debugs.Return\n    format: "{{ task.id }} > {{ outputs.inner[\'value 1\'].value }}"\n\n\nwith the format outputs.TASKID.[VALUE].PROPERTY. The special bracket [] in .[VALUE]. enable special chars like space (and can be remove without any special characters)\n\n# Lookup in current childs tasks tree\n\nSometimes, it can be useful to access previous outputs on the current task tree. For example, on\nEachSequential\nyou iterate for a list of value, performing the first tasks (Download a file for example) and\nloading the previous files to a database.\n\nFor this, you can pass the taskrun.value to outputs object:\n\ntasks:\n  - id: each\n    type: io.kestra.core.tasks.flows.EachSequential\n    tasks:\n      - id: first\n        type: io.kestra.core.tasks.debugs.Return\n        format: "{{task.id}}"\n      - id: second\n        type: io.kestra.core.tasks.debugs.Return\n        format: "{{ outputs.first[taskrun.value].value }}"\n    value: "[\\"value 1\\", \\"value 2\\", \\"value 3\\"]"\n  - id: end\n    type: io.kestra.core.tasks.debugs.Return\n    format: "{{task.id}} > {{outputs.second[\'value 1\'].value}}"\n',normalizedContent:'# outputs\n\nkestra\'s flow can produce outputs when processing tasks. output data is stored in execution flow context and can be handled and used by tasks next to the output producer task.\n\nyou can use outputs everywhere variables are allowed, so they can be used as next task values for iteration or conditional processing or even as extra output content.\n\n\n# using outputs\n\nyou can declare as many outputs as desired for any flow. outputs context variables are stored following each task declaration.\n\nhere how to use an output between tasks into a flow:\n\ntasks:\n- id: produceoutput\n  type: io.kestra.core.tasks.debugs.return\n  format: my output {{ execution.id }}\n- id: use-output\n  type: io.kestra.core.tasks.debugs.echo\n  format: this task display previous task output {{ outputs.produceoutput.value }}\n\n\nin the example above the first task produces an output with the format of a yaml property. the ouput content is then used in the second task output formatting. indeed, the use-output task uses the templating system {{ outputs.produce-output.value }} to reference the previous task output.\n\nusing this template context variable interpolates the bracket reference with the entire output generated by the first task.\n\nnote\n\nthe .value in the template bracket that reaches another task\'s output content is a value that depends on what data is produced per value. in our case, for the return task, the value content is filled with the output. it could be bq_table for another task implemented for bigquery management. have a look at each task documentation for specific information about what context variables are filled with ouput contents.\n\n\n# dynamic variables\n\n# current value\n\nyou can access the current value with {{ taskrun.value }} like this:\n\ntasks:\n  - id: each\n    type: io.kestra.core.tasks.flows.eachsequential\n    value: \'["value 1", "value 2", "value 3"]\'\n    tasks:\n      - id: inner\n        type: io.kestra.core.tasks.debugs.return\n        format: "{{task.id}} > {{taskrun.value}} > {{taskrun.startdate}}"\n\n\n\n# specific outputs for dynamic tasks\n\nanother more specific case for output management is the runtime generated tasks output variable. this is the case for the eachsequential or eachparallel task, which produces other tasks dynamically, depending on it\'s value property. in this case it is possible to reach each iteration output individually using the following syntax:\n\nid: output-sample\nnamespace: io.kestra.tests\n\ntasks:\n  - id: each\n    type: io.kestra.core.tasks.flows.eachsequential\n    tasks:\n      - id: sub\n        type: io.kestra.core.tasks.debugs.return\n        format: "{{ task.id }} > {{ taskrun.value }} > {{ taskrun.startdate }}"\n    value: "[\\"s1\\", \\"s2\\", \\"s3\\"]"\n  - id: use\n    type: io.kestra.core.tasks.debugs.return\n    format: "previous task produced output : {{ outputs.sub.s1.value }}"\n\n\nhere the outputs.1_1-produce_output.s1.a.value reach the first 1-output task element.\n\n# previous task lookup\n\nit is also possible to locate a special task by its value:\n\ntasks:\n  - id: each\n    type: io.kestra.core.tasks.flows.eachsequential\n    tasks:\n      - id: inner\n        type: io.kestra.core.tasks.debugs.return\n        format: "{{ task.id }}"\n    value: "[\\"value 1\\", \\"value 2\\", \\"value 3\\"]"\n  - id: end\n    type: io.kestra.core.tasks.debugs.return\n    format: "{{ task.id }} > {{ outputs.inner[\'value 1\'].value }}"\n\n\nwith the format outputs.taskid.[value].property. the special bracket [] in .[value]. enable special chars like space (and can be remove without any special characters)\n\n# lookup in current childs tasks tree\n\nsometimes, it can be useful to access previous outputs on the current task tree. for example, on\neachsequential\nyou iterate for a list of value, performing the first tasks (download a file for example) and\nloading the previous files to a database.\n\nfor this, you can pass the taskrun.value to outputs object:\n\ntasks:\n  - id: each\n    type: io.kestra.core.tasks.flows.eachsequential\n    tasks:\n      - id: first\n        type: io.kestra.core.tasks.debugs.return\n        format: "{{task.id}}"\n      - id: second\n        type: io.kestra.core.tasks.debugs.return\n        format: "{{ outputs.first[taskrun.value].value }}"\n    value: "[\\"value 1\\", \\"value 2\\", \\"value 3\\"]"\n  - id: end\n    type: io.kestra.core.tasks.debugs.return\n    format: "{{task.id}} > {{outputs.second[\'value 1\'].value}}"\n',charsets:{}},{title:"Retries",frontmatter:{order:6,meta:[{property:"article:modified_time",content:"2022-04-10T20:41:58.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Retries"},{property:"og:description",content:"Retries | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/retries/"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Retries"},{name:"twitter:description",content:"Retries | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/retries/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/retries/",relativePath:"docs/developer-guide/retries/README.md",key:"v-7e6b41b0",path:"/docs/developer-guide/retries/",headers:[{level:2,title:"Example",slug:"example",normalizedTitle:"example",charIndex:192},{level:2,title:"Retry options for all type",slug:"retry-options-for-all-type",normalizedTitle:"retry options for all type",charIndex:496},{level:3,title:"Duration",slug:"duration",normalizedTitle:"duration",charIndex:780},{level:3,title:"Retry types",slug:"retry-types",normalizedTitle:"retry types",charIndex:1343}],lastUpdated:"4/10/2022, 8:41:58 PM",lastUpdatedTimestamp:1649623318e3,headersStr:"Example Retry options for all type Duration Retry types",content:"# Retries\n\nKestra provides a tasks retry feature. This sub-system makes it convenient to add retry behavior on failed executions, based on the retry configuration in the flow description.\n\n\n# Example\n\nBelow is a flow sample that executes a retry on a task failurefor a maximum of 5 times every 15 minutes:\n\n- id: retry-sample\n  type: io.kestra.core.tasks.debugs.Echo\n  format: my output for task {{task.id}}\n  timeout: PT10M\n  retry:\n    maxAttempt: 5\n    type: constant\n    interval: PT15M\n\n\n\n# Retry options for all type\n\nNAME             TYPE       DESCRIPTION\ntype             string     Retry behavior to apply. Can be one of constant,\n                            exponential, random.\nmaxAttempt       integer    Number of retries performed before the system stops retry.\nmaxDuration      Duration   Maximum delay the execution is retried. Once passed, the\n                            task is no more processed\nwarningOnRetry   Boolean    Flag the execution has warning if any retry was done on this\n                            tasks.\n\n\n# Duration\n\nSome options above have to be filled with a duration notation.\nDurations are expressed in ISO 8601 Durations\nand here are some examples :\n\nNAME       DESCRIPTION\nPT0.250S   250 milliseconds delay\nPT2S       2 seconds delay\nPT1M       1 minute delay\nPT3.5H     3 hours and a half delay\n\n\n# Retry types\n\n# constant\n\nThis establishes constant retry times, where if the time is set to 10 minutes, it retries every 10 minutes.\n\nNAME       TYPE       DESCRIPTION\ninterval   Duration   Duration between each retry.\n\n# exponential\n\nThis establishes retry behavior that waits longer between each retry e.g. 1s, 5s, 15s ...\n\nNAME          TYPE       DESCRIPTION\ninterval      Duration   Duration between each retry.\nmaxInterval   Duration   Max Duration between each retry.\ndelayFactor   Double     Multiplier for interval on each retry, default is 2. For\n                         example, with and interval=30s and delayFactor=2, retry will\n                         append at 30s, 1m30, 3m30, ...\n\n# random\n\nThis establishes retries with a random delay with min and max limits.\n\nNAME          TYPE       DESCRIPTION\nminInterval   Duration   Minimal duration between each retry.\nmaxInterval   Duration   Maximum duration between each retry.",normalizedContent:"# retries\n\nkestra provides a tasks retry feature. this sub-system makes it convenient to add retry behavior on failed executions, based on the retry configuration in the flow description.\n\n\n# example\n\nbelow is a flow sample that executes a retry on a task failurefor a maximum of 5 times every 15 minutes:\n\n- id: retry-sample\n  type: io.kestra.core.tasks.debugs.echo\n  format: my output for task {{task.id}}\n  timeout: pt10m\n  retry:\n    maxattempt: 5\n    type: constant\n    interval: pt15m\n\n\n\n# retry options for all type\n\nname             type       description\ntype             string     retry behavior to apply. can be one of constant,\n                            exponential, random.\nmaxattempt       integer    number of retries performed before the system stops retry.\nmaxduration      duration   maximum delay the execution is retried. once passed, the\n                            task is no more processed\nwarningonretry   boolean    flag the execution has warning if any retry was done on this\n                            tasks.\n\n\n# duration\n\nsome options above have to be filled with a duration notation.\ndurations are expressed in iso 8601 durations\nand here are some examples :\n\nname       description\npt0.250s   250 milliseconds delay\npt2s       2 seconds delay\npt1m       1 minute delay\npt3.5h     3 hours and a half delay\n\n\n# retry types\n\n# constant\n\nthis establishes constant retry times, where if the time is set to 10 minutes, it retries every 10 minutes.\n\nname       type       description\ninterval   duration   duration between each retry.\n\n# exponential\n\nthis establishes retry behavior that waits longer between each retry e.g. 1s, 5s, 15s ...\n\nname          type       description\ninterval      duration   duration between each retry.\nmaxinterval   duration   max duration between each retry.\ndelayfactor   double     multiplier for interval on each retry, default is 2. for\n                         example, with and interval=30s and delayfactor=2, retry will\n                         append at 30s, 1m30, 3m30, ...\n\n# random\n\nthis establishes retries with a random delay with min and max limits.\n\nname          type       description\nmininterval   duration   minimal duration between each retry.\nmaxinterval   duration   maximum duration between each retry.",charsets:{}},{title:"Templates",frontmatter:{order:9,meta:[{property:"article:modified_time",content:"2022-04-10T20:43:16.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Templates"},{property:"og:description",content:"Templates | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/templates/"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Templates"},{name:"twitter:description",content:"Templates | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/templates/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/templates/",relativePath:"docs/developer-guide/templates/README.md",key:"v-2b85cc88",path:"/docs/developer-guide/templates/",headers:[{level:2,title:"Example",slug:"example",normalizedTitle:"example",charIndex:421}],lastUpdated:"4/10/2022, 8:43:16 PM",lastUpdatedTimestamp:1649623396e3,headersStr:"Example",content:'# Templates\n\nTemplates are lists of tasks that can be shared between flows. You can define a template and call it from other flows, allowing it to share a list of tasks and keep these tasks updated without changing your flow.\n\nAll tasks in a template will be executed sequentially, you can provide the same tasks that are found in a standard flow and you can also provide an errors path.\n\nTemplate Task documentation\n\n\n# Example\n\nBelow a flow sample that will include a template :\n\nid: with-template\nnamespace: io.kestra.tests\n\ninputs:\n  - name: store\n    type: STRING\n    required: true\n\ntasks:\n  - id: template\n    type: io.kestra.core.tasks.flows.Template\n    namespace: io.kestra.tests\n    templateId: template\n    args:\n      renamedStore: "{{ inputs.store }}\n\n\nIf the template is defined like this :\n\nid: template\nnamespace: io.kestra.tests\n\ntasks:\n  - id: 1-return\n    type: io.kestra.core.tasks.debugs.Return\n    format: "{{ parent.outputs.args.renamedStore }}"\n\n\nIt will produce a flow similar to this one:\n\nid: with-template\nnamespace: io.kestra.tests\n\ntasks:\n  - id: template\n    type: io.kestra.core.tasks.flows.Sequential\n    tasks:\n      - id: 1-return\n        type: io.kestra.core.tasks.debugs.Return\n        format: "{{ inputs.store }}"\n\n\nAll the tasks within the template will be copied at runtime.\n\nWARNING\n\nFrom the template, you can access all the variables defined on the context executions. However, this is highly discouraged, the better will be to use args to rename variables from global context to a local one.\n\nBy this way, your template will be usable on many flows. Just think args as argument for a function in code !',normalizedContent:'# templates\n\ntemplates are lists of tasks that can be shared between flows. you can define a template and call it from other flows, allowing it to share a list of tasks and keep these tasks updated without changing your flow.\n\nall tasks in a template will be executed sequentially, you can provide the same tasks that are found in a standard flow and you can also provide an errors path.\n\ntemplate task documentation\n\n\n# example\n\nbelow a flow sample that will include a template :\n\nid: with-template\nnamespace: io.kestra.tests\n\ninputs:\n  - name: store\n    type: string\n    required: true\n\ntasks:\n  - id: template\n    type: io.kestra.core.tasks.flows.template\n    namespace: io.kestra.tests\n    templateid: template\n    args:\n      renamedstore: "{{ inputs.store }}\n\n\nif the template is defined like this :\n\nid: template\nnamespace: io.kestra.tests\n\ntasks:\n  - id: 1-return\n    type: io.kestra.core.tasks.debugs.return\n    format: "{{ parent.outputs.args.renamedstore }}"\n\n\nit will produce a flow similar to this one:\n\nid: with-template\nnamespace: io.kestra.tests\n\ntasks:\n  - id: template\n    type: io.kestra.core.tasks.flows.sequential\n    tasks:\n      - id: 1-return\n        type: io.kestra.core.tasks.debugs.return\n        format: "{{ inputs.store }}"\n\n\nall the tasks within the template will be copied at runtime.\n\nwarning\n\nfrom the template, you can access all the variables defined on the context executions. however, this is highly discouraged, the better will be to use args to rename variables from global context to a local one.\n\nby this way, your template will be usable on many flows. just think args as argument for a function in code !',charsets:{}},{title:"Triggers & schedule",frontmatter:{order:5,meta:[{property:"article:modified_time",content:"2022-04-10T20:40:35.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Triggers & schedule"},{property:"og:description",content:"Triggers & schedule | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/triggers/"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Triggers & schedule"},{name:"twitter:description",content:"Triggers & schedule | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/triggers/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/triggers/",relativePath:"docs/developer-guide/triggers/README.md",key:"v-084d894c",path:"/docs/developer-guide/triggers/",lastUpdated:"4/10/2022, 8:40:35 PM",lastUpdatedTimestamp:1649623235e3,headersStr:null,content:"# Triggers & schedule\n\nTriggers are a way to start a flow with external events. For example, a trigger can be set for a scheduled date or waiting for an external event (such as file creation or another flows end).\n\nHere are the currently available triggers:\n\n * Flow trigger\n * Schedule",normalizedContent:"# triggers & schedule\n\ntriggers are a way to start a flow with external events. for example, a trigger can be set for a scheduled date or waiting for an external event (such as file creation or another flows end).\n\nhere are the currently available triggers:\n\n * flow trigger\n * schedule",charsets:{}},{title:"Flow trigger",frontmatter:{meta:[{property:"article:modified_time",content:"2022-04-10T20:40:58.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Flow trigger"},{property:"og:description",content:"Flow trigger | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/triggers/flow.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Flow trigger"},{name:"twitter:description",content:"Flow trigger | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/triggers/flow.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/triggers/flow.html",relativePath:"docs/developer-guide/triggers/flow.md",key:"v-801f5ac2",path:"/docs/developer-guide/triggers/flow.html",headers:[{level:2,title:"Example",slug:"example",normalizedTitle:"example",charIndex:300},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:2159},{level:3,title:"id",slug:"id",normalizedTitle:"id",charIndex:460},{level:3,title:"inputs",slug:"inputs-2",normalizedTitle:"inputs",charIndex:526},{level:3,title:"conditions",slug:"conditions",normalizedTitle:"conditions",charIndex:830},{level:2,title:"Variables",slug:"variables",normalizedTitle:"variables",charIndex:2845}],lastUpdated:"4/10/2022, 8:40:58 PM",lastUpdatedTimestamp:1649623258e3,headersStr:"Example Inputs id inputs conditions Variables",content:'# Flow trigger\n\ntype: "io.kestra.core.models.triggers.types.Flow"\n\n\n> Kestra is able to trigger one flow after another one. This allows the chaining of flows without the need to update the base flows.\n> With this capacity, you can break responsibility between different flows to different teams.\n\n\n# Example\n\n> This flow will be triggered after each successful execution of the flow io.kestra.tests.trigger-flow and forward the uri of my-task taskId outputs.\n\nid: trigger-flow-listener\nnamespace: io.kestra.tests\nrevision: 1\n\ninputs:\n  - name: fromParent\n    type: STRING\n\ntasks:\n  - id: onlyNoInput\n    type: io.kestra.core.tasks.debugs.Return\n    format: "v1: {{trigger.executionId}}"\n\ntriggers:\n  - id: listenFlow\n    type: io.kestra.core.models.triggers.types.Flow\n    inputs:\n      fromParent: \'{{ outputs.myTask.uri }}\'\n    conditions:\n      - type: io.kestra.core.models.conditions.types.ExecutionFlowCondition\n        namespace: io.kestra.tests\n        flowId: trigger-flow\n      - type: io.kestra.core.models.conditions.types.ExecutionStatusCondition\n        in:\n          - SUCCESS\n\n\n> This flow will be triggered after the successful execution of both flows flow-a & flow-b during the current day. When the conditions are met, the counter is reset and can be re-triggered during the same day. See MultipleCondition for more details\n\nid: trigger-multiplecondition-listener\nnamespace: io.kestra.tests\n\ntasks:\n  - id: onlyListener\n    type: io.kestra.core.tasks.debugs.Return\n    format: "let\'s go "\n\ntriggers:\n  - id: multipleListenFlow\n    type: io.kestra.core.models.triggers.types.Flow\n    conditions:\n      - id: multiple\n        type: io.kestra.core.models.conditions.types.MultipleCondition\n        window: P1D\n        windowAdvance: P0D\n        conditions:\n          flow-a:\n            type: io.kestra.core.models.conditions.types.ExecutionFlowCondition\n            namespace: io.kestra.tests\n            flowId: trigger-multiplecondition-flow-a\n          flow-b:\n            type: io.kestra.core.models.conditions.types.ExecutionFlowCondition\n            namespace: io.kestra.tests\n            flowId: trigger-multiplecondition-flow-b\n\n\n\n\n# Inputs\n\n\n# id\n\n * Type:\n * Required: ✔\n\n> unique for a flow\n\n\n# inputs\n\n * Type:\n * Required: ❌\n * Dynamic: ✔\n\n> fill input of this flow based on output of current flow, allowing to pass data or file on the triggered flow\n\nWARNING\n\nIf you provide an invalid input, the flow will be created and already state as FAILED! Since no task is started, you cannot log any reason visible on the ui.\nSo you will need to go to the server logs to understand the error.\n\n\n# conditions\n\n * Type:\n * Required: ❌\n\n> List of Conditions in order to limit the flow trigger.\n\nWARNING\n\nIf you do not provide any conditions, the flow will be triggered for EVERY execution of EVERY flow on your instance.\n\n\n# Variables\n\nWhen the flow is triggered by another one, some context variables will be injected to allow some customization of the flow.\n\nPARAMETER                    DESCRIPTION\n{{ trigger.executionId }}    the execution id that trigger the current flow\n{{ trigger.namespace }}      the namespace of the flow that trigger the current flow\n{{ trigger.flowId }}         the flow id that trigger the current flow\n{{ trigger.flowRevision }}   the flow revision that trigger the current flow',normalizedContent:'# flow trigger\n\ntype: "io.kestra.core.models.triggers.types.flow"\n\n\n> kestra is able to trigger one flow after another one. this allows the chaining of flows without the need to update the base flows.\n> with this capacity, you can break responsibility between different flows to different teams.\n\n\n# example\n\n> this flow will be triggered after each successful execution of the flow io.kestra.tests.trigger-flow and forward the uri of my-task taskid outputs.\n\nid: trigger-flow-listener\nnamespace: io.kestra.tests\nrevision: 1\n\ninputs:\n  - name: fromparent\n    type: string\n\ntasks:\n  - id: onlynoinput\n    type: io.kestra.core.tasks.debugs.return\n    format: "v1: {{trigger.executionid}}"\n\ntriggers:\n  - id: listenflow\n    type: io.kestra.core.models.triggers.types.flow\n    inputs:\n      fromparent: \'{{ outputs.mytask.uri }}\'\n    conditions:\n      - type: io.kestra.core.models.conditions.types.executionflowcondition\n        namespace: io.kestra.tests\n        flowid: trigger-flow\n      - type: io.kestra.core.models.conditions.types.executionstatuscondition\n        in:\n          - success\n\n\n> this flow will be triggered after the successful execution of both flows flow-a & flow-b during the current day. when the conditions are met, the counter is reset and can be re-triggered during the same day. see multiplecondition for more details\n\nid: trigger-multiplecondition-listener\nnamespace: io.kestra.tests\n\ntasks:\n  - id: onlylistener\n    type: io.kestra.core.tasks.debugs.return\n    format: "let\'s go "\n\ntriggers:\n  - id: multiplelistenflow\n    type: io.kestra.core.models.triggers.types.flow\n    conditions:\n      - id: multiple\n        type: io.kestra.core.models.conditions.types.multiplecondition\n        window: p1d\n        windowadvance: p0d\n        conditions:\n          flow-a:\n            type: io.kestra.core.models.conditions.types.executionflowcondition\n            namespace: io.kestra.tests\n            flowid: trigger-multiplecondition-flow-a\n          flow-b:\n            type: io.kestra.core.models.conditions.types.executionflowcondition\n            namespace: io.kestra.tests\n            flowid: trigger-multiplecondition-flow-b\n\n\n\n\n# inputs\n\n\n# id\n\n * type:\n * required: ✔\n\n> unique for a flow\n\n\n# inputs\n\n * type:\n * required: ❌\n * dynamic: ✔\n\n> fill input of this flow based on output of current flow, allowing to pass data or file on the triggered flow\n\nwarning\n\nif you provide an invalid input, the flow will be created and already state as failed! since no task is started, you cannot log any reason visible on the ui.\nso you will need to go to the server logs to understand the error.\n\n\n# conditions\n\n * type:\n * required: ❌\n\n> list of conditions in order to limit the flow trigger.\n\nwarning\n\nif you do not provide any conditions, the flow will be triggered for every execution of every flow on your instance.\n\n\n# variables\n\nwhen the flow is triggered by another one, some context variables will be injected to allow some customization of the flow.\n\nparameter                    description\n{{ trigger.executionid }}    the execution id that trigger the current flow\n{{ trigger.namespace }}      the namespace of the flow that trigger the current flow\n{{ trigger.flowid }}         the flow id that trigger the current flow\n{{ trigger.flowrevision }}   the flow revision that trigger the current flow',charsets:{}},{title:"Schedule",frontmatter:{meta:[{property:"article:modified_time",content:"2022-05-06T10:06:17.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Schedule"},{property:"og:description",content:"Schedule | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/triggers/schedule.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Schedule"},{name:"twitter:description",content:"Schedule | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/triggers/schedule.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/triggers/schedule.html",relativePath:"docs/developer-guide/triggers/schedule.md",key:"v-4a03194d",path:"/docs/developer-guide/triggers/schedule.html",headers:[{level:2,title:"Example",slug:"example",normalizedTitle:"example",charIndex:283},{level:2,title:"Backfill",slug:"backfill",normalizedTitle:"backfill",charIndex:1636},{level:2,title:"Variables",slug:"variables",normalizedTitle:"variables",charIndex:1915},{level:2,title:"Schedule Conditions",slug:"schedule-conditions",normalizedTitle:"schedule conditions",charIndex:2272},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:2947},{level:3,title:"id",slug:"id",normalizedTitle:"id",charIndex:337},{level:3,title:"cron",slug:"cron",normalizedTitle:"cron",charIndex:410},{level:3,title:"backfill",slug:"backfill-2",normalizedTitle:"backfill",charIndex:312},{level:3,title:"scheduleConditions",slug:"scheduleconditions",normalizedTitle:"scheduleconditions",charIndex:662},{level:3,title:"inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:3886},{level:3,title:"lateMaximumDelay",slug:"latemaximumdelay",normalizedTitle:"latemaximumdelay",charIndex:3987},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:4167},{level:3,title:"date",slug:"date",normalizedTitle:"date",charIndex:782},{level:3,title:"next",slug:"next",normalizedTitle:"next",charIndex:1006},{level:3,title:"previous",slug:"previous",normalizedTitle:"previous",charIndex:966},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:4367},{level:3,title:"ScheduleBackfill",slug:"schedulebackfill",normalizedTitle:"schedulebackfill",charIndex:3353}],lastUpdated:"5/6/2022, 10:06:17 AM",lastUpdatedTimestamp:1651831577e3,headersStr:"Example Backfill Variables Schedule Conditions Properties id cron backfill scheduleConditions inputs lateMaximumDelay Outputs date next previous Definitions ScheduleBackfill",content:'# Schedule\n\ntype: "io.kestra.core.models.triggers.types.Schedule"\n\n\n> Kestra is able to trigger flows based on a Schedule (aka the time). If you need to wait for another system to be ready and cannot use any event mechanism, you can schedule 1 or more time for the current flow.\n\n\n# Example\n\n> A schedule with a backfill.\n\ntriggers:\n  - id: schedule\n    type: io.kestra.core.models.triggers.types.Schedule\n    cron: "*/15 * * * *"\n    backfill:\n      start: 2020-06-25T14:00:00Z\n\n\n> A schedule that runs only the first monday of every month at 11 AM.\n\ntriggers:\n  - id: schedule\n    type: io.kestra.core.models.triggers.types.Schedule\n    cron: "0 11 * * 1"\n    scheduleConditions:\n      - id: monday\n        type: io.kestra.core.models.conditions.types.DayInMonthCondition\n        date: "{{ trigger.date }}"\n        dayOfWeek: "MONDAY"\n        dayInMonth: "FIRST"\n\n\nWARNING\n\nSchedules cannot overlap. This means that we cannot have any concurrent schedules. If the previous schedule is not ended when the next one must start, the scheduler will wait until the end of the previous. The same applies during backfills.\n\nTIP\n\nMost of the time, schedule execution will depend on the trigger.date (looking at files for today, sql query with where schedule date). This works well, but it prevents you to execute your flow manually (since these variables are only available during schedule).\n\nYou can use this expression in order to make your manual execution work: {{ schedule.date ?? execution.startDate | date("yyyy-MM-dd") }}. It will use the current date instead of the scheduled one on manual execution, and your flow will not fail.\n\n\n# Backfill\n\nKestra will optionally handle a backfill. The concept of a backfill is the replay of a missed schedule because we create the flow later.\n\nBackfills will perform all the schedules between the defined date & the current date and will start after the normal schedule.\n\n\n# Variables\n\nWhen the flow is scheduled, some context variables are injected to allow some customization of the flow (such as filename, where in sql query).\n\nPARAMETER                DESCRIPTION\n{{ trigger.date }}       the date of current schedule\n{{ trigger.next }}       the date of next schedule\n{{ trigger.previous }}   the date of previous schedule\n\n\n# Schedule Conditions\n\nWhen the cron is not sufficient to determine the date you want to schedule your flow, you can use scheduleConditions in order to add some extra conditions, (for example, only the first day of the month, only the weekend, ...).\nYou must use the {{ trigger.date }} expression on properties date the current schedule.\nThis condition will be evaluated and {{ trigger.previous }} and {{ trigger.next }} will reflect the date with the conditions applied.\n\nThe list of core conditions that can be used are:\n\n * DateTimeBetweenCondition\n * DayWeekCondition\n * DayWeekInMonthCondition\n * NotCondition\n * OrCondition\n * WeekendCondition\n * DayInMonthCondition\n\n\n# Properties\n\n\n# id\n\n * Type:\n * Required: ✔\n\n> Unique for a flow. The scheduler will keep the last execution date for this schedule. This allows you to change the cron expression without restarting all the past executions (if backfill exists)\n\n\n# cron\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> the cron expression you need to\n> a standard unix cron expression without seconds.\n\n\n# backfill\n\n * Type: ScheduleBackfill\n * Dynamic: ❓\n * Required: ❌\n\n> Backfill options in order to fill missing previous past dates\n> Kestra will optionally handle a backfill. The concept of a backfill is to replay the missing schedule because we create the flow later.\n\nBackfill will do all schedules between the defined date & the current date and will start after the normal schedule.\n\n\n# scheduleConditions\n\n * Type: array\n * SubType: ScheduleCondition\n * Dynamic: ❓\n * Required: ❌\n\n> List of schedule Conditions in order to limit schedule date.\n\n\n# inputs\n\n * Type: object\n * Dynamic: ✔️\n * Required: ❌\n\n> The input to pass to the triggered flow\n\n\n# lateMaximumDelay\n\n * Type: Duration\n * Dynamic: ❌\n * Required: ❌\n\n> The maximum late delay accepted\n\nIf the schedule didn\'t start after this delay, the execution will be skip.\n\n\n# Outputs\n\n\n# date\n\n * Type: string\n\n> The date of the current schedule\n\n\n# next\n\n * Type: string\n\n> The date of the next schedule\n\n\n# previous\n\n * Type: string\n\n> The date of the previous schedule\n\n\n# Definitions\n\n\n# ScheduleBackfill\n\n# start\n\n * Type: string\n\n> The first start date',normalizedContent:'# schedule\n\ntype: "io.kestra.core.models.triggers.types.schedule"\n\n\n> kestra is able to trigger flows based on a schedule (aka the time). if you need to wait for another system to be ready and cannot use any event mechanism, you can schedule 1 or more time for the current flow.\n\n\n# example\n\n> a schedule with a backfill.\n\ntriggers:\n  - id: schedule\n    type: io.kestra.core.models.triggers.types.schedule\n    cron: "*/15 * * * *"\n    backfill:\n      start: 2020-06-25t14:00:00z\n\n\n> a schedule that runs only the first monday of every month at 11 am.\n\ntriggers:\n  - id: schedule\n    type: io.kestra.core.models.triggers.types.schedule\n    cron: "0 11 * * 1"\n    scheduleconditions:\n      - id: monday\n        type: io.kestra.core.models.conditions.types.dayinmonthcondition\n        date: "{{ trigger.date }}"\n        dayofweek: "monday"\n        dayinmonth: "first"\n\n\nwarning\n\nschedules cannot overlap. this means that we cannot have any concurrent schedules. if the previous schedule is not ended when the next one must start, the scheduler will wait until the end of the previous. the same applies during backfills.\n\ntip\n\nmost of the time, schedule execution will depend on the trigger.date (looking at files for today, sql query with where schedule date). this works well, but it prevents you to execute your flow manually (since these variables are only available during schedule).\n\nyou can use this expression in order to make your manual execution work: {{ schedule.date ?? execution.startdate | date("yyyy-mm-dd") }}. it will use the current date instead of the scheduled one on manual execution, and your flow will not fail.\n\n\n# backfill\n\nkestra will optionally handle a backfill. the concept of a backfill is the replay of a missed schedule because we create the flow later.\n\nbackfills will perform all the schedules between the defined date & the current date and will start after the normal schedule.\n\n\n# variables\n\nwhen the flow is scheduled, some context variables are injected to allow some customization of the flow (such as filename, where in sql query).\n\nparameter                description\n{{ trigger.date }}       the date of current schedule\n{{ trigger.next }}       the date of next schedule\n{{ trigger.previous }}   the date of previous schedule\n\n\n# schedule conditions\n\nwhen the cron is not sufficient to determine the date you want to schedule your flow, you can use scheduleconditions in order to add some extra conditions, (for example, only the first day of the month, only the weekend, ...).\nyou must use the {{ trigger.date }} expression on properties date the current schedule.\nthis condition will be evaluated and {{ trigger.previous }} and {{ trigger.next }} will reflect the date with the conditions applied.\n\nthe list of core conditions that can be used are:\n\n * datetimebetweencondition\n * dayweekcondition\n * dayweekinmonthcondition\n * notcondition\n * orcondition\n * weekendcondition\n * dayinmonthcondition\n\n\n# properties\n\n\n# id\n\n * type:\n * required: ✔\n\n> unique for a flow. the scheduler will keep the last execution date for this schedule. this allows you to change the cron expression without restarting all the past executions (if backfill exists)\n\n\n# cron\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the cron expression you need to\n> a standard unix cron expression without seconds.\n\n\n# backfill\n\n * type: schedulebackfill\n * dynamic: ❓\n * required: ❌\n\n> backfill options in order to fill missing previous past dates\n> kestra will optionally handle a backfill. the concept of a backfill is to replay the missing schedule because we create the flow later.\n\nbackfill will do all schedules between the defined date & the current date and will start after the normal schedule.\n\n\n# scheduleconditions\n\n * type: array\n * subtype: schedulecondition\n * dynamic: ❓\n * required: ❌\n\n> list of schedule conditions in order to limit schedule date.\n\n\n# inputs\n\n * type: object\n * dynamic: ✔️\n * required: ❌\n\n> the input to pass to the triggered flow\n\n\n# latemaximumdelay\n\n * type: duration\n * dynamic: ❌\n * required: ❌\n\n> the maximum late delay accepted\n\nif the schedule didn\'t start after this delay, the execution will be skip.\n\n\n# outputs\n\n\n# date\n\n * type: string\n\n> the date of the current schedule\n\n\n# next\n\n * type: string\n\n> the date of the next schedule\n\n\n# previous\n\n * type: string\n\n> the date of the previous schedule\n\n\n# definitions\n\n\n# schedulebackfill\n\n# start\n\n * type: string\n\n> the first start date',charsets:{cjk:!0}},{title:"Webhook",frontmatter:{meta:[{property:"article:modified_time",content:"2022-04-10T20:41:39.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Webhook"},{property:"og:description",content:"Webhook | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/triggers/webhook.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Webhook"},{name:"twitter:description",content:"Webhook | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/triggers/webhook.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/triggers/webhook.html",relativePath:"docs/developer-guide/triggers/webhook.md",key:"v-53d2e383",path:"/docs/developer-guide/triggers/webhook.html",headers:[{level:2,title:"Example",slug:"example",normalizedTitle:"example",charIndex:370},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:822},{level:3,title:"id",slug:"id",normalizedTitle:"id",charIndex:430},{level:3,title:"key",slug:"key",normalizedTitle:"key",charIndex:165},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1225},{level:3,title:"body",slug:"body",normalizedTitle:"body",charIndex:318},{level:3,title:"headers",slug:"headers",normalizedTitle:"headers",charIndex:325}],lastUpdated:"4/10/2022, 8:41:39 PM",lastUpdatedTimestamp:1649623299e3,headersStr:"Example Inputs id key Outputs body headers",content:'# Webhook\n\ntype: "io.kestra.core.models.triggers.types.Webhook"\n\n\n> A Webbook trigger allows you to trigger a flow from a webhook url.\n> The trigger will generate a key that must be used on url : /api/v1/executions/webhook/{namespace}/[flowId]/{key}.\n> Kestra accepts GET, POST & PUT requests on this url.\n> The whole body & headers will be available as a variable.\n\n\n# Example\n\n> Add a trigger to the current flow\n\ntriggers:\n  - id: webhook\n    type: io.kestra.core.models.triggers.types.Webhook\n\n\n> After the trigger is created, a key will be created that will be used in the webhook url. Now, you can launch the flow on the url /api/v1/executions/webhook/{namespace}/[flowId]/4wjtkzwVGBM9yKnjm3yv8r.\n\ntriggers:\n  - id: webhook\n    type: io.kestra.core.models.triggers.types.Webhook\n    key: 4wjtkzwVGBM9yKnjm3yv8r\n\n\n\n# Inputs\n\n\n# id\n\n * Type:\n * Required: ✔\n\n> unique for a flow.\n\n\n# key\n\n * Type:\n * Required: ❌\n\n> The unique key that will be part of the url.\n\nIf you don’t provide a key, a random one will be generated. This is used as the key for generating the url of the webhook.\n\nWARNING\n\nTake care when using a manual key, the key is the only security to protect your webhook and must be protected as a secret!\n\n\n# Outputs\n\n\n# body\n\n * Type:\n\n> The full body for the webhook request.\n\nWe try to deserialize the incoming request as json (array or object).\nIf we can’t the full body as string will be available\n\n\n# headers\n\n * Type:\n\n> The headers for the webhook request',normalizedContent:'# webhook\n\ntype: "io.kestra.core.models.triggers.types.webhook"\n\n\n> a webbook trigger allows you to trigger a flow from a webhook url.\n> the trigger will generate a key that must be used on url : /api/v1/executions/webhook/{namespace}/[flowid]/{key}.\n> kestra accepts get, post & put requests on this url.\n> the whole body & headers will be available as a variable.\n\n\n# example\n\n> add a trigger to the current flow\n\ntriggers:\n  - id: webhook\n    type: io.kestra.core.models.triggers.types.webhook\n\n\n> after the trigger is created, a key will be created that will be used in the webhook url. now, you can launch the flow on the url /api/v1/executions/webhook/{namespace}/[flowid]/4wjtkzwvgbm9yknjm3yv8r.\n\ntriggers:\n  - id: webhook\n    type: io.kestra.core.models.triggers.types.webhook\n    key: 4wjtkzwvgbm9yknjm3yv8r\n\n\n\n# inputs\n\n\n# id\n\n * type:\n * required: ✔\n\n> unique for a flow.\n\n\n# key\n\n * type:\n * required: ❌\n\n> the unique key that will be part of the url.\n\nif you don’t provide a key, a random one will be generated. this is used as the key for generating the url of the webhook.\n\nwarning\n\ntake care when using a manual key, the key is the only security to protect your webhook and must be protected as a secret!\n\n\n# outputs\n\n\n# body\n\n * type:\n\n> the full body for the webhook request.\n\nwe try to deserialize the incoming request as json (array or object).\nif we can’t the full body as string will be available\n\n\n# headers\n\n * type:\n\n> the headers for the webhook request',charsets:{}},{title:"Variables",frontmatter:{order:2,meta:[{property:"article:modified_time",content:"2022-10-25T15:48:22.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Variables"},{property:"og:description",content:"Variables | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Variables"},{name:"twitter:description",content:"Variables | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/",relativePath:"docs/developer-guide/variables/README.md",key:"v-472d66c8",path:"/docs/developer-guide/variables/",headers:[{level:2,title:"Default variables",slug:"default-variables",normalizedTitle:"default variables",charIndex:324},{level:3,title:"Flow & Execution",slug:"flow-execution",normalizedTitle:"flow &amp; execution",charIndex:null},{level:3,title:"Inputs variables",slug:"inputs-variables",normalizedTitle:"inputs variables",charIndex:3476},{level:3,title:"Outputs variables",slug:"outputs-variables",normalizedTitle:"outputs variables",charIndex:3739},{level:2,title:"More",slug:"more",normalizedTitle:"more",charIndex:4287}],lastUpdated:"10/25/2022, 3:48:22 PM",lastUpdatedTimestamp:1666712902e3,headersStr:"Default variables Flow & Execution Inputs variables Outputs variables More",content:'# Variables\n\nVariables are specific fields for tasks. They use the power of Pebble with Kestra\'s special context system, allowing powerful task composition.\n\nVariables can use variable information registered/existing in the execution context. The context is data injected in Variables and can be from different sources:\n\n\n# Default variables\n\n\n# Flow & Execution\n\nFlow & Execution variables allow using current context for this execution in order to customize the tasks (example: name file with current date or current execution id, ...)\n\nThe following table lists all the default variables available on each execution.\n\nPARAMETER                       DESCRIPTION\n{{ flow.id }}                   The name of the current flow ID\n{{ flow.namespace }}            The name of the current namespace\n{{ flow.revision }}             The revision of the current flow\n{{ execution.id }}              Return the execution Id, a unique id for each\n{{ execution.startDate }}       The start date of the current execution, it can be formatted\n                                with {{ dateFormat execution.startDate "yyyy-MM-dd\n                                HH:mm:ss.SSSSSS"}}\n{{ task.id }}                   The current task ID\n{{ task.type }}                 The current task Type (full class name)\n{{ taskrun.id }}                The current task ID\n{{ taskrun.value }}             The value for the current task run, only available with\n                                (Flowable Task)\n{{ taskrun.attemptsCount }}     The number of attempts for current task (when retry or\n                                restart is done)\n{{ parents[].taskrun.value }}   The value of parents task run, the index if based on closest\n                                Flowable Task, only available with tasks previsouly in a\n                                (Flowable Task)\n{{ parents[].outputs }}         The outputs of the parent task run, the index if based on\n                                closest Flowable Task, only available with tasks previously\n                                run in a (Flowable Task)\n{{ parent.taskrun.value }}      The value of closest (first) parent task run Flowable Task,\n                                only available with tasks run previously in a (Flowable\n                                Task)\n{{ parent.outputs }}            The outputs of (first) parent task run Flowable Task, only\n                                available with tasks previously run in a (Flowable Task)\n\nIf the flow is triggered by a schedule, these variables (vars) are also available :\n\nPARAMETER                 DESCRIPTION\n{{ schedule.date }}       the date of current schedule\n{{ schedule.next }}       the date of next schedule\n{{ schedule.previous }}   the date of previous schedule\n\nIf the flow is triggered by a flow, these variables (vars) are also available:\n\nPARAMETER                    DESCRIPTION\n{{ trigger.executionId }}    the execution id that triggers the current flow\n{{ trigger.namespace }}      the namespace of the flow that triggers the current flow\n{{ trigger.flowId }}         the flow id that triggers the current flow\n{{ trigger.flowRevision }}   the flow revision that triggers the current flow\n\nBelow is an example of typical usage:\n\nid: context-example\nnamespace: io.kestra.tests\n\ntasks:\n  - id: echo\n    type: io.kestra.core.tasks.debugs.Return\n    format: |\n      taskid: {{task.id}}\n      date: {{  execution.startDate | date("yyyy-MM-dd HH:mm:ss.SSSSSS") }}\n\n\n\n# Inputs variables\n\nYou can use any inputs using its name, example:\n\nid: context-inputs\nnamespace: io.kestra.tests\n\ninputs:\n  - name: myinput\n    type: STRING\n\ntasks:\n  - id: mytask\n    type: io.kestra.core.tasks.debugs.Return\n    format: "{{inputs.myinput}}"\n\n\n\n# Outputs variables\n\nOutputs variables can also be referencing their names with the form\noutputs.NAME.PROPERTY :\n\n * NAME is the taskId you want to locate\n * PROPERTY is the property you want to use, each task type can emit different properties, so look at the\n   documentation of one.\n\nid: context-outpouts\nnamespace: io.kestra.tests\n\ntasks:\n    - id: task-id\n      type: io.kestra.task.templates.Example\n      format: "{{task.id}}"\n    - id: flow-id\n      type: io.kestra.task.templates.Example\n      format: "{{outputs.task-id.child.value}}"\n\n\n\n# More\n\nIn order to customize the :',normalizedContent:'# variables\n\nvariables are specific fields for tasks. they use the power of pebble with kestra\'s special context system, allowing powerful task composition.\n\nvariables can use variable information registered/existing in the execution context. the context is data injected in variables and can be from different sources:\n\n\n# default variables\n\n\n# flow & execution\n\nflow & execution variables allow using current context for this execution in order to customize the tasks (example: name file with current date or current execution id, ...)\n\nthe following table lists all the default variables available on each execution.\n\nparameter                       description\n{{ flow.id }}                   the name of the current flow id\n{{ flow.namespace }}            the name of the current namespace\n{{ flow.revision }}             the revision of the current flow\n{{ execution.id }}              return the execution id, a unique id for each\n{{ execution.startdate }}       the start date of the current execution, it can be formatted\n                                with {{ dateformat execution.startdate "yyyy-mm-dd\n                                hh:mm:ss.ssssss"}}\n{{ task.id }}                   the current task id\n{{ task.type }}                 the current task type (full class name)\n{{ taskrun.id }}                the current task id\n{{ taskrun.value }}             the value for the current task run, only available with\n                                (flowable task)\n{{ taskrun.attemptscount }}     the number of attempts for current task (when retry or\n                                restart is done)\n{{ parents[].taskrun.value }}   the value of parents task run, the index if based on closest\n                                flowable task, only available with tasks previsouly in a\n                                (flowable task)\n{{ parents[].outputs }}         the outputs of the parent task run, the index if based on\n                                closest flowable task, only available with tasks previously\n                                run in a (flowable task)\n{{ parent.taskrun.value }}      the value of closest (first) parent task run flowable task,\n                                only available with tasks run previously in a (flowable\n                                task)\n{{ parent.outputs }}            the outputs of (first) parent task run flowable task, only\n                                available with tasks previously run in a (flowable task)\n\nif the flow is triggered by a schedule, these variables (vars) are also available :\n\nparameter                 description\n{{ schedule.date }}       the date of current schedule\n{{ schedule.next }}       the date of next schedule\n{{ schedule.previous }}   the date of previous schedule\n\nif the flow is triggered by a flow, these variables (vars) are also available:\n\nparameter                    description\n{{ trigger.executionid }}    the execution id that triggers the current flow\n{{ trigger.namespace }}      the namespace of the flow that triggers the current flow\n{{ trigger.flowid }}         the flow id that triggers the current flow\n{{ trigger.flowrevision }}   the flow revision that triggers the current flow\n\nbelow is an example of typical usage:\n\nid: context-example\nnamespace: io.kestra.tests\n\ntasks:\n  - id: echo\n    type: io.kestra.core.tasks.debugs.return\n    format: |\n      taskid: {{task.id}}\n      date: {{  execution.startdate | date("yyyy-mm-dd hh:mm:ss.ssssss") }}\n\n\n\n# inputs variables\n\nyou can use any inputs using its name, example:\n\nid: context-inputs\nnamespace: io.kestra.tests\n\ninputs:\n  - name: myinput\n    type: string\n\ntasks:\n  - id: mytask\n    type: io.kestra.core.tasks.debugs.return\n    format: "{{inputs.myinput}}"\n\n\n\n# outputs variables\n\noutputs variables can also be referencing their names with the form\noutputs.name.property :\n\n * name is the taskid you want to locate\n * property is the property you want to use, each task type can emit different properties, so look at the\n   documentation of one.\n\nid: context-outpouts\nnamespace: io.kestra.tests\n\ntasks:\n    - id: task-id\n      type: io.kestra.task.templates.example\n      format: "{{task.id}}"\n    - id: flow-id\n      type: io.kestra.task.templates.example\n      format: "{{outputs.task-id.child.value}}"\n\n\n\n# more\n\nin order to customize the :',charsets:{cjk:!0}},{title:"Basic Usage",frontmatter:{order:1,meta:[{property:"article:modified_time",content:"2022-09-22T15:44:43.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Basic Usage"},{property:"og:description",content:"Basic Usage | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/basic-usage.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Basic Usage"},{name:"twitter:description",content:"Basic Usage | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/basic-usage.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/basic-usage.html",relativePath:"docs/developer-guide/variables/basic-usage.md",key:"v-64153d4f",path:"/docs/developer-guide/variables/basic-usage.html",headers:[{level:2,title:"Syntax Reference",slug:"syntax-reference",normalizedTitle:"syntax reference",charIndex:18},{level:2,title:"Variables",slug:"variables",normalizedTitle:"variables",charIndex:437},{level:2,title:"Filters",slug:"filters",normalizedTitle:"filters",charIndex:1017},{level:2,title:"Functions",slug:"functions",normalizedTitle:"functions",charIndex:1418},{level:2,title:"Control Structure",slug:"control-structure",normalizedTitle:"control structure",charIndex:1690},{level:2,title:"Macros",slug:"macros",normalizedTitle:"macros",charIndex:2158},{level:2,title:"Named Arguments",slug:"named-arguments",normalizedTitle:"named arguments",charIndex:2565},{level:2,title:"Comments",slug:"comments",normalizedTitle:"comments",charIndex:3448},{level:2,title:"Expressions",slug:"expressions",normalizedTitle:"expressions",charIndex:194},{level:3,title:"Literals",slug:"literals",normalizedTitle:"literals",charIndex:3822},{level:3,title:"Collections",slug:"collections",normalizedTitle:"collections",charIndex:4584},{level:3,title:"Math",slug:"math",normalizedTitle:"math",charIndex:4831},{level:3,title:"Logic",slug:"logic",normalizedTitle:"logic",charIndex:5043},{level:3,title:"Comparisons",slug:"comparisons",normalizedTitle:"comparisons",charIndex:5283},{level:3,title:"Tests",slug:"tests",normalizedTitle:"tests",charIndex:5437},{level:3,title:"Conditional (Ternary) Operator",slug:"conditional-ternary-operator",normalizedTitle:"conditional (ternary) operator",charIndex:5720},{level:3,title:"Null-Coalescing Operator",slug:"null-coalescing-operator",normalizedTitle:"null-coalescing operator",charIndex:5844},{level:3,title:"Operator Precedence",slug:"operator-precedence",normalizedTitle:"operator precedence",charIndex:6159},{level:3,title:"Parents with Flowable Task.",slug:"parents-with-flowable-task",normalizedTitle:"parents with flowable task.",charIndex:6309}],lastUpdated:"9/22/2022, 3:44:43 PM",lastUpdatedTimestamp:1663861483e3,headersStr:"Syntax Reference Variables Filters Functions Control Structure Macros Named Arguments Comments Expressions Literals Collections Math Logic Comparisons Tests Conditional (Ternary) Operator Null-Coalescing Operator Operator Precedence Parents with Flowable Task.",content:'# Basic Usage\n\n\n# Syntax Reference\n\nThere are two primary delimiters used within a Pebble template: {{ ... }} and {% ... %}. The first set of delimiters will output the result of an expression. Expressions can be very simple (ex. a variable name) or much more complex.\nThe second set of delimiters is used to change the control flow of the template; it can contain an if-statement, define a parent template, define a new block, etc.\n\n\n# Variables\n\nYou can print variables directly to the output; for example, if the context contains a variable called foo which is a\nString with the value "bar" you can do the following which will output "bar".\n\n{{ foo }}\n\n\nYou can use the dot (.) notation to access attributes of variables. If the attribute contains any atypical characters, you can use the subscript notation ([]) instead.\n\n{{ foo.bar }}\n{{ foo["bar"] }}\n\n\nAdditionally, if foo is a List, then foo[0] can be used.\n\nIf the value of variable (or attribute) is undefined, it will throw an error and fail the task.\n\n\n# Filters\n\nOutput can be further modified with the use of filters. Filters are separated from the variable using a pipe symbol (|) and may have optional arguments in parentheses. Multiple filters can be chained and the output of one filter is applied to the next.\n\n{{ "If life gives you lemons, eat lemons." | upper | abbreviate(13) }}\n\n\nThe above example will output the following:\n\nIF LIFE GI...\n\n\n\n# Functions\n\nWhereas filters are intended to modify existing content/variables, functions are intended to generate new content. Similar to other programming languages, functions are invoked via their name followed by parentheses (()).\n\n{{ max(user.score, highscore) }}\n\n\n\n# Control Structure\n\nPebble provides several tags to control the flow of your template, two of the main ones being the for loop, and for statements.\n\n\n{% for article in articles %}\n    <h3>{{ article.title }}</h3>\n    <p>{{ article.content }}</p>\n{% else %}\n    <p> There are no articles. </p>\n{% endfor %}\n\n\n\n\n{% if category == "news" %}\n    {{ news }}\n{% elseif category == "sports" %}\n    {{ sports }}\n{% else %}\n    <p>Please select a category</p>\n{% endif %}\n\n\n\n\n# Macros\n\nMacros are lightweight and re-usable template fragments. A macro is defined via the macro tag:\n\n\n{% macro input(type, name) %}\n\t<input type="{{ type }}" name="{{ name }}" />\n{% endmacro %}\n\n\n\nAnd the macro will be invoked just like a function:\n\n{{ input("text", "name", "Mitchell") }}\n\n\nA macro does not have access to the main context; the only variables it can access are its local arguments.\n\n\n# Named Arguments\n\nUsing named arguments allows you to be more explicit with the values you are passing to a filter, function, test or macro. They also allow you to avoid specifying arguments for which you don\'t want to change the default value.\n\n{{ stringDate | date(existingFormat="yyyy-MMMM-d", format="yyyy/MMMM/d") }}\n\n\nPositional arguments can be used in conjunction with named arguments but all positional arguments must come before any named arguments:\n\n{{ stringDate | date("yyyy/MMMM/d", existingFormat="yyyy-MMMM-d") }}\n\n\nMacros are a great use case for named arguments because they also allow you to define default values for unused arguments:\n\n\n{% macro input(type="text", name, value) %}\n\t<input type="{{ type }}" name="{{ name }}" value="{{ value }}" />\n{% endmacro %}\n\n{{ input(name="country") }}\n\n{# will output: <input type="text" name="country" value="" /> #}\n\n\n\n\n# Comments\n\nYou can comment out any part of the template using the {# ... #} delimiters. These comments will not appear in the rendered output.\n\n\n{# THIS IS A COMMENT #}\n{% for article in articles %}\n\t<h3>{{ article.title }}</h3>\n\t<p>{{ article.content }}</p>\n{% endfor %}\n\n\n\n\n# Expressions\n\nExpressions in a Pebble template are very similar to expressions found in Java.\n\n\n# Literals\n\nThe simplest form of expressions are literals. Literals are representations for Java types such as strings and numbers.\n\n * "Hello World": Everything between two double or single quotes is a string. You can use a backslash to escape\n   quotation marks within the string.\n * "Hello #{who}": String interpolation is also possible using #{} inside quotes. In this example,\n   if the value of the variable who is "world", then the expression will be evaluated to "Hello world".\n * 100 + 10l * 2.5: Integers, longs and floating point numbers are similar to their Java counterparts.\n * true / false: Boolean values equivalent to their Java counterparts.\n * null: Represents no specific value, similar to it\'s Java counterpart. none is an alias for null.\n\n\n# Collections\n\nBoth lists and maps can be created directly within the template.\n\n * ["apple", "banana", "pear"]: A list of strings\n * {"apple":"red", "banana":"yellow", "pear":"green"}: A map of strings\n\nThe collections can contain expressions.\n\n\n# Math\n\nPebble allows you to calculate values using some basic mathematical operators. The following operators are supported:\n\n * +: Addition\n * -: Subtraction\n * /: Division\n * %: Modulus\n * *: Multiplication\n\n\n# Logic\n\nYou can combine multiple expressions with the following operators:\n\n * and: Returns true if both operands are true\n * or: Returns true if either operand is true\n * not: Negates an expression\n * (...): Groups expressions together\n\n\n# Comparisons\n\nThe following comparison operators are supported in any expression: ==, !=, <, >, >=, and <=.\n\n{% if user.age >= 18 %}\n\t...\n{% endif %}\n\n\n\n# Tests\n\nThe is operator performs tests. Tests can be used to test an expression for certain qualities. The right operand is the name of the test:\n\n{% if 3 is odd %}\n\t...\n{% endif %}\n\n\nTests can be negated by using the is not operator:\n\n{% if name is not null %}\n\t...\n{% endif %}\n\n\n\n# Conditional (Ternary) Operator\n\nThe conditional operator is similar to its Java counterpart:\n\n{{ foo ? "yes" : "no" }}\n\n\n\n# Null-Coalescing Operator\n\nThe null-coalescing operator allow to quickly test if a variables is defined (exists) and to use alternative value. :\n\n{% set baz = "baz" %}\n{{ foo ?? bar ?? baz }}\n\n{# results in: \'baz\' #}\n\n{{ foo ?? bar ?? raise }}\n{# results: an exception because none of the 3 vars is defined  #}\n\n\n\n# Operator Precedence\n\nIn order from highest to lowest precedence:\n\n * .\n * |\n * %, /, *\n * -, +\n * ==, !=, >, <, >=, <=\n * is, is not\n * and\n * or\n\n\n# Parents with Flowable Task.\n\nIf you have many Flowable Tasks, it can be complex to get taskrun.value because this one is only available during the direct task from each. If you have any Flowable Tasks after, the taskrun.value of the first iteration will be lost (or overwritten). In order to deal with this, we have included the parent & parents vars.\n\nThis is illustrated in the flow below:\n\nid: each-switch\nnamespace: io.kestra.tests\n\ntasks:\n  - id: t1\n    type: io.kestra.core.tasks.debugs.Return\n    format: "{{task.id}} > {{taskrun.startDate}}"\n  - id: 2_each\n    type: io.kestra.core.tasks.flows.EachSequential\n    value: \'["a", "b"]\'\n    tasks:\n      # Switch\n      - id: 2-1_switch\n        type: io.kestra.core.tasks.flows.Switch\n        value: "{{taskrun.value}}"\n        cases:\n          a:\n            - id: 2-1_switch-letter-a\n              type: io.kestra.core.tasks.debugs.Return\n              format: "{{task.id}}"\n          b:\n            - id: 2-1_switch-letter-b\n              type: io.kestra.core.tasks.debugs.Return\n              format: "{{task.id}}"\n\n            - id: 2-1_each\n              type: io.kestra.core.tasks.flows.EachSequential\n              value: \'["1", "2"]\'\n              tasks:\n              - id: 2-1-1_switch\n                type: io.kestra.core.tasks.flows.Switch\n                value: "{{taskrun.value}}"\n                cases:\n                  1:\n                    - id: 2-1-1_switch-number-1\n                      type: io.kestra.core.tasks.debugs.Return\n                      format: "{{parents[0].taskrun.value}}"\n                  2:\n                    - id: 2-1-1_switch-number-2\n                      type: io.kestra.core.tasks.debugs.Return\n                      format: "{{parents[0].taskrun.value}} {{parents[1].taskrun.value}}"\n  - id: 2_end\n    type: io.kestra.core.tasks.debugs.Return\n    format: "{{task.id}} > {{taskrun.startDate}}"\n\n\n\nAs you can see, the parent will give direct access to the first parent output and the value of the current one, while the parents.INDEX lets go you deeper down the tree.\n\nIn the task 2-1-1_switch-number-2:\n\n * {{taskrun.value}}: mean the value of the task 2-1-1_switch\n * {{parents[0].taskrun.value}} or {{parent.taskrun.value}}: mean the value of the task 2-1_each\n * {{parents[1].taskrun.value}}: mean the value of the task 2-1_switch\n * {{parents[2].taskrun.value}}: mean the value of the task 2_each',normalizedContent:'# basic usage\n\n\n# syntax reference\n\nthere are two primary delimiters used within a pebble template: {{ ... }} and {% ... %}. the first set of delimiters will output the result of an expression. expressions can be very simple (ex. a variable name) or much more complex.\nthe second set of delimiters is used to change the control flow of the template; it can contain an if-statement, define a parent template, define a new block, etc.\n\n\n# variables\n\nyou can print variables directly to the output; for example, if the context contains a variable called foo which is a\nstring with the value "bar" you can do the following which will output "bar".\n\n{{ foo }}\n\n\nyou can use the dot (.) notation to access attributes of variables. if the attribute contains any atypical characters, you can use the subscript notation ([]) instead.\n\n{{ foo.bar }}\n{{ foo["bar"] }}\n\n\nadditionally, if foo is a list, then foo[0] can be used.\n\nif the value of variable (or attribute) is undefined, it will throw an error and fail the task.\n\n\n# filters\n\noutput can be further modified with the use of filters. filters are separated from the variable using a pipe symbol (|) and may have optional arguments in parentheses. multiple filters can be chained and the output of one filter is applied to the next.\n\n{{ "if life gives you lemons, eat lemons." | upper | abbreviate(13) }}\n\n\nthe above example will output the following:\n\nif life gi...\n\n\n\n# functions\n\nwhereas filters are intended to modify existing content/variables, functions are intended to generate new content. similar to other programming languages, functions are invoked via their name followed by parentheses (()).\n\n{{ max(user.score, highscore) }}\n\n\n\n# control structure\n\npebble provides several tags to control the flow of your template, two of the main ones being the for loop, and for statements.\n\n\n{% for article in articles %}\n    <h3>{{ article.title }}</h3>\n    <p>{{ article.content }}</p>\n{% else %}\n    <p> there are no articles. </p>\n{% endfor %}\n\n\n\n\n{% if category == "news" %}\n    {{ news }}\n{% elseif category == "sports" %}\n    {{ sports }}\n{% else %}\n    <p>please select a category</p>\n{% endif %}\n\n\n\n\n# macros\n\nmacros are lightweight and re-usable template fragments. a macro is defined via the macro tag:\n\n\n{% macro input(type, name) %}\n\t<input type="{{ type }}" name="{{ name }}" />\n{% endmacro %}\n\n\n\nand the macro will be invoked just like a function:\n\n{{ input("text", "name", "mitchell") }}\n\n\na macro does not have access to the main context; the only variables it can access are its local arguments.\n\n\n# named arguments\n\nusing named arguments allows you to be more explicit with the values you are passing to a filter, function, test or macro. they also allow you to avoid specifying arguments for which you don\'t want to change the default value.\n\n{{ stringdate | date(existingformat="yyyy-mmmm-d", format="yyyy/mmmm/d") }}\n\n\npositional arguments can be used in conjunction with named arguments but all positional arguments must come before any named arguments:\n\n{{ stringdate | date("yyyy/mmmm/d", existingformat="yyyy-mmmm-d") }}\n\n\nmacros are a great use case for named arguments because they also allow you to define default values for unused arguments:\n\n\n{% macro input(type="text", name, value) %}\n\t<input type="{{ type }}" name="{{ name }}" value="{{ value }}" />\n{% endmacro %}\n\n{{ input(name="country") }}\n\n{# will output: <input type="text" name="country" value="" /> #}\n\n\n\n\n# comments\n\nyou can comment out any part of the template using the {# ... #} delimiters. these comments will not appear in the rendered output.\n\n\n{# this is a comment #}\n{% for article in articles %}\n\t<h3>{{ article.title }}</h3>\n\t<p>{{ article.content }}</p>\n{% endfor %}\n\n\n\n\n# expressions\n\nexpressions in a pebble template are very similar to expressions found in java.\n\n\n# literals\n\nthe simplest form of expressions are literals. literals are representations for java types such as strings and numbers.\n\n * "hello world": everything between two double or single quotes is a string. you can use a backslash to escape\n   quotation marks within the string.\n * "hello #{who}": string interpolation is also possible using #{} inside quotes. in this example,\n   if the value of the variable who is "world", then the expression will be evaluated to "hello world".\n * 100 + 10l * 2.5: integers, longs and floating point numbers are similar to their java counterparts.\n * true / false: boolean values equivalent to their java counterparts.\n * null: represents no specific value, similar to it\'s java counterpart. none is an alias for null.\n\n\n# collections\n\nboth lists and maps can be created directly within the template.\n\n * ["apple", "banana", "pear"]: a list of strings\n * {"apple":"red", "banana":"yellow", "pear":"green"}: a map of strings\n\nthe collections can contain expressions.\n\n\n# math\n\npebble allows you to calculate values using some basic mathematical operators. the following operators are supported:\n\n * +: addition\n * -: subtraction\n * /: division\n * %: modulus\n * *: multiplication\n\n\n# logic\n\nyou can combine multiple expressions with the following operators:\n\n * and: returns true if both operands are true\n * or: returns true if either operand is true\n * not: negates an expression\n * (...): groups expressions together\n\n\n# comparisons\n\nthe following comparison operators are supported in any expression: ==, !=, <, >, >=, and <=.\n\n{% if user.age >= 18 %}\n\t...\n{% endif %}\n\n\n\n# tests\n\nthe is operator performs tests. tests can be used to test an expression for certain qualities. the right operand is the name of the test:\n\n{% if 3 is odd %}\n\t...\n{% endif %}\n\n\ntests can be negated by using the is not operator:\n\n{% if name is not null %}\n\t...\n{% endif %}\n\n\n\n# conditional (ternary) operator\n\nthe conditional operator is similar to its java counterpart:\n\n{{ foo ? "yes" : "no" }}\n\n\n\n# null-coalescing operator\n\nthe null-coalescing operator allow to quickly test if a variables is defined (exists) and to use alternative value. :\n\n{% set baz = "baz" %}\n{{ foo ?? bar ?? baz }}\n\n{# results in: \'baz\' #}\n\n{{ foo ?? bar ?? raise }}\n{# results: an exception because none of the 3 vars is defined  #}\n\n\n\n# operator precedence\n\nin order from highest to lowest precedence:\n\n * .\n * |\n * %, /, *\n * -, +\n * ==, !=, >, <, >=, <=\n * is, is not\n * and\n * or\n\n\n# parents with flowable task.\n\nif you have many flowable tasks, it can be complex to get taskrun.value because this one is only available during the direct task from each. if you have any flowable tasks after, the taskrun.value of the first iteration will be lost (or overwritten). in order to deal with this, we have included the parent & parents vars.\n\nthis is illustrated in the flow below:\n\nid: each-switch\nnamespace: io.kestra.tests\n\ntasks:\n  - id: t1\n    type: io.kestra.core.tasks.debugs.return\n    format: "{{task.id}} > {{taskrun.startdate}}"\n  - id: 2_each\n    type: io.kestra.core.tasks.flows.eachsequential\n    value: \'["a", "b"]\'\n    tasks:\n      # switch\n      - id: 2-1_switch\n        type: io.kestra.core.tasks.flows.switch\n        value: "{{taskrun.value}}"\n        cases:\n          a:\n            - id: 2-1_switch-letter-a\n              type: io.kestra.core.tasks.debugs.return\n              format: "{{task.id}}"\n          b:\n            - id: 2-1_switch-letter-b\n              type: io.kestra.core.tasks.debugs.return\n              format: "{{task.id}}"\n\n            - id: 2-1_each\n              type: io.kestra.core.tasks.flows.eachsequential\n              value: \'["1", "2"]\'\n              tasks:\n              - id: 2-1-1_switch\n                type: io.kestra.core.tasks.flows.switch\n                value: "{{taskrun.value}}"\n                cases:\n                  1:\n                    - id: 2-1-1_switch-number-1\n                      type: io.kestra.core.tasks.debugs.return\n                      format: "{{parents[0].taskrun.value}}"\n                  2:\n                    - id: 2-1-1_switch-number-2\n                      type: io.kestra.core.tasks.debugs.return\n                      format: "{{parents[0].taskrun.value}} {{parents[1].taskrun.value}}"\n  - id: 2_end\n    type: io.kestra.core.tasks.debugs.return\n    format: "{{task.id}} > {{taskrun.startdate}}"\n\n\n\nas you can see, the parent will give direct access to the first parent output and the value of the current one, while the parents.index lets go you deeper down the tree.\n\nin the task 2-1-1_switch-number-2:\n\n * {{taskrun.value}}: mean the value of the task 2-1-1_switch\n * {{parents[0].taskrun.value}} or {{parent.taskrun.value}}: mean the value of the task 2-1_each\n * {{parents[1].taskrun.value}}: mean the value of the task 2-1_switch\n * {{parents[2].taskrun.value}}: mean the value of the task 2_each',charsets:{cjk:!0}},{title:"Deprecated Handlebars",frontmatter:{order:10,meta:[{property:"article:modified_time",content:"2022-04-03T19:54:15.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Deprecated Handlebars"},{property:"og:description",content:"Deprecated Handlebars | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/deprecated-handlebars/"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Deprecated Handlebars"},{name:"twitter:description",content:"Deprecated Handlebars | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/deprecated-handlebars/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/deprecated-handlebars/",relativePath:"docs/developer-guide/variables/deprecated-handlebars/README.md",key:"v-854686b0",path:"/docs/developer-guide/variables/deprecated-handlebars/",headers:[{level:2,title:"Functions",slug:"functions",normalizedTitle:"functions",charIndex:468}],lastUpdated:"4/3/2022, 7:54:15 PM",lastUpdatedTimestamp:1649015655e3,headersStr:"Functions",content:"# Deprecated Handlebars\n\nWARNING\n\nHandlebars variable is deprecated and superseded by Pebble. These functions will be removed soon and are disabled by default.\n\nVariables are specific fields for task. They use the power of handlebars with Kestra's special context system, allowing powerful task composition.\n\nVariables can use variable information registered/existing in the execution context. The context is data injected in Variables and from different sources:\n\n\n# Functions\n\nSometimes, you need to change the format of variables. To do this, you can use some of the following functions:\n\n * String functions\n * Boolean functions\n * Number functions\n * Date functions\n * Json functions\n * Iterations functions\n * Vars functions",normalizedContent:"# deprecated handlebars\n\nwarning\n\nhandlebars variable is deprecated and superseded by pebble. these functions will be removed soon and are disabled by default.\n\nvariables are specific fields for task. they use the power of handlebars with kestra's special context system, allowing powerful task composition.\n\nvariables can use variable information registered/existing in the execution context. the context is data injected in variables and from different sources:\n\n\n# functions\n\nsometimes, you need to change the format of variables. to do this, you can use some of the following functions:\n\n * string functions\n * boolean functions\n * number functions\n * date functions\n * json functions\n * iterations functions\n * vars functions",charsets:{}},{title:"Boolean functions",frontmatter:{order:5,meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Boolean functions"},{property:"og:description",content:"Boolean functions | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/deprecated-handlebars/boolean.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Boolean functions"},{name:"twitter:description",content:"Boolean functions | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/deprecated-handlebars/boolean.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/deprecated-handlebars/boolean.html",relativePath:"docs/developer-guide/variables/deprecated-handlebars/boolean.md",key:"v-23612046",path:"/docs/developer-guide/variables/deprecated-handlebars/boolean.html",headers:[{level:3,title:"eq: Equality",slug:"eq-equality",normalizedTitle:"eq: equality",charIndex:26},{level:3,title:"neq: Not equality",slug:"neq-not-equality",normalizedTitle:"neq: not equality",charIndex:42},{level:3,title:"gt: Greater operator",slug:"gt-greater-operator",normalizedTitle:"gt: greater operator",charIndex:63},{level:3,title:"gte: Greater or equal operator",slug:"gte-greater-or-equal-operator",normalizedTitle:"gte: greater or equal operator",charIndex:87},{level:3,title:"lt: Less operator",slug:"lt-less-operator",normalizedTitle:"lt: less operator",charIndex:121},{level:3,title:"lte: Less or equal operator",slug:"lte-less-or-equal-operator",normalizedTitle:"lte: less or equal operator",charIndex:142},{level:3,title:"and: And operator",slug:"and-and-operator",normalizedTitle:"and: and operator",charIndex:173},{level:3,title:"or: Or operator",slug:"or-or-operator",normalizedTitle:"or: or operator",charIndex:194},{level:3,title:"not: Not operator",slug:"not-not-operator",normalizedTitle:"not: not operator",charIndex:213},{level:3,title:"cmp: Compare operator",slug:"cmp-compare-operator",normalizedTitle:"cmp: compare operator",charIndex:234},{level:3,title:"isNull: Compare operator",slug:"isnull-compare-operator",normalizedTitle:"isnull: compare operator",charIndex:259},{level:3,title:"isNotNull: Compare operator",slug:"isnotnull-compare-operator",normalizedTitle:"isnotnull: compare operator",charIndex:287}],lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:"eq: Equality neq: Not equality gt: Greater operator gte: Greater or equal operator lt: Less operator lte: Less or equal operator and: And operator or: Or operator not: Not operator cmp: Compare operator isNull: Compare operator isNotNull: Compare operator",content:"# Boolean functions\n\n\n\n * eq: Equality\n * neq: Not equality\n * gt: Greater operator\n * gte: Greater or equal operator\n * lt: Less operator\n * lte: Less or equal operator\n * and: And operator\n * or: Or operator\n * not: Not operator\n * cmp: Compare operator\n * isNull: Compare operator\n * isNotNull: Compare operator\n\n\n\n\n# eq: Equality\n\nTest if two elements are equals.\n\n> Render yes or no:\n\n  {{#eq a b}}\n    yes\n  {{else}}\n    no\n  {{/eq}}\n\n\n> Render true or false:\n\n  {{eq a b}}\n\n\n> Render yes or no:\n\n  {{eq a b yes='yes' no='no'}}\n\n\n\n# neq: Not equality\n\nTest if two elements are NOT equals.\n\n> Render yes or no:\n\n  {{#neq a b}}\n    yes\n  {{else}}\n    no\n  {{/neq}}\n\n\n> Render true or false:\n\n  {{neq a b}}\n\n\n> Render yes or no:\n\n  {{neq a b yes='yes' no='no'}}\n\n\n\n# gt: Greater operator\n\nGreater operator (arguments must be Comparable elements).\n\n> Render yes or no:\n\n  {{#gt a b}}\n    yes\n  {{else}}\n    no\n  {{/gt}}\n\n\n> Render true or false:\n\n  {{gt a b}}\n\n\n> Render yes or no:\n\n  {{gte a b yes='yes' no='no'}}\n\n\n\n# gte: Greater or equal operator\n\nGreater or equal operator (arguments must be Comparable elements).\n\n> Render yes or no:\n\n  {{#gte a b}}\n    yes\n  {{else}}\n    no\n  {{/gte}}\n\n\n> Render true or false:\n\n  {{gte a b}}\n\n\n> Render yes or no:\n\n  {{gte a b yes='yes' no='no'}}\n\n\n\n# lt: Less operator\n\nLess than operator (arguments must be Comparable elements).\n\n> Render yes or no:\n\n  {{#lt a b}}\n    yes\n  {{else}}\n    no\n  {{/lt}}\n\n\n> Render true or false:\n\n  {{lt a b}}\n\n\n> Render yes or no:\n\n  {{lt a b yes='yes' no='no'}}\n\n\n\n# lte: Less or equal operator\n\nLess than operator (arguments must be Comparable elements.\n\n> Render yes or no:\n\n  {{#lte a b}}\n    yes\n  {{else}}\n    no\n  {{/lte}}\n\n\n> Render true or false:\n\n  {{lte a b}}\n\n\n> Render yes or no:\n\n  {{lte a b yes='yes' no='no'}}\n\n\n\n# and: And operator\n\nAnd operator. This is a boolean operation.\n\nTruthiness of arguments is determined by isEmpty, so this\nhelper can be used with non-boolean values.\n\nMultiple arguments are supported too:\n\n  {{#and a b c d}}\n    yes\n  {{else}}\n    no\n  {{/and}}\n\n\n> Render yes or no:\n\n  {{#and a b}}\n    yes\n  {{else}}\n    no\n  {{/and}}\n\n\n> Render true or false:\n\n  {{and a b}}\n\n\n> Render yes or no:\n\n  {{and a b yes='yes' no='no'}}\n\n\n\n# or: Or operator\n\nOr operator. This is a boolean operation\n\nTruthiness of arguments is determined by isEmpty, so this\nhelper can be used with non-boolean values.\n\nMultiple arguments are supported too:\n\n  {{#or a b c d}}\n    yes\n  {{else}}\n    no\n  {{/or}}\n\n\n> Render yes or no:\n\n  {{#or a b}}\n    yes\n  {{else}}\n    no\n  {{/or}}\n\n\n> Render true or false:\n\n  {{or a b}}\n\n\n> Render yes or no:\n\n  {{or a b yes='yes' no='no'}}\n\n\n\n# not: Not operator\n\nTruthiness of arguments is determined by isEmpty, so this\nhelper can be used with non-boolean values.\n\n> Render yes or no:\n\n  {{#not a}}\n    yes\n  {{else}}\n    no\n  {{/not}}\n\n\n> Render true or false:\n\n  {{not a}}\n\n\n> Render y or n:\n\n  {{not a yes='yes' no='no'}}\n\n\n\n# cmp: Compare operator\n\nCompare to object as Comparables.\n\n> Renders 1 if a > b, 0 if a == b -1 if a < b\n\n  {{cmp a b}}\n\n\n\n# isNull: Compare operator\n\nTest if one element is null.\n\n  {{isNull a}}\n\n\n\n# isNotNull: Compare operator\n\nTest if one element is not null.\n\n  {{isNotNull a}}\n",normalizedContent:"# boolean functions\n\n\n\n * eq: equality\n * neq: not equality\n * gt: greater operator\n * gte: greater or equal operator\n * lt: less operator\n * lte: less or equal operator\n * and: and operator\n * or: or operator\n * not: not operator\n * cmp: compare operator\n * isnull: compare operator\n * isnotnull: compare operator\n\n\n\n\n# eq: equality\n\ntest if two elements are equals.\n\n> render yes or no:\n\n  {{#eq a b}}\n    yes\n  {{else}}\n    no\n  {{/eq}}\n\n\n> render true or false:\n\n  {{eq a b}}\n\n\n> render yes or no:\n\n  {{eq a b yes='yes' no='no'}}\n\n\n\n# neq: not equality\n\ntest if two elements are not equals.\n\n> render yes or no:\n\n  {{#neq a b}}\n    yes\n  {{else}}\n    no\n  {{/neq}}\n\n\n> render true or false:\n\n  {{neq a b}}\n\n\n> render yes or no:\n\n  {{neq a b yes='yes' no='no'}}\n\n\n\n# gt: greater operator\n\ngreater operator (arguments must be comparable elements).\n\n> render yes or no:\n\n  {{#gt a b}}\n    yes\n  {{else}}\n    no\n  {{/gt}}\n\n\n> render true or false:\n\n  {{gt a b}}\n\n\n> render yes or no:\n\n  {{gte a b yes='yes' no='no'}}\n\n\n\n# gte: greater or equal operator\n\ngreater or equal operator (arguments must be comparable elements).\n\n> render yes or no:\n\n  {{#gte a b}}\n    yes\n  {{else}}\n    no\n  {{/gte}}\n\n\n> render true or false:\n\n  {{gte a b}}\n\n\n> render yes or no:\n\n  {{gte a b yes='yes' no='no'}}\n\n\n\n# lt: less operator\n\nless than operator (arguments must be comparable elements).\n\n> render yes or no:\n\n  {{#lt a b}}\n    yes\n  {{else}}\n    no\n  {{/lt}}\n\n\n> render true or false:\n\n  {{lt a b}}\n\n\n> render yes or no:\n\n  {{lt a b yes='yes' no='no'}}\n\n\n\n# lte: less or equal operator\n\nless than operator (arguments must be comparable elements.\n\n> render yes or no:\n\n  {{#lte a b}}\n    yes\n  {{else}}\n    no\n  {{/lte}}\n\n\n> render true or false:\n\n  {{lte a b}}\n\n\n> render yes or no:\n\n  {{lte a b yes='yes' no='no'}}\n\n\n\n# and: and operator\n\nand operator. this is a boolean operation.\n\ntruthiness of arguments is determined by isempty, so this\nhelper can be used with non-boolean values.\n\nmultiple arguments are supported too:\n\n  {{#and a b c d}}\n    yes\n  {{else}}\n    no\n  {{/and}}\n\n\n> render yes or no:\n\n  {{#and a b}}\n    yes\n  {{else}}\n    no\n  {{/and}}\n\n\n> render true or false:\n\n  {{and a b}}\n\n\n> render yes or no:\n\n  {{and a b yes='yes' no='no'}}\n\n\n\n# or: or operator\n\nor operator. this is a boolean operation\n\ntruthiness of arguments is determined by isempty, so this\nhelper can be used with non-boolean values.\n\nmultiple arguments are supported too:\n\n  {{#or a b c d}}\n    yes\n  {{else}}\n    no\n  {{/or}}\n\n\n> render yes or no:\n\n  {{#or a b}}\n    yes\n  {{else}}\n    no\n  {{/or}}\n\n\n> render true or false:\n\n  {{or a b}}\n\n\n> render yes or no:\n\n  {{or a b yes='yes' no='no'}}\n\n\n\n# not: not operator\n\ntruthiness of arguments is determined by isempty, so this\nhelper can be used with non-boolean values.\n\n> render yes or no:\n\n  {{#not a}}\n    yes\n  {{else}}\n    no\n  {{/not}}\n\n\n> render true or false:\n\n  {{not a}}\n\n\n> render y or n:\n\n  {{not a yes='yes' no='no'}}\n\n\n\n# cmp: compare operator\n\ncompare to object as comparables.\n\n> renders 1 if a > b, 0 if a == b -1 if a < b\n\n  {{cmp a b}}\n\n\n\n# isnull: compare operator\n\ntest if one element is null.\n\n  {{isnull a}}\n\n\n\n# isnotnull: compare operator\n\ntest if one element is not null.\n\n  {{isnotnull a}}\n",charsets:{}},{title:"Date functions",frontmatter:{order:4,meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Date functions"},{property:"og:description",content:"Date functions | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/deprecated-handlebars/date.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Date functions"},{name:"twitter:description",content:"Date functions | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/deprecated-handlebars/date.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/deprecated-handlebars/date.html",relativePath:"docs/developer-guide/variables/deprecated-handlebars/date.md",key:"v-379f3ffa",path:"/docs/developer-guide/variables/deprecated-handlebars/date.html",headers:[{level:2,title:"dateFormat: Date format",slug:"dateformat-date-format",normalizedTitle:"dateformat: date format",charIndex:23},{level:2,title:"now: Current date",slug:"now-current-date",normalizedTitle:"now: current date",charIndex:50},{level:2,title:"timestamp: Current second timestamp",slug:"timestamp-current-second-timestamp",normalizedTitle:"timestamp: current second timestamp",charIndex:71},{level:2,title:"nanotimestamp: Current nano timestamp",slug:"nanotimestamp-current-nano-timestamp",normalizedTitle:"nanotimestamp: current nano timestamp",charIndex:110},{level:2,title:"microtimestamp: Current micro timestamp",slug:"microtimestamp-current-micro-timestamp",normalizedTitle:"microtimestamp: current micro timestamp",charIndex:151},{level:2,title:"dateAdd: Add some units to date",slug:"dateadd-add-some-units-to-date",normalizedTitle:"dateadd: add some units to date",charIndex:194}],lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:"dateFormat: Date format now: Current date timestamp: Current second timestamp nanotimestamp: Current nano timestamp microtimestamp: Current micro timestamp dateAdd: Add some units to date",content:"# Date functions\n\n\n\n * dateFormat: Date format\n * now: Current date\n * timestamp: Current second timestamp\n * nanotimestamp: Current nano timestamp\n * microtimestamp: Current micro timestamp\n * dateAdd: Add some units to date\n\n\n\n\n# dateFormat: Date format\n\n{{dateFormat date ['format'] [format='format'][tz=timeZone|timeZoneId]}}\n\n\n# Arguments:\n\n * format: Format parameters is one of :\n   * full: Sunday, September 8, 2013 at 4:19:12 PM Central European Summer Time\n   * long: September 8, 2013 at 4:19:12 PM CEST\n   * medium: Sep 8, 2013, 4:19:12 PM\n   * short: 9/8/13, 4:19 PM\n   * iso: 2013-09-08T16:19:12.000000+02:00\n   * iso_sec: 2013-09-08T16:19:12+02:00\n   * sql: 2013-09-08 16:19:12.000000\n   * sql_seq: 2013-09-08 16:19:12\n   * iso_date_time: 2013-09-08T16:19:12+02:00[Europe/Paris]\n   * iso_date: 2013-09-08+02:00\n   * iso_time: 16:19:12+02:00\n   * iso_local_date: 2013-09-08\n   * iso_instant: 2013-09-08T14:19:12Z\n   * iso_local_date_time: 2013-09-08T16:19:12\n   * iso_local_time: 16:19:12\n   * iso_offset_time: 16:19:12+02:00\n   * iso_ordinal_date: 2013-251+02:00\n   * iso_week_date: 2013-W36-7+02:00\n   * iso_zoned_date_time: 2013-09-08T16:19:12+02:00[Europe/Paris]\n   * rfc_1123_date_time: Sun, 8 Sep 2013 16:19:12 +0200\n   * pattern: a date pattern.\n   * Otherwise, the default formatter iso will be used. The format option can be specified as a parameter or hash (a.k.a named parameter).\n   * You can pass the any format from SimpleDateFormat\n * timezeome: with the format Europe/Paris\n\n\n# now: Current date\n\n   {{now ['format'] [tz=timeZone|timeZoneId]}}\n\n\n# Arguments:\n\n * format: Same format as dateFormat\n * timezone: with the format Europe/Paris\n\n\n# timestamp: Current second timestamp\n\n   {{timestamp}}\n\n\n\n# nanotimestamp: Current nano timestamp\n\n   {{nanotimestamp}}\n\n\n\n# microtimestamp: Current micro timestamp\n\n   {{microtimestamp}}\n\n\n\n# dateAdd: Add some units to date\n\n   {{ dateAdd yourDate quantity \"unit\" [format=\"format\"] [tz=timeZone|timeZoneId] }}\n   {{ dateAdd yourDate -1 \"DAYS\" }}\n\n\n * quantity: an integer value positive or negative\n * format: Format parameters is one of :\n   * NANOS\n   * MICROS\n   * MILLIS\n   * SECONDS\n   * MINUTES\n   * HOURS\n   * HALF_DAYS\n   * DAYS\n   * WEEKS\n   * MONTHS\n   * YEARS\n   * DECADES\n   * CENTURIES\n   * MILLENNIA\n   * ERAS",normalizedContent:"# date functions\n\n\n\n * dateformat: date format\n * now: current date\n * timestamp: current second timestamp\n * nanotimestamp: current nano timestamp\n * microtimestamp: current micro timestamp\n * dateadd: add some units to date\n\n\n\n\n# dateformat: date format\n\n{{dateformat date ['format'] [format='format'][tz=timezone|timezoneid]}}\n\n\n# arguments:\n\n * format: format parameters is one of :\n   * full: sunday, september 8, 2013 at 4:19:12 pm central european summer time\n   * long: september 8, 2013 at 4:19:12 pm cest\n   * medium: sep 8, 2013, 4:19:12 pm\n   * short: 9/8/13, 4:19 pm\n   * iso: 2013-09-08t16:19:12.000000+02:00\n   * iso_sec: 2013-09-08t16:19:12+02:00\n   * sql: 2013-09-08 16:19:12.000000\n   * sql_seq: 2013-09-08 16:19:12\n   * iso_date_time: 2013-09-08t16:19:12+02:00[europe/paris]\n   * iso_date: 2013-09-08+02:00\n   * iso_time: 16:19:12+02:00\n   * iso_local_date: 2013-09-08\n   * iso_instant: 2013-09-08t14:19:12z\n   * iso_local_date_time: 2013-09-08t16:19:12\n   * iso_local_time: 16:19:12\n   * iso_offset_time: 16:19:12+02:00\n   * iso_ordinal_date: 2013-251+02:00\n   * iso_week_date: 2013-w36-7+02:00\n   * iso_zoned_date_time: 2013-09-08t16:19:12+02:00[europe/paris]\n   * rfc_1123_date_time: sun, 8 sep 2013 16:19:12 +0200\n   * pattern: a date pattern.\n   * otherwise, the default formatter iso will be used. the format option can be specified as a parameter or hash (a.k.a named parameter).\n   * you can pass the any format from simpledateformat\n * timezeome: with the format europe/paris\n\n\n# now: current date\n\n   {{now ['format'] [tz=timezone|timezoneid]}}\n\n\n# arguments:\n\n * format: same format as dateformat\n * timezone: with the format europe/paris\n\n\n# timestamp: current second timestamp\n\n   {{timestamp}}\n\n\n\n# nanotimestamp: current nano timestamp\n\n   {{nanotimestamp}}\n\n\n\n# microtimestamp: current micro timestamp\n\n   {{microtimestamp}}\n\n\n\n# dateadd: add some units to date\n\n   {{ dateadd yourdate quantity \"unit\" [format=\"format\"] [tz=timezone|timezoneid] }}\n   {{ dateadd yourdate -1 \"days\" }}\n\n\n * quantity: an integer value positive or negative\n * format: format parameters is one of :\n   * nanos\n   * micros\n   * millis\n   * seconds\n   * minutes\n   * hours\n   * half_days\n   * days\n   * weeks\n   * months\n   * years\n   * decades\n   * centuries\n   * millennia\n   * eras",charsets:{cjk:!0}},{title:"Iterations functions",frontmatter:{order:6,meta:[{property:"article:modified_time",content:"2022-04-10T20:37:32.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Iterations functions"},{property:"og:description",content:"Iterations functions | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/deprecated-handlebars/iterations.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Iterations functions"},{name:"twitter:description",content:"Iterations functions | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/deprecated-handlebars/iterations.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/deprecated-handlebars/iterations.html",relativePath:"docs/developer-guide/variables/deprecated-handlebars/iterations.md",key:"v-500babc3",path:"/docs/developer-guide/variables/deprecated-handlebars/iterations.html",headers:[{level:2,title:"For each",slug:"for-each",normalizedTitle:"for each",charIndex:29}],lastUpdated:"4/10/2022, 8:37:32 PM",lastUpdatedTimestamp:1649623052e3,headersStr:"For each",content:'# Iterations functions\n\n\n\n * For each\n\n\n\n\n# For each\n\nYou can iterate over a list using the built-in each helper. Inside the block, you can use this to reference the element being iterated over. contextualListVariable is an iterable item on which the mydata property is displayed for all entries.\n\nThe @index is a special variable available in the each loop context which value is the current index of the element beeing iterated. There are agic* variables like @index in a each context. The following ones are also available: @key @index @first @last @odd @even\n\nSee handlebars documentation for more about this topic.\n\n{{#each contextualListVariable}}\n    {{this.mydata}} {{@index}}\n{{/each}}\n\n\nwill produce\n\none 0\ntwo 1\nthree 2\ndjango! 3\n\n\nfor the following data sample when\n\ncontextualListVariable = [\n  {"mydata": "one"},\n  {"mydata": "two"},\n  {"mydata": "three"},\n  {"mydata": "django!"},\n]\n\n\nIf the contextual \'this\' is not convenient to use the data as you wish, it is possible to alias it as shown below:\n\n{{#each iterableVariable as | myItem | }}\n    {{myItem.mydata}}\n{{/each}}\n',normalizedContent:'# iterations functions\n\n\n\n * for each\n\n\n\n\n# for each\n\nyou can iterate over a list using the built-in each helper. inside the block, you can use this to reference the element being iterated over. contextuallistvariable is an iterable item on which the mydata property is displayed for all entries.\n\nthe @index is a special variable available in the each loop context which value is the current index of the element beeing iterated. there are agic* variables like @index in a each context. the following ones are also available: @key @index @first @last @odd @even\n\nsee handlebars documentation for more about this topic.\n\n{{#each contextuallistvariable}}\n    {{this.mydata}} {{@index}}\n{{/each}}\n\n\nwill produce\n\none 0\ntwo 1\nthree 2\ndjango! 3\n\n\nfor the following data sample when\n\ncontextuallistvariable = [\n  {"mydata": "one"},\n  {"mydata": "two"},\n  {"mydata": "three"},\n  {"mydata": "django!"},\n]\n\n\nif the contextual \'this\' is not convenient to use the data as you wish, it is possible to alias it as shown below:\n\n{{#each iterablevariable as | myitem | }}\n    {{myitem.mydata}}\n{{/each}}\n',charsets:{cjk:!0}},{title:"JSON functions",frontmatter:{order:7,meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"JSON functions"},{property:"og:description",content:"JSON functions | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/deprecated-handlebars/json.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"JSON functions"},{name:"twitter:description",content:"JSON functions | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/deprecated-handlebars/json.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/deprecated-handlebars/json.html",relativePath:"docs/developer-guide/variables/deprecated-handlebars/json.md",key:"v-a9bb447a",path:"/docs/developer-guide/variables/deprecated-handlebars/json.html",headers:[{level:2,title:"json Convert an object to json",slug:"json-convert-an-object-to-json",normalizedTitle:"json convert an object to json",charIndex:23},{level:2,title:"jq Transform vars with JQ",slug:"jq-transform-vars-with-jq",normalizedTitle:"jq transform vars with jq",charIndex:57}],lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:"json Convert an object to json jq Transform vars with JQ",content:'# JSON functions\n\n\n\n * json Convert an object to json\n * jq Transform vars with JQ\n\n\n\n\n# json Convert an object to json\n\nConvert an object to is JSON representation\n\n{{json output.task-id}}\n\n\nExample, if the current context is :\n\n{\n  "outputs": {\n    "task1": {\n      "value": 1,\n      "text": "awesome1"\n    },\n    "task2": {\n      "value": 2,\n      "text": "awesome2"\n    }\n  }\n}\n\n\nthe output of {{ json outputs.task2}} will be {"value":2,"text":"awesome2"}.\n\n\n# jq Transform vars with JQ\n\nApply the JQ expression to a variables.\n\n{{jq vars jqExpr [first=false]}}\n\n\nfirst mean to always fetch the first element, by default jq return an array of results\n\nWARNING\n\nInternally, Jackson JQ is used and support only a large subset of official JQ.\n\nExample, if the current context is :\n\n{\n  "outputs": {\n    "task1": {\n      "value": 1,\n      "text": "awesome1"\n    },\n    "task2": {\n      "value": 2,\n      "text": "awesome2"\n    }\n  }\n}\n\n\n{{jq outputs .task1.value true}}\n\n\nthe output will be 1.',normalizedContent:'# json functions\n\n\n\n * json convert an object to json\n * jq transform vars with jq\n\n\n\n\n# json convert an object to json\n\nconvert an object to is json representation\n\n{{json output.task-id}}\n\n\nexample, if the current context is :\n\n{\n  "outputs": {\n    "task1": {\n      "value": 1,\n      "text": "awesome1"\n    },\n    "task2": {\n      "value": 2,\n      "text": "awesome2"\n    }\n  }\n}\n\n\nthe output of {{ json outputs.task2}} will be {"value":2,"text":"awesome2"}.\n\n\n# jq transform vars with jq\n\napply the jq expression to a variables.\n\n{{jq vars jqexpr [first=false]}}\n\n\nfirst mean to always fetch the first element, by default jq return an array of results\n\nwarning\n\ninternally, jackson jq is used and support only a large subset of official jq.\n\nexample, if the current context is :\n\n{\n  "outputs": {\n    "task1": {\n      "value": 1,\n      "text": "awesome1"\n    },\n    "task2": {\n      "value": 2,\n      "text": "awesome2"\n    }\n  }\n}\n\n\n{{jq outputs .task1.value true}}\n\n\nthe output will be 1.',charsets:{}},{title:"Number functions",frontmatter:{order:3,meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Number functions"},{property:"og:description",content:"Number functions | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/deprecated-handlebars/number.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Number functions"},{name:"twitter:description",content:"Number functions | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/deprecated-handlebars/number.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/deprecated-handlebars/number.html",relativePath:"docs/developer-guide/variables/deprecated-handlebars/number.md",key:"v-375945a3",path:"/docs/developer-guide/variables/deprecated-handlebars/number.html",headers:[{level:2,title:"numberFormat: Format a number",slug:"numberformat-format-a-number",normalizedTitle:"numberformat: format a number",charIndex:25}],lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:"numberFormat: Format a number",content:'# Number functions\n\n\n\n * numberFormat: Format a number\n\n\n\n\n# numberFormat: Format a number\n\n   {{numberFormat number ["format"] [locale=default]}}\n\n\nArguments:\n\n * format: Format parameters is one of:\n   * "integer": the integer number format\n   * "percent": the percent number format\n   * "currency": the decimal number format\n   * "pattern": a decimal pattern.\n   * Otherwise, the default formatter will be used.\n\nMore options:\n\n * groupingUsed: Set whether or not grouping will be used in this format.\n * maximumFractionDigits: Sets the maximum number of digits allowed in the fraction portion of\n   a number.\n * maximumIntegerDigits: Sets the maximum number of digits allowed in the integer portion of a\n   number\n * minimumFractionDigits: Sets the minimum number of digits allowed in the fraction portion of\n   a number\n * minimumIntegerDigits: Sets the minimum number of digits allowed in the integer portion of a\n   number.\n * parseIntegerOnly: Sets whether or not numbers should be parsed as integers only.\n * roundingMode: Sets the {@link java.math.RoundingMode} used in this NumberFormat.',normalizedContent:'# number functions\n\n\n\n * numberformat: format a number\n\n\n\n\n# numberformat: format a number\n\n   {{numberformat number ["format"] [locale=default]}}\n\n\narguments:\n\n * format: format parameters is one of:\n   * "integer": the integer number format\n   * "percent": the percent number format\n   * "currency": the decimal number format\n   * "pattern": a decimal pattern.\n   * otherwise, the default formatter will be used.\n\nmore options:\n\n * groupingused: set whether or not grouping will be used in this format.\n * maximumfractiondigits: sets the maximum number of digits allowed in the fraction portion of\n   a number.\n * maximumintegerdigits: sets the maximum number of digits allowed in the integer portion of a\n   number\n * minimumfractiondigits: sets the minimum number of digits allowed in the fraction portion of\n   a number\n * minimumintegerdigits: sets the minimum number of digits allowed in the integer portion of a\n   number.\n * parseintegeronly: sets whether or not numbers should be parsed as integers only.\n * roundingmode: sets the {@link java.math.roundingmode} used in this numberformat.',charsets:{}},{title:"String functions",frontmatter:{order:2,meta:[{property:"article:modified_time",content:"2022-04-10T20:37:04.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"String functions"},{property:"og:description",content:"String functions | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/deprecated-handlebars/string.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"String functions"},{name:"twitter:description",content:"String functions | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/deprecated-handlebars/string.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/deprecated-handlebars/string.html",relativePath:"docs/developer-guide/variables/deprecated-handlebars/string.md",key:"v-5ce9c2ba",path:"/docs/developer-guide/variables/deprecated-handlebars/string.html",headers:[{level:2,title:"capitalizeFirst: Capitalizes the first character of the value.",slug:"capitalizefirst-capitalizes-the-first-character-of-the-value",normalizedTitle:"capitalizefirst: capitalizes the first character of the value.",charIndex:25},{level:2,title:"center: Centers the value in a field of a given width.",slug:"center-centers-the-value-in-a-field-of-a-given-width",normalizedTitle:"center: centers the value in a field of a given width.",charIndex:91},{level:2,title:"cut: Removes all values of arg from the given string.",slug:"cut-removes-all-values-of-arg-from-the-given-string",normalizedTitle:"cut: removes all values of arg from the given string.",charIndex:149},{level:2,title:"defaultIfEmpty: Default if empty",slug:"defaultifempty-default-if-empty",normalizedTitle:"defaultifempty: default if empty",charIndex:206},{level:2,title:"join: Join string",slug:"join-join-string",normalizedTitle:"join: join string",charIndex:242},{level:2,title:"ljust: Left-aligns the value in a field of a given width.",slug:"ljust-left-aligns-the-value-in-a-field-of-a-given-width",normalizedTitle:"ljust: left-aligns the value in a field of a given width.",charIndex:263},{level:2,title:"rjust: Right-aligns the value in a field of a given width.",slug:"rjust-right-aligns-the-value-in-a-field-of-a-given-width",normalizedTitle:"rjust: right-aligns the value in a field of a given width.",charIndex:324},{level:2,title:"substring Substring",slug:"substring-substring",normalizedTitle:"substring substring",charIndex:386},{level:2,title:"lower: Converts a string into all lowercase.",slug:"lower-converts-a-string-into-all-lowercase",normalizedTitle:"lower: converts a string into all lowercase.",charIndex:409},{level:2,title:"upper Converts a string into all uppercase.",slug:"upper-converts-a-string-into-all-uppercase",normalizedTitle:"upper converts a string into all uppercase.",charIndex:457},{level:2,title:"stringFormat: Formats the variable",slug:"stringformat-formats-the-variable",normalizedTitle:"stringformat: formats the variable",charIndex:504},{level:2,title:"stripTags: Strips all [X]HTML tags.",slug:"striptags-strips-all-x-html-tags",normalizedTitle:"striptags: strips all [x]html tags.",charIndex:542},{level:2,title:"capitalize: Capitalizes all the whitespace separated words in a String.",slug:"capitalize-capitalizes-all-the-whitespace-separated-words-in-a-string",normalizedTitle:"capitalize: capitalizes all the whitespace separated words in a string.",charIndex:581},{level:2,title:"abbreviate: Truncates a string",slug:"abbreviate-truncates-a-string",normalizedTitle:"abbreviate: truncates a string",charIndex:656},{level:2,title:"wordWrap: Wraps words",slug:"wordwrap-wraps-words",normalizedTitle:"wordwrap: wraps words",charIndex:690},{level:2,title:"replace Replaces",slug:"replace-replaces",normalizedTitle:"replace replaces",charIndex:715},{level:2,title:"yesno: Boolean to yes / no",slug:"yesno-boolean-to-yes-no",normalizedTitle:"yesno: boolean to yes / no",charIndex:735}],lastUpdated:"4/10/2022, 8:37:04 PM",lastUpdatedTimestamp:1649623024e3,headersStr:"capitalizeFirst: Capitalizes the first character of the value. center: Centers the value in a field of a given width. cut: Removes all values of arg from the given string. defaultIfEmpty: Default if empty join: Join string ljust: Left-aligns the value in a field of a given width. rjust: Right-aligns the value in a field of a given width. substring Substring lower: Converts a string into all lowercase. upper Converts a string into all uppercase. stringFormat: Formats the variable stripTags: Strips all [X]HTML tags. capitalize: Capitalizes all the whitespace separated words in a String. abbreviate: Truncates a string wordWrap: Wraps words replace Replaces yesno: Boolean to yes / no",content:'# String functions\n\n\n\n * capitalizeFirst: Capitalizes the first character of the value.\n * center: Centers the value in a field of a given width.\n * cut: Removes all values of arg from the given string.\n * defaultIfEmpty: Default if empty\n * join: Join string\n * ljust: Left-aligns the value in a field of a given width.\n * rjust: Right-aligns the value in a field of a given width.\n * substring Substring\n * lower: Converts a string into all lowercase.\n * upper Converts a string into all uppercase.\n * stringFormat: Formats the variable\n * stripTags: Strips all [X]HTML tags.\n * capitalize: Capitalizes all the whitespace separated words in a String.\n * abbreviate: Truncates a string\n * wordWrap: Wraps words\n * replace Replaces\n * yesno: Boolean to yes / no\n\n\n\n\n# capitalizeFirst: Capitalizes the first character of the value.\n\nIf the value is "kestra is cool !", the output will be "Kestra is cool !".\n\n{{capitalizeFirst value}}\n\n\n\n# center: Centers the value in a field of a given width.\n\nIf the value is "Handlebars.java", the output will be " Handlebars.java ".\n\n{{ center value size=19 [pad="char"] }}\n\n\n# Arguments:\n\n * size\n * pad\n\n\n# cut: Removes all values of arg from the given string.\n\nIf the value is "String with spaces", the output will be "Stringwithspaces".\n\n{{cut value [" "]}}\n\n\n\n# defaultIfEmpty: Default if empty\n\nIf the value evaluates to False, it will use the given default. Otherwise, it uses the\nvalue. If value is "" (an empty string), the output will be nothing.\n\n{{defaultIfEmpty value ["nothing"] }}\n\n\n\n# join: Join string\n\nJoins an array, iterator or an iterable with a string.\n\n{{join value join [prefix=""] [suffix=""]}}\n\n\n# Arguments:\n\n * join\n * prefix\n * suffix\n\n> If value is the list [\'a\', \'b\', \'c\'], the output will be the string "a // b // c".\n\n{{join value " // " [prefix=""] [suffix=""]}}\n\n\n> Join the "a", "b", "c", the output will be the string "a // b // c".\n\n{{join "a" "b" "c" " // " [prefix=""] [suffix=""]}}\n\n\n\n# ljust: Left-aligns the value in a field of a given width.\n\nIf the value is Handlebars.java, the output will be "Handlebars.java ".\n\n{{ljust value 20 [pad=" "] }}\n\n\n# Arguments:\n\n * field size\n\n\n# rjust: Right-aligns the value in a field of a given width.\n\nIf the value is Handlebars.java, the output will be " Handlebars.java".\n\n{{rjust value 20 [pad=" "] }}\n\n\n# Arguments:\n\n * field size\n * pad\n\n\n# substring Substring\n\nReturns a new CharSequence that is a subsequence of this sequence.\nThe subsequence starts with the char value at the specified index and\nends with the char value at nd - 1*\n\n{{substring value start end }}\n\n\n# Arguments:\n\n * start offset\n * end offset\n\nFor example:\n\n> If the value is Handlebars.java, the output will be "java".\n\n{{substring value 11 }}\n\n\n> If the value is Handlebars.java, the output will be "Handlebars".\n\n{{substring value 0 10 }}\n\n\n\n# lower: Converts a string into all lowercase.\n\nIf the value is \'Still MAD At Yoko\', the output will be \'still mad at yoko\'.\n\n{{lower value}}\n\n\n\n# upper Converts a string into all uppercase.\n\nIf the value is \'Hello\', the output will be \'HELLO\'.\n\n{{upper value}}\n\n\n\n# slugify Converts to lowercase\n\nThis removes non-word characters (alphanumerics and underscores) and converts spaces to hyphens. It also strips leading and trailing whitespace.\nIf the value is "Joel is a slug", the output will be "joel-is-a-slug".\n\n{{slugify value}}\n\n\n\n# stringFormat: Formats the variable\n\nAccording to the argument, a string formatting specifier.\nIf the value is "Hello %s" "handlebars.java", the output will be "Hello handlebars.java".\n\n{{stringFormat string param0 param1 ... paramN}}\n\n\n# Arguments:\n\n * format\n * paramN\n\n\n# stripTags: Strips all [X]HTML tags.\n\n{{stripTags value}}\n\n\n\n# capitalize: Capitalizes all the whitespace separated words in a String.\n\nIf the value is "my first post", the output will be "My First Post".\n\n{{ capitalize value [fully=false]}}\n\n\nArguments:\n\n * fully\n\n\n# abbreviate: Truncates a string\n\nThe string will be truncated if it is longer than the specified number of characters.\nTruncated strings will end with a translatable ellipsis sequence ("...").\nIf value is "Handlebars rocks", the output will be "Handlebars...".\n\n{{abbreviate value 13 }}\n\n\n# Arguments:\n\n * Number of characters to truncate to\n\n\n# wordWrap: Wraps words\n\nThis wraps the sentence at a specified line length. If value is Joel is a slug, the output would be: Joel\\nis a\\nslug\n\n{{ wordWrap value 5 }}\n\n\n# Arguments:\n\n * the number of characters at which to wrap the text\n\n\n# replace Replaces\n\nEach substring of this string that matches the literal target sequence with the specified literal replacement sequence.\nIf value is "Handlebars ...", the output will be "Handlebars rocks".\n\n{{ replace value "..." "rocks" }}\n\n\n\n# yesno: Boolean to yes / no\n\nFor true, false and (optionally) null, to the strings "yes", "no", "maybe".\n\n# Arguments:\n\n * yes\n * no\n * maybe\n\n{{yesno value [yes="yes"] [no="no"] maybe=["maybe"] }}\n',normalizedContent:'# string functions\n\n\n\n * capitalizefirst: capitalizes the first character of the value.\n * center: centers the value in a field of a given width.\n * cut: removes all values of arg from the given string.\n * defaultifempty: default if empty\n * join: join string\n * ljust: left-aligns the value in a field of a given width.\n * rjust: right-aligns the value in a field of a given width.\n * substring substring\n * lower: converts a string into all lowercase.\n * upper converts a string into all uppercase.\n * stringformat: formats the variable\n * striptags: strips all [x]html tags.\n * capitalize: capitalizes all the whitespace separated words in a string.\n * abbreviate: truncates a string\n * wordwrap: wraps words\n * replace replaces\n * yesno: boolean to yes / no\n\n\n\n\n# capitalizefirst: capitalizes the first character of the value.\n\nif the value is "kestra is cool !", the output will be "kestra is cool !".\n\n{{capitalizefirst value}}\n\n\n\n# center: centers the value in a field of a given width.\n\nif the value is "handlebars.java", the output will be " handlebars.java ".\n\n{{ center value size=19 [pad="char"] }}\n\n\n# arguments:\n\n * size\n * pad\n\n\n# cut: removes all values of arg from the given string.\n\nif the value is "string with spaces", the output will be "stringwithspaces".\n\n{{cut value [" "]}}\n\n\n\n# defaultifempty: default if empty\n\nif the value evaluates to false, it will use the given default. otherwise, it uses the\nvalue. if value is "" (an empty string), the output will be nothing.\n\n{{defaultifempty value ["nothing"] }}\n\n\n\n# join: join string\n\njoins an array, iterator or an iterable with a string.\n\n{{join value join [prefix=""] [suffix=""]}}\n\n\n# arguments:\n\n * join\n * prefix\n * suffix\n\n> if value is the list [\'a\', \'b\', \'c\'], the output will be the string "a // b // c".\n\n{{join value " // " [prefix=""] [suffix=""]}}\n\n\n> join the "a", "b", "c", the output will be the string "a // b // c".\n\n{{join "a" "b" "c" " // " [prefix=""] [suffix=""]}}\n\n\n\n# ljust: left-aligns the value in a field of a given width.\n\nif the value is handlebars.java, the output will be "handlebars.java ".\n\n{{ljust value 20 [pad=" "] }}\n\n\n# arguments:\n\n * field size\n\n\n# rjust: right-aligns the value in a field of a given width.\n\nif the value is handlebars.java, the output will be " handlebars.java".\n\n{{rjust value 20 [pad=" "] }}\n\n\n# arguments:\n\n * field size\n * pad\n\n\n# substring substring\n\nreturns a new charsequence that is a subsequence of this sequence.\nthe subsequence starts with the char value at the specified index and\nends with the char value at nd - 1*\n\n{{substring value start end }}\n\n\n# arguments:\n\n * start offset\n * end offset\n\nfor example:\n\n> if the value is handlebars.java, the output will be "java".\n\n{{substring value 11 }}\n\n\n> if the value is handlebars.java, the output will be "handlebars".\n\n{{substring value 0 10 }}\n\n\n\n# lower: converts a string into all lowercase.\n\nif the value is \'still mad at yoko\', the output will be \'still mad at yoko\'.\n\n{{lower value}}\n\n\n\n# upper converts a string into all uppercase.\n\nif the value is \'hello\', the output will be \'hello\'.\n\n{{upper value}}\n\n\n\n# slugify converts to lowercase\n\nthis removes non-word characters (alphanumerics and underscores) and converts spaces to hyphens. it also strips leading and trailing whitespace.\nif the value is "joel is a slug", the output will be "joel-is-a-slug".\n\n{{slugify value}}\n\n\n\n# stringformat: formats the variable\n\naccording to the argument, a string formatting specifier.\nif the value is "hello %s" "handlebars.java", the output will be "hello handlebars.java".\n\n{{stringformat string param0 param1 ... paramn}}\n\n\n# arguments:\n\n * format\n * paramn\n\n\n# striptags: strips all [x]html tags.\n\n{{striptags value}}\n\n\n\n# capitalize: capitalizes all the whitespace separated words in a string.\n\nif the value is "my first post", the output will be "my first post".\n\n{{ capitalize value [fully=false]}}\n\n\narguments:\n\n * fully\n\n\n# abbreviate: truncates a string\n\nthe string will be truncated if it is longer than the specified number of characters.\ntruncated strings will end with a translatable ellipsis sequence ("...").\nif value is "handlebars rocks", the output will be "handlebars...".\n\n{{abbreviate value 13 }}\n\n\n# arguments:\n\n * number of characters to truncate to\n\n\n# wordwrap: wraps words\n\nthis wraps the sentence at a specified line length. if value is joel is a slug, the output would be: joel\\nis a\\nslug\n\n{{ wordwrap value 5 }}\n\n\n# arguments:\n\n * the number of characters at which to wrap the text\n\n\n# replace replaces\n\neach substring of this string that matches the literal target sequence with the specified literal replacement sequence.\nif value is "handlebars ...", the output will be "handlebars rocks".\n\n{{ replace value "..." "rocks" }}\n\n\n\n# yesno: boolean to yes / no\n\nfor true, false and (optionally) null, to the strings "yes", "no", "maybe".\n\n# arguments:\n\n * yes\n * no\n * maybe\n\n{{yesno value [yes="yes"] [no="no"] maybe=["maybe"] }}\n',charsets:{}},{title:"Use variables",frontmatter:{order:1,meta:[{property:"article:modified_time",content:"2022-04-03T19:33:14.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Use variables"},{property:"og:description",content:"Use variables | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/deprecated-handlebars/use.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Use variables"},{name:"twitter:description",content:"Use variables | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/deprecated-handlebars/use.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/deprecated-handlebars/use.html",relativePath:"docs/developer-guide/variables/deprecated-handlebars/use.md",key:"v-2d82e9df",path:"/docs/developer-guide/variables/deprecated-handlebars/use.html",headers:[{level:2,title:"Common variables",slug:"common-variables",normalizedTitle:"common variables",charIndex:1202},{level:2,title:"Input variables",slug:"input-variables",normalizedTitle:"input variables",charIndex:1457},{level:2,title:"Outputs variables",slug:"outputs-variables",normalizedTitle:"outputs variables",charIndex:1998},{level:3,title:"Without dynamic tasks (Each)",slug:"without-dynamic-tasks-each",normalizedTitle:"without dynamic tasks (each)",charIndex:2121},{level:3,title:"With dynamic tasks (Each)",slug:"with-dynamic-tasks-each",normalizedTitle:"with dynamic tasks (each)",charIndex:2576},{level:3,title:"With Flowable Task nested.",slug:"with-flowable-task-nested",normalizedTitle:"with flowable task nested.",charIndex:3860}],lastUpdated:"4/3/2022, 7:33:14 PM",lastUpdatedTimestamp:1649014394e3,headersStr:"Common variables Input variables Outputs variables Without dynamic tasks (Each) With dynamic tasks (Each) With Flowable Task nested.",content:'# Use variables\n\nHere you will find some examples to illustrate the available variables, and how to get the value you need.\n\nHere is a typical payload for variables:\n\nglobals:\n  my-global-string: string\n  my-global-int: 1\n  my-global-bool: true\n\ntask:\n  id: float\n  type: io.kestra.core.tasks.debugs.Return\n\ntaskrun:\n  id: 5vPQJxRGCgJJ4mubuIJOUf\n  startDate: 2020-12-18T12:46:36.018869Z\n  attemptsCount: 0\n  value: value2\n\nparent:\n  taskrun:\n    value: valueA\n  outputs:\n    int: 1\n\nparents:\n  - taskrun:\n      value: valueA\n    outputs:\n      int: 1\n  - taskrun:\n      value: valueB\n    outputs:\n      int: 2\n\nflow:\n  id: inputs\n  namespace: io.kestra.tests\n\nexecution:\n  id: 42mXSJ1MRCdEhpbGNPqeES\n  startDate: 2020-12-18T12:45:28.489187Z\n\noutputs:\n  my-task-id-1: # standard task outputs\n    value: output-string\n  my-task-id-2: # standard task outputs\n    value: 42\n  my-each-task-id: # dynamic task (each)\n    value1: # outputs for value1\n      value: here is value1\n    value2: # outputs for value2\n      value: here is value2\n\ninputs:\n  file: kestra:///org/kestra/tests/inputs/executions/42mXSJ1MRCdEhpbGNPqeES/inputs/file/application.yml\n  string: myString\n  instant: 2019-10-06T18:27:49Z\n\n\n\n# Common variables\n\nAs you can see, there are a lot of common variables that can be used in your flow, some of the most common examples are : {{ execution.id }}, {{ execution.startDate }} that allows you to change a file name or sql query, for example.\n\n\n# Input variables\n\nInput variables are simple to access with {{ execution.NAME }}, where NAME is the name of the declared in your flow. The data will be dependent on the type of the inputs.\nOne special case for input variables is the FILE type, where the file is prepended by kestra://. This means the file is inside the internal Kestra storage. Most tasks will take this kind of URI as a property and will provide the same property output. This type of input variable allow the full file generated by one task to be used in another task.\n\n\n# Outputs variables\n\nOne of Kestra\'s most important abilities is to use all outputs from previous tasks in the next one.\n\n\n# Without dynamic tasks (Each)\n\nThis is the simplest and most common way to use outputs in the next task. In order to fetch a variable, just use {{ outputs.ID.NAME }} where :\n\n * ID is the task id\n * NAME is the name of the output. Each task type can have any outputs that are documented on the part outputs of their docs. For example, Bash task can have {{ outputs.ID.exitCode }}, {{ outputs.ID.outputFiles }}, {{ outputs.ID.stdErrLineCount }}, etc...\n\n\n# With dynamic tasks (Each)\n\nThis option is more complicated since Kestra will change the way the outputs are generated, since there can be multiple tasks with the same id, you will need to use {{ outputs.ID.VALUE.NAME }}.\n\nMost of the time, using Dynamic Tasks, you will need to fetch the current value of the iteration. This is done easily with {{ taskrun.value }}.\n\nBut what if a more complex flow is built, for example, with each containning 1 task (t1) to download a file (based on each value), and a second one (t2) that needs the output of t1. Such a flow would look something like this:\n\nid: each-sequential-nested\nnamespace: io.kestra.tests\n\ntasks:\n  - id: each\n    type: io.kestra.core.tasks.flows.EachSequential\n    value: \'["s1", "s2", "s3"]\'\n    tasks:\n      - id: t1\n        type: io.kestra.core.tasks.debugs.Return\n        format: "{{task.id}} > {{taskrun.value}}"\n      - id: t2\n        type: io.kestra.core.tasks.debugs.Return\n        format: "{{task.id}} > {{ (get outputs.t1 taskrun.value).value }} > {{taskrun.startDate}}"\n  - id: end\n    type: io.kestra.core.tasks.debugs.Return\n    format: "{{task.id}}"\n\n\nIn this case, you would need to use {{ (get outputs.t1 taskrun.value).value }}, which means give me from outputs.t1 the index results from taskrun.value.\n\n\n# With Flowable Task nested.\n\nIf you have many Flowable Tasks, it can be complex to use the get function, and moreover, the taskrun.value is only available during the direct task from each. If you have any Flowable Tasks after, the taskrun.value of the first iteration will be lost (or overwritten). In order to deal with this, we have included the parent & parents vars.\n\nThis is illustrated in the flow below:\n\nid: each-switch\nnamespace: io.kestra.tests\n\ntasks:\n  - id: t1\n    type: io.kestra.core.tasks.debugs.Return\n    format: "{{task.id}} > {{taskrun.startDate}}"\n  - id: 2_each\n    type: io.kestra.core.tasks.flows.EachSequential\n    value: \'["a", "b"]\'\n    tasks:\n      # Switch\n      - id: 2-1_switch\n        type: io.kestra.core.tasks.flows.Switch\n        value: "{{taskrun.value}}"\n        cases:\n          a:\n            - id: 2-1_switch-letter-a\n              type: io.kestra.core.tasks.debugs.Return\n              format: "{{task.id}}"\n          b:\n            - id: 2-1_switch-letter-b\n              type: io.kestra.core.tasks.debugs.Return\n              format: "{{task.id}}"\n\n            - id: 2-1_each\n              type: io.kestra.core.tasks.flows.EachSequential\n              value: \'["1", "2"]\'\n              tasks:\n              - id: 2-1-1_switch\n                type: io.kestra.core.tasks.flows.Switch\n                value: "{{taskrun.value}}"\n                cases:\n                  1:\n                    - id: 2-1-1_switch-number-1\n                      type: io.kestra.core.tasks.debugs.Return\n                      format: "{{parents.[0].taskrun.value}}"\n                  2:\n                    - id: 2-1-1_switch-number-2\n                      type: io.kestra.core.tasks.debugs.Return\n                      format: "{{parents.[0].taskrun.value}} {{parents.[1].taskrun.value}}"\n  - id: 2_end\n    type: io.kestra.core.tasks.debugs.Return\n    format: "{{task.id}} > {{taskrun.startDate}}"\n\n\n\nAs you can see, the parent will give direct access to the first parent output and the value of the current one, while the parents.INDEX lets go you deeper down the tree.\n\nIn the task 2-1-1_switch-number-2:\n\n * {{taskrun.value}}: mean the value of the task 2-1-1_switch\n * {{parents.[0].taskrun.value}} or {{parent.taskrun.value}}: mean the value of the task 2-1_each\n * {{parents.[1].taskrun.value}}: mean the value of the task 2-1_switch\n * {{parents.[2].taskrun.value}}: mean the value of the task 2_each',normalizedContent:'# use variables\n\nhere you will find some examples to illustrate the available variables, and how to get the value you need.\n\nhere is a typical payload for variables:\n\nglobals:\n  my-global-string: string\n  my-global-int: 1\n  my-global-bool: true\n\ntask:\n  id: float\n  type: io.kestra.core.tasks.debugs.return\n\ntaskrun:\n  id: 5vpqjxrgcgjj4mubuijouf\n  startdate: 2020-12-18t12:46:36.018869z\n  attemptscount: 0\n  value: value2\n\nparent:\n  taskrun:\n    value: valuea\n  outputs:\n    int: 1\n\nparents:\n  - taskrun:\n      value: valuea\n    outputs:\n      int: 1\n  - taskrun:\n      value: valueb\n    outputs:\n      int: 2\n\nflow:\n  id: inputs\n  namespace: io.kestra.tests\n\nexecution:\n  id: 42mxsj1mrcdehpbgnpqees\n  startdate: 2020-12-18t12:45:28.489187z\n\noutputs:\n  my-task-id-1: # standard task outputs\n    value: output-string\n  my-task-id-2: # standard task outputs\n    value: 42\n  my-each-task-id: # dynamic task (each)\n    value1: # outputs for value1\n      value: here is value1\n    value2: # outputs for value2\n      value: here is value2\n\ninputs:\n  file: kestra:///org/kestra/tests/inputs/executions/42mxsj1mrcdehpbgnpqees/inputs/file/application.yml\n  string: mystring\n  instant: 2019-10-06t18:27:49z\n\n\n\n# common variables\n\nas you can see, there are a lot of common variables that can be used in your flow, some of the most common examples are : {{ execution.id }}, {{ execution.startdate }} that allows you to change a file name or sql query, for example.\n\n\n# input variables\n\ninput variables are simple to access with {{ execution.name }}, where name is the name of the declared in your flow. the data will be dependent on the type of the inputs.\none special case for input variables is the file type, where the file is prepended by kestra://. this means the file is inside the internal kestra storage. most tasks will take this kind of uri as a property and will provide the same property output. this type of input variable allow the full file generated by one task to be used in another task.\n\n\n# outputs variables\n\none of kestra\'s most important abilities is to use all outputs from previous tasks in the next one.\n\n\n# without dynamic tasks (each)\n\nthis is the simplest and most common way to use outputs in the next task. in order to fetch a variable, just use {{ outputs.id.name }} where :\n\n * id is the task id\n * name is the name of the output. each task type can have any outputs that are documented on the part outputs of their docs. for example, bash task can have {{ outputs.id.exitcode }}, {{ outputs.id.outputfiles }}, {{ outputs.id.stderrlinecount }}, etc...\n\n\n# with dynamic tasks (each)\n\nthis option is more complicated since kestra will change the way the outputs are generated, since there can be multiple tasks with the same id, you will need to use {{ outputs.id.value.name }}.\n\nmost of the time, using dynamic tasks, you will need to fetch the current value of the iteration. this is done easily with {{ taskrun.value }}.\n\nbut what if a more complex flow is built, for example, with each containning 1 task (t1) to download a file (based on each value), and a second one (t2) that needs the output of t1. such a flow would look something like this:\n\nid: each-sequential-nested\nnamespace: io.kestra.tests\n\ntasks:\n  - id: each\n    type: io.kestra.core.tasks.flows.eachsequential\n    value: \'["s1", "s2", "s3"]\'\n    tasks:\n      - id: t1\n        type: io.kestra.core.tasks.debugs.return\n        format: "{{task.id}} > {{taskrun.value}}"\n      - id: t2\n        type: io.kestra.core.tasks.debugs.return\n        format: "{{task.id}} > {{ (get outputs.t1 taskrun.value).value }} > {{taskrun.startdate}}"\n  - id: end\n    type: io.kestra.core.tasks.debugs.return\n    format: "{{task.id}}"\n\n\nin this case, you would need to use {{ (get outputs.t1 taskrun.value).value }}, which means give me from outputs.t1 the index results from taskrun.value.\n\n\n# with flowable task nested.\n\nif you have many flowable tasks, it can be complex to use the get function, and moreover, the taskrun.value is only available during the direct task from each. if you have any flowable tasks after, the taskrun.value of the first iteration will be lost (or overwritten). in order to deal with this, we have included the parent & parents vars.\n\nthis is illustrated in the flow below:\n\nid: each-switch\nnamespace: io.kestra.tests\n\ntasks:\n  - id: t1\n    type: io.kestra.core.tasks.debugs.return\n    format: "{{task.id}} > {{taskrun.startdate}}"\n  - id: 2_each\n    type: io.kestra.core.tasks.flows.eachsequential\n    value: \'["a", "b"]\'\n    tasks:\n      # switch\n      - id: 2-1_switch\n        type: io.kestra.core.tasks.flows.switch\n        value: "{{taskrun.value}}"\n        cases:\n          a:\n            - id: 2-1_switch-letter-a\n              type: io.kestra.core.tasks.debugs.return\n              format: "{{task.id}}"\n          b:\n            - id: 2-1_switch-letter-b\n              type: io.kestra.core.tasks.debugs.return\n              format: "{{task.id}}"\n\n            - id: 2-1_each\n              type: io.kestra.core.tasks.flows.eachsequential\n              value: \'["1", "2"]\'\n              tasks:\n              - id: 2-1-1_switch\n                type: io.kestra.core.tasks.flows.switch\n                value: "{{taskrun.value}}"\n                cases:\n                  1:\n                    - id: 2-1-1_switch-number-1\n                      type: io.kestra.core.tasks.debugs.return\n                      format: "{{parents.[0].taskrun.value}}"\n                  2:\n                    - id: 2-1-1_switch-number-2\n                      type: io.kestra.core.tasks.debugs.return\n                      format: "{{parents.[0].taskrun.value}} {{parents.[1].taskrun.value}}"\n  - id: 2_end\n    type: io.kestra.core.tasks.debugs.return\n    format: "{{task.id}} > {{taskrun.startdate}}"\n\n\n\nas you can see, the parent will give direct access to the first parent output and the value of the current one, while the parents.index lets go you deeper down the tree.\n\nin the task 2-1-1_switch-number-2:\n\n * {{taskrun.value}}: mean the value of the task 2-1-1_switch\n * {{parents.[0].taskrun.value}} or {{parent.taskrun.value}}: mean the value of the task 2-1_each\n * {{parents.[1].taskrun.value}}: mean the value of the task 2-1_switch\n * {{parents.[2].taskrun.value}}: mean the value of the task 2_each',charsets:{}},{title:"Vars functions",frontmatter:{order:8,meta:[{property:"article:modified_time",content:"2022-04-10T20:37:54.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Vars functions"},{property:"og:description",content:"Vars functions | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/deprecated-handlebars/vars.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Vars functions"},{name:"twitter:description",content:"Vars functions | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/deprecated-handlebars/vars.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/deprecated-handlebars/vars.html",relativePath:"docs/developer-guide/variables/deprecated-handlebars/vars.md",key:"v-6ad1b17a",path:"/docs/developer-guide/variables/deprecated-handlebars/vars.html",headers:[{level:2,title:"firstDefined First defined variables",slug:"firstdefined-first-defined-variables",normalizedTitle:"firstdefined first defined variables",charIndex:23},{level:2,title:"eval Evaluate a handlebars expression",slug:"eval-evaluate-a-handlebars-expression",normalizedTitle:"eval evaluate a handlebars expression",charIndex:63},{level:2,title:"firstDefinedEval First defined evaluation",slug:"firstdefinedeval-first-defined-evaluation",normalizedTitle:"firstdefinedeval first defined evaluation",charIndex:104},{level:2,title:"get get an element for an array or map by key",slug:"get-get-an-element-for-an-array-or-map-by-key",normalizedTitle:"get get an element for an array or map by key",charIndex:149}],lastUpdated:"4/10/2022, 8:37:54 PM",lastUpdatedTimestamp:1649623074e3,headersStr:"firstDefined First defined variables eval Evaluate a handlebars expression firstDefinedEval First defined evaluation get get an element for an array or map by key",content:"# Vars functions\n\n\n\n * firstDefined First defined variables\n * eval Evaluate a handlebars expression\n * firstDefinedEval First defined evaluation\n * get get an element for an array or map by key\n\n\n\n\n# firstDefined First defined variables\n\nReturn the first defined variables or throw an exception if no variables are defined.\n\n{{ firstDefined outputs.task1.uri outputs.task2.uri }}\n\n\n\n# eval Evaluate a handlebars expression\n\nEvaluate a handlebars expression at runtime based on the whole context.\n\nMostly useful for Lookup in current childs tasks tree and dynamic tasks.\n\n{{ eval 'outputs.first.[{{taskrun.value}}].value' }}\n\n\n\n# firstDefinedEval First defined evaluation\n\nFirst defined evaluates a handlebars expression at runtime based on the whole context or throws an exception if no variables are defined.\n\nMostly useful for Lookup in current childs tasks tree and dynamic tasks.\n\n{{ firstDefined 'outputs.first.value' 'outputs.first.[{{taskrun.value}}].value' }}\n\n\n\n# get get an element for an array or map by key\n\n   {{get object [\"key\"]}}\n\n\n * get on object type map, the key at key\n * get on object type array, the index at key\n\nMostly useful for Lookup in current childs tasks tree and dynamic tasks.\n\n{{ get outputs 'first' }}\n",normalizedContent:"# vars functions\n\n\n\n * firstdefined first defined variables\n * eval evaluate a handlebars expression\n * firstdefinedeval first defined evaluation\n * get get an element for an array or map by key\n\n\n\n\n# firstdefined first defined variables\n\nreturn the first defined variables or throw an exception if no variables are defined.\n\n{{ firstdefined outputs.task1.uri outputs.task2.uri }}\n\n\n\n# eval evaluate a handlebars expression\n\nevaluate a handlebars expression at runtime based on the whole context.\n\nmostly useful for lookup in current childs tasks tree and dynamic tasks.\n\n{{ eval 'outputs.first.[{{taskrun.value}}].value' }}\n\n\n\n# firstdefinedeval first defined evaluation\n\nfirst defined evaluates a handlebars expression at runtime based on the whole context or throws an exception if no variables are defined.\n\nmostly useful for lookup in current childs tasks tree and dynamic tasks.\n\n{{ firstdefined 'outputs.first.value' 'outputs.first.[{{taskrun.value}}].value' }}\n\n\n\n# get get an element for an array or map by key\n\n   {{get object [\"key\"]}}\n\n\n * get on object type map, the key at key\n * get on object type array, the index at key\n\nmostly useful for lookup in current childs tasks tree and dynamic tasks.\n\n{{ get outputs 'first' }}\n",charsets:{}},{title:"Filter",frontmatter:{order:2,meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Filter"},{property:"og:description",content:"Filter | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/filter/"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Filter"},{name:"twitter:description",content:"Filter | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/filter/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/filter/",relativePath:"docs/developer-guide/variables/filter/README.md",key:"v-03cc083c",path:"/docs/developer-guide/variables/filter/",headers:[{level:2,title:"List of built-in filters:",slug:"list-of-built-in-filters",normalizedTitle:"list of built-in filters:",charIndex:571}],lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:"List of built-in filters:",content:"# Filter\n\nVariables can be modified by filters. Filters are separated from the variable by a pipe symbol |. Multiple filters can be chained. The output of one filter is applied to the next.\n\nThe following example removes all HTML tags from the name and title-cases it:\n\n{{ name  |title }}\n\n\nFilters that accept arguments have parentheses around the arguments. This example joins the elements of a list by commas:\n\n{{ list | join(', ') }}\n\n\nTo apply a filter on a section of code, wrap it with the filter tag:\n\n{% filter lower | title %}\n\thello<br>\n{% endfilter %}}\n\n\n\n\n# List of built-in filters:",normalizedContent:"# filter\n\nvariables can be modified by filters. filters are separated from the variable by a pipe symbol |. multiple filters can be chained. the output of one filter is applied to the next.\n\nthe following example removes all html tags from the name and title-cases it:\n\n{{ name  |title }}\n\n\nfilters that accept arguments have parentheses around the arguments. this example joins the elements of a list by commas:\n\n{{ list | join(', ') }}\n\n\nto apply a filter on a section of code, wrap it with the filter tag:\n\n{% filter lower | title %}\n\thello<br>\n{% endfilter %}}\n\n\n\n\n# list of built-in filters:",charsets:{cjk:!0}},{title:"abbreviate",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"abbreviate"},{property:"og:description",content:"abbreviate | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/filter/abbreviate.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"abbreviate"},{name:"twitter:description",content:"abbreviate | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/filter/abbreviate.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/filter/abbreviate.html",relativePath:"docs/developer-guide/variables/filter/abbreviate.md",key:"v-7048180f",path:"/docs/developer-guide/variables/filter/abbreviate.html",headers:[{level:2,title:"Arguments",slug:"arguments",normalizedTitle:"arguments",charIndex:296}],lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:"Arguments",content:'# abbreviate\n\nThe abbreviate filter will abbreviate a string using an ellipsis. It takes one argument which is the max\nwidth of the desired output including the length of the ellipsis.\n\n{{ "this is a long sentence." | abbreviate(7) }}\n\n\nThe above example will output the following:\n\nthis...\n\n\n\n# Arguments\n\n * length',normalizedContent:'# abbreviate\n\nthe abbreviate filter will abbreviate a string using an ellipsis. it takes one argument which is the max\nwidth of the desired output including the length of the ellipsis.\n\n{{ "this is a long sentence." | abbreviate(7) }}\n\n\nthe above example will output the following:\n\nthis...\n\n\n\n# arguments\n\n * length',charsets:{cjk:!0}},{title:"abs",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"abs"},{property:"og:description",content:"abs | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/filter/abs.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"abs"},{name:"twitter:description",content:"abs | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/filter/abs.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/filter/abs.html",relativePath:"docs/developer-guide/variables/filter/abs.md",key:"v-f7b823fa",path:"/docs/developer-guide/variables/filter/abs.html",lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:null,content:"# abs\n\nThe abs filter is used to obtain the absolute value.\n\n{{ -7 | abs }}\n\n{# output: 7 #}\n",normalizedContent:"# abs\n\nthe abs filter is used to obtain the absolute value.\n\n{{ -7 | abs }}\n\n{# output: 7 #}\n",charsets:{cjk:!0}},{title:"base64decode",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"base64decode"},{property:"og:description",content:"base64decode | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/filter/base64decode.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"base64decode"},{name:"twitter:description",content:"base64decode | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/filter/base64decode.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/filter/base64decode.html",relativePath:"docs/developer-guide/variables/filter/base64decode.md",key:"v-32f7ff6b",path:"/docs/developer-guide/variables/filter/base64decode.html",lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:null,content:'# base64decode\n\nThe base64decode filter takes the given input, Base64-decodes it, if possible, and returns the byte array converted to UTF-8 String.\nApplying the filter on an incorrect base64-encoded string will throw an exception.\n\n{{ "dGVzdA==" | base64decode }}\n\n\nThe above example will output the following:\n\ntest\n',normalizedContent:'# base64decode\n\nthe base64decode filter takes the given input, base64-decodes it, if possible, and returns the byte array converted to utf-8 string.\napplying the filter on an incorrect base64-encoded string will throw an exception.\n\n{{ "dgvzda==" | base64decode }}\n\n\nthe above example will output the following:\n\ntest\n',charsets:{cjk:!0}},{title:"base64encode",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"base64encode"},{property:"og:description",content:"base64encode | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/filter/base64encode.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"base64encode"},{name:"twitter:description",content:"base64encode | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/filter/base64encode.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/filter/base64encode.html",relativePath:"docs/developer-guide/variables/filter/base64encode.md",key:"v-1d9a471b",path:"/docs/developer-guide/variables/filter/base64encode.html",lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:null,content:'# base64encode\n\nThe base64encode filter takes the given input, converts it to an UTF-8 String (.toString()) and Base64-encodes it.\n\n{{ "test" | base64encode }}\n\n\nThe above example will output the following:\n\ndGVzdA==\n',normalizedContent:'# base64encode\n\nthe base64encode filter takes the given input, converts it to an utf-8 string (.tostring()) and base64-encodes it.\n\n{{ "test" | base64encode }}\n\n\nthe above example will output the following:\n\ndgvzda==\n',charsets:{cjk:!0}},{title:"capitalize",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"capitalize"},{property:"og:description",content:"capitalize | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/filter/capitalize.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"capitalize"},{name:"twitter:description",content:"capitalize | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/filter/capitalize.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/filter/capitalize.html",relativePath:"docs/developer-guide/variables/filter/capitalize.md",key:"v-25d11766",path:"/docs/developer-guide/variables/filter/capitalize.html",lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:null,content:'# capitalize\n\nThe capitalize filter will capitalize the first letter of the string.\n\n{{ "article title" | capitalize }}\n\n\nThe above example will output the following:\n\nArticle title\n\n\nSee also:\n\n * title',normalizedContent:'# capitalize\n\nthe capitalize filter will capitalize the first letter of the string.\n\n{{ "article title" | capitalize }}\n\n\nthe above example will output the following:\n\narticle title\n\n\nsee also:\n\n * title',charsets:{cjk:!0}},{title:"chunk",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"chunk"},{property:"og:description",content:"chunk | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/filter/chunk.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"chunk"},{name:"twitter:description",content:"chunk | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/filter/chunk.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/filter/chunk.html",relativePath:"docs/developer-guide/variables/filter/chunk.md",key:"v-37ca54ba",path:"/docs/developer-guide/variables/filter/chunk.html",headers:[{level:2,title:"Arguments",slug:"arguments",normalizedTitle:"arguments",charIndex:161}],lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:"Arguments",content:"# chunk\n\nThe chunk filter returns partitions of size from a list.\n\n{{ [[1,2,3,4,5,6,7,8,9]] | chunk(2) }}\n{# results in: '[[1,2],[3,4],[5,6],[7,8],[9]]' #}\n\n\n\n# Arguments\n\n * size: the size of the chunk",normalizedContent:"# chunk\n\nthe chunk filter returns partitions of size from a list.\n\n{{ [[1,2,3,4,5,6,7,8,9]] | chunk(2) }}\n{# results in: '[[1,2],[3,4],[5,6],[7,8],[9]]' #}\n\n\n\n# arguments\n\n * size: the size of the chunk",charsets:{cjk:!0}},{title:"className",frontmatter:{meta:[{property:"article:modified_time",content:"2022-06-09T18:33:49.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"className"},{property:"og:description",content:"className | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/filter/className.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"className"},{name:"twitter:description",content:"className | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/filter/className.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/filter/className.html",relativePath:"docs/developer-guide/variables/filter/className.md",key:"v-407e4c63",path:"/docs/developer-guide/variables/filter/className.html",lastUpdated:"6/9/2022, 6:33:49 PM",lastUpdatedTimestamp:1654799629e3,headersStr:null,content:'# className\n\nThe className filter return a string with the current class name.\n\n{{ "12.3" | number | className }}\n{# will output: java.lang.Float #}\n',normalizedContent:'# classname\n\nthe classname filter return a string with the current class name.\n\n{{ "12.3" | number | classname }}\n{# will output: java.lang.float #}\n',charsets:{cjk:!0}},{title:"date",frontmatter:{meta:[{property:"article:modified_time",content:"2022-02-15T15:58:07.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"date"},{property:"og:description",content:"date | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/filter/date.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"date"},{name:"twitter:description",content:"date | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/filter/date.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/filter/date.html",relativePath:"docs/developer-guide/variables/filter/date.md",key:"v-ee9465ee",path:"/docs/developer-guide/variables/filter/date.html",headers:[{level:2,title:"Time zones",slug:"time-zones",normalizedTitle:"time zones",charIndex:933},{level:2,title:"format & existingFormat",slug:"format-existingformat",normalizedTitle:"format &amp; existingformat",charIndex:null},{level:2,title:"Arguments",slug:"arguments",normalizedTitle:"arguments",charIndex:1956}],lastUpdated:"2/15/2022, 3:58:07 PM",lastUpdatedTimestamp:1644940687e3,headersStr:"Time zones format & existingFormat Arguments",content:'# date\n\nThe date filter formats a date in a variety of formats. It can handle old-school java.util.Date,\nJava 8 java.time constructs like OffsetDateTime and timestamps in milliseconds from the epoch.\nThe filter will construct a java.text.SimpleDateFormat or java.time.format.DateTimeFormatter using the provided\npattern and then use this newly created format to format the provided date object. If you don\'t provide a pattern,\neither DateTimeFormatter.ISO_DATE_TIME or yyyy-MM-dd\'T\'HH:mm:ssZ will be used.\n\n{{ user.birthday | date("yyyy-MM-dd") }}\n\n\nAn alternative way to use this filter is to use it on a string but then provide two arguments:\nthe first is the desired pattern for the output, and the second is the existing format used to parse the\ninput string into a java.util.Date object.\n\n{{ "July 24, 2001" | date("yyyy-MM-dd", existingFormat="MMMM dd, yyyy") }}\n\n\nThe above example will output the following:\n\n2001-07-24\n\n\n\n# Time zones\n\nIf the provided date has time zone info (e.g. OffsetDateTime) then it will be used. If the provided date has no\ntime zone info, by default the system time zone will be used. If you need to use a specific\ntime zone then you can pass in a timeZone parameter any string that\'s understood by ZoneId / ZoneInfo:\n\n{# the timeZone parameter will be ignored #}\n{{ someOffsetDateTime | date("yyyy-MM-dd\'T\'HH:mm:ssX", timeZone="UTC") }}\n{# the provided time zone will override the system default #}\n{{ someInstant | date("yyyy-MM-dd\'T\'HH:mm:ssX", timeZone="Pacific/Funafuti") }}\n\n\n\n# format & existingFormat\n\nFormat can be:\n\n * DateTimeFormatter format\n * iso = yyyy-MM-dd\'T\'HH:mm:ss.SSSSSSXXX\n * iso_sec = yyyy-MM-dd\'T\'HH:mm:ssXXX\n * sql = yyyy-MM-dd HH:mm:ss.SSSSSS\n * sql_seq = yyyy-MM-dd HH:mm:ss\n * iso_date_time\n * iso_date\n * iso_time\n * iso_local_date\n * iso_instant\n * iso_local_date_time\n * iso_local_time\n * iso_offset_time\n * iso_ordinal_date\n * iso_week_date\n * iso_zoned_date_time\n * rfc_1123_date_time\n\n\n# Arguments\n\n * format: the output format\n * existingFormat: the input format if the based variable is a string\n * timeZone: the timezone to use\n * locale: the locale to use',normalizedContent:'# date\n\nthe date filter formats a date in a variety of formats. it can handle old-school java.util.date,\njava 8 java.time constructs like offsetdatetime and timestamps in milliseconds from the epoch.\nthe filter will construct a java.text.simpledateformat or java.time.format.datetimeformatter using the provided\npattern and then use this newly created format to format the provided date object. if you don\'t provide a pattern,\neither datetimeformatter.iso_date_time or yyyy-mm-dd\'t\'hh:mm:ssz will be used.\n\n{{ user.birthday | date("yyyy-mm-dd") }}\n\n\nan alternative way to use this filter is to use it on a string but then provide two arguments:\nthe first is the desired pattern for the output, and the second is the existing format used to parse the\ninput string into a java.util.date object.\n\n{{ "july 24, 2001" | date("yyyy-mm-dd", existingformat="mmmm dd, yyyy") }}\n\n\nthe above example will output the following:\n\n2001-07-24\n\n\n\n# time zones\n\nif the provided date has time zone info (e.g. offsetdatetime) then it will be used. if the provided date has no\ntime zone info, by default the system time zone will be used. if you need to use a specific\ntime zone then you can pass in a timezone parameter any string that\'s understood by zoneid / zoneinfo:\n\n{# the timezone parameter will be ignored #}\n{{ someoffsetdatetime | date("yyyy-mm-dd\'t\'hh:mm:ssx", timezone="utc") }}\n{# the provided time zone will override the system default #}\n{{ someinstant | date("yyyy-mm-dd\'t\'hh:mm:ssx", timezone="pacific/funafuti") }}\n\n\n\n# format & existingformat\n\nformat can be:\n\n * datetimeformatter format\n * iso = yyyy-mm-dd\'t\'hh:mm:ss.ssssssxxx\n * iso_sec = yyyy-mm-dd\'t\'hh:mm:ssxxx\n * sql = yyyy-mm-dd hh:mm:ss.ssssss\n * sql_seq = yyyy-mm-dd hh:mm:ss\n * iso_date_time\n * iso_date\n * iso_time\n * iso_local_date\n * iso_instant\n * iso_local_date_time\n * iso_local_time\n * iso_offset_time\n * iso_ordinal_date\n * iso_week_date\n * iso_zoned_date_time\n * rfc_1123_date_time\n\n\n# arguments\n\n * format: the output format\n * existingformat: the input format if the based variable is a string\n * timezone: the timezone to use\n * locale: the locale to use',charsets:{cjk:!0}},{title:"dateAdd",frontmatter:{meta:[{property:"article:modified_time",content:"2022-02-08T14:50:46.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"dateAdd"},{property:"og:description",content:"dateAdd | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/filter/dateAdd.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"dateAdd"},{name:"twitter:description",content:"dateAdd | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/filter/dateAdd.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/filter/dateAdd.html",relativePath:"docs/developer-guide/variables/filter/dateAdd.md",key:"v-0c942c63",path:"/docs/developer-guide/variables/filter/dateAdd.html",headers:[{level:2,title:"Arguments",slug:"arguments",normalizedTitle:"arguments",charIndex:154}],lastUpdated:"2/8/2022, 2:50:46 PM",lastUpdatedTimestamp:1644331846e3,headersStr:"Arguments",content:"# dateAdd\n\nThe dateAdd filter add some unit and formats a date with the same behaviour than date filters.\n\n{{ user.birthday | dateAdd(-1, 'DAYS') }}\n\n\n\n# Arguments\n\n * amount: an integer value positive or negative\n * unit:\n   * NANOS\n   * MICROS\n   * MILLIS\n   * SECONDS\n   * MINUTES\n   * HOURS\n   * HALF_DAYS\n   * DAYS\n   * WEEKS\n   * MONTHS\n   * YEARS\n   * DECADES\n   * CENTURIES\n   * MILLENNIA\n   * ERAS\n * format: see date\n * existingFormat date\n * timeZone date\n * locale date",normalizedContent:"# dateadd\n\nthe dateadd filter add some unit and formats a date with the same behaviour than date filters.\n\n{{ user.birthday | dateadd(-1, 'days') }}\n\n\n\n# arguments\n\n * amount: an integer value positive or negative\n * unit:\n   * nanos\n   * micros\n   * millis\n   * seconds\n   * minutes\n   * hours\n   * half_days\n   * days\n   * weeks\n   * months\n   * years\n   * decades\n   * centuries\n   * millennia\n   * eras\n * format: see date\n * existingformat date\n * timezone date\n * locale date",charsets:{cjk:!0}},{title:"default",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"default"},{property:"og:description",content:"default | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/filter/default.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"default"},{name:"twitter:description",content:"default | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/filter/default.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/filter/default.html",relativePath:"docs/developer-guide/variables/filter/default.md",key:"v-6a7e2aba",path:"/docs/developer-guide/variables/filter/default.html",headers:[{level:2,title:"Arguments",slug:"arguments",normalizedTitle:"arguments",charIndex:559}],lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:"Arguments",content:'# default\n\nThe default filter will render a default value if and only if the object being filtered is empty.\nA variable is empty if it is null, an empty string, an empty collection, or an empty map.\n\n{{ user.phoneNumber | default("No phone number") }}\n\n\nIn the following example, if foo, bar, or baz are null the output will become an empty string which is a perfect use case for the default filter:\n\n{{ foo.bar.baz | default("No baz") }}\n\n\nNote that the default filter will suppress any AttributeNotFoundException exceptions that will usually be thrown.\n\n\n# Arguments\n\n * default',normalizedContent:'# default\n\nthe default filter will render a default value if and only if the object being filtered is empty.\na variable is empty if it is null, an empty string, an empty collection, or an empty map.\n\n{{ user.phonenumber | default("no phone number") }}\n\n\nin the following example, if foo, bar, or baz are null the output will become an empty string which is a perfect use case for the default filter:\n\n{{ foo.bar.baz | default("no baz") }}\n\n\nnote that the default filter will suppress any attributenotfoundexception exceptions that will usually be thrown.\n\n\n# arguments\n\n * default',charsets:{cjk:!0}},{title:"first",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"first"},{property:"og:description",content:"first | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/filter/first.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"first"},{name:"twitter:description",content:"first | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/filter/first.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/filter/first.html",relativePath:"docs/developer-guide/variables/filter/first.md",key:"v-b5fc07fa",path:"/docs/developer-guide/variables/filter/first.html",lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:null,content:"# first\n\nThe first filter will return the first item of a collection, or the first letter of a string.\n\n{{ users | first }}\n{# will output the first item in the collection named 'users' #}\n\n{{ 'Mitch' | first }}\n{# will output 'M' #}\n",normalizedContent:"# first\n\nthe first filter will return the first item of a collection, or the first letter of a string.\n\n{{ users | first }}\n{# will output the first item in the collection named 'users' #}\n\n{{ 'mitch' | first }}\n{# will output 'm' #}\n",charsets:{cjk:!0}},{title:"join",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"join"},{property:"og:description",content:"join | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/filter/join.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"join"},{name:"twitter:description",content:"join | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/filter/join.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/filter/join.html",relativePath:"docs/developer-guide/variables/filter/join.md",key:"v-6aaaa611",path:"/docs/developer-guide/variables/filter/join.html",headers:[{level:2,title:"Arguments",slug:"arguments",normalizedTitle:"arguments",charIndex:338}],lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:"Arguments",content:'# join\n\nThe join filter will concatenate all items of a collection into a string. An optional argument can be given\nto be used as the separator between items.\n\n{#\n    List<String> names = new ArrayList<>();\n    names.add("Alex");\n    names.add("Joe");\n    names.add("Bob");\n#}\n{{ names | join(\',\') }}\n{# will output: Alex,Joe,Bob #}\n\n\n\n# Arguments\n\n * separator',normalizedContent:'# join\n\nthe join filter will concatenate all items of a collection into a string. an optional argument can be given\nto be used as the separator between items.\n\n{#\n    list<string> names = new arraylist<>();\n    names.add("alex");\n    names.add("joe");\n    names.add("bob");\n#}\n{{ names | join(\',\') }}\n{# will output: alex,joe,bob #}\n\n\n\n# arguments\n\n * separator',charsets:{cjk:!0}},{title:"jq",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"jq"},{property:"og:description",content:"jq | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/filter/jq.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"jq"},{name:"twitter:description",content:"jq | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/filter/jq.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/filter/jq.html",relativePath:"docs/developer-guide/variables/filter/jq.md",key:"v-a23bbe52",path:"/docs/developer-guide/variables/filter/jq.html",headers:[{level:2,title:"Arguments",slug:"arguments",normalizedTitle:"arguments",charIndex:628}],lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:"Arguments",content:'# jq\n\nThe jq filter apply a JQ expression to a variables. The filter always return an array of result and will be formatted as json. You can use the filter first in order to return the first (and maybe the only) result of the jq filter.\n\n{{ [1, 2, 3] | jq(\'.\')  }}\n{# results in: \'[1, 2, 3]\' #}\n\n{{ [1, 2, 3] | jq(\'.[0]\') | first }}\n{# results in: \'1\' #}\n\n\nAnother example, if the current context is :\n\n{\n  "outputs": {\n    "task1": {\n      "value": 1,\n      "text": "awesome1"\n    },\n    "task2": {\n      "value": 2,\n      "text": "awesome2"\n    }\n  }\n}\n\n\n{{ outputs | jq(\'.task1.value\') | first }}\n\n\nthe output will be 1.\n\n\n# Arguments\n\n * expression: the jq expression to apply',normalizedContent:'# jq\n\nthe jq filter apply a jq expression to a variables. the filter always return an array of result and will be formatted as json. you can use the filter first in order to return the first (and maybe the only) result of the jq filter.\n\n{{ [1, 2, 3] | jq(\'.\')  }}\n{# results in: \'[1, 2, 3]\' #}\n\n{{ [1, 2, 3] | jq(\'.[0]\') | first }}\n{# results in: \'1\' #}\n\n\nanother example, if the current context is :\n\n{\n  "outputs": {\n    "task1": {\n      "value": 1,\n      "text": "awesome1"\n    },\n    "task2": {\n      "value": 2,\n      "text": "awesome2"\n    }\n  }\n}\n\n\n{{ outputs | jq(\'.task1.value\') | first }}\n\n\nthe output will be 1.\n\n\n# arguments\n\n * expression: the jq expression to apply',charsets:{cjk:!0}},{title:"json",frontmatter:{meta:[{property:"article:modified_time",content:"2021-10-06T16:51:36.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"json"},{property:"og:description",content:"json | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/filter/json.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"json"},{name:"twitter:description",content:"json | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/filter/json.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/filter/json.html",relativePath:"docs/developer-guide/variables/filter/json.md",key:"v-013a3ed6",path:"/docs/developer-guide/variables/filter/json.html",lastUpdated:"10/6/2021, 4:51:36 PM",lastUpdatedTimestamp:1633539096e3,headersStr:null,content:"# json\n\nThe json filter will convert any variable to json string.\n\n{{ [1, 2, 3] | json  }}\n{# results in: '[1, 2, 3]' #}\n\n{{ true | json }}\n{# results in: 'true' #}\n\n{{ \"foo\" | json }}\n{# results in: '\"foo\"' #}\n",normalizedContent:"# json\n\nthe json filter will convert any variable to json string.\n\n{{ [1, 2, 3] | json  }}\n{# results in: '[1, 2, 3]' #}\n\n{{ true | json }}\n{# results in: 'true' #}\n\n{{ \"foo\" | json }}\n{# results in: '\"foo\"' #}\n",charsets:{cjk:!0}},{title:"keys",frontmatter:{meta:[{property:"article:modified_time",content:"2022-02-03T10:32:37.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"keys"},{property:"og:description",content:"keys | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/filter/keys.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"keys"},{name:"twitter:description",content:"keys | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/filter/keys.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/filter/keys.html",relativePath:"docs/developer-guide/variables/filter/keys.md",key:"v-2436c27d",path:"/docs/developer-guide/variables/filter/keys.html",lastUpdated:"2/3/2022, 10:32:37 AM",lastUpdatedTimestamp:1643884357e3,headersStr:null,content:"# keys\n\nThe keys filter will return the keys from a collection, or list of index of an array.\n\n{{ {'this': 'foo', 'that': 'bar'} | keys }}\n{# will output the key from this map '['this', 'that']' #}\n\n\n{{ [0, 1, 3] | keys }}\n{# will output the key from this array '[0, 1, 2]' #}\n\n",normalizedContent:"# keys\n\nthe keys filter will return the keys from a collection, or list of index of an array.\n\n{{ {'this': 'foo', 'that': 'bar'} | keys }}\n{# will output the key from this map '['this', 'that']' #}\n\n\n{{ [0, 1, 3] | keys }}\n{# will output the key from this array '[0, 1, 2]' #}\n\n",charsets:{cjk:!0}},{title:"last",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"last"},{property:"og:description",content:"last | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/filter/last.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"last"},{name:"twitter:description",content:"last | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/filter/last.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/filter/last.html",relativePath:"docs/developer-guide/variables/filter/last.md",key:"v-7ca4bf39",path:"/docs/developer-guide/variables/filter/last.html",lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:null,content:"# last\n\nThe last filter will return the last item of a collection, or the last letter of a string.\n\n{{ users | last }}\n{# will output the last item in the collection named 'users' #}\n\n{{ 'Mitch' | last }}\n{# will output 'h' #}\n",normalizedContent:"# last\n\nthe last filter will return the last item of a collection, or the last letter of a string.\n\n{{ users | last }}\n{# will output the last item in the collection named 'users' #}\n\n{{ 'mitch' | last }}\n{# will output 'h' #}\n",charsets:{cjk:!0}},{title:"length",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"length"},{property:"og:description",content:"length | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/filter/length.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"length"},{name:"twitter:description",content:"length | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/filter/length.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/filter/length.html",relativePath:"docs/developer-guide/variables/filter/length.md",key:"v-9b3e234e",path:"/docs/developer-guide/variables/filter/length.html",lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:null,content:"# length\n\nThe length filter returns the number of items of collection, map or the length of a string:\n\n{% if users|length > 10 %}\n    ...\n{% endif %}\n",normalizedContent:"# length\n\nthe length filter returns the number of items of collection, map or the length of a string:\n\n{% if users|length > 10 %}\n    ...\n{% endif %}\n",charsets:{cjk:!0}},{title:"lower",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"lower"},{property:"og:description",content:"lower | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/filter/lower.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"lower"},{name:"twitter:description",content:"lower | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/filter/lower.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/filter/lower.html",relativePath:"docs/developer-guide/variables/filter/lower.md",key:"v-2727b023",path:"/docs/developer-guide/variables/filter/lower.html",lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:null,content:'# lower\n\nThe lower filter makes an entire string lower case.\n\n{{ "THIS IS A LOUD SENTENCE" | lower }}\n\n\nThe above example will output the following:\n\nthis is a loud sentence\n',normalizedContent:'# lower\n\nthe lower filter makes an entire string lower case.\n\n{{ "this is a loud sentence" | lower }}\n\n\nthe above example will output the following:\n\nthis is a loud sentence\n',charsets:{cjk:!0}},{title:"merge",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"merge"},{property:"og:description",content:"merge | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/filter/merge.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"merge"},{name:"twitter:description",content:"merge | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/filter/merge.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/filter/merge.html",relativePath:"docs/developer-guide/variables/filter/merge.md",key:"v-1ff105fa",path:"/docs/developer-guide/variables/filter/merge.html",lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:null,content:"# merge\n\nThe 'merge' filter merge items of type Map, List or Array:\n\n{{ [1, 2] | merge([3, 4]) }}\n",normalizedContent:"# merge\n\nthe 'merge' filter merge items of type map, list or array:\n\n{{ [1, 2] | merge([3, 4]) }}\n",charsets:{cjk:!0}},{title:"number",frontmatter:{meta:[{property:"article:modified_time",content:"2022-06-09T18:33:49.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"number"},{property:"og:description",content:"number | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/filter/number.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"number"},{name:"twitter:description",content:"number | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/filter/number.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/filter/number.html",relativePath:"docs/developer-guide/variables/filter/number.md",key:"v-4b35295a",path:"/docs/developer-guide/variables/filter/number.html",headers:[{level:2,title:"Arguments",slug:"arguments",normalizedTitle:"arguments",charIndex:384}],lastUpdated:"6/9/2022, 6:33:49 PM",lastUpdatedTimestamp:1654799629e3,headersStr:"Arguments",content:'# number\n\nThe number filter return a parsed number from a string. It\'s really useful for parsing output from previous task and used it with even or odd. If no type is passed, we try to guess the best one.\n\n{{ "12.3" | number | className }}\n{# will output: java.lang.Float #}\n\n{{ "9223372036854775807" | number(\'BIGDECIMAL\') | className }}\n{# will output: java.math.BigDecimal #}\n\n\n\n# Arguments\n\n * type:\n   * INT\n   * FLOAT\n   * LONG\n   * DOUBLE\n   * BIGDECIMAL\n   * BIGINTEGER',normalizedContent:'# number\n\nthe number filter return a parsed number from a string. it\'s really useful for parsing output from previous task and used it with even or odd. if no type is passed, we try to guess the best one.\n\n{{ "12.3" | number | classname }}\n{# will output: java.lang.float #}\n\n{{ "9223372036854775807" | number(\'bigdecimal\') | classname }}\n{# will output: java.math.bigdecimal #}\n\n\n\n# arguments\n\n * type:\n   * int\n   * float\n   * long\n   * double\n   * bigdecimal\n   * biginteger',charsets:{cjk:!0}},{title:"numberFormat",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"numberFormat"},{property:"og:description",content:"numberFormat | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/filter/numberFormat.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"numberFormat"},{name:"twitter:description",content:"numberFormat | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/filter/numberFormat.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/filter/numberFormat.html",relativePath:"docs/developer-guide/variables/filter/numberFormat.md",key:"v-8d2ddbb6",path:"/docs/developer-guide/variables/filter/numberFormat.html",headers:[{level:2,title:"Arguments",slug:"arguments",normalizedTitle:"arguments",charIndex:227}],lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:"Arguments",content:'# numberFormat\n\nThe numberformat filter is used to format a decimal number. Behind the scenes it uses java.text.DecimalFormat.\n\n{{ 3.141592653 | numberFormat("#.##") }}\n\n\nThe above example will output the following:\n\n3.14\n\n\n\n# Arguments\n\n * format',normalizedContent:'# numberformat\n\nthe numberformat filter is used to format a decimal number. behind the scenes it uses java.text.decimalformat.\n\n{{ 3.141592653 | numberformat("#.##") }}\n\n\nthe above example will output the following:\n\n3.14\n\n\n\n# arguments\n\n * format',charsets:{cjk:!0}},{title:"replace",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"replace"},{property:"og:description",content:"replace | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/filter/replace.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"replace"},{name:"twitter:description",content:"replace | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/filter/replace.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/filter/replace.html",relativePath:"docs/developer-guide/variables/filter/replace.md",key:"v-e365f37a",path:"/docs/developer-guide/variables/filter/replace.html",headers:[{level:2,title:"Arguments",slug:"arguments",normalizedTitle:"arguments",charIndex:199}],lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:"Arguments",content:"# replace\n\nThe 'replace' filter formats a given string by replacing the placeholders (placeholders are free-form):\n\n{{ \"I like %this% and %that%.\" | replace({'%this%': foo, '%that%': \"bar\"}) }}\n\n\n\n# Arguments\n\n * placeholders to replace",normalizedContent:"# replace\n\nthe 'replace' filter formats a given string by replacing the placeholders (placeholders are free-form):\n\n{{ \"i like %this% and %that%.\" | replace({'%this%': foo, '%that%': \"bar\"}) }}\n\n\n\n# arguments\n\n * placeholders to replace",charsets:{cjk:!0}},{title:"reverse",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"reverse"},{property:"og:description",content:"reverse | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/filter/reverse.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"reverse"},{name:"twitter:description",content:"reverse | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/filter/reverse.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/filter/reverse.html",relativePath:"docs/developer-guide/variables/filter/reverse.md",key:"v-eb0176fa",path:"/docs/developer-guide/variables/filter/reverse.html",lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:null,content:"# reverse\n\nThe 'reverse' filter reverses a List:\n\n{% for user in users | reverse %} {{ user }} {% endfor %}\n",normalizedContent:"# reverse\n\nthe 'reverse' filter reverses a list:\n\n{% for user in users | reverse %} {{ user }} {% endfor %}\n",charsets:{cjk:!0}},{title:"rsort",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"rsort"},{property:"og:description",content:"rsort | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/filter/rsort.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"rsort"},{name:"twitter:description",content:"rsort | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/filter/rsort.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/filter/rsort.html",relativePath:"docs/developer-guide/variables/filter/rsort.md",key:"v-a0e5effa",path:"/docs/developer-guide/variables/filter/rsort.html",lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:null,content:"# rsort\n\nThe rsort filter will sort a list in reversed order. The items of the list must implement Comparable.\n\n{% for user in users | rsort %}\n\t{{ user.name }}\n{% endfor %}\n",normalizedContent:"# rsort\n\nthe rsort filter will sort a list in reversed order. the items of the list must implement comparable.\n\n{% for user in users | rsort %}\n\t{{ user.name }}\n{% endfor %}\n",charsets:{cjk:!0}},{title:"sha256",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"sha256"},{property:"og:description",content:"sha256 | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/filter/sha256.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"sha256"},{name:"twitter:description",content:"sha256 | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/filter/sha256.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/filter/sha256.html",relativePath:"docs/developer-guide/variables/filter/sha256.md",key:"v-277041d2",path:"/docs/developer-guide/variables/filter/sha256.html",lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:null,content:'# sha256\n\nThe sha256 filter returns the SHA-256 hash of the given UTF-8 String.\n\n{{ "test" | sha256 }}\n\n\nThe above example will output the following:\n\n9f86d081884c7d659a2feaa0c55ad015a3bf4f1b2b0b822cd15d6c15b0f00a08\n',normalizedContent:'# sha256\n\nthe sha256 filter returns the sha-256 hash of the given utf-8 string.\n\n{{ "test" | sha256 }}\n\n\nthe above example will output the following:\n\n9f86d081884c7d659a2feaa0c55ad015a3bf4f1b2b0b822cd15d6c15b0f00a08\n',charsets:{cjk:!0}},{title:"slice",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"slice"},{property:"og:description",content:"slice | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/filter/slice.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"slice"},{name:"twitter:description",content:"slice | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/filter/slice.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/filter/slice.html",relativePath:"docs/developer-guide/variables/filter/slice.md",key:"v-4aab2c43",path:"/docs/developer-guide/variables/filter/slice.html",headers:[{level:2,title:"Arguments",slug:"arguments",normalizedTitle:"arguments",charIndex:222}],lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:"Arguments",content:"# slice\n\nThe slice filter returns a portion of a list, array, or string.\n\n{{ ['apple', 'peach', 'pear', 'banana'] | slice(1,3) }}\n{# results in: [peach, pear] #}\n\n\n{{ 'Mitchell' | slice(1,3) }}\n{# results in: 'it' #}\n\n\n\n# Arguments\n\n * fromIndex: 0-based and inclusive\n * toIndex: 0-based and exclusive",normalizedContent:"# slice\n\nthe slice filter returns a portion of a list, array, or string.\n\n{{ ['apple', 'peach', 'pear', 'banana'] | slice(1,3) }}\n{# results in: [peach, pear] #}\n\n\n{{ 'mitchell' | slice(1,3) }}\n{# results in: 'it' #}\n\n\n\n# arguments\n\n * fromindex: 0-based and inclusive\n * toindex: 0-based and exclusive",charsets:{cjk:!0}},{title:"slugify",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"slugify"},{property:"og:description",content:"slugify | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/filter/slugify.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"slugify"},{name:"twitter:description",content:"slugify | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/filter/slugify.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/filter/slugify.html",relativePath:"docs/developer-guide/variables/filter/slugify.md",key:"v-6a8b44a3",path:"/docs/developer-guide/variables/filter/slugify.html",lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:null,content:"# slugify\n\nThe slugify filter removes non-word characters (alphanumerics and underscores) and converts spaces to hyphen. Also strips leading and trailing whitespace.\n\n{{ \"Joel is a slug\" | slugify }}\n{# will output 'joel-is-a-slug' #}\n",normalizedContent:"# slugify\n\nthe slugify filter removes non-word characters (alphanumerics and underscores) and converts spaces to hyphen. also strips leading and trailing whitespace.\n\n{{ \"joel is a slug\" | slugify }}\n{# will output 'joel-is-a-slug' #}\n",charsets:{cjk:!0}},{title:"sort",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"sort"},{property:"og:description",content:"sort | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/filter/sort.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"sort"},{name:"twitter:description",content:"sort | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/filter/sort.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/filter/sort.html",relativePath:"docs/developer-guide/variables/filter/sort.md",key:"v-05829129",path:"/docs/developer-guide/variables/filter/sort.html",lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:null,content:"# sort\n\nThe sort filter will sort a list. The items of the list must implement Comparable.\n\n{% for user in users | sort %}\n\t{{ user.name }}\n{% endfor %}\n",normalizedContent:"# sort\n\nthe sort filter will sort a list. the items of the list must implement comparable.\n\n{% for user in users | sort %}\n\t{{ user.name }}\n{% endfor %}\n",charsets:{cjk:!0}},{title:"split",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"split"},{property:"og:description",content:"split | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/filter/split.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"split"},{name:"twitter:description",content:"split | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/filter/split.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/filter/split.html",relativePath:"docs/developer-guide/variables/filter/split.md",key:"v-e36ba57a",path:"/docs/developer-guide/variables/filter/split.html",headers:[{level:2,title:"Arguments",slug:"arguments",normalizedTitle:"arguments",charIndex:828}],lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:"Arguments",content:"# split\n\nThe split filter splits a string by the given delimiter and returns a list of strings.\n\n{% set foo = \"one,two,three\" | split(',') %}\n{# foo contains ['one', 'two', 'three'] #}\n\n\nYou can also pass a limit argument:\n\n * If limit is positive, then the pattern will be applied at most n - 1 times, the array's length will be no greater than n, and the array's last entry will contain all input beyond the last matched delimiter;\n * If limit is negative, then the pattern will be applied as many times as possible and the array can have any length;\n * If limit is zero, then the pattern will be applied as many times as possible, the array can have any length, and trailing empty strings will be discarded;\n\n{% set foo = \"one,two,three,four,five\" | split(',', 3) %}\n{# foo contains ['one', 'two', 'three,four,five'] #}\n\n\n\n# Arguments\n\n * delimiter: The delimiter\n * limit: The limit argument",normalizedContent:"# split\n\nthe split filter splits a string by the given delimiter and returns a list of strings.\n\n{% set foo = \"one,two,three\" | split(',') %}\n{# foo contains ['one', 'two', 'three'] #}\n\n\nyou can also pass a limit argument:\n\n * if limit is positive, then the pattern will be applied at most n - 1 times, the array's length will be no greater than n, and the array's last entry will contain all input beyond the last matched delimiter;\n * if limit is negative, then the pattern will be applied as many times as possible and the array can have any length;\n * if limit is zero, then the pattern will be applied as many times as possible, the array can have any length, and trailing empty strings will be discarded;\n\n{% set foo = \"one,two,three,four,five\" | split(',', 3) %}\n{# foo contains ['one', 'two', 'three,four,five'] #}\n\n\n\n# arguments\n\n * delimiter: the delimiter\n * limit: the limit argument",charsets:{cjk:!0}},{title:"substringAfter",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"substringAfter"},{property:"og:description",content:"substringAfter | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/filter/substringAfter.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"substringAfter"},{name:"twitter:description",content:"substringAfter | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/filter/substringAfter.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/filter/substringAfter.html",relativePath:"docs/developer-guide/variables/filter/substringAfter.md",key:"v-74595f62",path:"/docs/developer-guide/variables/filter/substringAfter.html",headers:[{level:2,title:"Arguments",slug:"arguments",normalizedTitle:"arguments",charIndex:207}],lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:"Arguments",content:"# substringAfter\n\nThe substringAfter filter returns the substring before the first occurrence of a separator. The separator is not returned.\n\n{{ 'a.b.c' | substringAfter('.') }}\n{# results in: 'b.c' #}\n\n\n\n# Arguments\n\n * separator: the String to search for",normalizedContent:"# substringafter\n\nthe substringafter filter returns the substring before the first occurrence of a separator. the separator is not returned.\n\n{{ 'a.b.c' | substringafter('.') }}\n{# results in: 'b.c' #}\n\n\n\n# arguments\n\n * separator: the string to search for",charsets:{cjk:!0}},{title:"substringAfterLast",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"substringAfterLast"},{property:"og:description",content:"substringAfterLast | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/filter/substringAfterLast.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"substringAfterLast"},{name:"twitter:description",content:"substringAfterLast | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/filter/substringAfterLast.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/filter/substringAfterLast.html",relativePath:"docs/developer-guide/variables/filter/substringAfterLast.md",key:"v-3b433f3a",path:"/docs/developer-guide/variables/filter/substringAfterLast.html",headers:[{level:2,title:"Arguments",slug:"arguments",normalizedTitle:"arguments",charIndex:215}],lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:"Arguments",content:"# substringAfterLast\n\nThe substringAfterLast filter returns the substring after the last occurrence of a separator. The separator is not returned.\n\n{{ 'a.b.c' | substringAfterLast('.') }}\n{# results in: 'c' #}\n\n\n\n# Arguments\n\n * separator: the String to search for",normalizedContent:"# substringafterlast\n\nthe substringafterlast filter returns the substring after the last occurrence of a separator. the separator is not returned.\n\n{{ 'a.b.c' | substringafterlast('.') }}\n{# results in: 'c' #}\n\n\n\n# arguments\n\n * separator: the string to search for",charsets:{cjk:!0}},{title:"substringBefore",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"substringBefore"},{property:"og:description",content:"substringBefore | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/filter/substringBefore.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"substringBefore"},{name:"twitter:description",content:"substringBefore | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/filter/substringBefore.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/filter/substringBefore.html",relativePath:"docs/developer-guide/variables/filter/substringBefore.md",key:"v-c3d3ac7a",path:"/docs/developer-guide/variables/filter/substringBefore.html",headers:[{level:2,title:"Arguments",slug:"arguments",normalizedTitle:"arguments",charIndex:208}],lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:"Arguments",content:"# substringBefore\n\nThe substringBefore filter returns the substring before the first occurrence of a separator. The separator is not returned.\n\n{{ 'a.b.c' | substringBefore('.') }}\n{# results in: 'a' #}\n\n\n\n# Arguments\n\n * separator: the String to search for",normalizedContent:"# substringbefore\n\nthe substringbefore filter returns the substring before the first occurrence of a separator. the separator is not returned.\n\n{{ 'a.b.c' | substringbefore('.') }}\n{# results in: 'a' #}\n\n\n\n# arguments\n\n * separator: the string to search for",charsets:{cjk:!0}},{title:"substringBeforeLast",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"substringBeforeLast"},{property:"og:description",content:"substringBeforeLast | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/filter/substringBeforeLast.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"substringBeforeLast"},{name:"twitter:description",content:"substringBeforeLast | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/filter/substringBeforeLast.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/filter/substringBeforeLast.html",relativePath:"docs/developer-guide/variables/filter/substringBeforeLast.md",key:"v-43215b83",path:"/docs/developer-guide/variables/filter/substringBeforeLast.html",headers:[{level:2,title:"Arguments",slug:"arguments",normalizedTitle:"arguments",charIndex:221}],lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:"Arguments",content:"# substringBeforeLast\n\nThe substringBeforeLast filter returns the substring before the last occurrence of a separator. The separator is not returned.\n\n{{ 'a.b.c' | substringBeforeLast('.') }}\n{# results in: 'a.b' #}\n\n\n\n# Arguments\n\n * separator: the String to search for",normalizedContent:"# substringbeforelast\n\nthe substringbeforelast filter returns the substring before the last occurrence of a separator. the separator is not returned.\n\n{{ 'a.b.c' | substringbeforelast('.') }}\n{# results in: 'a.b' #}\n\n\n\n# arguments\n\n * separator: the string to search for",charsets:{cjk:!0}},{title:"title",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"title"},{property:"og:description",content:"title | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/filter/title.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"title"},{name:"twitter:description",content:"title | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/filter/title.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/filter/title.html",relativePath:"docs/developer-guide/variables/filter/title.md",key:"v-af16fdfa",path:"/docs/developer-guide/variables/filter/title.html",lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:null,content:'# title\n\nThe title filter will capitalize the first letter of each word.\n\n{{ "article title" | title }}\n\n\nThe above example will output the following:\n\nArticle Title\n\n\nSee also:\n\n * capitalize',normalizedContent:'# title\n\nthe title filter will capitalize the first letter of each word.\n\n{{ "article title" | title }}\n\n\nthe above example will output the following:\n\narticle title\n\n\nsee also:\n\n * capitalize',charsets:{cjk:!0}},{title:"trim",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"trim"},{property:"og:description",content:"trim | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/filter/trim.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"trim"},{name:"twitter:description",content:"trim | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/filter/trim.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/filter/trim.html",relativePath:"docs/developer-guide/variables/filter/trim.md",key:"v-290ae021",path:"/docs/developer-guide/variables/filter/trim.html",lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:null,content:'# trim\n\nThe trim filter is used to trim whitespace off the beginning and end of a string.\n\n{{ "    This text has too much whitespace.    " | trim }}\n\n\nThe above example will output the following:\n\nThis text has too much whitespace.\n',normalizedContent:'# trim\n\nthe trim filter is used to trim whitespace off the beginning and end of a string.\n\n{{ "    this text has too much whitespace.    " | trim }}\n\n\nthe above example will output the following:\n\nthis text has too much whitespace.\n',charsets:{cjk:!0}},{title:"upper",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"upper"},{property:"og:description",content:"upper | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/filter/upper.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"upper"},{name:"twitter:description",content:"upper | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/filter/upper.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/filter/upper.html",relativePath:"docs/developer-guide/variables/filter/upper.md",key:"v-a615a37a",path:"/docs/developer-guide/variables/filter/upper.html",lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:null,content:'# upper\n\nThe upper filter makes an entire string upper case.\n\n{{ "this is a quiet sentence." | upper }}\n\n\nThe above example will output the following:\n\nTHIS IS A QUIET SENTENCE.\n',normalizedContent:'# upper\n\nthe upper filter makes an entire string upper case.\n\n{{ "this is a quiet sentence." | upper }}\n\n\nthe above example will output the following:\n\nthis is a quiet sentence.\n',charsets:{cjk:!0}},{title:"urlencode",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"urlencode"},{property:"og:description",content:"urlencode | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/filter/urlencode.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"urlencode"},{name:"twitter:description",content:"urlencode | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/filter/urlencode.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/filter/urlencode.html",relativePath:"docs/developer-guide/variables/filter/urlencode.md",key:"v-8e6978ba",path:"/docs/developer-guide/variables/filter/urlencode.html",lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:null,content:'# urlencode\n\nThe urlencod translates a string into application/x-www-form-urlencoded format using the "UTF-8" encoding scheme.\n\n{{ "The string ü@foo-bar" | urlencode }}\n\n\nThe above example will output the following:\n\nThe+string+%C3%BC%40foo-bar\n',normalizedContent:'# urlencode\n\nthe urlencod translates a string into application/x-www-form-urlencoded format using the "utf-8" encoding scheme.\n\n{{ "the string u@foo-bar" | urlencode }}\n\n\nthe above example will output the following:\n\nthe+string+%c3%bc%40foo-bar\n',charsets:{cjk:!0}},{title:"Function",frontmatter:{order:3,meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Function"},{property:"og:description",content:"Function | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/function/"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Function"},{name:"twitter:description",content:"Function | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/function/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/function/",relativePath:"docs/developer-guide/variables/function/README.md",key:"v-1fe614e2",path:"/docs/developer-guide/variables/function/",headers:[{level:2,title:"List of built-in functions:",slug:"list-of-built-in-functions",normalizedTitle:"list of built-in functions:",charIndex:297}],lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:"List of built-in functions:",content:"# Function\n\nFunctions can be called to generate content. Functions are called by their name followed by parentheses () and may have arguments.\n\nFor instance, the range function returns a list containing an arithmetic progression of integers:\n\n{% for i in range(0, 3) %}\n{{ i }},\n{% endfor %}\n\n\n\n# List of built-in functions:",normalizedContent:"# function\n\nfunctions can be called to generate content. functions are called by their name followed by parentheses () and may have arguments.\n\nfor instance, the range function returns a list containing an arithmetic progression of integers:\n\n{% for i in range(0, 3) %}\n{{ i }},\n{% endfor %}\n\n\n\n# list of built-in functions:",charsets:{}},{title:"block",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"block"},{property:"og:description",content:"block | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/function/block.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"block"},{name:"twitter:description",content:"block | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/function/block.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/function/block.html",relativePath:"docs/developer-guide/variables/function/block.md",key:"v-0194b523",path:"/docs/developer-guide/variables/function/block.html",lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:null,content:'# block\n\nThe block function is used to render the contents of a block more than once. It is not to be confused\nwith the block tag which is used to declare blocks.\n\nThe following example will render the contents of the "post" block twice; once where it was declared\nand again using the block function:\n\n{% block "post" %} content {% endblock %}\n\n{{ block("post") }}\n\n\nThe above example will output the following:\n\ncontent\n\ncontent\n',normalizedContent:'# block\n\nthe block function is used to render the contents of a block more than once. it is not to be confused\nwith the block tag which is used to declare blocks.\n\nthe following example will render the contents of the "post" block twice; once where it was declared\nand again using the block function:\n\n{% block "post" %} content {% endblock %}\n\n{{ block("post") }}\n\n\nthe above example will output the following:\n\ncontent\n\ncontent\n',charsets:{}},{title:"json",frontmatter:{meta:[{property:"article:modified_time",content:"2021-10-06T16:51:36.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"json"},{property:"og:description",content:"json | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/function/json.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"json"},{name:"twitter:description",content:"json | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/function/json.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/function/json.html",relativePath:"docs/developer-guide/variables/function/json.md",key:"v-028c2615",path:"/docs/developer-guide/variables/function/json.html",lastUpdated:"10/6/2021, 4:51:36 PM",lastUpdatedTimestamp:1633539096e3,headersStr:null,content:"# json\n\nThe json function will convert any string to object allowing to access to theirs properties\n\n{{ json('[1, 2, 3]')[0]  }}\n{# results in: '1' #}\n\n{{ json('{\"foo\": [666, 1, 2]}').foo[0}}\n{# results in: '666' #}\n",normalizedContent:"# json\n\nthe json function will convert any string to object allowing to access to theirs properties\n\n{{ json('[1, 2, 3]')[0]  }}\n{# results in: '1' #}\n\n{{ json('{\"foo\": [666, 1, 2]}').foo[0}}\n{# results in: '666' #}\n",charsets:{}},{title:"max",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"max"},{property:"og:description",content:"max | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/function/max.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"max"},{name:"twitter:description",content:"max | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/function/max.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/function/max.html",relativePath:"docs/developer-guide/variables/function/max.md",key:"v-5abd22fa",path:"/docs/developer-guide/variables/function/max.html",lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:null,content:"# max\n\nThe max function will return the largest of it's numerical arguments.\n\n{{ max(user.age, 80) }}\n",normalizedContent:"# max\n\nthe max function will return the largest of it's numerical arguments.\n\n{{ max(user.age, 80) }}\n",charsets:{}},{title:"min",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"min"},{property:"og:description",content:"min | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/function/min.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"min"},{name:"twitter:description",content:"min | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/function/min.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/function/min.html",relativePath:"docs/developer-guide/variables/function/min.md",key:"v-95584f7a",path:"/docs/developer-guide/variables/function/min.html",lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:null,content:"# min\n\nThe min function will return the smallest of it's numerical arguments.\n\n{{ min(user.age, 80) }}\n",normalizedContent:"# min\n\nthe min function will return the smallest of it's numerical arguments.\n\n{{ min(user.age, 80) }}\n",charsets:{}},{title:"now",frontmatter:{meta:[{property:"article:modified_time",content:"2022-02-08T14:50:46.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"now"},{property:"og:description",content:"now | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/function/now.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"now"},{name:"twitter:description",content:"now | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/function/now.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/function/now.html",relativePath:"docs/developer-guide/variables/function/now.md",key:"v-26ff90c3",path:"/docs/developer-guide/variables/function/now.html",headers:[{level:2,title:"Arguments",slug:"arguments",normalizedTitle:"arguments",charIndex:158}],lastUpdated:"2/8/2022, 2:50:46 PM",lastUpdatedTimestamp:1644331846e3,headersStr:"Arguments",content:'# now\n\nThe now function will return the actual datetime. The arguments are the same than the date except the format.\n\n{{ now(timeZone="Europe/Paris") }}\n\n\n\n# Arguments\n\n * existingFormat\n * timeZone\n * locale',normalizedContent:'# now\n\nthe now function will return the actual datetime. the arguments are the same than the date except the format.\n\n{{ now(timezone="europe/paris") }}\n\n\n\n# arguments\n\n * existingformat\n * timezone\n * locale',charsets:{}},{title:"parent",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"parent"},{property:"og:description",content:"parent | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/function/parent.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"parent"},{name:"twitter:description",content:"parent | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/function/parent.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/function/parent.html",relativePath:"docs/developer-guide/variables/function/parent.md",key:"v-2afbd45e",path:"/docs/developer-guide/variables/function/parent.html",lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:null,content:'# parent\n\nThe parent function is used inside of a block to render the content that the parent template would\nhave rendered inside of the block had the current template not overriden it. It is similar to Java\'s super keyword.\n\nLet\'s assume you have a template, "parent.peb" that looks something like this:\n\n{% block "content" %}\n\tparent contents\n{% endblock %}\n\n\nAnd then you have another template, "child.peb" that extends "parent.peb":\n\n{% extends "parent.peb" %}\n\n{% block "content" %}\n\tchild contents\n\t{{ parent() }}\n{% endblock %}\n\n\nThe output will look something like the following:\n\nparent contents\nchild contents\n',normalizedContent:'# parent\n\nthe parent function is used inside of a block to render the content that the parent template would\nhave rendered inside of the block had the current template not overriden it. it is similar to java\'s super keyword.\n\nlet\'s assume you have a template, "parent.peb" that looks something like this:\n\n{% block "content" %}\n\tparent contents\n{% endblock %}\n\n\nand then you have another template, "child.peb" that extends "parent.peb":\n\n{% extends "parent.peb" %}\n\n{% block "content" %}\n\tchild contents\n\t{{ parent() }}\n{% endblock %}\n\n\nthe output will look something like the following:\n\nparent contents\nchild contents\n',charsets:{}},{title:"range",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"range"},{property:"og:description",content:"range | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/function/range.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"range"},{name:"twitter:description",content:"range | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/function/range.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/function/range.html",relativePath:"docs/developer-guide/variables/function/range.md",key:"v-2d2dbf23",path:"/docs/developer-guide/variables/function/range.html",lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:null,content:"# range\n\nThe range function will return a list containing an arithmetic progression of numbers:\n\n{% for i in range(0, 3) %}\n    {{ i }},\n{% endfor %}\n\n{# outputs 0, 1, 2, 3, #}\n\n\nWhen step is given (as the third parameter), it specifies the increment (or decrement):\n\n{% for i in range(0, 6, 2) %}\n    {{ i }},\n{% endfor %}\n\n{# outputs 0, 2, 4, 6, #}\n\n\nPebble built-in .. operator is just a shortcut for the range function with a step of 1+\n\n{% for i in 0..3 %}\n    {{ i }},\n{% endfor %}\n\n{# outputs 0, 1, 2, 3, #}\n",normalizedContent:"# range\n\nthe range function will return a list containing an arithmetic progression of numbers:\n\n{% for i in range(0, 3) %}\n    {{ i }},\n{% endfor %}\n\n{# outputs 0, 1, 2, 3, #}\n\n\nwhen step is given (as the third parameter), it specifies the increment (or decrement):\n\n{% for i in range(0, 6, 2) %}\n    {{ i }},\n{% endfor %}\n\n{# outputs 0, 2, 4, 6, #}\n\n\npebble built-in .. operator is just a shortcut for the range function with a step of 1+\n\n{% for i in 0..3 %}\n    {{ i }},\n{% endfor %}\n\n{# outputs 0, 1, 2, 3, #}\n",charsets:{}},{title:"Operators",frontmatter:{order:3,meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Operators"},{property:"og:description",content:"Operators | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/operator/"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Operators"},{name:"twitter:description",content:"Operators | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/operator/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/operator/",relativePath:"docs/developer-guide/variables/operator/README.md",key:"v-33246d6c",path:"/docs/developer-guide/variables/operator/",headers:[{level:2,title:"List of built-in operators:",slug:"list-of-built-in-operators",normalizedTitle:"list of built-in operators:",charIndex:16}],lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:"List of built-in operators:",content:"# Operators\n\n\n# List of built-in operators:",normalizedContent:"# operators\n\n\n# list of built-in operators:",charsets:{}},{title:"Comparisons",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Comparisons"},{property:"og:description",content:"Comparisons | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/operator/comparisons.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Comparisons"},{name:"twitter:description",content:"Comparisons | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/operator/comparisons.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/operator/comparisons.html",relativePath:"docs/developer-guide/variables/operator/comparisons.md",key:"v-97f5f47a",path:"/docs/developer-guide/variables/operator/comparisons.html",lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:null,content:'# Comparisons\n\nPebble provides the following comparison operators: ==, !=, <, >, <=, >=. All of them except for ==\nare equivalent to their Java counterparts. The == operator uses Java.util.Objects.equals(a, b) behind the\nscenes to perform null safe value comparisons.\n\n> equals is an alias for ==\n\n{% if user.name equals "Mitchell" %}\n\t...\n{% endif %}\n',normalizedContent:'# comparisons\n\npebble provides the following comparison operators: ==, !=, <, >, <=, >=. all of them except for ==\nare equivalent to their java counterparts. the == operator uses java.util.objects.equals(a, b) behind the\nscenes to perform null safe value comparisons.\n\n> equals is an alias for ==\n\n{% if user.name equals "mitchell" %}\n\t...\n{% endif %}\n',charsets:{}},{title:"concat",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"concat"},{property:"og:description",content:"concat | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/operator/concat.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"concat"},{name:"twitter:description",content:"concat | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/operator/concat.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/operator/concat.html",relativePath:"docs/developer-guide/variables/operator/concat.md",key:"v-34f53695",path:"/docs/developer-guide/variables/operator/concat.html",lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:null,content:'# concat\n\nThe concat operator can be used to concat 2 strings\n\n{{ "apple" ~ "pear" ~ "banana" }}\n{# results in: \'applepearbanana\' #}\n',normalizedContent:'# concat\n\nthe concat operator can be used to concat 2 strings\n\n{{ "apple" ~ "pear" ~ "banana" }}\n{# results in: \'applepearbanana\' #}\n',charsets:{}},{title:"contains",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"contains"},{property:"og:description",content:"contains | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/operator/contains.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"contains"},{name:"twitter:description",content:"contains | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/operator/contains.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/operator/contains.html",relativePath:"docs/developer-guide/variables/operator/contains.md",key:"v-c8549002",path:"/docs/developer-guide/variables/operator/contains.html",lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:null,content:'# contains\n\nThe contains operator can be used to determine if a collection, map, or array contains a particular item.\n\n{% if ["apple", "pear", "banana"] contains "apple" %}\n\t...\n{% endif %}\n\n\nWhen using maps, the contains operator checks for an existing key.\n\n{% if {"apple":"red", "banana":"yellow"} contains "banana" %}\n\t...\n{% endif %}\n\n\nThe operator can be used to look for multiple items at once:\n\n{% if ["apple", "pear", "banana", "peach"] contains ["apple", "peach"] %}\n\t...\n{% endif %}\n',normalizedContent:'# contains\n\nthe contains operator can be used to determine if a collection, map, or array contains a particular item.\n\n{% if ["apple", "pear", "banana"] contains "apple" %}\n\t...\n{% endif %}\n\n\nwhen using maps, the contains operator checks for an existing key.\n\n{% if {"apple":"red", "banana":"yellow"} contains "banana" %}\n\t...\n{% endif %}\n\n\nthe operator can be used to look for multiple items at once:\n\n{% if ["apple", "pear", "banana", "peach"] contains ["apple", "peach"] %}\n\t...\n{% endif %}\n',charsets:{}},{title:"is",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"is"},{property:"og:description",content:"is | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/operator/is.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"is"},{name:"twitter:description",content:"is | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/operator/is.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/operator/is.html",relativePath:"docs/developer-guide/variables/operator/is.md",key:"v-b544102e",path:"/docs/developer-guide/variables/operator/is.html",lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:null,content:"# is\n\nThe is operator will apply a test to a variable which will return a boolean.\n\n{% if 2 is even %}\n\t...\n{% endif %}\n\n\nThe result can be negated using the not operator:\n\n{% if 3 is not even %}\n\t...\n{% endif %}\n",normalizedContent:"# is\n\nthe is operator will apply a test to a variable which will return a boolean.\n\n{% if 2 is even %}\n\t...\n{% endif %}\n\n\nthe result can be negated using the not operator:\n\n{% if 3 is not even %}\n\t...\n{% endif %}\n",charsets:{}},{title:"Logic",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Logic"},{property:"og:description",content:"Logic | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/operator/logic.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Logic"},{name:"twitter:description",content:"Logic | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/operator/logic.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/operator/logic.html",relativePath:"docs/developer-guide/variables/operator/logic.md",key:"v-0d071783",path:"/docs/developer-guide/variables/operator/logic.html",lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:null,content:"# Logic\n\nThe and operator and the or operator are available to join boolean expressions.\n\n{% if 2 is even and 3 is odd %}\n\t...\n{% endif %}\n\n\nThe not operator is available to negate a boolean expression.\n\n{% if 3 is not even %}\n\t...\n{% endif %}\n\n\nParenthesis can be used to group expressions to ensure a desired precedence.\n\n{% if (3 is not even) and (2 is odd or 3 is even) %}\n\t...\n{% endif %}\n",normalizedContent:"# logic\n\nthe and operator and the or operator are available to join boolean expressions.\n\n{% if 2 is even and 3 is odd %}\n\t...\n{% endif %}\n\n\nthe not operator is available to negate a boolean expression.\n\n{% if 3 is not even %}\n\t...\n{% endif %}\n\n\nparenthesis can be used to group expressions to ensure a desired precedence.\n\n{% if (3 is not even) and (2 is odd or 3 is even) %}\n\t...\n{% endif %}\n",charsets:{}},{title:"Math",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Math"},{property:"og:description",content:"Math | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/operator/math.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Math"},{name:"twitter:description",content:"Math | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/operator/math.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/operator/math.html",relativePath:"docs/developer-guide/variables/operator/math.md",key:"v-6fab4526",path:"/docs/developer-guide/variables/operator/math.html",lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:null,content:"# Math\n\nAll the regular math operators are available for use. Order of operations applies.\n\n{{ 2 + 2 / ( 10 % 3 ) * (8 - 1) }}\n\n\nThe following operators are supported:\n\n * +: Adds two numbers together (the operands are casted to numbers). {{\n   1 + 1 }} is 2.\n * -: Subtracts the second number from the first one. {{ 3 - 2 }} is 1.\n * /: Divides two numbers. The returned value will be a floating point number. {{ 1 / 2 }} is {{ 0.5 }}.\n * %: Calculates the remainder of an integer division. {{ 11 % 7 }} is 4.\n * *: Multiplies the left operand with the right one. {{ 2 * 2 }} would return 4.\n\nThe result can be negated using the not operator.",normalizedContent:"# math\n\nall the regular math operators are available for use. order of operations applies.\n\n{{ 2 + 2 / ( 10 % 3 ) * (8 - 1) }}\n\n\nthe following operators are supported:\n\n * +: adds two numbers together (the operands are casted to numbers). {{\n   1 + 1 }} is 2.\n * -: subtracts the second number from the first one. {{ 3 - 2 }} is 1.\n * /: divides two numbers. the returned value will be a floating point number. {{ 1 / 2 }} is {{ 0.5 }}.\n * %: calculates the remainder of an integer division. {{ 11 % 7 }} is 4.\n * *: multiplies the left operand with the right one. {{ 2 * 2 }} would return 4.\n\nthe result can be negated using the not operator.",charsets:{}},{title:"not",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"not"},{property:"og:description",content:"not | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/operator/not.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"not"},{name:"twitter:description",content:"not | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/operator/not.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/operator/not.html",relativePath:"docs/developer-guide/variables/operator/not.md",key:"v-a066783a",path:"/docs/developer-guide/variables/operator/not.html",lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:null,content:"# not\n\nThe not operator is used in conjonction with is will negate the test.\n\n{% if 3 is not even %}\n\t...\n{% endif %}\n",normalizedContent:"# not\n\nthe not operator is used in conjonction with is will negate the test.\n\n{% if 3 is not even %}\n\t...\n{% endif %}\n",charsets:{}},{title:"Null-Coalescing operator",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Null-Coalescing operator"},{property:"og:description",content:"Null-Coalescing operator | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/operator/null-coalescing.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Null-Coalescing operator"},{name:"twitter:description",content:"Null-Coalescing operator | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/operator/null-coalescing.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/operator/null-coalescing.html",relativePath:"docs/developer-guide/variables/operator/null-coalescing.md",key:"v-68153c43",path:"/docs/developer-guide/variables/operator/null-coalescing.html",lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:null,content:"# Null-Coalescing operator\n\nPebble supports the use of the null-coalescing operator that allow to test if variables is defined.\n\n{% set baz = \"baz\" %}\n{{ foo ?? bar ?? baz }}\n\n{# results in: 'baz' #}\n\n{{ foo ?? bar ?? raise }}\n{# results: an exception because none of the 3 vars is defined  #}\n",normalizedContent:"# null-coalescing operator\n\npebble supports the use of the null-coalescing operator that allow to test if variables is defined.\n\n{% set baz = \"baz\" %}\n{{ foo ?? bar ?? baz }}\n\n{# results in: 'baz' #}\n\n{{ foo ?? bar ?? raise }}\n{# results: an exception because none of the 3 vars is defined  #}\n",charsets:{}},{title:"Ternary operator",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Ternary operator"},{property:"og:description",content:"Ternary operator | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/operator/ternary-operator.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Ternary operator"},{name:"twitter:description",content:"Ternary operator | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/operator/ternary-operator.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/operator/ternary-operator.html",relativePath:"docs/developer-guide/variables/operator/ternary-operator.md",key:"v-0aa012d1",path:"/docs/developer-guide/variables/operator/ternary-operator.html",lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:null,content:"# Ternary operator\n\nPebble supports the use of the conditional operator (often named the ternary operator).\n\n{{ foo == null ? bar : baz }}\n",normalizedContent:"# ternary operator\n\npebble supports the use of the conditional operator (often named the ternary operator).\n\n{{ foo == null ? bar : baz }}\n",charsets:{}},{title:"Tags",frontmatter:{order:4,meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Tags"},{property:"og:description",content:"Tags | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/tag/"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Tags"},{name:"twitter:description",content:"Tags | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/tag/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/tag/",relativePath:"docs/developer-guide/variables/tag/README.md",key:"v-781b89e8",path:"/docs/developer-guide/variables/tag/",headers:[{level:2,title:"List of built-in operators:",slug:"list-of-built-in-operators",normalizedTitle:"list of built-in operators:",charIndex:11}],lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:"List of built-in operators:",content:"# Tags\n\n\n# List of built-in operators:",normalizedContent:"# tags\n\n\n# list of built-in operators:",charsets:{}},{title:"block",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"block"},{property:"og:description",content:"block | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/tag/block.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"block"},{name:"twitter:description",content:"block | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/tag/block.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/tag/block.html",relativePath:"docs/developer-guide/variables/tag/block.md",key:"v-2652c323",path:"/docs/developer-guide/variables/tag/block.html",lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:null,content:"# block\n\nThe block tag is used to render the contents of a block more than once.\nIn the following example we create a block with the name 'header':\n\n{% block header %}\n\t<h1> Introduction </h1>\n{% endblock header %}\n\n\nThen the block tag can be used with the block function\n\n{{ block(\"post\") }}\n",normalizedContent:"# block\n\nthe block tag is used to render the contents of a block more than once.\nin the following example we create a block with the name 'header':\n\n{% block header %}\n\t<h1> introduction </h1>\n{% endblock header %}\n\n\nthen the block tag can be used with the block function\n\n{{ block(\"post\") }}\n",charsets:{}},{title:"filter",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"filter"},{property:"og:description",content:"filter | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/tag/filter.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"filter"},{name:"twitter:description",content:"filter | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/tag/filter.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/tag/filter.html",relativePath:"docs/developer-guide/variables/tag/filter.md",key:"v-8587667a",path:"/docs/developer-guide/variables/tag/filter.html",lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:null,content:"# filter\n\nThe filter tag allows you to apply a filter to a large chunk of template.\n\n{% filter upper %}\n\thello\n{% endfilter %}}\n\n{# output: 'HELLO' #}\n\n\nMultiple filters can be chained together.\n\n{% filter upper | lower | title %}\n\thello<br>\n{% endfilter %}}\n\n{# output: 'HELLO&lt;br&gt;' #}\n",normalizedContent:"# filter\n\nthe filter tag allows you to apply a filter to a large chunk of template.\n\n{% filter upper %}\n\thello\n{% endfilter %}}\n\n{# output: 'hello' #}\n\n\nmultiple filters can be chained together.\n\n{% filter upper | lower | title %}\n\thello<br>\n{% endfilter %}}\n\n{# output: 'hello&lt;br&gt;' #}\n",charsets:{cjk:!0}},{title:"for",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"for"},{property:"og:description",content:"for | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/tag/for.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"for"},{name:"twitter:description",content:"for | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/tag/for.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/tag/for.html",relativePath:"docs/developer-guide/variables/tag/for.md",key:"v-e12df7aa",path:"/docs/developer-guide/variables/tag/for.html",lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:null,content:"# for\n\nThe for tag is used to iterate through primitive arrays or anything that implements the java.lang.Iterable\ninterface, as well as maps.\n\n{% for user in users %}\n\t{{ user.name }} lives in {{ user.city }}.\n{% endfor %}\n\n\nWhile inside of the loop, Pebble provides a couple of special variables to help you out:\n\n * loop.index - a zero-based index that increments with every iteration.\n * loop.length - the size of the object we are iterating over.\n * loop.first - True if first iteration\n * loop.last - True if last iteration\n * loop.revindex - The number of iterations from the end of the loop\n\n{% for user in users %}\n\t{{ loop.index }} - {{ user.id }}\n{% endfor %}\n\n\nThe for tag also provides a convenient way to check if the iterable object is empty with the included else tag.\n\n{% for user in users %}\n\t{{ loop.index }} - {{ user.id }}\n{% else %}\n\tThere are no users to display.\n{% endfor %}\n\n\nIterating over maps can be done like so:\n\n{% for entry in map %}\n    {{ entry.key }} - {{ entry.value }}\n{% endfor %}\n",normalizedContent:"# for\n\nthe for tag is used to iterate through primitive arrays or anything that implements the java.lang.iterable\ninterface, as well as maps.\n\n{% for user in users %}\n\t{{ user.name }} lives in {{ user.city }}.\n{% endfor %}\n\n\nwhile inside of the loop, pebble provides a couple of special variables to help you out:\n\n * loop.index - a zero-based index that increments with every iteration.\n * loop.length - the size of the object we are iterating over.\n * loop.first - true if first iteration\n * loop.last - true if last iteration\n * loop.revindex - the number of iterations from the end of the loop\n\n{% for user in users %}\n\t{{ loop.index }} - {{ user.id }}\n{% endfor %}\n\n\nthe for tag also provides a convenient way to check if the iterable object is empty with the included else tag.\n\n{% for user in users %}\n\t{{ loop.index }} - {{ user.id }}\n{% else %}\n\tthere are no users to display.\n{% endfor %}\n\n\niterating over maps can be done like so:\n\n{% for entry in map %}\n    {{ entry.key }} - {{ entry.value }}\n{% endfor %}\n",charsets:{}},{title:"if",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"if"},{property:"og:description",content:"if | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/tag/if.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"if"},{name:"twitter:description",content:"if | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/tag/if.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/tag/if.html",relativePath:"docs/developer-guide/variables/tag/if.md",key:"v-33b417a3",path:"/docs/developer-guide/variables/tag/if.html",headers:[{level:3,title:"Supported conditions",slug:"supported-conditions",normalizedTitle:"supported conditions",charIndex:346}],lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:"Supported conditions",content:"# if\n\nThe if tag allows you to designate a chunk of content as conditional depending on the result of an expression\n\n{% if users is empty %}\n\tThere are no users.\n{% elseif users.length == 1 %}\n\tThere is only one user.\n{% else %}\n\tThere are many users.\n{% endif %}\n\n\nThe expression used in the if statement often makes use of the is operator.\n\n\n# Supported conditions\n\nIf tag currently supports the following expression\n\nVALUE                         BOOLEAN EXPRESSION\nboolean                       boolean value\nEmpty string                  false\nNon empty string              true\nnumeric zero                  false\nnumeric different than zero   true",normalizedContent:"# if\n\nthe if tag allows you to designate a chunk of content as conditional depending on the result of an expression\n\n{% if users is empty %}\n\tthere are no users.\n{% elseif users.length == 1 %}\n\tthere is only one user.\n{% else %}\n\tthere are many users.\n{% endif %}\n\n\nthe expression used in the if statement often makes use of the is operator.\n\n\n# supported conditions\n\nif tag currently supports the following expression\n\nvalue                         boolean expression\nboolean                       boolean value\nempty string                  false\nnon empty string              true\nnumeric zero                  false\nnumeric different than zero   true",charsets:{}},{title:"macro",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"macro"},{property:"og:description",content:"macro | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/tag/macro.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"macro"},{name:"twitter:description",content:"macro | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/tag/macro.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/tag/macro.html",relativePath:"docs/developer-guide/variables/tag/macro.md",key:"v-2b9b85e5",path:"/docs/developer-guide/variables/tag/macro.html",headers:[{level:3,title:"Access to the global context",slug:"access-to-the-global-context",normalizedTitle:"access to the global context",charIndex:780}],lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:"Access to the global context",content:'# macro\n\nThe macro tag allows you to create a chunk of reusable and dynamic content. The macro can be called\nmultiple times in the current template.\n\nIt doesn\'t matter where in the current template you define a macro, i.e. whether it\'s before or after you call it.\nHere is an example of how to define a macro:\n\n{% macro input(type="text", name, value) %}\n\t<input type="{{ type }}" name="{{ name }}" value="{{ value }}" />\n{% endmacro %}\n\n\nAnd now the macro can be called numerous times throughout the template, like so:\n\n{{ input(name="country") }}\n{# will output: <input type="text" name="country" value="" /> #}\n\n\nA macro does not have access to the same variables that the rest of the template has access to.\nA macro can only work with the variables provided as arguments.\n\n\n# Access to the global context\n\nYou can pass the whole context as an argument by using the special _context variable if you need to access\nvariables outside of the macro scope:\n\n{% set foo = \'bar\' %}\n\n{{ test(_context) }}\n{% macro test(_context) %}\n\t{{ _context.foo }}\n{% endmacro %}\n\n{# will output: bar #}\n',normalizedContent:'# macro\n\nthe macro tag allows you to create a chunk of reusable and dynamic content. the macro can be called\nmultiple times in the current template.\n\nit doesn\'t matter where in the current template you define a macro, i.e. whether it\'s before or after you call it.\nhere is an example of how to define a macro:\n\n{% macro input(type="text", name, value) %}\n\t<input type="{{ type }}" name="{{ name }}" value="{{ value }}" />\n{% endmacro %}\n\n\nand now the macro can be called numerous times throughout the template, like so:\n\n{{ input(name="country") }}\n{# will output: <input type="text" name="country" value="" /> #}\n\n\na macro does not have access to the same variables that the rest of the template has access to.\na macro can only work with the variables provided as arguments.\n\n\n# access to the global context\n\nyou can pass the whole context as an argument by using the special _context variable if you need to access\nvariables outside of the macro scope:\n\n{% set foo = \'bar\' %}\n\n{{ test(_context) }}\n{% macro test(_context) %}\n\t{{ _context.foo }}\n{% endmacro %}\n\n{# will output: bar #}\n',charsets:{}},{title:"set",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"set"},{property:"og:description",content:"set | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/tag/set.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"set"},{name:"twitter:description",content:"set | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/tag/set.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/tag/set.html",relativePath:"docs/developer-guide/variables/tag/set.md",key:"v-f3d3490e",path:"/docs/developer-guide/variables/tag/set.html",lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:null,content:'# set\n\nThe set tag allows you to define a variable in the current context, whether it currently exists or not.\n\n{% set header = "Test Page" %}\n\n{{ header }}\n',normalizedContent:'# set\n\nthe set tag allows you to define a variable in the current context, whether it currently exists or not.\n\n{% set header = "test page" %}\n\n{{ header }}\n',charsets:{}},{title:"verbatim",frontmatter:{meta:[{property:"article:modified_time",content:"2021-11-30T21:09:42.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"verbatim"},{property:"og:description",content:"verbatim | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/tag/verbatim.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"verbatim"},{name:"twitter:description",content:"verbatim | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/tag/verbatim.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/tag/verbatim.html",relativePath:"docs/developer-guide/variables/tag/verbatim.md",key:"v-6fae6643",path:"/docs/developer-guide/variables/tag/verbatim.html",headers:[{level:2,title:"Inline Verbatim Text",slug:"inline-verbatim-text",normalizedTitle:"inline verbatim text",charIndex:192}],lastUpdated:"11/30/2021, 9:09:42 PM",lastUpdatedTimestamp:1638306582e3,headersStr:"Inline Verbatim Text",content:'# verbatim\n\nThe verbatim tag allows you to write a block of Pebble syntax that won\'t be parsed.\n\n{% verbatim %}\n\t{% for user in users %}\n\t\t{{ user.name }}\n\t{% endfor %}\n{% endverbatim %}\n\n\n\n# Inline Verbatim Text\n\nFor inline verbatim text, a string literal can be used. For example, if you need to include {{ in the output of a template, you can use {{ "{{" }} in string literal in the Pebble template\n\nThis would be useful if you are using Pebble to generate Angular HTML component template files:\n\n<td>{{ "{{" }}school.name{{ "}}" }}</td>\n\n\nwould produce the following template output:\n\n<td>{{school.name}}</td>\n',normalizedContent:'# verbatim\n\nthe verbatim tag allows you to write a block of pebble syntax that won\'t be parsed.\n\n{% verbatim %}\n\t{% for user in users %}\n\t\t{{ user.name }}\n\t{% endfor %}\n{% endverbatim %}\n\n\n\n# inline verbatim text\n\nfor inline verbatim text, a string literal can be used. for example, if you need to include {{ in the output of a template, you can use {{ "{{" }} in string literal in the pebble template\n\nthis would be useful if you are using pebble to generate angular html component template files:\n\n<td>{{ "{{" }}school.name{{ "}}" }}</td>\n\n\nwould produce the following template output:\n\n<td>{{school.name}}</td>\n',charsets:{}},{title:"Tests",frontmatter:{order:5,meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Tests"},{property:"og:description",content:"Tests | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/test/"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Tests"},{name:"twitter:description",content:"Tests | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/test/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/test/",relativePath:"docs/developer-guide/variables/test/README.md",key:"v-2c735824",path:"/docs/developer-guide/variables/test/",headers:[{level:2,title:"List of built-in operators:",slug:"list-of-built-in-operators",normalizedTitle:"list of built-in operators:",charIndex:12}],lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:"List of built-in operators:",content:"# Tests\n\n\n# List of built-in operators:",normalizedContent:"# tests\n\n\n# list of built-in operators:",charsets:{}},{title:"defined",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"defined"},{property:"og:description",content:"defined | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/test/defined.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"defined"},{name:"twitter:description",content:"defined | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/test/defined.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/test/defined.html",relativePath:"docs/developer-guide/variables/test/defined.md",key:"v-4fe9ff3a",path:"/docs/developer-guide/variables/test/defined.html",lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:null,content:"# defined\n\nThe defined test checks if a variable is defined.\n\n{% if missing is not defined %}\n\t...\n{% endif %}\n",normalizedContent:"# defined\n\nthe defined test checks if a variable is defined.\n\n{% if missing is not defined %}\n\t...\n{% endif %}\n",charsets:{}},{title:"empty",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"empty"},{property:"og:description",content:"empty | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/test/empty.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"empty"},{name:"twitter:description",content:"empty | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/test/empty.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/test/empty.html",relativePath:"docs/developer-guide/variables/test/empty.md",key:"v-562d6fe3",path:"/docs/developer-guide/variables/test/empty.html",lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:null,content:"# empty\n\nThe empty test checks if a variable is empty. A variable is empty if it is null, an empty string, an\nempty collection, or an empty map.\n\n{% if user.email is empty %}\n\t...\n{% endif %}\n",normalizedContent:"# empty\n\nthe empty test checks if a variable is empty. a variable is empty if it is null, an empty string, an\nempty collection, or an empty map.\n\n{% if user.email is empty %}\n\t...\n{% endif %}\n",charsets:{}},{title:"even",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"even"},{property:"og:description",content:"even | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/test/even.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"even"},{name:"twitter:description",content:"even | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/test/even.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/test/even.html",relativePath:"docs/developer-guide/variables/test/even.md",key:"v-416ac725",path:"/docs/developer-guide/variables/test/even.html",lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:null,content:"# even\n\nThe even test checks if an integer is even.\n\n{% if 2 is even %}\n\t...\n{% endif %}\n",normalizedContent:"# even\n\nthe even test checks if an integer is even.\n\n{% if 2 is even %}\n\t...\n{% endif %}\n",charsets:{}},{title:"iterable",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"iterable"},{property:"og:description",content:"iterable | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/test/iterable.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"iterable"},{name:"twitter:description",content:"iterable | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/test/iterable.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/test/iterable.html",relativePath:"docs/developer-guide/variables/test/iterable.md",key:"v-f8095e16",path:"/docs/developer-guide/variables/test/iterable.html",lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:null,content:"# iterable\n\nThe iterable test checks if a variable implements java.lang.Iterable.\n\n{% if users is iterable %}\n\t{% for user in users %}\n\t\t...\n\t{% endfor %}\n{% endif %}\n",normalizedContent:"# iterable\n\nthe iterable test checks if a variable implements java.lang.iterable.\n\n{% if users is iterable %}\n\t{% for user in users %}\n\t\t...\n\t{% endfor %}\n{% endif %}\n",charsets:{}},{title:"json",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"json"},{property:"og:description",content:"json | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/test/json.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"json"},{name:"twitter:description",content:"json | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/test/json.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/test/json.html",relativePath:"docs/developer-guide/variables/test/json.md",key:"v-47b2e3ee",path:"/docs/developer-guide/variables/test/json.html",lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:null,content:"# json\n\nThe json test checks if a variable is valid json string?\n\n{% if '{\"test\": 1}' is json %}\n\t...\n{% endif %}\n",normalizedContent:"# json\n\nthe json test checks if a variable is valid json string?\n\n{% if '{\"test\": 1}' is json %}\n\t...\n{% endif %}\n",charsets:{}},{title:"map",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"map"},{property:"og:description",content:"map | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/test/map.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"map"},{name:"twitter:description",content:"map | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/test/map.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/test/map.html",relativePath:"docs/developer-guide/variables/test/map.md",key:"v-0b5d6643",path:"/docs/developer-guide/variables/test/map.html",lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:null,content:'# map\n\nThe map test checks if a variable is an instance of a map.\n\n{% if {"apple":"red", "banana":"yellow"} is map %}\n\t...\n{% endif %}\n',normalizedContent:'# map\n\nthe map test checks if a variable is an instance of a map.\n\n{% if {"apple":"red", "banana":"yellow"} is map %}\n\t...\n{% endif %}\n',charsets:{}},{title:"null",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"null"},{property:"og:description",content:"null | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/test/null.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"null"},{name:"twitter:description",content:"null | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/test/null.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/test/null.html",relativePath:"docs/developer-guide/variables/test/null.md",key:"v-3d85960b",path:"/docs/developer-guide/variables/test/null.html",lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:null,content:"# null\n\nThe null test checks if a variable is null.\n\n{% if user.email is null %}\n\t...\n{% endif %}\n",normalizedContent:"# null\n\nthe null test checks if a variable is null.\n\n{% if user.email is null %}\n\t...\n{% endif %}\n",charsets:{}},{title:"odd",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"odd"},{property:"og:description",content:"odd | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/test/odd.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"odd"},{name:"twitter:description",content:"odd | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/test/odd.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/test/odd.html",relativePath:"docs/developer-guide/variables/test/odd.md",key:"v-720f7fba",path:"/docs/developer-guide/variables/test/odd.html",lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:null,content:"# odd\n\nThe odd test checks if an integer is odd.\n\n{% if 3 is odd %}\n\t...\n{% endif %}\n",normalizedContent:"# odd\n\nthe odd test checks if an integer is odd.\n\n{% if 3 is odd %}\n\t...\n{% endif %}\n",charsets:{}},{title:"Getting Started",frontmatter:{order:1,meta:[{property:"article:modified_time",content:"2022-04-18T13:46:56.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Getting Started"},{property:"og:description",content:"Getting Started | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/getting-started/"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Getting Started"},{name:"twitter:description",content:"Getting Started | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/getting-started/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/getting-started/",relativePath:"docs/getting-started/README.md",key:"v-787eb528",path:"/docs/getting-started/",headers:[{level:2,title:"Before you begin",slug:"before-you-begin",normalizedTitle:"before you begin",charIndex:22},{level:2,title:"Launch Kestra",slug:"launch-kestra",normalizedTitle:"launch kestra",charIndex:120},{level:2,title:"Create your first flow",slug:"create-your-first-flow",normalizedTitle:"create your first flow",charIndex:1007},{level:2,title:"Execute your first flow",slug:"execute-your-first-flow",normalizedTitle:"execute your first flow",charIndex:1633},{level:2,title:"Next Steps",slug:"next-steps",normalizedTitle:"next steps",charIndex:1936}],lastUpdated:"4/18/2022, 1:46:56 PM",lastUpdatedTimestamp:1650289616e3,headersStr:"Before you begin Launch Kestra Create your first flow Execute your first flow Next Steps",content:"# Getting Started\n\n\n# Before you begin\n\nMake sure the following are already installed:\n\n * Docker\n * Docker Compose\n\n\n# Launch Kestra\n\n * Download the compose file here and save it with the name docker-compose.yml. For linux and MacOS, you can run wget https://raw.githubusercontent.com/kestra-io/kestra/develop/docker-compose.yml.\n * Run docker-compose pull\n * Run docker-compose up -d\n * Open http://localhost:8080 in your browser\n\nWARNING\n\nThe default amount of memory available for Docker on MacOS is often not enough to get Kestra up and running with all dependencies. If enough memory is not allocated, it might lead to the Kestra instance continuously restarting. You should allocate at least 4GB memory for the Docker Engine (ideally 8GB). You can check and change the amount of memory in Resources.\n\nYou can also check if you have enough memory by running this command:\n\ndocker run --rm \"debian:buster-slim\" bash -c 'numfmt --to iec $(echo $(($(getconf _PHYS_PAGES) * $(getconf PAGE_SIZE))))'\n\n\n\n# Create your first flow\n\nThe default installation contains some examples on the namespace io.kestra.demo.\n\nWe will create a new one :\n\n\n\n * Click on the Create button at the bottom\n * Paste the flow below\n * Click on save\n\nid: logs\nnamespace: io.kestra.tests\n\ntasks:\n- id: t1\n  type: io.kestra.core.tasks.debugs.Echo\n  format: first {{task.id}}\n  level: TRACE\n- id: t2\n  type: io.kestra.core.tasks.debugs.Echo\n  format: second {{task.type}}\n  level: WARN\n- id: t3\n  type: io.kestra.core.tasks.debugs.Echo\n  format: third {{flow.id}}\n  level: ERROR\n\n\nYou will see the Topology of your flow as a graph in the Topology tab.\n\n\n\n\n# Execute your first flow\n\nNow let's execute our first flow and see it running :\n\n * Now hit the button Execute on top Tabs.\n * You will see in real-time the execution of the current flow.\n   \n * Look at the log of the current tasks on Logs\n   \n * And watch the topology of the current execution.\n   \n\n\n# Next Steps\n\nNow, you are ready to use Kestra!\n\nNow we suggest reading the following documentation in the order presented:\n\n * Learn Kestra concepts.\n * Read the Developer Guide to understand how to code your own flow.\n * Look at Plugins to perform some real tasks.\n * Deploy your kestra instance to real environments.",normalizedContent:"# getting started\n\n\n# before you begin\n\nmake sure the following are already installed:\n\n * docker\n * docker compose\n\n\n# launch kestra\n\n * download the compose file here and save it with the name docker-compose.yml. for linux and macos, you can run wget https://raw.githubusercontent.com/kestra-io/kestra/develop/docker-compose.yml.\n * run docker-compose pull\n * run docker-compose up -d\n * open http://localhost:8080 in your browser\n\nwarning\n\nthe default amount of memory available for docker on macos is often not enough to get kestra up and running with all dependencies. if enough memory is not allocated, it might lead to the kestra instance continuously restarting. you should allocate at least 4gb memory for the docker engine (ideally 8gb). you can check and change the amount of memory in resources.\n\nyou can also check if you have enough memory by running this command:\n\ndocker run --rm \"debian:buster-slim\" bash -c 'numfmt --to iec $(echo $(($(getconf _phys_pages) * $(getconf page_size))))'\n\n\n\n# create your first flow\n\nthe default installation contains some examples on the namespace io.kestra.demo.\n\nwe will create a new one :\n\n\n\n * click on the create button at the bottom\n * paste the flow below\n * click on save\n\nid: logs\nnamespace: io.kestra.tests\n\ntasks:\n- id: t1\n  type: io.kestra.core.tasks.debugs.echo\n  format: first {{task.id}}\n  level: trace\n- id: t2\n  type: io.kestra.core.tasks.debugs.echo\n  format: second {{task.type}}\n  level: warn\n- id: t3\n  type: io.kestra.core.tasks.debugs.echo\n  format: third {{flow.id}}\n  level: error\n\n\nyou will see the topology of your flow as a graph in the topology tab.\n\n\n\n\n# execute your first flow\n\nnow let's execute our first flow and see it running :\n\n * now hit the button execute on top tabs.\n * you will see in real-time the execution of the current flow.\n   \n * look at the log of the current tasks on logs\n   \n * and watch the topology of the current execution.\n   \n\n\n# next steps\n\nnow, you are ready to use kestra!\n\nnow we suggest reading the following documentation in the order presented:\n\n * learn kestra concepts.\n * read the developer guide to understand how to code your own flow.\n * look at plugins to perform some real tasks.\n * deploy your kestra instance to real environments.",charsets:{}},{title:"Plugin Developer Guide",frontmatter:{order:6,meta:[{property:"article:modified_time",content:"2021-11-19T08:25:55.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Plugin Developer Guide"},{property:"og:description",content:"Plugin Developer Guide | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/plugin-developer-guide/"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Plugin Developer Guide"},{name:"twitter:description",content:"Plugin Developer Guide | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/plugin-developer-guide/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/plugin-developer-guide/",relativePath:"docs/plugin-developer-guide/README.md",key:"v-4e9ad7a0",path:"/docs/plugin-developer-guide/",headers:[{level:2,title:"Requirements",slug:"requirements",normalizedTitle:"requirements",charIndex:119},{level:2,title:"Create a new plugins",slug:"create-a-new-plugins",normalizedTitle:"create a new plugins",charIndex:336},{level:2,title:"Develop a new plugins",slug:"develop-a-new-plugins",normalizedTitle:"develop a new plugins",charIndex:908}],lastUpdated:"11/19/2021, 8:25:55 AM",lastUpdatedTimestamp:1637310355e3,headersStr:"Requirements Create a new plugins Develop a new plugins",content:"# Plugin Developer Guide\n\nWe provide a plugin template in order to start quickly the development of a new plugins.\n\n\n# Requirements\n\nKestra plugins development requirements are :\n\n * Java 11 or later\n * IntelliJ IDEA (or any other Java IDE, we provide only help for IntelliJ IDEA)\n * Gradle (included most of the time with the IDE)\n\n\n# Create a new plugins\n\nHere is the step:\n\n 1. Go on the plugin-template repository.\n 2. Click on Use this template.\n 3. Choose the github account your want to link & repository name for the new plugins.\n 4. Clone the new repository: git clone git@github.com:{{user}}/{{name}}.git.\n 5. Open the cloned directory in IntelliJ IDEA.\n 6. Enable annotations processors.\n 7. If you are using an IntelliJ IDEA < 2020.03, install the lombok plugins (if not it's included by default).\n\nDone ! You are ready to create a new plugin, here is the directory structure you will have:\n\n\n\n# Develop a new plugins\n\nIn order to customize your plugin to your need you can follow this guide based on your need:",normalizedContent:"# plugin developer guide\n\nwe provide a plugin template in order to start quickly the development of a new plugins.\n\n\n# requirements\n\nkestra plugins development requirements are :\n\n * java 11 or later\n * intellij idea (or any other java ide, we provide only help for intellij idea)\n * gradle (included most of the time with the ide)\n\n\n# create a new plugins\n\nhere is the step:\n\n 1. go on the plugin-template repository.\n 2. click on use this template.\n 3. choose the github account your want to link & repository name for the new plugins.\n 4. clone the new repository: git clone git@github.com:{{user}}/{{name}}.git.\n 5. open the cloned directory in intellij idea.\n 6. enable annotations processors.\n 7. if you are using an intellij idea < 2020.03, install the lombok plugins (if not it's included by default).\n\ndone ! you are ready to create a new plugin, here is the directory structure you will have:\n\n\n\n# develop a new plugins\n\nin order to customize your plugin to your need you can follow this guide based on your need:",charsets:{}},{title:"Build a plugin",frontmatter:{order:8,meta:[{property:"article:modified_time",content:"2020-12-01T14:47:07.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Build a plugin"},{property:"og:description",content:"Build a plugin | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/plugin-developer-guide/build/"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Build a plugin"},{name:"twitter:description",content:"Build a plugin | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/plugin-developer-guide/build/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/plugin-developer-guide/build/",relativePath:"docs/plugin-developer-guide/build/README.md",key:"v-af19e69c",path:"/docs/plugin-developer-guide/build/",lastUpdated:"12/1/2020, 2:47:07 PM",lastUpdatedTimestamp:1606834027e3,headersStr:null,content:"# Build a plugin\n\nKestra template include a gradle task in order to build your plugin.\n\nSimple use ./gradlew shadowJar to build your plugin.\n\nThe jar will be generated on the build/libs/*.jar directory.\n\nJust drop this jar on the Kestra plugins path and it will be usable by your Kestra instance.",normalizedContent:"# build a plugin\n\nkestra template include a gradle task in order to build your plugin.\n\nsimple use ./gradlew shadowjar to build your plugin.\n\nthe jar will be generated on the build/libs/*.jar directory.\n\njust drop this jar on the kestra plugins path and it will be usable by your kestra instance.",charsets:{}},{title:"Develop your Condition",frontmatter:{order:5,meta:[{property:"article:modified_time",content:"2021-03-26T21:33:01.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Develop your Condition"},{property:"og:description",content:"Develop your Condition | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/plugin-developer-guide/conditions/"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Develop your Condition"},{name:"twitter:description",content:"Develop your Condition | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/plugin-developer-guide/conditions/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/plugin-developer-guide/conditions/",relativePath:"docs/plugin-developer-guide/conditions/README.md",key:"v-e5195c30",path:"/docs/plugin-developer-guide/conditions/",lastUpdated:"3/26/2021, 9:33:01 PM",lastUpdatedTimestamp:1616794381e3,headersStr:null,content:'# Develop your Condition\n\nHere is the instruction to develop a Condition.\n\nHere is a simple condition example that validate the current flow:\n\n@SuperBuilder\n@ToString\n@EqualsAndHashCode\n@Getter\n@NoArgsConstructor\n@Schema(\n    title = "Condition for a specific flow"\n)\n@Plugin(\n    examples = {\n        @Example(\n            full = true,\n            code = {\n                "- conditions:",\n                "    - type: io.kestra.core.models.conditions.types.FlowCondition",\n                "      namespace: io.kestra.tests",\n                "      flowId: my-current-flow"\n            }\n        )\n    }\n)\npublic class FlowCondition extends Condition {\n    @NotNull\n    @Schema(title = "The namespace of the flow")\n    public String namespace;\n\n    @NotNull\n    @Schema(title = "The flow id")\n    public String flowId;\n\n    @Override\n    public boolean test(ConditionContext conditionContext) {\n        return conditionContext.getFlow().getNamespace().equals(this.namespace) && conditionContext.getFlow().getId().equals(this.flowId);\n    }\n}\n\n\nYou just need to extend Condition and implement the boolean test(ConditionContext conditionContext) method.\n\nYou can have any properties you want like for any task (validatation, documentation, ...) is working the same way.\n\nThe test will receive a ConditionContext that will expose :\n\n * conditionContext.getFlow(): the current flow\n * conditionContext.getExecution(): the current execution that can be null for Triggers\n * conditionContext.getRunContext(): a RunContext in order to render your properties.\n\nThis method must simply return a boolean in order to validate or not the Conditions.',normalizedContent:'# develop your condition\n\nhere is the instruction to develop a condition.\n\nhere is a simple condition example that validate the current flow:\n\n@superbuilder\n@tostring\n@equalsandhashcode\n@getter\n@noargsconstructor\n@schema(\n    title = "condition for a specific flow"\n)\n@plugin(\n    examples = {\n        @example(\n            full = true,\n            code = {\n                "- conditions:",\n                "    - type: io.kestra.core.models.conditions.types.flowcondition",\n                "      namespace: io.kestra.tests",\n                "      flowid: my-current-flow"\n            }\n        )\n    }\n)\npublic class flowcondition extends condition {\n    @notnull\n    @schema(title = "the namespace of the flow")\n    public string namespace;\n\n    @notnull\n    @schema(title = "the flow id")\n    public string flowid;\n\n    @override\n    public boolean test(conditioncontext conditioncontext) {\n        return conditioncontext.getflow().getnamespace().equals(this.namespace) && conditioncontext.getflow().getid().equals(this.flowid);\n    }\n}\n\n\nyou just need to extend condition and implement the boolean test(conditioncontext conditioncontext) method.\n\nyou can have any properties you want like for any task (validatation, documentation, ...) is working the same way.\n\nthe test will receive a conditioncontext that will expose :\n\n * conditioncontext.getflow(): the current flow\n * conditioncontext.getexecution(): the current execution that can be null for triggers\n * conditioncontext.getruncontext(): a runcontext in order to render your properties.\n\nthis method must simply return a boolean in order to validate or not the conditions.',charsets:{}},{title:"Develop your FlowableTask",frontmatter:{order:3,meta:[{property:"article:modified_time",content:"2020-11-16T21:13:31.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Develop your FlowableTask"},{property:"og:description",content:"Develop your FlowableTask | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/plugin-developer-guide/flowable-task/"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Develop your FlowableTask"},{name:"twitter:description",content:"Develop your FlowableTask | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/plugin-developer-guide/flowable-task/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/plugin-developer-guide/flowable-task/",relativePath:"docs/plugin-developer-guide/flowable-task/README.md",key:"v-74d8f83a",path:"/docs/plugin-developer-guide/flowable-task/",lastUpdated:"11/16/2020, 9:13:31 PM",lastUpdatedTimestamp:1605561211e3,headersStr:null,content:"# Develop your FlowableTask\n\nFlowable are most complexe tasks to develop, and will be as possible available from the core team.\n\nWARNING\n\nJust keep in mind, a FlowableTask will be evaluated very frequently and must be cpu less operations, no IO can be done on this kind of tasks.\n\nIn a future, a full documentation will be available here. In a meantime, you can find all the actual Flowable tasks here to have some inspiration for Sequential or Parallel tasks development.",normalizedContent:"# develop your flowabletask\n\nflowable are most complexe tasks to develop, and will be as possible available from the core team.\n\nwarning\n\njust keep in mind, a flowabletask will be evaluated very frequently and must be cpu less operations, no io can be done on this kind of tasks.\n\nin a future, a full documentation will be available here. in a meantime, you can find all the actual flowable tasks here to have some inspiration for sequential or parallel tasks development.",charsets:{}},{title:"Gradle configuration",frontmatter:{order:1,meta:[{property:"article:modified_time",content:"2021-03-26T21:33:01.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Gradle configuration"},{property:"og:description",content:"Gradle configuration | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/plugin-developer-guide/gradle/"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Gradle configuration"},{name:"twitter:description",content:"Gradle configuration | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/plugin-developer-guide/gradle/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/plugin-developer-guide/gradle/",relativePath:"docs/plugin-developer-guide/gradle/README.md",key:"v-e228dff0",path:"/docs/plugin-developer-guide/gradle/",headers:[{level:2,title:"Mandatory configuration",slug:"mandatory-configuration",normalizedTitle:"mandatory configuration",charIndex:67},{level:2,title:"Others configurations",slug:"others-configurations",normalizedTitle:"others configurations",charIndex:620},{level:3,title:"Include some dependencies on plugins",slug:"include-some-dependencies-on-plugins",normalizedTitle:"include some dependencies on plugins",charIndex:646}],lastUpdated:"3/26/2021, 9:33:01 PM",lastUpdatedTimestamp:1616794381e3,headersStr:"Mandatory configuration Others configurations Include some dependencies on plugins",content:"# Gradle configuration\n\nWe use gradle as built tool in Kestra.\n\n\n# Mandatory configuration\n\nThe first thing you need to configure is the plugin name & the class package.\n\n 1. change in settings.gradle the rootProject.name = 'plugin-template' with your plugin name.\n 2. change the class package: by default, the template provide a package io.kestra.plugin.templates, just rename the folder in src/main/java & src/test/java\n 3. change the package name on build.gradle: replace group \"io.kestra.plugin.templates\" to the package name.\n\nNow you can start develop your task or look at other optional gradle configuration.\n\n\n# Others configurations\n\n\n# Include some dependencies on plugins\n\nYou can add as many dependencies with your plugins, that will be isolated in Kestra runtimes. By this way, we ensure the 2 different libs will not clash and have some runtime errors about missing methods.\n\nThe build.gradle handle most of Kestra use case by default using compileOnly group: \"io.kestra\", name: \"core\", version: kestraVersion for Kestra libs.\n\nBut if your plugin need some dependencies, you can add as many as you want that will be isolated, you just add to provide an api dependencies :\n\napi group: 'com.google.code.gson', name: 'gson', version: '2.8.6'\n",normalizedContent:"# gradle configuration\n\nwe use gradle as built tool in kestra.\n\n\n# mandatory configuration\n\nthe first thing you need to configure is the plugin name & the class package.\n\n 1. change in settings.gradle the rootproject.name = 'plugin-template' with your plugin name.\n 2. change the class package: by default, the template provide a package io.kestra.plugin.templates, just rename the folder in src/main/java & src/test/java\n 3. change the package name on build.gradle: replace group \"io.kestra.plugin.templates\" to the package name.\n\nnow you can start develop your task or look at other optional gradle configuration.\n\n\n# others configurations\n\n\n# include some dependencies on plugins\n\nyou can add as many dependencies with your plugins, that will be isolated in kestra runtimes. by this way, we ensure the 2 different libs will not clash and have some runtime errors about missing methods.\n\nthe build.gradle handle most of kestra use case by default using compileonly group: \"io.kestra\", name: \"core\", version: kestraversion for kestra libs.\n\nbut if your plugin need some dependencies, you can add as many as you want that will be isolated, you just add to provide an api dependencies :\n\napi group: 'com.google.code.gson', name: 'gson', version: '2.8.6'\n",charsets:{}},{title:"Outputs & Metrics from a script engine",frontmatter:{order:7,meta:[{property:"article:modified_time",content:"2022-09-13T11:40:25.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Outputs & Metrics from a script engine"},{property:"og:description",content:"Outputs & Metrics from a script engine | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/plugin-developer-guide/outputs/"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Outputs & Metrics from a script engine"},{name:"twitter:description",content:"Outputs & Metrics from a script engine | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/plugin-developer-guide/outputs/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/plugin-developer-guide/outputs/",relativePath:"docs/plugin-developer-guide/outputs/README.md",key:"v-51cba32a",path:"/docs/plugin-developer-guide/outputs/",headers:[{level:2,title:"Script command",slug:"script-command",normalizedTitle:"script command",charIndex:319},{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:1191}],lastUpdated:"9/13/2022, 11:40:25 AM",lastUpdatedTimestamp:1663069225e3,headersStr:"Script command Examples",content:'# Outputs & Metrics from a script engine\n\nKestra can catch outputs & metrics from any scripting language. In the core, Python & Node inject a package to help you!\n\nIf you are using another language like Bash or another one, we don\'t provide any package to help, but you can easily do it with simple echo on stdout.\n\n\n# Script command\n\nKestra look at every outputs on standard out (or standard err) for a special ::{}:: with {} a compacted json string (not multiple line).\n\nHere is the full representation of the object :\n\n{\n    "outputs": { // map of key value with all the outputs you want to send\n        "my-key": "my-value",\n        "my-list": [1, 2, 3] // you can use  json type (bool, array, map, …)\n    },\n    "metrics": [ // you can send multiple metrics at once\n       {\n            "name": "my-counter", // mandatory, the name of the metrics\n            "type": "counter", // mandatory, "counter" or "timer"\n            "value": 1.2, // mandatory (double), counter to add, or duration in seconds for timer\n            "tags":{ // optional list of tags that will expose internal details\n              "type":"read",\n              "location":"eu"\n            }\n       }\n    ]\n}\n\n\n\n# Examples\n\n# send some outputs with right type\necho \'::{"outputs":{"test":"value","int":2,"bool":true,"float":3.65}}::\'\n\n# send a counter with tags\necho \'::{"metrics":[{"name":"count","type":"counter","value":1,"tags":{"tag1":"i","tag2":"win"}}]}::\'\n\n# send a timer with tags\necho \'::{"metrics":[{"name":"timer2","type":"timer","value":2.12,"tags":{"tag1":"i","tag2":"destroy"}}]}::\'\n',normalizedContent:'# outputs & metrics from a script engine\n\nkestra can catch outputs & metrics from any scripting language. in the core, python & node inject a package to help you!\n\nif you are using another language like bash or another one, we don\'t provide any package to help, but you can easily do it with simple echo on stdout.\n\n\n# script command\n\nkestra look at every outputs on standard out (or standard err) for a special ::{}:: with {} a compacted json string (not multiple line).\n\nhere is the full representation of the object :\n\n{\n    "outputs": { // map of key value with all the outputs you want to send\n        "my-key": "my-value",\n        "my-list": [1, 2, 3] // you can use  json type (bool, array, map, …)\n    },\n    "metrics": [ // you can send multiple metrics at once\n       {\n            "name": "my-counter", // mandatory, the name of the metrics\n            "type": "counter", // mandatory, "counter" or "timer"\n            "value": 1.2, // mandatory (double), counter to add, or duration in seconds for timer\n            "tags":{ // optional list of tags that will expose internal details\n              "type":"read",\n              "location":"eu"\n            }\n       }\n    ]\n}\n\n\n\n# examples\n\n# send some outputs with right type\necho \'::{"outputs":{"test":"value","int":2,"bool":true,"float":3.65}}::\'\n\n# send a counter with tags\necho \'::{"metrics":[{"name":"count","type":"counter","value":1,"tags":{"tag1":"i","tag2":"win"}}]}::\'\n\n# send a timer with tags\necho \'::{"metrics":[{"name":"timer2","type":"timer","value":2.12,"tags":{"tag1":"i","tag2":"destroy"}}]}::\'\n',charsets:{}},{title:"Publish a plugin",frontmatter:{order:9,meta:[{property:"article:modified_time",content:"2021-03-26T21:33:01.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Publish a plugin"},{property:"og:description",content:"Publish a plugin | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/plugin-developer-guide/publish/"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Publish a plugin"},{name:"twitter:description",content:"Publish a plugin | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/plugin-developer-guide/publish/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/plugin-developer-guide/publish/",relativePath:"docs/plugin-developer-guide/publish/README.md",key:"v-c38cdba0",path:"/docs/plugin-developer-guide/publish/",headers:[{level:2,title:"With GitHub Actions",slug:"with-github-actions",normalizedTitle:"with github actions",charIndex:23},{level:2,title:"Publish on Maven Central",slug:"publish-on-maven-central",normalizedTitle:"publish on maven central",charIndex:203}],lastUpdated:"3/26/2021, 9:33:01 PM",lastUpdatedTimestamp:1616794381e3,headersStr:"With GitHub Actions Publish on Maven Central",content:'# Publish a plugin\n\n\n# With GitHub Actions\n\nThe template include a GitHub Actions workflow in order to test.\nFeel free to add any step to start containers for integration, deploy to artifactory, ...\n\n\n# Publish on Maven Central\n\nThe template also include a gradle task that will publish to Maven Central. We will need to register to be able to publish to maven central.\n\nYou only need configure the gradle.properties to have all required properties :\n\nsonatypeUsername=\nsonatypePassword=\nsigning.keyId=\nsigning.password=\nsigning.secretKeyRingFile=\n\n\n\nThere is a preconfigured GitHub Actions in .github/workflows/main.yml files that you customized to your need:\n\n      # Publish\n      - name: Publish package to Sonatype\n        if: github.ref == \'refs/heads/master\'\n        env:\n          ORG_GRADLE_PROJECT_sonatypeUsername: ${{ secrets.SONATYPE_USER }}\n          ORG_GRADLE_PROJECT_sonatypePassword: ${{ secrets.SONATYPE_PASSWORD }}\n          SONATYPE_GPG_KEYID: ${{ secrets.SONATYPE_GPG_KEYID }}\n          SONATYPE_GPG_PASSWORD: ${{ secrets.SONATYPE_GPG_PASSWORD }}\n          SONATYPE_GPG_FILE: ${{ secrets.SONATYPE_GPG_FILE }}\n        run: |\n          echo "signing.keyId=${SONATYPE_GPG_KEYID}" > ~/.gradle/gradle.properties\n          echo "signing.password=${SONATYPE_GPG_PASSWORD}" >> ~/.gradle/gradle.properties\n          echo "signing.secretKeyRingFile=${HOME}/.gradle/secring.gpg" >> ~/.gradle/gradle.properties\n          echo ${SONATYPE_GPG_FILE} | base64 -d > ~/.gradle/secring.gpg\n          ./gradlew publishToSonatype\n\n      # Release\n      - name: Release package to Maven Central\n        if: startsWith(github.ref, \'refs/tags/v\')\n        env:\n          ORG_GRADLE_PROJECT_sonatypeUsername: ${{ secrets.SONATYPE_USER }}\n          ORG_GRADLE_PROJECT_sonatypePassword: ${{ secrets.SONATYPE_PASSWORD }}\n          SONATYPE_GPG_KEYID: ${{ secrets.SONATYPE_GPG_KEYID }}\n          SONATYPE_GPG_PASSWORD: ${{ secrets.SONATYPE_GPG_PASSWORD }}\n          SONATYPE_GPG_FILE: ${{ secrets.SONATYPE_GPG_FILE }}\n        run: |\n          echo "signing.keyId=${SONATYPE_GPG_KEYID}" > ~/.gradle/gradle.properties\n          echo "signing.password=${SONATYPE_GPG_PASSWORD}" >> ~/.gradle/gradle.properties\n          echo "signing.secretKeyRingFile=${HOME}/.gradle/secring.gpg" >> ~/.gradle/gradle.properties\n          echo ${SONATYPE_GPG_FILE} | base64 -d > ~/.gradle/secring.gpg\n          ./gradlew publishToSonatype closeAndReleaseSonatypeStagingRepository\n',normalizedContent:'# publish a plugin\n\n\n# with github actions\n\nthe template include a github actions workflow in order to test.\nfeel free to add any step to start containers for integration, deploy to artifactory, ...\n\n\n# publish on maven central\n\nthe template also include a gradle task that will publish to maven central. we will need to register to be able to publish to maven central.\n\nyou only need configure the gradle.properties to have all required properties :\n\nsonatypeusername=\nsonatypepassword=\nsigning.keyid=\nsigning.password=\nsigning.secretkeyringfile=\n\n\n\nthere is a preconfigured github actions in .github/workflows/main.yml files that you customized to your need:\n\n      # publish\n      - name: publish package to sonatype\n        if: github.ref == \'refs/heads/master\'\n        env:\n          org_gradle_project_sonatypeusername: ${{ secrets.sonatype_user }}\n          org_gradle_project_sonatypepassword: ${{ secrets.sonatype_password }}\n          sonatype_gpg_keyid: ${{ secrets.sonatype_gpg_keyid }}\n          sonatype_gpg_password: ${{ secrets.sonatype_gpg_password }}\n          sonatype_gpg_file: ${{ secrets.sonatype_gpg_file }}\n        run: |\n          echo "signing.keyid=${sonatype_gpg_keyid}" > ~/.gradle/gradle.properties\n          echo "signing.password=${sonatype_gpg_password}" >> ~/.gradle/gradle.properties\n          echo "signing.secretkeyringfile=${home}/.gradle/secring.gpg" >> ~/.gradle/gradle.properties\n          echo ${sonatype_gpg_file} | base64 -d > ~/.gradle/secring.gpg\n          ./gradlew publishtosonatype\n\n      # release\n      - name: release package to maven central\n        if: startswith(github.ref, \'refs/tags/v\')\n        env:\n          org_gradle_project_sonatypeusername: ${{ secrets.sonatype_user }}\n          org_gradle_project_sonatypepassword: ${{ secrets.sonatype_password }}\n          sonatype_gpg_keyid: ${{ secrets.sonatype_gpg_keyid }}\n          sonatype_gpg_password: ${{ secrets.sonatype_gpg_password }}\n          sonatype_gpg_file: ${{ secrets.sonatype_gpg_file }}\n        run: |\n          echo "signing.keyid=${sonatype_gpg_keyid}" > ~/.gradle/gradle.properties\n          echo "signing.password=${sonatype_gpg_password}" >> ~/.gradle/gradle.properties\n          echo "signing.secretkeyringfile=${home}/.gradle/secring.gpg" >> ~/.gradle/gradle.properties\n          echo ${sonatype_gpg_file} | base64 -d > ~/.gradle/secring.gpg\n          ./gradlew publishtosonatype closeandreleasesonatypestagingrepository\n',charsets:{cjk:!0}},{title:"Develop your RunnableTask",frontmatter:{order:2,meta:[{property:"article:modified_time",content:"2021-10-06T18:30:46.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Develop your RunnableTask"},{property:"og:description",content:"Develop your RunnableTask | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/plugin-developer-guide/runnable-task/"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Develop your RunnableTask"},{name:"twitter:description",content:"Develop your RunnableTask | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/plugin-developer-guide/runnable-task/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/plugin-developer-guide/runnable-task/",relativePath:"docs/plugin-developer-guide/runnable-task/README.md",key:"v-5cb2b138",path:"/docs/plugin-developer-guide/runnable-task/",headers:[{level:2,title:"Class annotations",slug:"class-annotations",normalizedTitle:"class annotations",charIndex:1122},{level:2,title:"Class declaration",slug:"class-declaration",normalizedTitle:"class declaration",charIndex:1375},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:1831},{level:3,title:"Properties validation",slug:"properties-validation",normalizedTitle:"properties validation",charIndex:2363},{level:2,title:"Run",slug:"run",normalizedTitle:"run",charIndex:15},{level:3,title:"Log",slug:"log",normalizedTitle:"log",charIndex:636},{level:3,title:"Render variables",slug:"render-variables",normalizedTitle:"render variables",charIndex:4578},{level:3,title:"Kestra storage",slug:"kestra-storage",normalizedTitle:"kestra storage",charIndex:5093},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:5694},{level:2,title:"Exception",slug:"exception",normalizedTitle:"exception",charIndex:616},{level:2,title:"Metrics",slug:"metrics",normalizedTitle:"metrics",charIndex:7114},{level:3,title:"Name",slug:"name",normalizedTitle:"name",charIndex:1620},{level:3,title:"Tags",slug:"tags",normalizedTitle:"tags",charIndex:7852},{level:2,title:"Documentation",slug:"documentation",normalizedTitle:"documentation",charIndex:7998},{level:3,title:"With @Schema",slug:"with-schema",normalizedTitle:"with @schema",charIndex:8282},{level:3,title:"With @Plugin annotation on class",slug:"with-plugin-annotation-on-class",normalizedTitle:"with @plugin annotation on class",charIndex:8569},{level:3,title:"With @PluginProperty on class",slug:"with-pluginproperty-on-class",normalizedTitle:"with @pluginproperty on class",charIndex:9120}],lastUpdated:"10/6/2021, 6:30:46 PM",lastUpdatedTimestamp:1633545046e3,headersStr:"Class annotations Class declaration Properties Properties validation Run Log Render variables Kestra storage Outputs Exception Metrics Name Tags Documentation With @Schema With @Plugin annotation on class With @PluginProperty on class",content:'# Develop your RunnableTask\n\nHere is the instruction to develop the most common Runnable Task.\n\nHere is a simple task example that reverse a string:\n\n@SuperBuilder\n@ToString\n@EqualsAndHashCode\n@Getter\n@NoArgsConstructor\n@Schema(\n    title = "Reverse a string",\n    description = "Reverse all letters from a string"\n)\npublic class ReverseString extends Task implements RunnableTask<ReverseString.Output> {\n    @Schema(\n        title = "The base string you want to reverse"\n    )\n    @PluginProperty(dynamic = true)\n    private String format;\n\n    @Override\n    public Example.Output run(RunContext runContext) throws Exception {\n        Logger logger = runContext.logger();\n\n        String render = runContext.render(format);\n        logger.debug(render);\n\n        return Output.builder()\n            .reverse(StringUtils.reverse(render))\n            .build();\n    }\n\n    @Builder\n    @Getter\n    public static class Output implements io.kestra.core.models.tasks.Output {\n        @Schema(\n            title = "The reverse string "\n        )\n        private final String reverse;\n    }\n}\n\n\nLet look at these one deeply:\n\n\n# Class annotations\n\n@SuperBuilder\n@ToString\n@EqualsAndHashCode\n@Getter\n@NoArgsConstructor\n\n\nThese are required in order to make your plugin works with Kestra, these are Lombok annotation that allow kestra and internal serialization to work properly.\n\n\n# Class declaration\n\npublic class ReverseString extends Task implements RunnableTask<Example.Output>\n\n\n * ReverseString is the name of your task and can be use on Kestra with type: io.kestra.plugin.templates.ReverseString (aka: {{package}}.{{className}})\n * Class must extends Task to be usable\n * implements RunnableTask<ReverseString.Output>: must implements RunnableTask to be discovered and must declared the output of the tasks ReverseString.Output\n\n\n# Properties\n\n    @PluginProperty(dynamic = true)\n    private String format;\n\n\nDeclare all the properties that you can pass to current task on flow. For example, this will be a valid yaml for this task:\n\ntype: io.kestra.plugin.templates.ReverseString\nformat: "{{outputs.previousTask.name}}"\n\n\nYou can declare as many properties you want, all of these will be filled by Kestra executors.\nYou can use any serializable by Jackson for your properties (ex: Double, boolean, ...). You can create any class since the class Serializable.\n\n\n# Properties validation\n\nProperties can be validated using javax.validation.constraints.* annotations. When the user creates a flow, your task properties will be validated before insertion and prevent wrong definition to be inserted.\n\nThe default available annotations are:\n\n * @Positive\n * @AssertFalse\n * @AssertTrue\n * @Max\n * @Min\n * @Negative\n * @NegativeOrZero\n * @Positive\n * @PositiveOrZero\n * @NotBlank\n * @NotNull\n * @Null\n * @NotEmpty\n * @Past\n * @PastOrPresent\n * @Future\n * @FutureOrPresent\n\nYou can also create your custom validation, you must defined the annotation\n\n@Retention(RetentionPolicy.RUNTIME)\n@Constraint(validatedBy = { })\npublic @interface CronExpression {\n    String message() default "invalid cron expression ({validatedValue})";\n}\n\n\nand a factory to inject the validation method :\n\n@Factory\npublic class ValidationFactory {\nprivate static final CronParser CRON_PARSER = new CronParser(CronDefinitionBuilder.instanceDefinitionFor(CronType.UNIX));\n\n    @Singleton\n    ConstraintValidator<CronExpression, CharSequence> cronExpressionValidator() {\n        return (value, annotationMetadata, context) -> {\n            if (value == null) {\n                return true;\n            }\n\n            try {\n                Cron parse = CRON_PARSER.parse(value.toString());\n                parse.validate();\n            } catch (IllegalArgumentException e) {\n                return false;\n            }\n\n            return true;\n        };\n    }\n}\n\n\n\n\n\n# Run\n\n    @Override\n    public Example.Output run(RunContext runContext) throws Exception {\n        Logger logger = runContext.logger();\n\n        String render = runContext.render(format);\n        logger.debug(render);\n\n        return Output.builder()\n            .reverse(StringUtils.reverse(render))\n            .build();\n    }\n\n\nIs where the main logic of your task will do all the work needed. You can used any Java code here with any libs you need until you have declared it Gradle configuration.\n\n\n# Log\n\nLogger logger = runContext.logger();\n\n\nTo have a logger, you need to use this instruction, this will provide a logger for the current execution and will be log properly, don\'t have your own logger in order to track log on the UI.\n\n\n# Render variables\n\nString render = runContext.render(format);\n\n\nIn order to use variables, you need to render the variables, aka: transform the properties with handlebars.\nJust don\'t forgot to render this variables if you need to pass some output from previous variables.\n\nYou also need to this annotations @PluginProperty(dynamic = true) in order to explain in the documentation that you can pass some variables.\nProvide a @PluginProperty(dynamic = false) to explain clearly that you don\'t transform the value.\n\n\n# Kestra storage\n\nYou can read any file from Kestra storage using method runContext.uriToInputStream()\n\nfinal URI from = new URI(runContext.render(this.from));\nfinal InputStream inputStream = runContext.uriToInputStream(from);\n\n\nYou will get an InputStream in order to read the file from Kestra storage (coming from inputs or task outputs)\n\nYou can also write files to Kestra storage using runContext.putTempFile(File file). The local file will be deleted, so you must use a temporary file.\n\nFile tempFile = File.createTempFile("concat_", "");\nrunContext.putTempFile(tempFile)\n\n\nDon\'t forgot to provide Outputs with the link generated by putTempFile in order to be usable by others tasks.\n\n\n# Outputs\n\npublic class ReverseString extends Task implements RunnableTask<ReverseString.Output> {\n    @Override\n    public Example.Output run(RunContext runContext) throws Exception {\n        return Output.builder()\n            .reverse(StringUtils.reverse(render))\n            .build();\n    }\n\n    @Builder\n    @Getter\n    public static class Output implements io.kestra.core.models.tasks.Output {\n        @Schema(\n            title = "The reverse string "\n        )\n        private final String reverse;\n    }\n}\n\n\n\nEach task must return a class instance with outputs values that can be used for next tasks.\nYou must return a class that implements io.kestra.core.models.tasks.Output.\nYou can add as many properties as you want, but keep in mind that all theses must be serializable.\nAll output will be available for next task through variables.\n\nIf your task don\'t provide any outputs (mostly never), you can create a task like that:\n\npublic class NoOutput extends Task implements FlowableTask<VoidOutput> {\n    @Override\n    public VoidOutput run(RunContext runContext) throws Exception {\n        return null;\n    }\n}\n\n\n\n# Exception\n\nIn the run methods, you can throw any Exception that will be catch by Kestra and will failed the execution.\nWe advise you to throw any Exception that can break your task as soon as possible.\n\n\n# Metrics\n\nYou can send metrics to add some observability on your task. Metrics will be recorded with yout execution and will be show on the UI.\n\nThere is 2 kind of metrics :\n\n * Counter: Counter.of("your.counter", count, tags); with args\n   * String name: The name of the metrics\n   * Double|Long|Integer|Float count: the counter associated\n   * String... tags: a list of tags associated with your metrics\n * Timer: Timer.of("your.duration", duration, tags);\n   * String name: The name of the metrics\n   * Duration duration: the duration recorded\n   * String... tags: a list of tags associated with your metrics\n\nTo save metrics with execution, you need to use runContext.metric(metrics)\n\n\n# Name\n\nMust be lowercase separated by dots.\n\n\n# Tags\n\nMust be a key and value of tags. Example of a valid tags are :\n\nCounter.of("your.counter", count, "zone", "EU", "location", "france");\n\n\n\n# Documentation\n\nDocumentation (on the ui and on this website) is based on annotations.\nWe tried to guess as many documentation from javax annotation, default value from properties, ...\nBut some need to be declared manually in order to provide a full documentation for final users.\n\n\n# With @Schema\n\nMost are based on swagger annotation of package io.swagger.v3.oas.annotations.media.\n\nYou can add a @Schema on :\n\n * class\n * properties\n * output\n\nMost of @Schema properties can be used, most important are :\n\n * title\n * description\n * but feel free to used other one\n\n\n# With @Plugin annotation on class\n\nWe have introduced @Plugin annotation for the documentation that is out of scope of json schema.\n\nFor now only examples are available :\n\n@Plugin(\n    examples = @Example(\n        full = true,\n        title = "A schedule trigger",\n        code = {\n            "triggers:",\n            "  - id: schedule",\n            "    type: io.kestra.core.models.triggers.types.Schedule",\n            "    cron: \\"*/15 * * * *\\"",\n            "    backfill:",\n            "      start: 2020-06-25T14:00:00Z"\n        }\n    )\n)\n\n\n\n# With @PluginProperty on class\n\nLike @Plugin, @PluginProperty for the documentation that is out of scope of json schema.\n\n@PluginProperty(dynamic = true, additionalProperties = Task.class)\n\n\nFor now,\n\n * dynamic: to documentation Render variables\n * additionalProperties: to document for a Map<String, T> the T type.',normalizedContent:'# develop your runnabletask\n\nhere is the instruction to develop the most common runnable task.\n\nhere is a simple task example that reverse a string:\n\n@superbuilder\n@tostring\n@equalsandhashcode\n@getter\n@noargsconstructor\n@schema(\n    title = "reverse a string",\n    description = "reverse all letters from a string"\n)\npublic class reversestring extends task implements runnabletask<reversestring.output> {\n    @schema(\n        title = "the base string you want to reverse"\n    )\n    @pluginproperty(dynamic = true)\n    private string format;\n\n    @override\n    public example.output run(runcontext runcontext) throws exception {\n        logger logger = runcontext.logger();\n\n        string render = runcontext.render(format);\n        logger.debug(render);\n\n        return output.builder()\n            .reverse(stringutils.reverse(render))\n            .build();\n    }\n\n    @builder\n    @getter\n    public static class output implements io.kestra.core.models.tasks.output {\n        @schema(\n            title = "the reverse string "\n        )\n        private final string reverse;\n    }\n}\n\n\nlet look at these one deeply:\n\n\n# class annotations\n\n@superbuilder\n@tostring\n@equalsandhashcode\n@getter\n@noargsconstructor\n\n\nthese are required in order to make your plugin works with kestra, these are lombok annotation that allow kestra and internal serialization to work properly.\n\n\n# class declaration\n\npublic class reversestring extends task implements runnabletask<example.output>\n\n\n * reversestring is the name of your task and can be use on kestra with type: io.kestra.plugin.templates.reversestring (aka: {{package}}.{{classname}})\n * class must extends task to be usable\n * implements runnabletask<reversestring.output>: must implements runnabletask to be discovered and must declared the output of the tasks reversestring.output\n\n\n# properties\n\n    @pluginproperty(dynamic = true)\n    private string format;\n\n\ndeclare all the properties that you can pass to current task on flow. for example, this will be a valid yaml for this task:\n\ntype: io.kestra.plugin.templates.reversestring\nformat: "{{outputs.previoustask.name}}"\n\n\nyou can declare as many properties you want, all of these will be filled by kestra executors.\nyou can use any serializable by jackson for your properties (ex: double, boolean, ...). you can create any class since the class serializable.\n\n\n# properties validation\n\nproperties can be validated using javax.validation.constraints.* annotations. when the user creates a flow, your task properties will be validated before insertion and prevent wrong definition to be inserted.\n\nthe default available annotations are:\n\n * @positive\n * @assertfalse\n * @asserttrue\n * @max\n * @min\n * @negative\n * @negativeorzero\n * @positive\n * @positiveorzero\n * @notblank\n * @notnull\n * @null\n * @notempty\n * @past\n * @pastorpresent\n * @future\n * @futureorpresent\n\nyou can also create your custom validation, you must defined the annotation\n\n@retention(retentionpolicy.runtime)\n@constraint(validatedby = { })\npublic @interface cronexpression {\n    string message() default "invalid cron expression ({validatedvalue})";\n}\n\n\nand a factory to inject the validation method :\n\n@factory\npublic class validationfactory {\nprivate static final cronparser cron_parser = new cronparser(crondefinitionbuilder.instancedefinitionfor(crontype.unix));\n\n    @singleton\n    constraintvalidator<cronexpression, charsequence> cronexpressionvalidator() {\n        return (value, annotationmetadata, context) -> {\n            if (value == null) {\n                return true;\n            }\n\n            try {\n                cron parse = cron_parser.parse(value.tostring());\n                parse.validate();\n            } catch (illegalargumentexception e) {\n                return false;\n            }\n\n            return true;\n        };\n    }\n}\n\n\n\n\n\n# run\n\n    @override\n    public example.output run(runcontext runcontext) throws exception {\n        logger logger = runcontext.logger();\n\n        string render = runcontext.render(format);\n        logger.debug(render);\n\n        return output.builder()\n            .reverse(stringutils.reverse(render))\n            .build();\n    }\n\n\nis where the main logic of your task will do all the work needed. you can used any java code here with any libs you need until you have declared it gradle configuration.\n\n\n# log\n\nlogger logger = runcontext.logger();\n\n\nto have a logger, you need to use this instruction, this will provide a logger for the current execution and will be log properly, don\'t have your own logger in order to track log on the ui.\n\n\n# render variables\n\nstring render = runcontext.render(format);\n\n\nin order to use variables, you need to render the variables, aka: transform the properties with handlebars.\njust don\'t forgot to render this variables if you need to pass some output from previous variables.\n\nyou also need to this annotations @pluginproperty(dynamic = true) in order to explain in the documentation that you can pass some variables.\nprovide a @pluginproperty(dynamic = false) to explain clearly that you don\'t transform the value.\n\n\n# kestra storage\n\nyou can read any file from kestra storage using method runcontext.uritoinputstream()\n\nfinal uri from = new uri(runcontext.render(this.from));\nfinal inputstream inputstream = runcontext.uritoinputstream(from);\n\n\nyou will get an inputstream in order to read the file from kestra storage (coming from inputs or task outputs)\n\nyou can also write files to kestra storage using runcontext.puttempfile(file file). the local file will be deleted, so you must use a temporary file.\n\nfile tempfile = file.createtempfile("concat_", "");\nruncontext.puttempfile(tempfile)\n\n\ndon\'t forgot to provide outputs with the link generated by puttempfile in order to be usable by others tasks.\n\n\n# outputs\n\npublic class reversestring extends task implements runnabletask<reversestring.output> {\n    @override\n    public example.output run(runcontext runcontext) throws exception {\n        return output.builder()\n            .reverse(stringutils.reverse(render))\n            .build();\n    }\n\n    @builder\n    @getter\n    public static class output implements io.kestra.core.models.tasks.output {\n        @schema(\n            title = "the reverse string "\n        )\n        private final string reverse;\n    }\n}\n\n\n\neach task must return a class instance with outputs values that can be used for next tasks.\nyou must return a class that implements io.kestra.core.models.tasks.output.\nyou can add as many properties as you want, but keep in mind that all theses must be serializable.\nall output will be available for next task through variables.\n\nif your task don\'t provide any outputs (mostly never), you can create a task like that:\n\npublic class nooutput extends task implements flowabletask<voidoutput> {\n    @override\n    public voidoutput run(runcontext runcontext) throws exception {\n        return null;\n    }\n}\n\n\n\n# exception\n\nin the run methods, you can throw any exception that will be catch by kestra and will failed the execution.\nwe advise you to throw any exception that can break your task as soon as possible.\n\n\n# metrics\n\nyou can send metrics to add some observability on your task. metrics will be recorded with yout execution and will be show on the ui.\n\nthere is 2 kind of metrics :\n\n * counter: counter.of("your.counter", count, tags); with args\n   * string name: the name of the metrics\n   * double|long|integer|float count: the counter associated\n   * string... tags: a list of tags associated with your metrics\n * timer: timer.of("your.duration", duration, tags);\n   * string name: the name of the metrics\n   * duration duration: the duration recorded\n   * string... tags: a list of tags associated with your metrics\n\nto save metrics with execution, you need to use runcontext.metric(metrics)\n\n\n# name\n\nmust be lowercase separated by dots.\n\n\n# tags\n\nmust be a key and value of tags. example of a valid tags are :\n\ncounter.of("your.counter", count, "zone", "eu", "location", "france");\n\n\n\n# documentation\n\ndocumentation (on the ui and on this website) is based on annotations.\nwe tried to guess as many documentation from javax annotation, default value from properties, ...\nbut some need to be declared manually in order to provide a full documentation for final users.\n\n\n# with @schema\n\nmost are based on swagger annotation of package io.swagger.v3.oas.annotations.media.\n\nyou can add a @schema on :\n\n * class\n * properties\n * output\n\nmost of @schema properties can be used, most important are :\n\n * title\n * description\n * but feel free to used other one\n\n\n# with @plugin annotation on class\n\nwe have introduced @plugin annotation for the documentation that is out of scope of json schema.\n\nfor now only examples are available :\n\n@plugin(\n    examples = @example(\n        full = true,\n        title = "a schedule trigger",\n        code = {\n            "triggers:",\n            "  - id: schedule",\n            "    type: io.kestra.core.models.triggers.types.schedule",\n            "    cron: \\"*/15 * * * *\\"",\n            "    backfill:",\n            "      start: 2020-06-25t14:00:00z"\n        }\n    )\n)\n\n\n\n# with @pluginproperty on class\n\nlike @plugin, @pluginproperty for the documentation that is out of scope of json schema.\n\n@pluginproperty(dynamic = true, additionalproperties = task.class)\n\n\nfor now,\n\n * dynamic: to documentation render variables\n * additionalproperties: to document for a map<string, t> the t type.',charsets:{cjk:!0}},{title:"Develop your Trigger",frontmatter:{order:4,meta:[{property:"article:modified_time",content:"2021-03-26T21:33:01.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Develop your Trigger"},{property:"og:description",content:"Develop your Trigger | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/plugin-developer-guide/triggers/"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Develop your Trigger"},{name:"twitter:description",content:"Develop your Trigger | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/plugin-developer-guide/triggers/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/plugin-developer-guide/triggers/",relativePath:"docs/plugin-developer-guide/triggers/README.md",key:"v-2e06cf88",path:"/docs/plugin-developer-guide/triggers/",lastUpdated:"3/26/2021, 9:33:01 PM",lastUpdatedTimestamp:1616794381e3,headersStr:null,content:"# Develop your Trigger\n\nHere is the instruction to develop a Trigger.\n\nHere is a simple Trigger example that will trigger an execution randomly:\n\n@SuperBuilder\n@ToString\n@EqualsAndHashCode\n@Getter\n@NoArgsConstructor\npublic class Trigger extends AbstractTrigger implements PollingTriggerInterface, TriggerOutput<Trigger.Random> {\n    @Builder.Default\n    private final Duration interval = Duration.ofSeconds(60);\n\n    protected Double min = 0.5;\n\n    @Override\n    public Optional<Execution> evaluate(RunContext runContext, TriggerContext context) throws Exception {\n        Logger logger = runContext.logger();\n        double random = Math.random();\n\n        if (random < this.min) {\n            return Optional.empty();\n        }\n\n        Execution execution = Execution.builder()\n            .id(IdUtils.create())\n            .namespace(context.getNamespace())\n            .flowId(context.getFlowId())\n            .flowRevision(context.getFlowRevision())\n            .state(new State())\n            .trigger(ExecutionTrigger.of(\n                this,\n                Trigger.Random.builder().random(random).build()\n            ))\n            .build();\n\n        return Optional.of(execution);\n    }\n\n    @Builder\n    @Getter\n    public class Random implements io.kestra.core.models.tasks.Output {\n        private Double random;\n    }\n}\n\n\nYou just need to extend PollingTriggerInterface and implement the Optional<Execution> evaluate(RunContext runContext, TriggerContext context) method.\n\nYou can have any properties you want like for any task (validation, documentation, ...) is working the same way.\n\nThe test will receive these arguments :\n\n * RunContext runContext: a RunContext in order to render your properties.\n * TriggerContext context: to have the context of this call (flow, execution, trigger, date, ...)\n\nIn this method, you add any logic you want, connect to a database, connect to remote file systems.\nYou don't have to take care of resource, Kestra will run this method in this own thread.\n\nThis method must simply return an Optional<Execution> with :\n\n * Optional.empty(): if the condition is not validated\n * Optional.of(execution): with the execution created if the condition is validated.\n\nYou have to provide a TriggerOutput<T> for any output needed (result of query, result of file system listing, ...) that will be available for the flow tasks withing the {{ trigger.* }} variables.\n\nWARNING\n\nTake care that the trigger must free the resource for the next evaluation, for each interval, this method will be called, and if the condition are meet, an execution will be created.\n\nTo avoid this, move the file, remove the record from the database, but take an action to avoid an infinite triggering.",normalizedContent:"# develop your trigger\n\nhere is the instruction to develop a trigger.\n\nhere is a simple trigger example that will trigger an execution randomly:\n\n@superbuilder\n@tostring\n@equalsandhashcode\n@getter\n@noargsconstructor\npublic class trigger extends abstracttrigger implements pollingtriggerinterface, triggeroutput<trigger.random> {\n    @builder.default\n    private final duration interval = duration.ofseconds(60);\n\n    protected double min = 0.5;\n\n    @override\n    public optional<execution> evaluate(runcontext runcontext, triggercontext context) throws exception {\n        logger logger = runcontext.logger();\n        double random = math.random();\n\n        if (random < this.min) {\n            return optional.empty();\n        }\n\n        execution execution = execution.builder()\n            .id(idutils.create())\n            .namespace(context.getnamespace())\n            .flowid(context.getflowid())\n            .flowrevision(context.getflowrevision())\n            .state(new state())\n            .trigger(executiontrigger.of(\n                this,\n                trigger.random.builder().random(random).build()\n            ))\n            .build();\n\n        return optional.of(execution);\n    }\n\n    @builder\n    @getter\n    public class random implements io.kestra.core.models.tasks.output {\n        private double random;\n    }\n}\n\n\nyou just need to extend pollingtriggerinterface and implement the optional<execution> evaluate(runcontext runcontext, triggercontext context) method.\n\nyou can have any properties you want like for any task (validation, documentation, ...) is working the same way.\n\nthe test will receive these arguments :\n\n * runcontext runcontext: a runcontext in order to render your properties.\n * triggercontext context: to have the context of this call (flow, execution, trigger, date, ...)\n\nin this method, you add any logic you want, connect to a database, connect to remote file systems.\nyou don't have to take care of resource, kestra will run this method in this own thread.\n\nthis method must simply return an optional<execution> with :\n\n * optional.empty(): if the condition is not validated\n * optional.of(execution): with the execution created if the condition is validated.\n\nyou have to provide a triggeroutput<t> for any output needed (result of query, result of file system listing, ...) that will be available for the flow tasks withing the {{ trigger.* }} variables.\n\nwarning\n\ntake care that the trigger must free the resource for the next evaluation, for each interval, this method will be called, and if the condition are meet, an execution will be created.\n\nto avoid this, move the file, remove the record from the database, but take an action to avoid an infinite triggering.",charsets:{}},{title:"Add unit tests",frontmatter:{order:6,meta:[{property:"article:modified_time",content:"2021-03-26T21:33:01.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Add unit tests"},{property:"og:description",content:"Add unit tests | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/plugin-developer-guide/unit-test/"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Add unit tests"},{name:"twitter:description",content:"Add unit tests | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/plugin-developer-guide/unit-test/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/plugin-developer-guide/unit-test/",relativePath:"docs/plugin-developer-guide/unit-test/README.md",key:"v-528bedd8",path:"/docs/plugin-developer-guide/unit-test/",headers:[{level:2,title:"Unit test a RunnableTask",slug:"unit-test-a-runnabletask",normalizedTitle:"unit test a runnabletask",charIndex:186},{level:2,title:"Unit test with a full flow",slug:"unit-test-with-a-full-flow",normalizedTitle:"unit test with a full flow",charIndex:1014}],lastUpdated:"3/26/2021, 9:33:01 PM",lastUpdatedTimestamp:1616794381e3,headersStr:"Unit test a RunnableTask Unit test with a full flow",content:'# Add unit tests\n\nKestra is build from the inception with unit test in mind. A task must be unit testable to avoid regression and bug. So we provide 2 ways to unit test your tasks :\n\n\n# Unit test a RunnableTask\n\nThis is the most common way to test a RunnableTask. You simply create your RunnableTask, and test output or Exception. This will cover most of the case.\nHere is an example :\n\n\n@MicronautTest\nclass ExampleTest {\n    @Inject\n    private RunContextFactory runContextFactory;\n\n    @Test\n    void run() throws Exception {\n        RunContext runContext = runContextFactory.of(ImmutableMap.of("variable", "John Doe"));\n\n        Example task = Example.builder()\n            .format("Hello {{ variable }}")\n            .build();\n\n        Example.Output runOutput = task.run(runContext);\n\n        assertThat(runOutput.getChild().getValue(), is(StringUtils.reverse("Hello John Doe")));\n    }\n}\n\n\nAs simple as any java unit test, fell free to used any dependencies, test method, started docker containers, ...\n\n\n# Unit test with a full flow\n\nMaybe you want to add some unit test with a full flow, in some rare case, it can be necessary (mostly for FlowableTask).\n\nHere is an example:\n\n@MicronautTest\nclass ExampleRunnerTest {\n    @Inject\n    protected MemoryRunner runner;\n\n    @Inject\n    protected RunnerUtils runnerUtils;\n\n    @Inject\n    protected LocalFlowRepositoryLoader repositoryLoader;\n\n    @BeforeEach\n    private void init() throws IOException, URISyntaxException {\n        repositoryLoader.load(Objects.requireNonNull(ExampleRunnerTest.class.getClassLoader().getResource("flows")));\n        this.runner.run();\n    }\n\n    @SuppressWarnings("unchecked")\n    @Test\n    void flow() throws TimeoutException {\n        Execution execution = runnerUtils.runOne("io.kestra.templates", "example");\n\n        assertThat(execution.getTaskRunList(), hasSize(3));\n        assertThat(((Map<String, Object>)execution.getTaskRunList().get(2).getOutputs().get("child")).get("value"), is("task-id"));\n    }\n}\n\n\nwith this, you will :\n\n * Inject all dependencies with @MicronautTest\n * on init(), load all the flow on the src/resources/flow directory.\n * run an full execution with Execution execution = runnerUtils.runOne("io.kestra.templates", "example");\n\nWith this execution, you can look at all the properties you want to control (status, taskRunList number, outputs, ...)\n\nTo make it work, you need to have an application.yml files with this minimum configuration :\n\nkestra:\n  repository:\n    type: memory\n  queue:\n    type: memory\n  storage:\n    type: local\n    local:\n      base-path: /tmp/unittest\n\n\nAnd these dependencies on your build.gradle :\n\n    testImplementation group: "io.kestra", name: "core", version: kestraVersion\n    testImplementation group: "io.kestra", name: "repository-memory", version: kestraVersion\n    testImplementation group: "io.kestra", name: "runner-memory", version: kestraVersion\n    testImplementation group: "io.kestra", name: "storage-local", version: kestraVersion\n\n\nthis will enabled the in memory runner to work and to run your flow without any others dependencies (kafka, ...)',normalizedContent:'# add unit tests\n\nkestra is build from the inception with unit test in mind. a task must be unit testable to avoid regression and bug. so we provide 2 ways to unit test your tasks :\n\n\n# unit test a runnabletask\n\nthis is the most common way to test a runnabletask. you simply create your runnabletask, and test output or exception. this will cover most of the case.\nhere is an example :\n\n\n@micronauttest\nclass exampletest {\n    @inject\n    private runcontextfactory runcontextfactory;\n\n    @test\n    void run() throws exception {\n        runcontext runcontext = runcontextfactory.of(immutablemap.of("variable", "john doe"));\n\n        example task = example.builder()\n            .format("hello {{ variable }}")\n            .build();\n\n        example.output runoutput = task.run(runcontext);\n\n        assertthat(runoutput.getchild().getvalue(), is(stringutils.reverse("hello john doe")));\n    }\n}\n\n\nas simple as any java unit test, fell free to used any dependencies, test method, started docker containers, ...\n\n\n# unit test with a full flow\n\nmaybe you want to add some unit test with a full flow, in some rare case, it can be necessary (mostly for flowabletask).\n\nhere is an example:\n\n@micronauttest\nclass examplerunnertest {\n    @inject\n    protected memoryrunner runner;\n\n    @inject\n    protected runnerutils runnerutils;\n\n    @inject\n    protected localflowrepositoryloader repositoryloader;\n\n    @beforeeach\n    private void init() throws ioexception, urisyntaxexception {\n        repositoryloader.load(objects.requirenonnull(examplerunnertest.class.getclassloader().getresource("flows")));\n        this.runner.run();\n    }\n\n    @suppresswarnings("unchecked")\n    @test\n    void flow() throws timeoutexception {\n        execution execution = runnerutils.runone("io.kestra.templates", "example");\n\n        assertthat(execution.gettaskrunlist(), hassize(3));\n        assertthat(((map<string, object>)execution.gettaskrunlist().get(2).getoutputs().get("child")).get("value"), is("task-id"));\n    }\n}\n\n\nwith this, you will :\n\n * inject all dependencies with @micronauttest\n * on init(), load all the flow on the src/resources/flow directory.\n * run an full execution with execution execution = runnerutils.runone("io.kestra.templates", "example");\n\nwith this execution, you can look at all the properties you want to control (status, taskrunlist number, outputs, ...)\n\nto make it work, you need to have an application.yml files with this minimum configuration :\n\nkestra:\n  repository:\n    type: memory\n  queue:\n    type: memory\n  storage:\n    type: local\n    local:\n      base-path: /tmp/unittest\n\n\nand these dependencies on your build.gradle :\n\n    testimplementation group: "io.kestra", name: "core", version: kestraversion\n    testimplementation group: "io.kestra", name: "repository-memory", version: kestraversion\n    testimplementation group: "io.kestra", name: "runner-memory", version: kestraversion\n    testimplementation group: "io.kestra", name: "storage-local", version: kestraversion\n\n\nthis will enabled the in memory runner to work and to run your flow without any others dependencies (kafka, ...)',charsets:{}},{title:"Terraform Integration",frontmatter:{order:7,meta:[{property:"article:modified_time",content:"2021-04-16T06:33:11.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Terraform Integration"},{property:"og:description",content:"Terraform Integration | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/terraform/"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Terraform Integration"},{name:"twitter:description",content:"Terraform Integration | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/terraform/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/terraform/",relativePath:"docs/terraform/README.md",key:"v-219eff68",path:"/docs/terraform/",lastUpdated:"4/16/2021, 6:33:11 AM",lastUpdatedTimestamp:1618554791e3,headersStr:null,content:"# Terraform Integration\n\nWe provide a terraform provider available on Terraform registry in order to facilitate all CI/CD management for your Kestra ressource.\n\nFind below all the terraform resources:\n\n * Resources:\n   \n * Data Sources:\n   ",normalizedContent:"# terraform integration\n\nwe provide a terraform provider available on terraform registry in order to facilitate all ci/cd management for your kestra ressource.\n\nfind below all the terraform resources:\n\n * resources:\n   \n * data sources:\n   ",charsets:{}},{title:"kestra_binding",frontmatter:{title:"kestra_binding",editLink:!1,description:"Use this data source to access information about an existing Kestra binding",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"kestra_binding"},{property:"og:description",content:"Use this data source to access information about an existing Kestra binding | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/terraform/data-sources/binding.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"kestra_binding"},{name:"twitter:description",content:"Use this data source to access information about an existing Kestra binding | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/terraform/data-sources/binding.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/terraform/data-sources/binding.html",relativePath:"docs/terraform/data-sources/binding.md",key:"v-7f4ed1e3",path:"/docs/terraform/data-sources/binding.html",headers:[{level:2,title:"Example Usage",slug:"example-usage",normalizedTitle:"example usage",charIndex:112},{level:2,title:"Schema",slug:"schema",normalizedTitle:"schema",charIndex:208},{level:3,title:"Required",slug:"required",normalizedTitle:"required",charIndex:219},{level:3,title:"Optional",slug:"optional",normalizedTitle:"optional",charIndex:272},{level:3,title:"Read-Only",slug:"read-only",normalizedTitle:"read-only",charIndex:326}],headersStr:"Example Usage Schema Required Optional Read-Only",content:'# kestra_binding (Data Source)\n\nUse this data source to access information about an existing Kestra binding\n\n\n# Example Usage\n\ndata "kestra_binding" "example" {\n  binding_id = "65DsawPfiJPkTkZJIPX6jQ"\n}\n\n\n\n# Schema\n\n\n# Required\n\n * binding_id (String) The binding id.\n\n\n# Optional\n\n * id (String) The ID of this resource.\n\n\n# Read-Only\n\n * external_id (String) The binding external id.\n * namespace (String) The linked namespace.\n * role_id (String) The role id.\n * type (String) The binding type.',normalizedContent:'# kestra_binding (data source)\n\nuse this data source to access information about an existing kestra binding\n\n\n# example usage\n\ndata "kestra_binding" "example" {\n  binding_id = "65dsawpfijpktkzjipx6jq"\n}\n\n\n\n# schema\n\n\n# required\n\n * binding_id (string) the binding id.\n\n\n# optional\n\n * id (string) the id of this resource.\n\n\n# read-only\n\n * external_id (string) the binding external id.\n * namespace (string) the linked namespace.\n * role_id (string) the role id.\n * type (string) the binding type.',charsets:{}},{title:"kestra_flow",frontmatter:{title:"kestra_flow",editLink:!1,description:"Use this data source to access information about an existing Kestra Flow",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"kestra_flow"},{property:"og:description",content:"Use this data source to access information about an existing Kestra Flow | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/terraform/data-sources/flow.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"kestra_flow"},{name:"twitter:description",content:"Use this data source to access information about an existing Kestra Flow | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/terraform/data-sources/flow.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/terraform/data-sources/flow.html",relativePath:"docs/terraform/data-sources/flow.md",key:"v-66dc4b5d",path:"/docs/terraform/data-sources/flow.html",headers:[{level:2,title:"Example Usage",slug:"example-usage",normalizedTitle:"example usage",charIndex:106},{level:2,title:"Schema",slug:"schema",normalizedTitle:"schema",charIndex:221},{level:3,title:"Required",slug:"required",normalizedTitle:"required",charIndex:232},{level:3,title:"Optional",slug:"optional",normalizedTitle:"optional",charIndex:316},{level:3,title:"Read-Only",slug:"read-only",normalizedTitle:"read-only",charIndex:370}],headersStr:"Example Usage Schema Required Optional Read-Only",content:'# kestra_flow (Data Source)\n\nUse this data source to access information about an existing Kestra Flow\n\n\n# Example Usage\n\ndata "kestra_flow" "example" {\n  namespace = "io.kestra.mynamespace"\n  id        = "my-flow"\n}\n\n\n\n# Schema\n\n\n# Required\n\n * flow_id (String) The flow id.\n * namespace (String) The namespace.\n\n\n# Optional\n\n * id (String) The ID of this resource.\n\n\n# Read-Only\n\n * content (String) The flow content as yaml.\n * revision (Number) The flow revision.',normalizedContent:'# kestra_flow (data source)\n\nuse this data source to access information about an existing kestra flow\n\n\n# example usage\n\ndata "kestra_flow" "example" {\n  namespace = "io.kestra.mynamespace"\n  id        = "my-flow"\n}\n\n\n\n# schema\n\n\n# required\n\n * flow_id (string) the flow id.\n * namespace (string) the namespace.\n\n\n# optional\n\n * id (string) the id of this resource.\n\n\n# read-only\n\n * content (string) the flow content as yaml.\n * revision (number) the flow revision.',charsets:{}},{title:"kestra_group",frontmatter:{title:"kestra_group",editLink:!1,description:"Use this data source to access information about an existing Kestra Group.",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"kestra_group"},{property:"og:description",content:"Use this data source to access information about an existing Kestra Group. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/terraform/data-sources/group.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"kestra_group"},{name:"twitter:description",content:"Use this data source to access information about an existing Kestra Group. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/terraform/data-sources/group.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/terraform/data-sources/group.html",relativePath:"docs/terraform/data-sources/group.md",key:"v-3711fea3",path:"/docs/terraform/data-sources/group.html",headers:[{level:2,title:"Example Usage",slug:"example-usage",normalizedTitle:"example usage",charIndex:109},{level:2,title:"Schema",slug:"schema",normalizedTitle:"schema",charIndex:201},{level:3,title:"Required",slug:"required",normalizedTitle:"required",charIndex:212},{level:3,title:"Optional",slug:"optional",normalizedTitle:"optional",charIndex:258},{level:3,title:"Read-Only",slug:"read-only",normalizedTitle:"read-only",charIndex:356}],headersStr:"Example Usage Schema Required Optional Read-Only",content:'# kestra_group (Data Source)\n\nUse this data source to access information about an existing Kestra Group.\n\n\n# Example Usage\n\ndata "kestra_group" "example" {\n  group_id = "68xAawPfiJPkTkZJIPX6jQ"\n}\n\n\n\n# Schema\n\n\n# Required\n\n * group_id (String) The group.\n\n\n# Optional\n\n * id (String) The ID of this resource.\n * namespace (String) The linked namespace.\n\n\n# Read-Only\n\n * description (String) The group description.\n * name (String) The group name.',normalizedContent:'# kestra_group (data source)\n\nuse this data source to access information about an existing kestra group.\n\n\n# example usage\n\ndata "kestra_group" "example" {\n  group_id = "68xaawpfijpktkzjipx6jq"\n}\n\n\n\n# schema\n\n\n# required\n\n * group_id (string) the group.\n\n\n# optional\n\n * id (string) the id of this resource.\n * namespace (string) the linked namespace.\n\n\n# read-only\n\n * description (string) the group description.\n * name (string) the group name.',charsets:{}},{title:"kestra_namespace",frontmatter:{title:"kestra_namespace",editLink:!1,description:"Use this data source to access information about an existing Kestra Namespace.",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"kestra_namespace"},{property:"og:description",content:"Use this data source to access information about an existing Kestra Namespace. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/terraform/data-sources/namespace.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"kestra_namespace"},{name:"twitter:description",content:"Use this data source to access information about an existing Kestra Namespace. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/terraform/data-sources/namespace.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/terraform/data-sources/namespace.html",relativePath:"docs/terraform/data-sources/namespace.md",key:"v-6a782823",path:"/docs/terraform/data-sources/namespace.html",headers:[{level:2,title:"Example Usage",slug:"example-usage",normalizedTitle:"example usage",charIndex:117},{level:2,title:"Schema",slug:"schema",normalizedTitle:"schema",charIndex:216},{level:3,title:"Required",slug:"required",normalizedTitle:"required",charIndex:227},{level:3,title:"Optional",slug:"optional",normalizedTitle:"optional",charIndex:281},{level:3,title:"Read-Only",slug:"read-only",normalizedTitle:"read-only",charIndex:335}],headersStr:"Example Usage Schema Required Optional Read-Only",content:'# kestra_namespace (Data Source)\n\nUse this data source to access information about an existing Kestra Namespace.\n\n\n# Example Usage\n\ndata "kestra_namespace" "example" {\n  namespace_id = "io.kestra.mynamespace"\n}\n\n\n\n# Schema\n\n\n# Required\n\n * namespace_id (String) The namespace.\n\n\n# Optional\n\n * id (String) The ID of this resource.\n\n\n# Read-Only\n\n * description (String) The namespace friendly description.\n * task_defaults (String) The namespace task defaults.\n * variables (String) The namespace variables.',normalizedContent:'# kestra_namespace (data source)\n\nuse this data source to access information about an existing kestra namespace.\n\n\n# example usage\n\ndata "kestra_namespace" "example" {\n  namespace_id = "io.kestra.mynamespace"\n}\n\n\n\n# schema\n\n\n# required\n\n * namespace_id (string) the namespace.\n\n\n# optional\n\n * id (string) the id of this resource.\n\n\n# read-only\n\n * description (string) the namespace friendly description.\n * task_defaults (string) the namespace task defaults.\n * variables (string) the namespace variables.',charsets:{}},{title:"kestra_role",frontmatter:{title:"kestra_role",editLink:!1,description:"Use this data source to access information about an existing Kestra Role.",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"kestra_role"},{property:"og:description",content:"Use this data source to access information about an existing Kestra Role. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/terraform/data-sources/role.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"kestra_role"},{name:"twitter:description",content:"Use this data source to access information about an existing Kestra Role. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/terraform/data-sources/role.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/terraform/data-sources/role.html",relativePath:"docs/terraform/data-sources/role.md",key:"v-27b76acd",path:"/docs/terraform/data-sources/role.html",headers:[{level:2,title:"Example Usage",slug:"example-usage",normalizedTitle:"example usage",charIndex:107},{level:2,title:"Schema",slug:"schema",normalizedTitle:"schema",charIndex:197},{level:3,title:"Required",slug:"required",normalizedTitle:"required",charIndex:208},{level:3,title:"Optional",slug:"optional",normalizedTitle:"optional",charIndex:252},{level:3,title:"Read-Only",slug:"read-only",normalizedTitle:"read-only",charIndex:350},{level:3,title:"Nested Schema for permissions",slug:"nested-schema-for-permissions",normalizedTitle:"nested schema for permissions",charIndex:528}],headersStr:"Example Usage Schema Required Optional Read-Only Nested Schema for permissions",content:'# kestra_role (Data Source)\n\nUse this data source to access information about an existing Kestra Role.\n\n\n# Example Usage\n\ndata "kestra_role" "example" {\n  role_id = "3kcvnr27ZcdHXD2AUvIe7z"\n}\n\n\n\n# Schema\n\n\n# Required\n\n * role_id (String) The role.\n\n\n# Optional\n\n * id (String) The ID of this resource.\n * namespace (String) The linked namespace.\n\n\n# Read-Only\n\n * description (String) The role description.\n * name (String) The role name.\n * permissions (Set of Object) The role permissions. (see below for nested schema)\n\n\n\n\n# Nested Schema for permissions\n\nRead-Only:\n\n * permissions (List of String)\n * type (String)',normalizedContent:'# kestra_role (data source)\n\nuse this data source to access information about an existing kestra role.\n\n\n# example usage\n\ndata "kestra_role" "example" {\n  role_id = "3kcvnr27zcdhxd2auvie7z"\n}\n\n\n\n# schema\n\n\n# required\n\n * role_id (string) the role.\n\n\n# optional\n\n * id (string) the id of this resource.\n * namespace (string) the linked namespace.\n\n\n# read-only\n\n * description (string) the role description.\n * name (string) the role name.\n * permissions (set of object) the role permissions. (see below for nested schema)\n\n\n\n\n# nested schema for permissions\n\nread-only:\n\n * permissions (list of string)\n * type (string)',charsets:{}},{title:"kestra_template",frontmatter:{title:"kestra_template",editLink:!1,description:"Use this data source to access information about an existing Kestra Template",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"kestra_template"},{property:"og:description",content:"Use this data source to access information about an existing Kestra Template | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/terraform/data-sources/template.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"kestra_template"},{name:"twitter:description",content:"Use this data source to access information about an existing Kestra Template | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/terraform/data-sources/template.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/terraform/data-sources/template.html",relativePath:"docs/terraform/data-sources/template.md",key:"v-2725e445",path:"/docs/terraform/data-sources/template.html",headers:[{level:2,title:"Example Usage",slug:"example-usage",normalizedTitle:"example usage",charIndex:114},{level:2,title:"Schema",slug:"schema",normalizedTitle:"schema",charIndex:239},{level:3,title:"Required",slug:"required",normalizedTitle:"required",charIndex:250},{level:3,title:"Optional",slug:"optional",normalizedTitle:"optional",charIndex:342},{level:3,title:"Read-Only",slug:"read-only",normalizedTitle:"read-only",charIndex:396}],headersStr:"Example Usage Schema Required Optional Read-Only",content:'# kestra_template (Data Source)\n\nUse this data source to access information about an existing Kestra Template\n\n\n# Example Usage\n\ndata "kestra_template" "example" {\n  namespace_ = "io.kestra.mynamespace"\n  id         = "my-template"\n}\n\n\n\n# Schema\n\n\n# Required\n\n * namespace (String) The namespace.\n * template_id (String) The template id.\n\n\n# Optional\n\n * id (String) The ID of this resource.\n\n\n# Read-Only\n\n * content (String) The template content as yaml.',normalizedContent:'# kestra_template (data source)\n\nuse this data source to access information about an existing kestra template\n\n\n# example usage\n\ndata "kestra_template" "example" {\n  namespace_ = "io.kestra.mynamespace"\n  id         = "my-template"\n}\n\n\n\n# schema\n\n\n# required\n\n * namespace (string) the namespace.\n * template_id (string) the template id.\n\n\n# optional\n\n * id (string) the id of this resource.\n\n\n# read-only\n\n * content (string) the template content as yaml.',charsets:{}},{title:"kestra_user",frontmatter:{title:"kestra_user",editLink:!1,description:"Use this data source to access information about an existing Kestra User.",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"kestra_user"},{property:"og:description",content:"Use this data source to access information about an existing Kestra User. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/terraform/data-sources/user.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"kestra_user"},{name:"twitter:description",content:"Use this data source to access information about an existing Kestra User. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/terraform/data-sources/user.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/terraform/data-sources/user.html",relativePath:"docs/terraform/data-sources/user.md",key:"v-1eda64e3",path:"/docs/terraform/data-sources/user.html",headers:[{level:2,title:"Example Usage",slug:"example-usage",normalizedTitle:"example usage",charIndex:107},{level:2,title:"Schema",slug:"schema",normalizedTitle:"schema",charIndex:197},{level:3,title:"Required",slug:"required",normalizedTitle:"required",charIndex:208},{level:3,title:"Optional",slug:"optional",normalizedTitle:"optional",charIndex:252},{level:3,title:"Read-Only",slug:"read-only",normalizedTitle:"read-only",charIndex:350}],headersStr:"Example Usage Schema Required Optional Read-Only",content:'# kestra_user (Data Source)\n\nUse this data source to access information about an existing Kestra User.\n\n\n# Example Usage\n\ndata "kestra_user" "example" {\n  user_id = "68xAawPfiJPkTkZJIPX6jQ"\n}\n\n\n\n# Schema\n\n\n# Required\n\n * user_id (String) The user.\n\n\n# Optional\n\n * id (String) The ID of this resource.\n * namespace (String) The linked namespace.\n\n\n# Read-Only\n\n * description (String) The user description.\n * email (String) The user email.\n * first_name (String) The user first name.\n * groups (List of String) The user global roles in yaml string.\n * last_name (String) The user last name.\n * username (String) The user name.',normalizedContent:'# kestra_user (data source)\n\nuse this data source to access information about an existing kestra user.\n\n\n# example usage\n\ndata "kestra_user" "example" {\n  user_id = "68xaawpfijpktkzjipx6jq"\n}\n\n\n\n# schema\n\n\n# required\n\n * user_id (string) the user.\n\n\n# optional\n\n * id (string) the id of this resource.\n * namespace (string) the linked namespace.\n\n\n# read-only\n\n * description (string) the user description.\n * email (string) the user email.\n * first_name (string) the user first name.\n * groups (list of string) the user global roles in yaml string.\n * last_name (string) the user last name.\n * username (string) the user name.',charsets:{}},{title:"Provider configurations",frontmatter:{title:"Provider configurations",editLink:!1,description:"",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Provider configurations"},{property:"og:description",content:" | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/terraform/guides/configurations.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Provider configurations"},{name:"twitter:description",content:" | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/terraform/guides/configurations.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/terraform/guides/configurations.html",relativePath:"docs/terraform/guides/configurations.md",key:"v-19d6ff43",path:"/docs/terraform/guides/configurations.html",headers:[{level:2,title:"Example Usage",slug:"example-usage",normalizedTitle:"example usage",charIndex:30},{level:2,title:"Schema",slug:"schema",normalizedTitle:"schema",charIndex:443},{level:3,title:"Optional",slug:"optional",normalizedTitle:"optional",charIndex:454}],headersStr:"Example Usage Schema Optional",content:'# Provider configurations\n\n\n# Example Usage\n\nprovider "kestra" {\n  # mandatory, the url to kestra\n  url = "http://localhost:8080"\n\n  # optional basic auth username\n  username = "john"\n\n  # optional basic auth password\n  password = "my-password"\n\n  # optional jwt token\n  jwt = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6Iktlc3RyYS5pbyIsImlhdCI6MTUxNjIzOTAyMn0.hm2VKztDJP7CUsI69Th6Y5NLEQrXx7OErLXay55GD5U"\n}\n\n\n\n# Schema\n\n\n# Optional\n\n * jwt (String, Sensitive) Kestra JWT token\n * password (String, Sensitive) Kestra BasicAuth password\n * url (String) Kestra full endpoint url without trailing slash\n * username (String) Kestra BasicAuth username',normalizedContent:'# provider configurations\n\n\n# example usage\n\nprovider "kestra" {\n  # mandatory, the url to kestra\n  url = "http://localhost:8080"\n\n  # optional basic auth username\n  username = "john"\n\n  # optional basic auth password\n  password = "my-password"\n\n  # optional jwt token\n  jwt = "eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9.eyjzdwiioiixmjm0nty3odkwiiwibmftzsi6iktlc3ryys5pbyisimlhdci6mtuxnjizotaymn0.hm2vkztdjp7cusi69th6y5nleqrxx7oerlxay55gd5u"\n}\n\n\n\n# schema\n\n\n# optional\n\n * jwt (string, sensitive) kestra jwt token\n * password (string, sensitive) kestra basicauth password\n * url (string) kestra full endpoint url without trailing slash\n * username (string) kestra basicauth username',charsets:{}},{title:"Working with Yaml",frontmatter:{title:"Working with Yaml",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Working with Yaml"},{property:"og:description",content:"Working with Yaml | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/terraform/guides/working-with-yaml.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Working with Yaml"},{name:"twitter:description",content:"Working with Yaml | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/terraform/guides/working-with-yaml.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/terraform/guides/working-with-yaml.html",relativePath:"docs/terraform/guides/working-with-yaml.md",key:"v-3a854743",path:"/docs/terraform/guides/working-with-yaml.html",headers:[{level:2,title:"Simple multiline string example",slug:"simple-multiline-string-example",normalizedTitle:"simple multiline string example",charIndex:784},{level:2,title:"External files",slug:"external-files",normalizedTitle:"external files",charIndex:1182},{level:2,title:"External files with template",slug:"external-files-with-template",normalizedTitle:"external files with template",charIndex:1643},{level:3,title:"Dealing with included yaml string",slug:"dealing-with-included-yaml-string",normalizedTitle:"dealing with included yaml string",charIndex:2106},{level:3,title:"Include full yaml part",slug:"include-full-yaml-part",normalizedTitle:"include full yaml part",charIndex:3195}],headersStr:"Simple multiline string example External files External files with template Dealing with included yaml string Include full yaml part",content:'# Working with Yaml\n\nMost of kestra ressource need to be described as Yaml like kestra_flow & kestra_template.\n\nWe have chosen to use a full yaml in terraform definition since the structure is recursive and dynamic, so it can\'t be described using terraform internal schema.\n\nDANGER\n\nTake care that this terraform provider is not aware of task & plugins. It can\'t know default values of properties, and most of convertion logic done by Kestra Server. If you see diff that is always present (even just after apply), your flow on terraform must have a minor difference return from the server. In this case, copy the source from Kestra UI in your terraform files to avoid these difference.\n\nThere is in terraform a lot of function that allow to work properly with this yaml content :\n\n\n# Simple multiline string example\n\nYou can use simple terraform multiline string with Heredoc String :\n\nresource "kestra_flow" "example" {\n  namespace = "io.kestra.mynamespace"\n  flow_id = "my-flow"\n  content = <<EOT\ninputs:\n  - name: my-value\n    type: STRING\n    required: true\n\ntasks:\n  - id: t2\n    type: io.kestra.core.tasks.debugs.Echo\n    format: first {{task.id}}\n    level: TRACE\nEOT\n}\n\n\n\n# External files\n\nBetter will be to use a file function. Just create a file .yml near your terraform .tf and include the whole file in your resource:\n\ninputs:\n  - name: my-value\n    type: STRING\n    required: true\n\ntasks:\n  - id: t2\n    type: io.kestra.core.tasks.debugs.Echo\n    format: first {{task.id}}\n    level: TRACE\nEOT\n\n\nresource "kestra_flow" "example" {\n  namespace = "io.kestra.mynamespace"\n  flow_id = "my-flow"\n  content = file("my-flow.yml")\n}\n\n\n\n# External files with template\n\nEven better will be to use a templatefile function that will allow more complex flows to be more readable. You can include some external external and this one can also include other file.\n\nDANGER\n\nTake care about the indent functon that need to fit your actual flow ident. Terraform don\'t know anything about your yaml (it\'s a simple string), so you need to handle properly the indent count by yourself using the indent function\n\n\n# Dealing with included yaml string\n\nImagine a flow that will query an external database. Embedding the full query can lead to very long flow definition. In the case you can use templatefile to allow inclusion of an external files from the yaml.\n\nCreate a sql file:\n\nSELECT * \nFROM ....\n\n\nCreate the yaml file for the flow:\n\ntasks:\n  - id: "query"\n    type: "io.kestra.plugin.jdbc.mysql.Query"\n    url: jdbc:postgresql://127.0.0.1:56982/\n    username: postgres\n    password: pg_passwd\n    sql: |\n      ${indent(6, file("my-query.sql"))}\n    fetchOne: true\n\n\nAnd finaly create the resource invoking the templatefile:\n\nresource "kestra_flow" "example" {\n  namespace = "io.kestra.mynamespace"\n  flow_id = "my-flow"\n  content = templatefile("my-flow.yaml", {})\n}\n\n\nThe tf files will required the yaml files that will require the sql files and the final flow will be:\n\ntasks:\n  - id: "query"\n    type: "io.kestra.plugin.jdbc.mysql.Query"\n    url: jdbc:postgresql://127.0.0.1:56982/\n    username: postgres\n    password: pg_passwd\n    sql: |\n      SELECT * \n      FROM ....\n    fetchOne: true\n\n\n\n# Include full yaml part\n\nBy the same way, you can also include a full yaml specs inside anothers one.\n\nCreate 2 yaml files:\n\nid: t1\ntype: io.kestra.core.tasks.debugs.Echo\nformat: first {{task.id}}\nlevel: TRACE\n\n\nid: t2\ntype: io.kestra.core.tasks.debugs.Echo\nformat: second {{task.id}}\nlevel: TRACE\n\n\nCreate the yaml file for the flow:\n\ntasks:\n  - ${indent(4, file("t1.yml"))}\n  - ${indent(4, file("t2.yml"))}\n',normalizedContent:'# working with yaml\n\nmost of kestra ressource need to be described as yaml like kestra_flow & kestra_template.\n\nwe have chosen to use a full yaml in terraform definition since the structure is recursive and dynamic, so it can\'t be described using terraform internal schema.\n\ndanger\n\ntake care that this terraform provider is not aware of task & plugins. it can\'t know default values of properties, and most of convertion logic done by kestra server. if you see diff that is always present (even just after apply), your flow on terraform must have a minor difference return from the server. in this case, copy the source from kestra ui in your terraform files to avoid these difference.\n\nthere is in terraform a lot of function that allow to work properly with this yaml content :\n\n\n# simple multiline string example\n\nyou can use simple terraform multiline string with heredoc string :\n\nresource "kestra_flow" "example" {\n  namespace = "io.kestra.mynamespace"\n  flow_id = "my-flow"\n  content = <<eot\ninputs:\n  - name: my-value\n    type: string\n    required: true\n\ntasks:\n  - id: t2\n    type: io.kestra.core.tasks.debugs.echo\n    format: first {{task.id}}\n    level: trace\neot\n}\n\n\n\n# external files\n\nbetter will be to use a file function. just create a file .yml near your terraform .tf and include the whole file in your resource:\n\ninputs:\n  - name: my-value\n    type: string\n    required: true\n\ntasks:\n  - id: t2\n    type: io.kestra.core.tasks.debugs.echo\n    format: first {{task.id}}\n    level: trace\neot\n\n\nresource "kestra_flow" "example" {\n  namespace = "io.kestra.mynamespace"\n  flow_id = "my-flow"\n  content = file("my-flow.yml")\n}\n\n\n\n# external files with template\n\neven better will be to use a templatefile function that will allow more complex flows to be more readable. you can include some external external and this one can also include other file.\n\ndanger\n\ntake care about the indent functon that need to fit your actual flow ident. terraform don\'t know anything about your yaml (it\'s a simple string), so you need to handle properly the indent count by yourself using the indent function\n\n\n# dealing with included yaml string\n\nimagine a flow that will query an external database. embedding the full query can lead to very long flow definition. in the case you can use templatefile to allow inclusion of an external files from the yaml.\n\ncreate a sql file:\n\nselect * \nfrom ....\n\n\ncreate the yaml file for the flow:\n\ntasks:\n  - id: "query"\n    type: "io.kestra.plugin.jdbc.mysql.query"\n    url: jdbc:postgresql://127.0.0.1:56982/\n    username: postgres\n    password: pg_passwd\n    sql: |\n      ${indent(6, file("my-query.sql"))}\n    fetchone: true\n\n\nand finaly create the resource invoking the templatefile:\n\nresource "kestra_flow" "example" {\n  namespace = "io.kestra.mynamespace"\n  flow_id = "my-flow"\n  content = templatefile("my-flow.yaml", {})\n}\n\n\nthe tf files will required the yaml files that will require the sql files and the final flow will be:\n\ntasks:\n  - id: "query"\n    type: "io.kestra.plugin.jdbc.mysql.query"\n    url: jdbc:postgresql://127.0.0.1:56982/\n    username: postgres\n    password: pg_passwd\n    sql: |\n      select * \n      from ....\n    fetchone: true\n\n\n\n# include full yaml part\n\nby the same way, you can also include a full yaml specs inside anothers one.\n\ncreate 2 yaml files:\n\nid: t1\ntype: io.kestra.core.tasks.debugs.echo\nformat: first {{task.id}}\nlevel: trace\n\n\nid: t2\ntype: io.kestra.core.tasks.debugs.echo\nformat: second {{task.id}}\nlevel: trace\n\n\ncreate the yaml file for the flow:\n\ntasks:\n  - ${indent(4, file("t1.yml"))}\n  - ${indent(4, file("t2.yml"))}\n',charsets:{cjk:!0}},{title:"kestra_binding",frontmatter:{title:"kestra_binding",editLink:!1,description:"Manages a Kestra Binding.",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"kestra_binding"},{property:"og:description",content:"Manages a Kestra Binding. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/terraform/resources/binding.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"kestra_binding"},{name:"twitter:description",content:"Manages a Kestra Binding. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/terraform/resources/binding.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/terraform/resources/binding.html",relativePath:"docs/terraform/resources/binding.md",key:"v-dc92b792",path:"/docs/terraform/resources/binding.html",headers:[{level:2,title:"Example Usage",slug:"example-usage",normalizedTitle:"example usage",charIndex:59},{level:2,title:"Schema",slug:"schema",normalizedTitle:"schema",charIndex:265},{level:3,title:"Required",slug:"required",normalizedTitle:"required",charIndex:276},{level:3,title:"Optional",slug:"optional",normalizedTitle:"optional",charIndex:407},{level:2,title:"Import",slug:"import",normalizedTitle:"import",charIndex:505}],headersStr:"Example Usage Schema Required Optional Import",content:'# kestra_binding (Resource)\n\nManages a Kestra Binding.\n\n\n# Example Usage\n\nresource "kestra_binding" "example" {\n  type        = "GROUP"\n  external_id = "68xAawPfiJPkTkZJIPX6jQ"\n  role_id     = "3kcvnr27ZcdHXD2AUvIe7z"\n  namespace   = "io.kestra.mynamespace"\n}\n\n\n\n# Schema\n\n\n# Required\n\n * external_id (String) The binding external id.\n * role_id (String) The role id.\n * type (String) The binding type.\n\n\n# Optional\n\n * id (String) The ID of this resource.\n * namespace (String) The linked namespace.\n\n\n# Import\n\nImport is supported using the following syntax:\n\nterraform import kestra_binding.example {{binding_id}}\n',normalizedContent:'# kestra_binding (resource)\n\nmanages a kestra binding.\n\n\n# example usage\n\nresource "kestra_binding" "example" {\n  type        = "group"\n  external_id = "68xaawpfijpktkzjipx6jq"\n  role_id     = "3kcvnr27zcdhxd2auvie7z"\n  namespace   = "io.kestra.mynamespace"\n}\n\n\n\n# schema\n\n\n# required\n\n * external_id (string) the binding external id.\n * role_id (string) the role id.\n * type (string) the binding type.\n\n\n# optional\n\n * id (string) the id of this resource.\n * namespace (string) the linked namespace.\n\n\n# import\n\nimport is supported using the following syntax:\n\nterraform import kestra_binding.example {{binding_id}}\n',charsets:{}},{title:"kestra_flow",frontmatter:{title:"kestra_flow",editLink:!1,description:"Manages a Kestra Flow.",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"kestra_flow"},{property:"og:description",content:"Manages a Kestra Flow. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/terraform/resources/flow.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"kestra_flow"},{name:"twitter:description",content:"Manages a Kestra Flow. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/terraform/resources/flow.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/terraform/resources/flow.html",relativePath:"docs/terraform/resources/flow.md",key:"v-738f2343",path:"/docs/terraform/resources/flow.html",headers:[{level:2,title:"Example Usage",slug:"example-usage",normalizedTitle:"example usage",charIndex:53},{level:2,title:"Schema",slug:"schema",normalizedTitle:"schema",charIndex:476},{level:3,title:"Required",slug:"required",normalizedTitle:"required",charIndex:487},{level:3,title:"Optional",slug:"optional",normalizedTitle:"optional",charIndex:634},{level:3,title:"Read-Only",slug:"read-only",normalizedTitle:"read-only",charIndex:688},{level:2,title:"Import",slug:"import",normalizedTitle:"import",charIndex:743}],headersStr:"Example Usage Schema Required Optional Read-Only Import",content:'# kestra_flow (Resource)\n\nManages a Kestra Flow.\n\n\n# Example Usage\n\nresource "kestra_flow" "example" {\n  namespace = "io.kestra.mynamespace"\n  flow_id   = "my-flow"\n  content   = <<EOT\ninputs:\n  - name: my-value\n    type: STRING\n\nvariables:\n  first: "1"\n\ntasks:\n  - id: t2\n    type: io.kestra.core.tasks.debugs.Echo\n    format: first {{task.id}}\n    level: TRACE\n\ntaskDefaults:\n  - type: io.kestra.core.tasks.debugs.Echo\n    values:\n      format: third {{flow.id}}\nEOT\n}\n\n\n\n# Schema\n\n\n# Required\n\n * content (String) The flow full content in yaml string.\n * flow_id (String) The flow id.\n * namespace (String) The flow namespace.\n\n\n# Optional\n\n * id (String) The ID of this resource.\n\n\n# Read-Only\n\n * revision (Number) The flow revision.\n\n\n# Import\n\nImport is supported using the following syntax:\n\nterraform import kestra_flow.example {{namespace}}/{{flow_id}}\n',normalizedContent:'# kestra_flow (resource)\n\nmanages a kestra flow.\n\n\n# example usage\n\nresource "kestra_flow" "example" {\n  namespace = "io.kestra.mynamespace"\n  flow_id   = "my-flow"\n  content   = <<eot\ninputs:\n  - name: my-value\n    type: string\n\nvariables:\n  first: "1"\n\ntasks:\n  - id: t2\n    type: io.kestra.core.tasks.debugs.echo\n    format: first {{task.id}}\n    level: trace\n\ntaskdefaults:\n  - type: io.kestra.core.tasks.debugs.echo\n    values:\n      format: third {{flow.id}}\neot\n}\n\n\n\n# schema\n\n\n# required\n\n * content (string) the flow full content in yaml string.\n * flow_id (string) the flow id.\n * namespace (string) the flow namespace.\n\n\n# optional\n\n * id (string) the id of this resource.\n\n\n# read-only\n\n * revision (number) the flow revision.\n\n\n# import\n\nimport is supported using the following syntax:\n\nterraform import kestra_flow.example {{namespace}}/{{flow_id}}\n',charsets:{}},{title:"kestra_group",frontmatter:{title:"kestra_group",editLink:!1,description:"Manages a Kestra Group.",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"kestra_group"},{property:"og:description",content:"Manages a Kestra Group. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/terraform/resources/group.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"kestra_group"},{name:"twitter:description",content:"Manages a Kestra Group. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/terraform/resources/group.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/terraform/resources/group.html",relativePath:"docs/terraform/resources/group.md",key:"v-7f0a4243",path:"/docs/terraform/resources/group.html",headers:[{level:2,title:"Example Usage",slug:"example-usage",normalizedTitle:"example usage",charIndex:55},{level:2,title:"Schema",slug:"schema",normalizedTitle:"schema",charIndex:224},{level:3,title:"Required",slug:"required",normalizedTitle:"required",charIndex:235},{level:3,title:"Optional",slug:"optional",normalizedTitle:"optional",charIndex:282},{level:2,title:"Import",slug:"import",normalizedTitle:"import",charIndex:427}],headersStr:"Example Usage Schema Required Optional Import",content:'# kestra_group (Resource)\n\nManages a Kestra Group.\n\n\n# Example Usage\n\nresource "kestra_group" "example" {\n  namespace   = "io.kestra.mynamespace"\n  name        = "Friendly name"\n  description = "Friendly description"\n}\n\n\n\n# Schema\n\n\n# Required\n\n * name (String) The group name.\n\n\n# Optional\n\n * description (String) The group description.\n * id (String) The ID of this resource.\n * namespace (String) The linked namespace.\n\n\n# Import\n\nImport is supported using the following syntax:\n\nterraform import kestra_group.example {{group_id}}\n',normalizedContent:'# kestra_group (resource)\n\nmanages a kestra group.\n\n\n# example usage\n\nresource "kestra_group" "example" {\n  namespace   = "io.kestra.mynamespace"\n  name        = "friendly name"\n  description = "friendly description"\n}\n\n\n\n# schema\n\n\n# required\n\n * name (string) the group name.\n\n\n# optional\n\n * description (string) the group description.\n * id (string) the id of this resource.\n * namespace (string) the linked namespace.\n\n\n# import\n\nimport is supported using the following syntax:\n\nterraform import kestra_group.example {{group_id}}\n',charsets:{}},{title:"kestra_namespace",frontmatter:{title:"kestra_namespace",editLink:!1,description:"Manages a Kestra Namespace.",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"kestra_namespace"},{property:"og:description",content:"Manages a Kestra Namespace. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/terraform/resources/namespace.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"kestra_namespace"},{name:"twitter:description",content:"Manages a Kestra Namespace. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/terraform/resources/namespace.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/terraform/resources/namespace.html",relativePath:"docs/terraform/resources/namespace.md",key:"v-43eb08ea",path:"/docs/terraform/resources/namespace.html",headers:[{level:2,title:"Example Usage",slug:"example-usage",normalizedTitle:"example usage",charIndex:63},{level:2,title:"Schema",slug:"schema",normalizedTitle:"schema",charIndex:448},{level:3,title:"Required",slug:"required",normalizedTitle:"required",charIndex:459},{level:3,title:"Optional",slug:"optional",normalizedTitle:"optional",charIndex:513},{level:2,title:"Import",slug:"import",normalizedTitle:"import",charIndex:759}],headersStr:"Example Usage Schema Required Optional Import",content:'# kestra_namespace (Resource)\n\nManages a Kestra Namespace.\n\n\n# Example Usage\n\nresource "kestra_namespace" "example" {\n  namespace_id  = "io.kestra.mynamespace"\n  description   = "Friendly description"\n  variables     = <<EOT\nk1: 1\nk2:\n    v1: 1\nEOT\n  task_defaults = <<EOT\n- type: io.kestra.core.tasks.debugs.Echo\n  values:\n    format: first {{flow.id}}\n- type: io.kestra.core.tasks.debugs.Return\n  values:\n    format: first {{flow.id}}\nEOT\n}\n\n\n\n# Schema\n\n\n# Required\n\n * namespace_id (String) The namespace.\n\n\n# Optional\n\n * description (String) The namespace friendly description.\n * id (String) The ID of this resource.\n * task_defaults (String) The namespace task defaults in yaml string.\n * variables (String) The namespace variables in yaml string.\n\n\n# Import\n\nImport is supported using the following syntax:\n\nterraform import kestra_namespace.example {{namespace}}\n',normalizedContent:'# kestra_namespace (resource)\n\nmanages a kestra namespace.\n\n\n# example usage\n\nresource "kestra_namespace" "example" {\n  namespace_id  = "io.kestra.mynamespace"\n  description   = "friendly description"\n  variables     = <<eot\nk1: 1\nk2:\n    v1: 1\neot\n  task_defaults = <<eot\n- type: io.kestra.core.tasks.debugs.echo\n  values:\n    format: first {{flow.id}}\n- type: io.kestra.core.tasks.debugs.return\n  values:\n    format: first {{flow.id}}\neot\n}\n\n\n\n# schema\n\n\n# required\n\n * namespace_id (string) the namespace.\n\n\n# optional\n\n * description (string) the namespace friendly description.\n * id (string) the id of this resource.\n * task_defaults (string) the namespace task defaults in yaml string.\n * variables (string) the namespace variables in yaml string.\n\n\n# import\n\nimport is supported using the following syntax:\n\nterraform import kestra_namespace.example {{namespace}}\n',charsets:{}},{title:"kestranamespacesecret",frontmatter:{title:"kestra_namespace_secret",editLink:!1,description:"Manages a Kestra Namespace Secret.",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"kestranamespacesecret"},{property:"og:description",content:"Manages a Kestra Namespace Secret. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/terraform/resources/namespace_secret.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"kestranamespacesecret"},{name:"twitter:description",content:"Manages a Kestra Namespace Secret. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/terraform/resources/namespace_secret.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/terraform/resources/namespace_secret.html",relativePath:"docs/terraform/resources/namespace_secret.md",key:"v-3d69dc03",path:"/docs/terraform/resources/namespace_secret.html",headers:[{level:2,title:"Example Usage",slug:"example-usage",normalizedTitle:"example usage",charIndex:77},{level:2,title:"Schema",slug:"schema",normalizedTitle:"schema",charIndex:247},{level:3,title:"Required",slug:"required",normalizedTitle:"required",charIndex:258},{level:3,title:"Optional",slug:"optional",normalizedTitle:"optional",charIndex:422}],headersStr:"Example Usage Schema Required Optional",content:'# kestra_namespace_secret (Resource)\n\nManages a Kestra Namespace Secret.\n\n\n# Example Usage\n\nresource "kestra_namespace_secret" "example" {\n  namespace    = "io.kestra.mynamespace"\n  secret_key   = "MY_KEY"\n  secret_value = "my-r34l-53cr37"\n}\n\n\n\n# Schema\n\n\n# Required\n\n * namespace (String) The namespace.\n * secret_key (String) The namespace secrey key.\n * secret_value (String, Sensitive) The namespace secrey value.\n\n\n# Optional\n\n * id (String) The ID of this resource.',normalizedContent:'# kestra_namespace_secret (resource)\n\nmanages a kestra namespace secret.\n\n\n# example usage\n\nresource "kestra_namespace_secret" "example" {\n  namespace    = "io.kestra.mynamespace"\n  secret_key   = "my_key"\n  secret_value = "my-r34l-53cr37"\n}\n\n\n\n# schema\n\n\n# required\n\n * namespace (string) the namespace.\n * secret_key (string) the namespace secrey key.\n * secret_value (string, sensitive) the namespace secrey value.\n\n\n# optional\n\n * id (string) the id of this resource.',charsets:{}},{title:"kestra_role",frontmatter:{title:"kestra_role",editLink:!1,description:"Manages a Kestra Role.",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"kestra_role"},{property:"og:description",content:"Manages a Kestra Role. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/terraform/resources/role.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"kestra_role"},{name:"twitter:description",content:"Manages a Kestra Role. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/terraform/resources/role.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/terraform/resources/role.html",relativePath:"docs/terraform/resources/role.md",key:"v-8f9c8b7a",path:"/docs/terraform/resources/role.html",headers:[{level:2,title:"Example Usage",slug:"example-usage",normalizedTitle:"example usage",charIndex:53},{level:2,title:"Schema",slug:"schema",normalizedTitle:"schema",charIndex:391},{level:3,title:"Required",slug:"required",normalizedTitle:"required",charIndex:402},{level:3,title:"Optional",slug:"optional",normalizedTitle:"optional",charIndex:448},{level:3,title:"Nested Schema for permissions",slug:"nested-schema-for-permissions",normalizedTitle:"nested schema for permissions",charIndex:673},{level:2,title:"Import",slug:"import",normalizedTitle:"import",charIndex:823}],headersStr:"Example Usage Schema Required Optional Nested Schema for permissions Import",content:'# kestra_role (Resource)\n\nManages a Kestra Role.\n\n\n# Example Usage\n\nresource "kestra_role" "example" {\n  namespace   = "io.kestra.mynamespace"\n  name        = "Friendly name"\n  description = "Friendly description"\n\n  permissions {\n    type        = "FLOW"\n    permissions = ["READ", "UPDATE"]\n  }\n\n  permissions {\n    type        = "TEMPLATE"\n    permissions = ["READ", "UPDATE"]\n  }\n}\n\n\n\n# Schema\n\n\n# Required\n\n * name (String) The role name.\n\n\n# Optional\n\n * description (String) The role description.\n * id (String) The ID of this resource.\n * namespace (String) The linked namespace.\n * permissions (Block Set) The role permissions. (see below for nested schema)\n\n\n\n\n# Nested Schema for permissions\n\nRequired:\n\n * permissions (List of String) The permissions for this type.\n * type (String) The type of permission.\n\n\n# Import\n\nImport is supported using the following syntax:\n\nterraform import kestra_role.example {{role_id}}\n',normalizedContent:'# kestra_role (resource)\n\nmanages a kestra role.\n\n\n# example usage\n\nresource "kestra_role" "example" {\n  namespace   = "io.kestra.mynamespace"\n  name        = "friendly name"\n  description = "friendly description"\n\n  permissions {\n    type        = "flow"\n    permissions = ["read", "update"]\n  }\n\n  permissions {\n    type        = "template"\n    permissions = ["read", "update"]\n  }\n}\n\n\n\n# schema\n\n\n# required\n\n * name (string) the role name.\n\n\n# optional\n\n * description (string) the role description.\n * id (string) the id of this resource.\n * namespace (string) the linked namespace.\n * permissions (block set) the role permissions. (see below for nested schema)\n\n\n\n\n# nested schema for permissions\n\nrequired:\n\n * permissions (list of string) the permissions for this type.\n * type (string) the type of permission.\n\n\n# import\n\nimport is supported using the following syntax:\n\nterraform import kestra_role.example {{role_id}}\n',charsets:{}},{title:"kestra_template",frontmatter:{title:"kestra_template",editLink:!1,description:"Manages a Kestra Template.",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"kestra_template"},{property:"og:description",content:"Manages a Kestra Template. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/terraform/resources/template.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"kestra_template"},{name:"twitter:description",content:"Manages a Kestra Template. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/terraform/resources/template.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/terraform/resources/template.html",relativePath:"docs/terraform/resources/template.md",key:"v-01ccd343",path:"/docs/terraform/resources/template.html",headers:[{level:2,title:"Example Usage",slug:"example-usage",normalizedTitle:"example usage",charIndex:61},{level:2,title:"Schema",slug:"schema",normalizedTitle:"schema",charIndex:326},{level:3,title:"Required",slug:"required",normalizedTitle:"required",charIndex:337},{level:3,title:"Optional",slug:"optional",normalizedTitle:"optional",charIndex:500},{level:2,title:"Import",slug:"import",normalizedTitle:"import",charIndex:554}],headersStr:"Example Usage Schema Required Optional Import",content:'# kestra_template (Resource)\n\nManages a Kestra Template.\n\n\n# Example Usage\n\nresource "kestra_template" "example" {\n  namespace   = "io.kestra.mynamespace"\n  template_id = "my-template"\n  content     = <<EOT\ntasks:\n  - id: t2\n    type: io.kestra.core.tasks.debugs.Echo\n    format: first {{task.id}}\n    level: TRACE\nEOT\n}\n\n\n\n# Schema\n\n\n# Required\n\n * content (String) The template full content in yaml string.\n * namespace (String) The template namespace.\n * template_id (String) The template id.\n\n\n# Optional\n\n * id (String) The ID of this resource.\n\n\n# Import\n\nImport is supported using the following syntax:\n\nterraform import kestra_template.example {{namespace}}/{{template_id}}\n',normalizedContent:'# kestra_template (resource)\n\nmanages a kestra template.\n\n\n# example usage\n\nresource "kestra_template" "example" {\n  namespace   = "io.kestra.mynamespace"\n  template_id = "my-template"\n  content     = <<eot\ntasks:\n  - id: t2\n    type: io.kestra.core.tasks.debugs.echo\n    format: first {{task.id}}\n    level: trace\neot\n}\n\n\n\n# schema\n\n\n# required\n\n * content (string) the template full content in yaml string.\n * namespace (string) the template namespace.\n * template_id (string) the template id.\n\n\n# optional\n\n * id (string) the id of this resource.\n\n\n# import\n\nimport is supported using the following syntax:\n\nterraform import kestra_template.example {{namespace}}/{{template_id}}\n',charsets:{}},{title:"kestra_user",frontmatter:{title:"kestra_user",editLink:!1,description:"Manages a Kestra User.",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"kestra_user"},{property:"og:description",content:"Manages a Kestra User. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/terraform/resources/user.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"kestra_user"},{name:"twitter:description",content:"Manages a Kestra User. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/terraform/resources/user.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/terraform/resources/user.html",relativePath:"docs/terraform/resources/user.md",key:"v-575b40ba",path:"/docs/terraform/resources/user.html",headers:[{level:2,title:"Example Usage",slug:"example-usage",normalizedTitle:"example usage",charIndex:53},{level:2,title:"Schema",slug:"schema",normalizedTitle:"schema",charIndex:338},{level:3,title:"Required",slug:"required",normalizedTitle:"required",charIndex:349},{level:3,title:"Optional",slug:"optional",normalizedTitle:"optional",charIndex:399},{level:2,title:"Import",slug:"import",normalizedTitle:"import",charIndex:710}],headersStr:"Example Usage Schema Required Optional Import",content:'# kestra_user (Resource)\n\nManages a Kestra User.\n\n\n# Example Usage\n\nresource "kestra_user" "example" {\n  username    = "my-username"\n  namespace   = "io.kestra.mynamespace"\n  description = "Friendly description"\n  first_name  = "John"\n  last_name   = "Doe"\n  email       = "john@doe.com"\n  groups      = ["4by6NvSLcPXFhCj8nwbZOM"]\n}\n\n\n\n# Schema\n\n\n# Required\n\n * username (String) The user name.\n\n\n# Optional\n\n * description (String) The user description.\n * email (String) The user email.\n * first_name (String) The user first name.\n * groups (List of String) The user groups id.\n * id (String) The ID of this resource.\n * last_name (String) The user last name.\n * namespace (String) The linked namespace.\n\n\n# Import\n\nImport is supported using the following syntax:\n\nterraform import kestra_user.example {{user_id}}\n',normalizedContent:'# kestra_user (resource)\n\nmanages a kestra user.\n\n\n# example usage\n\nresource "kestra_user" "example" {\n  username    = "my-username"\n  namespace   = "io.kestra.mynamespace"\n  description = "friendly description"\n  first_name  = "john"\n  last_name   = "doe"\n  email       = "john@doe.com"\n  groups      = ["4by6nvslcpxfhcj8nwbzom"]\n}\n\n\n\n# schema\n\n\n# required\n\n * username (string) the user name.\n\n\n# optional\n\n * description (string) the user description.\n * email (string) the user email.\n * first_name (string) the user first name.\n * groups (list of string) the user groups id.\n * id (string) the id of this resource.\n * last_name (string) the user last name.\n * namespace (string) the linked namespace.\n\n\n# import\n\nimport is supported using the following syntax:\n\nterraform import kestra_user.example {{user_id}}\n',charsets:{}},{title:"kestrauserpassword",frontmatter:{title:"kestra_user_password",editLink:!1,description:"Manages a Kestra User Basic Auth Password.",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"kestrauserpassword"},{property:"og:description",content:"Manages a Kestra User Basic Auth Password. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/terraform/resources/user_password.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"kestrauserpassword"},{name:"twitter:description",content:"Manages a Kestra User Basic Auth Password. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/terraform/resources/user_password.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/terraform/resources/user_password.html",relativePath:"docs/terraform/resources/user_password.md",key:"v-e2dba7ba",path:"/docs/terraform/resources/user_password.html",headers:[{level:2,title:"Example Usage",slug:"example-usage",normalizedTitle:"example usage",charIndex:82},{level:2,title:"Schema",slug:"schema",normalizedTitle:"schema",charIndex:220},{level:3,title:"Required",slug:"required",normalizedTitle:"required",charIndex:231},{level:3,title:"Optional",slug:"optional",normalizedTitle:"optional",charIndex:329}],headersStr:"Example Usage Schema Required Optional",content:'# kestra_user_password (Resource)\n\nManages a Kestra User Basic Auth Password.\n\n\n# Example Usage\n\nresource "kestra_user_password" "example" {\n  user_id  = "4by6NvSLcPXFhCj8nwbZOM"\n  password = "my-random-password"\n}\n\n\n\n# Schema\n\n\n# Required\n\n * password (String, Sensitive) The user password.\n * user_id (String) The user id.\n\n\n# Optional\n\n * id (String) The ID of this resource.',normalizedContent:'# kestra_user_password (resource)\n\nmanages a kestra user basic auth password.\n\n\n# example usage\n\nresource "kestra_user_password" "example" {\n  user_id  = "4by6nvslcpxfhcj8nwbzom"\n  password = "my-random-password"\n}\n\n\n\n# schema\n\n\n# required\n\n * password (string, sensitive) the user password.\n * user_id (string) the user id.\n\n\n# optional\n\n * id (string) the id of this resource.',charsets:{}},{title:"User Interface Guide",frontmatter:{order:8,meta:[{property:"article:modified_time",content:"2021-11-19T08:25:55.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"User Interface Guide"},{property:"og:description",content:"User Interface Guide | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/user-interface-guide/"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"User Interface Guide"},{name:"twitter:description",content:"User Interface Guide | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/user-interface-guide/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/user-interface-guide/",relativePath:"docs/user-interface-guide/README.md",key:"v-209f3a3c",path:"/docs/user-interface-guide/",lastUpdated:"11/19/2021, 8:25:55 AM",lastUpdatedTimestamp:1637310355e3,headersStr:null,content:"# User Interface Guide\n\nKestra comes with a web user interface. For now, here are some screenshots, Later a full user guide will here.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",normalizedContent:"# user interface guide\n\nkestra comes with a web user interface. for now, here are some screenshots, later a full user guide will here.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",charsets:{}},{title:"Enterprise Edition",frontmatter:{title:"Enterprise Edition",layout:"FeaturesEnterprise",meta:[{property:"article:modified_time",content:"2022-01-21T22:06:05.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Enterprise Edition"},{property:"og:description",content:"Enterprise Edition | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/features/enterprise.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Enterprise Edition"},{name:"twitter:description",content:"Enterprise Edition | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/features/enterprise.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/features/enterprise.html",relativePath:"features/enterprise.md",key:"v-147fc603",path:"/features/enterprise.html",lastUpdated:"1/21/2022, 10:06:05 PM",lastUpdatedTimestamp:1642802765e3,headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"Features",frontmatter:{title:"Features",layout:"FeaturesFeatures",meta:[{property:"article:modified_time",content:"2021-12-13T17:52:53.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Features"},{property:"og:description",content:"Features | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/features/features.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Features"},{name:"twitter:description",content:"Features | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/features/features.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/features/features.html",relativePath:"features/features.md",key:"v-ce2ac07a",path:"/features/features.html",lastUpdated:"12/13/2021, 5:52:53 PM",lastUpdatedTimestamp:1639417973e3,headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"Usages",frontmatter:{title:"Usages",layout:"FeaturesUsage",meta:[{property:"article:modified_time",content:"2022-01-09T20:58:17.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Usages"},{property:"og:description",content:"Usages | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/features/usages.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Usages"},{name:"twitter:description",content:"Usages | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/features/usages.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/features/usages.html",relativePath:"features/usages.md",key:"v-4d379c23",path:"/features/usages.html",lastUpdated:"1/9/2022, 8:58:17 PM",lastUpdatedTimestamp:1641761897e3,headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"Plugins",frontmatter:{meta:[{property:"article:modified_time",content:"2020-11-09T20:39:04.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Plugins"},{property:"og:description",content:"Plugins | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Plugins"},{name:"twitter:description",content:"Plugins | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/",relativePath:"plugins/README.md",key:"v-8c82ad54",path:"/plugins/",lastUpdated:"11/9/2020, 8:39:04 PM",lastUpdatedTimestamp:1604954344e3,headersStr:null,content:"# Plugins\n\nThis section all the official plugins for Kestra that is maintained by core Kestra developpers.\n\nPlugins available are :",normalizedContent:"# plugins\n\nthis section all the official plugins for kestra that is maintained by core kestra developpers.\n\nplugins available are :",charsets:{}},{title:"Core",frontmatter:{title:"Core",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Core"},{property:"og:description",content:"Core | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/core/"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Core"},{name:"twitter:description",content:"Core | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/core/"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/core/",relativePath:"plugins/core/README.md",key:"v-cb94d530",path:"/plugins/core/",headers:[{level:2,title:"Storages",slug:"storages",normalizedTitle:"storages",charIndex:11},{level:3,title:"Tasks",slug:"tasks",normalizedTitle:"tasks",charIndex:24},{level:2,title:"Common",slug:"common",normalizedTitle:"common",charIndex:99},{level:3,title:"Triggers",slug:"triggers",normalizedTitle:"triggers",charIndex:110},{level:3,title:"Conditions",slug:"conditions",normalizedTitle:"conditions",charIndex:155},{level:2,title:"Debugs",slug:"debugs",normalizedTitle:"debugs",charIndex:495},{level:3,title:"Tasks",slug:"tasks-2",normalizedTitle:"tasks",charIndex:24},{level:2,title:"Executions",slug:"executions",normalizedTitle:"executions",charIndex:535},{level:3,title:"Tasks",slug:"tasks-3",normalizedTitle:"tasks",charIndex:24},{level:2,title:"Flows",slug:"flows",normalizedTitle:"flows",charIndex:571},{level:3,title:"Tasks",slug:"tasks-4",normalizedTitle:"tasks",charIndex:24},{level:2,title:"Scripts",slug:"scripts",normalizedTitle:"scripts",charIndex:737},{level:3,title:"Tasks",slug:"tasks-5",normalizedTitle:"tasks",charIndex:24},{level:2,title:"States",slug:"states",normalizedTitle:"states",charIndex:786},{level:3,title:"Tasks",slug:"tasks-6",normalizedTitle:"tasks",charIndex:24}],headersStr:"Storages Tasks Common Triggers Conditions Debugs Tasks Executions Tasks Flows Tasks Scripts Tasks States Tasks",content:"# Core\n\n\n# Storages\n\n\n# Tasks\n\n * Concat\n * Delete\n * Purge\n * PurgeExecution\n * Size\n * Split\n\n\n# Common\n\n\n# Triggers\n\n * Flow\n * Schedule\n * Webhook\n\n\n# Conditions\n\n * DateTimeBetweenCondition\n * DayWeekCondition\n * DayWeekInMonthCondition\n * ExecutionFlowCondition\n * ExecutionNamespaceCondition\n * ExecutionStatusCondition\n * FlowCondition\n * FlowNamespaceCondition\n * HasRetryAttemptCondition\n * MultipleCondition\n * NotCondition\n * OrCondition\n * VariableCondition\n * WeekendCondition\n\n\n# Debugs\n\n\n# Tasks\n\n * Echo\n * Return\n\n\n# Executions\n\n\n# Tasks\n\n * Counts\n\n\n# Flows\n\n\n# Tasks\n\n * AllowFailure\n * EachParallel\n * EachSequential\n * Flow\n * Parallel\n * Pause\n * Sequential\n * Switch\n * Template\n * ExecutorTemplate\n * Worker\n\n\n# Scripts\n\n\n# Tasks\n\n * Bash\n * Node\n * Python\n\n\n# States\n\n\n# Tasks\n\n * Delete\n * Get\n * Set",normalizedContent:"# core\n\n\n# storages\n\n\n# tasks\n\n * concat\n * delete\n * purge\n * purgeexecution\n * size\n * split\n\n\n# common\n\n\n# triggers\n\n * flow\n * schedule\n * webhook\n\n\n# conditions\n\n * datetimebetweencondition\n * dayweekcondition\n * dayweekinmonthcondition\n * executionflowcondition\n * executionnamespacecondition\n * executionstatuscondition\n * flowcondition\n * flownamespacecondition\n * hasretryattemptcondition\n * multiplecondition\n * notcondition\n * orcondition\n * variablecondition\n * weekendcondition\n\n\n# debugs\n\n\n# tasks\n\n * echo\n * return\n\n\n# executions\n\n\n# tasks\n\n * counts\n\n\n# flows\n\n\n# tasks\n\n * allowfailure\n * eachparallel\n * eachsequential\n * flow\n * parallel\n * pause\n * sequential\n * switch\n * template\n * executortemplate\n * worker\n\n\n# scripts\n\n\n# tasks\n\n * bash\n * node\n * python\n\n\n# states\n\n\n# tasks\n\n * delete\n * get\n * set",charsets:{}},{title:"DateTimeBetweenCondition",frontmatter:{title:"DateTimeBetweenCondition",editLink:!1,description:"Condition for allows events between two specific datetimes",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"DateTimeBetweenCondition"},{property:"og:description",content:"Condition for allows events between two specific datetimes | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/core/conditions/io.kestra.core.models.conditions.types.DateTimeBetweenCondition.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"DateTimeBetweenCondition"},{name:"twitter:description",content:"Condition for allows events between two specific datetimes | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/core/conditions/io.kestra.core.models.conditions.types.DateTimeBetweenCondition.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/core/conditions/io.kestra.core.models.conditions.types.DateTimeBetweenCondition.html",relativePath:"plugins/core/conditions/io.kestra.core.models.conditions.types.DateTimeBetweenCondition.md",key:"v-afdbda3a",path:"/plugins/core/conditions/io.kestra.core.models.conditions.types.DateTimeBetweenCondition.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:165},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:305},{level:3,title:"after",slug:"after",normalizedTitle:"after",charIndex:271},{level:3,title:"before",slug:"before",normalizedTitle:"before",charIndex:408},{level:3,title:"date",slug:"date",normalizedTitle:"date",charIndex:151}],headersStr:"Examples Properties after before date",content:'DateTimeBetweenCondition\n\ntype: "io.kestra.core.models.conditions.types.DateTimeBetweenCondition"\n\n\n> Condition for allows events between two specific datetimes\n\n\n# Examples\n\n- conditions:\n    - type: io.kestra.core.models.conditions.types.DateTimeBetweenCondition\n      after: "2013-09-08T16:19:12"\n\n\n\n# Properties\n\n\n# after\n\n * Type: string\n * Dynamic: ❌\n * Required: ❌\n\n> The date must after this one\n\n\n# before\n\n * Type: string\n * Dynamic: ❌\n * Required: ❌\n\n> The date must before this one\n\n\n# date\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Default: {{ now() }}\n\n> The date to test\n\nCan be any variable or any valid ISO 8601 datetime, default will use {{ now() }}',normalizedContent:'datetimebetweencondition\n\ntype: "io.kestra.core.models.conditions.types.datetimebetweencondition"\n\n\n> condition for allows events between two specific datetimes\n\n\n# examples\n\n- conditions:\n    - type: io.kestra.core.models.conditions.types.datetimebetweencondition\n      after: "2013-09-08t16:19:12"\n\n\n\n# properties\n\n\n# after\n\n * type: string\n * dynamic: ❌\n * required: ❌\n\n> the date must after this one\n\n\n# before\n\n * type: string\n * dynamic: ❌\n * required: ❌\n\n> the date must before this one\n\n\n# date\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * default: {{ now() }}\n\n> the date to test\n\ncan be any variable or any valid iso 8601 datetime, default will use {{ now() }}',charsets:{}},{title:"DayWeekCondition",frontmatter:{title:"DayWeekCondition",editLink:!1,description:"Condition for allows events on weekdays",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"DayWeekCondition"},{property:"og:description",content:"Condition for allows events on weekdays | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/core/conditions/io.kestra.core.models.conditions.types.DayWeekCondition.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"DayWeekCondition"},{name:"twitter:description",content:"Condition for allows events on weekdays | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/core/conditions/io.kestra.core.models.conditions.types.DayWeekCondition.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/core/conditions/io.kestra.core.models.conditions.types.DayWeekCondition.html",relativePath:"plugins/core/conditions/io.kestra.core.models.conditions.types.DayWeekCondition.md",key:"v-16365a03",path:"/plugins/core/conditions/io.kestra.core.models.conditions.types.DayWeekCondition.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:130},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:253},{level:3,title:"date",slug:"date",normalizedTitle:"date",charIndex:268},{level:3,title:"dayOfWeek",slug:"dayofweek",normalizedTitle:"dayofweek",charIndex:228}],headersStr:"Examples Properties date dayOfWeek",content:'DayWeekCondition\n\ntype: "io.kestra.core.models.conditions.types.DayWeekCondition"\n\n\n> Condition for allows events on weekdays\n\n\n# Examples\n\n- conditions:\n    - type: io.kestra.core.models.conditions.types.DayWeekCondition\n      dayOfWeek: "MONDAY"\n\n\n\n# Properties\n\n\n# date\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Default: {{ now(format="iso_local_date") }}\n\n> The date to test\n\nCan be any variable or any valid ISO 8601 datetime, default will use {{ now(format="iso_local_date") }}\n\n\n# dayOfWeek\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ✔️\n\n * Possible Values:\n   \n   * MONDAY\n   * TUESDAY\n   * WEDNESDAY\n   * THURSDAY\n   * FRIDAY\n   * SATURDAY\n   * SUNDAY\n\n> The day of week',normalizedContent:'dayweekcondition\n\ntype: "io.kestra.core.models.conditions.types.dayweekcondition"\n\n\n> condition for allows events on weekdays\n\n\n# examples\n\n- conditions:\n    - type: io.kestra.core.models.conditions.types.dayweekcondition\n      dayofweek: "monday"\n\n\n\n# properties\n\n\n# date\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * default: {{ now(format="iso_local_date") }}\n\n> the date to test\n\ncan be any variable or any valid iso 8601 datetime, default will use {{ now(format="iso_local_date") }}\n\n\n# dayofweek\n\n * type: string\n\n * dynamic: ❌\n\n * required: ✔️\n\n * possible values:\n   \n   * monday\n   * tuesday\n   * wednesday\n   * thursday\n   * friday\n   * saturday\n   * sunday\n\n> the day of week',charsets:{}},{title:"DayWeekInMonthCondition",frontmatter:{title:"DayWeekInMonthCondition",editLink:!1,description:"Condition for allows events on weekdays relative to current month (first, last, ...)",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"DayWeekInMonthCondition"},{property:"og:description",content:"Condition for allows events on weekdays relative to current month (first, last, ...) | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/core/conditions/io.kestra.core.models.conditions.types.DayWeekInMonthCondition.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"DayWeekInMonthCondition"},{name:"twitter:description",content:"Condition for allows events on weekdays relative to current month (first, last, ...) | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/core/conditions/io.kestra.core.models.conditions.types.DayWeekInMonthCondition.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/core/conditions/io.kestra.core.models.conditions.types.DayWeekInMonthCondition.html",relativePath:"plugins/core/conditions/io.kestra.core.models.conditions.types.DayWeekInMonthCondition.md",key:"v-077dee92",path:"/plugins/core/conditions/io.kestra.core.models.conditions.types.DayWeekInMonthCondition.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:189},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:341},{level:3,title:"date",slug:"date",normalizedTitle:"date",charIndex:356},{level:3,title:"dayInMonth",slug:"dayinmonth",normalizedTitle:"dayinmonth",charIndex:318},{level:3,title:"dayOfWeek",slug:"dayofweek",normalizedTitle:"dayofweek",charIndex:294}],headersStr:"Examples Properties date dayInMonth dayOfWeek",content:'DayWeekInMonthCondition\n\ntype: "io.kestra.core.models.conditions.types.DayWeekInMonthCondition"\n\n\n> Condition for allows events on weekdays relative to current month (first, last, ...)\n\n\n# Examples\n\n- conditions:\n    - type: io.kestra.core.models.conditions.types.DayWeekInMonthCondition\n      dayOfWeek: MONDAY\n      dayInMonth: FIRST\n\n\n\n# Properties\n\n\n# date\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Default: {{ now(format="iso_local_date") }}\n\n> The date to test\n\nCan be any variable or any valid ISO 8601 datetime, default will use {{ now(format="iso_local_date") }}\n\n\n# dayInMonth\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ✔️\n\n * Possible Values:\n   \n   * FIRST\n   * LAST\n   * SECOND\n   * THIRD\n   * FOURTH\n\n> Are you looking at first or last day in month\n\n\n# dayOfWeek\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ✔️\n\n * Possible Values:\n   \n   * MONDAY\n   * TUESDAY\n   * WEDNESDAY\n   * THURSDAY\n   * FRIDAY\n   * SATURDAY\n   * SUNDAY\n\n> The day of week',normalizedContent:'dayweekinmonthcondition\n\ntype: "io.kestra.core.models.conditions.types.dayweekinmonthcondition"\n\n\n> condition for allows events on weekdays relative to current month (first, last, ...)\n\n\n# examples\n\n- conditions:\n    - type: io.kestra.core.models.conditions.types.dayweekinmonthcondition\n      dayofweek: monday\n      dayinmonth: first\n\n\n\n# properties\n\n\n# date\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * default: {{ now(format="iso_local_date") }}\n\n> the date to test\n\ncan be any variable or any valid iso 8601 datetime, default will use {{ now(format="iso_local_date") }}\n\n\n# dayinmonth\n\n * type: string\n\n * dynamic: ❌\n\n * required: ✔️\n\n * possible values:\n   \n   * first\n   * last\n   * second\n   * third\n   * fourth\n\n> are you looking at first or last day in month\n\n\n# dayofweek\n\n * type: string\n\n * dynamic: ❌\n\n * required: ✔️\n\n * possible values:\n   \n   * monday\n   * tuesday\n   * wednesday\n   * thursday\n   * friday\n   * saturday\n   * sunday\n\n> the day of week',charsets:{}},{title:"ExecutionFlowCondition",frontmatter:{title:"ExecutionFlowCondition",editLink:!1,description:"Condition for a specific flow of an execution",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"ExecutionFlowCondition"},{property:"og:description",content:"Condition for a specific flow of an execution | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/core/conditions/io.kestra.core.models.conditions.types.ExecutionFlowCondition.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"ExecutionFlowCondition"},{name:"twitter:description",content:"Condition for a specific flow of an execution | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/core/conditions/io.kestra.core.models.conditions.types.ExecutionFlowCondition.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/core/conditions/io.kestra.core.models.conditions.types.ExecutionFlowCondition.html",relativePath:"plugins/core/conditions/io.kestra.core.models.conditions.types.ExecutionFlowCondition.md",key:"v-1813e7fa",path:"/plugins/core/conditions/io.kestra.core.models.conditions.types.ExecutionFlowCondition.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:148},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:314},{level:3,title:"flowId",slug:"flowid",normalizedTitle:"flowid",charIndex:285},{level:3,title:"namespace",slug:"namespace",normalizedTitle:"namespace",charIndex:252}],headersStr:"Examples Properties flowId namespace",content:'ExecutionFlowCondition\n\ntype: "io.kestra.core.models.conditions.types.ExecutionFlowCondition"\n\n\n> Condition for a specific flow of an execution\n\n\n# Examples\n\n- conditions:\n    - type: io.kestra.core.models.conditions.types.ExecutionFlowCondition\n      namespace: io.kestra.tests\n      flowId: my-current-flow\n\n\n\n# Properties\n\n\n# flowId\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n\n> The flow id\n\n\n# namespace\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n\n> The namespace of the flow',normalizedContent:'executionflowcondition\n\ntype: "io.kestra.core.models.conditions.types.executionflowcondition"\n\n\n> condition for a specific flow of an execution\n\n\n# examples\n\n- conditions:\n    - type: io.kestra.core.models.conditions.types.executionflowcondition\n      namespace: io.kestra.tests\n      flowid: my-current-flow\n\n\n\n# properties\n\n\n# flowid\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n\n> the flow id\n\n\n# namespace\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n\n> the namespace of the flow',charsets:{}},{title:"ExecutionNamespaceCondition",frontmatter:{title:"ExecutionNamespaceCondition",editLink:!1,description:"Condition for an execution namespace",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"ExecutionNamespaceCondition"},{property:"og:description",content:"Condition for an execution namespace | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/core/conditions/io.kestra.core.models.conditions.types.ExecutionNamespaceCondition.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"ExecutionNamespaceCondition"},{name:"twitter:description",content:"Condition for an execution namespace | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/core/conditions/io.kestra.core.models.conditions.types.ExecutionNamespaceCondition.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/core/conditions/io.kestra.core.models.conditions.types.ExecutionNamespaceCondition.html",relativePath:"plugins/core/conditions/io.kestra.core.models.conditions.types.ExecutionNamespaceCondition.md",key:"v-01b63a32",path:"/plugins/core/conditions/io.kestra.core.models.conditions.types.ExecutionNamespaceCondition.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:149},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:309},{level:3,title:"namespace",slug:"namespace",normalizedTitle:"namespace",charIndex:135},{level:3,title:"prefix",slug:"prefix",normalizedTitle:"prefix",charIndex:291}],headersStr:"Examples Properties namespace prefix",content:'ExecutionNamespaceCondition\n\ntype: "io.kestra.core.models.conditions.types.ExecutionNamespaceCondition"\n\n\n> Condition for an execution namespace\n\n\n# Examples\n\n- conditions:\n    - type: io.kestra.core.models.conditions.types.ExecutionNamespaceCondition\n      namespace: io.kestra.tests\n      prefix: true\n\n\n\n# Properties\n\n\n# namespace\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n\nThe namespace of the flow or the prefix if prefix is true\n\n\n# prefix\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: false\n\nIf we must look at the flow namespace by prefix (simple startWith case sensitive)',normalizedContent:'executionnamespacecondition\n\ntype: "io.kestra.core.models.conditions.types.executionnamespacecondition"\n\n\n> condition for an execution namespace\n\n\n# examples\n\n- conditions:\n    - type: io.kestra.core.models.conditions.types.executionnamespacecondition\n      namespace: io.kestra.tests\n      prefix: true\n\n\n\n# properties\n\n\n# namespace\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n\nthe namespace of the flow or the prefix if prefix is true\n\n\n# prefix\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: false\n\nif we must look at the flow namespace by prefix (simple startwith case sensitive)',charsets:{}},{title:"ExecutionStatusCondition",frontmatter:{title:"ExecutionStatusCondition",editLink:!1,description:"Condition based on execution status",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"ExecutionStatusCondition"},{property:"og:description",content:"Condition based on execution status | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/core/conditions/io.kestra.core.models.conditions.types.ExecutionStatusCondition.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"ExecutionStatusCondition"},{name:"twitter:description",content:"Condition based on execution status | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/core/conditions/io.kestra.core.models.conditions.types.ExecutionStatusCondition.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/core/conditions/io.kestra.core.models.conditions.types.ExecutionStatusCondition.html",relativePath:"plugins/core/conditions/io.kestra.core.models.conditions.types.ExecutionStatusCondition.md",key:"v-2ad254c3",path:"/plugins/core/conditions/io.kestra.core.models.conditions.types.ExecutionStatusCondition.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:142},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:306},{level:3,title:"in",slug:"in",normalizedTitle:"in",charIndex:248},{level:3,title:"notIn",slug:"notin",normalizedTitle:"notin",charIndex:276}],headersStr:"Examples Properties in notIn",content:'ExecutionStatusCondition\n\ntype: "io.kestra.core.models.conditions.types.ExecutionStatusCondition"\n\n\n> Condition based on execution status\n\n\n# Examples\n\n- conditions:\n    - type: io.kestra.core.models.conditions.types.ExecutionStatusCondition\n      in:\n        - SUCCESS\n      notIn: \n        - FAILED\n\n\n\n# Properties\n\n\n# in\n\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n\n> List of state that are authorized\n\n\n# notIn\n\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n\n> List of state that aren\'t authorized',normalizedContent:'executionstatuscondition\n\ntype: "io.kestra.core.models.conditions.types.executionstatuscondition"\n\n\n> condition based on execution status\n\n\n# examples\n\n- conditions:\n    - type: io.kestra.core.models.conditions.types.executionstatuscondition\n      in:\n        - success\n      notin: \n        - failed\n\n\n\n# properties\n\n\n# in\n\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n\n> list of state that are authorized\n\n\n# notin\n\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n\n> list of state that aren\'t authorized',charsets:{}},{title:"FlowCondition",frontmatter:{title:"FlowCondition",editLink:!1,description:"Condition for a specific flow",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"FlowCondition"},{property:"og:description",content:"Condition for a specific flow | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/core/conditions/io.kestra.core.models.conditions.types.FlowCondition.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"FlowCondition"},{name:"twitter:description",content:"Condition for a specific flow | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/core/conditions/io.kestra.core.models.conditions.types.FlowCondition.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/core/conditions/io.kestra.core.models.conditions.types.FlowCondition.html",relativePath:"plugins/core/conditions/io.kestra.core.models.conditions.types.FlowCondition.md",key:"v-62e587fd",path:"/plugins/core/conditions/io.kestra.core.models.conditions.types.FlowCondition.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:114},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:271},{level:3,title:"flowId",slug:"flowid",normalizedTitle:"flowid",charIndex:242},{level:3,title:"namespace",slug:"namespace",normalizedTitle:"namespace",charIndex:209}],headersStr:"Examples Properties flowId namespace",content:'FlowCondition\n\ntype: "io.kestra.core.models.conditions.types.FlowCondition"\n\n\n> Condition for a specific flow\n\n\n# Examples\n\n- conditions:\n    - type: io.kestra.core.models.conditions.types.FlowCondition\n      namespace: io.kestra.tests\n      flowId: my-current-flow\n\n\n\n# Properties\n\n\n# flowId\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n\n> The flow id\n\n\n# namespace\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n\n> The namespace of the flow',normalizedContent:'flowcondition\n\ntype: "io.kestra.core.models.conditions.types.flowcondition"\n\n\n> condition for a specific flow\n\n\n# examples\n\n- conditions:\n    - type: io.kestra.core.models.conditions.types.flowcondition\n      namespace: io.kestra.tests\n      flowid: my-current-flow\n\n\n\n# properties\n\n\n# flowid\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n\n> the flow id\n\n\n# namespace\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n\n> the namespace of the flow',charsets:{}},{title:"FlowNamespaceCondition",frontmatter:{title:"FlowNamespaceCondition",editLink:!1,description:"Condition for a flow namespace",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"FlowNamespaceCondition"},{property:"og:description",content:"Condition for a flow namespace | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/core/conditions/io.kestra.core.models.conditions.types.FlowNamespaceCondition.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"FlowNamespaceCondition"},{name:"twitter:description",content:"Condition for a flow namespace | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/core/conditions/io.kestra.core.models.conditions.types.FlowNamespaceCondition.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/core/conditions/io.kestra.core.models.conditions.types.FlowNamespaceCondition.html",relativePath:"plugins/core/conditions/io.kestra.core.models.conditions.types.FlowNamespaceCondition.md",key:"v-26cecde3",path:"/plugins/core/conditions/io.kestra.core.models.conditions.types.FlowNamespaceCondition.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:133},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:288},{level:3,title:"namespace",slug:"namespace",normalizedTitle:"namespace",charIndex:119},{level:3,title:"prefix",slug:"prefix",normalizedTitle:"prefix",charIndex:270}],headersStr:"Examples Properties namespace prefix",content:'FlowNamespaceCondition\n\ntype: "io.kestra.core.models.conditions.types.FlowNamespaceCondition"\n\n\n> Condition for a flow namespace\n\n\n# Examples\n\n- conditions:\n    - type: io.kestra.core.models.conditions.types.FlowNamespaceCondition\n      namespace: io.kestra.tests\n      prefix: true\n\n\n\n# Properties\n\n\n# namespace\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n\n> The namespace of the flow or the prefix if prefix is true\n\n\n# prefix\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: false\n\n> If we must look at the flow namespace by prefix (simple startWith case sensitive)',normalizedContent:'flownamespacecondition\n\ntype: "io.kestra.core.models.conditions.types.flownamespacecondition"\n\n\n> condition for a flow namespace\n\n\n# examples\n\n- conditions:\n    - type: io.kestra.core.models.conditions.types.flownamespacecondition\n      namespace: io.kestra.tests\n      prefix: true\n\n\n\n# properties\n\n\n# namespace\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n\n> the namespace of the flow or the prefix if prefix is true\n\n\n# prefix\n\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: false\n\n> if we must look at the flow namespace by prefix (simple startwith case sensitive)',charsets:{}},{title:"HasRetryAttemptCondition",frontmatter:{title:"HasRetryAttemptCondition",editLink:!1,description:"Condition that match if any taskRun have any multiple attempts retries",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"HasRetryAttemptCondition"},{property:"og:description",content:"Condition that match if any taskRun have any multiple attempts retries | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/core/conditions/io.kestra.core.models.conditions.types.HasRetryAttemptCondition.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"HasRetryAttemptCondition"},{name:"twitter:description",content:"Condition that match if any taskRun have any multiple attempts retries | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/core/conditions/io.kestra.core.models.conditions.types.HasRetryAttemptCondition.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/core/conditions/io.kestra.core.models.conditions.types.HasRetryAttemptCondition.html",relativePath:"plugins/core/conditions/io.kestra.core.models.conditions.types.HasRetryAttemptCondition.md",key:"v-44d81fa3",path:"/plugins/core/conditions/io.kestra.core.models.conditions.types.HasRetryAttemptCondition.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:177},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:309},{level:3,title:"in",slug:"in",normalizedTitle:"in",charIndex:283},{level:3,title:"notIn",slug:"notin",normalizedTitle:"notin",charIndex:432}],headersStr:"Examples Properties in notIn",content:'HasRetryAttemptCondition\n\ntype: "io.kestra.core.models.conditions.types.HasRetryAttemptCondition"\n\n\n> Condition that match if any taskRun have any multiple attempts retries\n\n\n# Examples\n\n- conditions:\n    - type: io.kestra.core.models.conditions.types.HasRetryAttemptCondition\n      in:\n        - KILLED\n\n\n\n# Properties\n\n\n# in\n\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n\n> List of state that are authorized\n\n\n# notIn\n\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n\n> List of state that aren\'t authorized',normalizedContent:'hasretryattemptcondition\n\ntype: "io.kestra.core.models.conditions.types.hasretryattemptcondition"\n\n\n> condition that match if any taskrun have any multiple attempts retries\n\n\n# examples\n\n- conditions:\n    - type: io.kestra.core.models.conditions.types.hasretryattemptcondition\n      in:\n        - killed\n\n\n\n# properties\n\n\n# in\n\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n\n> list of state that are authorized\n\n\n# notin\n\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n\n> list of state that aren\'t authorized',charsets:{}},{title:"MultipleCondition",frontmatter:{title:"MultipleCondition",editLink:!1,description:"Condition for a list of flow",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"MultipleCondition"},{property:"og:description",content:"Condition for a list of flow | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/core/conditions/io.kestra.core.models.conditions.types.MultipleCondition.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"MultipleCondition"},{name:"twitter:description",content:"Condition for a list of flow | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/core/conditions/io.kestra.core.models.conditions.types.MultipleCondition.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/core/conditions/io.kestra.core.models.conditions.types.MultipleCondition.html",relativePath:"plugins/core/conditions/io.kestra.core.models.conditions.types.MultipleCondition.md",key:"v-61ce6341",path:"/plugins/core/conditions/io.kestra.core.models.conditions.types.MultipleCondition.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:211},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:1080},{level:3,title:"conditions",slug:"conditions",normalizedTitle:"conditions",charIndex:48},{level:3,title:"id",slug:"id",normalizedTitle:"id",charIndex:302},{level:3,title:"window",slug:"window",normalizedTitle:"window",charIndex:191},{level:3,title:"windowAdvance",slug:"windowadvance",normalizedTitle:"windowadvance",charIndex:515},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:2359}],headersStr:"Examples Properties conditions id window windowAdvance Definitions",content:'MultipleCondition\n\ntype: "io.kestra.core.models.conditions.types.MultipleCondition"\n\n\n> Condition for a list of flow\n\nTrigger the first time all the flow are successfully executed during the window duration\n\n\n# Examples\n\n> A flow that is waiting for 2 flows that is successful in 1 days\n\ntriggers:\n  - id: multiple-listen-flow\n    type: io.kestra.core.models.triggers.types.Flow\n    conditions:\n      - id: multiple\n        type: io.kestra.core.models.conditions.types.MultipleCondition\n        window: P1D\n        windowAdvance: P0D\n        conditions:\n          success:\n            type: io.kestra.core.models.conditions.types.ExecutionStatusCondition\n            in:\n              - SUCCESS\n          flow-a:\n            type: io.kestra.core.models.conditions.types.ExecutionFlowCondition\n            namespace: io.kestra.tests\n            flowId: trigger-multiplecondition-flow-a\n          flow-b:\n            type: io.kestra.core.models.conditions.types.ExecutionFlowCondition\n            namespace: io.kestra.tests\n            flowId: trigger-multiplecondition-flow-b\n\n\n\n# Properties\n\n\n# conditions\n\n * Type: object\n * SubType: ====\n * Dynamic: ❌\n * Required: ✔️\n\n> The list of conditions to wait for\n\nThe key must be unique for a trigger since it will be use to store previous result.\n\n\n# id\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n * Validation regExp: [a-zA-Z0-9_-]+\n * Min length: 1\n\n> A unique id for the whole flow\n\n\n# window\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n * Format: duration\n\n> The duration of the window\n\nSee ISO_8601 Durations for more information of available duration value.\nThe start of the window is always based on midnight except if you set windowAdvance parameter. Eg if you have a 10 minutes (PT10M) window, the first window will be 00:00 to 00:10 and a new window will be started each 10 minutes\n\n\n# windowAdvance\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n * Format: duration\n\n> The window advance duration\n\nAllow to specify the start hour of the window\nEg: you want a window of 6 hours (window=PT6H). By default the check will be done between:\n00:00 and 06:00 - 06:00 and 12:00 - 12:00 and 18:00 - 18:00 and 00:00 If you want to check the window between:\n03:00 and 09:00 - 09:00 and 15:00 - 15:00 and 21:00 - 21:00 and 3:00You will have to shift the window of 3 hours by settings windowAdvance: PT3H\n\n\n# Definitions',normalizedContent:'multiplecondition\n\ntype: "io.kestra.core.models.conditions.types.multiplecondition"\n\n\n> condition for a list of flow\n\ntrigger the first time all the flow are successfully executed during the window duration\n\n\n# examples\n\n> a flow that is waiting for 2 flows that is successful in 1 days\n\ntriggers:\n  - id: multiple-listen-flow\n    type: io.kestra.core.models.triggers.types.flow\n    conditions:\n      - id: multiple\n        type: io.kestra.core.models.conditions.types.multiplecondition\n        window: p1d\n        windowadvance: p0d\n        conditions:\n          success:\n            type: io.kestra.core.models.conditions.types.executionstatuscondition\n            in:\n              - success\n          flow-a:\n            type: io.kestra.core.models.conditions.types.executionflowcondition\n            namespace: io.kestra.tests\n            flowid: trigger-multiplecondition-flow-a\n          flow-b:\n            type: io.kestra.core.models.conditions.types.executionflowcondition\n            namespace: io.kestra.tests\n            flowid: trigger-multiplecondition-flow-b\n\n\n\n# properties\n\n\n# conditions\n\n * type: object\n * subtype: ====\n * dynamic: ❌\n * required: ✔️\n\n> the list of conditions to wait for\n\nthe key must be unique for a trigger since it will be use to store previous result.\n\n\n# id\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n * validation regexp: [a-za-z0-9_-]+\n * min length: 1\n\n> a unique id for the whole flow\n\n\n# window\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n * format: duration\n\n> the duration of the window\n\nsee iso_8601 durations for more information of available duration value.\nthe start of the window is always based on midnight except if you set windowadvance parameter. eg if you have a 10 minutes (pt10m) window, the first window will be 00:00 to 00:10 and a new window will be started each 10 minutes\n\n\n# windowadvance\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n * format: duration\n\n> the window advance duration\n\nallow to specify the start hour of the window\neg: you want a window of 6 hours (window=pt6h). by default the check will be done between:\n00:00 and 06:00 - 06:00 and 12:00 - 12:00 and 18:00 - 18:00 and 00:00 if you want to check the window between:\n03:00 and 09:00 - 09:00 and 15:00 - 15:00 and 21:00 - 21:00 and 3:00you will have to shift the window of 3 hours by settings windowadvance: pt3h\n\n\n# definitions',charsets:{}},{title:"NotCondition",frontmatter:{title:"NotCondition",editLink:!1,description:"Condition to exclude others conditions",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"NotCondition"},{property:"og:description",content:"Condition to exclude others conditions | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/core/conditions/io.kestra.core.models.conditions.types.NotCondition.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"NotCondition"},{name:"twitter:description",content:"Condition to exclude others conditions | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/core/conditions/io.kestra.core.models.conditions.types.NotCondition.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/core/conditions/io.kestra.core.models.conditions.types.NotCondition.html",relativePath:"plugins/core/conditions/io.kestra.core.models.conditions.types.NotCondition.md",key:"v-71a5b7ba",path:"/plugins/core/conditions/io.kestra.core.models.conditions.types.NotCondition.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:121},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:345},{level:3,title:"conditions",slug:"conditions",normalizedTitle:"conditions",charIndex:43},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:560}],headersStr:"Examples Properties conditions Definitions",content:'NotCondition\n\ntype: "io.kestra.core.models.conditions.types.NotCondition"\n\n\n> Condition to exclude others conditions\n\n\n# Examples\n\n- conditions:\n    - type: io.kestra.core.models.conditions.types.NotCondition\n      conditions:\n      -  type: io.kestra.core.models.conditions.types.DateBetweenCondition\n         after: "2013-09-08T16:19:12"\n\n\n\n# Properties\n\n\n# conditions\n\n * Type: array\n * SubType: Condition-2\n * Dynamic: ❌\n * Required: ✔️\n * Min items: 1\n\n> The list of conditions to exclude\n\nIf any conditions is true, it will prevent events execution.\n\n\n# Definitions',normalizedContent:'notcondition\n\ntype: "io.kestra.core.models.conditions.types.notcondition"\n\n\n> condition to exclude others conditions\n\n\n# examples\n\n- conditions:\n    - type: io.kestra.core.models.conditions.types.notcondition\n      conditions:\n      -  type: io.kestra.core.models.conditions.types.datebetweencondition\n         after: "2013-09-08t16:19:12"\n\n\n\n# properties\n\n\n# conditions\n\n * type: array\n * subtype: condition-2\n * dynamic: ❌\n * required: ✔️\n * min items: 1\n\n> the list of conditions to exclude\n\nif any conditions is true, it will prevent events execution.\n\n\n# definitions',charsets:{}},{title:"OrCondition",frontmatter:{title:"OrCondition",editLink:!1,description:"Condition to have at least once conditions validated",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"OrCondition"},{property:"og:description",content:"Condition to have at least once conditions validated | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/core/conditions/io.kestra.core.models.conditions.types.OrCondition.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"OrCondition"},{name:"twitter:description",content:"Condition to have at least once conditions validated | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/core/conditions/io.kestra.core.models.conditions.types.OrCondition.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/core/conditions/io.kestra.core.models.conditions.types.OrCondition.html",relativePath:"plugins/core/conditions/io.kestra.core.models.conditions.types.OrCondition.md",key:"v-8448cf32",path:"/plugins/core/conditions/io.kestra.core.models.conditions.types.OrCondition.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:133},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:443},{level:3,title:"conditions",slug:"conditions",normalizedTitle:"conditions",charIndex:42},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:646}],headersStr:"Examples Properties conditions Definitions",content:'OrCondition\n\ntype: "io.kestra.core.models.conditions.types.OrCondition"\n\n\n> Condition to have at least once conditions validated\n\n\n# Examples\n\n- conditions:\n    - type: io.kestra.core.models.conditions.types.OrCondition\n      conditions:\n      -  type: io.kestra.core.models.conditions.types.DayWeekCondition\n         dayOfWeek: "MONDAY"\n      -  type: io.kestra.core.models.conditions.types.DayWeekCondition\n         dayOfWeek: "SUNDAY"\n\n\n\n# Properties\n\n\n# conditions\n\n * Type: array\n * SubType: Condition-2\n * Dynamic: ❌\n * Required: ✔️\n * Min items: 1\n\n> The list of conditions to exclude\n\nIf any conditions is true, it will allow events.\n\n\n# Definitions',normalizedContent:'orcondition\n\ntype: "io.kestra.core.models.conditions.types.orcondition"\n\n\n> condition to have at least once conditions validated\n\n\n# examples\n\n- conditions:\n    - type: io.kestra.core.models.conditions.types.orcondition\n      conditions:\n      -  type: io.kestra.core.models.conditions.types.dayweekcondition\n         dayofweek: "monday"\n      -  type: io.kestra.core.models.conditions.types.dayweekcondition\n         dayofweek: "sunday"\n\n\n\n# properties\n\n\n# conditions\n\n * type: array\n * subtype: condition-2\n * dynamic: ❌\n * required: ✔️\n * min items: 1\n\n> the list of conditions to exclude\n\nif any conditions is true, it will allow events.\n\n\n# definitions',charsets:{}},{title:"VariableCondition",frontmatter:{title:"VariableCondition",editLink:!1,description:"Condition based on variables expression",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"VariableCondition"},{property:"og:description",content:"Condition based on variables expression | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/core/conditions/io.kestra.core.models.conditions.types.VariableCondition.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"VariableCondition"},{name:"twitter:description",content:"Condition based on variables expression | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/core/conditions/io.kestra.core.models.conditions.types.VariableCondition.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/core/conditions/io.kestra.core.models.conditions.types.VariableCondition.html",relativePath:"plugins/core/conditions/io.kestra.core.models.conditions.types.VariableCondition.md",key:"v-a441d7ce",path:"/plugins/core/conditions/io.kestra.core.models.conditions.types.VariableCondition.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:236},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:438},{level:3,title:"expression",slug:"expression",normalizedTitle:"expression",charIndex:117}],headersStr:"Examples Properties expression",content:'VariableCondition\n\ntype: "io.kestra.core.models.conditions.types.VariableCondition"\n\n\n> Condition based on variables expression\n\nIf the result is an empty string, a string containing only space or false, the condition will be false\n\n\n# Examples\n\n> A condition that will return false for a missing variable\n\n- conditions:\n    - type: io.kestra.core.models.conditions.types.VariableCondition\n      expression: {{ unknown is defined }}\n\n\n\n# Properties\n\n\n# expression\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n * Min length: 1',normalizedContent:'variablecondition\n\ntype: "io.kestra.core.models.conditions.types.variablecondition"\n\n\n> condition based on variables expression\n\nif the result is an empty string, a string containing only space or false, the condition will be false\n\n\n# examples\n\n> a condition that will return false for a missing variable\n\n- conditions:\n    - type: io.kestra.core.models.conditions.types.variablecondition\n      expression: {{ unknown is defined }}\n\n\n\n# properties\n\n\n# expression\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n * min length: 1',charsets:{}},{title:"WeekendCondition",frontmatter:{title:"WeekendCondition",editLink:!1,description:"Condition for allows events on weekend",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"WeekendCondition"},{property:"og:description",content:"Condition for allows events on weekend | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/core/conditions/io.kestra.core.models.conditions.types.WeekendCondition.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"WeekendCondition"},{name:"twitter:description",content:"Condition for allows events on weekend | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/core/conditions/io.kestra.core.models.conditions.types.WeekendCondition.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/core/conditions/io.kestra.core.models.conditions.types.WeekendCondition.html",relativePath:"plugins/core/conditions/io.kestra.core.models.conditions.types.WeekendCondition.md",key:"v-775e78a3",path:"/plugins/core/conditions/io.kestra.core.models.conditions.types.WeekendCondition.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:129},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:226},{level:3,title:"date",slug:"date",normalizedTitle:"date",charIndex:241}],headersStr:"Examples Properties date",content:'WeekendCondition\n\ntype: "io.kestra.core.models.conditions.types.WeekendCondition"\n\n\n> Condition for allows events on weekend\n\n\n# Examples\n\n- conditions:\n    - type: io.kestra.core.models.conditions.types.WeekendCondition\n\n\n\n# Properties\n\n\n# date\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Default: {{ now(format("iso_local_date") }}\n\n> The date to test\n\nCan be any variable or any valid ISO 8601 datetime, default will use {{ now(format="iso_local_date") }}',normalizedContent:'weekendcondition\n\ntype: "io.kestra.core.models.conditions.types.weekendcondition"\n\n\n> condition for allows events on weekend\n\n\n# examples\n\n- conditions:\n    - type: io.kestra.core.models.conditions.types.weekendcondition\n\n\n\n# properties\n\n\n# date\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * default: {{ now(format("iso_local_date") }}\n\n> the date to test\n\ncan be any variable or any valid iso 8601 datetime, default will use {{ now(format="iso_local_date") }}',charsets:{}},{title:"Echo",frontmatter:{title:"Echo",editLink:!1,description:"Simple debugging task that log a renderer value.",icon:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB3aWR0aD0iMjQiIGhlaWdodD0iMjQiCiAgICAgcHJlc2VydmVBc3BlY3RSYXRpbz0ieE1pZFlNaWQgbWVldCIgdmlld0JveD0iMCAwIDI0IDI0IgogICAgIHN0eWxlPSItbXMtdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTsgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpOyB0cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpOyI+CiAgICA8cGF0aAogICAgICAgIGQ9Ik0xOCA3Yy0xLjEgMC0yIC45LTIgMnY2YzAgMS4xLjkgMiAyIDJoMmMxLjEgMCAyLS45IDItMnYtNGgtMnY0aC0yVjloNFY3aC00TTIgN3YxMGg2di0ySDRWN0gybTkgMGMtMS4xIDAtMiAuOS0yIDJ2NmMwIDEuMS45IDIgMiAyaDJjMS4xIDAgMi0uOSAyLTJWOWMwLTEuMS0uOS0yLTItMmgtMm0wIDJoMnY2aC0yVjl6IgogICAgICAgIGZpbGw9IiMwRDE1MjMiLz4KPC9zdmc+",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Echo"},{property:"og:description",content:"Simple debugging task that log a renderer value. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/core/tasks/debugs/io.kestra.core.tasks.debugs.Echo.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Echo"},{name:"twitter:description",content:"Simple debugging task that log a renderer value. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/core/tasks/debugs/io.kestra.core.tasks.debugs.Echo.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/core/tasks/debugs/io.kestra.core.tasks.debugs.Echo.html",relativePath:"plugins/core/tasks/debugs/io.kestra.core.tasks.debugs.Echo.md",key:"v-40d34635",path:"/plugins/core/tasks/debugs/io.kestra.core.tasks.debugs.Echo.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:262},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:387},{level:3,title:"format",slug:"format",normalizedTitle:"format",charIndex:336},{level:3,title:"level",slug:"level",normalizedTitle:"level",charIndex:324}],headersStr:"Examples Properties format level",content:'Echo\n\ntype: "io.kestra.core.tasks.debugs.Echo"\n\n\n> Simple debugging task that log a renderer value.\n\nThis task is mostly useful for debugging purpose.\n\nThis one allow you to logs inputs or outputs variables for example, or to debug some templated functions.\n\n\n# Examples\n\nid: "echo"\ntype: "io.kestra.core.tasks.debugs.Echo"\nlevel: WARN\nformat: "{{task.id}} > {{taskrun.startDate}}"\n\n\n\n# Properties\n\n\n# format\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n * Min length: 1\n\n\n# level\n\n * Type: string\n\n * Dynamic: ❓\n\n * Required: ❌\n\n * Default: INFO\n\n * Possible Values:\n   \n   * ERROR\n   * WARN\n   * INFO\n   * DEBUG\n   * TRACE',normalizedContent:'echo\n\ntype: "io.kestra.core.tasks.debugs.echo"\n\n\n> simple debugging task that log a renderer value.\n\nthis task is mostly useful for debugging purpose.\n\nthis one allow you to logs inputs or outputs variables for example, or to debug some templated functions.\n\n\n# examples\n\nid: "echo"\ntype: "io.kestra.core.tasks.debugs.echo"\nlevel: warn\nformat: "{{task.id}} > {{taskrun.startdate}}"\n\n\n\n# properties\n\n\n# format\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n * min length: 1\n\n\n# level\n\n * type: string\n\n * dynamic: ❓\n\n * required: ❌\n\n * default: info\n\n * possible values:\n   \n   * error\n   * warn\n   * info\n   * debug\n   * trace',charsets:{}},{title:"Return",frontmatter:{title:"Return",editLink:!1,description:"Simple debugging task that return a renderer value.",icon:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB3aWR0aD0iMjQiIGhlaWdodD0iMjQiCiAgICAgcHJlc2VydmVBc3BlY3RSYXRpbz0ieE1pZFlNaWQgbWVldCIgdmlld0JveD0iMCAwIDI0IDI0IgogICAgIHN0eWxlPSItbXMtdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTsgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpOyB0cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpOyI+CiAgICA8ZyB0cmFuc2Zvcm09InRyYW5zbGF0ZSgyNCAwKSBzY2FsZSgtMSAxKSI+CiAgICAgICAgPHBhdGgKICAgICAgICAgICAgZD0iTTE5IDNoLTQuMThDMTQuNCAxLjg0IDEzLjMgMSAxMiAxcy0yLjQuODQtMi44MiAySDVjLTEuMSAwLTIgLjktMiAydjE0YzAgMS4xLjkgMiAyIDJoMTRjMS4xIDAgMi0uOSAyLTJWNWMwLTEuMS0uOS0yLTItMnptLTcgMGMuNTUgMCAxIC40NSAxIDFzLS40NSAxLTEgMXMtMS0uNDUtMS0xcy40NS0xIDEtMXptNCAxMmgtNHYzbC00LjY1LTQuNjVjLS4yLS4yLS4yLS41MSAwLS43MUwxMiA4djNoNHY0eiIKICAgICAgICAgICAgZmlsbD0iIzBEMTUyMyIvPgogICAgPC9nPgo8L3N2Zz4=",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Return"},{property:"og:description",content:"Simple debugging task that return a renderer value. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/core/tasks/debugs/io.kestra.core.tasks.debugs.Return.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Return"},{name:"twitter:description",content:"Simple debugging task that return a renderer value. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/core/tasks/debugs/io.kestra.core.tasks.debugs.Return.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/core/tasks/debugs/io.kestra.core.tasks.debugs.Return.html",relativePath:"plugins/core/tasks/debugs/io.kestra.core.tasks.debugs.Return.md",key:"v-a09528c2",path:"/plugins/core/tasks/debugs/io.kestra.core.tasks.debugs.Return.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:268},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:385},{level:3,title:"format",slug:"format",normalizedTitle:"format",charIndex:334},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:494},{level:3,title:"value",slug:"value",normalizedTitle:"value",charIndex:100}],headersStr:"Examples Properties format Outputs value",content:'Return\n\ntype: "io.kestra.core.tasks.debugs.Return"\n\n\n> Simple debugging task that return a renderer value.\n\nThis task is mostly useful for debugging purpose.\n\nThis one allow you to see inputs or outputs variables for example, or to debug some templated functions.\n\n\n# Examples\n\nid: "return"\ntype: "io.kestra.core.tasks.debugs.Return"\nformat: "{{task.id}} > {{taskrun.startDate}}"\n\n\n\n# Properties\n\n\n# format\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The templatized string to render\n\n\n# Outputs\n\n\n# value\n\n * Type: string\n\n> The generated string',normalizedContent:'return\n\ntype: "io.kestra.core.tasks.debugs.return"\n\n\n> simple debugging task that return a renderer value.\n\nthis task is mostly useful for debugging purpose.\n\nthis one allow you to see inputs or outputs variables for example, or to debug some templated functions.\n\n\n# examples\n\nid: "return"\ntype: "io.kestra.core.tasks.debugs.return"\nformat: "{{task.id}} > {{taskrun.startdate}}"\n\n\n\n# properties\n\n\n# format\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the templatized string to render\n\n\n# outputs\n\n\n# value\n\n * type: string\n\n> the generated string',charsets:{}},{title:"Counts",frontmatter:{title:"Counts",editLink:!1,description:"List execution counts for a list of flow",icon:"PHN2ZyBoZWlnaHQ9JzMwMHB4JyB3aWR0aD0nMzAwcHgnICBmaWxsPSIjMEQxNTIzIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB2ZXJzaW9uPSIxLjEiIHg9IjBweCIgeT0iMHB4IiB2aWV3Qm94PSIwIDAgNjQgNjQiIHN0eWxlPSJlbmFibGUtYmFja2dyb3VuZDpuZXcgMCAwIDY0IDY0OyIgeG1sOnNwYWNlPSJwcmVzZXJ2ZSI+PGc+PHJlY3QgeD0iMTMuMzUiIHk9IjMyLjI0IiB3aWR0aD0iNS44NSIgaGVpZ2h0PSI1Ljg1Ij48L3JlY3Q+PHJlY3QgeD0iMTMuMzUiIHk9IjQ4LjMyIiB3aWR0aD0iNS44NSIgaGVpZ2h0PSI1Ljg1Ij48L3JlY3Q+PHBhdGggZD0iTTUuMzYsMHY2NGg1My4yOWwwLTY0SDUuMzZ6IE0yMS42NSw1NS4zOWMwLDAuNjctMC41NSwxLjIyLTEuMjIsMS4yMmgtOC4zYy0wLjY4LDAtMS4yMi0wLjU1LTEuMjItMS4yMnYtOC4zICAgYzAtMC42NywwLjU1LTEuMjIsMS4yMi0xLjIyaDguM2MwLjY3LDAsMS4yMiwwLjU1LDEuMjIsMS4yMlY1NS4zOXogTTIxLjY1LDM5LjMyYzAsMC42Ny0wLjU1LDEuMjItMS4yMiwxLjIyaC04LjMgICBjLTAuNjgsMC0xLjIyLTAuNTUtMS4yMi0xLjIydi04LjNjMC0wLjY3LDAuNTUtMS4yMiwxLjIyLTEuMjJoOC4zYzAuNjcsMCwxLjIyLDAuNTUsMS4yMiwxLjIyVjM5LjMyeiBNMzcuODMsNTUuMTIgICBjMCwwLjY3LTAuNTUsMS4yMi0xLjIyLDEuMjJoLTguMjljLTAuNjgsMC0xLjIyLTAuNTUtMS4yMi0xLjIydi04LjNjMC0wLjY3LDAuNTUtMS4yMiwxLjIyLTEuMjJoOC4yOWMwLjY3LDAsMS4yMiwwLjU1LDEuMjIsMS4yMiAgIFY1NS4xMnogTTM3LjgzLDM5LjA1YzAsMC42Ny0wLjU1LDEuMjItMS4yMiwxLjIyaC04LjI5Yy0wLjY4LDAtMS4yMi0wLjU1LTEuMjItMS4yMnYtOC4zYzAtMC42NywwLjU1LTEuMjIsMS4yMi0xLjIyaDguMjkgICBjMC42NywwLDEuMjIsMC41NSwxLjIyLDEuMjJWMzkuMDV6IE01My40Niw1NS4zOWMwLDAuNjctMC41NSwxLjIyLTEuMjIsMS4yMmgtOC4zYy0wLjY4LDAtMS4yMi0wLjU1LTEuMjItMS4yMnYtOC4zICAgYzAtMC42NywwLjU1LTEuMjIsMS4yMi0xLjIyaDguMjljMC42OCwwLDEuMjIsMC41NSwxLjIyLDEuMjJWNTUuMzl6IE01My40NiwzOS4zMmMwLDAuNjctMC41NSwxLjIyLTEuMjIsMS4yMmgtOC4zICAgYy0wLjY4LDAtMS4yMi0wLjU1LTEuMjItMS4yMnYtOC4zYzAtMC42NywwLjU1LTEuMjIsMS4yMi0xLjIyaDguMjljMC42OCwwLDEuMjIsMC41NSwxLjIyLDEuMjJWMzkuMzJ6IE01My44OSwyMi42MyAgIGMwLDAuNjctMC41NSwxLjIyLTEuMjIsMS4yMkgxMS43Yy0wLjY4LDAtMS4yMi0wLjU1LTEuMjItMS4yMlY1Ljk3YzAtMC42OCwwLjU1LTEuMjIsMS4yMi0xLjIyaDQwLjk2YzAuNjgsMCwxLjIyLDAuNTUsMS4yMiwxLjIyICAgVjIyLjYzeiI+PC9wYXRoPjxyZWN0IHg9IjI5LjUzIiB5PSIzMS45NyIgd2lkdGg9IjUuODUiIGhlaWdodD0iNS44NSI+PC9yZWN0PjxyZWN0IHg9IjI5LjUzIiB5PSI0OC4wNCIgd2lkdGg9IjUuODUiIGhlaWdodD0iNS44NSI+PC9yZWN0PjxyZWN0IHg9IjQ1LjE2IiB5PSI0OC4zMiIgd2lkdGg9IjUuODUiIGhlaWdodD0iNS44NSI+PC9yZWN0PjxyZWN0IHg9IjEyLjkyIiB5PSI3LjIiIHdpZHRoPSIzOC41MiIgaGVpZ2h0PSIxNC4yMiI+PC9yZWN0PjxyZWN0IHg9IjQ1LjE2IiB5PSIzMi4yNCIgd2lkdGg9IjUuODUiIGhlaWdodD0iNS44NSI+PC9yZWN0PjwvZz48L3N2Zz4=",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Counts"},{property:"og:description",content:"List execution counts for a list of flow | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/core/tasks/executions/io.kestra.core.tasks.executions.Counts.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Counts"},{name:"twitter:description",content:"List execution counts for a list of flow | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/core/tasks/executions/io.kestra.core.tasks.executions.Counts.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/core/tasks/executions/io.kestra.core.tasks.executions.Counts.html",relativePath:"plugins/core/tasks/executions/io.kestra.core.tasks.executions.Counts.md",key:"v-19408c3a",path:"/plugins/core/tasks/executions/io.kestra.core.tasks.executions.Counts.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:182},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:1291},{level:3,title:"endDate",slug:"enddate",normalizedTitle:"enddate",charIndex:1306},{level:3,title:"expression",slug:"expression",normalizedTitle:"expression",charIndex:384},{level:3,title:"flows",slug:"flows",normalizedTitle:"flows",charIndex:419},{level:3,title:"startDate",slug:"startdate",normalizedTitle:"startdate",charIndex:486},{level:3,title:"states",slug:"states",normalizedTitle:"states",charIndex:1891},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:2e3},{level:3,title:"results",slug:"results",normalizedTitle:"results",charIndex:1120},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:2059},{level:3,title:"Result",slug:"result",normalizedTitle:"result",charIndex:2048},{level:3,title:"Flow",slug:"flow",normalizedTitle:"flow",charIndex:824}],headersStr:"Examples Properties endDate expression flows startDate states Outputs results Definitions Result Flow",content:'Counts\n\ntype: "io.kestra.core.tasks.executions.Counts"\n\n\n> List execution counts for a list of flow\n\nMostly use for send an alert if a conditions is meet about execution counts.\n\n\n# Examples\n\n> Send a slack notification if no execution for a flow on last 24h\n\nid: executions-count\nnamespace: io.kestra.tests\n\ntasks:\n  - id: counts\n    type: io.kestra.core.tasks.executions.Counts\n    expression: "{{ count == 0 }}"\n    flows:\n      - namespace: io.kestra.tests\n        flowId: logs\n    startDate: "{{ now() | dateAdd(-1, \'DAYS\') }}"\n  - id: each_parallel\n    type: io.kestra.core.tasks.flows.EachParallel\n    tasks:\n      - id: slack_incoming_webhook\n        type: io.kestra.plugin.notifications.slack.SlackIncomingWebhook\n        payload: |\n          {\n            "channel": "#run-channel",\n            "text": ":warning: Flow <code v-pre>{{  jq taskrun.value \'.namespace\' true  }}</code>.<code v-pre>{{  jq taskrun.value \'.flowId\' true  }}</code> has no execution on last 24h !"\n          }\n        url: "https://hooks.slack.com/services/T00000000/B00000000/XXXXXXXXXXXXXXXXXXXXXXXX"\n    value: "{{ jq outputs.counts.results \'. | select(. != null) | .[]\' }}"\n\ntriggers:\n  - id: schedule\n    type: io.kestra.core.models.triggers.types.Schedule\n    backfill: {}\n    cron: "0 4 * * * "\n\n\n\n# Properties\n\n\n# endDate\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The end date\n\n\n# expression\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The expression against each flows to look at\n\nThe expression is as handlebars expression must return true in order to keep the current line\nsome examples:\n\n * {{ eq count 0 }}: no execution found\n * {{ gte count 5 }}: more than 5 executions\n\n\n# flows\n\n * Type: array\n * SubType: Flow\n * Dynamic: ❌\n * Required: ✔️\n * Min items: 1\n\n> A list of flows to be filtered\n\n\n# startDate\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The start date\n\n\n# states\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> A list of state to be filtered\n\n\n# Outputs\n\n\n# results\n\n * Type: array\n * SubType: Result\n\n\n# Definitions\n\n\n# Result\n\n# count\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n# flowId\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# namespace\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n\n# Flow\n\n# flowId\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n\n# namespace\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️',normalizedContent:'counts\n\ntype: "io.kestra.core.tasks.executions.counts"\n\n\n> list execution counts for a list of flow\n\nmostly use for send an alert if a conditions is meet about execution counts.\n\n\n# examples\n\n> send a slack notification if no execution for a flow on last 24h\n\nid: executions-count\nnamespace: io.kestra.tests\n\ntasks:\n  - id: counts\n    type: io.kestra.core.tasks.executions.counts\n    expression: "{{ count == 0 }}"\n    flows:\n      - namespace: io.kestra.tests\n        flowid: logs\n    startdate: "{{ now() | dateadd(-1, \'days\') }}"\n  - id: each_parallel\n    type: io.kestra.core.tasks.flows.eachparallel\n    tasks:\n      - id: slack_incoming_webhook\n        type: io.kestra.plugin.notifications.slack.slackincomingwebhook\n        payload: |\n          {\n            "channel": "#run-channel",\n            "text": ":warning: flow <code v-pre>{{  jq taskrun.value \'.namespace\' true  }}</code>.<code v-pre>{{  jq taskrun.value \'.flowid\' true  }}</code> has no execution on last 24h !"\n          }\n        url: "https://hooks.slack.com/services/t00000000/b00000000/xxxxxxxxxxxxxxxxxxxxxxxx"\n    value: "{{ jq outputs.counts.results \'. | select(. != null) | .[]\' }}"\n\ntriggers:\n  - id: schedule\n    type: io.kestra.core.models.triggers.types.schedule\n    backfill: {}\n    cron: "0 4 * * * "\n\n\n\n# properties\n\n\n# enddate\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the end date\n\n\n# expression\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the expression against each flows to look at\n\nthe expression is as handlebars expression must return true in order to keep the current line\nsome examples:\n\n * {{ eq count 0 }}: no execution found\n * {{ gte count 5 }}: more than 5 executions\n\n\n# flows\n\n * type: array\n * subtype: flow\n * dynamic: ❌\n * required: ✔️\n * min items: 1\n\n> a list of flows to be filtered\n\n\n# startdate\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the start date\n\n\n# states\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> a list of state to be filtered\n\n\n# outputs\n\n\n# results\n\n * type: array\n * subtype: result\n\n\n# definitions\n\n\n# result\n\n# count\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n# flowid\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# namespace\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n\n# flow\n\n# flowid\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n\n# namespace\n\n * type: string\n * dynamic: ❓\n * required: ✔️',charsets:{cjk:!0}},{title:"AllowFailure",frontmatter:{title:"AllowFailure",editLink:!1,description:"Allow a task to failed",icon:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB3aWR0aD0iMjQiIGhlaWdodD0iMjQiCiAgICAgcHJlc2VydmVBc3BlY3RSYXRpbz0ieE1pZFlNaWQgbWVldCIgdmlld0JveD0iMCAwIDI0IDI0IgogICAgIHN0eWxlPSItbXMtdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTsgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpOyB0cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpOyI+CiAgICA8cGF0aAogICAgICAgIGQ9Ik0yMCAySDRjLTEuMSAwLTIgLjktMiAydjE4bDQtNGgxNGMxLjEgMCAyLS45IDItMlY0YzAtMS4xLS45LTItMi0yem0wIDE0SDUuMTdMNCAxNy4xN1Y0aDE2djEyem0tOS00aDJ2MmgtMnptMC02aDJ2NGgtMnoiCiAgICAgICAgZmlsbD0iIzBEMTUyMyIvPgo8L3N2Zz4=",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"AllowFailure"},{property:"og:description",content:"Allow a task to failed | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/core/tasks/flows/io.kestra.core.tasks.flows.AllowFailure.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"AllowFailure"},{name:"twitter:description",content:"Allow a task to failed | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/core/tasks/flows/io.kestra.core.tasks.flows.AllowFailure.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/core/tasks/flows/io.kestra.core.tasks.flows.AllowFailure.html",relativePath:"plugins/core/tasks/flows/io.kestra.core.tasks.flows.AllowFailure.md",key:"v-23bac36d",path:"/plugins/core/tasks/flows/io.kestra.core.tasks.flows.AllowFailure.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:186},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:539},{level:3,title:"errors",slug:"errors",normalizedTitle:"errors",charIndex:554},{level:3,title:"tasks",slug:"tasks",normalizedTitle:"tasks",charIndex:36},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:785}],headersStr:"Examples Properties errors tasks Definitions",content:'AllowFailure\n\ntype: "io.kestra.core.tasks.flows.AllowFailure"\n\n\n> Allow a task to failed\n\nIf any child tasks failed, the flow will stop child tasks, but will continue the main flow.\n\n\n# Examples\n\nid: allow-failure\nnamespace: io.kestra.tests\n\ntasks:\n  - id: sequential\n    type: io.kestra.core.tasks.flows.AllowFailure\n    tasks:\n     - id: ko\n       type: io.kestra.core.tasks.scripts.Bash\n       commands:\n        - \'exit 1\'\n  - id: last\n    type: io.kestra.core.tasks.debugs.Return\n    format: "{{task.id}} > {{taskrun.startDate}}"\n\n\n\n# Properties\n\n\n# errors\n\n * Type: array\n * SubType: Task-2\n * Dynamic: ❓\n * Required: ❌\n\n> List of tasks to run if any tasks failed on this FlowableTask\n\n\n# tasks\n\n * Type: array\n * SubType: Task-2\n * Dynamic: ❓\n * Required: ✔️\n * Min items: 1\n\n\n# Definitions',normalizedContent:'allowfailure\n\ntype: "io.kestra.core.tasks.flows.allowfailure"\n\n\n> allow a task to failed\n\nif any child tasks failed, the flow will stop child tasks, but will continue the main flow.\n\n\n# examples\n\nid: allow-failure\nnamespace: io.kestra.tests\n\ntasks:\n  - id: sequential\n    type: io.kestra.core.tasks.flows.allowfailure\n    tasks:\n     - id: ko\n       type: io.kestra.core.tasks.scripts.bash\n       commands:\n        - \'exit 1\'\n  - id: last\n    type: io.kestra.core.tasks.debugs.return\n    format: "{{task.id}} > {{taskrun.startdate}}"\n\n\n\n# properties\n\n\n# errors\n\n * type: array\n * subtype: task-2\n * dynamic: ❓\n * required: ❌\n\n> list of tasks to run if any tasks failed on this flowabletask\n\n\n# tasks\n\n * type: array\n * subtype: task-2\n * dynamic: ❓\n * required: ✔️\n * min items: 1\n\n\n# definitions',charsets:{}},{title:"EachParallel",frontmatter:{title:"EachParallel",editLink:!1,description:"Execute a tasks for a list of value in parallel.",icon:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB3aWR0aD0iMjAiIGhlaWdodD0iMjAiCiAgICAgcHJlc2VydmVBc3BlY3RSYXRpbz0ieE1pZFlNaWQgbWVldCIgdmlld0JveD0iMCAwIDIwIDIwIgogICAgIHN0eWxlPSItbXMtdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTsgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpOyB0cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpOyI+CiAgICA8cGF0aAogICAgICAgIGQ9Ik0xOCAxNC44MjRWMTIuNUEzLjUgMy41IDAgMCAwIDE0LjUgOWgtMkExLjUgMS41IDAgMCAxIDExIDcuNVY1LjE3NkEyLjM5NSAyLjM5NSAwIDAgMCAxMi40IDNhMi40IDIuNCAwIDEgMC00LjggMGMwIC45NjcuNTc2IDEuNzk2IDEuNCAyLjE3NlY3LjVBMS41IDEuNSAwIDAgMSA3LjUgOWgtMkEzLjUgMy41IDAgMCAwIDIgMTIuNXYyLjMyNEEyLjM5NiAyLjM5NiAwIDAgMCAzIDE5LjRhMi4zOTcgMi4zOTcgMCAwIDAgMS00LjU3NlYxMi41QTEuNSAxLjUgMCAwIDEgNS41IDExaDJjLjUzOSAwIDEuMDQ0LS4xMzIgMS41LS4zNXY0LjE3NGEyLjM5NiAyLjM5NiAwIDAgMCAxIDQuNTc2YTIuMzk3IDIuMzk3IDAgMCAwIDEtNC41NzZWMTAuNjVjLjQ1Ni4yMTguOTYxLjM1IDEuNS4zNWgyYTEuNSAxLjUgMCAwIDEgMS41IDEuNXYyLjMyNEEyLjM5NSAyLjM5NSAwIDAgMCAxNC42IDE3YTIuNCAyLjQgMCAxIDAgNC44IDBjMC0uOTY3LS41NzUtMS43OTYtMS40LTIuMTc2ek0xMCAxLjYxNWExLjM4NCAxLjM4NCAwIDEgMSAwIDIuNzY4YTEuMzg0IDEuMzg0IDAgMCAxIDAtMi43Njh6bS03IDE2Ljc3YTEuMzg1IDEuMzg1IDAgMSAxIDAtMi43N2ExLjM4NSAxLjM4NSAwIDAgMSAwIDIuNzd6bTcgMGExLjM4NSAxLjM4NSAwIDEgMSAwLTIuNzdhMS4zODUgMS4zODUgMCAwIDEgMCAyLjc3em03IDBhMS4zODUgMS4zODUgMCAxIDEgMC0yLjc3YTEuMzg1IDEuMzg1IDAgMCAxIDAgMi43N3oiCiAgICAgICAgZmlsbD0iIzBEMTUyMyIvPgo8L3N2Zz4=",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"EachParallel"},{property:"og:description",content:"Execute a tasks for a list of value in parallel. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/core/tasks/flows/io.kestra.core.tasks.flows.EachParallel.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"EachParallel"},{name:"twitter:description",content:"Execute a tasks for a list of value in parallel. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/core/tasks/flows/io.kestra.core.tasks.flows.EachParallel.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/core/tasks/flows/io.kestra.core.tasks.flows.EachParallel.html",relativePath:"plugins/core/tasks/flows/io.kestra.core.tasks.flows.EachParallel.md",key:"v-1b25d55f",path:"/plugins/core/tasks/flows/io.kestra.core.tasks.flows.EachParallel.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:661},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:1522},{level:3,title:"concurrent",slug:"concurrent",normalizedTitle:"concurrent",charIndex:574},{level:3,title:"errors",slug:"errors",normalizedTitle:"errors",charIndex:1736},{level:3,title:"tasks",slug:"tasks",normalizedTitle:"tasks",charIndex:36},{level:3,title:"value",slug:"value",normalizedTitle:"value",charIndex:96},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:2024}],headersStr:"Examples Properties concurrent errors tasks value Definitions",content:'EachParallel\n\ntype: "io.kestra.core.tasks.flows.EachParallel"\n\n\n> Execute a tasks for a list of value in parallel.\n\nFor each value, tasks will be executed\nThe value must be valid json string representing an arrays, like ["value1", "value2"] or [{"key":"value1"}, {"key":"value2"}]\nThe current value is available on vars {{ taskrun.value }}.\nThe task list will be executed in parallel, for example if you have a 3 value with each one 2 tasks, all the 6 tasks will be computed in parallel with out any garantee on the order.\nIf you want to have each value in parallel, but no concurrent task for each value, you need to wrap the tasks with a Sequential tasks\n\n\n# Examples\n\nid: "each_parallel"\ntype: "io.kestra.core.tasks.flows.EachParallel"\nvalue: \'["value 1", "value 2", "value 3"]\'\ntasks:\n  - id: each-value\n    type: io.kestra.core.tasks.debugs.Return\n    format: "{{ task.id }} with current value \'{{ taskrun.value }}\'"\n\n\n> Handling each value in parralel but only 1 child task for each value at the same time.\n\nid: "each_parallel"\ntype: "io.kestra.core.tasks.flows.EachParallel"\nvalue: \'["value 1", "value 2", "value 3"]\'\ntasks:\n  - id: seq\n    type: io.kestra.core.tasks.flows.Sequential\n    tasks:\n    - id: t1\n      type: io.kestra.core.tasks.scripts.Bash\n      commands:\n        - \'echo "{{task.id}} > {{ parents[0].taskrun.value }}\n        - \'sleep 1\'\n    - id: t2\n      type: io.kestra.core.tasks.scripts.Bash\n      commands:\n        - \'echo "{{task.id}} > {{ parents[0].taskrun.value }}\n        - \'sleep 1\'\n\n\n\n# Properties\n\n\n# concurrent\n\n * Type: integer\n * Dynamic: ❓\n * Required: ✔️\n * Default: 0\n\n> Number of concurrent parrallels tasks\n\nIf the value is 0, no limit exist and all the tasks will start at the same time\n\n\n# errors\n\n * Type: array\n * SubType: Task-2\n * Dynamic: ❓\n * Required: ❌\n\n> List of tasks to run if any tasks failed on this FlowableTask\n\n\n# tasks\n\n * Type: array\n * SubType: Task-2\n * Dynamic: ❓\n * Required: ❌\n\n\n# value\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n * Min length: 1\n\n\n# Definitions',normalizedContent:'eachparallel\n\ntype: "io.kestra.core.tasks.flows.eachparallel"\n\n\n> execute a tasks for a list of value in parallel.\n\nfor each value, tasks will be executed\nthe value must be valid json string representing an arrays, like ["value1", "value2"] or [{"key":"value1"}, {"key":"value2"}]\nthe current value is available on vars {{ taskrun.value }}.\nthe task list will be executed in parallel, for example if you have a 3 value with each one 2 tasks, all the 6 tasks will be computed in parallel with out any garantee on the order.\nif you want to have each value in parallel, but no concurrent task for each value, you need to wrap the tasks with a sequential tasks\n\n\n# examples\n\nid: "each_parallel"\ntype: "io.kestra.core.tasks.flows.eachparallel"\nvalue: \'["value 1", "value 2", "value 3"]\'\ntasks:\n  - id: each-value\n    type: io.kestra.core.tasks.debugs.return\n    format: "{{ task.id }} with current value \'{{ taskrun.value }}\'"\n\n\n> handling each value in parralel but only 1 child task for each value at the same time.\n\nid: "each_parallel"\ntype: "io.kestra.core.tasks.flows.eachparallel"\nvalue: \'["value 1", "value 2", "value 3"]\'\ntasks:\n  - id: seq\n    type: io.kestra.core.tasks.flows.sequential\n    tasks:\n    - id: t1\n      type: io.kestra.core.tasks.scripts.bash\n      commands:\n        - \'echo "{{task.id}} > {{ parents[0].taskrun.value }}\n        - \'sleep 1\'\n    - id: t2\n      type: io.kestra.core.tasks.scripts.bash\n      commands:\n        - \'echo "{{task.id}} > {{ parents[0].taskrun.value }}\n        - \'sleep 1\'\n\n\n\n# properties\n\n\n# concurrent\n\n * type: integer\n * dynamic: ❓\n * required: ✔️\n * default: 0\n\n> number of concurrent parrallels tasks\n\nif the value is 0, no limit exist and all the tasks will start at the same time\n\n\n# errors\n\n * type: array\n * subtype: task-2\n * dynamic: ❓\n * required: ❌\n\n> list of tasks to run if any tasks failed on this flowabletask\n\n\n# tasks\n\n * type: array\n * subtype: task-2\n * dynamic: ❓\n * required: ❌\n\n\n# value\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n * min length: 1\n\n\n# definitions',charsets:{}},{title:"EachSequential",frontmatter:{title:"EachSequential",editLink:!1,description:"Execute a tasks for a list of value sequentially",icon:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB3aWR0aD0iMjQiIGhlaWdodD0iMjQiCiAgICAgcHJlc2VydmVBc3BlY3RSYXRpbz0ieE1pZFlNaWQgbWVldCIgdmlld0JveD0iMCAwIDI0IDI0IgogICAgIHN0eWxlPSItbXMtdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTsgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpOyB0cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpOyI+CiAgICA8cGF0aAogICAgICAgIGQ9Ik0xNyAxNmEyLjk5IDIuOTkgMCAwIDAtMi44MTYgMkgxMWMtMS42NTQgMC0zLTEuMzQ2LTMtM3YtMy4wMjVBNC45NTQgNC45NTQgMCAwIDAgMTEgMTNoMy4xODRBMi45OSAyLjk5IDAgMCAwIDE3IDE1YTMgMyAwIDEgMCAwLTZhMi45OSAyLjk5IDAgMCAwLTIuODE2IDJIMTFjLTEuNjU0IDAtMy0xLjM0Ni0zLTN2LS4xODRBMi45OSAyLjk5IDAgMCAwIDEwIDVhMyAzIDAgMSAwLTYgMGEyLjk5IDIuOTkgMCAwIDAgMiAyLjgxNlYxNWMwIDIuNzU3IDIuMjQzIDUgNSA1aDMuMTg0QTIuOTkgMi45OSAwIDAgMCAxNyAyMmEzIDMgMCAxIDAgMC02em0wLTVhMS4wMDEgMS4wMDEgMCAxIDEtMSAxYzAtLjU1MS40NDgtMSAxLTF6TTcgNGExLjAwMSAxLjAwMSAwIDEgMS0xIDFjMC0uNTUxLjQ0OC0xIDEtMXptMTAgMTZhMS4wMDEgMS4wMDEgMCAwIDEgMC0yYTEuMDAxIDEuMDAxIDAgMCAxIDAgMnoiCiAgICAgICAgZmlsbD0iIzBEMTUyMyIvPgo8L3N2Zz4=",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"EachSequential"},{property:"og:description",content:"Execute a tasks for a list of value sequentially | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/core/tasks/flows/io.kestra.core.tasks.flows.EachSequential.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"EachSequential"},{name:"twitter:description",content:"Execute a tasks for a list of value sequentially | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/core/tasks/flows/io.kestra.core.tasks.flows.EachSequential.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/core/tasks/flows/io.kestra.core.tasks.flows.EachSequential.html",relativePath:"plugins/core/tasks/flows/io.kestra.core.tasks.flows.EachSequential.md",key:"v-1827886f",path:"/plugins/core/tasks/flows/io.kestra.core.tasks.flows.EachSequential.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:349},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:619},{level:3,title:"errors",slug:"errors",normalizedTitle:"errors",charIndex:634},{level:3,title:"tasks",slug:"tasks",normalizedTitle:"tasks",charIndex:38},{level:3,title:"value",slug:"value",normalizedTitle:"value",charIndex:100},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:939}],headersStr:"Examples Properties errors tasks value Definitions",content:'EachSequential\n\ntype: "io.kestra.core.tasks.flows.EachSequential"\n\n\n> Execute a tasks for a list of value sequentially\n\nFor each value, tasks will be executed\nThe value must be valid json string representing an arrays, like ["value1", "value2"] or [{"key":"value1"}, {"key":"value2"}]\nThe current value is available on vars {{ taskrun.value }}.\n\n\n# Examples\n\nid: "each_sequential"\ntype: "io.kestra.core.tasks.flows.EachSequential"\nvalue: \'["value 1", "value 2", "value 3"]\'\ntasks:\n  - id: each-value\n    type: io.kestra.core.tasks.debugs.Return\n    format: "{{ task.id }} with current value \'{{ taskrun.value }}\'"\n\n\n\n# Properties\n\n\n# errors\n\n * Type: array\n * SubType: Task-2\n * Dynamic: ❓\n * Required: ❌\n\n> List of tasks to run if any tasks failed on this FlowableTask\n\n\n# tasks\n\n * Type: array\n * SubType: Task-2\n * Dynamic: ❓\n * Required: ✔️\n * Min items: 1\n\n\n# value\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n * Min length: 1\n\n\n# Definitions',normalizedContent:'eachsequential\n\ntype: "io.kestra.core.tasks.flows.eachsequential"\n\n\n> execute a tasks for a list of value sequentially\n\nfor each value, tasks will be executed\nthe value must be valid json string representing an arrays, like ["value1", "value2"] or [{"key":"value1"}, {"key":"value2"}]\nthe current value is available on vars {{ taskrun.value }}.\n\n\n# examples\n\nid: "each_sequential"\ntype: "io.kestra.core.tasks.flows.eachsequential"\nvalue: \'["value 1", "value 2", "value 3"]\'\ntasks:\n  - id: each-value\n    type: io.kestra.core.tasks.debugs.return\n    format: "{{ task.id }} with current value \'{{ taskrun.value }}\'"\n\n\n\n# properties\n\n\n# errors\n\n * type: array\n * subtype: task-2\n * dynamic: ❓\n * required: ❌\n\n> list of tasks to run if any tasks failed on this flowabletask\n\n\n# tasks\n\n * type: array\n * subtype: task-2\n * dynamic: ❓\n * required: ✔️\n * min items: 1\n\n\n# value\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n * min length: 1\n\n\n# definitions',charsets:{}},{title:"Flow",frontmatter:{title:"Flow",editLink:!1,description:"Trigger another flow",icon:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB3aWR0aD0iMzIiIGhlaWdodD0iMzIiCiAgICAgcHJlc2VydmVBc3BlY3RSYXRpbz0ieE1pZFlNaWQgbWVldCIgdmlld0JveD0iMCAwIDMyIDMyIgogICAgIHN0eWxlPSItbXMtdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTsgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpOyB0cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpOyI+CiAgICA8ZGVmcy8+CiAgICA8cGF0aCBkPSJNMjAgMjRoLTR2Mmg0djNoOHYtOGgtOHptMi0xaDR2NGgtNHoiIGZpbGw9IiMwRDE1MjMiLz4KICAgIDxwYXRoIGQ9Ik00IDIwdjJoNC41ODZMMiAyOC41ODZMMy40MTQgMzBMMTAgMjMuNDE0VjI4aDJ2LThINHoiIGZpbGw9IiMwRDE1MjMiLz4KICAgIDxwYXRoCiAgICAgICAgZD0iTTI0IDVhMy45OTYgMy45OTYgMCAwIDAtMy44NTggM0gxNHYyaDYuMTQyYTMuOTQgMy45NCAwIDAgMCAuNDI1IDEuMDE5TDE0IDE3LjU4NkwxNS40MTQgMTlsNi41NjctNi41NjdBMy45NTIgMy45NTIgMCAwIDAgMjQgMTNhNCA0IDAgMCAwIDAtOHptMCA2YTIgMiAwIDEgMSAyLTJhMi4wMDIgMi4wMDIgMCAwIDEtMiAyeiIKICAgICAgICBmaWxsPSIjMEQxNTIzIi8+CiAgICA8cGF0aCBkPSJNOS42OTMgMTIuNzVhNSA1IDAgMCAxIDAtNy41bDEuMzI0IDEuNWEzIDMgMCAwIDAgMCA0LjUwMXoiIGZpbGw9IiMwRDE1MjMiLz4KICAgIDxwYXRoIGQ9Ik03LjA0NyAxNS43NTFhOSA5IDAgMCAxIDAtMTMuNTAxbDEuMzI0IDEuNWE3IDcgMCAwIDAgMCAxMC41MDF6IiBmaWxsPSIjMEQxNTIzIi8+Cjwvc3ZnPg==",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Flow"},{property:"og:description",content:"Trigger another flow | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/core/tasks/flows/io.kestra.core.tasks.flows.Flow.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Flow"},{name:"twitter:description",content:"Trigger another flow | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/core/tasks/flows/io.kestra.core.tasks.flows.Flow.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/core/tasks/flows/io.kestra.core.tasks.flows.Flow.html",relativePath:"plugins/core/tasks/flows/io.kestra.core.tasks.flows.Flow.md",key:"v-3fc91bd3",path:"/plugins/core/tasks/flows/io.kestra.core.tasks.flows.Flow.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:75},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:325},{level:3,title:"flowId",slug:"flowid",normalizedTitle:"flowid",charIndex:220},{level:3,title:"inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:241},{level:3,title:"namespace",slug:"namespace",normalizedTitle:"namespace",charIndex:193},{level:3,title:"outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:261},{level:3,title:"revision",slug:"revision",normalizedTitle:"revision",charIndex:843},{level:3,title:"transmitFailed",slug:"transmitfailed",normalizedTitle:"transmitfailed",charIndex:994},{level:3,title:"wait",slug:"wait",normalizedTitle:"wait",charIndex:308},{level:2,title:"Outputs",slug:"outputs-2",normalizedTitle:"outputs",charIndex:1436},{level:3,title:"executionId",slug:"executionid",normalizedTitle:"executionid",charIndex:1448},{level:3,title:"outputs",slug:"outputs-3",normalizedTitle:"outputs",charIndex:261},{level:3,title:"state",slug:"state",normalizedTitle:"state",charIndex:1598}],headersStr:"Examples Properties flowId inputs namespace outputs revision transmitFailed wait Outputs executionId outputs state",content:'Flow\n\ntype: "io.kestra.core.tasks.flows.Flow"\n\n\n> Trigger another flow\n\n\n# Examples\n\n> Trigger another flow, passing some file and arguments\n\nid: "flow"\ntype: "io.kestra.core.tasks.flows.Flow"\nnamespace: io.kestra.tests\nflowId: my-sub-flows\ninputs:\n  file: "{{ outputs.my-task.files.resolver }}"\n  store: 12\nwait: false\n\n\n\n# Properties\n\n\n# flowId\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The flowId to trigger\n\n\n# inputs\n\n * Type: object\n * Dynamic: ✔️\n * Required: ❌\n\n> The input to pass to the triggered flow\n\n\n# namespace\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The namespace of the flow to trigger\n\n\n# outputs\n\n * Type: object\n * Dynamic: ✔️\n * Required: ❌\n\n> Extract outputs from triggered executions.\n\nAllow to specify key value (with value renderered), in order to extract any outputs from triggered execution.\n\n\n# revision\n\n * Type: integer\n * Dynamic: ✔️\n * Required: ❌\n\n> The revision of the flow you want to trigger\n\nBy default, we trigger the last version.\n\n\n# transmitFailed\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n * Default: false\n\n> Failed the current execution if the waited execution is failed or killed.\n\nwait need to be true to make it work\n\n\n# wait\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n * Default: false\n\n> Wait the end of the execution.\n\nBy default, we don\'t wait till the end of the flow, if you set to true, we wait the end of the trigger flow before continue this one.\n\n\n# Outputs\n\n\n# executionId\n\n * Type: string\n\n> The id of the execution trigger.\n\n\n# outputs\n\n * Type: object\n\n> The extracted outputs from triggered executions.\n\n\n# state\n\n * Type: string\n\n * Possible Values:\n   \n   * CREATED\n   * RUNNING\n   * PAUSED\n   * RESTARTED\n   * KILLING\n   * SUCCESS\n   * WARNING\n   * FAILED\n   * KILLED\n\n> The state of the execution trigger.\n\nOnly available if the execution is waited with wait options',normalizedContent:'flow\n\ntype: "io.kestra.core.tasks.flows.flow"\n\n\n> trigger another flow\n\n\n# examples\n\n> trigger another flow, passing some file and arguments\n\nid: "flow"\ntype: "io.kestra.core.tasks.flows.flow"\nnamespace: io.kestra.tests\nflowid: my-sub-flows\ninputs:\n  file: "{{ outputs.my-task.files.resolver }}"\n  store: 12\nwait: false\n\n\n\n# properties\n\n\n# flowid\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the flowid to trigger\n\n\n# inputs\n\n * type: object\n * dynamic: ✔️\n * required: ❌\n\n> the input to pass to the triggered flow\n\n\n# namespace\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the namespace of the flow to trigger\n\n\n# outputs\n\n * type: object\n * dynamic: ✔️\n * required: ❌\n\n> extract outputs from triggered executions.\n\nallow to specify key value (with value renderered), in order to extract any outputs from triggered execution.\n\n\n# revision\n\n * type: integer\n * dynamic: ✔️\n * required: ❌\n\n> the revision of the flow you want to trigger\n\nby default, we trigger the last version.\n\n\n# transmitfailed\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n * default: false\n\n> failed the current execution if the waited execution is failed or killed.\n\nwait need to be true to make it work\n\n\n# wait\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n * default: false\n\n> wait the end of the execution.\n\nby default, we don\'t wait till the end of the flow, if you set to true, we wait the end of the trigger flow before continue this one.\n\n\n# outputs\n\n\n# executionid\n\n * type: string\n\n> the id of the execution trigger.\n\n\n# outputs\n\n * type: object\n\n> the extracted outputs from triggered executions.\n\n\n# state\n\n * type: string\n\n * possible values:\n   \n   * created\n   * running\n   * paused\n   * restarted\n   * killing\n   * success\n   * warning\n   * failed\n   * killed\n\n> the state of the execution trigger.\n\nonly available if the execution is waited with wait options',charsets:{}},{title:"Parallel",frontmatter:{title:"Parallel",editLink:!1,description:"Process task in parallel",icon:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB3aWR0aD0iMjAiIGhlaWdodD0iMjAiCiAgICAgcHJlc2VydmVBc3BlY3RSYXRpbz0ieE1pZFlNaWQgbWVldCIgdmlld0JveD0iMCAwIDIwIDIwIgogICAgIHN0eWxlPSItbXMtdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTsgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpOyB0cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpOyI+CiAgICA8cGF0aAogICAgICAgIGQ9Ik04LjQgNGEyLjQgMi40IDAgMSAwLTQuOCAwYzAgLjk2Ny41NzYgMS43OTYgMS40IDIuMTc2djcuNjQ5QTIuMzkzIDIuMzkzIDAgMCAwIDMuNiAxNmEyLjQgMi40IDAgMSAwIDQuOCAwYzAtLjk2Ny0uNTc2LTEuNzk2LTEuNC0yLjE3NlY2LjE3NkEyLjM5NiAyLjM5NiAwIDAgMCA4LjQgNHpNNy4zODQgMTZhMS4zODUgMS4zODUgMCAxIDEtMi43NyAwYTEuMzg1IDEuMzg1IDAgMCAxIDIuNzcgMHpNNiA1LjM4NWExLjM4NSAxLjM4NSAwIDEgMSAuMDAxLTIuNzdBMS4zODUgMS4zODUgMCAwIDEgNiA1LjM4NnptOSA4LjQzOVY2LjE3NkEyLjM5NSAyLjM5NSAwIDAgMCAxNi40IDRhMi40IDIuNCAwIDEgMC00LjggMGMwIC45NjcuNTc2IDEuNzk2IDEuNCAyLjE3NnY3LjY0OWEyLjM5NSAyLjM5NSAwIDAgMC0xLjQgMi4xNzZhMi40IDIuNCAwIDEgMCA0LjggMGMwLS45NjgtLjU3NS0xLjc5Ny0xLjQtMi4xNzd6TTEyLjYxNiA0YTEuMzg0IDEuMzg0IDAgMSAxIDIuNzY5IDBhMS4zODUgMS4zODUgMCAwIDEtMi43NjkgMHpNMTQgMTcuMzg1YTEuMzg1IDEuMzg1IDAgMSAxIDAtMi43N2ExLjM4NSAxLjM4NSAwIDAgMSAwIDIuNzd6IgogICAgICAgIGZpbGw9IiMwRDE1MjMiLz4KPC9zdmc+",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Parallel"},{property:"og:description",content:"Process task in parallel | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/core/tasks/flows/io.kestra.core.tasks.flows.Parallel.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Parallel"},{name:"twitter:description",content:"Process task in parallel | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/core/tasks/flows/io.kestra.core.tasks.flows.Parallel.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/core/tasks/flows/io.kestra.core.tasks.flows.Parallel.html",relativePath:"plugins/core/tasks/flows/io.kestra.core.tasks.flows.Parallel.md",key:"v-4162bd61",path:"/plugins/core/tasks/flows/io.kestra.core.tasks.flows.Parallel.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:181},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:657},{level:3,title:"concurrent",slug:"concurrent",normalizedTitle:"concurrent",charIndex:672},{level:3,title:"errors",slug:"errors",normalizedTitle:"errors",charIndex:871},{level:3,title:"tasks",slug:"tasks",normalizedTitle:"tasks",charIndex:32},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:1085}],headersStr:"Examples Properties concurrent errors tasks Definitions",content:'Parallel\n\ntype: "io.kestra.core.tasks.flows.Parallel"\n\n\n> Process task in parallel\n\nThis task processes tasks in parallel. It makes it convinient to process many tasks at once.\n\n\n# Examples\n\nid: parallel\nnamespace: io.kestra.tests\n\ntasks:\n  - id: parallel\n    type: io.kestra.core.tasks.flows.Parallel\n    tasks:\n      - id: 1st\n        type: io.kestra.core.tasks.debugs.Return\n        format: "{{task.id}} > {{taskrun.startDate}}"\n      - id: 2nd\n        type: io.kestra.core.tasks.debugs.Return\n        format: "{{task.id}} > {{taskrun.id}}"\n  - id: last\n    type: io.kestra.core.tasks.debugs.Return\n    format: "{{task.id}} > {{taskrun.startDate}}"\n\n\n\n# Properties\n\n\n# concurrent\n\n * Type: integer\n * Dynamic: ❓\n * Required: ✔️\n * Default: 0\n\n> Number of concurrent parrallels tasks\n\nIf the value is 0, no limit exist and all the tasks will start at the same time\n\n\n# errors\n\n * Type: array\n * SubType: Task-2\n * Dynamic: ❓\n * Required: ❌\n\n> List of tasks to run if any tasks failed on this FlowableTask\n\n\n# tasks\n\n * Type: array\n * SubType: Task-2\n * Dynamic: ❓\n * Required: ❌\n\n\n# Definitions',normalizedContent:'parallel\n\ntype: "io.kestra.core.tasks.flows.parallel"\n\n\n> process task in parallel\n\nthis task processes tasks in parallel. it makes it convinient to process many tasks at once.\n\n\n# examples\n\nid: parallel\nnamespace: io.kestra.tests\n\ntasks:\n  - id: parallel\n    type: io.kestra.core.tasks.flows.parallel\n    tasks:\n      - id: 1st\n        type: io.kestra.core.tasks.debugs.return\n        format: "{{task.id}} > {{taskrun.startdate}}"\n      - id: 2nd\n        type: io.kestra.core.tasks.debugs.return\n        format: "{{task.id}} > {{taskrun.id}}"\n  - id: last\n    type: io.kestra.core.tasks.debugs.return\n    format: "{{task.id}} > {{taskrun.startdate}}"\n\n\n\n# properties\n\n\n# concurrent\n\n * type: integer\n * dynamic: ❓\n * required: ✔️\n * default: 0\n\n> number of concurrent parrallels tasks\n\nif the value is 0, no limit exist and all the tasks will start at the same time\n\n\n# errors\n\n * type: array\n * subtype: task-2\n * dynamic: ❓\n * required: ❌\n\n> list of tasks to run if any tasks failed on this flowabletask\n\n\n# tasks\n\n * type: array\n * subtype: task-2\n * dynamic: ❓\n * required: ❌\n\n\n# definitions',charsets:{}},{title:"Pause",frontmatter:{title:"Pause",editLink:!1,description:"Pause current execution and wait for a manual approval or a delay",icon:"PHN2ZyBoZWlnaHQ9JzMwMHB4JyB3aWR0aD0nMzAwcHgnICBmaWxsPSIjMEQxNTIzIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB4bWw6c3BhY2U9InByZXNlcnZlIiB2ZXJzaW9uPSIxLjEiIHN0eWxlPSJzaGFwZS1yZW5kZXJpbmc6Z2VvbWV0cmljUHJlY2lzaW9uO3RleHQtcmVuZGVyaW5nOmdlb21ldHJpY1ByZWNpc2lvbjtpbWFnZS1yZW5kZXJpbmc6b3B0aW1pemVRdWFsaXR5OyIgdmlld0JveD0iMCAwIDg0NyA4NDciIHg9IjBweCIgeT0iMHB4IiBmaWxsLXJ1bGU9ImV2ZW5vZGQiIGNsaXAtcnVsZT0iZXZlbm9kZCI+PGRlZnM+PHN0eWxlIHR5cGU9InRleHQvY3NzIj4KCiAgICAuZmlsMCB7ZmlsbDojMEQxNTIzfQoKICA8L3N0eWxlPjwvZGVmcz48Zz48cGF0aCBjbGFzcz0iZmlsMCIgZD0iTTE2IDQyM2MwLC0yMjUgMTgyLC00MDcgNDA3LC00MDcgMjI1LDAgNDA4LDE4MiA0MDgsNDA3IDAsMjI1IC0xODMsNDA4IC00MDgsNDA4IC0yMjUsMCAtNDA3LC0xODMgLTQwNywtNDA4em0yNjYgMTU5bDAgLTMxN2MwLC0xNCAxMSwtMjQgMjQsLTI0bDU5IDBjMTMsMCAyNCwxMCAyNCwyNGwwIDMxN2MwLDEzIC0xMSwyNCAtMjQsMjRsLTU5IDBjLTEzLDAgLTI0LC0xMSAtMjQsLTI0em0xNzYgMGwwIC0zMTdjMCwtMTQgMTEsLTI0IDI0LC0yNGw1OCAwYzE0LDAgMjQsMTAgMjQsMjRsMCAzMTdjMCwxMyAtMTAsMjQgLTI0LDI0bC01OCAwYy0xMywwIC0yNCwtMTEgLTI0LC0yNHoiPjwvcGF0aD48L2c+PC9zdmc+",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Pause"},{property:"og:description",content:"Pause current execution and wait for a manual approval or a delay | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/core/tasks/flows/io.kestra.core.tasks.flows.Pause.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Pause"},{name:"twitter:description",content:"Pause current execution and wait for a manual approval or a delay | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/core/tasks/flows/io.kestra.core.tasks.flows.Pause.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/core/tasks/flows/io.kestra.core.tasks.flows.Pause.html",relativePath:"plugins/core/tasks/flows/io.kestra.core.tasks.flows.Pause.md",key:"v-49f10763",path:"/plugins/core/tasks/flows/io.kestra.core.tasks.flows.Pause.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:122},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:484},{level:3,title:"delay",slug:"delay",normalizedTitle:"delay",charIndex:112},{level:3,title:"errors",slug:"errors",normalizedTitle:"errors",charIndex:700},{level:3,title:"tasks",slug:"tasks",normalizedTitle:"tasks",charIndex:29},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:931}],headersStr:"Examples Properties delay errors tasks Definitions",content:'Pause\n\ntype: "io.kestra.core.tasks.flows.Pause"\n\n\n> Pause current execution and wait for a manual approval or a delay\n\n\n# Examples\n\nid: pause\nnamespace: io.kestra.tests\n\ntasks:\n  - id: pause\n    type: io.kestra.core.tasks.flows.Pause\n    tasks:\n     - id: ko\n       type: io.kestra.core.tasks.scripts.Bash\n       commands:\n        - \'echo "trigger after manual restart"\'\n  - id: last\n    type: io.kestra.core.tasks.debugs.Return\n    format: "{{task.id}} > {{taskrun.startDate}}"\n\n\n\n# Properties\n\n\n# delay\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Format: duration\n\n> Duration of the pause.\n\nIf null, a manual approval is need, if not, the delay before automatically continue the execution\n\n\n# errors\n\n * Type: array\n * SubType: Task-2\n * Dynamic: ❓\n * Required: ❌\n\n> List of tasks to run if any tasks failed on this FlowableTask\n\n\n# tasks\n\n * Type: array\n * SubType: Task-2\n * Dynamic: ❓\n * Required: ✔️\n * Min items: 1\n\n\n# Definitions',normalizedContent:'pause\n\ntype: "io.kestra.core.tasks.flows.pause"\n\n\n> pause current execution and wait for a manual approval or a delay\n\n\n# examples\n\nid: pause\nnamespace: io.kestra.tests\n\ntasks:\n  - id: pause\n    type: io.kestra.core.tasks.flows.pause\n    tasks:\n     - id: ko\n       type: io.kestra.core.tasks.scripts.bash\n       commands:\n        - \'echo "trigger after manual restart"\'\n  - id: last\n    type: io.kestra.core.tasks.debugs.return\n    format: "{{task.id}} > {{taskrun.startdate}}"\n\n\n\n# properties\n\n\n# delay\n\n * type: string\n * dynamic: ❓\n * required: ❌\n * format: duration\n\n> duration of the pause.\n\nif null, a manual approval is need, if not, the delay before automatically continue the execution\n\n\n# errors\n\n * type: array\n * subtype: task-2\n * dynamic: ❓\n * required: ❌\n\n> list of tasks to run if any tasks failed on this flowabletask\n\n\n# tasks\n\n * type: array\n * subtype: task-2\n * dynamic: ❓\n * required: ✔️\n * min items: 1\n\n\n# definitions',charsets:{}},{title:"Sequential",frontmatter:{title:"Sequential",editLink:!1,description:"Process tasks ones after others sequentially",icon:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB3aWR0aD0iMjAiIGhlaWdodD0iMjAiCiAgICAgcHJlc2VydmVBc3BlY3RSYXRpbz0ieE1pZFlNaWQgbWVldCIgdmlld0JveD0iMCAwIDIwIDIwIgogICAgIHN0eWxlPSItbXMtdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTsgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpOyB0cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpOyI+CiAgICA8cGF0aAogICAgICAgIGQ9Ik0xMSAxMy44MjRWNi4xNzZBMi4zOTUgMi4zOTUgMCAwIDAgMTIuNCA0YTIuNCAyLjQgMCAxIDAtNC44IDBjMCAuOTY3LjU3NiAxLjc5NiAxLjQgMi4xNzZ2Ny42NDlBMi4zOTMgMi4zOTMgMCAwIDAgNy42IDE2YTIuNCAyLjQgMCAxIDAgNC44IDBjMC0uOTY3LS41NzUtMS43OTYtMS40LTIuMTc2ek0xMCAyLjYxNWExLjM4NCAxLjM4NCAwIDEgMSAwIDIuNzY4YTEuMzg0IDEuMzg0IDAgMCAxIDAtMi43Njh6bTAgMTQuNzdhMS4zODUgMS4zODUgMCAxIDEgMC0yLjc3YTEuMzg1IDEuMzg1IDAgMCAxIDAgMi43N3oiCiAgICAgICAgZmlsbD0iIzBEMTUyMyIvPgo8L3N2Zz4=",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Sequential"},{property:"og:description",content:"Process tasks ones after others sequentially | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/core/tasks/flows/io.kestra.core.tasks.flows.Sequential.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Sequential"},{name:"twitter:description",content:"Process tasks ones after others sequentially | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/core/tasks/flows/io.kestra.core.tasks.flows.Sequential.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/core/tasks/flows/io.kestra.core.tasks.flows.Sequential.html",relativePath:"plugins/core/tasks/flows/io.kestra.core.tasks.flows.Sequential.md",key:"v-dd1e609e",path:"/plugins/core/tasks/flows/io.kestra.core.tasks.flows.Sequential.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:148},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:630},{level:3,title:"errors",slug:"errors",normalizedTitle:"errors",charIndex:645},{level:3,title:"tasks",slug:"tasks",normalizedTitle:"tasks",charIndex:34},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:876}],headersStr:"Examples Properties errors tasks Definitions",content:'Sequential\n\ntype: "io.kestra.core.tasks.flows.Sequential"\n\n\n> Process tasks ones after others sequentially\n\nMostly use in order to group tasks.\n\n\n# Examples\n\nid: sequential\nnamespace: io.kestra.tests\n\ntasks:\n  - id: sequential\n    type: io.kestra.core.tasks.flows.Sequential\n    tasks:\n      - id: 1st\n        type: io.kestra.core.tasks.debugs.Return\n        format: "{{task.id}} > {{taskrun.startDate}}"\n      - id: 2nd\n        type: io.kestra.core.tasks.debugs.Return\n        format: "{{task.id}} > {{taskrun.id}}"\n  - id: last\n    type: io.kestra.core.tasks.debugs.Return\n    format: "{{task.id}} > {{taskrun.startDate}}"\n\n\n\n# Properties\n\n\n# errors\n\n * Type: array\n * SubType: Task-2\n * Dynamic: ❓\n * Required: ❌\n\n> List of tasks to run if any tasks failed on this FlowableTask\n\n\n# tasks\n\n * Type: array\n * SubType: Task-2\n * Dynamic: ❓\n * Required: ✔️\n * Min items: 1\n\n\n# Definitions',normalizedContent:'sequential\n\ntype: "io.kestra.core.tasks.flows.sequential"\n\n\n> process tasks ones after others sequentially\n\nmostly use in order to group tasks.\n\n\n# examples\n\nid: sequential\nnamespace: io.kestra.tests\n\ntasks:\n  - id: sequential\n    type: io.kestra.core.tasks.flows.sequential\n    tasks:\n      - id: 1st\n        type: io.kestra.core.tasks.debugs.return\n        format: "{{task.id}} > {{taskrun.startdate}}"\n      - id: 2nd\n        type: io.kestra.core.tasks.debugs.return\n        format: "{{task.id}} > {{taskrun.id}}"\n  - id: last\n    type: io.kestra.core.tasks.debugs.return\n    format: "{{task.id}} > {{taskrun.startdate}}"\n\n\n\n# properties\n\n\n# errors\n\n * type: array\n * subtype: task-2\n * dynamic: ❓\n * required: ❌\n\n> list of tasks to run if any tasks failed on this flowabletask\n\n\n# tasks\n\n * type: array\n * subtype: task-2\n * dynamic: ❓\n * required: ✔️\n * min items: 1\n\n\n# definitions',charsets:{}},{title:"Switch",frontmatter:{title:"Switch",editLink:!1,description:"Process some tasks conditionnaly depending on a contextual value",icon:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB3aWR0aD0iMjAiIGhlaWdodD0iMjAiCiAgICAgcHJlc2VydmVBc3BlY3RSYXRpbz0ieE1pZFlNaWQgbWVldCIgdmlld0JveD0iMCAwIDIwIDIwIgogICAgIHN0eWxlPSItbXMtdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTsgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpOyB0cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpOyI+CiAgICA8cGF0aAogICAgICAgIGQ9Ik0xNi40IDRhMi40IDIuNCAwIDEgMC00LjggMGMwIC45NjEuNTY4IDEuNzg0IDEuMzg0IDIuMTY3Yy0uMDgyIDEuNTg0LTEuMjcgMi4xMjItMy4zMzUgMi44OTZjLS44Ny4zMjctMS44MjkuNjg5LTIuNjQ5IDEuMjM0VjYuMTc2QTIuMzk2IDIuMzk2IDAgMCAwIDYgMS42YTIuMzk3IDIuMzk3IDAgMCAwLTEgNC41NzZ2Ny42NDlBMi4zOTMgMi4zOTMgMCAwIDAgMy42IDE2YTIuNCAyLjQgMCAxIDAgNC44IDBjMC0uOTYxLS41NjgtMS43ODQtMS4zODQtMi4xNjdjLjA4Mi0xLjU4MyAxLjI3MS0yLjEyMiAzLjMzNS0yLjg5NmMyLjAzLS43NjIgNC41NDEtMS43MTEgNC42NC00Ljc1NkEyLjM5OCAyLjM5OCAwIDAgMCAxNi40IDR6TTYgMi42MTVhMS4zODQgMS4zODQgMCAxIDEgMCAyLjc2OGExLjM4NCAxLjM4NCAwIDAgMSAwLTIuNzY4em0wIDE0Ljc3YTEuMzg1IDEuMzg1IDAgMSAxIDAtMi43N2ExLjM4NSAxLjM4NSAwIDAgMSAwIDIuNzd6bTgtMTJhMS4zODUgMS4zODUgMCAxIDEgMC0yLjc3YTEuMzg1IDEuMzg1IDAgMCAxIDAgMi43N3oiCiAgICAgICAgZmlsbD0iIzBEMTUyMyIvPgo8L3N2Zz4=",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Switch"},{property:"og:description",content:"Process some tasks conditionnaly depending on a contextual value | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/core/tasks/flows/io.kestra.core.tasks.flows.Switch.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Switch"},{name:"twitter:description",content:"Process some tasks conditionnaly depending on a contextual value | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/core/tasks/flows/io.kestra.core.tasks.flows.Switch.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/core/tasks/flows/io.kestra.core.tasks.flows.Switch.html",relativePath:"plugins/core/tasks/flows/io.kestra.core.tasks.flows.Switch.md",key:"v-797da7c7",path:"/plugins/core/tasks/flows/io.kestra.core.tasks.flows.Switch.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:221},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:997},{level:3,title:"cases",slug:"cases",normalizedTitle:"cases",charIndex:433},{level:3,title:"defaults",slug:"defaults",normalizedTitle:"defaults",charIndex:859},{level:3,title:"errors",slug:"errors",normalizedTitle:"errors",charIndex:1216},{level:3,title:"value",slug:"value",normalizedTitle:"value",charIndex:113},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1460},{level:3,title:"defaults",slug:"defaults-2",normalizedTitle:"defaults",charIndex:859},{level:3,title:"value",slug:"value-2",normalizedTitle:"value",charIndex:113},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:1548}],headersStr:"Examples Properties cases defaults errors value Outputs defaults value Definitions",content:'Switch\n\ntype: "io.kestra.core.tasks.flows.Switch"\n\n\n> Process some tasks conditionnaly depending on a contextual value\n\nAllow some workflow based on context variables, allow you to branch your based on previous task.\n\n\n# Examples\n\nid: switch\nnamespace: io.kestra.tests\n\ninputs:\n  - name: string\n    type: STRING\n    required: true\n\ntasks:\n  - id: switch\n    type: io.kestra.core.tasks.flows.Switch\n    value: "{{inputs.string}}"\n    cases:\n      FIRST:\n        - id: 1st\n          type: io.kestra.core.tasks.debugs.Return\n          format: "{{task.id}} > {{taskrun.startDate}}"\n      SECOND:\n        - id: 2nd\n          type: io.kestra.core.tasks.debugs.Return\n          format: "{{task.id}} > {{taskrun.startDate}}"\n      THIRD:\n        - id: 3th\n          type: io.kestra.core.tasks.debugs.Return\n          format: "{{task.id}} > {{taskrun.startDate}}"\n    defaults:\n      - id: default\n        type: io.kestra.core.tasks.debugs.Return\n        format: "{{task.id}} > {{taskrun.startDate}}"\n\n\n\n# Properties\n\n\n# cases\n\n * Type: object\n * Dynamic: ❓\n * Required: ❌\n\n> The case switch, as map with key the value, value the list of tasks\n\n\n# defaults\n\n * Type: array\n * SubType: Task-2\n * Dynamic: ❓\n * Required: ❌\n\n\n# errors\n\n * Type: array\n * SubType: Task-2\n * Dynamic: ❓\n * Required: ❌\n\n> List of tasks to run if any tasks failed on this FlowableTask\n\n\n# value\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> The value to be evaluated\n\n\n# Outputs\n\n\n# defaults\n\n * Type: boolean\n * Default: false\n\n\n# value\n\n * Type: string\n\n\n# Definitions',normalizedContent:'switch\n\ntype: "io.kestra.core.tasks.flows.switch"\n\n\n> process some tasks conditionnaly depending on a contextual value\n\nallow some workflow based on context variables, allow you to branch your based on previous task.\n\n\n# examples\n\nid: switch\nnamespace: io.kestra.tests\n\ninputs:\n  - name: string\n    type: string\n    required: true\n\ntasks:\n  - id: switch\n    type: io.kestra.core.tasks.flows.switch\n    value: "{{inputs.string}}"\n    cases:\n      first:\n        - id: 1st\n          type: io.kestra.core.tasks.debugs.return\n          format: "{{task.id}} > {{taskrun.startdate}}"\n      second:\n        - id: 2nd\n          type: io.kestra.core.tasks.debugs.return\n          format: "{{task.id}} > {{taskrun.startdate}}"\n      third:\n        - id: 3th\n          type: io.kestra.core.tasks.debugs.return\n          format: "{{task.id}} > {{taskrun.startdate}}"\n    defaults:\n      - id: default\n        type: io.kestra.core.tasks.debugs.return\n        format: "{{task.id}} > {{taskrun.startdate}}"\n\n\n\n# properties\n\n\n# cases\n\n * type: object\n * dynamic: ❓\n * required: ❌\n\n> the case switch, as map with key the value, value the list of tasks\n\n\n# defaults\n\n * type: array\n * subtype: task-2\n * dynamic: ❓\n * required: ❌\n\n\n# errors\n\n * type: array\n * subtype: task-2\n * dynamic: ❓\n * required: ❌\n\n> list of tasks to run if any tasks failed on this flowabletask\n\n\n# value\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> the value to be evaluated\n\n\n# outputs\n\n\n# defaults\n\n * type: boolean\n * default: false\n\n\n# value\n\n * type: string\n\n\n# definitions',charsets:{}},{title:"ExecutorTemplate",frontmatter:{title:"ExecutorTemplate",editLink:!1,description:"Include a resuable template inside a flow",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"ExecutorTemplate"},{property:"og:description",content:"Include a resuable template inside a flow | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/core/tasks/flows/io.kestra.core.tasks.flows.Template$ExecutorTemplate.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"ExecutorTemplate"},{name:"twitter:description",content:"Include a resuable template inside a flow | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/core/tasks/flows/io.kestra.core.tasks.flows.Template$ExecutorTemplate.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/core/tasks/flows/io.kestra.core.tasks.flows.Template$ExecutorTemplate.html",relativePath:"plugins/core/tasks/flows/io.kestra.core.tasks.flows.Template$ExecutorTemplate.md",key:"v-6717a943",path:"/plugins/core/tasks/flows/io.kestra.core.tasks.flows.Template$ExecutorTemplate.html",headers:[{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:129},{level:3,title:"args",slug:"args",normalizedTitle:"args",charIndex:144},{level:3,title:"errors",slug:"errors",normalizedTitle:"errors",charIndex:719},{level:3,title:"namespace",slug:"namespace",normalizedTitle:"namespace",charIndex:518},{level:3,title:"template",slug:"template",normalizedTitle:"template",charIndex:102},{level:3,title:"templateId",slug:"templateid",normalizedTitle:"templateid",charIndex:549},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1102},{level:3,title:"args",slug:"args-2",normalizedTitle:"args",charIndex:144},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:1175},{level:3,title:"Template",slug:"template-2",normalizedTitle:"template",charIndex:8}],headersStr:"Properties args errors namespace template templateId Outputs args Definitions Template",content:'ExecutorTemplate\n\ntype: "io.kestra.core.tasks.flows.Template$ExecutorTemplate"\n\n\n> Include a resuable template inside a flow\n\n\n# Properties\n\n\n# args\n\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The args to pass to the template\n\nYou can provide a list of named arguments (like function argument on dev) allowing to rename outputs of current flow for this template.\nfor example, if you declare this use of template like this:\n\n  - id: 2-template\n    type: io.kestra.core.tasks.flows.Template\n    namespace: io.kestra.tests\n    templateId: template\n    args:\n      forward: "{{ output.task-id.uri }}"\n\n\nYou will be able to get this output on the template with {{ parent.outputs.args.forward }}\n\n\n# errors\n\n * Type: array\n * SubType: Task-2\n * Dynamic: ❓\n * Required: ❌\n\n> List of tasks to run if any tasks failed on this FlowableTask\n\n\n# namespace\n\n * Type: string\n * Dynamic: ❌\n * Required: ✔️\n\n> The namespace of the template\n\n\n# template\n\n * Type: Template\n * Dynamic: ❓\n * Required: ❌\n\n\n# templateId\n\n * Type: string\n * Dynamic: ❌\n * Required: ✔️\n\n> The id of the template\n\n\n# Outputs\n\n\n# args\n\n * Type: object\n\n> The args passed to the template\n\n\n# Definitions\n\n\n# Template\n\n# deleted\n\n * Type: boolean\n * Dynamic: ❓\n * Required: ✔️\n * Default: false\n\n# description\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# errors\n\n * Type: array\n * SubType: Task-2\n * Dynamic: ❓\n * Required: ❌\n\n# id\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n * Validation regExp: [a-zA-Z0-9._-]+\n * Min length: 1\n\n# namespace\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n * Validation regExp: [a-z0-9._-]+\n\n# tasks\n\n * Type: array\n * SubType: Task-2\n * Dynamic: ❓\n * Required: ✔️\n * Min items: 1',normalizedContent:'executortemplate\n\ntype: "io.kestra.core.tasks.flows.template$executortemplate"\n\n\n> include a resuable template inside a flow\n\n\n# properties\n\n\n# args\n\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> the args to pass to the template\n\nyou can provide a list of named arguments (like function argument on dev) allowing to rename outputs of current flow for this template.\nfor example, if you declare this use of template like this:\n\n  - id: 2-template\n    type: io.kestra.core.tasks.flows.template\n    namespace: io.kestra.tests\n    templateid: template\n    args:\n      forward: "{{ output.task-id.uri }}"\n\n\nyou will be able to get this output on the template with {{ parent.outputs.args.forward }}\n\n\n# errors\n\n * type: array\n * subtype: task-2\n * dynamic: ❓\n * required: ❌\n\n> list of tasks to run if any tasks failed on this flowabletask\n\n\n# namespace\n\n * type: string\n * dynamic: ❌\n * required: ✔️\n\n> the namespace of the template\n\n\n# template\n\n * type: template\n * dynamic: ❓\n * required: ❌\n\n\n# templateid\n\n * type: string\n * dynamic: ❌\n * required: ✔️\n\n> the id of the template\n\n\n# outputs\n\n\n# args\n\n * type: object\n\n> the args passed to the template\n\n\n# definitions\n\n\n# template\n\n# deleted\n\n * type: boolean\n * dynamic: ❓\n * required: ✔️\n * default: false\n\n# description\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# errors\n\n * type: array\n * subtype: task-2\n * dynamic: ❓\n * required: ❌\n\n# id\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n * validation regexp: [a-za-z0-9._-]+\n * min length: 1\n\n# namespace\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n * validation regexp: [a-z0-9._-]+\n\n# tasks\n\n * type: array\n * subtype: task-2\n * dynamic: ❓\n * required: ✔️\n * min items: 1',charsets:{}},{title:"Template",frontmatter:{title:"Template",editLink:!1,description:"Include a resuable template inside a flow",icon:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB3aWR0aD0iMjQiIGhlaWdodD0iMjQiCiAgICAgcHJlc2VydmVBc3BlY3RSYXRpbz0ieE1pZFlNaWQgbWVldCIgdmlld0JveD0iMCAwIDI0IDI0IgogICAgIHN0eWxlPSItbXMtdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTsgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpOyB0cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpOyI+CiAgICA8cGF0aCBkPSJNMjAgMkgxMGEyIDIgMCAwIDAtMiAydjJoOGEyIDIgMCAwIDEgMiAydjhoMmEyIDIgMCAwIDAgMi0yVjRhMiAyIDAgMCAwLTItMnoiIGZpbGw9IiMwRDE1MjMiLz4KICAgIDxwYXRoCiAgICAgICAgZD0iTTQgMjJoMTBjMS4xMDMgMCAyLS44OTcgMi0yVjEwYzAtMS4xMDMtLjg5Ny0yLTItMkg0Yy0xLjEwMyAwLTIgLjg5Ny0yIDJ2MTBjMCAxLjEwMy44OTcgMiAyIDJ6bTItMTBoNnYySDZ2LTJ6bTAgNGg2djJINnYtMnoiCiAgICAgICAgZmlsbD0iIzBEMTUyMyIvPgo8L3N2Zz4=",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Template"},{property:"og:description",content:"Include a resuable template inside a flow | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/core/tasks/flows/io.kestra.core.tasks.flows.Template.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Template"},{name:"twitter:description",content:"Include a resuable template inside a flow | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/core/tasks/flows/io.kestra.core.tasks.flows.Template.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/core/tasks/flows/io.kestra.core.tasks.flows.Template.html",relativePath:"plugins/core/tasks/flows/io.kestra.core.tasks.flows.Template.md",key:"v-52208f8a",path:"/plugins/core/tasks/flows/io.kestra.core.tasks.flows.Template.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:104},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:613},{level:3,title:"args",slug:"args",normalizedTitle:"args",charIndex:447},{level:3,title:"errors",slug:"errors",normalizedTitle:"errors",charIndex:1203},{level:3,title:"namespace",slug:"namespace",normalizedTitle:"namespace",charIndex:127},{level:3,title:"templateId",slug:"templateid",normalizedTitle:"templateid",charIndex:422},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1525},{level:3,title:"args",slug:"args-2",normalizedTitle:"args",charIndex:447},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:1598}],headersStr:"Examples Properties args errors namespace templateId Outputs args Definitions",content:'Template\n\ntype: "io.kestra.core.tasks.flows.Template"\n\n\n> Include a resuable template inside a flow\n\n\n# Examples\n\nid: template\nnamespace: io.kestra.tests\n\ninputs:\n  - name: with-string\n    type: STRING\n\ntasks:\n  - id: 1-return\n    type: io.kestra.core.tasks.debugs.Return\n    format: "{{task.id}} > {{taskrun.startDate}}"\n  - id: 2-template\n    type: io.kestra.core.tasks.flows.Template\n    namespace: io.kestra.tests\n    templateId: template\n    args:\n      my-forward: "{{ inputs.with-string }}"\n  - id: 3-end\n    type: io.kestra.core.tasks.debugs.Return\n    format: "{{task.id}} > {{taskrun.startDate}}"\n\n\n\n\n# Properties\n\n\n# args\n\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The args to pass to the template\n\nYou can provide a list of named arguments (like function argument on dev) allowing to rename outputs of current flow for this template.\nfor example, if you declare this use of template like this:\n\n  - id: 2-template\n    type: io.kestra.core.tasks.flows.Template\n    namespace: io.kestra.tests\n    templateId: template\n    args:\n      forward: "{{ output.task-id.uri }}"\n\n\nYou will be able to get this output on the template with {{ parent.outputs.args.forward }}\n\n\n# errors\n\n * Type: array\n * SubType: Task-2\n * Dynamic: ❓\n * Required: ❌\n\n> List of tasks to run if any tasks failed on this FlowableTask\n\n\n# namespace\n\n * Type: string\n * Dynamic: ❌\n * Required: ✔️\n\n> The namespace of the template\n\n\n# templateId\n\n * Type: string\n * Dynamic: ❌\n * Required: ✔️\n\n> The id of the template\n\n\n# Outputs\n\n\n# args\n\n * Type: object\n\n> The args passed to the template\n\n\n# Definitions',normalizedContent:'template\n\ntype: "io.kestra.core.tasks.flows.template"\n\n\n> include a resuable template inside a flow\n\n\n# examples\n\nid: template\nnamespace: io.kestra.tests\n\ninputs:\n  - name: with-string\n    type: string\n\ntasks:\n  - id: 1-return\n    type: io.kestra.core.tasks.debugs.return\n    format: "{{task.id}} > {{taskrun.startdate}}"\n  - id: 2-template\n    type: io.kestra.core.tasks.flows.template\n    namespace: io.kestra.tests\n    templateid: template\n    args:\n      my-forward: "{{ inputs.with-string }}"\n  - id: 3-end\n    type: io.kestra.core.tasks.debugs.return\n    format: "{{task.id}} > {{taskrun.startdate}}"\n\n\n\n\n# properties\n\n\n# args\n\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> the args to pass to the template\n\nyou can provide a list of named arguments (like function argument on dev) allowing to rename outputs of current flow for this template.\nfor example, if you declare this use of template like this:\n\n  - id: 2-template\n    type: io.kestra.core.tasks.flows.template\n    namespace: io.kestra.tests\n    templateid: template\n    args:\n      forward: "{{ output.task-id.uri }}"\n\n\nyou will be able to get this output on the template with {{ parent.outputs.args.forward }}\n\n\n# errors\n\n * type: array\n * subtype: task-2\n * dynamic: ❓\n * required: ❌\n\n> list of tasks to run if any tasks failed on this flowabletask\n\n\n# namespace\n\n * type: string\n * dynamic: ❌\n * required: ✔️\n\n> the namespace of the template\n\n\n# templateid\n\n * type: string\n * dynamic: ❌\n * required: ✔️\n\n> the id of the template\n\n\n# outputs\n\n\n# args\n\n * type: object\n\n> the args passed to the template\n\n\n# definitions',charsets:{}},{title:"Worker",frontmatter:{title:"Worker",editLink:!1,description:"Run tasks sequentially sharing the same filesystem",icon:"PHN2ZyBpZD0ic2NyZWVuc2hvdCIgdmlld0JveD0iMCAwIDU2MyA0OTEuOTk5OTk5OTk5OTk5OSIgd2lkdGg9IjU2MyIgaGVpZ2h0PSI0OTEuOTk5OTk5OTk5OTk5OSIgdmVyc2lvbj0iMS4xIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiBzdHlsZT0iLXdlYmtpdC1wcmludC1jb2xvci1hZGp1c3Q6IGV4YWN0OyI+PGcgaWQ9InNoYXBlLTkwNWIzMmMwLWEzODAtMTFlYy1iODZiLTgxYjFiOWNjYzZjOSIgY2xpcC1wYXRoPSJ1cmwoI2ZyYW1lLWNsaXAtOTA1YjMyYzAtYTM4MC0xMWVjLWI4NmItODFiMWI5Y2NjNmM5LWJkMGU1ZmUwLWEzODAtMTFlYy05MzEwLTMzYzc2Y2M4NzJmYikiPjxkZWZzPjxjbGlwUGF0aCBpZD0iZnJhbWUtY2xpcC05MDViMzJjMC1hMzgwLTExZWMtYjg2Yi04MWIxYjljY2M2YzktYmQwZTVmZTAtYTM4MC0xMWVjLTkzMTAtMzNjNzZjYzg3MmZiIiBjbGFzcz0iZnJhbWUtY2xpcCI+PHJlY3QgeD0iMCIgeT0iMCIgd2lkdGg9IjU2MyIgaGVpZ2h0PSI0OTIiLz48L2NsaXBQYXRoPjwvZGVmcz48ZyBpZD0ic2hhcGUtODdlNzBiNTAtYTM4MC0xMWVjLWI4NmItODFiMWI5Y2NjNmM5IiB3aWR0aD0iNzAwcHQiIGhlaWdodD0iNzAwcHQiIHZlcnNpb249IjEuMSI+PGcgaWQ9InNoYXBlLTg3ZTc1OTcwLWEzODAtMTFlYy1iODZiLTgxYjFiOWNjYzZjOSI+PGcgaWQ9InNoYXBlLTg3ZTg5MWYwLWEzODAtMTFlYy1iODZiLTgxYjFiOWNjYzZjOSI+PHBhdGggZD0iTTUwLjM1MDAwMDAwMDAwMDAyLDIwNy42OUwxODAuNTkwMDAwMDAwMDAwMDMsMjA3LjY5QzE5OC4xMjA5OTk5OTk5OTk5OCwyMDcuNjksMjEyLjM3OTAwMDAwMDAwMDAyLDE5My40MTMsMjEyLjM3OTAwMDAwMDAwMDAyLDE3NS44NzhMMjEyLjM3OTAwMDAwMDAwMDAyLDQ1LjY1Nzk5OTk5OTk5OTk5QzIxMi4zNzkwMDAwMDAwMDAwMiwyOC4xMjI5OTk5OTk5OTk5OSwxOTguMTIxMDAwMDAwMDAwMSwxMy44NDU5OTk5OTk5OTk5OSwxODAuNTcwMDAwMDAwMDAwMDUsMTMuODQ1OTk5OTk5OTk5OTlMNTAuMzUwMDAwMDAwMDAwMDIsMTMuODQ1OTk5OTk5OTk5OTlDMzIuNzk1MDAwMDAwMDAwMDE2LDEzLjg0NTk5OTk5OTk5OTk5LDE4LjUzODAwMDAwMDAwMDAxLDI4LjEyMjk5OTk5OTk5OTk5LDE4LjUzODAwMDAwMDAwMDAxLDQ1LjY1Nzk5OTk5OTk5OTk5TDE4LjUzODAwMDAwMDAwMDAxLDE3NS44OThDMTguNTM4MDAwMDAwMDAwMDEsMTkzLjQxLDMyLjc5NjAwMDAwMDAwMDA1LDIwNy42ODcsNTAuMzUwMDAwMDAwMDAwMDIsMjA3LjY5WlpNNDAuMDc3LDQ1LjY2QzQwLjA3NywzOS45OTE5OTk5OTk5OTk5OSw0NC42ODYzOTk5OTk5OTk5OSwzNS4zODI5OTk5OTk5OTk5OTYsNTAuMzUwMDAwMDAwMDAwMDIsMzUuMzgyOTk5OTk5OTk5OTk2TDE4MC41OTAwMDAwMDAwMDAwMywzNS4zODI5OTk5OTk5OTk5OTZDMTg2LjIzNDUwMDAwMDAwMDAzLDM1LjM4Mjk5OTk5OTk5OTk5NiwxOTAuODQ0MDAwMDAwMDAwMDUsMzkuOTkyMzk5OTk5OTk5OTksMTkwLjg0NDAwMDAwMDAwMDA1LDQ1LjY2TDE5MC44NDQwMDAwMDAwMDAwNSwxNzUuOUMxOTAuODQ0MDAwMDAwMDAwMDUsMTgxLjU0MDYsMTg2LjIzNDYsMTg2LjE1LDE4MC41NzEwMDAwMDAwMDAwMywxODYuMTVMNTAuMzUxLDE4Ni4xNUM0NC42ODY4OTk5OTk5OTk5OCwxODYuMTUsNDAuMDc3OTk5OTk5OTk5OTc1LDE4MS41NDA2LDQwLjA3Nzk5OTk5OTk5OTk3NSwxNzUuODc3WiIvPjwvZz48ZyBpZD0ic2hhcGUtODdlOTJlMzAtYTM4MC0xMWVjLWI4NmItODFiMWI5Y2NjNmM5Ij48cGF0aCBkPSJNNTAuMzUwMDAwMDAwMDAwMDIsNDY2LjE1TDE4MC41OTAwMDAwMDAwMDAwMyw0NjYuMTVDMTk4LjEyMDk5OTk5OTk5OTk4LDQ2Ni4xNSwyMTIuMzc5MDAwMDAwMDAwMDIsNDUxLjg3MywyMTIuMzc5MDAwMDAwMDAwMDIsNDM0LjMzNzk5OTk5OTk5OTk3TDIxMi4zNzkwMDAwMDAwMDAwMiwzMDQuMDk3OTk5OTk5OTk5OTZDMjEyLjM3OTAwMDAwMDAwMDAyLDI4Ni41NjY5OTk5OTk5OTk5NSwxOTguMTIxMDAwMDAwMDAwMSwyNzIuMjg1OTk5OTk5OTk5OTQsMTgwLjU2NywyNzIuMjg1OTk5OTk5OTk5OTRMNTAuMzQ2OTk5OTk5OTk5OTgsMjcyLjI4NTk5OTk5OTk5OTk0QzMyLjc5MjAwMDAwMDAwMDAzLDI3Mi4zMDk0Mzc5OTk5OTk5NCwxOC41MzUwMDAwMDAwMDAwMjUsMjg2LjU4Njk5OTk5OTk5OTkzLDE4LjUzNTAwMDAwMDAwMDAyNSwzMDQuMTIxOTk5OTk5OTk5OTZMMTguNTM1MDAwMDAwMDAwMDI1LDQzNC4zNjE5OTk5OTk5OTk5N0MxOC41MzUwMDAwMDAwMDAwMjUsNDUxLjg3Mzk5OTk5OTk5OTk3LDMyLjc5MzAwMDAwMDAwMDAwNiw0NjYuMTUwOTk5OTk5OTk5OTUsNTAuMzUwMDAwMDAwMDAwMDIsNDY2LjE1WlpNNDAuMDc3LDMwNC4xMkM0MC4wNzcsMjk4LjQ1NTksNDQuNjg2Mzk5OTk5OTk5OTksMjkzLjg0Nyw1MC4zNTAwMDAwMDAwMDAwMiwyOTMuODQ3TDE4MC41OTAwMDAwMDAwMDAwMywyOTMuODQ3QzE4Ni4yMzQ1MDAwMDAwMDAwMywyOTMuODQ3LDE5MC44NDQwMDAwMDAwMDAwNSwyOTguNDU2NCwxOTAuODQ0MDAwMDAwMDAwMDUsMzA0LjEyTDE5MC44NDQwMDAwMDAwMDAwNSw0MzQuMzZDMTkwLjg0NDAwMDAwMDAwMDA1LDQ0MC4wMDQ1LDE4Ni4yMzQ2LDQ0NC42MTQwMDAwMDAwMDAwMywxODAuNTcxMDAwMDAwMDAwMDMsNDQ0LjYxNDAwMDAwMDAwMDAzTDUwLjM1MSw0NDQuNjE0MDAwMDAwMDAwMDNDNDQuNjg2ODk5OTk5OTk5OTgsNDQ0LjYxNDAwMDAwMDAwMDAzLDQwLjA3Nzk5OTk5OTk5OTk3NSw0NDAuMDA0NjAwMDAwMDAwMDQsNDAuMDc3OTk5OTk5OTk5OTc1LDQzNC4zMzcwMDAwMDAwMDAwNVoiLz48L2c+PGcgaWQ9InNoYXBlLTg3ZTk3YzUwLWEzODAtMTFlYy1iODZiLTgxYjFiOWNjYzZjOSI+PHBhdGggZD0iTTUyNC42OSw1Ni45MjJMMjc3LDU2LjkyMkMyNzEuMDU0NzAwMDAwMDAwMTQsNTYuOTIyLDI2Ni4yMyw2MS43NDYyLDI2Ni4yMyw2Ny42OTJDMjY2LjIzLDczLjYzNzMsMjcxLjA1NDIwMDAwMDAwMDA0LDc4LjQ2MTk5OTk5OTk5OTk5LDI3Nyw3OC40NjE5OTk5OTk5OTk5OUw1MjQuNjksNzguNDYxOTk5OTk5OTk5OTlDNTMwLjYzNTMsNzguNDYxOTk5OTk5OTk5OTksNTM1LjQ2LDczLjYzNzc5OTk5OTk5OTk4LDUzNS40Niw2Ny42OTJDNTM1LjQ2LDYxLjc0NjY5OTk5OTk5OTk5LDUzMC42MzU4LDU2LjkyMiw1MjQuNjksNTYuOTIyWloiLz48L2c+PGcgaWQ9InNoYXBlLTg3ZTljYTcwLWEzODAtMTFlYy1iODZiLTgxYjFiOWNjYzZjOSI+PHBhdGggZD0iTTI3NywxNjQuNjJMNDM5LjIxMDAwMDAwMDAwMDA0LDE2NC42MkM0NDUuMTU1MywxNjQuNjIsNDQ5Ljk4LDE1OS43OTU4LDQ0OS45OCwxNTMuODVDNDQ5Ljk4LDE0Ny45MDQ3LDQ0NS4xNTU4LDE0My4wNzk5OTk5OTk5OTk5OCw0MzkuMjEwMDAwMDAwMDAwMDQsMTQzLjA3OTk5OTk5OTk5OTk4TDI3NywxNDMuMDc5OTk5OTk5OTk5OThDMjcxLjA1NDcsMTQzLjA3OTk5OTk5OTk5OTk4LDI2Ni4yMywxNDcuOTA0MTk5OTk5OTk5OTcsMjY2LjIzLDE1My44NUMyNjYuMjMsMTU5Ljc5MTM5OTk5OTk5OTk4LDI3MS4wNTQyMDAwMDAwMDAwNCwxNjQuNjIsMjc3LDE2NC42MlpaIi8+PC9nPjxnIGlkPSJzaGFwZS04N2U5ZjE4MC1hMzgwLTExZWMtYjg2Yi04MWIxYjljY2M2YzkiPjxwYXRoIGQ9Ik01MjQuNjksMzE1LjM4TDI3NywzMTUuMzhDMjcxLjA1NDcwMDAwMDAwMDE0LDMxNS4zOCwyNjYuMjMsMzIwLjIwNDIsMjY2LjIzLDMyNi4xNUMyNjYuMjMsMzMyLjA5NTI5OTk5OTk5OTk1LDI3MS4wNTQyMDAwMDAwMDAwNCwzMzYuOTE5OTk5OTk5OTk5OTYsMjc3LDMzNi45MTk5OTk5OTk5OTk5Nkw1MjQuNjksMzM2LjkxOTk5OTk5OTk5OTk2QzUzMC42MzUzLDMzNi45MTk5OTk5OTk5OTk5Niw1MzUuNDYsMzMyLjA5NTc5OTk5OTk5OTk0LDUzNS40NiwzMjYuMTVDNTM1LjQ2LDMyMC4yMDg2LDUzMC42MzU4LDMxNS4zOCw1MjQuNjksMzE1LjM4WloiLz48L2c+PGcgaWQ9InNoYXBlLTg3ZWEzZmEwLWEzODAtMTFlYy1iODZiLTgxYjFiOWNjYzZjOSI+PHBhdGggZD0iTTQzOS4yMTAwMDAwMDAwMDAwNCw0MjMuMDhDNDQ1LjE1NTMsNDIzLjA4LDQ0OS45OCw0MTguMjU1Nzk5OTk5OTk5OTcsNDQ5Ljk4LDQxMi4zMUM0NDkuOTgsNDA2LjM2NDcsNDQ1LjE1NTgsNDAxLjU0LDQzOS4yMTAwMDAwMDAwMDAwNCw0MDEuNTRMMjc3LDQwMS41NEMyNzEuMDU0Nyw0MDEuNTQsMjY2LjIzLDQwNi4zNjQyMDAwMDAwMDAwNCwyNjYuMjMsNDEyLjMxQzI2Ni4yMyw0MTguMjU1MywyNzEuMDU0MjAwMDAwMDAwMDQsNDIzLjA4LDI3Nyw0MjMuMDhaIi8+PC9nPjwvZz48L2c+PC9nPjwvc3ZnPg==",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Worker"},{property:"og:description",content:"Run tasks sequentially sharing the same filesystem | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/core/tasks/flows/io.kestra.core.tasks.flows.Worker.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Worker"},{name:"twitter:description",content:"Run tasks sequentially sharing the same filesystem | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/core/tasks/flows/io.kestra.core.tasks.flows.Worker.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/core/tasks/flows/io.kestra.core.tasks.flows.Worker.html",relativePath:"plugins/core/tasks/flows/io.kestra.core.tasks.flows.Worker.md",key:"v-3a8e0133",path:"/plugins/core/tasks/flows/io.kestra.core.tasks.flows.Worker.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:434},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:890},{level:3,title:"errors",slug:"errors",normalizedTitle:"errors",charIndex:905},{level:3,title:"tasks",slug:"tasks",normalizedTitle:"tasks",charIndex:30},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:1136}],headersStr:"Examples Properties errors tasks Definitions",content:'Worker\n\ntype: "io.kestra.core.tasks.flows.Worker"\n\n\n> Run tasks sequentially sharing the same filesystem\n\nBy default, Kestra will launch each task on a fresh filesystem and on a new worker instance.\nThis task will run sequentially keeping the same filesystem allowing reuse previous task file on next tasks andkeep tracking of execution time for each task. This task is mostly useful when working with large filesystem operation.\n\n\n# Examples\n\nid: worker\nnamespace: io.kestra.tests\n\ntasks:\n  - id: worker\n    type: io.kestra.core.tasks.flows.Worker\n    tasks:\n      - id: first\n        type: io.kestra.core.tasks.scripts.Bash\n        commands:\n        - \'echo "{{ taskrun.id }}" > {{ workingDir }}/stay.txt\'\n      - id: second\n        type: io.kestra.core.tasks.scripts.Bash\n        commands:\n        - |\n          echo \'::{"outputs": {"stay":"\'$(cat {{ workingDir }}/stay.txt)\'"}}::\'\n\n\n\n# Properties\n\n\n# errors\n\n * Type: array\n * SubType: Task-2\n * Dynamic: ❓\n * Required: ❌\n\n> List of tasks to run if any tasks failed on this FlowableTask\n\n\n# tasks\n\n * Type: array\n * SubType: Task-2\n * Dynamic: ❓\n * Required: ✔️\n * Min items: 1\n\n\n# Definitions',normalizedContent:'worker\n\ntype: "io.kestra.core.tasks.flows.worker"\n\n\n> run tasks sequentially sharing the same filesystem\n\nby default, kestra will launch each task on a fresh filesystem and on a new worker instance.\nthis task will run sequentially keeping the same filesystem allowing reuse previous task file on next tasks andkeep tracking of execution time for each task. this task is mostly useful when working with large filesystem operation.\n\n\n# examples\n\nid: worker\nnamespace: io.kestra.tests\n\ntasks:\n  - id: worker\n    type: io.kestra.core.tasks.flows.worker\n    tasks:\n      - id: first\n        type: io.kestra.core.tasks.scripts.bash\n        commands:\n        - \'echo "{{ taskrun.id }}" > {{ workingdir }}/stay.txt\'\n      - id: second\n        type: io.kestra.core.tasks.scripts.bash\n        commands:\n        - |\n          echo \'::{"outputs": {"stay":"\'$(cat {{ workingdir }}/stay.txt)\'"}}::\'\n\n\n\n# properties\n\n\n# errors\n\n * type: array\n * subtype: task-2\n * dynamic: ❓\n * required: ❌\n\n> list of tasks to run if any tasks failed on this flowabletask\n\n\n# tasks\n\n * type: array\n * subtype: task-2\n * dynamic: ❓\n * required: ✔️\n * min items: 1\n\n\n# definitions',charsets:{cjk:!0}},{title:"Bash",frontmatter:{title:"Bash",editLink:!1,description:"Execute a Bash script, command or set of commands.",icon:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB2aWV3Qm94PSIwIDAgNTggNjciIGZpbGw9IiNmZmYiCiAgICAgZmlsbC1ydWxlPSJldmVub2RkIiBzdHJva2U9IiMwMDAiIHN0cm9rZS1saW5lY2FwPSJyb3VuZCIgc3Ryb2tlLWxpbmVqb2luPSJyb3VuZCI+CiAgICA8dXNlIHhsaW5rOmhyZWY9IiNBIiB4PSIxIiB5PSIxIi8+CiAgICA8c3ltYm9sIGlkPSJBIiBvdmVyZmxvdz0idmlzaWJsZSI+CiAgICAgICAgPHBhdGgKICAgICAgICAgICAgZD0iTTUyLjExNCAxMy4wNjFMMzEuOTA0IDEuMDY1YTcuNiA3LjYgMCAwIDAtNy43NiAwTDMuOTMgMTMuMDYxQTguMDYgOC4wNiAwIDAgMCAwIDIwLjAwNXYyMy45OTJhOC4wNiA4LjA2IDAgMCAwIDMuODk2IDYuOTQ0bDIwLjIxIDExLjk5NmE3LjYgNy42IDAgMCAwIDcuNzYgMEw1Mi4wOCA1MC45NDFhOC4wNiA4LjA2IDAgMCAwIDMuODk2LTYuOTQ0VjIwLjAwNWE4LjA2IDguMDYgMCAwIDAtMy44Ni02Ljk0NHpNMzYuNDYgNTAuNTI1djEuNzJjLS4wMDIuMjE2LS4xMTQuNDE0LS4yOTYuNTNsLTEuMDI0LjU4NmMtLjE2LjA4NC0uMjk2IDAtLjI5Ni0uMjI2di0xLjY5NGEzLjMyIDMuMzIgMCAwIDEtMi4zMjguMjI2Yy0uMTI0LS4wODQtLjE3Mi0uMjQ0LS4xMTItLjRsLjM2Ni0xLjU2Yy4wMzItLjEzMi4xLS4yNS4yMDQtLjM0LjAyOS0uMDI5LjA2My0uMDUzLjEtLjA3YS4yMi4yMiAwIDAgMSAuMTYgMCAyLjgyIDIuODIgMCAwIDAgMi4xMTgtLjI2OCAyLjgyIDIuODIgMCAwIDAgMS41OC0yLjQyYzAtLjg3Ni0uNDgtMS4yNC0xLjY0LTEuMjUtMS40NjggMC0yLjgtLjI4LTIuODYtMi40NDguMDM0LTEuODc0LjkwNC0zLjYzNCAyLjM3Mi00Ljh2LTEuNzQ0YS42OC42OCAwIDAgMSAuMjk2LS41MzZsLjk4OC0uNjI4Yy4xNi0uMDg0LjI5NiAwIC4yOTYuMjMydjEuNzQ0YTMuMjIgMy4yMiAwIDAgMSAxLjkzNC0uMjMyLjMxLjMxIDAgMCAxIC4xMjguNGwtLjM0NiAxLjU0NmEuNjUuNjUgMCAwIDEtLjE3Ni4zMS40NS40NSAwIDAgMS0uMS4wOGMtLjA0LjAyNC0uMS4wMTYtLjE0OCAwYTIuNTYgMi41NiAwIDAgMC0xLjg2Mi4zMDQgMi4zNCAyLjM0IDAgMCAwLTEuNDEyIDIuMDc0YzAgLjc5LjQxNiAxLjAzIDEuODE0IDEuMDYgMS44NyAwIDIuNjc0Ljg0NiAyLjY5NiAyLjcyNC0uMDM2IDEuOTY2LS45MzQgMy44MTYtMi40NTYgNS4wNnptMTAuNTg2LTIuOWMuMDI0LjE0OC0uMDM2LjMtLjE1Ni4zODhsLTUuMDkgMy4xMDRjLS4wNDguMDQtLjEyLjA0Ni0uMTc0LjAxNGEuMTUuMTUgMCAwIDEtLjA2Ni0uMTZ2LTEuMzJhLjM3LjM3IDAgMCAxIC4yMzItLjMyNGw1LjAzMi0zLjAxNGMuMDQ4LS4wNC4xMi0uMDQ2LjE3NC0uMDE0YS4xNS4xNSAwIDAgMSAuMDY2LjE2djEuMTY0em0zLjUzLTI5LjUwNEwzMS40NTIgMjkuOTMzYy0yLjM4NiAxLjQxMi00LjE0IDIuOTU2LTQuMTQgNS44Mjh2MjMuNTU2YzAgMS43Mi43MDYgMi44IDEuNzY0IDMuMTYtLjM1LjA2NS0uNzA0LjEwMS0xLjA2LjEwNmE2LjI2IDYuMjYgMCAwIDEtMy4xOS0uODgyTDQuNjE2IDQ5LjcwN2E2LjYgNi42IDAgMCAxLTMuMjA0LTUuNzA2VjIwLjAwNUMxLjQgMTcuNjY5IDIuNiAxNS41MDEgNC42MTYgMTQuMjg5bDIwLjIxLTExLjk5NmE2LjIzIDYuMjMgMCAwIDEgNi4zNTIgMGwyMC4yMSAxMS45OTZhNi42MSA2LjYxIDAgMCAxIDMuMTA0IDQuNmMtLjY1Ni0xLjQyNi0yLjE2Ni0xLjgtMy45MjQtLjc5aC4wMDZ6IgogICAgICAgICAgICBzdHJva2U9Im5vbmUiIGZpbGw9IiMwRDE1MjMiLz4KICAgIDwvc3ltYm9sPgo8L3N2Zz4=",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Bash"},{property:"og:description",content:"Execute a Bash script, command or set of commands. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/core/tasks/scripts/io.kestra.core.tasks.scripts.Bash.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Bash"},{name:"twitter:description",content:"Execute a Bash script, command or set of commands. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/core/tasks/scripts/io.kestra.core.tasks.scripts.Bash.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/core/tasks/scripts/io.kestra.core.tasks.scripts.Bash.html",relativePath:"plugins/core/tasks/scripts/io.kestra.core.tasks.scripts.Bash.md",key:"v-1efc3447",path:"/plugins/core/tasks/scripts/io.kestra.core.tasks.scripts.Bash.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:107},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:1071},{level:3,title:"commands",slug:"commands",normalizedTitle:"commands",charIndex:93},{level:3,title:"dockerOptions",slug:"dockeroptions",normalizedTitle:"dockeroptions",charIndex:779},{level:3,title:"env",slug:"env",normalizedTitle:"env",charIndex:1379},{level:3,title:"exitOnFailed",slug:"exitonfailed",normalizedTitle:"exitonfailed",charIndex:1005},{level:3,title:"files",slug:"files",normalizedTitle:"files",charIndex:529},{level:3,title:"inputFiles",slug:"inputfiles",normalizedTitle:"inputfiles",charIndex:589},{level:3,title:"interpreter",slug:"interpreter",normalizedTitle:"interpreter",charIndex:1025},{level:3,title:"interpreterArgs",slug:"interpreterargs",normalizedTitle:"interpreterargs",charIndex:1042},{level:3,title:"outputDirs",slug:"outputdirs",normalizedTitle:"outputdirs",charIndex:2661},{level:3,title:"outputFiles",slug:"outputfiles",normalizedTitle:"outputfiles",charIndex:386},{level:3,title:"outputsFiles",slug:"outputsfiles",normalizedTitle:"outputsfiles",charIndex:3660},{level:3,title:"runner",slug:"runner",normalizedTitle:"runner",charIndex:764},{level:3,title:"warningOnStdErr",slug:"warningonstderr",normalizedTitle:"warningonstderr",charIndex:3947},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:4075},{level:3,title:"exitCode",slug:"exitcode",normalizedTitle:"exitcode",charIndex:4087},{level:3,title:"files",slug:"files-2",normalizedTitle:"files",charIndex:529},{level:3,title:"outputFiles",slug:"outputfiles-2",normalizedTitle:"outputfiles",charIndex:386},{level:3,title:"stdErrLineCount",slug:"stderrlinecount",normalizedTitle:"stderrlinecount",charIndex:4380},{level:3,title:"stdOutLineCount",slug:"stdoutlinecount",normalizedTitle:"stdoutlinecount",charIndex:4465},{level:3,title:"vars",slug:"vars",normalizedTitle:"vars",charIndex:2985},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:4626},{level:3,title:"DockerOptions",slug:"dockeroptions-2",normalizedTitle:"dockeroptions",charIndex:1289},{level:3,title:"DockerOptions-DeviceRequest",slug:"dockeroptions-devicerequest",normalizedTitle:"dockeroptions-devicerequest",charIndex:4702}],headersStr:"Examples Properties commands dockerOptions env exitOnFailed files inputFiles interpreter interpreterArgs outputDirs outputFiles outputsFiles runner warningOnStdErr Outputs exitCode files outputFiles stdErrLineCount stdOutLineCount vars Definitions DockerOptions DockerOptions-DeviceRequest",content:'Bash\n\ntype: "io.kestra.core.tasks.scripts.Bash"\n\n\n> Execute a Bash script, command or set of commands.\n\n\n# Examples\n\n> Single bash command\n\nid: "bash"\ntype: "io.kestra.core.tasks.scripts.Bash"\ncommands:\n- \'echo "The current execution is : {{execution.id}}"\'\n\n\n> Bash command that generate file in storage accessible through outputs\n\nid: "bash"\ntype: "io.kestra.core.tasks.scripts.Bash"\noutputFiles:\n- first\n- second\ncommands:\n- echo "1" >> {{ outputFiles.first }}\n- echo "2" >> {{ outputFiles.second }}\n\n\n> Bash with some inputs files\n\nid: "bash"\ntype: "io.kestra.core.tasks.scripts.Bash"\ninputFiles:\n  script.sh: |\n    echo {{ workingDir }}\ncommands:\n- /bin/bash script.sh\n\n\n> Run a command on a docker image\n\nid: "bash"\ntype: "io.kestra.core.tasks.scripts.Bash"\nrunner: DOCKER\ndockerOptions:\n  image: php\ncommands:\n- \'php -r \'print(phpversion() . "\\n");\'\n\n\n> Execute cmd on windows\n\nid: "bash"\ntype: "io.kestra.core.tasks.scripts.Bash"\ncommands:\n  - \'echo "The current execution is : {{execution.id}}"\'\nexitOnFailed: false\ninterpreter: cmd\ninterpreterArgs:\n  - /c\n\n\n\n# Properties\n\n\n# commands\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min items: 1\n\n> The commands to run\n\nDefault command will be launched with /bin/sh -c "commands"\n\n\n# dockerOptions\n\n * Type: DockerOptions\n * Dynamic: ❓\n * Required: ❌\n\n> Docker options when using runner DOCKER\n\n\n# env\n\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Additional environnements variable to add for current process.\n\n\n# exitOnFailed\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Exit if any non true return value\n\nThis tells bash that it should exit the script if any statement returns a non-true return value.\nThe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n\n# files\n\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The list of files that will be uploaded to internal storage,\n\nuse outputFiles property instead\n\n\n# inputFiles\n\n * Type: ====\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Input files are extra files supplied by user that make it simpler organize code.\n\nDescribe a files map (that can be a map or a json string) that will be written and usable in execution context. You can reach files using a workingDir variable like \'source {{workingDir}}/myfile.sh\'\n\n\n# interpreter\n\n * Type: string\n * Dynamic: ❌\n * Required: ✔️\n * Default: /bin/sh\n * Min length: 1\n\n> Interpreter to used\n\n\n# interpreterArgs\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n * Default: [-c]\n\n> Interpreter args used\n\n\n# outputDirs\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Output dirs list that will be uploaded to internal storage\n\nList of key that will generate temporary directories.\nOn the command, just can use with special variable named outputDirs.key.\nIf you add a files with ["myDir"], you can use the special vars echo 1 >> {[ outputDirs.myDir }}/file1.txt and echo 2 >> {[ outputDirs.myDir }}/file2.txt and both files will be uploaded to internal storage. Then you can used them on others tasks using {{ outputs.taskId.files[\'myDir/file1.txt\'] }}\n\n\n# outputFiles\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Output file list that will be uploaded to internal storage\n\nList of key that will generate temporary files.\nOn the command, just can use with special variable named outputFiles.key.\nIf you add a files with ["first"], you can use the special vars echo 1 >> {[ outputFiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n\n# outputsFiles\n\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Deprecated Output file\n\nuse outputFiles\n\n\n# runner\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ✔️\n\n * Default: PROCESS\n\n * Possible Values:\n   \n   * PROCESS\n   * DOCKER\n\n> Runner to use\n\n\n# warningOnStdErr\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Use WARNING state if any stdErr is sent\n\n\n# Outputs\n\n\n# exitCode\n\n * Type: integer\n * Default: 0\n\n> The exit code of the whole execution\n\n\n# files\n\n🔒 Deprecated\n\n * Type: object\n * SubType: string\n\n> Deprecated output files\n\nuse outputFiles\n\n\n# outputFiles\n\n * Type: object\n * SubType: string\n\n> The output files uri in Kestra internal storage\n\n\n# stdErrLineCount\n\n * Type: integer\n * Default: 0\n\n> The standard error line count\n\n\n# stdOutLineCount\n\n * Type: integer\n * Default: 0\n\n> The standard output line count\n\n\n# vars\n\n * Type: object\n\n> The value extract from output of the commands\n\n\n# Definitions\n\n\n# DockerOptions\n\n# deviceRequests\n\n * Type: array\n * SubType: DockerOptions-DeviceRequest\n * Dynamic: ❌\n * Required: ❌\n\n> A list of request for devices to be sent to device drivers\n\n# dockerConfig\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker config file\n\nFull file that can be used to configure private registries, ...\n\n# dockerHost\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker api uri\n\n# entryPoint\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker entrypoint to use\n\n# extraHosts\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker extra host to use\n\n# image\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> Docker image to use\n\n# networkMode\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker network mode to use\n\n# pullImage\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n * Default: true\n\n> Is a pull of image must be done before starting the container\n\nMostly used for local image with registry\n\n# user\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker user to use\n\n# volumes\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> List of volumes to mount\n\nMust be a valid mount expression as string, example : /home/user:/app\n\nVolumes mount are disabled by default for security reasons, you must enabled on server configuration with kestra.tasks.scripts.docker.volume-enabled to true\n\n\n# DockerOptions-DeviceRequest\n\n# capabilities\n\n * Type: array\n * SubType: array\n * Dynamic: ❓\n * Required: ❌\n\n# count\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n# deviceIds\n\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n\n# driver\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# options\n\n * Type: object\n * Dynamic: ❓\n * Required: ❌',normalizedContent:'bash\n\ntype: "io.kestra.core.tasks.scripts.bash"\n\n\n> execute a bash script, command or set of commands.\n\n\n# examples\n\n> single bash command\n\nid: "bash"\ntype: "io.kestra.core.tasks.scripts.bash"\ncommands:\n- \'echo "the current execution is : {{execution.id}}"\'\n\n\n> bash command that generate file in storage accessible through outputs\n\nid: "bash"\ntype: "io.kestra.core.tasks.scripts.bash"\noutputfiles:\n- first\n- second\ncommands:\n- echo "1" >> {{ outputfiles.first }}\n- echo "2" >> {{ outputfiles.second }}\n\n\n> bash with some inputs files\n\nid: "bash"\ntype: "io.kestra.core.tasks.scripts.bash"\ninputfiles:\n  script.sh: |\n    echo {{ workingdir }}\ncommands:\n- /bin/bash script.sh\n\n\n> run a command on a docker image\n\nid: "bash"\ntype: "io.kestra.core.tasks.scripts.bash"\nrunner: docker\ndockeroptions:\n  image: php\ncommands:\n- \'php -r \'print(phpversion() . "\\n");\'\n\n\n> execute cmd on windows\n\nid: "bash"\ntype: "io.kestra.core.tasks.scripts.bash"\ncommands:\n  - \'echo "the current execution is : {{execution.id}}"\'\nexitonfailed: false\ninterpreter: cmd\ninterpreterargs:\n  - /c\n\n\n\n# properties\n\n\n# commands\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ✔️\n * min items: 1\n\n> the commands to run\n\ndefault command will be launched with /bin/sh -c "commands"\n\n\n# dockeroptions\n\n * type: dockeroptions\n * dynamic: ❓\n * required: ❌\n\n> docker options when using runner docker\n\n\n# env\n\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> additional environnements variable to add for current process.\n\n\n# exitonfailed\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> exit if any non true return value\n\nthis tells bash that it should exit the script if any statement returns a non-true return value.\nthe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n\n# files\n\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> the list of files that will be uploaded to internal storage,\n\nuse outputfiles property instead\n\n\n# inputfiles\n\n * type: ====\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> input files are extra files supplied by user that make it simpler organize code.\n\ndescribe a files map (that can be a map or a json string) that will be written and usable in execution context. you can reach files using a workingdir variable like \'source {{workingdir}}/myfile.sh\'\n\n\n# interpreter\n\n * type: string\n * dynamic: ❌\n * required: ✔️\n * default: /bin/sh\n * min length: 1\n\n> interpreter to used\n\n\n# interpreterargs\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n * default: [-c]\n\n> interpreter args used\n\n\n# outputdirs\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> output dirs list that will be uploaded to internal storage\n\nlist of key that will generate temporary directories.\non the command, just can use with special variable named outputdirs.key.\nif you add a files with ["mydir"], you can use the special vars echo 1 >> {[ outputdirs.mydir }}/file1.txt and echo 2 >> {[ outputdirs.mydir }}/file2.txt and both files will be uploaded to internal storage. then you can used them on others tasks using {{ outputs.taskid.files[\'mydir/file1.txt\'] }}\n\n\n# outputfiles\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> output file list that will be uploaded to internal storage\n\nlist of key that will generate temporary files.\non the command, just can use with special variable named outputfiles.key.\nif you add a files with ["first"], you can use the special vars echo 1 >> {[ outputfiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n\n# outputsfiles\n\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> deprecated output file\n\nuse outputfiles\n\n\n# runner\n\n * type: string\n\n * dynamic: ❌\n\n * required: ✔️\n\n * default: process\n\n * possible values:\n   \n   * process\n   * docker\n\n> runner to use\n\n\n# warningonstderr\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> use warning state if any stderr is sent\n\n\n# outputs\n\n\n# exitcode\n\n * type: integer\n * default: 0\n\n> the exit code of the whole execution\n\n\n# files\n\n🔒 deprecated\n\n * type: object\n * subtype: string\n\n> deprecated output files\n\nuse outputfiles\n\n\n# outputfiles\n\n * type: object\n * subtype: string\n\n> the output files uri in kestra internal storage\n\n\n# stderrlinecount\n\n * type: integer\n * default: 0\n\n> the standard error line count\n\n\n# stdoutlinecount\n\n * type: integer\n * default: 0\n\n> the standard output line count\n\n\n# vars\n\n * type: object\n\n> the value extract from output of the commands\n\n\n# definitions\n\n\n# dockeroptions\n\n# devicerequests\n\n * type: array\n * subtype: dockeroptions-devicerequest\n * dynamic: ❌\n * required: ❌\n\n> a list of request for devices to be sent to device drivers\n\n# dockerconfig\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> docker config file\n\nfull file that can be used to configure private registries, ...\n\n# dockerhost\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> docker api uri\n\n# entrypoint\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> docker entrypoint to use\n\n# extrahosts\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> docker extra host to use\n\n# image\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> docker image to use\n\n# networkmode\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> docker network mode to use\n\n# pullimage\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n * default: true\n\n> is a pull of image must be done before starting the container\n\nmostly used for local image with registry\n\n# user\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> docker user to use\n\n# volumes\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> list of volumes to mount\n\nmust be a valid mount expression as string, example : /home/user:/app\n\nvolumes mount are disabled by default for security reasons, you must enabled on server configuration with kestra.tasks.scripts.docker.volume-enabled to true\n\n\n# dockeroptions-devicerequest\n\n# capabilities\n\n * type: array\n * subtype: array\n * dynamic: ❓\n * required: ❌\n\n# count\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n# deviceids\n\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n\n# driver\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# options\n\n * type: object\n * dynamic: ❓\n * required: ❌',charsets:{cjk:!0}},{title:"Node",frontmatter:{title:"Node",editLink:!1,description:"Execute a Node.js script",icon:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB2aWV3Qm94PSIwIDAgNjAgNjYiIGZpbGw9IiNmZmYiIGZpbGwtcnVsZT0iZXZlbm9kZCIgc3Ryb2tlPSIjMDAwIiBzdHJva2UtbGluZWNhcD0icm91bmQiIHN0cm9rZS1saW5lam9pbj0icm91bmQiPjx1c2UgeGxpbms6aHJlZj0iI0EiIHg9IjEiIHk9IjEiLz48c3ltYm9sIGlkPSJBIiBvdmVyZmxvdz0idmlzaWJsZSI+PHBhdGggZD0iTTI2LjMyLjY4MWMxLjYtLjkwNiAzLjY0LS45MSA1LjIgMGwyMy44ODggMTMuNDY2YzEuNDk0Ljg0IDIuNDk0IDIuNTA2IDIuNDggNC4yMjh2MjdjLjAxIDEuNzk0LTEuMDg4IDMuNDk2LTIuNjY0IDQuMzJsLTIzLjc2IDEzLjQwNGE1LjIgNS4yIDAgMCAxLTUuMjc4LS4xNDZsLTcuMTMtNC4xMmMtLjQ4Ni0uMjktMS4wMzItLjUyLTEuMzc2LS45OS4zMDQtLjQwOC44NDQtLjQ2IDEuMjg0LS42NC45OTItLjMxNiAxLjktLjggMi44MTItMS4zMTIuMjMtLjE2LjUxMi0uMS43MzIuMDQ0bDYuMDggMy41MTZjLjQzNC4yNS44NzQtLjA4IDEuMjQ2LS4yOWwyMy4zMy0xMy4xNjZjLjI4OC0uMTQuNDQ4LS40NDQuNDI0LS43NnYtMjYuNzRjLjAzMi0uMzYtLjE3NC0uNjg4LS41LS44MzRMMjkuNDA4IDQuMzE1YS44Mi44MiAwIDAgMC0uOTMtLjAwMkw0Ljc5MiAxNy42ODdjLS4zMi4xNDYtLjU0LjQ3LS41LjgzdjI2Ljc0YS43NS43NSAwIDAgMCAuNDMuNzVsNi4zMjQgMy41N2MxLjE4OC42NCAyLjY0NiAxIDMuOTU0LjUzYTMgMyAwIDAgMCAxLjk0Mi0yLjgxOGwuMDA2LTI2LjZjLS4wMjgtLjM5NC4zNDQtLjcyLjcyNi0uNjhoMy4wNGMuNC0uMDEuNzE0LjQxNC42Ni44MWwtLjAwNiAyNi43NjhjLjAwMiAyLjM3Ni0uOTc0IDQuOTYtMy4xNzIgNi4xMjYtMi43MDggMS40LTYuMDU2IDEuMTA2LTguNzMyLS4yNGwtNi44LTMuNzZBNC45IDQuOSAwIDAgMSAwIDQ1LjM5M3YtMjdhNC45MiA0LjkyIDAgMCAxIDIuNTY0LTQuMjgyTDI2LjMyLjY4MXptNi44ODggMTguNzE2YzMuNDU0LS4yIDcuMTUyLS4xMzIgMTAuMjYgMS41NyAyLjQwNiAxLjMwNCAzLjc0IDQuMDQgMy43ODQgNi43MTYtLjA2OC4zNi0uNDQ0LjU2LS43ODguNTM0LTEtLjAwMi0yLjAwNC4wMTQtMy4wMDgtLjAwNi0uNDI2LjAxNi0uNjcyLS4zNzYtLjcyNi0uNzUyLS4yODgtMS4yOC0uOTg2LTIuNTQ2LTIuMTktMy4xNjQtMS44NDgtLjkyNi0zLjk5Mi0uODgtNi4wMDgtLjg2LTEuNDcyLjA4LTMuMDU0LjIwNi00LjMgMS4wNy0uOTYuNjU2LTEuMjQ4IDItLjkwNiAzLjA0NC4zMi43NjYgMS4yMDYgMS4wMTIgMS45MjggMS4yNCA0LjE2NCAxLjA4OCA4LjU3NCAxIDEyLjY2IDIuNDE0IDEuNjkuNTg0IDMuMzQ0IDEuNzIgMy45MjQgMy40OS43NTYgMi4zNzIuNDI2IDUuMjA4LTEuMjYgNy4xMTItMS4zNjggMS41NjgtMy4zNiAyLjQtNS4zNSAyLjg4NC0yLjY0Ni41OS01LjM5LjYwNC04LjA3Ni4zNC0yLjUyNi0uMjg4LTUuMTU0LS45NTItNy4xMDQtMi42NzItMS42NjgtMS40NDgtMi40OC0zLjcwNC0yLjQtNS44OC4wMi0uMzY4LjM4Ni0uNjI0Ljc0LS41OTRoM2MuNDA0LS4wMjguNy4zMi43Mi43LjE4NiAxLjIuNjQ0IDIuNSAxLjcwOCAzLjIgMi4wNTIgMS4zMjQgNC42MjYgMS4yMzIgNi45NzQgMS4yNyAxLjk0Ni0uMDg2IDQuMTMtLjExMiA1LjcyLTEuNC44NC0uNzM0IDEuMDg2LTEuOTYuODYtMy4wMTYtLjI0Ni0uODkyLTEuMi0xLjMwNi0yLTEuNi00LjExLTEuMy04LjU3LS44MjgtMTIuNjQtMi4zLTEuNjUyLS41ODQtMy4yNS0xLjY4OC0zLjg4NC0zLjM4Ni0uODg2LTIuNC0uNDgtNS4zNzQgMS4zODYtNy4yMTQgMS44LTEuODMgNC40NC0yLjUzNiA2Ljk0LTIuNzg4eiIgc3Ryb2tlPSJub25lIiBmaWxsPSIjOGNjODRiIiBmaWxsLXJ1bGU9Im5vbnplcm8iLz48L3N5bWJvbD48L3N2Zz4=",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Node"},{property:"og:description",content:"Execute a Node.js script | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/core/tasks/scripts/io.kestra.core.tasks.scripts.Node.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Node"},{name:"twitter:description",content:"Execute a Node.js script | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/core/tasks/scripts/io.kestra.core.tasks.scripts.Node.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/core/tasks/scripts/io.kestra.core.tasks.scripts.Node.html",relativePath:"plugins/core/tasks/scripts/io.kestra.core.tasks.scripts.Node.md",key:"v-1c59ef6b",path:"/plugins/core/tasks/scripts/io.kestra.core.tasks.scripts.Node.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:960},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:1921},{level:3,title:"args",slug:"args",normalizedTitle:"args",charIndex:1896},{level:3,title:"dockerOptions",slug:"dockeroptions",normalizedTitle:"dockeroptions",charIndex:2081},{level:3,title:"env",slug:"env",normalizedTitle:"env",charIndex:2195},{level:3,title:"exitOnFailed",slug:"exitonfailed",normalizedTitle:"exitonfailed",charIndex:2335},{level:3,title:"files",slug:"files",normalizedTitle:"files",charIndex:337},{level:3,title:"inputFiles",slug:"inputfiles",normalizedTitle:"inputfiles",charIndex:346},{level:3,title:"interpreter",slug:"interpreter",normalizedTitle:"interpreter",charIndex:3228},{level:3,title:"interpreterArgs",slug:"interpreterargs",normalizedTitle:"interpreterargs",charIndex:3351},{level:3,title:"nodePath",slug:"nodepath",normalizedTitle:"nodepath",charIndex:3477},{level:3,title:"npmPath",slug:"npmpath",normalizedTitle:"npmpath",charIndex:3622},{level:3,title:"outputDirs",slug:"outputdirs",normalizedTitle:"outputdirs",charIndex:3774},{level:3,title:"outputFiles",slug:"outputfiles",normalizedTitle:"outputfiles",charIndex:2832},{level:3,title:"outputsFiles",slug:"outputsfiles",normalizedTitle:"outputsfiles",charIndex:4773},{level:3,title:"runner",slug:"runner",normalizedTitle:"runner",charIndex:2177},{level:3,title:"warningOnStdErr",slug:"warningonstderr",normalizedTitle:"warningonstderr",charIndex:5060},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:5188},{level:3,title:"exitCode",slug:"exitcode",normalizedTitle:"exitcode",charIndex:5200},{level:3,title:"files",slug:"files-2",normalizedTitle:"files",charIndex:337},{level:3,title:"outputFiles",slug:"outputfiles-2",normalizedTitle:"outputfiles",charIndex:2832},{level:3,title:"stdErrLineCount",slug:"stderrlinecount",normalizedTitle:"stderrlinecount",charIndex:5493},{level:3,title:"stdOutLineCount",slug:"stdoutlinecount",normalizedTitle:"stdoutlinecount",charIndex:5578},{level:3,title:"vars",slug:"vars",normalizedTitle:"vars",charIndex:4098},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:5739},{level:3,title:"DockerOptions",slug:"dockeroptions-2",normalizedTitle:"dockeroptions",charIndex:2105},{level:3,title:"DockerOptions-DeviceRequest",slug:"dockeroptions-devicerequest",normalizedTitle:"dockeroptions-devicerequest",charIndex:5815}],headersStr:"Examples Properties args dockerOptions env exitOnFailed files inputFiles interpreter interpreterArgs nodePath npmPath outputDirs outputFiles outputsFiles runner warningOnStdErr Outputs exitCode files outputFiles stdErrLineCount stdOutLineCount vars Definitions DockerOptions DockerOptions-DeviceRequest",content:'Node\n\ntype: "io.kestra.core.tasks.scripts.Node"\n\n\n> Execute a Node.js script\n\nWith this Node task, we can execute a full javascript script.\nThe task will create a temprorary folder for every tasks and allows you to install some npm packages defined in an optional package.json file.\n\nBy convention, you need to define at least a main.js files in inputFiles that will be the script used.\nYou can also add as many javascript files as you need in inputFiles.\n\nYou can send outputs & metrics from your node script that can be used by others tasks. In order to help, we inject a node package directly on the working dir.Here is an example usage:\n\nconst Kestra = require("./kestra");\nKestra.outputs({test: \'value\', int: 2, bool: true, float: 3.65});\nKestra.counter(\'count\', 1, {tag1: \'i\', tag2: \'win\'});\nKestra.timer(\'timer1\', (callback) => { setTimeout(callback, 1000) }, {tag1: \'i\', tag2: \'lost\'});\nKestra.timer(\'timer2\', 2.12, {tag1: \'i\', tag2: \'destroy\'});\n\n\n\n# Examples\n\n> Execute a node script\n\nid: "node"\ntype: "io.kestra.core.tasks.scripts.Node"\ninputFiles:\n  main.js: |\n    const Kestra = require("./kestra");\n    const fs = require(\'fs\')\n    const result = fs.readFileSync(process.argv[2], "utf-8")\n    console.log(JSON.parse(result).status)\n    const axios = require(\'axios\')\n    axios.get(\'http://google.fr\').then(d => { console.log(d.status); Kestra.outputs({\'status\': d.status, \'text\': d.data})})\n    console.log(require(\'./mymodule\').value)\n  data.json: |\n    {"status": "OK"}\n  mymodule.js: |\n    module.exports.value = \'hello world\'\n  package.json: |\n    {\n      "name": "tmp",\n      "version": "1.0.0",\n      "description": "",\n      "main": "index.js",\n      "dependencies": {\n          "axios": "^0.20.0"\n      },\n      "devDependencies": {},\n      "scripts": {\n          "test": "echo `Error: no test specified` && exit 1"\n      },\n      "author": "",\n      "license": "ISC"\n    }\nargs:\n  - data.json\n\n\n\n# Properties\n\n\n# args\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> node command args\n\nArguments list to pass to main javascript script\n\n\n# dockerOptions\n\n * Type: DockerOptions\n * Dynamic: ❓\n * Required: ❌\n\n> Docker options when using runner DOCKER\n\n\n# env\n\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Additional environnements variable to add for current process.\n\n\n# exitOnFailed\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Exit if any non true return value\n\nThis tells bash that it should exit the script if any statement returns a non-true return value.\nThe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n\n# files\n\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The list of files that will be uploaded to internal storage,\n\nuse outputFiles property instead\n\n\n# inputFiles\n\n * Type: ====\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Input files are extra files supplied by user that make it simpler organize code.\n\nDescribe a files map (that can be a map or a json string) that will be written and usable in execution context. You can reach files using a workingDir variable like \'source {{workingDir}}/myfile.sh\'\n\n\n# interpreter\n\n * Type: string\n * Dynamic: ❌\n * Required: ✔️\n * Default: /bin/sh\n * Min length: 1\n\n> Interpreter to used\n\n\n# interpreterArgs\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n * Default: [-c]\n\n> Interpreter args used\n\n\n# nodePath\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Default: node\n\n> The node interpreter to use\n\nSet the node interpreter path to use\n\n\n# npmPath\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Default: npm\n\n> The npm binary to use\n\nSet the npm binary path for node dependencies setup\n\n\n# outputDirs\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Output dirs list that will be uploaded to internal storage\n\nList of key that will generate temporary directories.\nOn the command, just can use with special variable named outputDirs.key.\nIf you add a files with ["myDir"], you can use the special vars echo 1 >> {[ outputDirs.myDir }}/file1.txt and echo 2 >> {[ outputDirs.myDir }}/file2.txt and both files will be uploaded to internal storage. Then you can used them on others tasks using {{ outputs.taskId.files[\'myDir/file1.txt\'] }}\n\n\n# outputFiles\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Output file list that will be uploaded to internal storage\n\nList of key that will generate temporary files.\nOn the command, just can use with special variable named outputFiles.key.\nIf you add a files with ["first"], you can use the special vars echo 1 >> {[ outputFiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n\n# outputsFiles\n\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Deprecated Output file\n\nuse outputFiles\n\n\n# runner\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ✔️\n\n * Default: PROCESS\n\n * Possible Values:\n   \n   * PROCESS\n   * DOCKER\n\n> Runner to use\n\n\n# warningOnStdErr\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Use WARNING state if any stdErr is sent\n\n\n# Outputs\n\n\n# exitCode\n\n * Type: integer\n * Default: 0\n\n> The exit code of the whole execution\n\n\n# files\n\n🔒 Deprecated\n\n * Type: object\n * SubType: string\n\n> Deprecated output files\n\nuse outputFiles\n\n\n# outputFiles\n\n * Type: object\n * SubType: string\n\n> The output files uri in Kestra internal storage\n\n\n# stdErrLineCount\n\n * Type: integer\n * Default: 0\n\n> The standard error line count\n\n\n# stdOutLineCount\n\n * Type: integer\n * Default: 0\n\n> The standard output line count\n\n\n# vars\n\n * Type: object\n\n> The value extract from output of the commands\n\n\n# Definitions\n\n\n# DockerOptions\n\n# deviceRequests\n\n * Type: array\n * SubType: DockerOptions-DeviceRequest\n * Dynamic: ❌\n * Required: ❌\n\n> A list of request for devices to be sent to device drivers\n\n# dockerConfig\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker config file\n\nFull file that can be used to configure private registries, ...\n\n# dockerHost\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker api uri\n\n# entryPoint\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker entrypoint to use\n\n# extraHosts\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker extra host to use\n\n# image\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> Docker image to use\n\n# networkMode\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker network mode to use\n\n# pullImage\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n * Default: true\n\n> Is a pull of image must be done before starting the container\n\nMostly used for local image with registry\n\n# user\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker user to use\n\n# volumes\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> List of volumes to mount\n\nMust be a valid mount expression as string, example : /home/user:/app\n\nVolumes mount are disabled by default for security reasons, you must enabled on server configuration with kestra.tasks.scripts.docker.volume-enabled to true\n\n\n# DockerOptions-DeviceRequest\n\n# capabilities\n\n * Type: array\n * SubType: array\n * Dynamic: ❓\n * Required: ❌\n\n# count\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n# deviceIds\n\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n\n# driver\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# options\n\n * Type: object\n * Dynamic: ❓\n * Required: ❌',normalizedContent:'node\n\ntype: "io.kestra.core.tasks.scripts.node"\n\n\n> execute a node.js script\n\nwith this node task, we can execute a full javascript script.\nthe task will create a temprorary folder for every tasks and allows you to install some npm packages defined in an optional package.json file.\n\nby convention, you need to define at least a main.js files in inputfiles that will be the script used.\nyou can also add as many javascript files as you need in inputfiles.\n\nyou can send outputs & metrics from your node script that can be used by others tasks. in order to help, we inject a node package directly on the working dir.here is an example usage:\n\nconst kestra = require("./kestra");\nkestra.outputs({test: \'value\', int: 2, bool: true, float: 3.65});\nkestra.counter(\'count\', 1, {tag1: \'i\', tag2: \'win\'});\nkestra.timer(\'timer1\', (callback) => { settimeout(callback, 1000) }, {tag1: \'i\', tag2: \'lost\'});\nkestra.timer(\'timer2\', 2.12, {tag1: \'i\', tag2: \'destroy\'});\n\n\n\n# examples\n\n> execute a node script\n\nid: "node"\ntype: "io.kestra.core.tasks.scripts.node"\ninputfiles:\n  main.js: |\n    const kestra = require("./kestra");\n    const fs = require(\'fs\')\n    const result = fs.readfilesync(process.argv[2], "utf-8")\n    console.log(json.parse(result).status)\n    const axios = require(\'axios\')\n    axios.get(\'http://google.fr\').then(d => { console.log(d.status); kestra.outputs({\'status\': d.status, \'text\': d.data})})\n    console.log(require(\'./mymodule\').value)\n  data.json: |\n    {"status": "ok"}\n  mymodule.js: |\n    module.exports.value = \'hello world\'\n  package.json: |\n    {\n      "name": "tmp",\n      "version": "1.0.0",\n      "description": "",\n      "main": "index.js",\n      "dependencies": {\n          "axios": "^0.20.0"\n      },\n      "devdependencies": {},\n      "scripts": {\n          "test": "echo `error: no test specified` && exit 1"\n      },\n      "author": "",\n      "license": "isc"\n    }\nargs:\n  - data.json\n\n\n\n# properties\n\n\n# args\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> node command args\n\narguments list to pass to main javascript script\n\n\n# dockeroptions\n\n * type: dockeroptions\n * dynamic: ❓\n * required: ❌\n\n> docker options when using runner docker\n\n\n# env\n\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> additional environnements variable to add for current process.\n\n\n# exitonfailed\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> exit if any non true return value\n\nthis tells bash that it should exit the script if any statement returns a non-true return value.\nthe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n\n# files\n\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> the list of files that will be uploaded to internal storage,\n\nuse outputfiles property instead\n\n\n# inputfiles\n\n * type: ====\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> input files are extra files supplied by user that make it simpler organize code.\n\ndescribe a files map (that can be a map or a json string) that will be written and usable in execution context. you can reach files using a workingdir variable like \'source {{workingdir}}/myfile.sh\'\n\n\n# interpreter\n\n * type: string\n * dynamic: ❌\n * required: ✔️\n * default: /bin/sh\n * min length: 1\n\n> interpreter to used\n\n\n# interpreterargs\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n * default: [-c]\n\n> interpreter args used\n\n\n# nodepath\n\n * type: string\n * dynamic: ❓\n * required: ❌\n * default: node\n\n> the node interpreter to use\n\nset the node interpreter path to use\n\n\n# npmpath\n\n * type: string\n * dynamic: ❓\n * required: ❌\n * default: npm\n\n> the npm binary to use\n\nset the npm binary path for node dependencies setup\n\n\n# outputdirs\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> output dirs list that will be uploaded to internal storage\n\nlist of key that will generate temporary directories.\non the command, just can use with special variable named outputdirs.key.\nif you add a files with ["mydir"], you can use the special vars echo 1 >> {[ outputdirs.mydir }}/file1.txt and echo 2 >> {[ outputdirs.mydir }}/file2.txt and both files will be uploaded to internal storage. then you can used them on others tasks using {{ outputs.taskid.files[\'mydir/file1.txt\'] }}\n\n\n# outputfiles\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> output file list that will be uploaded to internal storage\n\nlist of key that will generate temporary files.\non the command, just can use with special variable named outputfiles.key.\nif you add a files with ["first"], you can use the special vars echo 1 >> {[ outputfiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n\n# outputsfiles\n\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> deprecated output file\n\nuse outputfiles\n\n\n# runner\n\n * type: string\n\n * dynamic: ❌\n\n * required: ✔️\n\n * default: process\n\n * possible values:\n   \n   * process\n   * docker\n\n> runner to use\n\n\n# warningonstderr\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> use warning state if any stderr is sent\n\n\n# outputs\n\n\n# exitcode\n\n * type: integer\n * default: 0\n\n> the exit code of the whole execution\n\n\n# files\n\n🔒 deprecated\n\n * type: object\n * subtype: string\n\n> deprecated output files\n\nuse outputfiles\n\n\n# outputfiles\n\n * type: object\n * subtype: string\n\n> the output files uri in kestra internal storage\n\n\n# stderrlinecount\n\n * type: integer\n * default: 0\n\n> the standard error line count\n\n\n# stdoutlinecount\n\n * type: integer\n * default: 0\n\n> the standard output line count\n\n\n# vars\n\n * type: object\n\n> the value extract from output of the commands\n\n\n# definitions\n\n\n# dockeroptions\n\n# devicerequests\n\n * type: array\n * subtype: dockeroptions-devicerequest\n * dynamic: ❌\n * required: ❌\n\n> a list of request for devices to be sent to device drivers\n\n# dockerconfig\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> docker config file\n\nfull file that can be used to configure private registries, ...\n\n# dockerhost\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> docker api uri\n\n# entrypoint\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> docker entrypoint to use\n\n# extrahosts\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> docker extra host to use\n\n# image\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> docker image to use\n\n# networkmode\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> docker network mode to use\n\n# pullimage\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n * default: true\n\n> is a pull of image must be done before starting the container\n\nmostly used for local image with registry\n\n# user\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> docker user to use\n\n# volumes\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> list of volumes to mount\n\nmust be a valid mount expression as string, example : /home/user:/app\n\nvolumes mount are disabled by default for security reasons, you must enabled on server configuration with kestra.tasks.scripts.docker.volume-enabled to true\n\n\n# dockeroptions-devicerequest\n\n# capabilities\n\n * type: array\n * subtype: array\n * dynamic: ❓\n * required: ❌\n\n# count\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n# deviceids\n\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n\n# driver\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# options\n\n * type: object\n * dynamic: ❓\n * required: ❌',charsets:{cjk:!0}},{title:"Python",frontmatter:{title:"Python",editLink:!1,description:"Execute a Python script",icon:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB2aWV3Qm94PSIwIDAgODUgODUiIGZpbGw9IiNmZmYiIGZpbGwtcnVsZT0iZXZlbm9kZCIgc3Ryb2tlPSIjMDAwIiBzdHJva2UtbGluZWNhcD0icm91bmQiIHN0cm9rZS1saW5lam9pbj0icm91bmQiPjx1c2UgeGxpbms6aHJlZj0iI0MiIHg9IjIuNSIgeT0iMi41Ii8+PGRlZnM+PGxpbmVhckdyYWRpZW50IGlkPSJBIiB4MT0iNTIlIiB5MT0iMCUiIHgyPSI0OCUiIHkyPSIxMDAlIj48c3RvcCBvZmZzZXQ9IjAlIiBzdG9wLWNvbG9yPSIjMzg3ZWI4Ii8+PHN0b3Agb2Zmc2V0PSIxMDAlIiBzdG9wLWNvbG9yPSIjMzY2OTk0Ii8+PC9saW5lYXJHcmFkaWVudD48bGluZWFyR3JhZGllbnQgaWQ9IkIiIHgxPSI1MCUiIHkxPSIwJSIgeDI9IjUwJSIgeTI9IjEwMCUiPjxzdG9wIG9mZnNldD0iMCUiIHN0b3AtY29sb3I9IiNmZmUwNTIiLz48c3RvcCBvZmZzZXQ9IjEwMCUiIHN0b3AtY29sb3I9IiNmZmMzMzEiLz48L2xpbmVhckdyYWRpZW50PjwvZGVmcz48c3ltYm9sIGlkPSJDIiBvdmVyZmxvdz0idmlzaWJsZSI+PGcgc3Ryb2tlPSJub25lIj48cGF0aCBkPSJNMzkuNzEyIDBDMTkuNDAzIDAgMjAuNjcxIDguODUzIDIwLjY3MSA4Ljg1M2wuMDIzIDkuMTcyaDE5LjM4MXYyLjc1NEgxMi45OTZTMCAxOS4yOTggMCAzOS44OTZzMTEuMzQzIDE5Ljg2OSAxMS4zNDMgMTkuODY5aDYuNzd2LTkuNTU5cy0uMzY1LTExLjQwMiAxMS4xNjItMTEuNDAyaDE5LjIyMnMxMC43OTkuMTc1IDEwLjc5OS0xMC40OTJWMTAuNjc0UzYwLjkzNiAwIDM5LjcxMiAwek0yOS4wMjUgNi4xNjhjLjkyNS0uMDAxIDEuODEyLjM2OCAyLjQ2NiAxLjAyNmEzLjUxIDMuNTEgMCAwIDEgMCA0Ljk1OGMtLjY1NC42NTctMS41NDEgMS4wMjYtMi40NjYgMS4wMjZzLTEuODEyLS4zNjgtMi40NjYtMS4wMjZhMy41MSAzLjUxIDAgMCAxIDAtNC45NThjLjY1NC0uNjU3IDEuNTQxLTEuMDI2IDIuNDY2LTEuMDI2eiIgZmlsbD0idXJsKCNBKSIvPjxwYXRoIGQ9Ik00MC4yODkgODBjMjAuMzA5IDAgMTkuMDQxLTguODUzIDE5LjA0MS04Ljg1M2wtLjAyMy05LjE3MkgzOS45MjZ2LTIuNzU0aDI3LjA3OFM4MCA2MC43MDMgODAgNDAuMTA0IDY4LjY1NyAyMC4yMzUgNjguNjU3IDIwLjIzNWgtNi43N3Y5LjU1OXMuMzY1IDExLjQwMi0xMS4xNjIgMTEuNDAySDMxLjUwNHMtMTAuOC0uMTc1LTEwLjggMTAuNDkydjE3LjYzOFMxOS4wNjUgODAgNDAuMjg5IDgwem0xMC42ODYtNi4xNjhjLS45MjUuMDAxLTEuODEyLS4zNjgtMi40NjYtMS4wMjZhMy41MSAzLjUxIDAgMCAxIDAtNC45NThjLjY1NC0uNjU3IDEuNTQxLTEuMDI2IDIuNDY2LTEuMDI2czEuODEyLjM2OCAyLjQ2NiAxLjAyNmEzLjUxIDMuNTEgMCAwIDEgMCA0Ljk1OGMtLjY1NC42NTctMS41NDEgMS4wMjYtMi40NjYgMS4wMjZ6IiBmaWxsPSJ1cmwoI0IpIi8+PC9nPjwvc3ltYm9sPjwvc3ZnPg==",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Python"},{property:"og:description",content:"Execute a Python script | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/core/tasks/scripts/io.kestra.core.tasks.scripts.Python.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Python"},{name:"twitter:description",content:"Execute a Python script | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/core/tasks/scripts/io.kestra.core.tasks.scripts.Python.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/core/tasks/scripts/io.kestra.core.tasks.scripts.Python.html",relativePath:"plugins/core/tasks/scripts/io.kestra.core.tasks.scripts.Python.md",key:"v-6a588fb7",path:"/plugins/core/tasks/scripts/io.kestra.core.tasks.scripts.Python.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:1057},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:1668},{level:3,title:"args",slug:"args",normalizedTitle:"args",charIndex:1616},{level:3,title:"commands",slug:"commands",normalizedTitle:"commands",charIndex:1826},{level:3,title:"dockerOptions",slug:"dockeroptions",normalizedTitle:"dockeroptions",charIndex:2048},{level:3,title:"env",slug:"env",normalizedTitle:"env",charIndex:177},{level:3,title:"exitOnFailed",slug:"exitonfailed",normalizedTitle:"exitonfailed",charIndex:2302},{level:3,title:"files",slug:"files",normalizedTitle:"files",charIndex:329},{level:3,title:"inputFiles",slug:"inputfiles",normalizedTitle:"inputfiles",charIndex:338},{level:3,title:"interpreter",slug:"interpreter",normalizedTitle:"interpreter",charIndex:3195},{level:3,title:"interpreterArgs",slug:"interpreterargs",normalizedTitle:"interpreterargs",charIndex:3318},{level:3,title:"outputDirs",slug:"outputdirs",normalizedTitle:"outputdirs",charIndex:3444},{level:3,title:"outputFiles",slug:"outputfiles",normalizedTitle:"outputfiles",charIndex:2799},{level:3,title:"outputsFiles",slug:"outputsfiles",normalizedTitle:"outputsfiles",charIndex:4443},{level:3,title:"pythonPath",slug:"pythonpath",normalizedTitle:"pythonpath",charIndex:4582},{level:3,title:"requirements",slug:"requirements",normalizedTitle:"requirements",charIndex:252},{level:3,title:"runner",slug:"runner",normalizedTitle:"runner",charIndex:2144},{level:3,title:"virtualEnv",slug:"virtualenv",normalizedTitle:"virtualenv",charIndex:5158},{level:3,title:"warningOnStdErr",slug:"warningonstderr",normalizedTitle:"warningonstderr",charIndex:5477},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:5605},{level:3,title:"exitCode",slug:"exitcode",normalizedTitle:"exitcode",charIndex:5617},{level:3,title:"files",slug:"files-2",normalizedTitle:"files",charIndex:329},{level:3,title:"outputFiles",slug:"outputfiles-2",normalizedTitle:"outputfiles",charIndex:2799},{level:3,title:"stdErrLineCount",slug:"stderrlinecount",normalizedTitle:"stderrlinecount",charIndex:5910},{level:3,title:"stdOutLineCount",slug:"stdoutlinecount",normalizedTitle:"stdoutlinecount",charIndex:5995},{level:3,title:"vars",slug:"vars",normalizedTitle:"vars",charIndex:3768},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:6156},{level:3,title:"DockerOptions",slug:"dockeroptions-2",normalizedTitle:"dockeroptions",charIndex:2072},{level:3,title:"DockerOptions-DeviceRequest",slug:"dockeroptions-devicerequest",normalizedTitle:"dockeroptions-devicerequest",charIndex:6232}],headersStr:"Examples Properties args commands dockerOptions env exitOnFailed files inputFiles interpreter interpreterArgs outputDirs outputFiles outputsFiles pythonPath requirements runner virtualEnv warningOnStdErr Outputs exitCode files outputFiles stdErrLineCount stdOutLineCount vars Definitions DockerOptions DockerOptions-DeviceRequest",content:"Python\n\ntype: \"io.kestra.core.tasks.scripts.Python\"\n\n\n> Execute a Python script\n\nWith this Python task, we can execute a full python script.\nThe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nBy convention, you need to define at least a main.py files in inputFiles that will be the script used.\nBut you are also able to add as many script as you need in inputFiles.\n\nYou can also add a pip.conf in inputFiles to customize the pip download of dependencies (like a private registry).\n\nYou can send outputs & metrics from your python script that can be used by others tasks. In order to help, we inject a python package directly on the working dir.Here is an example usage:\n\nfrom kestra import Kestra\nKestra.outputs({'test': 'value', 'int': 2, 'bool': True, 'float': 3.65})\nKestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nKestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nKestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n\n# Examples\n\n> Execute a python script\n\nid: \"python\"\ntype: \"io.kestra.core.tasks.scripts.Python\"\ninputFiles:\n  data.json: |\n          {\"status\": \"OK\"}\n  main.py: |\n    from kestra import Kestra\n    import json\n    import requests\n    import sys\n    result = json.loads(open(sys.argv[1]).read())\n    print(f\"python script {result['status']}\")\n    response = requests.get('http://google.com')\n    print(response.status_code)\n    Kestra.outputs({'status': response.status_code, 'text': response.text})\n  pip.conf: |\n    # some specific pip repository configuration\nargs:\n  - data.json\nrequirements:\n  - requests\n\n\n\n# Properties\n\n\n# args\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Python command args\n\nArguments list to pass to main python script\n\n\n# commands\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ✔️\n * Default: [./bin/python main.py]\n * Min items: 1\n\n> The commands to run\n\nDefault command will be launched with ./bin/python main.py {{args}}\n\n\n# dockerOptions\n\n * Type: DockerOptions\n * Dynamic: ❓\n * Required: ❌\n\n> Docker options when using runner DOCKER\n\n\n# env\n\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Additional environnements variable to add for current process.\n\n\n# exitOnFailed\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Exit if any non true return value\n\nThis tells bash that it should exit the script if any statement returns a non-true return value.\nThe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n\n# files\n\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The list of files that will be uploaded to internal storage,\n\nuse outputFiles property instead\n\n\n# inputFiles\n\n * Type: ====\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Input files are extra files supplied by user that make it simpler organize code.\n\nDescribe a files map (that can be a map or a json string) that will be written and usable in execution context. You can reach files using a workingDir variable like 'source {{workingDir}}/myfile.sh'\n\n\n# interpreter\n\n * Type: string\n * Dynamic: ❌\n * Required: ✔️\n * Default: /bin/sh\n * Min length: 1\n\n> Interpreter to used\n\n\n# interpreterArgs\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n * Default: [-c]\n\n> Interpreter args used\n\n\n# outputDirs\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Output dirs list that will be uploaded to internal storage\n\nList of key that will generate temporary directories.\nOn the command, just can use with special variable named outputDirs.key.\nIf you add a files with [\"myDir\"], you can use the special vars echo 1 >> {[ outputDirs.myDir }}/file1.txt and echo 2 >> {[ outputDirs.myDir }}/file2.txt and both files will be uploaded to internal storage. Then you can used them on others tasks using {{ outputs.taskId.files['myDir/file1.txt'] }}\n\n\n# outputFiles\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Output file list that will be uploaded to internal storage\n\nList of key that will generate temporary files.\nOn the command, just can use with special variable named outputFiles.key.\nIf you add a files with [\"first\"], you can use the special vars echo 1 >> {[ outputFiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n\n# outputsFiles\n\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Deprecated Output file\n\nuse outputFiles\n\n\n# pythonPath\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Default: python\n * Min length: 1\n\n> The python interpreter to use\n\nSet the python interpreter path to use\n\n\n# requirements\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Requirements are python dependencies to add to the python execution process\n\nPython dependencies list to setup in the virtualenv, in the same format than requirements.txt\n\n\n# runner\n\n * Type: string\n\n * Dynamic: ❌\n\n * Required: ✔️\n\n * Default: PROCESS\n\n * Possible Values:\n   \n   * PROCESS\n   * DOCKER\n\n> Runner to use\n\n\n# virtualEnv\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n * Default: true\n\n> Create a virtual env\n\nWhen a virtual env is created, we will install the requirements needed. Disabled it if all the requirements is already on the file system.\nIf you disabled the virtual env creation, the requirements will be ignored.\n\n\n# warningOnStdErr\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Use WARNING state if any stdErr is sent\n\n\n# Outputs\n\n\n# exitCode\n\n * Type: integer\n * Default: 0\n\n> The exit code of the whole execution\n\n\n# files\n\n🔒 Deprecated\n\n * Type: object\n * SubType: string\n\n> Deprecated output files\n\nuse outputFiles\n\n\n# outputFiles\n\n * Type: object\n * SubType: string\n\n> The output files uri in Kestra internal storage\n\n\n# stdErrLineCount\n\n * Type: integer\n * Default: 0\n\n> The standard error line count\n\n\n# stdOutLineCount\n\n * Type: integer\n * Default: 0\n\n> The standard output line count\n\n\n# vars\n\n * Type: object\n\n> The value extract from output of the commands\n\n\n# Definitions\n\n\n# DockerOptions\n\n# deviceRequests\n\n * Type: array\n * SubType: DockerOptions-DeviceRequest\n * Dynamic: ❌\n * Required: ❌\n\n> A list of request for devices to be sent to device drivers\n\n# dockerConfig\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker config file\n\nFull file that can be used to configure private registries, ...\n\n# dockerHost\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker api uri\n\n# entryPoint\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker entrypoint to use\n\n# extraHosts\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker extra host to use\n\n# image\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> Docker image to use\n\n# networkMode\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker network mode to use\n\n# pullImage\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n * Default: true\n\n> Is a pull of image must be done before starting the container\n\nMostly used for local image with registry\n\n# user\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Docker user to use\n\n# volumes\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> List of volumes to mount\n\nMust be a valid mount expression as string, example : /home/user:/app\n\nVolumes mount are disabled by default for security reasons, you must enabled on server configuration with kestra.tasks.scripts.docker.volume-enabled to true\n\n\n# DockerOptions-DeviceRequest\n\n# capabilities\n\n * Type: array\n * SubType: array\n * Dynamic: ❓\n * Required: ❌\n\n# count\n\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n# deviceIds\n\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n\n# driver\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# options\n\n * Type: object\n * Dynamic: ❓\n * Required: ❌",normalizedContent:"python\n\ntype: \"io.kestra.core.tasks.scripts.python\"\n\n\n> execute a python script\n\nwith this python task, we can execute a full python script.\nthe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nby convention, you need to define at least a main.py files in inputfiles that will be the script used.\nbut you are also able to add as many script as you need in inputfiles.\n\nyou can also add a pip.conf in inputfiles to customize the pip download of dependencies (like a private registry).\n\nyou can send outputs & metrics from your python script that can be used by others tasks. in order to help, we inject a python package directly on the working dir.here is an example usage:\n\nfrom kestra import kestra\nkestra.outputs({'test': 'value', 'int': 2, 'bool': true, 'float': 3.65})\nkestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nkestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nkestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n\n# examples\n\n> execute a python script\n\nid: \"python\"\ntype: \"io.kestra.core.tasks.scripts.python\"\ninputfiles:\n  data.json: |\n          {\"status\": \"ok\"}\n  main.py: |\n    from kestra import kestra\n    import json\n    import requests\n    import sys\n    result = json.loads(open(sys.argv[1]).read())\n    print(f\"python script {result['status']}\")\n    response = requests.get('http://google.com')\n    print(response.status_code)\n    kestra.outputs({'status': response.status_code, 'text': response.text})\n  pip.conf: |\n    # some specific pip repository configuration\nargs:\n  - data.json\nrequirements:\n  - requests\n\n\n\n# properties\n\n\n# args\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> python command args\n\narguments list to pass to main python script\n\n\n# commands\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ✔️\n * default: [./bin/python main.py]\n * min items: 1\n\n> the commands to run\n\ndefault command will be launched with ./bin/python main.py {{args}}\n\n\n# dockeroptions\n\n * type: dockeroptions\n * dynamic: ❓\n * required: ❌\n\n> docker options when using runner docker\n\n\n# env\n\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> additional environnements variable to add for current process.\n\n\n# exitonfailed\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> exit if any non true return value\n\nthis tells bash that it should exit the script if any statement returns a non-true return value.\nthe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n\n# files\n\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> the list of files that will be uploaded to internal storage,\n\nuse outputfiles property instead\n\n\n# inputfiles\n\n * type: ====\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> input files are extra files supplied by user that make it simpler organize code.\n\ndescribe a files map (that can be a map or a json string) that will be written and usable in execution context. you can reach files using a workingdir variable like 'source {{workingdir}}/myfile.sh'\n\n\n# interpreter\n\n * type: string\n * dynamic: ❌\n * required: ✔️\n * default: /bin/sh\n * min length: 1\n\n> interpreter to used\n\n\n# interpreterargs\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n * default: [-c]\n\n> interpreter args used\n\n\n# outputdirs\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> output dirs list that will be uploaded to internal storage\n\nlist of key that will generate temporary directories.\non the command, just can use with special variable named outputdirs.key.\nif you add a files with [\"mydir\"], you can use the special vars echo 1 >> {[ outputdirs.mydir }}/file1.txt and echo 2 >> {[ outputdirs.mydir }}/file2.txt and both files will be uploaded to internal storage. then you can used them on others tasks using {{ outputs.taskid.files['mydir/file1.txt'] }}\n\n\n# outputfiles\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> output file list that will be uploaded to internal storage\n\nlist of key that will generate temporary files.\non the command, just can use with special variable named outputfiles.key.\nif you add a files with [\"first\"], you can use the special vars echo 1 >> {[ outputfiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n\n# outputsfiles\n\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> deprecated output file\n\nuse outputfiles\n\n\n# pythonpath\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * default: python\n * min length: 1\n\n> the python interpreter to use\n\nset the python interpreter path to use\n\n\n# requirements\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> requirements are python dependencies to add to the python execution process\n\npython dependencies list to setup in the virtualenv, in the same format than requirements.txt\n\n\n# runner\n\n * type: string\n\n * dynamic: ❌\n\n * required: ✔️\n\n * default: process\n\n * possible values:\n   \n   * process\n   * docker\n\n> runner to use\n\n\n# virtualenv\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n * default: true\n\n> create a virtual env\n\nwhen a virtual env is created, we will install the requirements needed. disabled it if all the requirements is already on the file system.\nif you disabled the virtual env creation, the requirements will be ignored.\n\n\n# warningonstderr\n\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> use warning state if any stderr is sent\n\n\n# outputs\n\n\n# exitcode\n\n * type: integer\n * default: 0\n\n> the exit code of the whole execution\n\n\n# files\n\n🔒 deprecated\n\n * type: object\n * subtype: string\n\n> deprecated output files\n\nuse outputfiles\n\n\n# outputfiles\n\n * type: object\n * subtype: string\n\n> the output files uri in kestra internal storage\n\n\n# stderrlinecount\n\n * type: integer\n * default: 0\n\n> the standard error line count\n\n\n# stdoutlinecount\n\n * type: integer\n * default: 0\n\n> the standard output line count\n\n\n# vars\n\n * type: object\n\n> the value extract from output of the commands\n\n\n# definitions\n\n\n# dockeroptions\n\n# devicerequests\n\n * type: array\n * subtype: dockeroptions-devicerequest\n * dynamic: ❌\n * required: ❌\n\n> a list of request for devices to be sent to device drivers\n\n# dockerconfig\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> docker config file\n\nfull file that can be used to configure private registries, ...\n\n# dockerhost\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> docker api uri\n\n# entrypoint\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> docker entrypoint to use\n\n# extrahosts\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> docker extra host to use\n\n# image\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> docker image to use\n\n# networkmode\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> docker network mode to use\n\n# pullimage\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n * default: true\n\n> is a pull of image must be done before starting the container\n\nmostly used for local image with registry\n\n# user\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> docker user to use\n\n# volumes\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> list of volumes to mount\n\nmust be a valid mount expression as string, example : /home/user:/app\n\nvolumes mount are disabled by default for security reasons, you must enabled on server configuration with kestra.tasks.scripts.docker.volume-enabled to true\n\n\n# dockeroptions-devicerequest\n\n# capabilities\n\n * type: array\n * subtype: array\n * dynamic: ❓\n * required: ❌\n\n# count\n\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n# deviceids\n\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n\n# driver\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# options\n\n * type: object\n * dynamic: ❓\n * required: ❌",charsets:{cjk:!0}},{title:"Delete",frontmatter:{title:"Delete",editLink:!1,description:"Delete a state from internal storage.",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Delete"},{property:"og:description",content:"Delete a state from internal storage. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/core/tasks/states/io.kestra.core.tasks.states.Delete.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Delete"},{name:"twitter:description",content:"Delete a state from internal storage. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/core/tasks/states/io.kestra.core.tasks.states.Delete.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/core/tasks/states/io.kestra.core.tasks.states.Delete.html",relativePath:"plugins/core/tasks/states/io.kestra.core.tasks.states.Delete.md",key:"v-97922f1e",path:"/plugins/core/tasks/states/io.kestra.core.tasks.states.Delete.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:97},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:225},{level:3,title:"errorOnMissing",slug:"erroronmissing",normalizedTitle:"erroronmissing",charIndex:240},{level:3,title:"name",slug:"name",normalizedTitle:"name",charIndex:160},{level:3,title:"namespace",slug:"namespace",normalizedTitle:"namespace",charIndex:472},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:724},{level:3,title:"deleted",slug:"deleted",normalizedTitle:"deleted",charIndex:736}],headersStr:"Examples Properties errorOnMissing name namespace Outputs deleted",content:'Delete\n\ntype: "io.kestra.core.tasks.states.Delete"\n\n\n> Delete a state from internal storage.\n\n\n# Examples\n\n> Delete a state isolated by flow with default state name\n\nid: getState\ntype: io.kestra.core.tasks.states.Delete\n\n\n\n# Properties\n\n\n# errorOnMissing\n\n * Type: boolean\n * Dynamic: ✔️\n * Required: ❌\n * Default: false\n\n> raise an error if the state is not found\n\n\n# name\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Default: default\n\n> The name of state file\n\n\n# namespace\n\n * Type: boolean\n * Dynamic: ✔️\n * Required: ❌\n * Default: false\n\n> Share state for the current namespace\n\nBy default, the state is isolated by namespace and flow, setting to true will allow to share the state between the same namespace\n\n\n# Outputs\n\n\n# deleted\n\n * Type: boolean\n\n> If the files was really deleted',normalizedContent:'delete\n\ntype: "io.kestra.core.tasks.states.delete"\n\n\n> delete a state from internal storage.\n\n\n# examples\n\n> delete a state isolated by flow with default state name\n\nid: getstate\ntype: io.kestra.core.tasks.states.delete\n\n\n\n# properties\n\n\n# erroronmissing\n\n * type: boolean\n * dynamic: ✔️\n * required: ❌\n * default: false\n\n> raise an error if the state is not found\n\n\n# name\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * default: default\n\n> the name of state file\n\n\n# namespace\n\n * type: boolean\n * dynamic: ✔️\n * required: ❌\n * default: false\n\n> share state for the current namespace\n\nby default, the state is isolated by namespace and flow, setting to true will allow to share the state between the same namespace\n\n\n# outputs\n\n\n# deleted\n\n * type: boolean\n\n> if the files was really deleted',charsets:{}},{title:"Get",frontmatter:{title:"Get",editLink:!1,description:"Get a state from internal storage.",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Get"},{property:"og:description",content:"Get a state from internal storage. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/core/tasks/states/io.kestra.core.tasks.states.Get.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Get"},{name:"twitter:description",content:"Get a state from internal storage. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/core/tasks/states/io.kestra.core.tasks.states.Get.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/core/tasks/states/io.kestra.core.tasks.states.Get.html",relativePath:"plugins/core/tasks/states/io.kestra.core.tasks.states.Get.md",key:"v-72837be3",path:"/plugins/core/tasks/states/io.kestra.core.tasks.states.Get.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:88},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:210},{level:3,title:"errorOnMissing",slug:"erroronmissing",normalizedTitle:"erroronmissing",charIndex:225},{level:3,title:"name",slug:"name",normalizedTitle:"name",charIndex:148},{level:3,title:"namespace",slug:"namespace",normalizedTitle:"namespace",charIndex:457},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:709},{level:3,title:"count",slug:"count",normalizedTitle:"count",charIndex:721},{level:3,title:"data",slug:"data",normalizedTitle:"data",charIndex:809}],headersStr:"Examples Properties errorOnMissing name namespace Outputs count data",content:'Get\n\ntype: "io.kestra.core.tasks.states.Get"\n\n\n> Get a state from internal storage.\n\n\n# Examples\n\n> Get a state isolated by flow with default state name\n\nid: getState\ntype: io.kestra.core.tasks.states.Get\n\n\n\n# Properties\n\n\n# errorOnMissing\n\n * Type: boolean\n * Dynamic: ✔️\n * Required: ❌\n * Default: false\n\n> raise an error if the state is not found\n\n\n# name\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Default: default\n\n> The name of state file\n\n\n# namespace\n\n * Type: boolean\n * Dynamic: ✔️\n * Required: ❌\n * Default: false\n\n> Share state for the current namespace\n\nBy default, the state is isolated by namespace and flow, setting to true will allow to share the state between the same namespace\n\n\n# Outputs\n\n\n# count\n\n * Type: integer\n * Default: 0\n\n> The count of properties found in the state\n\n\n# data\n\n * Type: object\n\n> The data extracted from state',normalizedContent:'get\n\ntype: "io.kestra.core.tasks.states.get"\n\n\n> get a state from internal storage.\n\n\n# examples\n\n> get a state isolated by flow with default state name\n\nid: getstate\ntype: io.kestra.core.tasks.states.get\n\n\n\n# properties\n\n\n# erroronmissing\n\n * type: boolean\n * dynamic: ✔️\n * required: ❌\n * default: false\n\n> raise an error if the state is not found\n\n\n# name\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * default: default\n\n> the name of state file\n\n\n# namespace\n\n * type: boolean\n * dynamic: ✔️\n * required: ❌\n * default: false\n\n> share state for the current namespace\n\nby default, the state is isolated by namespace and flow, setting to true will allow to share the state between the same namespace\n\n\n# outputs\n\n\n# count\n\n * type: integer\n * default: 0\n\n> the count of properties found in the state\n\n\n# data\n\n * type: object\n\n> the data extracted from state',charsets:{}},{title:"Set",frontmatter:{title:"Set",editLink:!1,description:"Set a state from internal storage.",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Set"},{property:"og:description",content:"Set a state from internal storage. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/core/tasks/states/io.kestra.core.tasks.states.Set.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Set"},{name:"twitter:description",content:"Set a state from internal storage. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/core/tasks/states/io.kestra.core.tasks.states.Set.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/core/tasks/states/io.kestra.core.tasks.states.Set.html",relativePath:"plugins/core/tasks/states/io.kestra.core.tasks.states.Set.md",key:"v-be375f3a",path:"/plugins/core/tasks/states/io.kestra.core.tasks.states.Set.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:437},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:636},{level:3,title:"data",slug:"data",normalizedTitle:"data",charIndex:572},{level:3,title:"name",slug:"name",normalizedTitle:"name",charIndex:501},{level:3,title:"namespace",slug:"namespace",normalizedTitle:"namespace",charIndex:845},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1097},{level:3,title:"count",slug:"count",normalizedTitle:"count",charIndex:1109},{level:3,title:"uri",slug:"uri",normalizedTitle:"uri",charIndex:1197}],headersStr:"Examples Properties data name namespace Outputs count uri",content:"Set\n\ntype: \"io.kestra.core.tasks.states.Set\"\n\n\n> Set a state from internal storage.\n\nValues will be merged:\n\n * If you provide a new key, the new key will be added\n * If you provide an existing key, the previous key will be overwrite\n\nWARNING\n\nThis method have no concurrency safe, if many executions for the same flow are concurrent, there is no guarantee on isolation on the value.\nThe value can be overwrite by others executions.\n\n\n# Examples\n\n> Set a state key isolated by flow with default state name\n\nid: setState\ntype: io.kestra.core.tasks.states.Set\nname: myState\ndata:\n  '{{ inputs.store }}': '{{ outputs.download.md5 }}'\n\n\n\n# Properties\n\n\n# data\n\n * Type: object\n * Dynamic: ✔️\n * Required: ❌\n\n> The data to save into the state\n\n\n# name\n\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Default: default\n\n> The name of state file\n\n\n# namespace\n\n * Type: boolean\n * Dynamic: ✔️\n * Required: ❌\n * Default: false\n\n> Share state for the current namespace\n\nBy default, the state is isolated by namespace and flow, setting to true will allow to share the state between the same namespace\n\n\n# Outputs\n\n\n# count\n\n * Type: integer\n * Default: 0\n\n> The count of properties found in the state\n\n\n# uri\n\n * Type: string\n\n> The uri of the current state",normalizedContent:"set\n\ntype: \"io.kestra.core.tasks.states.set\"\n\n\n> set a state from internal storage.\n\nvalues will be merged:\n\n * if you provide a new key, the new key will be added\n * if you provide an existing key, the previous key will be overwrite\n\nwarning\n\nthis method have no concurrency safe, if many executions for the same flow are concurrent, there is no guarantee on isolation on the value.\nthe value can be overwrite by others executions.\n\n\n# examples\n\n> set a state key isolated by flow with default state name\n\nid: setstate\ntype: io.kestra.core.tasks.states.set\nname: mystate\ndata:\n  '{{ inputs.store }}': '{{ outputs.download.md5 }}'\n\n\n\n# properties\n\n\n# data\n\n * type: object\n * dynamic: ✔️\n * required: ❌\n\n> the data to save into the state\n\n\n# name\n\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * default: default\n\n> the name of state file\n\n\n# namespace\n\n * type: boolean\n * dynamic: ✔️\n * required: ❌\n * default: false\n\n> share state for the current namespace\n\nby default, the state is isolated by namespace and flow, setting to true will allow to share the state between the same namespace\n\n\n# outputs\n\n\n# count\n\n * type: integer\n * default: 0\n\n> the count of properties found in the state\n\n\n# uri\n\n * type: string\n\n> the uri of the current state",charsets:{}},{title:"Concat",frontmatter:{title:"Concat",editLink:!1,description:"Concat files from internal storage.",icon:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB3aWR0aD0iMTAyNCIgaGVpZ2h0PSIxMDI0IgogICAgIHByZXNlcnZlQXNwZWN0UmF0aW89InhNaWRZTWlkIG1lZXQiIHZpZXdCb3g9IjAgMCAxMDI0IDEwMjQiCiAgICAgc3R5bGU9Ii1tcy10cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpOyAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKDM2MGRlZyk7IHRyYW5zZm9ybTogcm90YXRlKDM2MGRlZyk7Ij4KICAgIDxkZWZzLz4KICAgIDxwYXRoCiAgICAgICAgZD0iTTQ4Mi4yIDUwOC40TDMzMS4zIDM4OWMtMy0yLjQtNy4zLS4yLTcuMyAzLjZWNDc4SDE4NFYxODRoMjA0djEyOGMwIDIuMiAxLjggNCA0IDRoNjBjMi4yIDAgNC0xLjggNC00VjE0NGMwLTE1LjUtMTIuNS0yOC0yOC0yOEgxNDRjLTE1LjUgMC0yOCAxMi41LTI4IDI4djczNmMwIDE1LjUgMTIuNSAyOCAyOCAyOGgyODRjMTUuNSAwIDI4LTEyLjUgMjgtMjhWNzEyYzAtMi4yLTEuOC00LTQtNGgtNjBjLTIuMiAwLTQgMS44LTQgNHYxMjhIMTg0VjU0NmgxNDB2ODUuNGMwIDMuOCA0LjQgNiA3LjMgMy42bDE1MC45LTExOS40YzIuNC0xLjggMi40LTUuNCAwLTcuMnpNODgwIDExNkg1OTZjLTE1LjUgMC0yOCAxMi41LTI4IDI4djE2OGMwIDIuMiAxLjggNCA0IDRoNjBjMi4yIDAgNC0xLjggNC00VjE4NGgyMDR2Mjk0SDcwMHYtODUuNGMwLTMuOC00LjMtNi03LjMtMy42bC0xNTEgMTE5LjRjLTIuMyAxLjgtMi4zIDUuMyAwIDcuMWwxNTEgMTE5LjVjMi45IDIuMyA3LjMuMiA3LjMtMy42VjU0NmgxNDB2Mjk0SDYzNlY3MTJjMC0yLjItMS44LTQtNC00aC02MGMtMi4yIDAtNCAxLjgtNCA0djE2OGMwIDE1LjUgMTIuNSAyOCAyOCAyOGgyODRjMTUuNSAwIDI4LTEyLjUgMjgtMjhWMTQ0YzAtMTUuNS0xMi41LTI4LTI4LTI4eiIKICAgICAgICBmaWxsPSIjMEQxNTIzIi8+Cjwvc3ZnPg==",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Concat"},{property:"og:description",content:"Concat files from internal storage. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/core/tasks/storages/io.kestra.core.tasks.storages.Concat.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Concat"},{name:"twitter:description",content:"Concat files from internal storage. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/core/tasks/storages/io.kestra.core.tasks.storages.Concat.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/core/tasks/storages/io.kestra.core.tasks.storages.Concat.html",relativePath:"plugins/core/tasks/storages/io.kestra.core.tasks.storages.Concat.md",key:"v-0943ab37",path:"/plugins/core/tasks/storages/io.kestra.core.tasks.storages.Concat.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:97},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:1353},{level:3,title:"files",slug:"files",normalizedTitle:"files",charIndex:64},{level:3,title:"separator",slug:"separator",normalizedTitle:"separator",charIndex:138},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1659},{level:3,title:"uri",slug:"uri",normalizedTitle:"uri",charIndex:1671}],headersStr:"Examples Properties files separator Outputs uri",content:'Concat\n\ntype: "io.kestra.core.tasks.storages.Concat"\n\n\n> Concat files from internal storage.\n\n\n# Examples\n\n> Concat 2 files with a custom separator\n\nid: "concat"\ntype: "io.kestra.core.tasks.storages.Concat"\nfiles: \n  - "kestra://long/url/file1.txt"\n  - "kestra://long/url/file2.txt"\nseparator: "\\n"\n\n\n> Concat file generated by a each tasks\n\ntasks:\n  - id: each\n    type: io.kestra.core.tasks.flows.EachSequential\n    tasks:\n      - id: start_api_call\n        type: io.kestra.core.tasks.scripts.Bash\n        commands:\n          - echo {{ taskrun.value }} > {{ temp.generated }}\n        files:\n          - generated\n    value: \'["value1", "value2", "value3"]\'\n  - id: concat\n    type: io.kestra.core.tasks.storages.Concat\n    files:\n      - "{{ outputs.start_api_call.value1.files.generated }}"\n      - "{{ outputs.start_api_call.value2.files.generated }}"\n      - "{{ outputs.start_api_call.value3.files.generated }}"\n\n\n> Concat dynamic number of files\n\ntasks:\n  - id: echo\n    type: io.kestra.core.tasks.scripts.Bash\n    commands:\n      - echo "Hello John" > {{ outputDirs.output }}/1.txt\n      - echo "Hello Jane" > {{ outputDirs.output }}/2.txt\n      - echo "Hello Doe" > {{ outputDirs.output }}/3.txt\n    outputDirs:\n      - output\n  - id: concat\n    type: io.kestra.core.tasks.storages.Concat\n    files: "{{ outputs.echo.files | jq(\'.[]\') }}"\n\n\n\n# Properties\n\n\n# files\n\n * Type: ====\n * Dynamic: ✔️\n * Required: ❌\n\n> List of files to be concatenated.\n\nMust be a kestra:// storage urls, can be a list of string or json string\n\n\n# separator\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The separator to used between files, default is no separator\n\n\n# Outputs\n\n\n# uri\n\n * Type: string\n\n> The concatenate file uri.',normalizedContent:'concat\n\ntype: "io.kestra.core.tasks.storages.concat"\n\n\n> concat files from internal storage.\n\n\n# examples\n\n> concat 2 files with a custom separator\n\nid: "concat"\ntype: "io.kestra.core.tasks.storages.concat"\nfiles: \n  - "kestra://long/url/file1.txt"\n  - "kestra://long/url/file2.txt"\nseparator: "\\n"\n\n\n> concat file generated by a each tasks\n\ntasks:\n  - id: each\n    type: io.kestra.core.tasks.flows.eachsequential\n    tasks:\n      - id: start_api_call\n        type: io.kestra.core.tasks.scripts.bash\n        commands:\n          - echo {{ taskrun.value }} > {{ temp.generated }}\n        files:\n          - generated\n    value: \'["value1", "value2", "value3"]\'\n  - id: concat\n    type: io.kestra.core.tasks.storages.concat\n    files:\n      - "{{ outputs.start_api_call.value1.files.generated }}"\n      - "{{ outputs.start_api_call.value2.files.generated }}"\n      - "{{ outputs.start_api_call.value3.files.generated }}"\n\n\n> concat dynamic number of files\n\ntasks:\n  - id: echo\n    type: io.kestra.core.tasks.scripts.bash\n    commands:\n      - echo "hello john" > {{ outputdirs.output }}/1.txt\n      - echo "hello jane" > {{ outputdirs.output }}/2.txt\n      - echo "hello doe" > {{ outputdirs.output }}/3.txt\n    outputdirs:\n      - output\n  - id: concat\n    type: io.kestra.core.tasks.storages.concat\n    files: "{{ outputs.echo.files | jq(\'.[]\') }}"\n\n\n\n# properties\n\n\n# files\n\n * type: ====\n * dynamic: ✔️\n * required: ❌\n\n> list of files to be concatenated.\n\nmust be a kestra:// storage urls, can be a list of string or json string\n\n\n# separator\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the separator to used between files, default is no separator\n\n\n# outputs\n\n\n# uri\n\n * type: string\n\n> the concatenate file uri.',charsets:{cjk:!0}},{title:"Delete",frontmatter:{title:"Delete",editLink:!1,description:"Delete a file from internal storage.",icon:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB3aWR0aD0iMTAyNCIgaGVpZ2h0PSIxMDI0IgogICAgIHByZXNlcnZlQXNwZWN0UmF0aW89InhNaWRZTWlkIG1lZXQiIHZpZXdCb3g9IjAgMCAxMDI0IDEwMjQiCiAgICAgc3R5bGU9Ii1tcy10cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpOyAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKDM2MGRlZyk7IHRyYW5zZm9ybTogcm90YXRlKDM2MGRlZyk7Ij4KICAgIDxkZWZzLz4KICAgIDxwYXRoCiAgICAgICAgZD0iTTY1MS4xIDY0MS45Yy0xLjQtMS4yLTMuMi0xLjktNS4xLTEuOWgtNTQuN2MtMi40IDAtNC42IDEuMS02LjEgMi45TDUxMiA3MzAuN2wtNzMuMS04Ny44Yy0xLjUtMS44LTMuOC0yLjktNi4xLTIuOUgzNzhjLTEuOSAwLTMuNy43LTUuMSAxLjljLTMuNCAyLjgtMy45IDcuOS0xIDExLjNMNDc0LjIgNzc2TDM3MS44IDg5OC45Yy0yLjggMy40LTIuNCA4LjQgMSAxMS4zYzEuNCAxLjIgMy4yIDEuOSA1LjEgMS45aDU0LjdjMi40IDAgNC42LTEuMSA2LjEtMi45bDczLjEtODcuOGw3My4xIDg3LjhjMS41IDEuOCAzLjggMi45IDYuMSAyLjloNTVjMS45IDAgMy43LS43IDUuMS0xLjljMy40LTIuOCAzLjktNy45IDEtMTEuM0w1NDkuOCA3NzZsMTAyLjQtMTIyLjljMi44LTMuNCAyLjMtOC40LTEuMS0xMS4yek00NzIgNTQ0aDgwYzQuNCAwIDgtMy42IDgtOFYxMjBjMC00LjQtMy42LTgtOC04aC04MGMtNC40IDAtOCAzLjYtOCA4djQxNmMwIDQuNCAzLjYgOCA4IDh6TTM1MCAzODZIMTg0VjEzNmMwLTMuMy0yLjctNi02LTZoLTYwYy0zLjMgMC02IDIuNy02IDZ2MjkyYzAgMTYuNiAxMy40IDMwIDMwIDMwaDIwOGMzLjMgMCA2LTIuNyA2LTZ2LTYwYzAtMy4zLTIuNy02LTYtNnptNTU2LTI1NmgtNjBjLTMuMyAwLTYgMi43LTYgNnYyNTBINjc0Yy0zLjMgMC02IDIuNy02IDZ2NjBjMCAzLjMgMi43IDYgNiA2aDIwOGMxNi42IDAgMzAtMTMuNCAzMC0zMFYxMzZjMC0zLjMtMi43LTYtNi02eiIKICAgICAgICBmaWxsPSIjMEQxNTIzIi8+Cjwvc3ZnPg==",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Delete"},{property:"og:description",content:"Delete a file from internal storage. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/core/tasks/storages/io.kestra.core.tasks.storages.Delete.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Delete"},{name:"twitter:description",content:"Delete a file from internal storage. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/core/tasks/storages/io.kestra.core.tasks.storages.Delete.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/core/tasks/storages/io.kestra.core.tasks.storages.Delete.html",relativePath:"plugins/core/tasks/storages/io.kestra.core.tasks.storages.Delete.md",key:"v-66fcc649",path:"/plugins/core/tasks/storages/io.kestra.core.tasks.storages.Delete.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:98},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:205},{level:3,title:"errorOnMissing",slug:"erroronmissing",normalizedTitle:"erroronmissing",charIndex:220},{level:3,title:"uri",slug:"uri",normalizedTitle:"uri",charIndex:166},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:458},{level:3,title:"deleted",slug:"deleted",normalizedTitle:"deleted",charIndex:470},{level:3,title:"uri",slug:"uri-2",normalizedTitle:"uri",charIndex:166}],headersStr:"Examples Properties errorOnMissing uri Outputs deleted uri",content:'Delete\n\ntype: "io.kestra.core.tasks.storages.Delete"\n\n\n> Delete a file from internal storage.\n\n\n# Examples\n\nid: "delete"\ntype: "io.kestra.core.tasks.storages.Delete"\nuri: "kestra://long/url/file.txt"\n\n\n\n# Properties\n\n\n# errorOnMissing\n\n * Type: boolean\n * Dynamic: ✔️\n * Required: ❌\n * Default: false\n\n> raise an error if the file is not found\n\n\n# uri\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> the file to delete\n\nMust be a kestra:// storage url\n\n\n# Outputs\n\n\n# deleted\n\n * Type: boolean\n\n> If the files was really deleted\n\n\n# uri\n\n * Type: string\n\n> The deleted',normalizedContent:'delete\n\ntype: "io.kestra.core.tasks.storages.delete"\n\n\n> delete a file from internal storage.\n\n\n# examples\n\nid: "delete"\ntype: "io.kestra.core.tasks.storages.delete"\nuri: "kestra://long/url/file.txt"\n\n\n\n# properties\n\n\n# erroronmissing\n\n * type: boolean\n * dynamic: ✔️\n * required: ❌\n * default: false\n\n> raise an error if the file is not found\n\n\n# uri\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the file to delete\n\nmust be a kestra:// storage url\n\n\n# outputs\n\n\n# deleted\n\n * type: boolean\n\n> if the files was really deleted\n\n\n# uri\n\n * type: string\n\n> the deleted',charsets:{}},{title:"PurgeExecution",frontmatter:{title:"PurgeExecution",editLink:!1,description:"Purge all files from internal storage created by this execution.",icon:"PHN2ZyBoZWlnaHQ9JzMwMHB4JyB3aWR0aD0nMzAwcHgnICBmaWxsPSIjMEQxNTIzIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOmNjPSJodHRwOi8vY3JlYXRpdmVjb21tb25zLm9yZy9ucyMiIHhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIiB2ZXJzaW9uPSIxLjEiIHZpZXdCb3g9IjAgMCAxMDAgMTAwIiB4PSIwcHgiIHk9IjBweCI+PHBhdGggZD0ibTE1LjMyOSAyLjgzMDlzLTAuNzMwODUgOC4wNDA1LTIuOTUxMyAxMC4yNzNjLTIuMjIwNSAyLjIzMjItMTAuMzcxIDMuMTIwNi0xMC4zNzEgMy4xMjA2czguMDAwNCAwLjgzNTQyIDEwLjIzMyAzLjA1NTljMi4yMzIxIDIuMjIwNSAzLjE1ODYgMTAuMjY3IDMuMTU4NiAxMC4yNjdzMC45NTE0MS04LjA1MTggMy4xNzE5LTEwLjI4NGMyLjIyMDUtMi4yMzIyIDEwLjE1My0zLjEwOTIgMTAuMTUzLTMuMTA5MnMtOC4xNDMxLTAuNzkzNTktMTAuMzc1LTMuMDE0MWMtMi4yMzIyLTIuMjIwNS0zLjAxNzktMTAuMzA5LTMuMDE3OS0xMC4zMDl6bTQwLjcyNyA4LjY1MjRzLTIuMjY0IDI0Ljk2LTkuMTU2MyAzMS44ODhjLTYuODkyMyA2LjkyODctMzIuMTk2IDkuNjgzMS0zMi4xOTYgOS42ODMxczI0LjgzNCAyLjU5NDggMzEuNzYzIDkuNDg3MmM2LjkyODcgNi44OTIzIDkuODA4NCAzMS44NjcgOS44MDg0IDMxLjg2N3MyLjk1MjMtMjQuOTkgOS44NDQ0LTMxLjkxOWM2Ljg5MjMtNi45Mjg3IDMxLjUxLTkuNjUyNyAzMS41MS05LjY1MjdzLTI1LjI3NS0yLjQ2MTctMzIuMjA0LTkuMzU0MWMtNi45Mjg3LTYuODkyMy05LjM2OTMtMzItOS4zNjkzLTMyem0tMzIuMjU3IDU4LjUwOXMtMC43Mjg5NCA4LjA0MjMtMi45NDk0IDEwLjI3NWMtMi4yMjA1IDIuMjMyMi0xMC4zNzMgMy4xMTg2LTEwLjM3MyAzLjExODZzOC4wMDI0IDAuODM3MzIgMTAuMjM1IDMuMDU3OGMyLjIzMjIgMi4yMjA1IDMuMTU4NiAxMC4yNjUgMy4xNTg2IDEwLjI2NXMwLjk1MTQxLTguMDQ5OSAzLjE3MTktMTAuMjgzYzIuMjIwNS0yLjIzMjIgMTAuMTUxLTMuMTExIDEwLjE1MS0zLjExMXMtOC4xNDEyLTAuNzkxNjgtMTAuMzczLTMuMDEyMmMtMi4yMzIyLTIuMjIwNS0zLjAxOTgtMTAuMzExLTMuMDE5OC0xMC4zMTF6IiBzdHJva2Utd2lkdGg9Ii45NzM2MyI+PC9wYXRoPjwvc3ZnPg==",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"PurgeExecution"},{property:"og:description",content:"Purge all files from internal storage created by this execution. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/core/tasks/storages/io.kestra.core.tasks.storages.PurgeExecution.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"PurgeExecution"},{name:"twitter:description",content:"Purge all files from internal storage created by this execution. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/core/tasks/storages/io.kestra.core.tasks.storages.PurgeExecution.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/core/tasks/storages/io.kestra.core.tasks.storages.PurgeExecution.html",relativePath:"plugins/core/tasks/storages/io.kestra.core.tasks.storages.PurgeExecution.md",key:"v-541b8ec5",path:"/plugins/core/tasks/storages/io.kestra.core.tasks.storages.PurgeExecution.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:479},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:570},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:585},{level:3,title:"uris",slug:"uris",normalizedTitle:"uris",charIndex:597}],headersStr:"Examples Properties Outputs uris",content:'PurgeExecution\n\ntype: "io.kestra.core.tasks.storages.PurgeExecution"\n\n\n> Purge all files from internal storage created by this execution.\n\nWill delete all the generated files from a flow for this current execution. This will delete:\n+- inputs\n\n * outputs\n * triggers\n\n * If the current execution don\'t have any generated files, the task will not failed.\n   If you pass a internal storage uri from another execution, it will not be deleted, only current execution is deleted.\n\n\n# Examples\n\nid: "purge_execution"\ntype: "io.kestra.core.tasks.storages.PurgeExecution"\n\n\n\n\n# Properties\n\n\n# Outputs\n\n\n# uris\n\n * Type: array\n * SubType: string\n\n> The deleted files',normalizedContent:'purgeexecution\n\ntype: "io.kestra.core.tasks.storages.purgeexecution"\n\n\n> purge all files from internal storage created by this execution.\n\nwill delete all the generated files from a flow for this current execution. this will delete:\n+- inputs\n\n * outputs\n * triggers\n\n * if the current execution don\'t have any generated files, the task will not failed.\n   if you pass a internal storage uri from another execution, it will not be deleted, only current execution is deleted.\n\n\n# examples\n\nid: "purge_execution"\ntype: "io.kestra.core.tasks.storages.purgeexecution"\n\n\n\n\n# properties\n\n\n# outputs\n\n\n# uris\n\n * type: array\n * subtype: string\n\n> the deleted files',charsets:{}},{title:"Size",frontmatter:{title:"Size",editLink:!1,description:"Get a filesize from internal storage.",icon:"PHN2ZyBoZWlnaHQ9JzMwMHB4JyB3aWR0aD0nMzAwcHgnICBmaWxsPSIjMEQxNTIzIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB2ZXJzaW9uPSIxLjEiIHg9IjBweCIgeT0iMHB4IiB2aWV3Qm94PSIwIDAgMzIgMzIiIHN0eWxlPSJlbmFibGUtYmFja2dyb3VuZDpuZXcgMCAwIDMyIDMyOyIgeG1sOnNwYWNlPSJwcmVzZXJ2ZSI+PGc+PGc+PHBhdGggZD0iTTUsNEgzQzIuNDQ3NzUzOSw0LDIsMy41NTI3MzQ0LDIsM3MwLjQ0Nzc1MzktMSwxLTFoMVYxYzAtMC41NTI3MzQ0LDAuNDQ3NzUzOS0xLDEtMXMxLDAuNDQ3MjY1NiwxLDF2MiAgICBDNiwzLjU1MjczNDQsNS41NTIyNDYxLDQsNSw0eiI+PC9wYXRoPjwvZz48Zz48cGF0aCBkPSJNMjksNGgtMmMtMC41NTIyNDYxLDAtMS0wLjQ0NzI2NTYtMS0xVjFjMC0wLjU1MjczNDQsMC40NDc3NTM5LTEsMS0xczEsMC40NDcyNjU2LDEsMXYxaDFjMC41NTIyNDYxLDAsMSwwLjQ0NzI2NTYsMSwxICAgIFMyOS41NTIyNDYxLDQsMjksNHoiPjwvcGF0aD48L2c+PGc+PHBhdGggZD0iTTUsMzJjLTAuNTUyMjQ2MSwwLTEtMC40NDcyNjU2LTEtMXYtMUgzYy0wLjU1MjI0NjEsMC0xLTAuNDQ3MjY1Ni0xLTFzMC40NDc3NTM5LTEsMS0xaDJjMC41NTIyNDYxLDAsMSwwLjQ0NzI2NTYsMSwxdjIgICAgQzYsMzEuNTUyNzM0NCw1LjU1MjI0NjEsMzIsNSwzMnoiPjwvcGF0aD48L2c+PGc+PHBhdGggZD0iTTI3LDMyYy0wLjU1MjI0NjEsMC0xLTAuNDQ3MjY1Ni0xLTF2LTJjMC0wLjU1MjczNDQsMC40NDc3NTM5LTEsMS0xaDJjMC41NTIyNDYxLDAsMSwwLjQ0NzI2NTYsMSwxcy0wLjQ0Nzc1MzksMS0xLDFoLTEgICAgdjFDMjgsMzEuNTUyNzM0NCwyNy41NTIyNDYxLDMyLDI3LDMyeiI+PC9wYXRoPjwvZz48Zz48cGF0aCBkPSJNMjQuOTc5OTgwNSwyOEg3LjAyMDAxOTVjLTAuNTUyMjQ2MSwwLTEtMC40NDcyNjU2LTEtMVY1YzAtMC41NTI3MzQ0LDAuNDQ3NzUzOS0xLDEtMWgxNy45NTk5NjA5ICAgIGMwLjU1MjI0NjEsMCwxLDAuNDQ3MjY1NiwxLDF2MjJDMjUuOTc5OTgwNSwyNy41NTI3MzQ0LDI1LjUzMjIyNjYsMjgsMjQuOTc5OTgwNSwyOHogTTguMDIwMDE5NSwyNmgxNS45NTk5NjA5VjZIOC4wMjAwMTk1VjI2eiI+PC9wYXRoPjwvZz48Zz48cGF0aCBkPSJNMTYuOTYwOTM3NSwxMC45MDYyNWgtNi4xNDA2MjVjLTAuNTUyMjQ2MSwwLTEtMC40NDcyNjU2LTEtMXMwLjQ0Nzc1MzktMSwxLTFoNi4xNDA2MjVjMC41NTIyNDYxLDAsMSwwLjQ0NzI2NTYsMSwxICAgIFMxNy41MTMxODM2LDEwLjkwNjI1LDE2Ljk2MDkzNzUsMTAuOTA2MjV6Ij48L3BhdGg+PC9nPjxnPjxwYXRoIGQ9Ik0yMS4xNzk2ODc1LDE1LjQwNjI1aC0xMC4zNTkzNzVjLTAuNTUyMjQ2MSwwLTEtMC40NDcyNjU2LTEtMXMwLjQ0Nzc1MzktMSwxLTFoMTAuMzU5Mzc1YzAuNTUyMjQ2MSwwLDEsMC40NDcyNjU2LDEsMSAgICBTMjEuNzMxOTMzNiwxNS40MDYyNSwyMS4xNzk2ODc1LDE1LjQwNjI1eiI+PC9wYXRoPjwvZz48Zz48cGF0aCBkPSJNMjEuMTc5Njg3NSwxOS4yNWgtMTAuMzU5Mzc1Yy0wLjU1MjI0NjEsMC0xLTAuNDQ3MjY1Ni0xLTFzMC40NDc3NTM5LTEsMS0xaDEwLjM1OTM3NWMwLjU1MjI0NjEsMCwxLDAuNDQ3MjY1NiwxLDEgICAgUzIxLjczMTkzMzYsMTkuMjUsMjEuMTc5Njg3NSwxOS4yNXoiPjwvcGF0aD48L2c+PGc+PHBhdGggZD0iTTIxLjE3OTY4NzUsMjMuMDkzNzVoLTEwLjM1OTM3NWMtMC41NTIyNDYxLDAtMS0wLjQ0NzI2NTYtMS0xczAuNDQ3NzUzOS0xLDEtMWgxMC4zNTkzNzVjMC41NTIyNDYxLDAsMSwwLjQ0NzI2NTYsMSwxICAgIFMyMS43MzE5MzM2LDIzLjA5Mzc1LDIxLjE3OTY4NzUsMjMuMDkzNzV6Ij48L3BhdGg+PC9nPjwvZz48L3N2Zz4=",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Size"},{property:"og:description",content:"Get a filesize from internal storage. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/core/tasks/storages/io.kestra.core.tasks.storages.Size.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Size"},{name:"twitter:description",content:"Get a filesize from internal storage. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/core/tasks/storages/io.kestra.core.tasks.storages.Size.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/core/tasks/storages/io.kestra.core.tasks.storages.Size.html",relativePath:"plugins/core/tasks/storages/io.kestra.core.tasks.storages.Size.md",key:"v-ae992146",path:"/plugins/core/tasks/storages/io.kestra.core.tasks.storages.Size.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:95},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:198},{level:3,title:"uri",slug:"uri",normalizedTitle:"uri",charIndex:159},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:313},{level:3,title:"size",slug:"size",normalizedTitle:"size",charIndex:63}],headersStr:"Examples Properties uri Outputs size",content:'Size\n\ntype: "io.kestra.core.tasks.storages.Size"\n\n\n> Get a filesize from internal storage.\n\n\n# Examples\n\nid: "size"\ntype: "io.kestra.core.tasks.storages.Size"\nuri: "kestra://long/url/file.txt"\n\n\n\n# Properties\n\n\n# uri\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> the file\n\nMust be a kestra:// storage url\n\n\n# Outputs\n\n\n# size\n\n * Type: integer\n\n> The size of the file',normalizedContent:'size\n\ntype: "io.kestra.core.tasks.storages.size"\n\n\n> get a filesize from internal storage.\n\n\n# examples\n\nid: "size"\ntype: "io.kestra.core.tasks.storages.size"\nuri: "kestra://long/url/file.txt"\n\n\n\n# properties\n\n\n# uri\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the file\n\nmust be a kestra:// storage url\n\n\n# outputs\n\n\n# size\n\n * type: integer\n\n> the size of the file',charsets:{}},{title:"Split",frontmatter:{title:"Split",editLink:!1,description:"Split files from internal storage on multiple files.",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Split"},{property:"og:description",content:"Split files from internal storage on multiple files. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/core/tasks/storages/io.kestra.core.tasks.storages.Split.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Split"},{name:"twitter:description",content:"Split files from internal storage on multiple files. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/core/tasks/storages/io.kestra.core.tasks.storages.Split.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/core/tasks/storages/io.kestra.core.tasks.storages.Split.html",relativePath:"plugins/core/tasks/storages/io.kestra.core.tasks.storages.Split.md",key:"v-3888f63a",path:"/plugins/core/tasks/storages/io.kestra.core.tasks.storages.Split.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:112},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:556},{level:3,title:"bytes",slug:"bytes",normalizedTitle:"bytes",charIndex:242},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:67},{level:3,title:"partitions",slug:"partitions",normalizedTitle:"partitions",charIndex:432},{level:3,title:"rows",slug:"rows",normalizedTitle:"rows",charIndex:272},{level:3,title:"separator",slug:"separator",normalizedTitle:"separator",charIndex:1089},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1199},{level:3,title:"uris",slug:"uris",normalizedTitle:"uris",charIndex:1211}],headersStr:"Examples Properties bytes from partitions rows separator Outputs uris",content:'Split\n\ntype: "io.kestra.core.tasks.storages.Split"\n\n\n> Split files from internal storage on multiple files.\n\n\n# Examples\n\n> Split file by file size.\n\nid: "split"\ntype: "io.kestra.core.tasks.storages.Split"\nfrom: "kestra://long/url/file1.txt"\nbytes: 10MB\n\n\n> Split file by rows count.\n\nid: "split"\ntype: "io.kestra.core.tasks.storages.Split"\nfrom: "kestra://long/url/file1.txt"\nrows: 1000\n\n\n> Partition a file in a defined number of partitions.\n\nid: "split"\ntype: "io.kestra.core.tasks.storages.Split"\nfrom: "kestra://long/url/file1.txt"\npartitions: 8\n\n\n\n# Properties\n\n\n# bytes\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Split by file size.\n\nCan be provided as a string like "10MB" or "200KB", or the number of bytes. Since we divide storage per line, it\'s not an hard requirements and files can be a larger.\n\n\n# from\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The file to be splitted.\n\n\n# partitions\n\n * Type: integer\n * Dynamic: ✔️\n * Required: ❌\n\n> Split by a fixed number of files.\n\n\n# rows\n\n * Type: integer\n * Dynamic: ✔️\n * Required: ❌\n\n> Split by file rows count.\n\n\n# separator\n\n * Type: string\n * Dynamic: ❌\n * Required: ❌\n * Default:\n\n> The separator to used between rows\n\n\n# Outputs\n\n\n# uris\n\n * Type: array\n * SubType: string\n\n> The splitted file uris',normalizedContent:'split\n\ntype: "io.kestra.core.tasks.storages.split"\n\n\n> split files from internal storage on multiple files.\n\n\n# examples\n\n> split file by file size.\n\nid: "split"\ntype: "io.kestra.core.tasks.storages.split"\nfrom: "kestra://long/url/file1.txt"\nbytes: 10mb\n\n\n> split file by rows count.\n\nid: "split"\ntype: "io.kestra.core.tasks.storages.split"\nfrom: "kestra://long/url/file1.txt"\nrows: 1000\n\n\n> partition a file in a defined number of partitions.\n\nid: "split"\ntype: "io.kestra.core.tasks.storages.split"\nfrom: "kestra://long/url/file1.txt"\npartitions: 8\n\n\n\n# properties\n\n\n# bytes\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> split by file size.\n\ncan be provided as a string like "10mb" or "200kb", or the number of bytes. since we divide storage per line, it\'s not an hard requirements and files can be a larger.\n\n\n# from\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the file to be splitted.\n\n\n# partitions\n\n * type: integer\n * dynamic: ✔️\n * required: ❌\n\n> split by a fixed number of files.\n\n\n# rows\n\n * type: integer\n * dynamic: ✔️\n * required: ❌\n\n> split by file rows count.\n\n\n# separator\n\n * type: string\n * dynamic: ❌\n * required: ❌\n * default:\n\n> the separator to used between rows\n\n\n# outputs\n\n\n# uris\n\n * type: array\n * subtype: string\n\n> the splitted file uris',charsets:{}},{title:"Flow",frontmatter:{title:"Flow",editLink:!1,description:"Kestra is able to trigger flow after another one. This allows chaining flow without need to update the base flows.\nWith that, you can break responsibility between different flow to different teams.",icon:"PHN2ZyBoZWlnaHQ9JzMwMHB4JyB3aWR0aD0nMzAwcHgnICBmaWxsPSIjMEQxNTIzIiB4bWxuczp4PSJodHRwOi8vbnMuYWRvYmUuY29tL0V4dGVuc2liaWxpdHkvMS4wLyIgeG1sbnM6aT0iaHR0cDovL25zLmFkb2JlLmNvbS9BZG9iZUlsbHVzdHJhdG9yLzEwLjAvIiB4bWxuczpncmFwaD0iaHR0cDovL25zLmFkb2JlLmNvbS9HcmFwaHMvMS4wLyIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIgdmVyc2lvbj0iMS4xIiB4PSIwcHgiIHk9IjBweCIgdmlld0JveD0iMCAwIDEwMCAxMDAiIHN0eWxlPSJlbmFibGUtYmFja2dyb3VuZDpuZXcgMCAwIDEwMCAxMDA7IiB4bWw6c3BhY2U9InByZXNlcnZlIj48c3dpdGNoPjxmb3JlaWduT2JqZWN0IHJlcXVpcmVkRXh0ZW5zaW9ucz0iaHR0cDovL25zLmFkb2JlLmNvbS9BZG9iZUlsbHVzdHJhdG9yLzEwLjAvIiB4PSIwIiB5PSIwIiB3aWR0aD0iMSIgaGVpZ2h0PSIxIj48L2ZvcmVpZ25PYmplY3Q+PGcgaTpleHRyYW5lb3VzPSJzZWxmIj48Zz48Y2lyY2xlIGN4PSI1MCIgY3k9IjUwIiByPSIxMS43Ij48L2NpcmNsZT48cGF0aCBkPSJNNDguMywzMC45YzAuNSwwLjUsMS4xLDAuNywxLjcsMC43YzAuNiwwLDEuMi0wLjIsMS43LTAuN2w3LjItNy4yYzAuOS0wLjksMC45LTIuNSwwLTMuNHMtMi41LTAuOS0zLjQsMGwtMywzVjQuOSAgICAgYzAtMS4zLTEuMS0yLjQtMi40LTIuNGMtMS4zLDAtMi40LDEuMS0yLjQsMi40djE4LjRsLTMtM2MtMC45LTAuOS0yLjUtMC45LTMuNCwwcy0wLjksMi41LDAsMy40TDQ4LjMsMzAuOXoiPjwvcGF0aD48cGF0aCBkPSJNMjAuMyw1NS41Yy0wLjksMC45LTAuOSwyLjUsMCwzLjRjMC41LDAuNSwxLjEsMC43LDEuNywwLjdjMC42LDAsMS4yLTAuMiwxLjctMC43bDcuMi03LjJjMC41LTAuNSwwLjctMS4xLDAuNy0xLjcgICAgIHMtMC4zLTEuMy0wLjctMS43bC03LjItNy4yYy0wLjktMC45LTIuNS0wLjktMy40LDBjLTAuOSwwLjktMC45LDIuNSwwLDMuNGwzLDNINC45Yy0xLjMsMC0yLjQsMS4xLTIuNCwyLjRzMS4xLDIuNCwyLjQsMi40aDE4LjQgICAgIEwyMC4zLDU1LjV6Ij48L3BhdGg+PHBhdGggZD0iTTUxLjcsNjkuMWMtMC45LTAuOS0yLjUtMC45LTMuNCwwbC03LjIsNy4yYy0wLjksMC45LTAuOSwyLjUsMCwzLjRjMC41LDAuNSwxLjEsMC43LDEuNywwLjdzMS4yLTAuMiwxLjctMC43bDMtM3YxOC40ICAgICBjMCwxLjMsMS4xLDIuNCwyLjQsMi40YzEuMywwLDIuNC0xLjEsMi40LTIuNFY3Ni43bDMsM2MwLjksMC45LDIuNSwwLjksMy40LDBjMC45LTAuOSwwLjktMi41LDAtMy40TDUxLjcsNjkuMXoiPjwvcGF0aD48cGF0aCBkPSJNOTUuMSw0Ny42SDc2LjdsMy0zYzAuOS0wLjksMC45LTIuNSwwLTMuNGMtMC45LTAuOS0yLjUtMC45LTMuNCwwbC03LjIsNy4yYy0wLjUsMC41LTAuNywxLjEtMC43LDEuN3MwLjMsMS4zLDAuNywxLjcgICAgIGw3LjIsNy4yYzAuNSwwLjUsMS4xLDAuNywxLjcsMC43czEuMi0wLjIsMS43LTAuN2MwLjktMC45LDAuOS0yLjUsMC0zLjRsLTMtM2gxOC40YzEuMywwLDIuNC0xLjEsMi40LTIuNFM5Ni40LDQ3LjYsOTUuMSw0Ny42eiI+PC9wYXRoPjxwYXRoIGQ9Ik02NC43LDM3LjdjMC42LDAsMS4yLTAuMiwxLjctMC43bDEzLTEzdjQuM2MwLDEuMywxLjEsMi40LDIuNCwyLjRjMS4zLDAsMi40LTEuMSwyLjQtMi40VjE4LjFjMC0xLjMtMS4xLTIuNC0yLjQtMi40ICAgICBINzEuN2MtMS4zLDAtMi40LDEuMS0yLjQsMi40YzAsMS4zLDEuMSwyLjQsMi40LDIuNEg3NmwtMTMsMTNjLTAuOSwwLjktMC45LDIuNSwwLDMuNEM2My41LDM3LjUsNjQuMSwzNy43LDY0LjcsMzcuN3oiPjwvcGF0aD48cGF0aCBkPSJNMjQsMjAuNmg0LjNjMS4zLDAsMi40LTEuMSwyLjQtMi40YzAtMS4zLTEuMS0yLjQtMi40LTIuNEgxOC4xYy0xLjMsMC0yLjQsMS4xLTIuNCwyLjR2MTAuMmMwLDEuMywxLjEsMi40LDIuNCwyLjQgICAgIGMxLjMsMCwyLjQtMS4xLDIuNC0yLjRWMjRsMTMsMTNjMC41LDAuNSwxLjEsMC43LDEuNywwLjdzMS4yLTAuMiwxLjctMC43YzAuOS0wLjksMC45LTIuNSwwLTMuNEwyNCwyMC42eiI+PC9wYXRoPjxwYXRoIGQ9Ik0zMy42LDYzbC0xMywxM3YtNC4zYzAtMS4zLTEuMS0yLjQtMi40LTIuNGMtMS4zLDAtMi40LDEuMS0yLjQsMi40djEwLjJjMCwxLjMsMS4xLDIuNCwyLjQsMi40aDEwLjIgICAgIGMxLjMsMCwyLjQtMS4xLDIuNC0yLjRzLTEuMS0yLjQtMi40LTIuNEgyNGwxMy0xM2MwLjktMC45LDAuOS0yLjUsMC0zLjRTMzQuNSw2Mi4xLDMzLjYsNjN6Ij48L3BhdGg+PHBhdGggZD0iTTgxLjksNjkuM2MtMS4zLDAtMi40LDEuMS0yLjQsMi40Vjc2bC0xMy0xM2MtMC45LTAuOS0yLjUtMC45LTMuNCwwYy0wLjksMC45LTAuOSwyLjUsMCwzLjRsMTMsMTNoLTQuMyAgICAgYy0xLjMsMC0yLjQsMS4xLTIuNCwyLjRzMS4xLDIuNCwyLjQsMi40aDEwLjJjMS4zLDAsMi40LTEuMSwyLjQtMi40VjcxLjdDODQuMyw3MC40LDgzLjIsNjkuMyw4MS45LDY5LjN6Ij48L3BhdGg+PC9nPjwvZz48L3N3aXRjaD48L3N2Zz4=",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Flow"},{property:"og:description",content:"Kestra is able to trigger flow after another one. This allows chaining flow without need to update the base flows.\nWith that, you can break responsibility between different flow to different teams. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/core/triggers/io.kestra.core.models.triggers.types.Flow.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Flow"},{name:"twitter:description",content:"Kestra is able to trigger flow after another one. This allows chaining flow without need to update the base flows.\nWith that, you can break responsibility between different flow to different teams. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/core/triggers/io.kestra.core.models.triggers.types.Flow.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/core/triggers/io.kestra.core.models.triggers.types.Flow.html",relativePath:"plugins/core/triggers/io.kestra.core.models.triggers.types.Flow.md",key:"v-719322e3",path:"/plugins/core/triggers/io.kestra.core.models.triggers.types.Flow.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:390},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:1253},{level:3,title:"inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:676},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1663},{level:3,title:"executionId",slug:"executionid",normalizedTitle:"executionid",charIndex:825},{level:3,title:"flowId",slug:"flowid",normalizedTitle:"flowid",charIndex:1117},{level:3,title:"flowRevision",slug:"flowrevision",normalizedTitle:"flowrevision",charIndex:1836},{level:3,title:"namespace",slug:"namespace",normalizedTitle:"namespace",charIndex:636},{level:3,title:"state",slug:"state",normalizedTitle:"state",charIndex:2012}],headersStr:"Examples Properties inputs Outputs executionId flowId flowRevision namespace state",content:'Flow\n\ntype: "io.kestra.core.models.triggers.types.Flow"\n\n\n> Kestra is able to trigger flow after another one. This allows chaining flow without need to update the base flows.\n> With that, you can break responsibility between different flow to different teams.\n\nWARNING\n\nIf you don\'t provide any conditions, the flow will be triggered for EVERY execution of EVERY flow on your instance.\n\n\n# Examples\n\n> This flow will be triggered after each successfully execution of flow io.kestra.tests.trigger-flow and forward the uri of my-task taskId outputs.\n\nid: "flow"\ntype: "io.kestra.core.models.triggers.types.Flow"\nid: trigger-flow-listener\nnamespace: io.kestra.tests\nrevision: 1\n\ninputs:\n  - name: from-parent\n    type: STRING\n\ntasks:\n  - id: only-no-input\n    type: io.kestra.core.tasks.debugs.Return\n    format: "v1: {{trigger.executionId}}"\n\ntriggers:\n  - id: listen-flow\n    type: io.kestra.core.models.triggers.types.Flow\n    inputs:\n      from-parent: \'{{ outputs.my-task.uri }}\'\n    conditions:\n      - type: io.kestra.core.models.conditions.types.ExecutionFlowCondition\n        namespace: io.kestra.tests\n        flowId: trigger-flow\n      - type: io.kestra.core.models.conditions.types.ExecutionStatusCondition\n        in:\n          - SUCCESS\n\n\n\n# Properties\n\n\n# inputs\n\n * Type: object\n * Dynamic: ❓\n * Required: ❌\n\n> Fill input of this flow based on output of current flow, allowing to pass data or file on the triggered flow\n\nWARNING\n\nIf you provide invalid input, the flow will not be created! Since there is no task started, you can\'t log any reason visible on the execution ui.\nSo you will need to go to Logs tabs on the ui to understand the error\n\n\n# Outputs\n\n\n# executionId\n\n * Type: string\n\n> The execution id that trigger the current flow\n\n\n# flowId\n\n * Type: string\n\n> The execution id that trigger the current flow\n\n\n# flowRevision\n\n * Type: integer\n\n> The flow revision that trigger the current flow\n\n\n# namespace\n\n * Type: string\n\n> The namespace of the flow that trigger the current flow\n\n\n# state\n\n * Type: string\n\n * Possible Values:\n   \n   * CREATED\n   * RUNNING\n   * PAUSED\n   * RESTARTED\n   * KILLING\n   * SUCCESS\n   * WARNING\n   * FAILED\n   * KILLED\n\n> The execution state',normalizedContent:'flow\n\ntype: "io.kestra.core.models.triggers.types.flow"\n\n\n> kestra is able to trigger flow after another one. this allows chaining flow without need to update the base flows.\n> with that, you can break responsibility between different flow to different teams.\n\nwarning\n\nif you don\'t provide any conditions, the flow will be triggered for every execution of every flow on your instance.\n\n\n# examples\n\n> this flow will be triggered after each successfully execution of flow io.kestra.tests.trigger-flow and forward the uri of my-task taskid outputs.\n\nid: "flow"\ntype: "io.kestra.core.models.triggers.types.flow"\nid: trigger-flow-listener\nnamespace: io.kestra.tests\nrevision: 1\n\ninputs:\n  - name: from-parent\n    type: string\n\ntasks:\n  - id: only-no-input\n    type: io.kestra.core.tasks.debugs.return\n    format: "v1: {{trigger.executionid}}"\n\ntriggers:\n  - id: listen-flow\n    type: io.kestra.core.models.triggers.types.flow\n    inputs:\n      from-parent: \'{{ outputs.my-task.uri }}\'\n    conditions:\n      - type: io.kestra.core.models.conditions.types.executionflowcondition\n        namespace: io.kestra.tests\n        flowid: trigger-flow\n      - type: io.kestra.core.models.conditions.types.executionstatuscondition\n        in:\n          - success\n\n\n\n# properties\n\n\n# inputs\n\n * type: object\n * dynamic: ❓\n * required: ❌\n\n> fill input of this flow based on output of current flow, allowing to pass data or file on the triggered flow\n\nwarning\n\nif you provide invalid input, the flow will not be created! since there is no task started, you can\'t log any reason visible on the execution ui.\nso you will need to go to logs tabs on the ui to understand the error\n\n\n# outputs\n\n\n# executionid\n\n * type: string\n\n> the execution id that trigger the current flow\n\n\n# flowid\n\n * type: string\n\n> the execution id that trigger the current flow\n\n\n# flowrevision\n\n * type: integer\n\n> the flow revision that trigger the current flow\n\n\n# namespace\n\n * type: string\n\n> the namespace of the flow that trigger the current flow\n\n\n# state\n\n * type: string\n\n * possible values:\n   \n   * created\n   * running\n   * paused\n   * restarted\n   * killing\n   * success\n   * warning\n   * failed\n   * killed\n\n> the execution state',charsets:{}},{title:"Schedule",frontmatter:{title:"Schedule",editLink:!1,description:"Schedule a flow based on cron date",icon:"PHN2ZyBoZWlnaHQ9JzMwMHB4JyB3aWR0aD0nMzAwcHgnICBmaWxsPSIjMEQxNTIzIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGRhdGEtbmFtZT0iTGF5ZXIgMSIgdmlld0JveD0iMCAwIDEwMCAxMDAiIHg9IjBweCIgeT0iMHB4Ij48dGl0bGU+Q2FsZW5kYXI8L3RpdGxlPjxyZWN0IHg9IjMxLjc1IiB5PSI2OC43OCIgd2lkdGg9IjEwIiBoZWlnaHQ9IjYiIHJ4PSIxLjciIHJ5PSIxLjciPjwvcmVjdD48cmVjdCB4PSIzMS43NSIgeT0iNTcuNDMiIHdpZHRoPSIxMCIgaGVpZ2h0PSI2IiByeD0iMS43IiByeT0iMS43Ij48L3JlY3Q+PHJlY3QgeD0iMTUuNjIiIHk9IjY4Ljc4IiB3aWR0aD0iMTAiIGhlaWdodD0iNiIgcng9IjEuNyIgcnk9IjEuNyI+PC9yZWN0PjxyZWN0IHg9IjE1LjYyIiB5PSI1Ny40MyIgd2lkdGg9IjEwIiBoZWlnaHQ9IjYiIHJ4PSIxLjciIHJ5PSIxLjciPjwvcmVjdD48cmVjdCB4PSIzMS43NSIgeT0iNDYuMDgiIHdpZHRoPSIxMCIgaGVpZ2h0PSI2IiByeD0iMS43IiByeT0iMS43Ij48L3JlY3Q+PHJlY3QgeD0iNDcuODciIHk9IjQ2LjA4IiB3aWR0aD0iMTAiIGhlaWdodD0iNiIgcng9IjEuNyIgcnk9IjEuNyI+PC9yZWN0PjxwYXRoIGQ9Ik03My4yNSw5NUEyMS43NSwyMS43NSwwLDEsMSw5NSw3My4yNSwyMS43OCwyMS43OCwwLDAsMSw3My4yNSw5NVptMC0zOUExNy4yNSwxNy4yNSwwLDEsMCw5MC41LDczLjI1LDE3LjI3LDE3LjI3LDAsMCwwLDczLjI1LDU2WiI+PC9wYXRoPjxwYXRoIGQ9Ik04NC42OSw3NS41SDczLjI1QTIuMjUsMi4yNSwwLDAsMSw3MSw3My4yNVY2NC4wNmEyLjI1LDIuMjUsMCwwLDEsNC41LDBWNzFoOS4xOWEyLjI1LDIuMjUsMCwwLDEsMCw0LjVaIj48L3BhdGg+PHBhdGggZD0iTTYzLjI2LDI2YTUsNSwwLDAsMS01LTVWMTBhNSw1LDAsMCwxLDEwLDBWMjFBNSw1LDAsMCwxLDYzLjI2LDI2WiI+PC9wYXRoPjxwYXRoIGQ9Ik03Ny4zNywxMy4xNkg3Mi43NlYyMWE5LjUsOS41LDAsMCwxLTE5LDBWMTMuMTZIMzUuODZWMjFhOS41LDkuNSwwLDEsMS0xOSwwVjEzLjE2SDEyLjI1QTcuMjYsNy4yNiwwLDAsMCw1LDIwLjQxdjU3YTcuMjYsNy4yNiwwLDAsMCw3LjI1LDcuMjVINDkuNmEyNi42NiwyNi42NiwwLDAsMS0xLjY4LTQuNUgxMi4yNUEyLjc1LDIuNzUsMCwwLDEsOS41LDc3LjM4VjQwLjc0SDgwLjEydjcuMThhMjUuNzksMjUuNzksMCwwLDEsNC41LDEuNjdWMjAuNDFBNy4yNiw3LjI2LDAsMCwwLDc3LjM3LDEzLjE2WiI+PC9wYXRoPjxwYXRoIGQ9Ik0yNi4zNiwyNmE1LDUsMCwwLDEtNS01VjEwYTUsNSwwLDAsMSwxMCwwVjIxQTUsNSwwLDAsMSwyNi4zNiwyNloiPjwvcGF0aD48L3N2Zz4=",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Schedule"},{property:"og:description",content:"Schedule a flow based on cron date | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/core/triggers/io.kestra.core.models.triggers.types.Schedule.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Schedule"},{name:"twitter:description",content:"Schedule a flow based on cron date | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/core/triggers/io.kestra.core.models.triggers.types.Schedule.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/core/triggers/io.kestra.core.models.triggers.types.Schedule.html",relativePath:"plugins/core/triggers/io.kestra.core.models.triggers.types.Schedule.md",key:"v-19cb5103",path:"/plugins/core/triggers/io.kestra.core.models.triggers.types.Schedule.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:661},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:1252},{level:3,title:"backfill",slug:"backfill",normalizedTitle:"backfill",charIndex:477},{level:3,title:"cron",slug:"cron",normalizedTitle:"cron",charIndex:93},{level:3,title:"inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:1898},{level:3,title:"interval",slug:"interval",normalizedTitle:"interval",charIndex:1999},{level:3,title:"lateMaximumDelay",slug:"latemaximumdelay",normalizedTitle:"latemaximumdelay",charIndex:2407},{level:3,title:"scheduleConditions",slug:"scheduleconditions",normalizedTitle:"scheduleconditions",charIndex:1117},{level:3,title:"timezone",slug:"timezone",normalizedTitle:"timezone",charIndex:2769},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:2939},{level:3,title:"date",slug:"date",normalizedTitle:"date",charIndex:98},{level:3,title:"next",slug:"next",normalizedTitle:"next",charIndex:3009},{level:3,title:"previous",slug:"previous",normalizedTitle:"previous",charIndex:1377},{level:2,title:"Definitions",slug:"definitions",normalizedTitle:"definitions",charIndex:3127},{level:3,title:"ScheduleBackfill",slug:"schedulebackfill",normalizedTitle:"schedulebackfill",charIndex:1286}],headersStr:"Examples Properties backfill cron inputs interval lateMaximumDelay scheduleConditions timezone Outputs date next previous Definitions ScheduleBackfill",content:'Schedule\n\ntype: "io.kestra.core.models.triggers.types.Schedule"\n\n\n> Schedule a flow based on cron date\n\nKestra is able to trigger flow based on Schedule (aka the time). If you need to wait another system to be ready and can\'t use any event mechanism, you can schedule 1 or more time for the current flow.\n\nThe scheduler will keep the last execution date for this schedule based on the id. This allow you to change the cron expression without restart all the past execution (if backfill exists)\nIf you changed the current id, the scheduler will think it\'s a new schedule and will start with a fresh date and replay the all backfill date (if backfill exists)\n\n\n# Examples\n\n> A schedule with a backfill\n\ntriggers:\n  - id: schedule\n    type: io.kestra.core.models.triggers.types.Schedule\n    cron: "*/15 * * * *"\n    backfill:\n      start: 2020-06-25T14:00:00Z\n\n\n> A schedule with a nickname\n\ntriggers:\n  - id: schedule\n    type: io.kestra.core.models.triggers.types.Schedule\n    cron: "@hourly"\n\n\n> A schedule that run only the first monday on every month at 11 AM\n\ntriggers:\n  - id: schedule\n    cron: "0 11 * * 1"\n    scheduleConditions:\n      - id: monday\n        date: "{{ trigger.date }}"\n        dayOfWeek: "MONDAY"\n        dayInMonth: "FIRST"\n\n\n\n# Properties\n\n\n# backfill\n\n * Type: ScheduleBackfill\n * Dynamic: ❓\n * Required: ❌\n\n> Backfill options in order to fill missing previous past date\n\nKestra will handle optionally a backfill. The concept of backfill is the replay the missing schedule because we create the flow later.\n\nBackfill will do all schedules between define date & current date and will start after the normal schedule.\n\n\n# cron\n\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n\n> the cron expression\n\na standard unix cron expression without second.\nCan also be a cron extensions / nicknames:\n\n * @yearly\n * @annually\n * @monthly\n * @weekly\n * @daily\n * @midnight\n * @hourly\n\n\n# inputs\n\n * Type: object\n * Dynamic: ✔️\n * Required: ❌\n\n> The input to pass to the triggered flow\n\n\n# interval\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Default: PT1S\n * Format: duration\n\n> Interval between polling\n\nThe interval between 2 different test of schedule, this can avoid to overload the remote system with too many call. For most of trigger that depend on external system, a minimal interval must be at least PT30S.\nSee ISO_8601 Durations for more information of available interval value\n\n\n# lateMaximumDelay\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Format: duration\n\n> The maximum late delay accepted\n\nIf the schedule didn\'t start after this delay, the execution will be skip.\n\n\n# scheduleConditions\n\n * Type: array\n * SubType: ScheduleCondition-2\n * Dynamic: ❓\n * Required: ❌\n\n> List of schedule Conditions in order to limit schedule date.\n\n\n# timezone\n\n * Type: string\n * Dynamic: ❌\n * Required: ❌\n * Default: Etc/UTC\n\n> The time zone id to use for evaluate cron. Default value is the server default zone id.\n\n\n# Outputs\n\n\n# date\n\n * Type: string\n\n> The date of current schedule\n\n\n# next\n\n * Type: string\n\n> The date of next schedule\n\n\n# previous\n\n * Type: string\n\n> The date of previous schedule\n\n\n# Definitions\n\n\n# ScheduleBackfill\n\n# start\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The first start date',normalizedContent:'schedule\n\ntype: "io.kestra.core.models.triggers.types.schedule"\n\n\n> schedule a flow based on cron date\n\nkestra is able to trigger flow based on schedule (aka the time). if you need to wait another system to be ready and can\'t use any event mechanism, you can schedule 1 or more time for the current flow.\n\nthe scheduler will keep the last execution date for this schedule based on the id. this allow you to change the cron expression without restart all the past execution (if backfill exists)\nif you changed the current id, the scheduler will think it\'s a new schedule and will start with a fresh date and replay the all backfill date (if backfill exists)\n\n\n# examples\n\n> a schedule with a backfill\n\ntriggers:\n  - id: schedule\n    type: io.kestra.core.models.triggers.types.schedule\n    cron: "*/15 * * * *"\n    backfill:\n      start: 2020-06-25t14:00:00z\n\n\n> a schedule with a nickname\n\ntriggers:\n  - id: schedule\n    type: io.kestra.core.models.triggers.types.schedule\n    cron: "@hourly"\n\n\n> a schedule that run only the first monday on every month at 11 am\n\ntriggers:\n  - id: schedule\n    cron: "0 11 * * 1"\n    scheduleconditions:\n      - id: monday\n        date: "{{ trigger.date }}"\n        dayofweek: "monday"\n        dayinmonth: "first"\n\n\n\n# properties\n\n\n# backfill\n\n * type: schedulebackfill\n * dynamic: ❓\n * required: ❌\n\n> backfill options in order to fill missing previous past date\n\nkestra will handle optionally a backfill. the concept of backfill is the replay the missing schedule because we create the flow later.\n\nbackfill will do all schedules between define date & current date and will start after the normal schedule.\n\n\n# cron\n\n * type: string\n * dynamic: ❓\n * required: ✔️\n\n> the cron expression\n\na standard unix cron expression without second.\ncan also be a cron extensions / nicknames:\n\n * @yearly\n * @annually\n * @monthly\n * @weekly\n * @daily\n * @midnight\n * @hourly\n\n\n# inputs\n\n * type: object\n * dynamic: ✔️\n * required: ❌\n\n> the input to pass to the triggered flow\n\n\n# interval\n\n * type: string\n * dynamic: ❓\n * required: ❌\n * default: pt1s\n * format: duration\n\n> interval between polling\n\nthe interval between 2 different test of schedule, this can avoid to overload the remote system with too many call. for most of trigger that depend on external system, a minimal interval must be at least pt30s.\nsee iso_8601 durations for more information of available interval value\n\n\n# latemaximumdelay\n\n * type: string\n * dynamic: ❓\n * required: ❌\n * format: duration\n\n> the maximum late delay accepted\n\nif the schedule didn\'t start after this delay, the execution will be skip.\n\n\n# scheduleconditions\n\n * type: array\n * subtype: schedulecondition-2\n * dynamic: ❓\n * required: ❌\n\n> list of schedule conditions in order to limit schedule date.\n\n\n# timezone\n\n * type: string\n * dynamic: ❌\n * required: ❌\n * default: etc/utc\n\n> the time zone id to use for evaluate cron. default value is the server default zone id.\n\n\n# outputs\n\n\n# date\n\n * type: string\n\n> the date of current schedule\n\n\n# next\n\n * type: string\n\n> the date of next schedule\n\n\n# previous\n\n * type: string\n\n> the date of previous schedule\n\n\n# definitions\n\n\n# schedulebackfill\n\n# start\n\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the first start date',charsets:{}},{title:"Webhook",frontmatter:{title:"Webhook",editLink:!1,description:"Trigger a flow from a webhook",icon:"PHN2ZyBoZWlnaHQ9JzMwMHB4JyB3aWR0aD0nMzAwcHgnICBmaWxsPSIjMEQxNTIzIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB4bWxuczpza2V0Y2g9Imh0dHA6Ly93d3cuYm9oZW1pYW5jb2RpbmcuY29tL3NrZXRjaC9ucyIgdmlld0JveD0iMCAwIDEwMCAxMDAiIHZlcnNpb249IjEuMSIgeD0iMHB4IiB5PSIwcHgiPjx0aXRsZT5XZWJob29rczwvdGl0bGU+PGRlc2M+Q3JlYXRlZCB3aXRoIFNrZXRjaC48L2Rlc2M+PGcgc3Ryb2tlPSJub25lIiBzdHJva2Utd2lkdGg9IjEiIGZpbGw9Im5vbmUiIGZpbGwtcnVsZT0iZXZlbm9kZCIgc2tldGNoOnR5cGU9Ik1TUGFnZSI+PGcgc2tldGNoOnR5cGU9Ik1TQXJ0Ym9hcmRHcm91cCIgZmlsbD0iIzBEMTUyMyI+PHBhdGggZD0iTTc2LjQ5NTExODEsNzMuOTE0NTM2MSBMMjkuNzQxNjA0Niw3My45MTQ1MzYxIEwyOS43NDE2MDQ2LDc4LjkyMTYyOTIgQzI4LjgzMzM3NDgsODQuMDU0MzI4NyAyNC4zMzE4ODQsODcuOTUzODIwOSAxOC45MTU0OTMsODcuOTUzODIwOSBDMTIuODQ0MTAxMSw4Ny45NTM4MjA5IDcuOTIyMjY1NTksODMuMDU0MTc2NiA3LjkyMjI2NTU5LDc3LjAxMDE1ODkgQzcuOTIyMjY1NTksNzMuMjgwNTg5MiA5Ljc5NjM2NzEsNjkuOTg2NzY1OCAxMi42NTgyMjUsNjguMDExMDM3NiBMOS41MDU4MjU1NSw2My41Mjc5MTQ1IEw5LjUwNTgyNTU1LDYzLjUyNzkxNDUgQzUuMjI2NDMxODQsNjYuNDkzMzE4MiAyLjQyNTY1MTksNzEuNDI2MTM0NyAyLjQyNTY1MTksNzcuMDEwMTU4OSBDMi40MjU2NTE5LDg2LjA3NjE4NTQgOS44MDg0MDUyMSw5My40MjU2NTE5IDE4LjkxNTQ5Myw5My40MjU2NTE5IEMyNy4wODI2ODY3LDkzLjQyNTY1MTkgMzMuODYzMDk4Niw4Ny41MTQ5MDMyIDM1LjE3NTY0ODQsNzkuNzU2MDg1NCBMMzUuMTc1NjQ4NCw3OS43NTYwODU0IEw3Ni4yNzI3MzU5LDc5Ljc1NjA4NTQgQzc3LjIyNDU0OTMsODEuMzg2MDk3MSA3OC45OTc3OTk4LDgyLjQ4MTk4OTkgODEuMDI4MTY5LDgyLjQ4MTk4OTkgQzg0LjA2Mzg2NDksODIuNDgxOTg5OSA4Ni41MjQ3ODI3LDgwLjAzMjE2NzcgODYuNTI0NzgyNyw3Ny4wMTAxNTg5IEM4Ni41MjQ3ODI3LDczLjk4ODE1MDEgODQuMDYzODY0OSw3MS41MzgzMjggODEuMDI4MTY5LDcxLjUzODMyOCBDNzkuMTQ2NjY0LDcxLjUzODMyOCA3Ny40ODU5NTY2LDcyLjQ3OTQxMjggNzYuNDk1MTE4MSw3My45MTQ1MzYxIFoiIHNrZXRjaDp0eXBlPSJNU1NoYXBlR3JvdXAiPjwvcGF0aD48cGF0aCBkPSJNMTMuOTk3MDQzNSw3NC43MzMxNjE2IEMxNC4wOTIwMTA4LDc0LjQ5ODM3MTYgMTQuMjA0NDAzNyw3NC4yNjczNTA5IDE0LjMzNDY2MDgsNzQuMDQxNzM5IEMxNS4zNDQ1NTk4LDcyLjI5MjU0MjYgMTcuMTcyOTQ2MSw3MS4zMTA3NTIzIDE5LjA1NTg3MSw3MS4zMDEzNDc0IEwzOS42NjgyODc5LDM1LjU5OTU5NCBMMzkuNjY4Mjg3OSwzNS41OTk1OTQgQzMzLjU5NDQ2NzgsMzAuNTg3NDU5OSAzMS44NDkwMTUxLDIxLjc3NTI5NzEgMzUuOTE5OTc4LDE0LjcyNDE4MjUgQzQwLjQ1NzQ1MTcsNi44NjUwNDc1NiA1MC41MDI1MzM1LDQuMTY5Nzk0NzMgNTguMzU2Mjk2Miw4LjcwNDE2Njc3IEM2My4xNzgxMDAzLDExLjQ4ODAzNjYgNjYuMDUyOTA1MSwxNi4zNDk3NjU3IDY2LjUwMzg4MTEsMjEuNTA3MzY0NyBMNjYuNTAzODgxMSwyMS41MDczNjQ3IEw2MS4wNDk2MzExLDIxLjk4NTU1MDEgQzYwLjc0OTY5NCwxOC41NDYyMTggNTguODMzMDA3LDE1LjMwMzkzOTIgNTUuNjE3Njg4NiwxMy40NDc1NzQzIEM1MC4zODE4NDY4LDEwLjQyNDY1OTYgNDMuNjg1MTI1NiwxMi4yMjE0OTQ4IDQwLjY2MDE0MzIsMTcuNDYwOTE4MSBDMzcuNjk3NzIyMSwyMi41OTE5ODE5IDM5LjM1NTM0MzYsMjkuMTIxODY1NSA0NC4zNDI4MzMsMzIuMjI4OTc4MyBMNDcuMzU2ODkwMiwzMy45NjkxNDUgTDI0LjAxMDc0MTYsNzQuNDA1ODYwNSBMMjQuMDEwNzQxNiw3NC40MDU4NjA1IEMyNC42NzQxNTk0LDc1Ljc5MTQ1NTUgMjQuNzQ1NzA2OSw3Ny40MzUyMzkzIDI0LjExMzMxMzIsNzguOTE4Mzg0NyBDMjMuMzQxNjg1NSw4MS4wMDcwNDAxIDIxLjMzMTYwOTgsODIuNDk2MjU2IDE4Ljk3MzQ3MTIsODIuNDk2MjU2IEMxNS45NDg0ODg4LDgyLjQ5NjI1NiAxMy40OTYyNTYsODAuMDQ1Njk5NSAxMy40OTYyNTYsNzcuMDIyNzg0OCBDMTMuNDk2MjU2LDc2LjIwNTM0NDEgMTMuNjc1NTczNCw3NS40Mjk3NTY3IDEzLjk5NzA0MzUsNzQuNzMzMTYxNiBaIiBza2V0Y2g6dHlwZT0iTVNTaGFwZUdyb3VwIj48L3BhdGg+PHBhdGggZD0iTTQ5LjY2MjkyMywyOC4zNTM3NzE0IEw3Mi43NzU0MDUsNjguMzg1NzY0NiBMNzUuNTI3ODkwNiw2Ni43OTY2MTYzIEw3NS41NzQ1NjYxLDY2Ljg3NzQ2MDYgQzc1LjU5NzI4NDcsNjYuODY0MTMxMiA3NS42MjAwNjg0LDY2Ljg1MDg3MDQgNzUuNjQyOTE3MSw2Ni44Mzc2Nzg3IEM4MC44ODIzOTgxLDYzLjgxMjY2MjkgODcuNTU3NTc4Miw2NS41NjUzNzQ5IDkwLjU1MjM0OTIsNzAuNzUyNDcwNCBDOTMuNTQ3MTIwMiw3NS45Mzk1NjYgOTEuNzI3NDIzMiw4Mi41OTY3OTc1IDg2LjQ4Nzk0MjMsODUuNjIxODEzMyBDODMuMjU3OTE2NSw4Ny40ODY2Njk1IDc5LjQ4MjI2LDg3LjUzNTc3MjUgNzYuMzU5NjI0LDg2LjA4Mzg1MzkgTDc0LjAyODIxOTcsOTEuMDIwODg1IEw3NC4wMjgyMTk3LDkxLjAyMDg4NSBDNzguNzA3OTk3Myw5My4xODg1NTQxIDg0LjM2MTU3MDIsOTMuMTEwODUyOSA4OS4xOTkxOTg1LDkwLjMxNzg0NjkgQzk3LjA1ODQyLDg1Ljc4MDMyMzMgOTkuNzg3OTY1NSw3NS43OTQ0NzYgOTUuMjk1ODA5LDY4LjAxMzgzMjcgQzkxLjIzOTg3MjQsNjAuOTg4NzQ0NCA4Mi42ODM0NDQ2LDU4LjE2MzMwMTQgNzUuMjc1MTEyNiw2MS4wMjA2NjE3IEw3NS4yNzUxMTI2LDYxLjAyMDY2MTcgTDU0Ljc2NzI5MjcsMjUuNTAwMDc1NiBDNTUuNjUwNjc1OSwyMy44ODkxOTk1IDU1LjcwMDM2OTcsMjEuODc5OTcyNyA1NC43MjE2NDk5LDIwLjE4NDc4MDIgQzUzLjIyNDI2NDQsMTcuNTkxMjMyNSA0OS44ODY2NzQzLDE2LjcxNDg3NjUgNDcuMjY2OTMzOCwxOC4yMjczODQ0IEM0NC42NDcxOTMzLDE5LjczOTg5MjIgNDMuNzM3MzQ0OCwyMy4wNjg1MDggNDUuMjM0NzMwMywyNS42NjIwNTU4IEM0Ni4xODYzOTA3LDI3LjMxMDM3OTggNDcuODgxMzQ4NywyOC4yNjUwOTM2IDQ5LjY2MjkyMywyOC4zNTM3NzE0IFoiIHNrZXRjaDp0eXBlPSJNU1NoYXBlR3JvdXAiPjwvcGF0aD48L2c+PC9nPjwvc3ZnPg==",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Webhook"},{property:"og:description",content:"Trigger a flow from a webhook | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/core/triggers/io.kestra.core.models.triggers.types.Webhook.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Webhook"},{name:"twitter:description",content:"Trigger a flow from a webhook | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/core/triggers/io.kestra.core.models.triggers.types.Webhook.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/core/triggers/io.kestra.core.models.triggers.types.Webhook.html",relativePath:"plugins/core/triggers/io.kestra.core.models.triggers.types.Webhook.md",key:"v-33989629",path:"/plugins/core/triggers/io.kestra.core.models.triggers.types.Webhook.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:442},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:893},{level:3,title:"key",slug:"key",normalizedTitle:"key",charIndex:189},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1329},{level:3,title:"body",slug:"body",normalizedTitle:"body",charIndex:336},{level:3,title:"headers",slug:"headers",normalizedTitle:"headers",charIndex:343},{level:3,title:"parameters",slug:"parameters",normalizedTitle:"parameters",charIndex:1599}],headersStr:"Examples Properties key Outputs body headers parameters",content:"Webhook\n\ntype: \"io.kestra.core.models.triggers.types.Webhook\"\n\n\n> Trigger a flow from a webhook\n\nWebbook trigger allow you to trigger a flow from a webhook url.\nThe trigger will generate a key that must be used on url : /api/v1/executions/webhook/{namespace}/[flowId]/{key}.\nKestra accept GET, POST & PUT request on this url.\nThe whole body & headers will be available as variable:\n\n * trigger.variables.body\n * trigger.variables.headers\n\n\n# Examples\n\n> Add a trigger to the current flow\n\ntriggers:\n  - id: webhook\n    type: io.kestra.core.models.triggers.types.Webhook\n\n\n> After the trigger is created, a key will be created that will be use in the webhook url, now, you can launch the flow on the url /api/v1/executions/webhook/{namespace}/[flowId]/4wjtkzwVGBM9yKnjm3yv8r\n\ntriggers:\n  - id: webhook\n    type: io.kestra.core.models.triggers.types.Webhook\n    key: 4wjtkzwVGBM9yKnjm3yv8r\n\n\n\n# Properties\n\n\n# key\n\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Default: 2BD18KMqglmFlnxRYVa2Xy\n * Min length: 16\n * Max length: 256\n\n> The unique key that will be part of the url\n\nIf you don't provide a key, a random one will be generated. Is used as key for generating the url of the webhook.\n\nWARNING\n\nTake care when using manual key, the key is the only security to protect your webhook and must be considered as a secret !\n\n\n# Outputs\n\n\n# body\n\n * Type: ====\n\n> The full body for the webhook request\n\nWe try to deserialize the incoming request as json (array or object).\nIf we can't the full body as string will be available\n\n\n# headers\n\n * Type: object\n\n> The headers for the webhook request\n\n\n# parameters\n\n * Type: object\n\n> The parameters for the webhook request",normalizedContent:"webhook\n\ntype: \"io.kestra.core.models.triggers.types.webhook\"\n\n\n> trigger a flow from a webhook\n\nwebbook trigger allow you to trigger a flow from a webhook url.\nthe trigger will generate a key that must be used on url : /api/v1/executions/webhook/{namespace}/[flowid]/{key}.\nkestra accept get, post & put request on this url.\nthe whole body & headers will be available as variable:\n\n * trigger.variables.body\n * trigger.variables.headers\n\n\n# examples\n\n> add a trigger to the current flow\n\ntriggers:\n  - id: webhook\n    type: io.kestra.core.models.triggers.types.webhook\n\n\n> after the trigger is created, a key will be created that will be use in the webhook url, now, you can launch the flow on the url /api/v1/executions/webhook/{namespace}/[flowid]/4wjtkzwvgbm9yknjm3yv8r\n\ntriggers:\n  - id: webhook\n    type: io.kestra.core.models.triggers.types.webhook\n    key: 4wjtkzwvgbm9yknjm3yv8r\n\n\n\n# properties\n\n\n# key\n\n * type: string\n * dynamic: ❓\n * required: ❌\n * default: 2bd18kmqglmflnxryva2xy\n * min length: 16\n * max length: 256\n\n> the unique key that will be part of the url\n\nif you don't provide a key, a random one will be generated. is used as key for generating the url of the webhook.\n\nwarning\n\ntake care when using manual key, the key is the only security to protect your webhook and must be considered as a secret !\n\n\n# outputs\n\n\n# body\n\n * type: ====\n\n> the full body for the webhook request\n\nwe try to deserialize the incoming request as json (array or object).\nif we can't the full body as string will be available\n\n\n# headers\n\n * type: object\n\n> the headers for the webhook request\n\n\n# parameters\n\n * type: object\n\n> the parameters for the webhook request",charsets:{}},{title:"Purge",frontmatter:{title:"Purge",editLink:!1,description:"Purge execution, logs or storage files.",meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Purge"},{property:"og:description",content:"Purge execution, logs or storage files. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/plugins/core/tasks/storages/io.kestra.core.tasks.storages.Purge.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"Purge"},{name:"twitter:description",content:"Purge execution, logs or storage files. | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/plugins/core/tasks/storages/io.kestra.core.tasks.storages.Purge.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/plugins/core/tasks/storages/io.kestra.core.tasks.storages.Purge.html",relativePath:"plugins/core/tasks/storages/io.kestra.core.tasks.storages.Purge.md",key:"v-77a02e83",path:"/plugins/core/tasks/storages/io.kestra.core.tasks.storages.Purge.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:99},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:268},{level:3,title:"endDate",slug:"enddate",normalizedTitle:"enddate",charIndex:165},{level:3,title:"flowId",slug:"flowid",normalizedTitle:"flowid",charIndex:409},{level:3,title:"namespace",slug:"namespace",normalizedTitle:"namespace",charIndex:512},{level:3,title:"purgeExecution",slug:"purgeexecution",normalizedTitle:"purgeexecution",charIndex:753},{level:3,title:"purgeLog",slug:"purgelog",normalizedTitle:"purgelog",charIndex:871},{level:3,title:"purgeStorage",slug:"purgestorage",normalizedTitle:"purgestorage",charIndex:977},{level:3,title:"states",slug:"states",normalizedTitle:"states",charIndex:212},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1219},{level:3,title:"executionsCount",slug:"executionscount",normalizedTitle:"executionscount",charIndex:1231},{level:3,title:"logsCount",slug:"logscount",normalizedTitle:"logscount",charIndex:1318},{level:3,title:"storagesCount",slug:"storagescount",normalizedTitle:"storagescount",charIndex:1393}],headersStr:"Examples Properties endDate flowId namespace purgeExecution purgeLog purgeStorage states Outputs executionsCount logsCount storagesCount",content:'Purge\n\ntype: "io.kestra.core.tasks.storages.Purge"\n\n\n> Purge execution, logs or storage files.\n\n\n# Examples\n\nid: "purge"\ntype: "io.kestra.core.tasks.storages.Purge"\nendDate: "{{ now() | dateAdd(-1, \'MONTHS\') }}"\nstates: \n - KILLED\n - FAILED\n - WARNING\n - SUCCESS\n\n\n\n# Properties\n\n\n# endDate\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The max date to purge\n\nAll date after this date will be purged.\n\n\n# flowId\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The flow id to purge\n\nYou need to provide the namespace properties if you want to purge a flow\n\n\n# namespace\n\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Namespace to purge or namespace for a flow\n\nIf flowId isn\'t provide, this is a namespace prefix, else the namespace of flow\n\n\n# purgeExecution\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n * Default: true\n\n> Purge execution from repository\n\n\n# purgeLog\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n * Default: true\n\n> Purge log from repository\n\n\n# purgeStorage\n\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n * Default: true\n\n> Purge file from internal storage\n\n\n# states\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> The state of the execution that can be purged.\n\n\n# Outputs\n\n\n# executionsCount\n\n * Type: integer\n * Default: 0\n\n> The count of executions deleted\n\n\n# logsCount\n\n * Type: integer\n * Default: 0\n\n> The count of logs deleted\n\n\n# storagesCount\n\n * Type: integer\n * Default: 0\n\n> The count of storage deleted',normalizedContent:'purge\n\ntype: "io.kestra.core.tasks.storages.purge"\n\n\n> purge execution, logs or storage files.\n\n\n# examples\n\nid: "purge"\ntype: "io.kestra.core.tasks.storages.purge"\nenddate: "{{ now() | dateadd(-1, \'months\') }}"\nstates: \n - killed\n - failed\n - warning\n - success\n\n\n\n# properties\n\n\n# enddate\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the max date to purge\n\nall date after this date will be purged.\n\n\n# flowid\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the flow id to purge\n\nyou need to provide the namespace properties if you want to purge a flow\n\n\n# namespace\n\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> namespace to purge or namespace for a flow\n\nif flowid isn\'t provide, this is a namespace prefix, else the namespace of flow\n\n\n# purgeexecution\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n * default: true\n\n> purge execution from repository\n\n\n# purgelog\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n * default: true\n\n> purge log from repository\n\n\n# purgestorage\n\n * type: boolean\n * dynamic: ❌\n * required: ❌\n * default: true\n\n> purge file from internal storage\n\n\n# states\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> the state of the execution that can be purged.\n\n\n# outputs\n\n\n# executionscount\n\n * type: integer\n * default: 0\n\n> the count of executions deleted\n\n\n# logscount\n\n * type: integer\n * default: 0\n\n> the count of logs deleted\n\n\n# storagescount\n\n * type: integer\n * default: 0\n\n> the count of storage deleted',charsets:{cjk:!0}},{title:"timestamp",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"timestamp"},{property:"og:description",content:"timestamp | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/filter/timestamp.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"timestamp"},{name:"twitter:description",content:"timestamp | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/filter/timestamp.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/filter/timestamp.html",relativePath:"docs/developer-guide/variables/filter/timestamp.md",key:"v-413ff743",path:"/docs/developer-guide/variables/filter/timestamp.html",headers:[{level:2,title:"Arguments",slug:"arguments",normalizedTitle:"arguments",charIndex:242}],lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:"Arguments",content:'# timestamp\n\nThe timestamp filter will convert a date to an unix timestamps in second. You can convert a string with existingFormat and change timeZone with same arguments from date filter.\n\n{{ date | timstamp(timeZone="Europe/Paris" }}\n\n\n\n# Arguments\n\n * existingFormat\n * timeZone',normalizedContent:'# timestamp\n\nthe timestamp filter will convert a date to an unix timestamps in second. you can convert a string with existingformat and change timezone with same arguments from date filter.\n\n{{ date | timstamp(timezone="europe/paris" }}\n\n\n\n# arguments\n\n * existingformat\n * timezone',charsets:{cjk:!0}},{title:"timestampmicro",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"timestampmicro"},{property:"og:description",content:"timestampmicro | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/filter/timestampMicro.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"timestampmicro"},{name:"twitter:description",content:"timestampmicro | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/filter/timestampMicro.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/filter/timestampMicro.html",relativePath:"docs/developer-guide/variables/filter/timestampMicro.md",key:"v-42c49689",path:"/docs/developer-guide/variables/filter/timestampMicro.html",headers:[{level:2,title:"Arguments",slug:"arguments",normalizedTitle:"arguments",charIndex:253}],lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:"Arguments",content:'# timestampmicro\n\nThe timestamp filter will convert a date to an unix timestamps in micro second. You can convert a string with existingFormat and change timeZone with same arguments from date filter.\n\n{{ date | timstamp(timeZone="Europe/Paris" }}\n\n\n\n# Arguments\n\n * existingFormat\n * timeZone',normalizedContent:'# timestampmicro\n\nthe timestamp filter will convert a date to an unix timestamps in micro second. you can convert a string with existingformat and change timezone with same arguments from date filter.\n\n{{ date | timstamp(timezone="europe/paris" }}\n\n\n\n# arguments\n\n * existingformat\n * timezone',charsets:{cjk:!0}},{title:"timestampnano",frontmatter:{meta:[{property:"article:modified_time",content:"2021-09-27T19:39:57.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"timestampnano"},{property:"og:description",content:"timestampnano | Kestra, infinitely scalable open source orchestration & scheduling platform."},{property:"og:type",content:"website"},{property:"og:url",content:"https://kestra.io/docs/developer-guide/variables/filter/timestampNano.html"},{property:"og:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:title",content:"timestampnano"},{name:"twitter:description",content:"timestampnano | Kestra, infinitely scalable open source orchestration & scheduling platform."},{name:"twitter:url",content:"https://kestra.io/docs/developer-guide/variables/filter/timestampNano.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"https://kestra.io/og-image.jpg"},{name:"twitter:label1",content:"Written by"},{name:"twitter:data1",content:"Kestra"},{name:"twitter:creator",content:"@kestra_io"}]},regularPath:"/docs/developer-guide/variables/filter/timestampNano.html",relativePath:"docs/developer-guide/variables/filter/timestampNano.md",key:"v-12a41843",path:"/docs/developer-guide/variables/filter/timestampNano.html",headers:[{level:2,title:"Arguments",slug:"arguments",normalizedTitle:"arguments",charIndex:251}],lastUpdated:"9/27/2021, 7:39:57 PM",lastUpdatedTimestamp:1632771597e3,headersStr:"Arguments",content:'# timestampnano\n\nThe timestamp filter will convert a date to an unix timestamps in nano second. You can convert a string with existingFormat and change timeZone with same arguments from date filter.\n\n{{ date | timstamp(timeZone="Europe/Paris" }}\n\n\n\n# Arguments\n\n * existingFormat\n * timeZone',normalizedContent:'# timestampnano\n\nthe timestamp filter will convert a date to an unix timestamps in nano second. you can convert a string with existingformat and change timezone with same arguments from date filter.\n\n{{ date | timstamp(timezone="europe/paris" }}\n\n\n\n# arguments\n\n * existingformat\n * timezone',charsets:{cjk:!0}}],themeConfig:{domain:"https://kestra.io",logo:"/logo-white.svg",repo:"kestra-io/kestra",repoLabel:"GitHub",docsRepo:"kestra-io/kestra.io",editLinks:!0,smoothScroll:!0,searchMaxSuggestions:10,author:{name:"Kestra",twitter:"@kestra_io"},sidebar:{"/plugins/":[{title:"Plugins",collapsable:!0,sidebarDepth:1,children:[{path:"/plugins/",title:"Plugins",readme:!0},{path:"/plugins/core/",title:"Core",readme:!0,children:[{title:"Conditions",children:[{path:"/plugins/core/conditions/io.kestra.core.models.conditions.types.DateTimeBetweenCondition",title:"DateTimeBetweenCondition",readme:!1},{path:"/plugins/core/conditions/io.kestra.core.models.conditions.types.DayWeekCondition",title:"DayWeekCondition",readme:!1},{path:"/plugins/core/conditions/io.kestra.core.models.conditions.types.DayWeekInMonthCondition",title:"DayWeekInMonthCondition",readme:!1},{path:"/plugins/core/conditions/io.kestra.core.models.conditions.types.ExecutionFlowCondition",title:"ExecutionFlowCondition",readme:!1},{path:"/plugins/core/conditions/io.kestra.core.models.conditions.types.ExecutionNamespaceCondition",title:"ExecutionNamespaceCondition",readme:!1},{path:"/plugins/core/conditions/io.kestra.core.models.conditions.types.ExecutionStatusCondition",title:"ExecutionStatusCondition",readme:!1},{path:"/plugins/core/conditions/io.kestra.core.models.conditions.types.FlowCondition",title:"FlowCondition",readme:!1},{path:"/plugins/core/conditions/io.kestra.core.models.conditions.types.FlowNamespaceCondition",title:"FlowNamespaceCondition",readme:!1},{path:"/plugins/core/conditions/io.kestra.core.models.conditions.types.HasRetryAttemptCondition",title:"HasRetryAttemptCondition",readme:!1},{path:"/plugins/core/conditions/io.kestra.core.models.conditions.types.MultipleCondition",title:"MultipleCondition",readme:!1},{path:"/plugins/core/conditions/io.kestra.core.models.conditions.types.NotCondition",title:"NotCondition",readme:!1},{path:"/plugins/core/conditions/io.kestra.core.models.conditions.types.OrCondition",title:"OrCondition",readme:!1},{path:"/plugins/core/conditions/io.kestra.core.models.conditions.types.VariableCondition",title:"VariableCondition",readme:!1},{path:"/plugins/core/conditions/io.kestra.core.models.conditions.types.WeekendCondition",title:"WeekendCondition",readme:!1}]},{title:"Tasks",children:[{title:"Debugs",children:[{path:"/plugins/core/tasks/debugs/io.kestra.core.tasks.debugs.Echo",title:"Echo",readme:!1},{path:"/plugins/core/tasks/debugs/io.kestra.core.tasks.debugs.Return",title:"Return",readme:!1}]},{title:"Executions",children:[{path:"/plugins/core/tasks/executions/io.kestra.core.tasks.executions.Counts",title:"Counts",readme:!1}]},{title:"Flows",children:[{path:"/plugins/core/tasks/flows/io.kestra.core.tasks.flows.AllowFailure",title:"AllowFailure",readme:!1},{path:"/plugins/core/tasks/flows/io.kestra.core.tasks.flows.EachParallel",title:"EachParallel",readme:!1},{path:"/plugins/core/tasks/flows/io.kestra.core.tasks.flows.EachSequential",title:"EachSequential",readme:!1},{path:"/plugins/core/tasks/flows/io.kestra.core.tasks.flows.Flow",title:"Flow",readme:!1},{path:"/plugins/core/tasks/flows/io.kestra.core.tasks.flows.Parallel",title:"Parallel",readme:!1},{path:"/plugins/core/tasks/flows/io.kestra.core.tasks.flows.Pause",title:"Pause",readme:!1},{path:"/plugins/core/tasks/flows/io.kestra.core.tasks.flows.Sequential",title:"Sequential",readme:!1},{path:"/plugins/core/tasks/flows/io.kestra.core.tasks.flows.Switch",title:"Switch",readme:!1},{path:"/plugins/core/tasks/flows/io.kestra.core.tasks.flows.Template",title:"Template",readme:!1},{path:"/plugins/core/tasks/flows/io.kestra.core.tasks.flows.Template$ExecutorTemplate",title:"ExecutorTemplate",readme:!1},{path:"/plugins/core/tasks/flows/io.kestra.core.tasks.flows.Worker",title:"Worker",readme:!1}]},{title:"Scripts",children:[{path:"/plugins/core/tasks/scripts/io.kestra.core.tasks.scripts.Bash",title:"Bash",readme:!1},{path:"/plugins/core/tasks/scripts/io.kestra.core.tasks.scripts.Node",title:"Node",readme:!1},{path:"/plugins/core/tasks/scripts/io.kestra.core.tasks.scripts.Python",title:"Python",readme:!1}]},{title:"States",children:[{path:"/plugins/core/tasks/states/io.kestra.core.tasks.states.Delete",title:"Delete",readme:!1},{path:"/plugins/core/tasks/states/io.kestra.core.tasks.states.Get",title:"Get",readme:!1},{path:"/plugins/core/tasks/states/io.kestra.core.tasks.states.Set",title:"Set",readme:!1}]},{title:"Storages",children:[{path:"/plugins/core/tasks/storages/io.kestra.core.tasks.storages.Concat",title:"Concat",readme:!1},{path:"/plugins/core/tasks/storages/io.kestra.core.tasks.storages.Delete",title:"Delete",readme:!1},{path:"/plugins/core/tasks/storages/io.kestra.core.tasks.storages.Purge",title:"Purge",readme:!1},{path:"/plugins/core/tasks/storages/io.kestra.core.tasks.storages.PurgeExecution",title:"PurgeExecution",readme:!1},{path:"/plugins/core/tasks/storages/io.kestra.core.tasks.storages.Size",title:"Size",readme:!1},{path:"/plugins/core/tasks/storages/io.kestra.core.tasks.storages.Split",title:"Split",readme:!1}]}]},{title:"Triggers",children:[{path:"/plugins/core/triggers/io.kestra.core.models.triggers.types.Flow",title:"Flow",readme:!1},{path:"/plugins/core/triggers/io.kestra.core.models.triggers.types.Schedule",title:"Schedule",readme:!1},{path:"/plugins/core/triggers/io.kestra.core.models.triggers.types.Webhook",title:"Webhook",readme:!1}]}]}]}],"/docs/":[{title:"Documentation",path:"/docs",collapsable:!1,sidebarDepth:1,children:[{path:"/docs/",title:"What’s Kestra?",readme:!0,order:0},{path:"/docs/getting-started/",title:"Getting Started",readme:!0,order:1},{path:"/docs/concepts/",title:"Concepts",readme:!0,order:2,children:[{path:"/docs/concepts/flows",title:"Flow",readme:!1,order:1},{path:"/docs/concepts/executions",title:"Execution",readme:!1,order:2}]},{path:"/docs/architecture/",title:"Architecture",readme:!0,order:3},{path:"/docs/developer-guide/",title:"Developer Guide",readme:!0,order:4,children:[{path:"/docs/developer-guide/flow/",title:"Flow",readme:!0,order:1},{path:"/docs/developer-guide/flowable/",title:"Flowable Task",readme:!0,order:2},{path:"/docs/developer-guide/variables/",title:"Variables",readme:!0,order:2,children:[{path:"/docs/developer-guide/variables/basic-usage",title:"Basic Usage",readme:!1,order:1},{path:"/docs/developer-guide/variables/filter/",title:"Filter",readme:!0,order:2,children:[{path:"/docs/developer-guide/variables/filter/abbreviate",title:"abbreviate",readme:!1},{path:"/docs/developer-guide/variables/filter/abs",title:"abs",readme:!1},{path:"/docs/developer-guide/variables/filter/base64decode",title:"base64decode",readme:!1},{path:"/docs/developer-guide/variables/filter/base64encode",title:"base64encode",readme:!1},{path:"/docs/developer-guide/variables/filter/capitalize",title:"capitalize",readme:!1},{path:"/docs/developer-guide/variables/filter/chunk",title:"chunk",readme:!1},{path:"/docs/developer-guide/variables/filter/className",title:"className",readme:!1},{path:"/docs/developer-guide/variables/filter/date",title:"date",readme:!1},{path:"/docs/developer-guide/variables/filter/dateAdd",title:"dateAdd",readme:!1},{path:"/docs/developer-guide/variables/filter/default",title:"default",readme:!1},{path:"/docs/developer-guide/variables/filter/first",title:"first",readme:!1},{path:"/docs/developer-guide/variables/filter/join",title:"join",readme:!1},{path:"/docs/developer-guide/variables/filter/jq",title:"jq",readme:!1},{path:"/docs/developer-guide/variables/filter/json",title:"json",readme:!1},{path:"/docs/developer-guide/variables/filter/keys",title:"keys",readme:!1},{path:"/docs/developer-guide/variables/filter/last",title:"last",readme:!1},{path:"/docs/developer-guide/variables/filter/length",title:"length",readme:!1},{path:"/docs/developer-guide/variables/filter/lower",title:"lower",readme:!1},{path:"/docs/developer-guide/variables/filter/merge",title:"merge",readme:!1},{path:"/docs/developer-guide/variables/filter/number",title:"number",readme:!1},{path:"/docs/developer-guide/variables/filter/numberFormat",title:"numberFormat",readme:!1},{path:"/docs/developer-guide/variables/filter/replace",title:"replace",readme:!1},{path:"/docs/developer-guide/variables/filter/reverse",title:"reverse",readme:!1},{path:"/docs/developer-guide/variables/filter/rsort",title:"rsort",readme:!1},{path:"/docs/developer-guide/variables/filter/sha256",title:"sha256",readme:!1},{path:"/docs/developer-guide/variables/filter/slice",title:"slice",readme:!1},{path:"/docs/developer-guide/variables/filter/slugify",title:"slugify",readme:!1},{path:"/docs/developer-guide/variables/filter/sort",title:"sort",readme:!1},{path:"/docs/developer-guide/variables/filter/split",title:"split",readme:!1},{path:"/docs/developer-guide/variables/filter/substringAfter",title:"substringAfter",readme:!1},{path:"/docs/developer-guide/variables/filter/substringAfterLast",title:"substringAfterLast",readme:!1},{path:"/docs/developer-guide/variables/filter/substringBefore",title:"substringBefore",readme:!1},{path:"/docs/developer-guide/variables/filter/substringBeforeLast",title:"substringBeforeLast",readme:!1},{path:"/docs/developer-guide/variables/filter/timestamp",title:"timestamp",readme:!1},{path:"/docs/developer-guide/variables/filter/timestampMicro",title:"timestampmicro",readme:!1},{path:"/docs/developer-guide/variables/filter/timestampNano",title:"timestampnano",readme:!1},{path:"/docs/developer-guide/variables/filter/title",title:"title",readme:!1},{path:"/docs/developer-guide/variables/filter/trim",title:"trim",readme:!1},{path:"/docs/developer-guide/variables/filter/upper",title:"upper",readme:!1},{path:"/docs/developer-guide/variables/filter/urlencode",title:"urlencode",readme:!1}]},{path:"/docs/developer-guide/variables/function/",title:"Function",readme:!0,order:3,children:[{path:"/docs/developer-guide/variables/function/block",title:"block",readme:!1},{path:"/docs/developer-guide/variables/function/json",title:"json",readme:!1},{path:"/docs/developer-guide/variables/function/max",title:"max",readme:!1},{path:"/docs/developer-guide/variables/function/min",title:"min",readme:!1},{path:"/docs/developer-guide/variables/function/now",title:"now",readme:!1},{path:"/docs/developer-guide/variables/function/parent",title:"parent",readme:!1},{path:"/docs/developer-guide/variables/function/range",title:"range",readme:!1}]},{path:"/docs/developer-guide/variables/operator/",title:"Operators",readme:!0,order:3,children:[{path:"/docs/developer-guide/variables/operator/comparisons",title:"Comparisons",readme:!1},{path:"/docs/developer-guide/variables/operator/concat",title:"concat",readme:!1},{path:"/docs/developer-guide/variables/operator/contains",title:"contains",readme:!1},{path:"/docs/developer-guide/variables/operator/is",title:"is",readme:!1},{path:"/docs/developer-guide/variables/operator/logic",title:"Logic",readme:!1},{path:"/docs/developer-guide/variables/operator/math",title:"Math",readme:!1},{path:"/docs/developer-guide/variables/operator/not",title:"not",readme:!1},{path:"/docs/developer-guide/variables/operator/null-coalescing",title:"Null-Coalescing operator",readme:!1},{path:"/docs/developer-guide/variables/operator/ternary-operator",title:"Ternary operator",readme:!1}]},{path:"/docs/developer-guide/variables/tag/",title:"Tags",readme:!0,order:4,children:[{path:"/docs/developer-guide/variables/tag/block",title:"block",readme:!1},{path:"/docs/developer-guide/variables/tag/filter",title:"filter",readme:!1},{path:"/docs/developer-guide/variables/tag/for",title:"for",readme:!1},{path:"/docs/developer-guide/variables/tag/if",title:"if",readme:!1},{path:"/docs/developer-guide/variables/tag/macro",title:"macro",readme:!1},{path:"/docs/developer-guide/variables/tag/set",title:"set",readme:!1},{path:"/docs/developer-guide/variables/tag/verbatim",title:"verbatim",readme:!1}]},{path:"/docs/developer-guide/variables/test/",title:"Tests",readme:!0,order:5,children:[{path:"/docs/developer-guide/variables/test/defined",title:"defined",readme:!1},{path:"/docs/developer-guide/variables/test/empty",title:"empty",readme:!1},{path:"/docs/developer-guide/variables/test/even",title:"even",readme:!1},{path:"/docs/developer-guide/variables/test/iterable",title:"iterable",readme:!1},{path:"/docs/developer-guide/variables/test/json",title:"json",readme:!1},{path:"/docs/developer-guide/variables/test/map",title:"map",readme:!1},{path:"/docs/developer-guide/variables/test/null",title:"null",readme:!1},{path:"/docs/developer-guide/variables/test/odd",title:"odd",readme:!1}]},{path:"/docs/developer-guide/variables/deprecated-handlebars/",title:"Deprecated Handlebars",readme:!0,order:10,children:[{path:"/docs/developer-guide/variables/deprecated-handlebars/use",title:"Use variables",readme:!1,order:1},{path:"/docs/developer-guide/variables/deprecated-handlebars/string",title:"String functions",readme:!1,order:2},{path:"/docs/developer-guide/variables/deprecated-handlebars/number",title:"Number functions",readme:!1,order:3},{path:"/docs/developer-guide/variables/deprecated-handlebars/date",title:"Date functions",readme:!1,order:4},{path:"/docs/developer-guide/variables/deprecated-handlebars/boolean",title:"Boolean functions",readme:!1,order:5},{path:"/docs/developer-guide/variables/deprecated-handlebars/iterations",title:"Iterations functions",readme:!1,order:6},{path:"/docs/developer-guide/variables/deprecated-handlebars/json",title:"JSON functions",readme:!1,order:7},{path:"/docs/developer-guide/variables/deprecated-handlebars/vars",title:"Vars functions",readme:!1,order:8}]}]},{path:"/docs/developer-guide/inputs/",title:"Inputs",readme:!0,order:3},{path:"/docs/developer-guide/outputs/",title:"Outputs",readme:!0,order:4},{path:"/docs/developer-guide/errors-handling/",title:"Errors handling",readme:!0,order:5},{path:"/docs/developer-guide/triggers/",title:"Triggers & schedule",readme:!0,order:5,children:[{path:"/docs/developer-guide/triggers/flow",title:"Flow trigger",readme:!1},{path:"/docs/developer-guide/triggers/schedule",title:"Schedule",readme:!1},{path:"/docs/developer-guide/triggers/webhook",title:"Webhook",readme:!1}]},{path:"/docs/developer-guide/retries/",title:"Retries",readme:!0,order:6},{path:"/docs/developer-guide/conditions/",title:"Conditions",readme:!0,order:7},{path:"/docs/developer-guide/listeners/",title:"Listeners",readme:!0,order:8},{path:"/docs/developer-guide/templates/",title:"Templates",readme:!0,order:9},{path:"/docs/developer-guide/helpers/",title:"Helpers",readme:!0,order:10},{path:"/docs/developer-guide/documentation/",title:"Document your flow",readme:!0,order:11},{path:"/docs/developer-guide/best-practice/",title:"Flow best practice",readme:!0,order:12}]},{path:"/docs/administrator-guide/",title:"Administrator Guide",readme:!0,order:5,children:[{path:"/docs/administrator-guide/deployment/",title:"Installation guide",readme:!0,order:1,children:[{path:"/docs/administrator-guide/deployment/docker/",title:"Deployment with Docker",readme:!0,order:1},{path:"/docs/administrator-guide/deployment/kubernetes/",title:"Deployment on Kubernetes",readme:!0,order:2},{path:"/docs/administrator-guide/deployment/manual/",title:"Manual deployment",readme:!0,order:3}]},{path:"/docs/administrator-guide/servers/",title:"Kestra servers",readme:!0,order:2},{path:"/docs/administrator-guide/configuration/",title:"Configuration",readme:!0,order:3,children:[{path:"/docs/administrator-guide/configuration/databases/",title:"Databases configuration",readme:!0,order:1},{path:"/docs/administrator-guide/configuration/storage/",title:"Storage configuration",readme:!0,order:2},{path:"/docs/administrator-guide/configuration/kafka/",title:"Kafka configuration",readme:!0,order:3},{path:"/docs/administrator-guide/configuration/elasticsearch/",title:"ElasticSearch configuration",readme:!0,order:4},{path:"/docs/administrator-guide/configuration/enterprise-edition/",title:"Kestra Enterprise Edition",readme:!0,order:5,children:[{path:"/docs/administrator-guide/configuration/enterprise-edition/secrets/",title:"Secret Manager configuration",readme:!0,order:1},{path:"/docs/administrator-guide/configuration/enterprise-edition/authentifications/",title:"Authentications",readme:!0,order:2},{path:"/docs/administrator-guide/configuration/enterprise-edition/workers/",title:"Worker Isolation configuration",readme:!0,order:3},{path:"/docs/administrator-guide/configuration/enterprise-edition/authentifications/auths/oidc",title:"Open Id Connect (OIDC)",readme:!1},{path:"/docs/administrator-guide/configuration/enterprise-edition/secrets/elasticsearch/",title:"Elasticsearch configuration",readme:!0},{path:"/docs/administrator-guide/configuration/enterprise-edition/secrets/vault/",title:"Vault configuration",readme:!0}]},{path:"/docs/administrator-guide/configuration/micronaut/",title:"Micronaut configuration",readme:!0,order:6},{path:"/docs/administrator-guide/configuration/others/",title:"Others Kestra configuration",readme:!0,order:7}]},{path:"/docs/administrator-guide/monitoring/",title:"Monitoring & Alerting",readme:!0,order:4,children:[{path:"/docs/administrator-guide/monitoring/debug",title:"Debugging techniques",readme:!1,order:4}]}]},{path:"/docs/plugin-developer-guide/",title:"Plugin Developer Guide",readme:!0,order:6,children:[{path:"/docs/plugin-developer-guide/gradle/",title:"Gradle configuration",readme:!0,order:1},{path:"/docs/plugin-developer-guide/runnable-task/",title:"Develop your RunnableTask",readme:!0,order:2},{path:"/docs/plugin-developer-guide/flowable-task/",title:"Develop your FlowableTask",readme:!0,order:3},{path:"/docs/plugin-developer-guide/triggers/",title:"Develop your Trigger",readme:!0,order:4},{path:"/docs/plugin-developer-guide/conditions/",title:"Develop your Condition",readme:!0,order:5},{path:"/docs/plugin-developer-guide/unit-test/",title:"Add unit tests",readme:!0,order:6},{path:"/docs/plugin-developer-guide/outputs/",title:"Outputs & Metrics from a script engine",readme:!0,order:7},{path:"/docs/plugin-developer-guide/build/",title:"Build a plugin",readme:!0,order:8},{path:"/docs/plugin-developer-guide/publish/",title:"Publish a plugin",readme:!0,order:9}]},{path:"/docs/terraform/",title:"Terraform Integration",readme:!0,order:7,children:[{title:"Data Sources",children:[{path:"/docs/terraform/data-sources/binding",title:"kestra_binding",readme:!1},{path:"/docs/terraform/data-sources/flow",title:"kestra_flow",readme:!1},{path:"/docs/terraform/data-sources/group",title:"kestra_group",readme:!1},{path:"/docs/terraform/data-sources/namespace",title:"kestra_namespace",readme:!1},{path:"/docs/terraform/data-sources/role",title:"kestra_role",readme:!1},{path:"/docs/terraform/data-sources/template",title:"kestra_template",readme:!1},{path:"/docs/terraform/data-sources/user",title:"kestra_user",readme:!1}]},{title:"Guides",children:[{path:"/docs/terraform/guides/configurations",title:"Provider configurations",readme:!1},{path:"/docs/terraform/guides/working-with-yaml",title:"Working with Yaml",readme:!1}]},{title:"Resources",children:[{path:"/docs/terraform/resources/binding",title:"kestra_binding",readme:!1},{path:"/docs/terraform/resources/flow",title:"kestra_flow",readme:!1},{path:"/docs/terraform/resources/group",title:"kestra_group",readme:!1},{path:"/docs/terraform/resources/namespace",title:"kestra_namespace",readme:!1},{path:"/docs/terraform/resources/namespace_secret",title:"kestra_namespace_secret",readme:!1},{path:"/docs/terraform/resources/role",title:"kestra_role",readme:!1},{path:"/docs/terraform/resources/template",title:"kestra_template",readme:!1},{path:"/docs/terraform/resources/user",title:"kestra_user",readme:!1},{path:"/docs/terraform/resources/user_password",title:"kestra_user_password",readme:!1}]}]},{path:"/docs/api-guide/",title:"Api Guide",readme:!0,order:8},{path:"/docs/user-interface-guide/",title:"User Interface Guide",readme:!0,order:8}]}]}}};n(366);o.a.component("ApiDoc",(function(){return Promise.all([n.e(0),n.e(30)]).then(n.bind(null,732))})),o.a.component("Badge",(function(){return n.e(40).then(n.bind(null,963))}));var sn=function(e){var t=e.Vue;e.router.options.scrollBehavior=function(e,n,a){if(a)return window.scrollTo({top:a.y,behavior:"smooth"});if(!e.hash)return window.scrollTo({top:0,behavior:"smooth"});if(!t.$vuepress.$get("disableScrollBehavior")){var o,r,i,s=e.hash.slice(1),l=document.getElementById(s)||document.querySelector("[name='".concat(s,"']"));return l?window.scrollTo({top:(o=l,r=document.documentElement.getBoundingClientRect(),i=o.getBoundingClientRect(),{x:i.left-r.left,y:i.top-r.top}).y,behavior:"smooth"}):void 0}}},ln=n(211),cn=n.n(ln),un={name:"BackToTop",props:{threshold:{type:Number,default:300}},data:function(){return{scrollTop:null}},computed:{show:function(){return this.scrollTop>this.threshold}},mounted:function(){var e=this;this.scrollTop=this.getScrollTop(),window.addEventListener("scroll",cn()((function(){e.scrollTop=e.getScrollTop()}),100))},methods:{getScrollTop:function(){return window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0},scrollToTop:function(){window.scrollTo({top:0,behavior:"smooth"}),this.scrollTop=0}}},dn=(n(367),Object(Xt.a)(un,(function(){var e=this.$createElement,t=this._self._c||e;return t("transition",{attrs:{name:"fade"}},[this.show?t("svg",{staticClass:"go-to-top",attrs:{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 49.484 28.284"},on:{click:this.scrollToTop}},[t("g",{attrs:{transform:"translate(-229 -126.358)"}},[t("rect",{attrs:{fill:"currentColor",width:"35",height:"5",rx:"2",transform:"translate(229 151.107) rotate(-45)"}}),this._v(" "),t("rect",{attrs:{fill:"currentColor",width:"35",height:"5",rx:"2",transform:"translate(274.949 154.642) rotate(-135)"}})])]):this._e()])}),[],!1,null,"5fd4ef0c",null).exports),pn=(n(368),n(212),n(213),n(214),n(372),n(373),{name:"ChildTableOfContents",props:{header:{type:Boolean,default:!1},pageUrl:{type:String,default:void 0},max:{type:Number,default:void 0},level:{type:Number,default:void 0}},computed:{items:function(){var e=this.pageUrl||this.$page.regularPath;return this.itemChilds(e)}},methods:{allChilds:function(){return this.$site.pages.sort((function(e,t){var n=e.frontmatter&&e.frontmatter.order,a=t.frontmatter&&t.frontmatter.order;return n&&a?n>a?1:-1:0}))},itemChilds:function(e){return this.allChilds().filter((function(t){if(!t.regularPath.startsWith(e)||t.regularPath===e)return!1;var n=t.regularPath.substr(e.length).split("/");return!(!t.regularPath.endsWith("/")||2!==n.length)||!(!t.regularPath.endsWith(".html")||1!==n.length)}))},itemHeaders:function(e){return(e||[]).filter((function(e){return 2===e.level}))},nextLevel:function(){if(void 0!==this.max)return(void 0===this.level?1:this.level)+1},isMax:function(){return void 0!==this.max&&(1===this.max&&void 0===this.level||this.max<=this.level)}}}),mn=Object(Xt.a)(pn,(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ul",e._l(e.items,(function(t){return n("li",{key:t.path},[n("router-link",{attrs:{to:t.path}},[e._v(e._s(t.title||t.path))]),e._v(" "),e.header&&e.itemHeaders(t.headers)?n("ul",e._l(e.itemHeaders(t.headers),(function(a){return n("li",{key:a.slug},[n("router-link",{attrs:{to:t.path+"#"+a.slug}},[e._v(e._s(a.title))])],1)})),0):e._e(),e._v(" "),e.isMax()?e._e():n("child-table-of-contents",{attrs:{"page-url":t.regularPath,header:e.header,max:e.max,level:e.nextLevel()}})],1)})),0)}),[],!1,null,null,null).exports,hn=[function(e){e.Vue,e.options;var t=e.router;e.siteData;t.addRoutes([{path:"/blogs/2022-02-01-leroy-merlin-usage-kestra(.*)",redirect:"/blogs/2022-02-22-leroy-merlin-usage-kestra.html"}])},{},function(e){e.Vue.mixin({computed:{$dataBlock:function(){return this.$options.__data__block__}}})},{},sn,function(e){e.Vue.component("BackToTop",dn)},{},function(e){var t,n,a,o,r,i,s=e.router;"undefined"!=typeof window&&(t=window,n=document,a="script",o="ga",t.GoogleAnalyticsObject=o,t.ga=t.ga||function(){(t.ga.q=t.ga.q||[]).push(arguments)},t.ga.l=1*new Date,r=n.createElement(a),i=n.getElementsByTagName(a)[0],r.async=1,r.src="https://www.google-analytics.com/analytics.js",i.parentNode.insertBefore(r,i),ga("create","UA-56021-9","auto"),ga("set","anonymizeIp",!0),s.afterEach((function(e){ga("set","page",s.app.$withBase(e.fullPath)),ga("send","pageview")})))},function(e){e.Vue.component("ChildTableOfContents",mn)},function(e){e.Vue.component("CodeCopy",en)}],gn=["BackToTop"];n(215);n(203);function fn(e,t){return(fn=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}n(204),n(205);function yn(e){return(yn=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function wn(e,t){if(t&&("object"===$e(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function vn(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,a=yn(e);if(t){var o=yn(this).constructor;n=Reflect.construct(a,arguments,o)}else n=a.apply(this,arguments);return wn(this,n)}}var bn=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&fn(e,t)}(n,e);var t=vn(n);function n(){return _t(this,n),t.apply(this,arguments)}return Ot(n)}(function(){function e(){_t(this,e),this.store=new o.a({data:{state:{}}})}return Ot(e,[{key:"$get",value:function(e){return this.store.state[e]}},{key:"$set",value:function(e,t){o.a.set(this.store.state,e,t)}},{key:"$emit",value:function(){var e;(e=this.store).$emit.apply(e,arguments)}},{key:"$on",value:function(){var e;(e=this.store).$on.apply(e,arguments)}}]),e}());Object.assign(bn.prototype,{getPageAsyncComponent:pt,getLayoutAsyncComponent:mt,getAsyncComponent:ht,getVueComponent:gt});var kn={install:function(e){var t=new bn;e.$vuepress=t,e.prototype.$vuepress=t}};n(129),n(218);function xn(e){e.beforeEach((function(t,n,a){if(Tn(e,t.path))a();else if(/(\/|\.html)$/.test(t.path))if(/\/$/.test(t.path)){var o=t.path.replace(/\/$/,"")+".html";Tn(e,o)?a(o):a()}else a();else{var r=t.path+"/",i=t.path+".html";Tn(e,i)?a(i):Tn(e,r)?a(r):a()}}))}function Tn(e,t){var n=t.toLowerCase();return e.options.routes.some((function(e){return e.path.toLowerCase()===n}))}var Mn={props:{pageKey:String,slotKey:{type:String,default:"default"}},render:function(e){var t=this.pageKey||this.$parent.$page.key;return yt("pageKey",t),o.a.component(t)||o.a.component(t,pt(t)),o.a.component(t)?e(t):e("")}},In={functional:!0,props:{slotKey:String,required:!0},render:function(e,t){var n=t.props,a=t.slots;return e("div",{class:["content__".concat(n.slotKey)]},a()[n.slotKey])}},jn={computed:{openInNewWindowTitle:function(){return this.$themeLocaleConfig.openNewWindowText||"(opens new window)"}}},Dn=(n(375),n(376),Object(Xt.a)(jn,(function(){var e=this.$createElement,t=this._self._c||e;return t("span",[t("svg",{staticClass:"icon outbound",attrs:{xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",focusable:"false",x:"0px",y:"0px",viewBox:"0 0 100 100",width:"15",height:"15"}},[t("path",{attrs:{fill:"currentColor",d:"M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"}}),this._v(" "),t("polygon",{attrs:{fill:"currentColor",points:"45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"}})]),this._v(" "),t("span",{staticClass:"sr-only"},[this._v(this._s(this.openInNewWindowTitle))])])}),[],!1,null,null,null).exports);function zn(){return(zn=Object(a.a)(regeneratorRuntime.mark((function e(t){var n,a,r,i;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n="undefined"!=typeof window&&window.__VUEPRESS_ROUTER_BASE__?window.__VUEPRESS_ROUTER_BASE__:rn.routerBase||rn.base,xn(a=new He({base:n,mode:"history",fallback:!1,routes:on,scrollBehavior:function(e,t,n){return n||(e.hash?!o.a.$vuepress.$get("disableScrollBehavior")&&{selector:decodeURIComponent(e.hash)}:{x:0,y:0})}})),r={},e.prev=4,e.next=7,Promise.all(hn.filter((function(e){return"function"==typeof e})).map((function(e){return e({Vue:o.a,options:r,router:a,siteData:rn,isServer:t})})));case 7:e.next=12;break;case 9:e.prev=9,e.t0=e.catch(4),console.error(e.t0);case 12:return i=new o.a(Object.assign(r,{router:a,render:function(e){return e("div",{attrs:{id:"app"}},[e("RouterView",{ref:"layout"}),e("div",{class:"global-ui"},gn.map((function(t){return e(t)})))])}})),e.abrupt("return",{app:i,router:a});case 14:case"end":return e.stop()}}),e,null,[[4,9]])})))).apply(this,arguments)}o.a.config.productionTip=!1,o.a.use(He),o.a.use(kn),o.a.mixin(function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:o.a;Qe(t),n.$vuepress.$set("siteData",t);var a=e(n.$vuepress.$get("siteData")),r=new a,i=Object.getOwnPropertyDescriptors(Object.getPrototypeOf(r)),s={};return Object.keys(i).reduce((function(e,t){return t.startsWith("$")&&(e[t]=i[t].get),e}),s),{computed:s}}((function(e){return function(){function t(){_t(this,t)}return Ot(t,[{key:"setPage",value:function(e){this.__page=e}},{key:"$site",get:function(){return e}},{key:"$themeConfig",get:function(){return this.$site.themeConfig}},{key:"$frontmatter",get:function(){return this.$page.frontmatter}},{key:"$localeConfig",get:function(){var e,t,n=this.$site.locales,a=void 0===n?{}:n;for(var o in a)"/"===o?t=a[o]:0===this.$page.path.indexOf(o)&&(e=a[o]);return e||t||{}}},{key:"$siteTitle",get:function(){return this.$localeConfig.title||this.$site.title||""}},{key:"$canonicalUrl",get:function(){var e=this.$page.frontmatter.canonicalUrl;return"string"==typeof e&&e}},{key:"$title",get:function(){var e=this.$page,t=this.$page.frontmatter.metaTitle;if("string"==typeof t)return t;var n=this.$siteTitle,a=e.frontmatter.home?null:e.frontmatter.title||e.title;return n?a?a+" | "+n:n:a||"VuePress"}},{key:"$description",get:function(){var e=function(e){if(e){var t=e.filter((function(e){return"description"===e.name}))[0];if(t)return t.content}}(this.$page.frontmatter.meta);return e||(this.$page.frontmatter.description||this.$localeConfig.description||this.$site.description||"")}},{key:"$lang",get:function(){return this.$page.frontmatter.lang||this.$localeConfig.lang||"en-US"}},{key:"$localePath",get:function(){return this.$localeConfig.path||"/"}},{key:"$themeLocaleConfig",get:function(){return(this.$site.themeConfig.locales||{})[this.$localePath]||{}}},{key:"$page",get:function(){return this.__page?this.__page:function(e,t){for(var n=0;n<e.length;n++){var a=e[n];if(a.path.toLowerCase()===t.toLowerCase())return a}return{path:"",frontmatter:{}}}(this.$site.pages,this.$route.path)}}]),t}()}),rn)),o.a.component("Content",Mn),o.a.component("ContentSlotsDistributor",In),o.a.component("OutboundLink",Dn),o.a.component("ClientOnly",{functional:!0,render:function(e,t){var n=t.parent,a=t.children;if(n._isMounted)return a;n.$once("hook:mounted",(function(){n.$forceUpdate()}))}}),o.a.component("Layout",mt("Layout")),o.a.component("NotFound",mt("NotFound")),o.a.prototype.$withBase=function(e){var t=this.$site.base;return"/"===e.charAt(0)?t+e.slice(1):e},window.__VUEPRESS__={version:"1.9.7",hash:"abccc0360b"},function(e){return zn.apply(this,arguments)}(!1).then((function(e){var t=e.app;e.router.onReady((function(){t.$mount("#app")}))}))}]);