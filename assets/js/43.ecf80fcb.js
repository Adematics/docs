(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{696:function(t,e,a){"use strict";a.r(e);var s=a(19),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"databases-configuration"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#databases-configuration"}},[t._v("#")]),t._v(" Databases configuration")]),t._v(" "),a("h2",{attrs:{id:"minimal-examples"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#minimal-examples"}},[t._v("#")]),t._v(" Minimal examples")]),t._v(" "),a("p",[t._v("Most important configuration is to configure the way Kestra connect to a database. For now, Kestra support Postgres and Mysql.")]),t._v(" "),a("p",[t._v("Here is a minimal mysql configuration example :")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("datasources")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("mysql")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("url")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" jdbc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("mysql"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//local"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("3306/kestra\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("driverClassName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" com.mysql.cj.jdbc.Driver\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("username")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" kestra\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("password")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" k3str4\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("dialect")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" MYSQL\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kestra")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("queue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" mysql\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("repository")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" mysql\n")])])]),a("p",[t._v("Here is minimal Postgres configuration:")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("datasources")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("postgres")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("url")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" jdbc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("postgresql"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//local"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("5432/kestra\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("driverClassName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" org.postgresql.Driver\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("username")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" kestra\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("password")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" k3str4\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kestra")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("queue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" postgres\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("repository")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" postgres\n")])])]),a("h2",{attrs:{id:"datasources-properties"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#datasources-properties"}},[t._v("#")]),t._v(" "),a("code",[t._v("datasources.*")]),t._v(" properties")]),t._v(" "),a("p",[t._v("Since Kestra is built upon "),a("a",{attrs:{href:"https://micronaut.io",target:"_blank",rel:"noopener noreferrer"}},[t._v("micronaut"),a("OutboundLink")],1),t._v(" and "),a("a",{attrs:{href:"https://github.com/brettwooldridge/HikariCP",target:"_blank",rel:"noopener noreferrer"}},[t._v("HikariCP"),a("OutboundLink")],1),t._v(", many configurations are available in order to configure the database pool:")]),t._v(" "),a("div",{staticClass:"table-responsive"},[a("table",{staticClass:"table table-bordered table-hover table-striped"},[a("thead",[a("tr",[a("th",[t._v("Properties")]),t._v(" "),a("th",[t._v("Type")]),t._v(" "),a("th",[t._v("Description")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("url")])]),t._v(" "),a("td",[t._v("String")]),t._v(" "),a("td",[t._v("Set the jdbc connection string.")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("catalog")])]),t._v(" "),a("td",[t._v("String")]),t._v(" "),a("td",[t._v("Set the default schema name to be set on connections.")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("schema")])]),t._v(" "),a("td",[t._v("String")]),t._v(" "),a("td",[t._v("Set the default catalog name to be set on connections.")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("username")])]),t._v(" "),a("td",[t._v("String")]),t._v(" "),a("td",[t._v("Set the default username used.")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("password")])]),t._v(" "),a("td",[t._v("String")]),t._v(" "),a("td",[t._v("Set the default password to use.")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("transaction-isolation")])]),t._v(" "),a("td",[t._v("String")]),t._v(" "),a("td",[t._v("Set the default transaction isolation level.")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("pool-name")])]),t._v(" "),a("td",[t._v("String")]),t._v(" "),a("td",[t._v("Set the name of the connection pool.")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("connection-init-sql")])]),t._v(" "),a("td",[t._v("String")]),t._v(" "),a("td",[t._v("Set the SQL string that will be executed on all new connections when they are created, before they are added to the pool.")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("connection-test-query")])]),t._v(" "),a("td",[t._v("String")]),t._v(" "),a("td",[t._v("Set the SQL query to be executed to test the validity of connections.")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("connection-timeout")])]),t._v(" "),a("td",[t._v("Long")]),t._v(" "),a("td",[t._v("Set the maximum number of milliseconds that a client will wait for a connection from the pool.")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("idle-timeout")])]),t._v(" "),a("td",[t._v("Long")]),t._v(" "),a("td",[t._v("This property controls the maximum amount of time (in milliseconds) that a connection is allowed to sit idle in the pool.")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("minimum-idle")])]),t._v(" "),a("td",[t._v("Long")]),t._v(" "),a("td",[t._v("The property controls the minimum number of idle connections that HikariCP tries to maintain in the pool, including both idle and in-use connections.")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("initialization-fail-timeout")])]),t._v(" "),a("td",[t._v("Long")]),t._v(" "),a("td",[t._v("Set the pool initialization failure timeout.")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("leak-detection-threshold")])]),t._v(" "),a("td",[t._v("Long")]),t._v(" "),a("td",[t._v("This property controls the amount of time that a connection can be out of the pool before a message is logged indicating a possible connection leak.")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("maximum-pool-size")])]),t._v(" "),a("td",[t._v("Int")]),t._v(" "),a("td",[t._v("The property controls the maximum size that the pool is allowed to reach, including both idle and in-use connections.")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("max-lifetime")])]),t._v(" "),a("td",[t._v("Long")]),t._v(" "),a("td",[t._v("This property controls the maximum lifetime of a connection in the pool.")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("validation-timeout")])]),t._v(" "),a("td",[t._v("Long")]),t._v(" "),a("td",[t._v("Sets the maximum number of milliseconds that the pool will wait for a connection to be validated as alive.")])])])])])])}),[],!1,null,null,null);e.default=n.exports}}]);