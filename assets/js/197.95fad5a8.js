(window.webpackJsonp=window.webpackJsonp||[]).push([[197],{900:function(t,a,s){"use strict";s.r(a);var e=s(19),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"example-guided-tour"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#example-guided-tour"}},[t._v("#")]),t._v(" Example guided tour")]),t._v(" "),s("p",[t._v("Kestra's guided tour flow example.")]),t._v(" "),s("div",{staticClass:"language-yml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Flow declaration with a mandatory unique identifier, a namespace, and an optional description.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Flow identifier are unique inside a namespace.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" kestra"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("tour\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" io.kestra.demo\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("description")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Kestra guided tour\n\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Flow inputs: each input has a name, a type, and an optional default value.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("inputs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# We define one input of name 'csvUrl' with as default value the URL of the test data file.")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# This test data is from the France Open Data portal and contains french electricity consumptions in CSV.")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" csvUrl\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" STRING\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("defaults")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" https"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//www.data.gouv.fr/fr/datasets/r/d33eabc9"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("e2fd"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("4787"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("83e5"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("a5fcfb5af66d\n\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# List of tasks that will be executed one after the other.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Each task must have an identifier unique for the flow and a type.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Depending on the type of the task, you may have to pass additional attributes.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tasks")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# This is one of the simplest task: it echos a message in the log, like the 'echo' command.")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The message is passed thanks to the 'format' attribute.")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" log\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" io.kestra.core.tasks.debugs.Echo\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("format")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" The flow starts\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# This task will download the CSV, it will be sent to Kestra's internal storage and available from the task output.")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" downloadData\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" io.kestra.plugin.fs.http.Download\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Here we use a variable from an input: '{{' and '}}' are separator of a Pebble expression in which we can access variables.")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# All inputs are available from the 'inputs' variable using there name.")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uri")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"{{inputs.csvUrl}}"')]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# This task will analyze the CSV data using a Python script with the Pandas library.")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" analyzeData\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" io.kestra.core.tasks.scripts.Python\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("inputFiles")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Here we define a file named 'data.csv' that will be available in the Python task working directory.")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# This file is fetched from the internal storage by using the 'uri' output of the 'downloadData' task.")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("data.csv")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"{{outputs.downloadData.uri}}"')]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 'main.py' is the Python script that will be executed.")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# It uses Pandas to read the CSV file, compute the sum of the 'conso' column, ")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# and set it as task output thanks to the Kestra Python library.")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("main.py")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),s("span",{pre:!0,attrs:{class:"token scalar string"}},[t._v("\n        import pandas as pd\n        from kestra import Kestra\n        data = pd.read_csv(\"data.csv\", sep=\";\")\n        data.info()\n        sumOfConsumption = data['conso'].sum()\n        Kestra.outputs({'sumOfConsumption': int(sumOfConsumption)})")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# As the script require the Pandas library, we must list it in the requirements.")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("requirements")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" pandas")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);