(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{668:function(t,s,a){t.exports=a.p+"assets/img/output.ffbb8226.png"},950:function(t,s,a){"use strict";a.r(s);var e=a(19),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"outputs"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#outputs"}},[t._v("#")]),t._v(" Outputs")]),t._v(" "),e("p",[t._v("Each task can generate output data. And those data are passed to the following Tasks. These outputs can be variables or files stored inside Kestra's "),e("a",{attrs:{href:"../../architecture#storage"}},[t._v("internal storage")]),t._v(".")]),t._v(" "),e("h2",{attrs:{id:"accessing-outputs"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#accessing-outputs"}},[t._v("#")]),t._v(" Accessing outputs")]),t._v(" "),e("p",[t._v("Task output can be accessed during the flow using the "),e("code",{pre:!0},[t._v("{{ outputs['task-id'] }}")]),t._v(" syntax. If your task's id contains no "),e("code",[t._v("-")]),t._v(", you can directly use "),e("code",{pre:!0},[t._v("{{ outputs.taskId }}")]),t._v(".")]),t._v(" "),e("p",[t._v("You can also check the outputs of your tasks in the Output tab of an execution. Very useful for debugging your flow.")]),t._v(" "),e("p"),e("figure",[e("img",{attrs:{src:a(668),alt:"Output of our previous download",title:"Output of our previous download"}}),e("figcaption",[t._v("Output of our previous download")])]),e("p"),t._v(" "),e("h2",{attrs:{id:"use-output-in-your-flow"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#use-output-in-your-flow"}},[t._v("#")]),t._v(" Use output in your flow")]),t._v(" "),e("p",[t._v("In our example, we will use the output of the "),e("code",[t._v("download")]),t._v(" task to do some Python analytics. In the "),e("code",[t._v("inputFiles")]),t._v(" of the Python task, we define a main.py, the Python script executed. We also add a data.csv file, the output of the "),e("code",[t._v("download")]),t._v(" task.")]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[t._v("  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" analyze"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("data\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" io.kestra.core.tasks.scripts.Python\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("inputFiles")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("data.csv")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"{{outputs.download.uri}}"')]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("main.py")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),e("span",{pre:!0,attrs:{class:"token scalar string"}},[t._v("\n        import pandas as pd\n        from kestra import Kestra\n        data = pd.read_csv(\"data.csv\", sep=\";\")\n        data.info()\n        sumOfConsumption = data['conso'].sum()\n        Kestra.outputs({'sumOfConsumption': int(sumOfConsumption)})")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("requirements")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" pandas\n")])])]),e("details",{staticClass:"custom-block details"},[e("summary",[t._v("Click here to see the full flow")]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" kestra"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("tutorial\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" io.kestra.tutorial\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("env")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" PRD\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("description")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),e("span",{pre:!0,attrs:{class:"token scalar string"}},[t._v("\n  # Kestra Tutorial\n  As you notice, we can use markdown here.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Tasks")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" download\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" io.kestra.plugin.fs.http.Download\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uri")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://www.data.gouv.fr/fr/datasets/r/d33eabc9-e2fd-4787-83e5-a5fcfb5af66d"')]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" analyze"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("data\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" io.kestra.core.tasks.scripts.Python\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("inputFiles")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("data.csv")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"{{outputs.download.uri}}"')]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("main.py")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),e("span",{pre:!0,attrs:{class:"token scalar string"}},[t._v("\n        import pandas as pd\n        from kestra import Kestra\n        data = pd.read_csv(\"data.csv\", sep=\";\")\n        data.info()\n        sumOfConsumption = data['conso'].sum()\n        Kestra.outputs({'sumOfConsumption': int(sumOfConsumption)})")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("requirements")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" pandas\n")])])])]),t._v(" "),e("NextStep",{attrs:{message:"Now that we've covered outputs, let's move on to the next topic: triggers.",link:"../triggers/"}})],1)}),[],!1,null,null,null);s.default=n.exports}}]);