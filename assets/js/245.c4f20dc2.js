(window.webpackJsonp=window.webpackJsonp||[]).push([[245],{950:function(t,a,s){"use strict";s.r(a);var e=s(19),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"errors-and-retries"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#errors-and-retries"}},[t._v("#")]),t._v(" Errors and Retries")]),t._v(" "),s("h2",{attrs:{id:"errors"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#errors"}},[t._v("#")]),t._v(" Errors")]),t._v(" "),s("p",[t._v("When an error occurs during a task, your flow will fail. It can be interesting to execute some actions before terminating the flow, for example, sending mail to your team.")]),t._v(" "),s("p",[t._v("You can handle errors at the global level or the local level. Global-level error handling could involve sending a notification for any failed task, while individual flowable Tasks manage local-level error handling. With local error handling, you can monitor only the important Tasks or clean up specific resources created during execution.")]),t._v(" "),s("h3",{attrs:{id:"defining-an-error-handling"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#defining-an-error-handling"}},[t._v("#")]),t._v(" Defining an error handling")]),t._v(" "),s("p",[t._v("The property "),s("code",[t._v("errors")]),t._v(" is an array of tasks. In the below example, we send a Slack message to notify the team that the flow failed.")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("errors")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" send\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" io.kestra.plugin.notifications.slack.SlackExecution\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("url")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://hooks.slack.com/services/T00000000/B00000000/XXXXXXXXXXXXXXXXXXXXXXXX"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("channel")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"channelId"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("username")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Kestra\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("iconEmoji")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("':kestra:'")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("executionId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"{{ trigger.executionId }}"')]),t._v("\n")])])]),s("p",[t._v("Discover more on the "),s("a",{attrs:{href:"../../developer-guide/errors-handling"}},[t._v("error handling")]),t._v(" documentation.")]),t._v(" "),s("h3",{attrs:{id:"adding-global-error-handling-to-your-flow"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#adding-global-error-handling-to-your-flow"}},[t._v("#")]),t._v(" Adding global error handling to your flow")]),t._v(" "),s("p",[t._v("For simplicity, we will use the "),s("code",[t._v("Log")]),t._v(" Task to replace our mail sending when errors occur. Below "),s("code",[t._v("tasks")]),t._v(", we add the "),s("code",[t._v("errors")]),t._v(" property containing our "),s("code",[t._v("Log")]),t._v(" Task.")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("errors")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" error"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("handling\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" io.kestra.core.tasks.log.Log\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("message")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"An error occurred."')]),t._v("\n")])])]),s("h2",{attrs:{id:"retries"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#retries"}},[t._v("#")]),t._v(" Retries")]),t._v(" "),s("p",[t._v("When a task fails, you can retry it. It is useful when you know that a Task can fail for a specific reason, and you want to retry it a few times before the flow goes down.")]),t._v(" "),s("h3",{attrs:{id:"defining-a-retry"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#defining-a-retry"}},[t._v("#")]),t._v(" Defining a retry")]),t._v(" "),s("p",[t._v("You can add retry to any task with the property "),s("code",[t._v("retry")]),t._v(". The property is an object with at least an ether constant, exponential, or random type."),s("br"),t._v("\nIn this example, we will retry the Task 5 times with a constant interval of 15 minutes.")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("retry")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("maxAttempt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" constant\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("interval")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" PT15M\n")])])]),s("p",[t._v("Learn more about "),s("a",{attrs:{href:"../../developer-guide/retries"}},[t._v("retry")]),t._v(" on the dedicated documentation page.")]),t._v(" "),s("h3",{attrs:{id:"adding-a-retry-to-your-flow"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#adding-a-retry-to-your-flow"}},[t._v("#")]),t._v(" Adding a retry to your flow")]),t._v(" "),s("p",[t._v("However, we have no control over the availability of the file, so it may be necessary to add a "),s("code",[t._v("retry")]),t._v(" to our Task. The retry added with retry the Task every 10 minutes for 1 hour.")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" download\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" io.kestra.plugin.fs.http.Download\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uri")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://www.data.gouv.fr/fr/datasets/r/d33eabc9-e2fd-4787-83e5-a5fcfb5af66d"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("retry")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" constant\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("maxDuration")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" PT1H\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("interval")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" PT10M\n")])])]),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("Click here to see the full flow")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" kestra"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("tutorial\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" io.kestra.tutorial\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("env")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" PRD\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("description")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),s("span",{pre:!0,attrs:{class:"token scalar string"}},[t._v("\n  # Kestra Tutorial\n  As you notice, we can use markdown here.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tasks")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" download\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" io.kestra.plugin.fs.http.Download\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uri")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://www.data.gouv.fr/fr/datasets/r/d33eabc9-e2fd-4787-83e5-a5fcfb5af66d"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("retry")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" constant\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("maxDuration")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" PT1H\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("interval")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" PT10M\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" parallel\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" io.kestra.core.tasks.flows.Parallel\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tasks")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" analyze"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("sum\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" io.kestra.core.tasks.scripts.Python\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("runner")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" DOCKER\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("dockerOptions")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("dockerHost")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" unix"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("///dind/docker.sock\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" python\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("inputFiles")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("data.csv")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"{{outputs.download.uri}}"')]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("main.py")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),s("span",{pre:!0,attrs:{class:"token scalar string"}},[t._v("\n            import pandas as pd\n            from kestra import Kestra\n            data = pd.read_csv(\"data.csv\", sep=\";\")\n            sumOfConsumption = data['conso'].sum()\n            Kestra.outputs({'sumOfConsumption': int(sumOfConsumption)})")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("requirements")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" pandas\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" analyze"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("mean\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" io.kestra.core.tasks.scripts.Python\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("runner")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" DOCKER\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("dockerOptions")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("dockerHost")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" unix"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("///dind/docker.sock\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" python\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("inputFiles")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("data.csv")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"{{outputs.download.uri}}"')]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("main.py")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),s("span",{pre:!0,attrs:{class:"token scalar string"}},[t._v("\n            import pandas as pd\n            from kestra import Kestra\n            data = pd.read_csv(\"data.csv\", sep=\";\")\n            meanOfConsumption = data['conso'].mean()\n            Kestra.outputs({'meanOfConsumption': int(meanOfConsumption)})")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("requirements")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" pandas\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("errors")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" error"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("handling\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" io.kestra.core.tasks.log.Log\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("message")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"An error occurred."')]),t._v("\n")])])])]),t._v(" "),s("NextStep",{attrs:{message:"To provide a more robust and flexible execution environment, Kestra can run task within custom docker.",link:"../dockers/"}})],1)}),[],!1,null,null,null);a.default=n.exports}}]);