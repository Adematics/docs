(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{620:function(t,a,s){t.exports=s.p+"assets/img/inputs.62a412ff.jpg"},724:function(t,a,s){"use strict";s.r(a);var e=s(19),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"inputs"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#inputs"}},[t._v("#")]),t._v(" Inputs")]),t._v(" "),e("p",[t._v("Kestra's flow can be parameterized using inputs. Inputs will be available in variable context and can be used during the whole flow, in order to customize it depending on inputs.")]),t._v(" "),e("p",[t._v("A good example is when an identifier is needed (ex: storeId, paymentId) in order to change the save path for the uploaded files.")]),t._v(" "),e("h2",{attrs:{id:"declaring-inputs"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#declaring-inputs"}},[t._v("#")]),t._v(" Declaring inputs")]),t._v(" "),e("p",[t._v("You can declare as many inputs as necessary for any flow. Input can be "),e("strong",[t._v("required")]),t._v(" or "),e("strong",[t._v("not")]),t._v("."),e("br"),t._v("\nIf the input is required, the flow cannot start if the input is not provided during the creation of the execution."),e("br"),t._v("\nAlso, every input will be parsed during the creation of the execution and any invalid inputs will cause a refusal to create the execution.")]),t._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),e("p",[t._v("If the execution is "),e("strong",[t._v("not created")]),t._v(" due to invalid or missing inputs, no execution will be found on the executions list.")])]),t._v(" "),e("p",[t._v("Examples:")]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" my"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("flow\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" io.kestra.docs\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("inputs")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" STRING\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("required")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" optional\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" STRING\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("required")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("false")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" int\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" INT\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("required")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" float\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" FLOAT\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("required")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" instant\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" DATETIME\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("required")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" my"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("file\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" FILE\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("required")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" optionalFile\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" FILE\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("required")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("false")]),t._v("\n")])])]),e("h2",{attrs:{id:"input-types"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#input-types"}},[t._v("#")]),t._v(" Input types")]),t._v(" "),e("p",[t._v("The available input fields available are as follows:")]),t._v(" "),e("h3",{attrs:{id:"string"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#string"}},[t._v("#")]),t._v(" "),e("code",[t._v("STRING")])]),t._v(" "),e("p",[t._v("No control is done on this input type (no parsing), can be any string.")]),t._v(" "),e("h3",{attrs:{id:"int"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#int"}},[t._v("#")]),t._v(" "),e("code",[t._v("INT")])]),t._v(" "),e("p",[t._v("Must be a valid integer (without any decimals).")]),t._v(" "),e("h3",{attrs:{id:"float"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#float"}},[t._v("#")]),t._v(" "),e("code",[t._v("FLOAT")])]),t._v(" "),e("p",[t._v("Must be a valid float (with any decimals).")]),t._v(" "),e("h3",{attrs:{id:"datetime"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#datetime"}},[t._v("#")]),t._v(" "),e("code",[t._v("DATETIME")])]),t._v(" "),e("p",[t._v("Must be a valid full "),e("a",{attrs:{href:"https://en.wikipedia.org/wiki/ISO_8601",target:"_blank",rel:"noopener noreferrer"}},[t._v("ISO 8601"),e("OutboundLink")],1),t._v(" datetime with the timezone expressed in UTC from a text string such as"),e("br"),t._v(" "),e("code",[t._v("2007-12-03T10:15:30.00Z")]),t._v(".")]),t._v(" "),e("h3",{attrs:{id:"file"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#file"}},[t._v("#")]),t._v(" "),e("code",[t._v("FILE")])]),t._v(" "),e("p",[t._v("Must be a file sent with "),e("code",[t._v("multipart/form-data")]),t._v(". All the files are automatically uploaded to "),e("code",[t._v("Storage")]),t._v(" and are available for further tasks. The return will be a fully qualified url with the form "),e("code",[t._v("kestra:///.../.../")]),t._v(". Kestra is able to handle this url and this input can be passed as is to task.")]),t._v(" "),e("h2",{attrs:{id:"input-properties"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#input-properties"}},[t._v("#")]),t._v(" Input properties")]),t._v(" "),e("p",[t._v("These are the properties available for all input types :")]),t._v(" "),e("h3",{attrs:{id:"name"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#name"}},[t._v("#")]),t._v(" "),e("code",[t._v("name")])]),t._v(" "),e("p",[t._v("The input name to be used with vars "),e("code",{pre:!0},[t._v("{{ inputs.my-name }}")])]),t._v(" "),e("h3",{attrs:{id:"required"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#required"}},[t._v("#")]),t._v(" "),e("code",[t._v("required")])]),t._v(" "),e("p",[t._v("If the input is required. If required, no defaults value and no input provide, the execution will not be created.")]),t._v(" "),e("h3",{attrs:{id:"defaults"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#defaults"}},[t._v("#")]),t._v(" "),e("code",[t._v("defaults")])]),t._v(" "),e("p",[t._v("The default value if no input is provided. Must be a string.")]),t._v(" "),e("h3",{attrs:{id:"description"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#description"}},[t._v("#")]),t._v(" "),e("code",[t._v("description")])]),t._v(" "),e("p",[t._v("A markdown description in order to document the inputs.")]),t._v(" "),e("h2",{attrs:{id:"using-input-value-in-flow"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#using-input-value-in-flow"}},[t._v("#")]),t._v(" Using input value in flow")]),t._v(" "),e("p",[t._v("Every input is available with dynamic variables such as: "),e("code",{pre:!0},[t._v("{{ inputs.NAME }}")]),t._v(".")]),t._v(" "),e("p",[t._v("For example, if you declare your input :")]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("inputs")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" my"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("file\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" FILE\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" my"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("value\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" STRING\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("required")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n")])])]),e("p",[t._v("You can use the value of the inputs with "),e("code",{pre:!0},[t._v("{{ inputs.my-value }}")]),t._v(".")]),t._v(" "),e("h2",{attrs:{id:"send-inputs-programmatically"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#send-inputs-programmatically"}},[t._v("#")]),t._v(" Send inputs programmatically")]),t._v(" "),e("p",[t._v("The flow "),e("code",[t._v("my-flow")]),t._v(" above can be triggered programmatically. Here is an example with "),e("code",[t._v("curl")]),t._v(":")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" -v "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://kestra:8080/api/v1/executions/trigger/io.kestra.docs/my-flow"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    -H "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Transfer-Encoding:chunked"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    -H "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Content-Type:multipart/form-data"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    -F "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("string")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a string"')]),t._v("  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    -F "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("optional")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"an optionnal string"')]),t._v("  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    -F "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("int")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    -F "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("float")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.255")]),t._v("  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    -F "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("instant")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2020")]),t._v("-01-14T23:00:00.000Z "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    -F "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"files=@/tmp/128M.txt;filename=my-file"')]),t._v("\n")])])]),e("p",[t._v("All files must be sent in the form  of data "),e("code",[t._v("files")]),t._v(" with a header "),e("code",[t._v("filename=my-file")]),t._v(", which will be the name of the input.")]),t._v(" "),e("p",[t._v("Here is an example with "),e("code",[t._v("python")]),t._v(":")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" io\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" requests\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" requests_toolbelt"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("multipart"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("encoder "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" MultipartEncoder\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("open")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/tmp/128M.txt"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'rb'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" fh"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  url "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string-interpolation"}},[e("span",{pre:!0,attrs:{class:"token string"}},[t._v('f"http://kestra:8080/api/v1/executions/trigger/io.kestra.docs/my-flow"')])]),t._v("\n  mp_encoder "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" MultipartEncoder"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fields"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"string"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a string"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"optional"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"an optionnal string"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"int"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"float"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.255")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"instant"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2020-01-14T23:00:00.000Z"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"files"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"file"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" fh"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"text/plain"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  result "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" requests"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("post"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      url"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      data"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("mp_encoder"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      headers"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Content-Type"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" mp_encoder"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("content_type"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h2",{attrs:{id:"send-inputs-via-webui"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#send-inputs-via-webui"}},[t._v("#")]),t._v(" Send inputs via WebUI")]),t._v(" "),e("p",[t._v("With such a flow, the web ui lets you enter some inputs by generating a form accordingly on the flow > trigger view. The input form for the task above looks like below:")]),t._v(" "),e("p",[e("img",{attrs:{src:s(620),alt:"Flow inputs"}})]),t._v(" "),e("p",[t._v("Once the inputs are provided, you can trigger an execution flow that will run with "),e("a",{attrs:{href:"/docs/dynamic-fields"}},[t._v("contextual inputs")]),t._v(" as task variables.")])])}),[],!1,null,null,null);a.default=n.exports}}]);