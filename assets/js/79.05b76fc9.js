(window.webpackJsonp=window.webpackJsonp||[]).push([[79],{774:function(e,t,a){"use strict";a.r(t);var s=a(19),n=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"execution"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#execution"}},[e._v("#")]),e._v(" Execution")]),e._v(" "),a("p",[e._v("An execution is a single run of a flow. An execution in Kestra can exist in many "),a("a",{attrs:{href:"#state"}},[e._v("states")]),e._v(".")]),e._v(" "),a("h2",{attrs:{id:"task-run"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#task-run"}},[e._v("#")]),e._v(" Task Run")]),e._v(" "),a("p",[e._v("A task run is a task that has been executed. A task run has associated data like Execution Id, State, Start date, End date, etc.")]),e._v(" "),a("h2",{attrs:{id:"attempts"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#attempts"}},[e._v("#")]),e._v(" Attempts")]),e._v(" "),a("p",[e._v("Each task run will produce one or more attempts. Most task runs will have only one attempt, but you can configure "),a("a",{attrs:{href:"../developer-guide/retries"}},[e._v("retries")]),e._v(" for a task. If retries have been configured, they will generate new attempts for each failed task run.")]),e._v(" "),a("h2",{attrs:{id:"outputs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#outputs"}},[e._v("#")]),e._v(" Outputs")]),e._v(" "),a("p",[e._v("Each task can generate output data that other tasks of the current execution can use.")]),e._v(" "),a("h2",{attrs:{id:"metrics"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#metrics"}},[e._v("#")]),e._v(" Metrics")]),e._v(" "),a("p",[e._v("Each task can generate metrics data that may be useful in understanding what the current task is doing. For example, "),a("code",[e._v("file.size")]),e._v(", "),a("code",[e._v("row.count")]),e._v(", etc.")]),e._v(" "),a("p",[e._v("There are two kinds of metrics, duration, and counter.")]),e._v(" "),a("h2",{attrs:{id:"state"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#state"}},[e._v("#")]),e._v(" State")]),e._v(" "),a("p",[e._v("An Execution or a Task Run can be in a particular state.")]),e._v(" "),a("p",[e._v("There are nine possible states:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("CREATED")]),e._v(": The Execution or Task Run is waiting to be processed. This state usually means that the Execution is in a queue and has yet to be started.")]),e._v(" "),a("li",[a("code",[e._v("RUNNING")]),e._v(": The Execution or Task Run is currently running.")]),e._v(" "),a("li",[a("code",[e._v("PAUSED")]),e._v(": The Execution or Task Run has been paused. This status is used for two reasons:\n"),a("ul",[a("li",[e._v("Manual validation")]),e._v(" "),a("li",[e._v("Delay (for a specified duration before continuing the execution)")])])]),e._v(" "),a("li",[a("code",[e._v("SUCCESS")]),e._v(": The Execution or Task Run has been completed successfully.")]),e._v(" "),a("li",[a("code",[e._v("WARNING")]),e._v(": The Execution or Task Run exhibited unintended behavior, but the execution continued and was flagged with a warning.")]),e._v(" "),a("li",[a("code",[e._v("FAILED")]),e._v(": The Execution or Task Run exhibited unintended behavior that caused the execution to fail.")]),e._v(" "),a("li",[a("code",[e._v("KILLING")]),e._v(": A command was issued that asked for the Execution or Task Run to be killed. The system is in the process of killing the associated tasks.")]),e._v(" "),a("li",[a("code",[e._v("KILLED")]),e._v(": An Execution or Task Run was killed (upon request), and no more tasks will run for it.")]),e._v(" "),a("li",[a("code",[e._v("RESTARTED")]),e._v(": This status is transitive. It means "),a("code",[e._v("CREATED")]),e._v(", but for a process that has already been executed, failed, and has been restarted.")])])])}),[],!1,null,null,null);t.default=n.exports}}]);