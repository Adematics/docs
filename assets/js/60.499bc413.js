(window.webpackJsonp=window.webpackJsonp||[]).push([[60],{758:function(t,e,a){"use strict";a.r(e);var o=a(19),s=Object(o.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"configuration"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#configuration"}},[t._v("#")]),t._v(" Configuration")]),t._v(" "),a("p",[t._v("Kestra offers a lot of configuration options and customization.")]),t._v(" "),a("p",[t._v("How to pass those configuration options depends on how you deploy Kestra. Check the "),a("RouterLink",{attrs:{to:"/docs/administrator-guide/deployment/"}},[t._v("deployment")]),t._v(" section related to you deployment mode for more information.")],1),t._v(" "),a("h2",{attrs:{id:"kestra-internal-components-configuration"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#kestra-internal-components-configuration"}},[t._v("#")]),t._v(" Kestra internal components configuration")]),t._v(" "),a("p",[t._v("Kestra has three internal components that must be configured:")]),t._v(" "),a("ul",[a("li",[t._v("The Internal Storage.")]),t._v(" "),a("li",[t._v("The Queue.")]),t._v(" "),a("li",[t._v("The Repository.")])]),t._v(" "),a("h3",{attrs:{id:"internal-storage-configuration"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#internal-storage-configuration"}},[t._v("#")]),t._v(" Internal storage configuration")]),t._v(" "),a("p",[t._v("Kestra supports multiple internal storage types, the default being the local storage that will store data inside a local folder on the host filesystem. "),a("strong",[t._v("Only suitable for local testing")]),t._v(" as it doesn't provide resiliency or redundancy.")]),t._v(" "),a("p",[t._v("To choose another storage type, you will need to configure the "),a("code",[t._v("kestra.storage.type")]),t._v(" option, be sure to download the corresponding plugins first. The following example configures "),a("RouterLink",{attrs:{to:"/docs/administrator-guide/configuration/storage/#gcs"}},[t._v("Google Cloud Storage")]),t._v(" for internal storage.")],1),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kestra")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("storage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" gcs\n")])])]),a("p",[t._v("Details about storage configuration can be found "),a("a",{attrs:{href:"./storage"}},[t._v("here")]),t._v(".")]),t._v(" "),a("h3",{attrs:{id:"queue-configuration"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#queue-configuration"}},[t._v("#")]),t._v(" Queue configuration")]),t._v(" "),a("p",[t._v("Kestra supports multiple queue types, the default depends on your "),a("RouterLink",{attrs:{to:"/docs/administrator-guide/deployment/"}},[t._v("installation")]),t._v(" mode.")],1),t._v(" "),a("p",[t._v("The queue type must be compatible with the repository type. Not all combinations are possible.")]),t._v(" "),a("p",[t._v("The following queue types are available:")]),t._v(" "),a("ul",[a("li",[t._v("In-memory that must be used with the in-memory repository. It is "),a("strong",[t._v("only suitable for local testing")]),t._v(" as it doesn't provide any resiliency or scalability and didn't implement all functionalities.")]),t._v(" "),a("li",[t._v("Database that must be used with the database repository. It currently supports H2, MySQL, and PostgreSQL as a database.")]),t._v(" "),a("li",[t._v("Kafka that must be used with the Elasticsearch repository. Those are "),a("strong",[t._v("only available inside the Enterprise Edition")]),t._v(".")])]),t._v(" "),a("p",[t._v("To enable the PostgreSQL database queue, you need to add the following to your configuration files:")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kestra")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("queue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" postgres\n")])])]),a("p",[t._v("Details about the database configuration can be found "),a("RouterLink",{attrs:{to:"/docs/administrator-guide/configuration/databases/"}},[t._v("here")]),t._v(" and about the Kafka configuration "),a("a",{attrs:{href:"./kafka"}},[t._v("here")]),t._v(".")],1),t._v(" "),a("h3",{attrs:{id:"repository-configuration"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#repository-configuration"}},[t._v("#")]),t._v(" Repository configuration")]),t._v(" "),a("p",[t._v("Kestra supports multiple repository types, the default depends on your "),a("RouterLink",{attrs:{to:"/docs/administrator-guide/deployment/"}},[t._v("installation")]),t._v(" mode.")],1),t._v(" "),a("p",[t._v("The repository type must be compatible with the queue type. Not all combinations are possible.")]),t._v(" "),a("p",[t._v("The following repository types are available:")]),t._v(" "),a("ul",[a("li",[t._v("In-memory that must be used with the in-memory queue.  It is "),a("strong",[t._v("only suitable for local testing")]),t._v(" as it doesn't provide any resiliency or scalability and didn't implement all functionalities.")]),t._v(" "),a("li",[t._v("Database that must be used with the database queue. It currently supports H2, MySQL or PostgreSQL as a database.")]),t._v(" "),a("li",[t._v("Elasticsearch that must be used with the Kafka queue. Those are "),a("strong",[t._v("only available inside the Enterprise Edition")]),t._v(".")])]),t._v(" "),a("p",[t._v("To enable the PostgreSQL database repository, you need to add the following to your configuration files:")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kestra")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("repository")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" postgres\n")])])]),a("p",[t._v("Details about the database configuration can be found "),a("RouterLink",{attrs:{to:"/docs/administrator-guide/configuration/databases/"}},[t._v("here")]),t._v(" and about the Elasticsearch configuration "),a("a",{attrs:{href:"./elasticsearch"}},[t._v("here")]),t._v(".")],1),t._v(" "),a("h2",{attrs:{id:"other-kestra-configuration"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#other-kestra-configuration"}},[t._v("#")]),t._v(" Other Kestra configuration")]),t._v(" "),a("p",[t._v("Other Kestra configuration options can be found "),a("a",{attrs:{href:"./others"}},[t._v("here")]),t._v(".")]),t._v(" "),a("h2",{attrs:{id:"micronaut-configuration"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#micronaut-configuration"}},[t._v("#")]),t._v(" Micronaut configuration")]),t._v(" "),a("p",[t._v("As Kestra is a Java-based application built with Micronaut, you can configure any Micronaut configuration options. More details "),a("a",{attrs:{href:"./micronaut"}},[t._v("here")]),t._v(".")])])}),[],!1,null,null,null);e.default=s.exports}}]);