(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{421:function(t,a,s){"use strict";s.r(a);var e=s(25),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"conditions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#conditions"}},[t._v("#")]),t._v(" Conditions")]),t._v(" "),s("p",[t._v("Conditions are use in "),s("a",{attrs:{href:"../triggers"}},[t._v("Triggers")]),t._v(" & "),s("a",{attrs:{href:"../listeners"}},[t._v("Listeners")]),t._v(" in order to limit the case this one could happen."),s("br"),t._v("\nFor example:")]),t._v(" "),s("ul",[s("li",[t._v("you can limit the listeners to only specified status")]),t._v(" "),s("li",[t._v("you can limit triggers to specified namespace prefix")]),t._v(" "),s("li",[t._v("....")])]),t._v(" "),s("p",[t._v("You can pass a list of conditions and all the conditions must match to enable the current action.")]),t._v(" "),s("p",[t._v("Available conditions are :")]),t._v(" "),s("h2",{attrs:{id:"executionstatuscondition"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#executionstatuscondition"}},[t._v("#")]),t._v(" ExecutionStatusCondition")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"org.kestra.core.models.conditions.types.ExecutionStatusCondition"')]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("Condition based on execution status")])]),t._v(" "),s("p",[t._v("Examples :")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("conditions")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" org.kestra.core.models.conditions.types.ExecutionStatusCondition\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("in")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" SUCCESS\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("notIn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n          "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" FAILED\n")])])]),s("h3",{attrs:{id:"inputs"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#inputs"}},[t._v("#")]),t._v(" Inputs")]),t._v(" "),s("h4",{attrs:{id:"in"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#in"}},[t._v("#")]),t._v(" "),s("code",[t._v("in")])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("Type:")]),t._v(" "),s("Badge",{attrs:{vertical:"middle",text:"List<org.kestra.core.models.flows.State.Type>"}})],1),t._v(" "),s("li",[s("strong",[t._v("Required:")]),t._v(" ❌")])]),t._v(" "),s("blockquote",[s("p",[t._v("List of state that are authorized")])]),t._v(" "),s("h4",{attrs:{id:"notin"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#notin"}},[t._v("#")]),t._v(" "),s("code",[t._v("notIn")])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("Type:")]),t._v(" "),s("Badge",{attrs:{vertical:"middle",text:"List<org.kestra.core.models.flows.State.Type>"}})],1),t._v(" "),s("li",[s("strong",[t._v("Required:")]),t._v(" ❌")])]),t._v(" "),s("blockquote",[s("p",[t._v("List of state that aren't authorized")])]),t._v(" "),s("h2",{attrs:{id:"flowcondition"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#flowcondition"}},[t._v("#")]),t._v(" FlowCondition")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"org.kestra.core.models.conditions.types.FlowCondition"')]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("Condition for a specific flow")])]),t._v(" "),s("p",[t._v("Examples :")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("conditions")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" org.kestra.core.models.conditions.types.FlowCondition\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" org.kestra.tests\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("flowId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" my"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("current"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("flow\n")])])]),s("h3",{attrs:{id:"inputs-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#inputs-2"}},[t._v("#")]),t._v(" Inputs")]),t._v(" "),s("h4",{attrs:{id:"namespace"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#namespace"}},[t._v("#")]),t._v(" "),s("code",[t._v("namespace")])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("Type:")]),t._v(" "),s("Badge",{attrs:{vertical:"middle",text:"String"}})],1),t._v(" "),s("li",[s("strong",[t._v("Required:")]),t._v(" ✔")])]),t._v(" "),s("blockquote",[s("p",[t._v("The namespace of the flow")])]),t._v(" "),s("h4",{attrs:{id:"flowid"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#flowid"}},[t._v("#")]),t._v(" "),s("code",[t._v("flowId")])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("Type:")]),t._v(" "),s("Badge",{attrs:{vertical:"middle",text:"String"}})],1),t._v(" "),s("li",[s("strong",[t._v("Required:")]),t._v(" ✔")])]),t._v(" "),s("blockquote",[s("p",[t._v("The flow id")])]),t._v(" "),s("h2",{attrs:{id:"namespacecondition"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#namespacecondition"}},[t._v("#")]),t._v(" NamespaceCondition")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"org.kestra.core.models.conditions.types.NamespaceCondition"')]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("Condition for a specific flow")])]),t._v(" "),s("p",[t._v("Examples :")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("conditions")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" org.kestra.core.models.conditions.types.NamespaceCondition\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" org.kestra.tests\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("prefix")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n")])])]),s("h3",{attrs:{id:"inputs-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#inputs-3"}},[t._v("#")]),t._v(" Inputs")]),t._v(" "),s("h4",{attrs:{id:"namespace-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#namespace-2"}},[t._v("#")]),t._v(" "),s("code",[t._v("namespace")])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("Type:")]),t._v(" "),s("Badge",{attrs:{vertical:"middle",text:"String"}})],1),t._v(" "),s("li",[s("strong",[t._v("Required:")]),t._v(" ✔")])]),t._v(" "),s("blockquote",[s("p",[t._v("The namespace of the flow or the prefix if "),s("code",[t._v("prefix")]),t._v(" is true")])]),t._v(" "),s("h4",{attrs:{id:"prefix"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#prefix"}},[t._v("#")]),t._v(" "),s("code",[t._v("prefix")])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("Type:")]),t._v(" "),s("Badge",{attrs:{vertical:"middle",text:"Boolean"}})],1),t._v(" "),s("li",[s("strong",[t._v("Required:")]),t._v(" ❌")]),t._v(" "),s("li",[s("strong",[t._v("Default:")]),t._v(" "),s("code",[t._v("false")])])]),t._v(" "),s("blockquote",[s("p",[t._v("If we must look at the flow namespace by prefix (simple startWith case sensitive)")])])])}),[],!1,null,null,null);a.default=n.exports}}]);