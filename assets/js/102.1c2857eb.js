(window.webpackJsonp=window.webpackJsonp||[]).push([[102],{806:function(t,e,a){"use strict";a.r(e);var s=a(19),r=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"variables"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#variables"}},[t._v("#")]),t._v(" Variables")]),t._v(" "),a("p",[t._v("You can use variables to set any task property. They use the power of "),a("a",{attrs:{href:"https://pebbletemplates.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Pebble Templates"),a("OutboundLink")],1),t._v(" with Kestra's special context system, allowing powerful task composition inside a flow.")]),t._v(" "),a("p",[t._v("Variables can use flow execution contextual information registered inside the execution context. The execution context is a set of data from different sources: flow and execution, environment variables, global variables, task defaults, flow inputs, and task outputs.")]),t._v(" "),a("h2",{attrs:{id:"flow-and-execution-variables"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flow-and-execution-variables"}},[t._v("#")]),t._v(" Flow and Execution variables")]),t._v(" "),a("p",[t._v("Flow and Execution variables allow using the current execution context to set task properties. For example: name a file with the current date or the current execution id.")]),t._v(" "),a("p",[t._v("The following table lists all the default variables available on each execution.")]),t._v(" "),a("div",{staticClass:"table-responsive"},[a("table",{staticClass:"table table-bordered table-hover table-striped"},[a("thead",[a("tr",[a("th",[t._v("Parameter")]),t._v(" "),a("th",[t._v("Description")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",{pre:!0},[t._v("{{ flow.id }}")])]),t._v(" "),a("td",[t._v("The identifier of the flow.")])]),t._v(" "),a("tr",[a("td",[a("code",{pre:!0},[t._v("{{ flow.namespace }}")])]),t._v(" "),a("td",[t._v("The name of the flow namespace.")])]),t._v(" "),a("tr",[a("td",[a("code",{pre:!0},[t._v("{{ flow.revision }}")])]),t._v(" "),a("td",[t._v("The revision of the flow.")])]),t._v(" "),a("tr",[a("td",[a("code",{pre:!0},[t._v("{{ execution.id }}")])]),t._v(" "),a("td",[t._v("The execution ID, a generated unique id for each execution.")])]),t._v(" "),a("tr",[a("td",[a("code",{pre:!0},[t._v("{{ execution.startDate }}")])]),t._v(" "),a("td",[t._v("The start date of the current execution, can be formatted with "),a("code",{pre:!0},[t._v('{{ execution.startDate | date("yyyy-MM-dd HH:mm:ss.SSSSSS") }}')]),t._v(".")])]),t._v(" "),a("tr",[a("td",[a("code",{pre:!0},[t._v("{{ execution.originalId }}")])]),t._v(" "),a("td",[t._v("The original execution ID, this id will never change even in case of replay and keep the first execution ID.")])]),t._v(" "),a("tr",[a("td",[a("code",{pre:!0},[t._v("{{ task.id }}")])]),t._v(" "),a("td",[t._v("The current task ID")])]),t._v(" "),a("tr",[a("td",[a("code",{pre:!0},[t._v("{{ task.type }}")])]),t._v(" "),a("td",[t._v("The current task Type (Java fully qualified class name).")])]),t._v(" "),a("tr",[a("td",[a("code",{pre:!0},[t._v("{{ taskrun.id }}")])]),t._v(" "),a("td",[t._v("The current task run ID.")])]),t._v(" "),a("tr",[a("td",[a("code",{pre:!0},[t._v("{{ taskrun.startDate }}")])]),t._v(" "),a("td",[t._v("The current task run start date.")])]),t._v(" "),a("tr",[a("td",[a("code",{pre:!0},[t._v("{{ taskrun.parentId }}")])]),t._v(" "),a("td",[t._v("The current task run parent identifier. Only available with tasks inside a  ("),a("RouterLink",{attrs:{to:"/docs/developer-guide/tasks/#flowable-tasks"}},[t._v("Flowable Task")]),t._v(").")],1)]),t._v(" "),a("tr",[a("td",[a("code",{pre:!0},[t._v("{{ taskrun.value }}")])]),t._v(" "),a("td",[t._v("The value of the current task run, only available with tasks inside a ("),a("RouterLink",{attrs:{to:"/docs/developer-guide/tasks/#flowable-tasks"}},[t._v("Flowable Task")]),t._v(").")],1)]),t._v(" "),a("tr",[a("td",[a("code",{pre:!0},[t._v("{{ taskrun.attemptsCount }}")])]),t._v(" "),a("td",[t._v("The number of attempts for the current task (when retry or restart is performed).")])]),t._v(" "),a("tr",[a("td",[a("code",{pre:!0},[t._v("{{ parent.taskrun.value }}")])]),t._v(" "),a("td",[t._v("The value of the closest (first) parent task run "),a("RouterLink",{attrs:{to:"/docs/developer-guide/tasks/#flowable-tasks"}},[t._v("Flowable Task")]),t._v(", only available with tasks inside a ("),a("RouterLink",{attrs:{to:"/docs/developer-guide/tasks/#flowable-tasks"}},[t._v("Flowable Task")]),t._v(").")],1)]),t._v(" "),a("tr",[a("td",[a("code",{pre:!0},[t._v("{{ parent.outputs }}")])]),t._v(" "),a("td",[t._v("The outputs of the closest (first) parent task run "),a("RouterLink",{attrs:{to:"/docs/developer-guide/tasks/#flowable-tasks"}},[t._v("Flowable Task")]),t._v(", only available with tasks inside in a ("),a("RouterLink",{attrs:{to:"/docs/developer-guide/tasks/#flowable-tasks"}},[t._v("Flowable Task")]),t._v(").")],1)]),t._v(" "),a("tr",[a("td",[a("code",{pre:!0},[t._v("{{ parents }}")])]),t._v(" "),a("td",[t._v("The list of parent tasks, only available with tasks inside a ("),a("RouterLink",{attrs:{to:"/docs/developer-guide/tasks/#flowable-tasks"}},[t._v("Flowable Task")]),t._v("). See "),a("RouterLink",{attrs:{to:"/docs/developer-guide/variables/basic-usage.html#parents-with-flowable-task"}},[t._v("Parents variables")]),t._v(" for its usage.")],1)])])])]),a("p",[t._v("If a "),a("RouterLink",{attrs:{to:"/docs/developer-guide/triggers/schedule.html"}},[t._v("schedule")]),t._v(" event triggers the flow, these variables are also available:")],1),t._v(" "),a("div",{staticClass:"table-responsive"},[a("table",{staticClass:"table table-bordered table-hover table-striped"},[a("thead",[a("tr",[a("th",[t._v("Parameter")]),t._v(" "),a("th",[t._v("Description")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",{pre:!0},[t._v("{{ schedule.date }}")])]),t._v(" "),a("td",[t._v("The date of the current schedule.")])]),t._v(" "),a("tr",[a("td",[a("code",{pre:!0},[t._v("{{ schedule.next }}")])]),t._v(" "),a("td",[t._v("The date of the next schedule.")])]),t._v(" "),a("tr",[a("td",[a("code",{pre:!0},[t._v("{{ schedule.previous }}")])]),t._v(" "),a("td",[t._v("The date of the previous schedule.")])])])])]),a("p",[t._v("If a "),a("RouterLink",{attrs:{to:"/docs/developer-guide/triggers/flow.html"}},[t._v("flow")]),t._v(" event triggers the flow, these variables are also available:")],1),t._v(" "),a("div",{staticClass:"table-responsive"},[a("table",{staticClass:"table table-bordered table-hover table-striped"},[a("thead",[a("tr",[a("th",[t._v("Parameter")]),t._v(" "),a("th",[t._v("Description")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",{pre:!0},[t._v("{{ trigger.executionId }}")])]),t._v(" "),a("td",[t._v("The ID of the execution that triggers the current flow.")])]),t._v(" "),a("tr",[a("td",[a("code",{pre:!0},[t._v("{{ trigger.namespace }}")])]),t._v(" "),a("td",[t._v("The namespace of the flow that triggers the current flow.")])]),t._v(" "),a("tr",[a("td",[a("code",{pre:!0},[t._v("{{ trigger.flowId }}")])]),t._v(" "),a("td",[t._v("The ID of the flow that triggers the current flow.")])]),t._v(" "),a("tr",[a("td",[a("code",{pre:!0},[t._v("{{ trigger.flowRevision }}")])]),t._v(" "),a("td",[t._v("The revision of the flow that triggers the current flow.")])])])])]),a("p",[t._v("All these variables can be used thanks to the Pebble template syntax "),a("code",{pre:!0},[t._v("{{varName}}")]),t._v(":")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("example\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" io.kestra.tests\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tasks")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" echo\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" io.kestra.core.tasks.debugs.Return\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("format")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token scalar string"}},[t._v('\n      taskid: {{task.id}}\n      date: {{  execution.startDate | date("yyyy-MM-dd HH:mm:ss.SSSSSS") }}')]),t._v("\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[a("code",{pre:!0},[t._v('{{ execution.startDate | date("yyyy-MM-dd HH:mm:ss.SSSSSS") }}')]),t._v(" uses the "),a("code",[t._v("date")]),t._v(" filter to format the "),a("code",[t._v("execution.startDate")]),t._v(" variable with the date pattern "),a("code",[t._v("yyyy-MM-dd HH:mm:ss.SSSSSS")]),t._v(". More information on filters "),a("RouterLink",{attrs:{to:"/docs/developer-guide/variables/filter/"}},[t._v("here")]),t._v(".")],1)]),t._v(" "),a("h2",{attrs:{id:"environment-variables"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#environment-variables"}},[t._v("#")]),t._v(" Environment variables")]),t._v(" "),a("p",[t._v("By default, Kestra allows access to environment variables that start with "),a("code",[t._v("KESTRA_")]),t._v(" unless configured otherwise, see "),a("RouterLink",{attrs:{to:"/docs/administrator-guide/configuration/others/#variables-configuration"}},[t._v("Variables configuration")]),t._v(".")],1),t._v(" "),a("p",[t._v("To access an environment variable "),a("code",[t._v("KESTRA_FOO")]),t._v(" from one of your tasks, you can use "),a("code",{pre:!0},[t._v("{{ envs.foo }}")]),t._v(", the variable's name is the part after the "),a("code",[t._v("KESTRA_")]),t._v(" prefix in "),a("strong",[t._v("lowercase")]),t._v(".")]),t._v(" "),a("h2",{attrs:{id:"global-variables"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#global-variables"}},[t._v("#")]),t._v(" Global variables")]),t._v(" "),a("p",[t._v("You can define global variables inside Kestra's configuration files and access them using "),a("code",{pre:!0},[t._v("{{ globals.foo }}")]),t._v(", see "),a("RouterLink",{attrs:{to:"/docs/administrator-guide/configuration/others/#variables-configuration"}},[t._v("Variables configuration")]),t._v(" for more information.")],1),t._v(" "),a("h2",{attrs:{id:"inputs-variables"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#inputs-variables"}},[t._v("#")]),t._v(" Inputs variables")]),t._v(" "),a("p",[t._v("You can use any flow "),a("RouterLink",{attrs:{to:"/docs/developer-guide/inputs/"}},[t._v("inputs")]),t._v(" using "),a("code",[t._v("inputs.inputName")]),t._v(", for example:")],1),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("inputs\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" io.kestra.tests\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("inputs")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" myInput\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" STRING\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tasks")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" myTask\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" io.kestra.core.tasks.debugs.Return\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("format")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"{{inputs.myInput}}"')]),t._v("\n")])])]),a("h2",{attrs:{id:"outputs-variables"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#outputs-variables"}},[t._v("#")]),t._v(" Outputs variables")]),t._v(" "),a("p",[t._v("You can use any task "),a("RouterLink",{attrs:{to:"/docs/developer-guide/outputs/"}},[t._v("output")]),t._v(" attributes using "),a("code",[t._v("outputs.taskId.outputAttribute")]),t._v(" where:")],1),t._v(" "),a("ul",[a("li",[a("code",[t._v("taskId")]),t._v(" is the ID of the task.")]),t._v(" "),a("li",[a("code",[t._v("outputAttribute")]),t._v(" is the attribute of the task output you want to use. Each task output can emit different attributes; refer to the task documentation for the list of output attributes.")])]),t._v(" "),a("p",[t._v("Example:")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("outputs\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" io.kestra.tests\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tasks")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" firstExample\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" io.kestra.core.tasks.debugs.Return\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("format")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"First return"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" second"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("example\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" io.kestra.core.tasks.debugs.Return\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("format")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Second return"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" log"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("both"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("variables\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" io.kestra.core.tasks.debugs.Echo\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("format")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"First: {{outputs.firstExample.value}}, Second: {{outputs['second-example'].value}}\"")]),t._v("\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("The "),a("code",[t._v("Return")]),t._v(" task has an output attribute "),a("code",[t._v("value")]),t._v(" which is used by the "),a("code",[t._v("log-both-variables")]),t._v(" task."),a("br"),t._v("\nIn the "),a("code",[t._v("log-both-variables")]),t._v(" task, you can see two ways to access task outputs: the dot notation ("),a("code",[t._v("outputs.firstExample")]),t._v(") and the subscript notation ("),a("code",[t._v("outputs['second-example']")]),t._v("). The subscript notation must be used when a variable contains a special character, such as "),a("code",[t._v("-")]),t._v(" that is a Pebble reserved character.")])]),t._v(" "),a("h2",{attrs:{id:"pebble-templating"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pebble-templating"}},[t._v("#")]),t._v(" Pebble templating")]),t._v(" "),a("p",[t._v("Pebble templating offers various ways to process variables, see:")]),t._v(" "),a("ChildTableOfContents",{attrs:{max:1}})],1)}),[],!1,null,null,null);e.default=r.exports}}]);