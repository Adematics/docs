(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{257:function(t,e,a){"use strict";a.r(e);var s=a(0),r=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"retries"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#retries"}},[t._v("#")]),t._v(" Retries")]),t._v(" "),a("p",[t._v("Kestra provide some task retry feature. This sub system makes it convinient to add "),a("strong",[t._v("failed executions")]),t._v(" retry behavior depending on retry configuration in flow description.")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("note")]),t._v(" "),a("p",[t._v("When an execution is beeing retried, a new execution is generated with same exact input data that were used for current execution. It is entirely indemendent, however it is related to the retried execution with a "),a("code",[t._v("parentId")]),t._v(" property in the new execution that references the retried execution id.")])]),t._v(" "),a("h2",{attrs:{id:"exemple"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#exemple"}},[t._v("#")]),t._v(" Exemple")]),t._v(" "),a("p",[t._v("Below a flow sample that retry execute a task on failure maximum 5 times each 15 minutes :")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" retry"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("sample\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" org.kestra.core.tasks.debugs.Echo\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("format")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" my output for task "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("task.id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("timeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("retry")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("maxAttempt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" constant\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("interval")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" PT15M\n")])])]),a("h2",{attrs:{id:"retry-options"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#retry-options"}},[t._v("#")]),t._v(" Retry options")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("name")]),t._v(" "),a("th",[t._v("type")]),t._v(" "),a("th",[t._v("description")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("maxAttempt")]),t._v(" "),a("td",[t._v("integer")]),t._v(" "),a("td",[t._v("Number of retries performed before the system stops retry.")])]),t._v(" "),a("tr",[a("td",[t._v("maxDuration")]),t._v(" "),a("td",[t._v("duration")]),t._v(" "),a("td",[t._v("Maxium delay the execution is retried. Once passed, the task is no more processed")])]),t._v(" "),a("tr",[a("td",[t._v("type")]),t._v(" "),a("td",[t._v("string")]),t._v(" "),a("td",[t._v("Retry behavior to apply. Can be one of "),a("code",[t._v("constant")]),t._v(", "),a("code",[t._v("exponential")]),t._v(", "),a("code",[t._v("random")]),t._v(".")])]),t._v(" "),a("tr",[a("td",[t._v("interval")]),t._v(" "),a("td",[t._v("delay")]),t._v(" "),a("td",[t._v("Duration between each retry.")])])])]),t._v(" "),a("h3",{attrs:{id:"duration"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#duration"}},[t._v("#")]),t._v(" Duration")]),t._v(" "),a("p",[t._v("Some of the option above have to be filled with duration notation. Durations are expressed with the following forms:")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("notation")]),t._v(" "),a("th",[t._v("description")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("PT0.250S")]),t._v(" "),a("td",[t._v("250 milliseconds delay")])]),t._v(" "),a("tr",[a("td",[t._v("PT2S")]),t._v(" "),a("td",[t._v("2 seconds delay")])]),t._v(" "),a("tr",[a("td",[t._v("PT1M")]),t._v(" "),a("td",[t._v("1 minute delay")])]),t._v(" "),a("tr",[a("td",[t._v("PT3.5H")]),t._v(" "),a("td",[t._v("3 hours and a half delay")])])])]),t._v(" "),a("h3",{attrs:{id:"retry-types"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#retry-types"}},[t._v("#")]),t._v(" Retry types")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("name")]),t._v(" "),a("th",[t._v("description")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("constant")]),t._v(" "),a("td",[t._v("Constant retry times, when time is set to 10 minutes it retries each 10 minutes")])]),t._v(" "),a("tr",[a("td",[t._v("exponential")]),t._v(" "),a("td",[t._v("Retry behavior that waits longer between each retry e.g. 1s, 5s, 15s ...")])]),t._v(" "),a("tr",[a("td",[t._v("random")]),t._v(" "),a("td",[t._v("Retry with random delay with min and max limits")])])])])])}),[],!1,null,null,null);e.default=r.exports}}]);