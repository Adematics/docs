(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[]]);!function(e){function t(t){for(var r,i,s=t[0],l=t[1],c=t[2],d=0,p=[];d<s.length;d++)i=s[d],Object.prototype.hasOwnProperty.call(a,i)&&a[i]&&p.push(a[i][0]),a[i]=0;for(r in l)Object.prototype.hasOwnProperty.call(l,r)&&(e[r]=l[r]);for(u&&u(t);p.length;)p.shift()();return o.push.apply(o,c||[]),n()}function n(){for(var e,t=0;t<o.length;t++){for(var n=o[t],r=!0,s=1;s<n.length;s++){var l=n[s];0!==a[l]&&(r=!1)}r&&(o.splice(t--,1),e=i(i.s=n[0]))}return e}var r={},a={2:0},o=[];function i(t){if(r[t])return r[t].exports;var n=r[t]={i:t,l:!1,exports:{}};return e[t].call(n.exports,n,n.exports,i),n.l=!0,n.exports}i.e=function(e){var t=[],n=a[e];if(0!==n)if(n)t.push(n[2]);else{var r=new Promise((function(t,r){n=a[e]=[t,r]}));t.push(n[2]=r);var o,s=document.createElement("script");s.charset="utf-8",s.timeout=120,i.nc&&s.setAttribute("nonce",i.nc),s.src=function(e){return i.p+"assets/js/"+({}[e]||e)+"."+{1:"2279c4bb",3:"b454af1f",4:"fdedf5bb",5:"f2f8de7d",6:"5d5a806c",7:"0e05d499",8:"5739db43",9:"91ee60b8",10:"e542b062",11:"5c0866a5",12:"28268d2a",13:"d6250aeb",14:"0f52d6fc",15:"f2300dd7",16:"838d2fd2",17:"06049644",18:"15648c87",19:"08cae7a7",20:"8e75f3a1",21:"a1be2be2",22:"5b2b62f9",23:"47889b1b",24:"2f328819",25:"5a19617c",26:"1d50447f",27:"8e00c721",28:"7a7a6321",29:"756fa9c5",30:"1e56b2aa",31:"371d6226",32:"b4535c7f",33:"a28cecfb",34:"be26e040",35:"b4abe7ed",36:"71a0f6b8",37:"c16f766e",38:"658069b6",39:"42b8bce5",40:"c716b93b",41:"17f879ac",42:"89c3dad5",43:"703ad274",44:"b64fd43b",45:"dcae74e5",46:"1b5b6f1e",47:"00454813",48:"3bab58b2",49:"ef7031ec",50:"dbc07c45",51:"89911f07",52:"fca43f93",53:"3cfa6671",54:"d8afdc7f",55:"f9f4049b",56:"2f816faa",57:"c01a3827",58:"2a699fb7",59:"545667ae",60:"f458bfd6",61:"db366d48",62:"2185ceab",63:"4312aaee",64:"eb9fc980",65:"8c76fdb8",66:"a05f2c59",67:"d23126c5",68:"476306c1",69:"0440dced",70:"52f8eb33",71:"2f3b22b5",72:"c0725769",73:"81184002",74:"7d76b80f",75:"d0c4a139",76:"d1cba16b",77:"c472722e",78:"223fa48a",79:"0546b73c",80:"459ebfa5",81:"05adf72e",82:"4db30d68",83:"dc5bb144",84:"16e6568e",85:"6a3b1996",86:"8ca7f126",87:"36f49b9b",88:"b83f41c0",89:"2dfc2f93",90:"2e0b0b7b",91:"f86a482e",92:"3e68a5a6",93:"fdf4c37c",94:"076aea40",95:"c147e7c2",96:"ef57e23d",97:"3205f79b",98:"f1a79cc4",99:"085fe179",100:"7399b68a",101:"8a84bb7c",102:"1cffc37a",103:"00f01bfc",104:"9ecbd59d",105:"63657feb",106:"f07b5082",107:"8d7f43ec",108:"78fe86c0",109:"a6c9130b",110:"daebdc05",111:"50a8b519",112:"cee6347f",113:"2022bda2",114:"ff8f24c5",115:"7e8e15fe",116:"588c915f",117:"037b14cc",118:"595159da",119:"3e6e878b",120:"41e7a5f0",121:"b4bec142",122:"070d739a",123:"8d1b12a0",124:"044ed2f0",125:"358b5d49",126:"35c7ed7f",127:"e70ddb1f",128:"2c63baa1",129:"722551c8",130:"17f8d1c1",131:"6318023d",132:"65a56633",133:"57359498",134:"04cb374e",135:"5227def7",136:"7556f92b",137:"99dfc9d6",138:"7bea4936",139:"f72ed573",140:"4c696ba6",141:"7d6384ef",142:"71f7a6b9",143:"6239d28c",144:"bf762c51",145:"47530614",146:"d6c0284a",147:"eeec2313",148:"9c23ac23"}[e]+".js"}(e);var l=new Error;o=function(t){s.onerror=s.onload=null,clearTimeout(c);var n=a[e];if(0!==n){if(n){var r=t&&("load"===t.type?"missing":t.type),o=t&&t.target&&t.target.src;l.message="Loading chunk "+e+" failed.\n("+r+": "+o+")",l.name="ChunkLoadError",l.type=r,l.request=o,n[1](l)}a[e]=void 0}};var c=setTimeout((function(){o({type:"timeout",target:s})}),12e4);s.onerror=s.onload=o,document.head.appendChild(s)}return Promise.all(t)},i.m=e,i.c=r,i.d=function(e,t,n){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,t){if(1&t&&(e=i(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(i.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)i.d(n,r,function(t){return e[t]}.bind(null,r));return n},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="/",i.oe=function(e){throw console.error(e),e};var s=window.webpackJsonp=window.webpackJsonp||[],l=s.push.bind(s);s.push=t,s=s.slice();for(var c=0;c<s.length;c++)t(s[c]);var u=l;o.push([203,0]),n()}([function(e,t,n){var r=n(2),a=n(18).f,o=n(15),i=n(12),s=n(81),l=n(136),c=n(77);e.exports=function(e,t){var n,u,d,p,h,m=e.target,g=e.global,f=e.stat;if(n=g?r:f?r[m]||s(m,{}):(r[m]||{}).prototype)for(u in t){if(p=t[u],d=e.noTargetGet?(h=a(n,u))&&h.value:n[u],!c(g?u:m+(f?".":"#")+u,e.forced)&&void 0!==d){if(typeof p==typeof d)continue;l(p,d)}(e.sham||d&&d.sham)&&o(p,"sham",!0),i(n,u,p,e)}}},function(e,t){e.exports=function(e){try{return!!e()}catch(e){return!0}}},function(e,t){var n=function(e){return e&&e.Math==Math&&e};e.exports=n("object"==typeof globalThis&&globalThis)||n("object"==typeof window&&window)||n("object"==typeof self&&self)||n("object"==typeof global&&global)||function(){return this}()||Function("return this")()},function(e,t,n){var r=n(2),a=n(79),o=n(7),i=n(55),s=n(83),l=n(130),c=a("wks"),u=r.Symbol,d=l?u:u&&u.withoutSetter||i;e.exports=function(e){return o(c,e)||(s&&o(u,e)?c[e]=u[e]:c[e]=d("Symbol."+e)),c[e]}},function(e,t){e.exports=function(e){return"object"==typeof e?null!==e:"function"==typeof e}},function(e,t,n){var r=n(1);e.exports=!r((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]}))},function(e,t,n){var r=n(4);e.exports=function(e){if(!r(e))throw TypeError(String(e)+" is not an object");return e}},function(e,t){var n={}.hasOwnProperty;e.exports=function(e,t){return n.call(e,t)}},function(e,t,n){var r=n(5),a=n(129),o=n(6),i=n(42),s=Object.defineProperty;t.f=r?s:function(e,t,n){if(o(e),t=i(t,!0),o(n),a)try{return s(e,t,n)}catch(e){}if("get"in n||"set"in n)throw TypeError("Accessors not supported");return"value"in n&&(e[t]=n.value),e}},function(e,t,n){"use strict";function r(e,t,n,r,a,o,i,s){var l,c="function"==typeof e?e.options:e;if(t&&(c.render=t,c.staticRenderFns=n,c._compiled=!0),r&&(c.functional=!0),o&&(c._scopeId="data-v-"+o),i?(l=function(e){(e=e||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(e=__VUE_SSR_CONTEXT__),a&&a.call(this,e),e&&e._registeredComponents&&e._registeredComponents.add(i)},c._ssrRegister=l):a&&(l=s?function(){a.call(this,(c.functional?this.parent:this).$root.$options.shadowRoot)}:a),l)if(c.functional){c._injectStyles=l;var u=c.render;c.render=function(e,t){return l.call(t),u(e,t)}}else{var d=c.beforeCreate;c.beforeCreate=d?[].concat(d,l):[l]}return{exports:e,options:c}}n.d(t,"a",(function(){return r}))},function(e,t,n){var r=n(91),a=n(12),o=n(213);r||a(Object.prototype,"toString",o,{unsafe:!0})},function(e,t,n){var r=n(50),a=Math.min;e.exports=function(e){return e>0?a(r(e),9007199254740991):0}},function(e,t,n){var r=n(2),a=n(15),o=n(7),i=n(81),s=n(86),l=n(33),c=l.get,u=l.enforce,d=String(String).split("String");(e.exports=function(e,t,n,s){var l,c=!!s&&!!s.unsafe,p=!!s&&!!s.enumerable,h=!!s&&!!s.noTargetGet;"function"==typeof n&&("string"!=typeof t||o(n,"name")||a(n,"name",t),(l=u(n)).source||(l.source=d.join("string"==typeof t?t:""))),e!==r?(c?!h&&e[t]&&(p=!0):delete e[t],p?e[t]=n:a(e,t,n)):p?e[t]=n:i(t,n)})(Function.prototype,"toString",(function(){return"function"==typeof this&&c(this).source||s(this)}))},function(e,t,n){var r=n(16);e.exports=function(e){return Object(r(e))}},function(e,t,n){var r=n(41),a=n(16);e.exports=function(e){return r(a(e))}},function(e,t,n){var r=n(5),a=n(8),o=n(38);e.exports=r?function(e,t,n){return a.f(e,t,o(1,n))}:function(e,t,n){return e[t]=n,e}},function(e,t){e.exports=function(e){if(null==e)throw TypeError("Can't call method on "+e);return e}},function(e,t){var n=Array.isArray;e.exports=n},function(e,t,n){var r=n(5),a=n(87),o=n(38),i=n(14),s=n(42),l=n(7),c=n(129),u=Object.getOwnPropertyDescriptor;t.f=r?u:function(e,t){if(e=i(e),t=s(t,!0),c)try{return u(e,t)}catch(e){}if(l(e,t))return o(!a.f.call(e,t),e[t])}},function(e,t,n){var r=n(158),a="object"==typeof self&&self&&self.Object===Object&&self,o=r||a||Function("return this")();e.exports=o},function(e,t,n){"use strict";var r=n(0),a=n(34).filter,o=n(60),i=n(21),s=o("filter"),l=i("filter");r({target:"Array",proto:!0,forced:!s||!l},{filter:function(e){return a(this,e,arguments.length>1?arguments[1]:void 0)}})},function(e,t,n){var r=n(5),a=n(1),o=n(7),i=Object.defineProperty,s={},l=function(e){throw e};e.exports=function(e,t){if(o(s,e))return s[e];t||(t={});var n=[][e],c=!!o(t,"ACCESSORS")&&t.ACCESSORS,u=o(t,0)?t[0]:l,d=o(t,1)?t[1]:void 0;return s[e]=!!n&&!a((function(){if(c&&!r)return!0;var e={length:-1};c?i(e,1,{enumerable:!0,get:l}):e[1]=1,n.call(e,u,d)}))}},function(e,t){e.exports=!1},function(e,t,n){var r=n(134),a=n(2),o=function(e){return"function"==typeof e?e:void 0};e.exports=function(e,t){return arguments.length<2?o(r[e])||o(a[e]):r[e]&&r[e][t]||a[e]&&a[e][t]}},function(e,t){e.exports=function(e){if("function"!=typeof e)throw TypeError(String(e)+" is not a function");return e}},function(e,t){var n={}.toString;e.exports=function(e){return n.call(e).slice(8,-1)}},function(e,t,n){var r=n(238),a=n(241);e.exports=function(e,t){var n=a(e,t);return r(n)?n:void 0}},function(e,t,n){"use strict";var r=n(0),a=n(63);r({target:"RegExp",proto:!0,forced:/./.exec!==a},{exec:a})},function(e,t,n){"use strict";var r=n(120).charAt,a=n(33),o=n(135),i=a.set,s=a.getterFor("String Iterator");o(String,"String",(function(e){i(this,{type:"String Iterator",string:String(e),index:0})}),(function(){var e,t=s(this),n=t.string,a=t.index;return a>=n.length?{value:void 0,done:!0}:(e=r(n,a),t.index+=e.length,{value:e,done:!1})}))},function(e,t,n){"use strict";var r=n(1);e.exports=function(e,t){var n=[][e];return!!n&&r((function(){n.call(null,t||function(){throw 1},1)}))}},function(e,t,n){var r,a=n(6),o=n(117),i=n(85),s=n(43),l=n(133),c=n(82),u=n(57),d=u("IE_PROTO"),p=function(){},h=function(e){return"<script>"+e+"<\/script>"},m=function(){try{r=document.domain&&new ActiveXObject("htmlfile")}catch(e){}var e,t;m=r?function(e){e.write(h("")),e.close();var t=e.parentWindow.Object;return e=null,t}(r):((t=c("iframe")).style.display="none",l.appendChild(t),t.src=String("javascript:"),(e=t.contentWindow.document).open(),e.write(h("document.F=Object")),e.close(),e.F);for(var n=i.length;n--;)delete m.prototype[i[n]];return m()};s[d]=!0,e.exports=Object.create||function(e,t){var n;return null!==e?(p.prototype=a(e),n=new p,p.prototype=null,n[d]=e):n=m(),void 0===t?n:o(n,t)}},function(e,t){e.exports=function(e){return null!=e&&"object"==typeof e}},function(e,t){var n=/^\s+|\s+$/g,r=/^[-+]0x[0-9a-f]+$/i,a=/^0b[01]+$/i,o=/^0o[0-7]+$/i,i=parseInt,s="object"==typeof global&&global&&global.Object===Object&&global,l="object"==typeof self&&self&&self.Object===Object&&self,c=s||l||Function("return this")(),u=Object.prototype.toString,d=Math.max,p=Math.min,h=function(){return c.Date.now()};function m(e){var t=typeof e;return!!e&&("object"==t||"function"==t)}function g(e){if("number"==typeof e)return e;if(function(e){return"symbol"==typeof e||function(e){return!!e&&"object"==typeof e}(e)&&"[object Symbol]"==u.call(e)}(e))return NaN;if(m(e)){var t="function"==typeof e.valueOf?e.valueOf():e;e=m(t)?t+"":t}if("string"!=typeof e)return 0===e?e:+e;e=e.replace(n,"");var s=a.test(e);return s||o.test(e)?i(e.slice(2),s?2:8):r.test(e)?NaN:+e}e.exports=function(e,t,n){var r,a,o,i,s,l,c=0,u=!1,f=!1,y=!0;if("function"!=typeof e)throw new TypeError("Expected a function");function v(t){var n=r,o=a;return r=a=void 0,c=t,i=e.apply(o,n)}function b(e){return c=e,s=setTimeout(w,t),u?v(e):i}function k(e){var n=e-l;return void 0===l||n>=t||n<0||f&&e-c>=o}function w(){var e=h();if(k(e))return x(e);s=setTimeout(w,function(e){var n=t-(e-l);return f?p(n,o-(e-c)):n}(e))}function x(e){return s=void 0,y&&r?v(e):(r=a=void 0,i)}function T(){var e=h(),n=k(e);if(r=arguments,a=this,l=e,n){if(void 0===s)return b(l);if(f)return s=setTimeout(w,t),v(l)}return void 0===s&&(s=setTimeout(w,t)),i}return t=g(t)||0,m(n)&&(u=!!n.leading,o=(f="maxWait"in n)?d(g(n.maxWait)||0,t):o,y="trailing"in n?!!n.trailing:y),T.cancel=function(){void 0!==s&&clearTimeout(s),c=0,r=l=a=s=void 0},T.flush=function(){return void 0===s?i:x(h())},T}},function(e,t,n){var r,a,o,i=n(204),s=n(2),l=n(4),c=n(15),u=n(7),d=n(80),p=n(57),h=n(43),m=s.WeakMap;if(i){var g=d.state||(d.state=new m),f=g.get,y=g.has,v=g.set;r=function(e,t){return t.facade=e,v.call(g,e,t),t},a=function(e){return f.call(g,e)||{}},o=function(e){return y.call(g,e)}}else{var b=p("state");h[b]=!0,r=function(e,t){return t.facade=e,c(e,b,t),t},a=function(e){return u(e,b)?e[b]:{}},o=function(e){return u(e,b)}}e.exports={set:r,get:a,has:o,enforce:function(e){return o(e)?a(e):r(e,{})},getterFor:function(e){return function(t){var n;if(!l(t)||(n=a(t)).type!==e)throw TypeError("Incompatible receiver, "+e+" required");return n}}}},function(e,t,n){var r=n(52),a=n(41),o=n(13),i=n(11),s=n(119),l=[].push,c=function(e){var t=1==e,n=2==e,c=3==e,u=4==e,d=6==e,p=5==e||d;return function(h,m,g,f){for(var y,v,b=o(h),k=a(b),w=r(m,g,3),x=i(k.length),T=0,I=f||s,q=t?I(h,x):n?I(h,0):void 0;x>T;T++)if((p||T in k)&&(v=w(y=k[T],T,b),e))if(t)q[T]=v;else if(v)switch(e){case 3:return!0;case 5:return y;case 6:return T;case 2:l.call(q,y)}else if(u)return!1;return d?-1:c||u?u:q}};e.exports={forEach:c(0),map:c(1),filter:c(2),some:c(3),every:c(4),find:c(5),findIndex:c(6)}},function(e,t,n){var r=n(2),a=n(148),o=n(116),i=n(15),s=n(3),l=s("iterator"),c=s("toStringTag"),u=o.values;for(var d in a){var p=r[d],h=p&&p.prototype;if(h){if(h[l]!==u)try{i(h,l,u)}catch(e){h[l]=u}if(h[c]||i(h,c,d),a[d])for(var m in o)if(h[m]!==o[m])try{i(h,m,o[m])}catch(e){h[m]=o[m]}}}},function(e,t,n){"use strict";var r=n(0),a=n(149);r({target:"Array",proto:!0,forced:[].forEach!=a},{forEach:a})},function(e,t,n){var r=n(2),a=n(148),o=n(149),i=n(15);for(var s in a){var l=r[s],c=l&&l.prototype;if(c&&c.forEach!==o)try{i(c,"forEach",o)}catch(e){c.forEach=o}}},function(e,t){e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},function(e,t,n){var r=n(25);e.exports=Array.isArray||function(e){return"Array"==r(e)}},function(e,t,n){var r=n(46),a=n(223),o=n(224),i=r?r.toStringTag:void 0;e.exports=function(e){return null==e?void 0===e?"[object Undefined]":"[object Null]":i&&i in Object(e)?a(e):o(e)}},function(e,t,n){var r=n(1),a=n(25),o="".split;e.exports=r((function(){return!Object("z").propertyIsEnumerable(0)}))?function(e){return"String"==a(e)?o.call(e,""):Object(e)}:Object},function(e,t,n){var r=n(4);e.exports=function(e,t){if(!r(e))return e;var n,a;if(t&&"function"==typeof(n=e.toString)&&!r(a=n.call(e)))return a;if("function"==typeof(n=e.valueOf)&&!r(a=n.call(e)))return a;if(!t&&"function"==typeof(n=e.toString)&&!r(a=n.call(e)))return a;throw TypeError("Can't convert object to primitive value")}},function(e,t){e.exports={}},function(e,t){e.exports={}},function(e,t,n){"use strict";var r=n(0),a=n(2),o=n(23),i=n(22),s=n(5),l=n(83),c=n(130),u=n(1),d=n(7),p=n(39),h=n(4),m=n(6),g=n(13),f=n(14),y=n(42),v=n(38),b=n(30),k=n(56),w=n(54),x=n(218),T=n(88),I=n(18),q=n(8),j=n(87),z=n(15),E=n(12),_=n(79),S=n(57),D=n(43),C=n(55),R=n(3),A=n(154),P=n(155),O=n(51),L=n(33),F=n(34).forEach,M=S("hidden"),N=R("toPrimitive"),K=L.set,B=L.getterFor("Symbol"),U=Object.prototype,$=a.Symbol,W=o("JSON","stringify"),G=I.f,V=q.f,H=x.f,J=j.f,Y=_("symbols"),Q=_("op-symbols"),Z=_("string-to-symbol-registry"),X=_("symbol-to-string-registry"),ee=_("wks"),te=a.QObject,ne=!te||!te.prototype||!te.prototype.findChild,re=s&&u((function(){return 7!=b(V({},"a",{get:function(){return V(this,"a",{value:7}).a}})).a}))?function(e,t,n){var r=G(U,t);r&&delete U[t],V(e,t,n),r&&e!==U&&V(U,t,r)}:V,ae=function(e,t){var n=Y[e]=b($.prototype);return K(n,{type:"Symbol",tag:e,description:t}),s||(n.description=t),n},oe=c?function(e){return"symbol"==typeof e}:function(e){return Object(e)instanceof $},ie=function(e,t,n){e===U&&ie(Q,t,n),m(e);var r=y(t,!0);return m(n),d(Y,r)?(n.enumerable?(d(e,M)&&e[M][r]&&(e[M][r]=!1),n=b(n,{enumerable:v(0,!1)})):(d(e,M)||V(e,M,v(1,{})),e[M][r]=!0),re(e,r,n)):V(e,r,n)},se=function(e,t){m(e);var n=f(t),r=k(n).concat(de(n));return F(r,(function(t){s&&!le.call(n,t)||ie(e,t,n[t])})),e},le=function(e){var t=y(e,!0),n=J.call(this,t);return!(this===U&&d(Y,t)&&!d(Q,t))&&(!(n||!d(this,t)||!d(Y,t)||d(this,M)&&this[M][t])||n)},ce=function(e,t){var n=f(e),r=y(t,!0);if(n!==U||!d(Y,r)||d(Q,r)){var a=G(n,r);return!a||!d(Y,r)||d(n,M)&&n[M][r]||(a.enumerable=!0),a}},ue=function(e){var t=H(f(e)),n=[];return F(t,(function(e){d(Y,e)||d(D,e)||n.push(e)})),n},de=function(e){var t=e===U,n=H(t?Q:f(e)),r=[];return F(n,(function(e){!d(Y,e)||t&&!d(U,e)||r.push(Y[e])})),r};(l||(E(($=function(){if(this instanceof $)throw TypeError("Symbol is not a constructor");var e=arguments.length&&void 0!==arguments[0]?String(arguments[0]):void 0,t=C(e),n=function(e){this===U&&n.call(Q,e),d(this,M)&&d(this[M],t)&&(this[M][t]=!1),re(this,t,v(1,e))};return s&&ne&&re(U,t,{configurable:!0,set:n}),ae(t,e)}).prototype,"toString",(function(){return B(this).tag})),E($,"withoutSetter",(function(e){return ae(C(e),e)})),j.f=le,q.f=ie,I.f=ce,w.f=x.f=ue,T.f=de,A.f=function(e){return ae(R(e),e)},s&&(V($.prototype,"description",{configurable:!0,get:function(){return B(this).description}}),i||E(U,"propertyIsEnumerable",le,{unsafe:!0}))),r({global:!0,wrap:!0,forced:!l,sham:!l},{Symbol:$}),F(k(ee),(function(e){P(e)})),r({target:"Symbol",stat:!0,forced:!l},{for:function(e){var t=String(e);if(d(Z,t))return Z[t];var n=$(t);return Z[t]=n,X[n]=t,n},keyFor:function(e){if(!oe(e))throw TypeError(e+" is not a symbol");if(d(X,e))return X[e]},useSetter:function(){ne=!0},useSimple:function(){ne=!1}}),r({target:"Object",stat:!0,forced:!l,sham:!s},{create:function(e,t){return void 0===t?b(e):se(b(e),t)},defineProperty:ie,defineProperties:se,getOwnPropertyDescriptor:ce}),r({target:"Object",stat:!0,forced:!l},{getOwnPropertyNames:ue,getOwnPropertySymbols:de}),r({target:"Object",stat:!0,forced:u((function(){T.f(1)}))},{getOwnPropertySymbols:function(e){return T.f(g(e))}}),W)&&r({target:"JSON",stat:!0,forced:!l||u((function(){var e=$();return"[null]"!=W([e])||"{}"!=W({a:e})||"{}"!=W(Object(e))}))},{stringify:function(e,t,n){for(var r,a=[e],o=1;arguments.length>o;)a.push(arguments[o++]);if(r=t,(h(t)||void 0!==e)&&!oe(e))return p(t)||(t=function(e,t){if("function"==typeof r&&(t=r.call(this,e,t)),!oe(t))return t}),a[1]=t,W.apply(null,a)}});$.prototype[N]||z($.prototype,N,$.prototype.valueOf),O($,"Symbol"),D[M]=!0},function(e,t,n){var r=n(19).Symbol;e.exports=r},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));n(113);var r=n(48);n(45),n(64),n(96),n(156),n(10),n(28),n(35);var a=n(71);function o(e){return function(e){if(Array.isArray(e))return Object(r.a)(e)}(e)||function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(e)||Object(a.a)(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}},function(e,t,n){"use strict";function r(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}n.d(t,"a",(function(){return r}))},function(e,t,n){"use strict";var r=n(0),a=n(34).map,o=n(60),i=n(21),s=o("map"),l=i("map");r({target:"Array",proto:!0,forced:!s||!l},{map:function(e){return a(this,e,arguments.length>1?arguments[1]:void 0)}})},function(e,t){var n=Math.ceil,r=Math.floor;e.exports=function(e){return isNaN(e=+e)?0:(e>0?r:n)(e)}},function(e,t,n){var r=n(8).f,a=n(7),o=n(3)("toStringTag");e.exports=function(e,t,n){e&&!a(e=n?e:e.prototype,o)&&r(e,o,{configurable:!0,value:t})}},function(e,t,n){var r=n(24);e.exports=function(e,t,n){if(r(e),void 0===t)return e;switch(n){case 0:return function(){return e.call(t)};case 1:return function(n){return e.call(t,n)};case 2:return function(n,r){return e.call(t,n,r)};case 3:return function(n,r,a){return e.call(t,n,r,a)}}return function(){return e.apply(t,arguments)}}},function(e,t,n){"use strict";var r=n(0),a=n(4),o=n(39),i=n(132),s=n(11),l=n(14),c=n(61),u=n(3),d=n(60),p=n(21),h=d("slice"),m=p("slice",{ACCESSORS:!0,0:0,1:2}),g=u("species"),f=[].slice,y=Math.max;r({target:"Array",proto:!0,forced:!h||!m},{slice:function(e,t){var n,r,u,d=l(this),p=s(d.length),h=i(e,p),m=i(void 0===t?p:t,p);if(o(d)&&("function"!=typeof(n=d.constructor)||n!==Array&&!o(n.prototype)?a(n)&&null===(n=n[g])&&(n=void 0):n=void 0,n===Array||void 0===n))return f.call(d,h,m);for(r=new(void 0===n?Array:n)(y(m-h,0)),u=0;h<m;h++,u++)h in d&&c(r,u,d[h]);return r.length=u,r}})},function(e,t,n){var r=n(131),a=n(85).concat("length","prototype");t.f=Object.getOwnPropertyNames||function(e){return r(e,a)}},function(e,t){var n=0,r=Math.random();e.exports=function(e){return"Symbol("+String(void 0===e?"":e)+")_"+(++n+r).toString(36)}},function(e,t,n){var r=n(131),a=n(85);e.exports=Object.keys||function(e){return r(e,a)}},function(e,t,n){var r=n(79),a=n(55),o=r("keys");e.exports=function(e){return o[e]||(o[e]=a(e))}},function(e,t,n){var r=n(25),a=n(2);e.exports="process"==r(a.process)},function(e,t,n){var r,a,o=n(2),i=n(93),s=o.process,l=s&&s.versions,c=l&&l.v8;c?a=(r=c.split("."))[0]+r[1]:i&&(!(r=i.match(/Edge\/(\d+)/))||r[1]>=74)&&(r=i.match(/Chrome\/(\d+)/))&&(a=r[1]),e.exports=a&&+a},function(e,t,n){var r=n(1),a=n(3),o=n(59),i=a("species");e.exports=function(e){return o>=51||!r((function(){var t=[];return(t.constructor={})[i]=function(){return{foo:1}},1!==t[e](Boolean).foo}))}},function(e,t,n){"use strict";var r=n(42),a=n(8),o=n(38);e.exports=function(e,t,n){var i=r(t);i in e?a.f(e,i,o(0,n)):e[i]=n}},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));n(10);function r(e,t,n,r,a,o,i){try{var s=e[o](i),l=s.value}catch(e){return void n(e)}s.done?t(l):Promise.resolve(l).then(r,a)}function a(e){return function(){var t=this,n=arguments;return new Promise((function(a,o){var i=e.apply(t,n);function s(e){r(i,a,o,s,l,"next",e)}function l(e){r(i,a,o,s,l,"throw",e)}s(void 0)}))}}},function(e,t,n){"use strict";var r,a,o=n(123),i=n(197),s=RegExp.prototype.exec,l=String.prototype.replace,c=s,u=(r=/a/,a=/b*/g,s.call(r,"a"),s.call(a,"a"),0!==r.lastIndex||0!==a.lastIndex),d=i.UNSUPPORTED_Y||i.BROKEN_CARET,p=void 0!==/()??/.exec("")[1];(u||p||d)&&(c=function(e){var t,n,r,a,i=this,c=d&&i.sticky,h=o.call(i),m=i.source,g=0,f=e;return c&&(-1===(h=h.replace("y","")).indexOf("g")&&(h+="g"),f=String(e).slice(i.lastIndex),i.lastIndex>0&&(!i.multiline||i.multiline&&"\n"!==e[i.lastIndex-1])&&(m="(?: "+m+")",f=" "+f,g++),n=new RegExp("^(?:"+m+")",h)),p&&(n=new RegExp("^"+m+"$(?!\\s)",h)),u&&(t=i.lastIndex),r=s.call(c?n:i,f),c?r?(r.input=r.input.slice(g),r[0]=r[0].slice(g),r.index=i.lastIndex,i.lastIndex+=r[0].length):i.lastIndex=0:u&&r&&(i.lastIndex=i.global?r.index+r[0].length:t),p&&r&&r.length>1&&l.call(r[0],n,(function(){for(a=1;a<arguments.length-2;a++)void 0===arguments[a]&&(r[a]=void 0)})),r}),e.exports=c},function(e,t,n){"use strict";var r=n(0),a=n(5),o=n(2),i=n(7),s=n(4),l=n(8).f,c=n(136),u=o.Symbol;if(a&&"function"==typeof u&&(!("description"in u.prototype)||void 0!==u().description)){var d={},p=function(){var e=arguments.length<1||void 0===arguments[0]?void 0:String(arguments[0]),t=this instanceof p?new u(e):void 0===e?u():u(e);return""===e&&(d[t]=!0),t};c(p,u);var h=p.prototype=u.prototype;h.constructor=p;var m=h.toString,g="Symbol(test)"==String(u("test")),f=/^Symbol\((.*)\)[^)]+$/;l(h,"description",{configurable:!0,get:function(){var e=s(this)?this.valueOf():this,t=m.call(e);if(i(d,e))return"";var n=g?t.slice(7,-1):t.replace(f,"$1");return""===n?void 0:n}}),r({global:!0,forced:!0},{Symbol:p})}},function(e,t,n){var r=n(228),a=n(229),o=n(230),i=n(231),s=n(232);function l(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var r=e[t];this.set(r[0],r[1])}}l.prototype.clear=r,l.prototype.delete=a,l.prototype.get=o,l.prototype.has=i,l.prototype.set=s,e.exports=l},function(e,t,n){var r=n(160);e.exports=function(e,t){for(var n=e.length;n--;)if(r(e[n][0],t))return n;return-1}},function(e,t,n){var r=n(26)(Object,"create");e.exports=r},function(e,t,n){var r=n(250);e.exports=function(e,t){var n=e.__data__;return r(t)?n["string"==typeof t?"string":"hash"]:n.map}},function(e,t,n){var r=n(104);e.exports=function(e){if("string"==typeof e||r(e))return e;var t=e+"";return"0"==t&&1/e==-1/0?"-0":t}},function(e,t,n){var r=n(0),a=n(2),o=n(93),i=[].slice,s=function(e){return function(t,n){var r=arguments.length>2,a=r?i.call(arguments,2):void 0;return e(r?function(){("function"==typeof t?t:Function(t)).apply(this,a)}:t,n)}};r({global:!0,bind:!0,forced:/MSIE .\./.test(o)},{setTimeout:s(a.setTimeout),setInterval:s(a.setInterval)})},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));n(156),n(53),n(74),n(78),n(10),n(114),n(28);var r=n(48);function a(e,t){if(e){if("string"==typeof e)return Object(r.a)(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Object(r.a)(e,t):void 0}}},function(e,t,n){var r,a;
/* NProgress, (c) 2013, 2014 Rico Sta. Cruz - http://ricostacruz.com/nprogress
 * @license MIT */void 0===(a="function"==typeof(r=function(){var e,t,n={version:"0.2.0"},r=n.settings={minimum:.08,easing:"ease",positionUsing:"",speed:200,trickle:!0,trickleRate:.02,trickleSpeed:800,showSpinner:!0,barSelector:'[role="bar"]',spinnerSelector:'[role="spinner"]',parent:"body",template:'<div class="bar" role="bar"><div class="peg"></div></div><div class="spinner" role="spinner"><div class="spinner-icon"></div></div>'};function a(e,t,n){return e<t?t:e>n?n:e}function o(e){return 100*(-1+e)}n.configure=function(e){var t,n;for(t in e)void 0!==(n=e[t])&&e.hasOwnProperty(t)&&(r[t]=n);return this},n.status=null,n.set=function(e){var t=n.isStarted();e=a(e,r.minimum,1),n.status=1===e?null:e;var l=n.render(!t),c=l.querySelector(r.barSelector),u=r.speed,d=r.easing;return l.offsetWidth,i((function(t){""===r.positionUsing&&(r.positionUsing=n.getPositioningCSS()),s(c,function(e,t,n){var a;return(a="translate3d"===r.positionUsing?{transform:"translate3d("+o(e)+"%,0,0)"}:"translate"===r.positionUsing?{transform:"translate("+o(e)+"%,0)"}:{"margin-left":o(e)+"%"}).transition="all "+t+"ms "+n,a}(e,u,d)),1===e?(s(l,{transition:"none",opacity:1}),l.offsetWidth,setTimeout((function(){s(l,{transition:"all "+u+"ms linear",opacity:0}),setTimeout((function(){n.remove(),t()}),u)}),u)):setTimeout(t,u)})),this},n.isStarted=function(){return"number"==typeof n.status},n.start=function(){n.status||n.set(0);var e=function(){setTimeout((function(){n.status&&(n.trickle(),e())}),r.trickleSpeed)};return r.trickle&&e(),this},n.done=function(e){return e||n.status?n.inc(.3+.5*Math.random()).set(1):this},n.inc=function(e){var t=n.status;return t?("number"!=typeof e&&(e=(1-t)*a(Math.random()*t,.1,.95)),t=a(t+e,0,.994),n.set(t)):n.start()},n.trickle=function(){return n.inc(Math.random()*r.trickleRate)},e=0,t=0,n.promise=function(r){return r&&"resolved"!==r.state()?(0===t&&n.start(),e++,t++,r.always((function(){0==--t?(e=0,n.done()):n.set((e-t)/e)})),this):this},n.render=function(e){if(n.isRendered())return document.getElementById("nprogress");c(document.documentElement,"nprogress-busy");var t=document.createElement("div");t.id="nprogress",t.innerHTML=r.template;var a,i=t.querySelector(r.barSelector),l=e?"-100":o(n.status||0),u=document.querySelector(r.parent);return s(i,{transition:"all 0 linear",transform:"translate3d("+l+"%,0,0)"}),r.showSpinner||(a=t.querySelector(r.spinnerSelector))&&p(a),u!=document.body&&c(u,"nprogress-custom-parent"),u.appendChild(t),t},n.remove=function(){u(document.documentElement,"nprogress-busy"),u(document.querySelector(r.parent),"nprogress-custom-parent");var e=document.getElementById("nprogress");e&&p(e)},n.isRendered=function(){return!!document.getElementById("nprogress")},n.getPositioningCSS=function(){var e=document.body.style,t="WebkitTransform"in e?"Webkit":"MozTransform"in e?"Moz":"msTransform"in e?"ms":"OTransform"in e?"O":"";return t+"Perspective"in e?"translate3d":t+"Transform"in e?"translate":"margin"};var i=function(){var e=[];function t(){var n=e.shift();n&&n(t)}return function(n){e.push(n),1==e.length&&t()}}(),s=function(){var e=["Webkit","O","Moz","ms"],t={};function n(n){return n=n.replace(/^-ms-/,"ms-").replace(/-([\da-z])/gi,(function(e,t){return t.toUpperCase()})),t[n]||(t[n]=function(t){var n=document.body.style;if(t in n)return t;for(var r,a=e.length,o=t.charAt(0).toUpperCase()+t.slice(1);a--;)if((r=e[a]+o)in n)return r;return t}(n))}function r(e,t,r){t=n(t),e.style[t]=r}return function(e,t){var n,a,o=arguments;if(2==o.length)for(n in t)void 0!==(a=t[n])&&t.hasOwnProperty(n)&&r(e,n,a);else r(e,o[1],o[2])}}();function l(e,t){return("string"==typeof e?e:d(e)).indexOf(" "+t+" ")>=0}function c(e,t){var n=d(e),r=n+t;l(n,t)||(e.className=r.substring(1))}function u(e,t){var n,r=d(e);l(e,t)&&(n=r.replace(" "+t+" "," "),e.className=n.substring(1,n.length-1))}function d(e){return(" "+(e.className||"")+" ").replace(/\s+/gi," ")}function p(e){e&&e.parentNode&&e.parentNode.removeChild(e)}return n})?r.call(t,n,t,e):r)||(e.exports=a)},function(e,t,n){"use strict";var r=n(111),a=n(6),o=n(13),i=n(11),s=n(50),l=n(16),c=n(124),u=n(112),d=Math.max,p=Math.min,h=Math.floor,m=/\$([$&'`]|\d\d?|<[^>]*>)/g,g=/\$([$&'`]|\d\d?)/g;r("replace",2,(function(e,t,n,r){var f=r.REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE,y=r.REPLACE_KEEPS_$0,v=f?"$":"$0";return[function(n,r){var a=l(this),o=null==n?void 0:n[e];return void 0!==o?o.call(n,a,r):t.call(String(a),n,r)},function(e,r){if(!f&&y||"string"==typeof r&&-1===r.indexOf(v)){var o=n(t,e,this,r);if(o.done)return o.value}var l=a(e),h=String(this),m="function"==typeof r;m||(r=String(r));var g=l.global;if(g){var k=l.unicode;l.lastIndex=0}for(var w=[];;){var x=u(l,h);if(null===x)break;if(w.push(x),!g)break;""===String(x[0])&&(l.lastIndex=c(h,i(l.lastIndex),k))}for(var T,I="",q=0,j=0;j<w.length;j++){x=w[j];for(var z=String(x[0]),E=d(p(s(x.index),h.length),0),_=[],S=1;S<x.length;S++)_.push(void 0===(T=x[S])?T:String(T));var D=x.groups;if(m){var C=[z].concat(_,E,h);void 0!==D&&C.push(D);var R=String(r.apply(void 0,C))}else R=b(z,h,E,_,D,r);E>=q&&(I+=h.slice(q,E)+R,q=E+z.length)}return I+h.slice(q)}];function b(e,n,r,a,i,s){var l=r+e.length,c=a.length,u=g;return void 0!==i&&(i=o(i),u=m),t.call(s,u,(function(t,o){var s;switch(o.charAt(0)){case"$":return"$";case"&":return e;case"`":return n.slice(0,r);case"'":return n.slice(l);case"<":s=i[o.slice(1,-1)];break;default:var u=+o;if(0===u)return t;if(u>c){var d=h(u/10);return 0===d?t:d<=c?void 0===a[d-1]?o.charAt(1):a[d-1]+o.charAt(1):t}s=a[u-1]}return void 0===s?"":s}))}}))},function(e,t,n){var r=n(12),a=Date.prototype,o=a.toString,i=a.getTime;new Date(NaN)+""!="Invalid Date"&&r(a,"toString",(function(){var e=i.call(this);return e==e?o.call(this):"Invalid Date"}))},function(e,t,n){var r=n(0),a=n(13),o=n(56);r({target:"Object",stat:!0,forced:n(1)((function(){o(1)}))},{keys:function(e){return o(a(e))}})},function(e,t,n){"use strict";var r=n(5),a=n(2),o=n(77),i=n(12),s=n(7),l=n(25),c=n(201),u=n(42),d=n(1),p=n(30),h=n(54).f,m=n(18).f,g=n(8).f,f=n(126).trim,y=a.Number,v=y.prototype,b="Number"==l(p(v)),k=function(e){var t,n,r,a,o,i,s,l,c=u(e,!1);if("string"==typeof c&&c.length>2)if(43===(t=(c=f(c)).charCodeAt(0))||45===t){if(88===(n=c.charCodeAt(2))||120===n)return NaN}else if(48===t){switch(c.charCodeAt(1)){case 66:case 98:r=2,a=49;break;case 79:case 111:r=8,a=55;break;default:return+c}for(i=(o=c.slice(2)).length,s=0;s<i;s++)if((l=o.charCodeAt(s))<48||l>a)return NaN;return parseInt(o,r)}return+c};if(o("Number",!y(" 0o1")||!y("0b1")||y("+0x1"))){for(var w,x=function(e){var t=arguments.length<1?0:e,n=this;return n instanceof x&&(b?d((function(){v.valueOf.call(n)})):"Number"!=l(n))?c(new y(k(t)),n,x):k(t)},T=r?h(y):"MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger".split(","),I=0;T.length>I;I++)s(y,w=T[I])&&!s(x,w)&&g(x,w,m(y,w));x.prototype=v,v.constructor=x,i(a,"Number",x)}},function(e,t,n){var r=n(1),a=/#|\.prototype\./,o=function(e,t){var n=s[i(e)];return n==c||n!=l&&("function"==typeof t?r(t):!!t)},i=o.normalize=function(e){return String(e).replace(a,".").toLowerCase()},s=o.data={},l=o.NATIVE="N",c=o.POLYFILL="P";e.exports=o},function(e,t,n){var r=n(5),a=n(8).f,o=Function.prototype,i=o.toString,s=/^\s*function ([^ (]*)/;r&&!("name"in o)&&a(o,"name",{configurable:!0,get:function(){try{return i.call(this).match(s)[1]}catch(e){return""}}})},function(e,t,n){var r=n(22),a=n(80);(e.exports=function(e,t){return a[e]||(a[e]=void 0!==t?t:{})})("versions",[]).push({version:"3.7.0",mode:r?"pure":"global",copyright:"© 2020 Denis Pushkarev (zloirock.ru)"})},function(e,t,n){var r=n(2),a=n(81),o=r["__core-js_shared__"]||a("__core-js_shared__",{});e.exports=o},function(e,t,n){var r=n(2),a=n(15);e.exports=function(e,t){try{a(r,e,t)}catch(n){r[e]=t}return t}},function(e,t,n){var r=n(2),a=n(4),o=r.document,i=a(o)&&a(o.createElement);e.exports=function(e){return i?o.createElement(e):{}}},function(e,t,n){var r=n(1);e.exports=!!Object.getOwnPropertySymbols&&!r((function(){return!String(Symbol())}))},function(e,t,n){var r=n(14),a=n(11),o=n(132),i=function(e){return function(t,n,i){var s,l=r(t),c=a(l.length),u=o(i,c);if(e&&n!=n){for(;c>u;)if((s=l[u++])!=s)return!0}else for(;c>u;u++)if((e||u in l)&&l[u]===n)return e||u||0;return!e&&-1}};e.exports={includes:i(!0),indexOf:i(!1)}},function(e,t){e.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},function(e,t,n){var r=n(80),a=Function.toString;"function"!=typeof r.inspectSource&&(r.inspectSource=function(e){return a.call(e)}),e.exports=r.inspectSource},function(e,t,n){"use strict";var r={}.propertyIsEnumerable,a=Object.getOwnPropertyDescriptor,o=a&&!r.call({1:2},1);t.f=o?function(e){var t=a(this,e);return!!t&&t.enumerable}:r},function(e,t){t.f=Object.getOwnPropertySymbols},function(e,t,n){var r=n(7),a=n(13),o=n(57),i=n(139),s=o("IE_PROTO"),l=Object.prototype;e.exports=i?Object.getPrototypeOf:function(e){return e=a(e),r(e,s)?e[s]:"function"==typeof e.constructor&&e instanceof e.constructor?e.constructor.prototype:e instanceof Object?l:null}},function(e,t,n){var r=n(6),a=n(205);e.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var e,t=!1,n={};try{(e=Object.getOwnPropertyDescriptor(Object.prototype,"__proto__").set).call(n,[]),t=n instanceof Array}catch(e){}return function(n,o){return r(n),a(o),t?e.call(n,o):n.__proto__=o,n}}():void 0)},function(e,t,n){var r={};r[n(3)("toStringTag")]="z",e.exports="[object z]"===String(r)},function(e,t,n){var r=n(6),a=n(24),o=n(3)("species");e.exports=function(e,t){var n,i=r(e).constructor;return void 0===i||null==(n=r(i)[o])?t:a(n)}},function(e,t,n){var r=n(23);e.exports=r("navigator","userAgent")||""},function(e,t,n){var r=n(122);e.exports=function(e){if(r(e))throw TypeError("The method doesn't accept regular expressions");return e}},function(e,t,n){var r=n(3)("match");e.exports=function(e){var t=/./;try{"/./"[e](t)}catch(n){try{return t[r]=!1,"/./"[e](t)}catch(e){}}return!1}},function(e,t,n){n(155)("iterator")},function(e,t,n){var r=n(222),a=n(31),o=Object.prototype,i=o.hasOwnProperty,s=o.propertyIsEnumerable,l=r(function(){return arguments}())?r:function(e){return a(e)&&i.call(e,"callee")&&!s.call(e,"callee")};e.exports=l},function(e,t,n){var r=n(26)(n(19),"Map");e.exports=r},function(e,t){e.exports=function(e){var t=typeof e;return null!=e&&("object"==t||"function"==t)}},function(e,t,n){var r=n(242),a=n(249),o=n(251),i=n(252),s=n(253);function l(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var r=e[t];this.set(r[0],r[1])}}l.prototype.clear=r,l.prototype.delete=a,l.prototype.get=o,l.prototype.has=i,l.prototype.set=s,e.exports=l},function(e,t){e.exports=function(e){var t=-1,n=Array(e.size);return e.forEach((function(e){n[++t]=e})),n}},function(e,t){e.exports=function(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=9007199254740991}},function(e,t,n){var r=n(17),a=n(104),o=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,i=/^\w*$/;e.exports=function(e,t){if(r(e))return!1;var n=typeof e;return!("number"!=n&&"symbol"!=n&&"boolean"!=n&&null!=e&&!a(e))||(i.test(e)||!o.test(e)||null!=t&&e in Object(t))}},function(e,t,n){var r=n(40),a=n(31);e.exports=function(e){return"symbol"==typeof e||a(e)&&"[object Symbol]"==r(e)}},function(e,t){e.exports=function(e){return e}},function(e,t,n){var r=n(0),a=n(5);r({target:"Object",stat:!0,forced:!a,sham:!a},{defineProperty:n(8).f})},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));n(113);n(45),n(64),n(96),n(10),n(28),n(35);var r=n(71);function a(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,a=!1,o=void 0;try{for(var i,s=e[Symbol.iterator]();!(r=(i=s.next()).done)&&(n.push(i.value),!t||n.length!==t);r=!0);}catch(e){a=!0,o=e}finally{try{r||null==s.return||s.return()}finally{if(a)throw o}}return n}}(e,t)||Object(r.a)(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}},function(e,t,n){var r=n(3),a=n(30),o=n(8),i=r("unscopables"),s=Array.prototype;null==s[i]&&o.f(s,i,{configurable:!0,value:a(null)}),e.exports=function(e){s[i][e]=!0}},function(e,t,n){var r=n(118),a=n(44),o=n(3)("iterator");e.exports=function(e){if(null!=e)return e[o]||e["@@iterator"]||a[r(e)]}},function(e,t,n){var r=function(e){"use strict";var t=Object.prototype,n=t.hasOwnProperty,r="function"==typeof Symbol?Symbol:{},a=r.iterator||"@@iterator",o=r.asyncIterator||"@@asyncIterator",i=r.toStringTag||"@@toStringTag";function s(e,t,n){return Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{s({},"")}catch(e){s=function(e,t,n){return e[t]=n}}function l(e,t,n,r){var a=t&&t.prototype instanceof d?t:d,o=Object.create(a.prototype),i=new T(r||[]);return o._invoke=function(e,t,n){var r="suspendedStart";return function(a,o){if("executing"===r)throw new Error("Generator is already running");if("completed"===r){if("throw"===a)throw o;return q()}for(n.method=a,n.arg=o;;){var i=n.delegate;if(i){var s=k(i,n);if(s){if(s===u)continue;return s}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if("suspendedStart"===r)throw r="completed",n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);r="executing";var l=c(e,t,n);if("normal"===l.type){if(r=n.done?"completed":"suspendedYield",l.arg===u)continue;return{value:l.arg,done:n.done}}"throw"===l.type&&(r="completed",n.method="throw",n.arg=l.arg)}}}(e,n,i),o}function c(e,t,n){try{return{type:"normal",arg:e.call(t,n)}}catch(e){return{type:"throw",arg:e}}}e.wrap=l;var u={};function d(){}function p(){}function h(){}var m={};m[a]=function(){return this};var g=Object.getPrototypeOf,f=g&&g(g(I([])));f&&f!==t&&n.call(f,a)&&(m=f);var y=h.prototype=d.prototype=Object.create(m);function v(e){["next","throw","return"].forEach((function(t){s(e,t,(function(e){return this._invoke(t,e)}))}))}function b(e,t){var r;this._invoke=function(a,o){function i(){return new t((function(r,i){!function r(a,o,i,s){var l=c(e[a],e,o);if("throw"!==l.type){var u=l.arg,d=u.value;return d&&"object"==typeof d&&n.call(d,"__await")?t.resolve(d.__await).then((function(e){r("next",e,i,s)}),(function(e){r("throw",e,i,s)})):t.resolve(d).then((function(e){u.value=e,i(u)}),(function(e){return r("throw",e,i,s)}))}s(l.arg)}(a,o,r,i)}))}return r=r?r.then(i,i):i()}}function k(e,t){var n=e.iterator[t.method];if(void 0===n){if(t.delegate=null,"throw"===t.method){if(e.iterator.return&&(t.method="return",t.arg=void 0,k(e,t),"throw"===t.method))return u;t.method="throw",t.arg=new TypeError("The iterator does not provide a 'throw' method")}return u}var r=c(n,e.iterator,t.arg);if("throw"===r.type)return t.method="throw",t.arg=r.arg,t.delegate=null,u;var a=r.arg;return a?a.done?(t[e.resultName]=a.value,t.next=e.nextLoc,"return"!==t.method&&(t.method="next",t.arg=void 0),t.delegate=null,u):a:(t.method="throw",t.arg=new TypeError("iterator result is not an object"),t.delegate=null,u)}function w(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function x(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function T(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(w,this),this.reset(!0)}function I(e){if(e){var t=e[a];if(t)return t.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var r=-1,o=function t(){for(;++r<e.length;)if(n.call(e,r))return t.value=e[r],t.done=!1,t;return t.value=void 0,t.done=!0,t};return o.next=o}}return{next:q}}function q(){return{value:void 0,done:!0}}return p.prototype=y.constructor=h,h.constructor=p,p.displayName=s(h,i,"GeneratorFunction"),e.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===p||"GeneratorFunction"===(t.displayName||t.name))},e.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,h):(e.__proto__=h,s(e,i,"GeneratorFunction")),e.prototype=Object.create(y),e},e.awrap=function(e){return{__await:e}},v(b.prototype),b.prototype[o]=function(){return this},e.AsyncIterator=b,e.async=function(t,n,r,a,o){void 0===o&&(o=Promise);var i=new b(l(t,n,r,a),o);return e.isGeneratorFunction(n)?i:i.next().then((function(e){return e.done?e.value:i.next()}))},v(y),s(y,i,"Generator"),y[a]=function(){return this},y.toString=function(){return"[object Generator]"},e.keys=function(e){var t=[];for(var n in e)t.push(n);return t.reverse(),function n(){for(;t.length;){var r=t.pop();if(r in e)return n.value=r,n.done=!1,n}return n.done=!0,n}},e.values=I,T.prototype={constructor:T,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(x),!e)for(var t in this)"t"===t.charAt(0)&&n.call(this,t)&&!isNaN(+t.slice(1))&&(this[t]=void 0)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var t=this;function r(n,r){return i.type="throw",i.arg=e,t.next=n,r&&(t.method="next",t.arg=void 0),!!r}for(var a=this.tryEntries.length-1;a>=0;--a){var o=this.tryEntries[a],i=o.completion;if("root"===o.tryLoc)return r("end");if(o.tryLoc<=this.prev){var s=n.call(o,"catchLoc"),l=n.call(o,"finallyLoc");if(s&&l){if(this.prev<o.catchLoc)return r(o.catchLoc,!0);if(this.prev<o.finallyLoc)return r(o.finallyLoc)}else if(s){if(this.prev<o.catchLoc)return r(o.catchLoc,!0)}else{if(!l)throw new Error("try statement without catch or finally");if(this.prev<o.finallyLoc)return r(o.finallyLoc)}}}},abrupt:function(e,t){for(var r=this.tryEntries.length-1;r>=0;--r){var a=this.tryEntries[r];if(a.tryLoc<=this.prev&&n.call(a,"finallyLoc")&&this.prev<a.finallyLoc){var o=a;break}}o&&("break"===e||"continue"===e)&&o.tryLoc<=t&&t<=o.finallyLoc&&(o=null);var i=o?o.completion:{};return i.type=e,i.arg=t,o?(this.method="next",this.next=o.finallyLoc,u):this.complete(i)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),u},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.finallyLoc===e)return this.complete(n.completion,n.afterLoc),x(n),u}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.tryLoc===e){var r=n.completion;if("throw"===r.type){var a=r.arg;x(n)}return a}}throw new Error("illegal catch attempt")},delegateYield:function(e,t,n){return this.delegate={iterator:I(e),resultName:t,nextLoc:n},"next"===this.method&&(this.arg=void 0),u}},e}(e.exports);try{regeneratorRuntime=r}catch(e){Function("r","regeneratorRuntime = r")(r)}},function(e,t,n){"use strict";n(27);var r=n(12),a=n(1),o=n(3),i=n(63),s=n(15),l=o("species"),c=!a((function(){var e=/./;return e.exec=function(){var e=[];return e.groups={a:"7"},e},"7"!=="".replace(e,"$<a>")})),u="$0"==="a".replace(/./,"$0"),d=o("replace"),p=!!/./[d]&&""===/./[d]("a","$0"),h=!a((function(){var e=/(?:)/,t=e.exec;e.exec=function(){return t.apply(this,arguments)};var n="ab".split(e);return 2!==n.length||"a"!==n[0]||"b"!==n[1]}));e.exports=function(e,t,n,d){var m=o(e),g=!a((function(){var t={};return t[m]=function(){return 7},7!=""[e](t)})),f=g&&!a((function(){var t=!1,n=/a/;return"split"===e&&((n={}).constructor={},n.constructor[l]=function(){return n},n.flags="",n[m]=/./[m]),n.exec=function(){return t=!0,null},n[m](""),!t}));if(!g||!f||"replace"===e&&(!c||!u||p)||"split"===e&&!h){var y=/./[m],v=n(m,""[e],(function(e,t,n,r,a){return t.exec===i?g&&!a?{done:!0,value:y.call(t,n,r)}:{done:!0,value:e.call(n,t,r)}:{done:!1}}),{REPLACE_KEEPS_$0:u,REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE:p}),b=v[0],k=v[1];r(String.prototype,e,b),r(RegExp.prototype,m,2==t?function(e,t){return k.call(e,this,t)}:function(e){return k.call(e,this)})}d&&s(RegExp.prototype[m],"sham",!0)}},function(e,t,n){var r=n(25),a=n(63);e.exports=function(e,t){var n=e.exec;if("function"==typeof n){var o=n.call(e,t);if("object"!=typeof o)throw TypeError("RegExp exec method returned something other than an Object or null");return o}if("RegExp"!==r(e))throw TypeError("RegExp#exec called on incompatible receiver");return a.call(e,t)}},function(e,t,n){n(0)({target:"Array",stat:!0},{isArray:n(39)})},function(e,t,n){"use strict";var r=n(12),a=n(6),o=n(1),i=n(123),s=RegExp.prototype,l=s.toString,c=o((function(){return"/a/b"!=l.call({source:"a",flags:"b"})})),u="toString"!=l.name;(c||u)&&r(RegExp.prototype,"toString",(function(){var e=a(this),t=String(e.source),n=e.flags;return"/"+t+"/"+String(void 0===n&&e instanceof RegExp&&!("flags"in s)?i.call(e):n)}),{unsafe:!0})},function(e,t,n){"use strict";var r=n(0),a=n(1),o=n(39),i=n(4),s=n(13),l=n(11),c=n(61),u=n(119),d=n(60),p=n(3),h=n(59),m=p("isConcatSpreadable"),g=h>=51||!a((function(){var e=[];return e[m]=!1,e.concat()[0]!==e})),f=d("concat"),y=function(e){if(!i(e))return!1;var t=e[m];return void 0!==t?!!t:o(e)};r({target:"Array",proto:!0,forced:!g||!f},{concat:function(e){var t,n,r,a,o,i=s(this),d=u(i,0),p=0;for(t=-1,r=arguments.length;t<r;t++)if(y(o=-1===t?i:arguments[t])){if(p+(a=l(o.length))>9007199254740991)throw TypeError("Maximum allowed index exceeded");for(n=0;n<a;n++,p++)n in o&&c(d,p,o[n])}else{if(p>=9007199254740991)throw TypeError("Maximum allowed index exceeded");c(d,p++,o)}return d.length=p,d}})},function(e,t,n){"use strict";var r=n(14),a=n(108),o=n(44),i=n(33),s=n(135),l=i.set,c=i.getterFor("Array Iterator");e.exports=s(Array,"Array",(function(e,t){l(this,{type:"Array Iterator",target:r(e),index:0,kind:t})}),(function(){var e=c(this),t=e.target,n=e.kind,r=e.index++;return!t||r>=t.length?(e.target=void 0,{value:void 0,done:!0}):"keys"==n?{value:r,done:!1}:"values"==n?{value:t[r],done:!1}:{value:[r,t[r]],done:!1}}),"values"),o.Arguments=o.Array,a("keys"),a("values"),a("entries")},function(e,t,n){var r=n(5),a=n(8),o=n(6),i=n(56);e.exports=r?Object.defineProperties:function(e,t){o(e);for(var n,r=i(t),s=r.length,l=0;s>l;)a.f(e,n=r[l++],t[n]);return e}},function(e,t,n){var r=n(91),a=n(25),o=n(3)("toStringTag"),i="Arguments"==a(function(){return arguments}());e.exports=r?a:function(e){var t,n,r;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(n=function(e,t){try{return e[t]}catch(e){}}(t=Object(e),o))?n:i?a(t):"Object"==(r=a(t))&&"function"==typeof t.callee?"Arguments":r}},function(e,t,n){var r=n(4),a=n(39),o=n(3)("species");e.exports=function(e,t){var n;return a(e)&&("function"!=typeof(n=e.constructor)||n!==Array&&!a(n.prototype)?r(n)&&null===(n=n[o])&&(n=void 0):n=void 0),new(void 0===n?Array:n)(0===t?0:t)}},function(e,t,n){var r=n(50),a=n(16),o=function(e){return function(t,n){var o,i,s=String(a(t)),l=r(n),c=s.length;return l<0||l>=c?e?"":void 0:(o=s.charCodeAt(l))<55296||o>56319||l+1===c||(i=s.charCodeAt(l+1))<56320||i>57343?e?s.charAt(l):o:e?s.slice(l,l+2):i-56320+(o-55296<<10)+65536}};e.exports={codeAt:o(!1),charAt:o(!0)}},function(e,t,n){"use strict";var r,a=n(0),o=n(18).f,i=n(11),s=n(94),l=n(16),c=n(95),u=n(22),d="".startsWith,p=Math.min,h=c("startsWith");a({target:"String",proto:!0,forced:!!(u||h||(r=o(String.prototype,"startsWith"),!r||r.writable))&&!h},{startsWith:function(e){var t=String(l(this));s(e);var n=i(p(arguments.length>1?arguments[1]:void 0,t.length)),r=String(e);return d?d.call(t,r,n):t.slice(n,n+r.length)===r}})},function(e,t,n){var r=n(4),a=n(25),o=n(3)("match");e.exports=function(e){var t;return r(e)&&(void 0!==(t=e[o])?!!t:"RegExp"==a(e))}},function(e,t,n){"use strict";var r=n(6);e.exports=function(){var e=r(this),t="";return e.global&&(t+="g"),e.ignoreCase&&(t+="i"),e.multiline&&(t+="m"),e.dotAll&&(t+="s"),e.unicode&&(t+="u"),e.sticky&&(t+="y"),t}},function(e,t,n){"use strict";var r=n(120).charAt;e.exports=function(e,t,n){return t+(n?r(e,t).length:1)}},function(e,t){e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children||(e.children=[]),Object.defineProperty(e,"loaded",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return e.i}}),e.webpackPolyfill=1),e}},function(e,t,n){var r=n(16),a="["+n(127)+"]",o=RegExp("^"+a+a+"*"),i=RegExp(a+a+"*$"),s=function(e){return function(t){var n=String(r(t));return 1&e&&(n=n.replace(o,"")),2&e&&(n=n.replace(i,"")),n}};e.exports={start:s(1),end:s(2),trim:s(3)}},function(e,t){e.exports="\t\n\v\f\r                　\u2028\u2029\ufeff"},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));n(45),n(20),n(36),n(315),n(106),n(316),n(151),n(75),n(37);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}},function(e,t,n){var r=n(5),a=n(1),o=n(82);e.exports=!r&&!a((function(){return 7!=Object.defineProperty(o("div"),"a",{get:function(){return 7}}).a}))},function(e,t,n){var r=n(83);e.exports=r&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},function(e,t,n){var r=n(7),a=n(14),o=n(84).indexOf,i=n(43);e.exports=function(e,t){var n,s=a(e),l=0,c=[];for(n in s)!r(i,n)&&r(s,n)&&c.push(n);for(;t.length>l;)r(s,n=t[l++])&&(~o(c,n)||c.push(n));return c}},function(e,t,n){var r=n(50),a=Math.max,o=Math.min;e.exports=function(e,t){var n=r(e);return n<0?a(n+t,0):o(n,t)}},function(e,t,n){var r=n(23);e.exports=r("document","documentElement")},function(e,t,n){var r=n(2);e.exports=r},function(e,t,n){"use strict";var r=n(0),a=n(192),o=n(89),i=n(90),s=n(51),l=n(15),c=n(12),u=n(3),d=n(22),p=n(44),h=n(138),m=h.IteratorPrototype,g=h.BUGGY_SAFARI_ITERATORS,f=u("iterator"),y=function(){return this};e.exports=function(e,t,n,u,h,v,b){a(n,t,u);var k,w,x,T=function(e){if(e===h&&E)return E;if(!g&&e in j)return j[e];switch(e){case"keys":case"values":case"entries":return function(){return new n(this,e)}}return function(){return new n(this)}},I=t+" Iterator",q=!1,j=e.prototype,z=j[f]||j["@@iterator"]||h&&j[h],E=!g&&z||T(h),_="Array"==t&&j.entries||z;if(_&&(k=o(_.call(new e)),m!==Object.prototype&&k.next&&(d||o(k)===m||(i?i(k,m):"function"!=typeof k[f]&&l(k,f,y)),s(k,I,!0,!0),d&&(p[I]=y))),"values"==h&&z&&"values"!==z.name&&(q=!0,E=function(){return z.call(this)}),d&&!b||j[f]===E||l(j,f,E),p[t]=E,h)if(w={values:T("values"),keys:v?E:T("keys"),entries:T("entries")},b)for(x in w)(g||q||!(x in j))&&c(j,x,w[x]);else r({target:t,proto:!0,forced:g||q},w);return w}},function(e,t,n){var r=n(7),a=n(137),o=n(18),i=n(8);e.exports=function(e,t){for(var n=a(t),s=i.f,l=o.f,c=0;c<n.length;c++){var u=n[c];r(e,u)||s(e,u,l(t,u))}}},function(e,t,n){var r=n(23),a=n(54),o=n(88),i=n(6);e.exports=r("Reflect","ownKeys")||function(e){var t=a.f(i(e)),n=o.f;return n?t.concat(n(e)):t}},function(e,t,n){"use strict";var r,a,o,i=n(89),s=n(15),l=n(7),c=n(3),u=n(22),d=c("iterator"),p=!1;[].keys&&("next"in(o=[].keys())?(a=i(i(o)))!==Object.prototype&&(r=a):p=!0),null==r&&(r={}),u||l(r,d)||s(r,d,(function(){return this})),e.exports={IteratorPrototype:r,BUGGY_SAFARI_ITERATORS:p}},function(e,t,n){var r=n(1);e.exports=!r((function(){function e(){}return e.prototype.constructor=null,Object.getPrototypeOf(new e)!==e.prototype}))},function(e,t,n){var r=n(2);e.exports=r.Promise},function(e,t,n){var r=n(3),a=n(44),o=r("iterator"),i=Array.prototype;e.exports=function(e){return void 0!==e&&(a.Array===e||i[o]===e)}},function(e,t,n){var r=n(6);e.exports=function(e){var t=e.return;if(void 0!==t)return r(t.call(e)).value}},function(e,t,n){var r=n(3)("iterator"),a=!1;try{var o=0,i={next:function(){return{done:!!o++}},return:function(){a=!0}};i[r]=function(){return this},Array.from(i,(function(){throw 2}))}catch(e){}e.exports=function(e,t){if(!t&&!a)return!1;var n=!1;try{var o={};o[r]=function(){return{next:function(){return{done:n=!0}}}},e(o)}catch(e){}return n}},function(e,t,n){var r,a,o,i=n(2),s=n(1),l=n(52),c=n(133),u=n(82),d=n(145),p=n(58),h=i.location,m=i.setImmediate,g=i.clearImmediate,f=i.process,y=i.MessageChannel,v=i.Dispatch,b=0,k={},w=function(e){if(k.hasOwnProperty(e)){var t=k[e];delete k[e],t()}},x=function(e){return function(){w(e)}},T=function(e){w(e.data)},I=function(e){i.postMessage(e+"",h.protocol+"//"+h.host)};m&&g||(m=function(e){for(var t=[],n=1;arguments.length>n;)t.push(arguments[n++]);return k[++b]=function(){("function"==typeof e?e:Function(e)).apply(void 0,t)},r(b),b},g=function(e){delete k[e]},p?r=function(e){f.nextTick(x(e))}:v&&v.now?r=function(e){v.now(x(e))}:y&&!d?(o=(a=new y).port2,a.port1.onmessage=T,r=l(o.postMessage,o,1)):i.addEventListener&&"function"==typeof postMessage&&!i.importScripts&&h&&"file:"!==h.protocol&&!s(I)?(r=I,i.addEventListener("message",T,!1)):r="onreadystatechange"in u("script")?function(e){c.appendChild(u("script")).onreadystatechange=function(){c.removeChild(this),w(e)}}:function(e){setTimeout(x(e),0)}),e.exports={set:m,clear:g}},function(e,t,n){var r=n(93);e.exports=/(iphone|ipod|ipad).*applewebkit/i.test(r)},function(e,t,n){var r=n(6),a=n(4),o=n(147);e.exports=function(e,t){if(r(e),a(t)&&t.constructor===e)return t;var n=o.f(e);return(0,n.resolve)(t),n.promise}},function(e,t,n){"use strict";var r=n(24),a=function(e){var t,n;this.promise=new e((function(e,r){if(void 0!==t||void 0!==n)throw TypeError("Bad Promise constructor");t=e,n=r})),this.resolve=r(t),this.reject=r(n)};e.exports.f=function(e){return new a(e)}},function(e,t){e.exports={CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0}},function(e,t,n){"use strict";var r=n(34).forEach,a=n(29),o=n(21),i=a("forEach"),s=o("forEach");e.exports=i&&s?[].forEach:function(e){return r(this,e,arguments.length>1?arguments[1]:void 0)}},function(e,t,n){var r=n(1);e.exports=!r((function(){return Object.isExtensible(Object.preventExtensions({}))}))},function(e,t,n){var r=n(0),a=n(5),o=n(137),i=n(14),s=n(18),l=n(61);r({target:"Object",stat:!0,sham:!a},{getOwnPropertyDescriptors:function(e){for(var t,n,r=i(e),a=s.f,c=o(r),u={},d=0;c.length>d;)void 0!==(n=a(r,t=c[d++]))&&l(u,t,n);return u}})},function(e,t,n){var r=n(0),a=n(1),o=n(13),i=n(89),s=n(139);r({target:"Object",stat:!0,forced:a((function(){i(1)})),sham:!s},{getPrototypeOf:function(e){return i(o(e))}})},function(e,t,n){n(0)({target:"Object",stat:!0,sham:!n(5)},{create:n(30)})},function(e,t,n){var r=n(3);t.f=r},function(e,t,n){var r=n(134),a=n(7),o=n(154),i=n(8).f;e.exports=function(e){var t=r.Symbol||(r.Symbol={});a(t,e)||i(t,e,{value:o.f(e)})}},function(e,t,n){var r=n(0),a=n(199);r({target:"Array",stat:!0,forced:!n(143)((function(e){Array.from(e)}))},{from:a})},function(e,t){e.exports=function(e,t){for(var n=-1,r=t.length,a=e.length;++n<r;)e[a+n]=t[n];return e}},function(e,t){var n="object"==typeof global&&global&&global.Object===Object&&global;e.exports=n},function(e,t,n){var r=n(65),a=n(233),o=n(234),i=n(235),s=n(236),l=n(237);function c(e){var t=this.__data__=new r(e);this.size=t.size}c.prototype.clear=a,c.prototype.delete=o,c.prototype.get=i,c.prototype.has=s,c.prototype.set=l,e.exports=c},function(e,t){e.exports=function(e,t){return e===t||e!=e&&t!=t}},function(e,t,n){var r=n(40),a=n(99);e.exports=function(e){if(!a(e))return!1;var t=r(e);return"[object Function]"==t||"[object GeneratorFunction]"==t||"[object AsyncFunction]"==t||"[object Proxy]"==t}},function(e,t){var n=Function.prototype.toString;e.exports=function(e){if(null!=e){try{return n.call(e)}catch(e){}try{return e+""}catch(e){}}return""}},function(e,t,n){var r=n(254),a=n(31);e.exports=function e(t,n,o,i,s){return t===n||(null==t||null==n||!a(t)&&!a(n)?t!=t&&n!=n:r(t,n,o,i,e,s))}},function(e,t,n){var r=n(165),a=n(257),o=n(166);e.exports=function(e,t,n,i,s,l){var c=1&n,u=e.length,d=t.length;if(u!=d&&!(c&&d>u))return!1;var p=l.get(e),h=l.get(t);if(p&&h)return p==t&&h==e;var m=-1,g=!0,f=2&n?new r:void 0;for(l.set(e,t),l.set(t,e);++m<u;){var y=e[m],v=t[m];if(i)var b=c?i(v,y,m,t,e,l):i(y,v,m,e,t,l);if(void 0!==b){if(b)continue;g=!1;break}if(f){if(!a(t,(function(e,t){if(!o(f,t)&&(y===e||s(y,e,n,i,l)))return f.push(t)}))){g=!1;break}}else if(y!==v&&!s(y,v,n,i,l)){g=!1;break}}return l.delete(e),l.delete(t),g}},function(e,t,n){var r=n(100),a=n(255),o=n(256);function i(e){var t=-1,n=null==e?0:e.length;for(this.__data__=new r;++t<n;)this.add(e[t])}i.prototype.add=i.prototype.push=a,i.prototype.has=o,e.exports=i},function(e,t){e.exports=function(e,t){return e.has(t)}},function(e,t,n){var r=n(267),a=n(273),o=n(171);e.exports=function(e){return o(e)?r(e):a(e)}},function(e,t,n){(function(e){var r=n(19),a=n(269),o=t&&!t.nodeType&&t,i=o&&"object"==typeof e&&e&&!e.nodeType&&e,s=i&&i.exports===o?r.Buffer:void 0,l=(s?s.isBuffer:void 0)||a;e.exports=l}).call(this,n(125)(e))},function(e,t){var n=/^(?:0|[1-9]\d*)$/;e.exports=function(e,t){var r=typeof e;return!!(t=null==t?9007199254740991:t)&&("number"==r||"symbol"!=r&&n.test(e))&&e>-1&&e%1==0&&e<t}},function(e,t,n){var r=n(270),a=n(271),o=n(272),i=o&&o.isTypedArray,s=i?a(i):r;e.exports=s},function(e,t,n){var r=n(161),a=n(102);e.exports=function(e){return null!=e&&a(e.length)&&!r(e)}},function(e,t,n){var r=n(26)(n(19),"Set");e.exports=r},function(e,t,n){var r=n(99);e.exports=function(e){return e==e&&!r(e)}},function(e,t){e.exports=function(e,t){return function(n){return null!=n&&(n[e]===t&&(void 0!==t||e in Object(n)))}}},function(e,t,n){var r=n(176),a=n(69);e.exports=function(e,t){for(var n=0,o=(t=r(t,e)).length;null!=e&&n<o;)e=e[a(t[n++])];return n&&n==o?e:void 0}},function(e,t,n){var r=n(17),a=n(103),o=n(284),i=n(287);e.exports=function(e,t){return r(e)?e:a(e,t)?[e]:o(i(e))}},function(e,t,n){},function(e,t,n){},function(e,t,n){},function(e,t,n){n(0)({target:"Object",stat:!0},{setPrototypeOf:n(90)})},function(e,t,n){var r=n(0),a=n(23),o=n(24),i=n(6),s=n(4),l=n(30),c=n(327),u=n(1),d=a("Reflect","construct"),p=u((function(){function e(){}return!(d((function(){}),[],e)instanceof e)})),h=!u((function(){d((function(){}))})),m=p||h;r({target:"Reflect",stat:!0,forced:m,sham:m},{construct:function(e,t){o(e),i(t);var n=arguments.length<3?e:o(arguments[2]);if(h&&!p)return d(e,t,n);if(e==n){switch(t.length){case 0:return new e;case 1:return new e(t[0]);case 2:return new e(t[0],t[1]);case 3:return new e(t[0],t[1],t[2]);case 4:return new e(t[0],t[1],t[2],t[3])}var r=[null];return r.push.apply(r,t),new(c.apply(e,r))}var a=n.prototype,u=l(s(a)?a:Object.prototype),m=Function.apply.call(e,u,t);return s(m)?m:u}})},function(e,t,n){},function(e,t,n){},function(e,t,n){var r=n(220),a=n(225),o=n(296),i=n(304),s=n(313),l=n(200),c=o((function(e){var t=l(e);return s(t)&&(t=void 0),i(r(e,1,s,!0),a(t,2))}));e.exports=c},function(e,t,n){!function(){"use strict";e.exports={polyfill:function(){var e=window,t=document;if(!("scrollBehavior"in t.documentElement.style)||!0===e.__forceSmoothScrollPolyfill__){var n,r=e.HTMLElement||e.Element,a={scroll:e.scroll||e.scrollTo,scrollBy:e.scrollBy,elementScroll:r.prototype.scroll||s,scrollIntoView:r.prototype.scrollIntoView},o=e.performance&&e.performance.now?e.performance.now.bind(e.performance):Date.now,i=(n=e.navigator.userAgent,new RegExp(["MSIE ","Trident/","Edge/"].join("|")).test(n)?1:0);e.scroll=e.scrollTo=function(){void 0!==arguments[0]&&(!0!==l(arguments[0])?m.call(e,t.body,void 0!==arguments[0].left?~~arguments[0].left:e.scrollX||e.pageXOffset,void 0!==arguments[0].top?~~arguments[0].top:e.scrollY||e.pageYOffset):a.scroll.call(e,void 0!==arguments[0].left?arguments[0].left:"object"!=typeof arguments[0]?arguments[0]:e.scrollX||e.pageXOffset,void 0!==arguments[0].top?arguments[0].top:void 0!==arguments[1]?arguments[1]:e.scrollY||e.pageYOffset))},e.scrollBy=function(){void 0!==arguments[0]&&(l(arguments[0])?a.scrollBy.call(e,void 0!==arguments[0].left?arguments[0].left:"object"!=typeof arguments[0]?arguments[0]:0,void 0!==arguments[0].top?arguments[0].top:void 0!==arguments[1]?arguments[1]:0):m.call(e,t.body,~~arguments[0].left+(e.scrollX||e.pageXOffset),~~arguments[0].top+(e.scrollY||e.pageYOffset)))},r.prototype.scroll=r.prototype.scrollTo=function(){if(void 0!==arguments[0])if(!0!==l(arguments[0])){var e=arguments[0].left,t=arguments[0].top;m.call(this,this,void 0===e?this.scrollLeft:~~e,void 0===t?this.scrollTop:~~t)}else{if("number"==typeof arguments[0]&&void 0===arguments[1])throw new SyntaxError("Value could not be converted");a.elementScroll.call(this,void 0!==arguments[0].left?~~arguments[0].left:"object"!=typeof arguments[0]?~~arguments[0]:this.scrollLeft,void 0!==arguments[0].top?~~arguments[0].top:void 0!==arguments[1]?~~arguments[1]:this.scrollTop)}},r.prototype.scrollBy=function(){void 0!==arguments[0]&&(!0!==l(arguments[0])?this.scroll({left:~~arguments[0].left+this.scrollLeft,top:~~arguments[0].top+this.scrollTop,behavior:arguments[0].behavior}):a.elementScroll.call(this,void 0!==arguments[0].left?~~arguments[0].left+this.scrollLeft:~~arguments[0]+this.scrollLeft,void 0!==arguments[0].top?~~arguments[0].top+this.scrollTop:~~arguments[1]+this.scrollTop))},r.prototype.scrollIntoView=function(){if(!0!==l(arguments[0])){var n=p(this),r=n.getBoundingClientRect(),o=this.getBoundingClientRect();n!==t.body?(m.call(this,n,n.scrollLeft+o.left-r.left,n.scrollTop+o.top-r.top),"fixed"!==e.getComputedStyle(n).position&&e.scrollBy({left:r.left,top:r.top,behavior:"smooth"})):e.scrollBy({left:o.left,top:o.top,behavior:"smooth"})}else a.scrollIntoView.call(this,void 0===arguments[0]||arguments[0])}}function s(e,t){this.scrollLeft=e,this.scrollTop=t}function l(e){if(null===e||"object"!=typeof e||void 0===e.behavior||"auto"===e.behavior||"instant"===e.behavior)return!0;if("object"==typeof e&&"smooth"===e.behavior)return!1;throw new TypeError("behavior member of ScrollOptions "+e.behavior+" is not a valid value for enumeration ScrollBehavior.")}function c(e,t){return"Y"===t?e.clientHeight+i<e.scrollHeight:"X"===t?e.clientWidth+i<e.scrollWidth:void 0}function u(t,n){var r=e.getComputedStyle(t,null)["overflow"+n];return"auto"===r||"scroll"===r}function d(e){var t=c(e,"Y")&&u(e,"Y"),n=c(e,"X")&&u(e,"X");return t||n}function p(e){for(;e!==t.body&&!1===d(e);)e=e.parentNode||e.host;return e}function h(t){var n,r,a,i,s=(o()-t.startTime)/468;i=s=s>1?1:s,n=.5*(1-Math.cos(Math.PI*i)),r=t.startX+(t.x-t.startX)*n,a=t.startY+(t.y-t.startY)*n,t.method.call(t.scrollable,r,a),r===t.x&&a===t.y||e.requestAnimationFrame(h.bind(e,t))}function m(n,r,i){var l,c,u,d,p=o();n===t.body?(l=e,c=e.scrollX||e.pageXOffset,u=e.scrollY||e.pageYOffset,d=a.scroll):(l=n,c=n.scrollLeft,u=n.scrollTop,d=s),h({scrollable:l,method:d,startTime:p,startX:c,startY:u,x:r,y:i})}}}}()},function(e,t,n){"use strict";var r=n(0),a=n(34).some,o=n(29),i=n(21),s=o("some"),l=i("some");r({target:"Array",proto:!0,forced:!s||!l},{some:function(e){return a(this,e,arguments.length>1?arguments[1]:void 0)}})},function(e,t,n){"use strict";var r=n(111),a=n(122),o=n(6),i=n(16),s=n(92),l=n(124),c=n(11),u=n(112),d=n(63),p=n(1),h=[].push,m=Math.min,g=!p((function(){return!RegExp(4294967295,"y")}));r("split",2,(function(e,t,n){var r;return r="c"=="abbc".split(/(b)*/)[1]||4!="test".split(/(?:)/,-1).length||2!="ab".split(/(?:ab)*/).length||4!=".".split(/(.?)(.?)/).length||".".split(/()()/).length>1||"".split(/.?/).length?function(e,n){var r=String(i(this)),o=void 0===n?4294967295:n>>>0;if(0===o)return[];if(void 0===e)return[r];if(!a(e))return t.call(r,e,o);for(var s,l,c,u=[],p=(e.ignoreCase?"i":"")+(e.multiline?"m":"")+(e.unicode?"u":"")+(e.sticky?"y":""),m=0,g=new RegExp(e.source,p+"g");(s=d.call(g,r))&&!((l=g.lastIndex)>m&&(u.push(r.slice(m,s.index)),s.length>1&&s.index<r.length&&h.apply(u,s.slice(1)),c=s[0].length,m=l,u.length>=o));)g.lastIndex===s.index&&g.lastIndex++;return m===r.length?!c&&g.test("")||u.push(""):u.push(r.slice(m)),u.length>o?u.slice(0,o):u}:"0".split(void 0,0).length?function(e,n){return void 0===e&&0===n?[]:t.call(this,e,n)}:t,[function(t,n){var a=i(this),o=null==t?void 0:t[e];return void 0!==o?o.call(t,a,n):r.call(String(a),t,n)},function(e,a){var i=n(r,e,this,a,r!==t);if(i.done)return i.value;var d=o(e),p=String(this),h=s(d,RegExp),f=d.unicode,y=(d.ignoreCase?"i":"")+(d.multiline?"m":"")+(d.unicode?"u":"")+(g?"y":"g"),v=new h(g?d:"^(?:"+d.source+")",y),b=void 0===a?4294967295:a>>>0;if(0===b)return[];if(0===p.length)return null===u(v,p)?[p]:[];for(var k=0,w=0,x=[];w<p.length;){v.lastIndex=g?w:0;var T,I=u(v,g?p:p.slice(w));if(null===I||(T=m(c(v.lastIndex+(g?0:w)),p.length))===k)w=l(p,w,f);else{if(x.push(p.slice(k,w)),x.length===b)return x;for(var q=1;q<=I.length-1;q++)if(x.push(I[q]),x.length===b)return x;w=k=T}}return x.push(p.slice(k)),x}]}),!g)},function(e,t,n){"use strict";var r=n(0),a=n(84).indexOf,o=n(29),i=n(21),s=[].indexOf,l=!!s&&1/[1].indexOf(1,-0)<0,c=o("indexOf"),u=i("indexOf",{ACCESSORS:!0,1:0});r({target:"Array",proto:!0,forced:l||!c||!u},{indexOf:function(e){return l?s.apply(this,arguments)||0:a(this,e,arguments.length>1?arguments[1]:void 0)}})},function(e,t){e.exports=function(e,t,n){if(!(e instanceof t))throw TypeError("Incorrect "+(n?n+" ":"")+"invocation");return e}},function(e,t,n){"use strict";var r=n(0),a=n(41),o=n(14),i=n(29),s=[].join,l=a!=Object,c=i("join",",");r({target:"Array",proto:!0,forced:l||!c},{join:function(e){return s.call(o(this),void 0===e?",":e)}})},function(e,t,n){"use strict";var r=n(0),a=n(24),o=n(13),i=n(1),s=n(29),l=[],c=l.sort,u=i((function(){l.sort(void 0)})),d=i((function(){l.sort(null)})),p=s("sort");r({target:"Array",proto:!0,forced:u||!d||!p},{sort:function(e){return void 0===e?c.call(o(this)):c.call(o(this),a(e))}})},function(e,t,n){"use strict";var r=n(138).IteratorPrototype,a=n(30),o=n(38),i=n(51),s=n(44),l=function(){return this};e.exports=function(e,t,n){var c=t+" Iterator";return e.prototype=a(r,{next:o(1,n)}),i(e,c,!1,!0),s[c]=l,e}},function(e,t,n){var r=n(12);e.exports=function(e,t,n){for(var a in t)r(e,a,t[a],n);return e}},function(e,t,n){"use strict";var r=n(23),a=n(8),o=n(3),i=n(5),s=o("species");e.exports=function(e){var t=r(e),n=a.f;i&&t&&!t[s]&&n(t,s,{configurable:!0,get:function(){return this}})}},function(e,t,n){"use strict";var r=n(5),a=n(1),o=n(56),i=n(88),s=n(87),l=n(13),c=n(41),u=Object.assign,d=Object.defineProperty;e.exports=!u||a((function(){if(r&&1!==u({b:1},u(d({},"a",{enumerable:!0,get:function(){d(this,"b",{value:3,enumerable:!1})}}),{b:2})).b)return!0;var e={},t={},n=Symbol();return e[n]=7,"abcdefghijklmnopqrst".split("").forEach((function(e){t[e]=e})),7!=u({},e)[n]||"abcdefghijklmnopqrst"!=o(u({},t)).join("")}))?function(e,t){for(var n=l(e),a=arguments.length,u=1,d=i.f,p=s.f;a>u;)for(var h,m=c(arguments[u++]),g=d?o(m).concat(d(m)):o(m),f=g.length,y=0;f>y;)h=g[y++],r&&!p.call(m,h)||(n[h]=m[h]);return n}:u},function(e,t,n){"use strict";var r=n(0),a=n(84).includes,o=n(108);r({target:"Array",proto:!0,forced:!n(21)("indexOf",{ACCESSORS:!0,1:0})},{includes:function(e){return a(this,e,arguments.length>1?arguments[1]:void 0)}}),o("includes")},function(e,t,n){"use strict";var r=n(1);function a(e,t){return RegExp(e,t)}t.UNSUPPORTED_Y=r((function(){var e=a("a","y");return e.lastIndex=2,null!=e.exec("abcd")})),t.BROKEN_CARET=r((function(){var e=a("^r","gy");return e.lastIndex=2,null!=e.exec("str")}))},function(e,t,n){"use strict";var r=n(0),a=n(94),o=n(16);r({target:"String",proto:!0,forced:!n(95)("includes")},{includes:function(e){return!!~String(o(this)).indexOf(a(e),arguments.length>1?arguments[1]:void 0)}})},function(e,t,n){"use strict";var r=n(52),a=n(13),o=n(219),i=n(141),s=n(11),l=n(61),c=n(109);e.exports=function(e){var t,n,u,d,p,h,m=a(e),g="function"==typeof this?this:Array,f=arguments.length,y=f>1?arguments[1]:void 0,v=void 0!==y,b=c(m),k=0;if(v&&(y=r(y,f>2?arguments[2]:void 0,2)),null==b||g==Array&&i(b))for(n=new g(t=s(m.length));t>k;k++)h=v?y(m[k],k):m[k],l(n,k,h);else for(p=(d=b.call(m)).next,n=new g;!(u=p.call(d)).done;k++)h=v?o(d,y,[u.value,k],!0):u.value,l(n,k,h);return n.length=k,n}},function(e,t){e.exports=function(e){var t=null==e?0:e.length;return t?e[t-1]:void 0}},function(e,t,n){var r=n(4),a=n(90);e.exports=function(e,t,n){var o,i;return a&&"function"==typeof(o=t.constructor)&&o!==n&&r(i=o.prototype)&&i!==n.prototype&&a(e,i),e}},function(e,t,n){var r=n(0),a=n(317);r({global:!0,forced:parseInt!=a},{parseInt:a})},function(e,t,n){e.exports=n(330)},function(e,t,n){var r=n(2),a=n(86),o=r.WeakMap;e.exports="function"==typeof o&&/native code/.test(a(o))},function(e,t,n){var r=n(4);e.exports=function(e){if(!r(e)&&null!==e)throw TypeError("Can't set "+String(e)+" as a prototype");return e}},function(e,t,n){"use strict";var r,a,o,i,s=n(0),l=n(22),c=n(2),u=n(23),d=n(140),p=n(12),h=n(193),m=n(51),g=n(194),f=n(4),y=n(24),v=n(189),b=n(86),k=n(207),w=n(143),x=n(92),T=n(144).set,I=n(208),q=n(146),j=n(209),z=n(147),E=n(210),_=n(33),S=n(77),D=n(3),C=n(58),R=n(59),A=D("species"),P="Promise",O=_.get,L=_.set,F=_.getterFor(P),M=d,N=c.TypeError,K=c.document,B=c.process,U=u("fetch"),$=z.f,W=$,G=!!(K&&K.createEvent&&c.dispatchEvent),V="function"==typeof PromiseRejectionEvent,H=S(P,(function(){if(!(b(M)!==String(M))){if(66===R)return!0;if(!C&&!V)return!0}if(l&&!M.prototype.finally)return!0;if(R>=51&&/native code/.test(M))return!1;var e=M.resolve(1),t=function(e){e((function(){}),(function(){}))};return(e.constructor={})[A]=t,!(e.then((function(){}))instanceof t)})),J=H||!w((function(e){M.all(e).catch((function(){}))})),Y=function(e){var t;return!(!f(e)||"function"!=typeof(t=e.then))&&t},Q=function(e,t){if(!e.notified){e.notified=!0;var n=e.reactions;I((function(){for(var r=e.value,a=1==e.state,o=0;n.length>o;){var i,s,l,c=n[o++],u=a?c.ok:c.fail,d=c.resolve,p=c.reject,h=c.domain;try{u?(a||(2===e.rejection&&te(e),e.rejection=1),!0===u?i=r:(h&&h.enter(),i=u(r),h&&(h.exit(),l=!0)),i===c.promise?p(N("Promise-chain cycle")):(s=Y(i))?s.call(i,d,p):d(i)):p(r)}catch(e){h&&!l&&h.exit(),p(e)}}e.reactions=[],e.notified=!1,t&&!e.rejection&&X(e)}))}},Z=function(e,t,n){var r,a;G?((r=K.createEvent("Event")).promise=t,r.reason=n,r.initEvent(e,!1,!0),c.dispatchEvent(r)):r={promise:t,reason:n},!V&&(a=c["on"+e])?a(r):"unhandledrejection"===e&&j("Unhandled promise rejection",n)},X=function(e){T.call(c,(function(){var t,n=e.facade,r=e.value;if(ee(e)&&(t=E((function(){C?B.emit("unhandledRejection",r,n):Z("unhandledrejection",n,r)})),e.rejection=C||ee(e)?2:1,t.error))throw t.value}))},ee=function(e){return 1!==e.rejection&&!e.parent},te=function(e){T.call(c,(function(){var t=e.facade;C?B.emit("rejectionHandled",t):Z("rejectionhandled",t,e.value)}))},ne=function(e,t,n){return function(r){e(t,r,n)}},re=function(e,t,n){e.done||(e.done=!0,n&&(e=n),e.value=t,e.state=2,Q(e,!0))},ae=function(e,t,n){if(!e.done){e.done=!0,n&&(e=n);try{if(e.facade===t)throw N("Promise can't be resolved itself");var r=Y(t);r?I((function(){var n={done:!1};try{r.call(t,ne(ae,n,e),ne(re,n,e))}catch(t){re(n,t,e)}})):(e.value=t,e.state=1,Q(e,!1))}catch(t){re({done:!1},t,e)}}};H&&(M=function(e){v(this,M,P),y(e),r.call(this);var t=O(this);try{e(ne(ae,t),ne(re,t))}catch(e){re(t,e)}},(r=function(e){L(this,{type:P,done:!1,notified:!1,parent:!1,reactions:[],rejection:!1,state:0,value:void 0})}).prototype=h(M.prototype,{then:function(e,t){var n=F(this),r=$(x(this,M));return r.ok="function"!=typeof e||e,r.fail="function"==typeof t&&t,r.domain=C?B.domain:void 0,n.parent=!0,n.reactions.push(r),0!=n.state&&Q(n,!1),r.promise},catch:function(e){return this.then(void 0,e)}}),a=function(){var e=new r,t=O(e);this.promise=e,this.resolve=ne(ae,t),this.reject=ne(re,t)},z.f=$=function(e){return e===M||e===o?new a(e):W(e)},l||"function"!=typeof d||(i=d.prototype.then,p(d.prototype,"then",(function(e,t){var n=this;return new M((function(e,t){i.call(n,e,t)})).then(e,t)}),{unsafe:!0}),"function"==typeof U&&s({global:!0,enumerable:!0,forced:!0},{fetch:function(e){return q(M,U.apply(c,arguments))}}))),s({global:!0,wrap:!0,forced:H},{Promise:M}),m(M,P,!1,!0),g(P),o=u(P),s({target:P,stat:!0,forced:H},{reject:function(e){var t=$(this);return t.reject.call(void 0,e),t.promise}}),s({target:P,stat:!0,forced:l||H},{resolve:function(e){return q(l&&this===o?M:this,e)}}),s({target:P,stat:!0,forced:J},{all:function(e){var t=this,n=$(t),r=n.resolve,a=n.reject,o=E((function(){var n=y(t.resolve),o=[],i=0,s=1;k(e,(function(e){var l=i++,c=!1;o.push(void 0),s++,n.call(t,e).then((function(e){c||(c=!0,o[l]=e,--s||r(o))}),a)})),--s||r(o)}));return o.error&&a(o.value),n.promise},race:function(e){var t=this,n=$(t),r=n.reject,a=E((function(){var a=y(t.resolve);k(e,(function(e){a.call(t,e).then(n.resolve,r)}))}));return a.error&&r(a.value),n.promise}})},function(e,t,n){var r=n(6),a=n(141),o=n(11),i=n(52),s=n(109),l=n(142),c=function(e,t){this.stopped=e,this.result=t};e.exports=function(e,t,n){var u,d,p,h,m,g,f,y=n&&n.that,v=!(!n||!n.AS_ENTRIES),b=!(!n||!n.IS_ITERATOR),k=!(!n||!n.INTERRUPTED),w=i(t,y,1+v+k),x=function(e){return u&&l(u),new c(!0,e)},T=function(e){return v?(r(e),k?w(e[0],e[1],x):w(e[0],e[1])):k?w(e,x):w(e)};if(b)u=e;else{if("function"!=typeof(d=s(e)))throw TypeError("Target is not iterable");if(a(d)){for(p=0,h=o(e.length);h>p;p++)if((m=T(e[p]))&&m instanceof c)return m;return new c(!1)}u=d.call(e)}for(g=u.next;!(f=g.call(u)).done;){try{m=T(f.value)}catch(e){throw l(u),e}if("object"==typeof m&&m&&m instanceof c)return m}return new c(!1)}},function(e,t,n){var r,a,o,i,s,l,c,u,d=n(2),p=n(18).f,h=n(144).set,m=n(145),g=n(58),f=d.MutationObserver||d.WebKitMutationObserver,y=d.document,v=d.process,b=d.Promise,k=p(d,"queueMicrotask"),w=k&&k.value;w||(r=function(){var e,t;for(g&&(e=v.domain)&&e.exit();a;){t=a.fn,a=a.next;try{t()}catch(e){throw a?i():o=void 0,e}}o=void 0,e&&e.enter()},!m&&!g&&f&&y?(s=!0,l=y.createTextNode(""),new f(r).observe(l,{characterData:!0}),i=function(){l.data=s=!s}):b&&b.resolve?(c=b.resolve(void 0),u=c.then,i=function(){u.call(c,r)}):i=g?function(){v.nextTick(r)}:function(){h.call(d,r)}),e.exports=w||function(e){var t={fn:e,next:void 0};o&&(o.next=t),a||(a=t,i()),o=t}},function(e,t,n){var r=n(2);e.exports=function(e,t){var n=r.console;n&&n.error&&(1===arguments.length?n.error(e):n.error(e,t))}},function(e,t){e.exports=function(e){try{return{error:!1,value:e()}}catch(e){return{error:!0,value:e}}}},function(e,t,n){var r=n(0),a=n(195);r({target:"Object",stat:!0,forced:Object.assign!==a},{assign:a})},function(e,t,n){"use strict";var r=n(0),a=n(22),o=n(140),i=n(1),s=n(23),l=n(92),c=n(146),u=n(12);r({target:"Promise",proto:!0,real:!0,forced:!!o&&i((function(){o.prototype.finally.call({then:function(){}},(function(){}))}))},{finally:function(e){var t=l(this,s("Promise")),n="function"==typeof e;return this.then(n?function(n){return c(t,e()).then((function(){return n}))}:e,n?function(n){return c(t,e()).then((function(){throw n}))}:e)}}),a||"function"!=typeof o||o.prototype.finally||u(o.prototype,"finally",s("Promise").prototype.finally)},function(e,t,n){"use strict";var r=n(91),a=n(118);e.exports=r?{}.toString:function(){return"[object "+a(this)+"]"}},function(e,t,n){"use strict";var r=n(0),a=n(215).left,o=n(29),i=n(21),s=n(59),l=n(58),c=o("reduce"),u=i("reduce",{1:0});r({target:"Array",proto:!0,forced:!c||!u||!l&&s>79&&s<83},{reduce:function(e){return a(this,e,arguments.length,arguments.length>1?arguments[1]:void 0)}})},function(e,t,n){var r=n(24),a=n(13),o=n(41),i=n(11),s=function(e){return function(t,n,s,l){r(n);var c=a(t),u=o(c),d=i(c.length),p=e?d-1:0,h=e?-1:1;if(s<2)for(;;){if(p in u){l=u[p],p+=h;break}if(p+=h,e?p<0:d<=p)throw TypeError("Reduce of empty array with no initial value")}for(;e?p>=0:d>p;p+=h)p in u&&(l=n(l,u[p],p,c));return l}};e.exports={left:s(!1),right:s(!0)}},function(e,t,n){var r=n(0),a=n(150),o=n(1),i=n(4),s=n(217).onFreeze,l=Object.freeze;r({target:"Object",stat:!0,forced:o((function(){l(1)})),sham:!a},{freeze:function(e){return l&&i(e)?l(s(e)):e}})},function(e,t,n){var r=n(43),a=n(4),o=n(7),i=n(8).f,s=n(55),l=n(150),c=s("meta"),u=0,d=Object.isExtensible||function(){return!0},p=function(e){i(e,c,{value:{objectID:"O"+ ++u,weakData:{}}})},h=e.exports={REQUIRED:!1,fastKey:function(e,t){if(!a(e))return"symbol"==typeof e?e:("string"==typeof e?"S":"P")+e;if(!o(e,c)){if(!d(e))return"F";if(!t)return"E";p(e)}return e[c].objectID},getWeakData:function(e,t){if(!o(e,c)){if(!d(e))return!0;if(!t)return!1;p(e)}return e[c].weakData},onFreeze:function(e){return l&&h.REQUIRED&&d(e)&&!o(e,c)&&p(e),e}};r[c]=!0},function(e,t,n){var r=n(14),a=n(54).f,o={}.toString,i="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];e.exports.f=function(e){return i&&"[object Window]"==o.call(e)?function(e){try{return a(e)}catch(e){return i.slice()}}(e):a(r(e))}},function(e,t,n){var r=n(6),a=n(142);e.exports=function(e,t,n,o){try{return o?t(r(n)[0],n[1]):t(n)}catch(t){throw a(e),t}}},function(e,t,n){var r=n(157),a=n(221);e.exports=function e(t,n,o,i,s){var l=-1,c=t.length;for(o||(o=a),s||(s=[]);++l<c;){var u=t[l];n>0&&o(u)?n>1?e(u,n-1,o,i,s):r(s,u):i||(s[s.length]=u)}return s}},function(e,t,n){var r=n(46),a=n(97),o=n(17),i=r?r.isConcatSpreadable:void 0;e.exports=function(e){return o(e)||a(e)||!!(i&&e&&e[i])}},function(e,t,n){var r=n(40),a=n(31);e.exports=function(e){return a(e)&&"[object Arguments]"==r(e)}},function(e,t,n){var r=n(46),a=Object.prototype,o=a.hasOwnProperty,i=a.toString,s=r?r.toStringTag:void 0;e.exports=function(e){var t=o.call(e,s),n=e[s];try{e[s]=void 0;var r=!0}catch(e){}var a=i.call(e);return r&&(t?e[s]=n:delete e[s]),a}},function(e,t){var n=Object.prototype.toString;e.exports=function(e){return n.call(e)}},function(e,t,n){var r=n(226),a=n(282),o=n(105),i=n(17),s=n(293);e.exports=function(e){return"function"==typeof e?e:null==e?o:"object"==typeof e?i(e)?a(e[0],e[1]):r(e):s(e)}},function(e,t,n){var r=n(227),a=n(281),o=n(174);e.exports=function(e){var t=a(e);return 1==t.length&&t[0][2]?o(t[0][0],t[0][1]):function(n){return n===e||r(n,e,t)}}},function(e,t,n){var r=n(159),a=n(163);e.exports=function(e,t,n,o){var i=n.length,s=i,l=!o;if(null==e)return!s;for(e=Object(e);i--;){var c=n[i];if(l&&c[2]?c[1]!==e[c[0]]:!(c[0]in e))return!1}for(;++i<s;){var u=(c=n[i])[0],d=e[u],p=c[1];if(l&&c[2]){if(void 0===d&&!(u in e))return!1}else{var h=new r;if(o)var m=o(d,p,u,e,t,h);if(!(void 0===m?a(p,d,3,o,h):m))return!1}}return!0}},function(e,t){e.exports=function(){this.__data__=[],this.size=0}},function(e,t,n){var r=n(66),a=Array.prototype.splice;e.exports=function(e){var t=this.__data__,n=r(t,e);return!(n<0)&&(n==t.length-1?t.pop():a.call(t,n,1),--this.size,!0)}},function(e,t,n){var r=n(66);e.exports=function(e){var t=this.__data__,n=r(t,e);return n<0?void 0:t[n][1]}},function(e,t,n){var r=n(66);e.exports=function(e){return r(this.__data__,e)>-1}},function(e,t,n){var r=n(66);e.exports=function(e,t){var n=this.__data__,a=r(n,e);return a<0?(++this.size,n.push([e,t])):n[a][1]=t,this}},function(e,t,n){var r=n(65);e.exports=function(){this.__data__=new r,this.size=0}},function(e,t){e.exports=function(e){var t=this.__data__,n=t.delete(e);return this.size=t.size,n}},function(e,t){e.exports=function(e){return this.__data__.get(e)}},function(e,t){e.exports=function(e){return this.__data__.has(e)}},function(e,t,n){var r=n(65),a=n(98),o=n(100);e.exports=function(e,t){var n=this.__data__;if(n instanceof r){var i=n.__data__;if(!a||i.length<199)return i.push([e,t]),this.size=++n.size,this;n=this.__data__=new o(i)}return n.set(e,t),this.size=n.size,this}},function(e,t,n){var r=n(161),a=n(239),o=n(99),i=n(162),s=/^\[object .+?Constructor\]$/,l=Function.prototype,c=Object.prototype,u=l.toString,d=c.hasOwnProperty,p=RegExp("^"+u.call(d).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");e.exports=function(e){return!(!o(e)||a(e))&&(r(e)?p:s).test(i(e))}},function(e,t,n){var r,a=n(240),o=(r=/[^.]+$/.exec(a&&a.keys&&a.keys.IE_PROTO||""))?"Symbol(src)_1."+r:"";e.exports=function(e){return!!o&&o in e}},function(e,t,n){var r=n(19)["__core-js_shared__"];e.exports=r},function(e,t){e.exports=function(e,t){return null==e?void 0:e[t]}},function(e,t,n){var r=n(243),a=n(65),o=n(98);e.exports=function(){this.size=0,this.__data__={hash:new r,map:new(o||a),string:new r}}},function(e,t,n){var r=n(244),a=n(245),o=n(246),i=n(247),s=n(248);function l(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var r=e[t];this.set(r[0],r[1])}}l.prototype.clear=r,l.prototype.delete=a,l.prototype.get=o,l.prototype.has=i,l.prototype.set=s,e.exports=l},function(e,t,n){var r=n(67);e.exports=function(){this.__data__=r?r(null):{},this.size=0}},function(e,t){e.exports=function(e){var t=this.has(e)&&delete this.__data__[e];return this.size-=t?1:0,t}},function(e,t,n){var r=n(67),a=Object.prototype.hasOwnProperty;e.exports=function(e){var t=this.__data__;if(r){var n=t[e];return"__lodash_hash_undefined__"===n?void 0:n}return a.call(t,e)?t[e]:void 0}},function(e,t,n){var r=n(67),a=Object.prototype.hasOwnProperty;e.exports=function(e){var t=this.__data__;return r?void 0!==t[e]:a.call(t,e)}},function(e,t,n){var r=n(67);e.exports=function(e,t){var n=this.__data__;return this.size+=this.has(e)?0:1,n[e]=r&&void 0===t?"__lodash_hash_undefined__":t,this}},function(e,t,n){var r=n(68);e.exports=function(e){var t=r(this,e).delete(e);return this.size-=t?1:0,t}},function(e,t){e.exports=function(e){var t=typeof e;return"string"==t||"number"==t||"symbol"==t||"boolean"==t?"__proto__"!==e:null===e}},function(e,t,n){var r=n(68);e.exports=function(e){return r(this,e).get(e)}},function(e,t,n){var r=n(68);e.exports=function(e){return r(this,e).has(e)}},function(e,t,n){var r=n(68);e.exports=function(e,t){var n=r(this,e),a=n.size;return n.set(e,t),this.size+=n.size==a?0:1,this}},function(e,t,n){var r=n(159),a=n(164),o=n(258),i=n(261),s=n(277),l=n(17),c=n(168),u=n(170),d="[object Object]",p=Object.prototype.hasOwnProperty;e.exports=function(e,t,n,h,m,g){var f=l(e),y=l(t),v=f?"[object Array]":s(e),b=y?"[object Array]":s(t),k=(v="[object Arguments]"==v?d:v)==d,w=(b="[object Arguments]"==b?d:b)==d,x=v==b;if(x&&c(e)){if(!c(t))return!1;f=!0,k=!1}if(x&&!k)return g||(g=new r),f||u(e)?a(e,t,n,h,m,g):o(e,t,v,n,h,m,g);if(!(1&n)){var T=k&&p.call(e,"__wrapped__"),I=w&&p.call(t,"__wrapped__");if(T||I){var q=T?e.value():e,j=I?t.value():t;return g||(g=new r),m(q,j,n,h,g)}}return!!x&&(g||(g=new r),i(e,t,n,h,m,g))}},function(e,t){e.exports=function(e){return this.__data__.set(e,"__lodash_hash_undefined__"),this}},function(e,t){e.exports=function(e){return this.__data__.has(e)}},function(e,t){e.exports=function(e,t){for(var n=-1,r=null==e?0:e.length;++n<r;)if(t(e[n],n,e))return!0;return!1}},function(e,t,n){var r=n(46),a=n(259),o=n(160),i=n(164),s=n(260),l=n(101),c=r?r.prototype:void 0,u=c?c.valueOf:void 0;e.exports=function(e,t,n,r,c,d,p){switch(n){case"[object DataView]":if(e.byteLength!=t.byteLength||e.byteOffset!=t.byteOffset)return!1;e=e.buffer,t=t.buffer;case"[object ArrayBuffer]":return!(e.byteLength!=t.byteLength||!d(new a(e),new a(t)));case"[object Boolean]":case"[object Date]":case"[object Number]":return o(+e,+t);case"[object Error]":return e.name==t.name&&e.message==t.message;case"[object RegExp]":case"[object String]":return e==t+"";case"[object Map]":var h=s;case"[object Set]":var m=1&r;if(h||(h=l),e.size!=t.size&&!m)return!1;var g=p.get(e);if(g)return g==t;r|=2,p.set(e,t);var f=i(h(e),h(t),r,c,d,p);return p.delete(e),f;case"[object Symbol]":if(u)return u.call(e)==u.call(t)}return!1}},function(e,t,n){var r=n(19).Uint8Array;e.exports=r},function(e,t){e.exports=function(e){var t=-1,n=Array(e.size);return e.forEach((function(e,r){n[++t]=[r,e]})),n}},function(e,t,n){var r=n(262),a=Object.prototype.hasOwnProperty;e.exports=function(e,t,n,o,i,s){var l=1&n,c=r(e),u=c.length;if(u!=r(t).length&&!l)return!1;for(var d=u;d--;){var p=c[d];if(!(l?p in t:a.call(t,p)))return!1}var h=s.get(e),m=s.get(t);if(h&&m)return h==t&&m==e;var g=!0;s.set(e,t),s.set(t,e);for(var f=l;++d<u;){var y=e[p=c[d]],v=t[p];if(o)var b=l?o(v,y,p,t,e,s):o(y,v,p,e,t,s);if(!(void 0===b?y===v||i(y,v,n,o,s):b)){g=!1;break}f||(f="constructor"==p)}if(g&&!f){var k=e.constructor,w=t.constructor;k==w||!("constructor"in e)||!("constructor"in t)||"function"==typeof k&&k instanceof k&&"function"==typeof w&&w instanceof w||(g=!1)}return s.delete(e),s.delete(t),g}},function(e,t,n){var r=n(263),a=n(264),o=n(167);e.exports=function(e){return r(e,o,a)}},function(e,t,n){var r=n(157),a=n(17);e.exports=function(e,t,n){var o=t(e);return a(e)?o:r(o,n(e))}},function(e,t,n){var r=n(265),a=n(266),o=Object.prototype.propertyIsEnumerable,i=Object.getOwnPropertySymbols,s=i?function(e){return null==e?[]:(e=Object(e),r(i(e),(function(t){return o.call(e,t)})))}:a;e.exports=s},function(e,t){e.exports=function(e,t){for(var n=-1,r=null==e?0:e.length,a=0,o=[];++n<r;){var i=e[n];t(i,n,e)&&(o[a++]=i)}return o}},function(e,t){e.exports=function(){return[]}},function(e,t,n){var r=n(268),a=n(97),o=n(17),i=n(168),s=n(169),l=n(170),c=Object.prototype.hasOwnProperty;e.exports=function(e,t){var n=o(e),u=!n&&a(e),d=!n&&!u&&i(e),p=!n&&!u&&!d&&l(e),h=n||u||d||p,m=h?r(e.length,String):[],g=m.length;for(var f in e)!t&&!c.call(e,f)||h&&("length"==f||d&&("offset"==f||"parent"==f)||p&&("buffer"==f||"byteLength"==f||"byteOffset"==f)||s(f,g))||m.push(f);return m}},function(e,t){e.exports=function(e,t){for(var n=-1,r=Array(e);++n<e;)r[n]=t(n);return r}},function(e,t){e.exports=function(){return!1}},function(e,t,n){var r=n(40),a=n(102),o=n(31),i={};i["[object Float32Array]"]=i["[object Float64Array]"]=i["[object Int8Array]"]=i["[object Int16Array]"]=i["[object Int32Array]"]=i["[object Uint8Array]"]=i["[object Uint8ClampedArray]"]=i["[object Uint16Array]"]=i["[object Uint32Array]"]=!0,i["[object Arguments]"]=i["[object Array]"]=i["[object ArrayBuffer]"]=i["[object Boolean]"]=i["[object DataView]"]=i["[object Date]"]=i["[object Error]"]=i["[object Function]"]=i["[object Map]"]=i["[object Number]"]=i["[object Object]"]=i["[object RegExp]"]=i["[object Set]"]=i["[object String]"]=i["[object WeakMap]"]=!1,e.exports=function(e){return o(e)&&a(e.length)&&!!i[r(e)]}},function(e,t){e.exports=function(e){return function(t){return e(t)}}},function(e,t,n){(function(e){var r=n(158),a=t&&!t.nodeType&&t,o=a&&"object"==typeof e&&e&&!e.nodeType&&e,i=o&&o.exports===a&&r.process,s=function(){try{var e=o&&o.require&&o.require("util").types;return e||i&&i.binding&&i.binding("util")}catch(e){}}();e.exports=s}).call(this,n(125)(e))},function(e,t,n){var r=n(274),a=n(275),o=Object.prototype.hasOwnProperty;e.exports=function(e){if(!r(e))return a(e);var t=[];for(var n in Object(e))o.call(e,n)&&"constructor"!=n&&t.push(n);return t}},function(e,t){var n=Object.prototype;e.exports=function(e){var t=e&&e.constructor;return e===("function"==typeof t&&t.prototype||n)}},function(e,t,n){var r=n(276)(Object.keys,Object);e.exports=r},function(e,t){e.exports=function(e,t){return function(n){return e(t(n))}}},function(e,t,n){var r=n(278),a=n(98),o=n(279),i=n(172),s=n(280),l=n(40),c=n(162),u=c(r),d=c(a),p=c(o),h=c(i),m=c(s),g=l;(r&&"[object DataView]"!=g(new r(new ArrayBuffer(1)))||a&&"[object Map]"!=g(new a)||o&&"[object Promise]"!=g(o.resolve())||i&&"[object Set]"!=g(new i)||s&&"[object WeakMap]"!=g(new s))&&(g=function(e){var t=l(e),n="[object Object]"==t?e.constructor:void 0,r=n?c(n):"";if(r)switch(r){case u:return"[object DataView]";case d:return"[object Map]";case p:return"[object Promise]";case h:return"[object Set]";case m:return"[object WeakMap]"}return t}),e.exports=g},function(e,t,n){var r=n(26)(n(19),"DataView");e.exports=r},function(e,t,n){var r=n(26)(n(19),"Promise");e.exports=r},function(e,t,n){var r=n(26)(n(19),"WeakMap");e.exports=r},function(e,t,n){var r=n(173),a=n(167);e.exports=function(e){for(var t=a(e),n=t.length;n--;){var o=t[n],i=e[o];t[n]=[o,i,r(i)]}return t}},function(e,t,n){var r=n(163),a=n(283),o=n(290),i=n(103),s=n(173),l=n(174),c=n(69);e.exports=function(e,t){return i(e)&&s(t)?l(c(e),t):function(n){var i=a(n,e);return void 0===i&&i===t?o(n,e):r(t,i,3)}}},function(e,t,n){var r=n(175);e.exports=function(e,t,n){var a=null==e?void 0:r(e,t);return void 0===a?n:a}},function(e,t,n){var r=n(285),a=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,o=/\\(\\)?/g,i=r((function(e){var t=[];return 46===e.charCodeAt(0)&&t.push(""),e.replace(a,(function(e,n,r,a){t.push(r?a.replace(o,"$1"):n||e)})),t}));e.exports=i},function(e,t,n){var r=n(286);e.exports=function(e){var t=r(e,(function(e){return 500===n.size&&n.clear(),e})),n=t.cache;return t}},function(e,t,n){var r=n(100);function a(e,t){if("function"!=typeof e||null!=t&&"function"!=typeof t)throw new TypeError("Expected a function");var n=function(){var r=arguments,a=t?t.apply(this,r):r[0],o=n.cache;if(o.has(a))return o.get(a);var i=e.apply(this,r);return n.cache=o.set(a,i)||o,i};return n.cache=new(a.Cache||r),n}a.Cache=r,e.exports=a},function(e,t,n){var r=n(288);e.exports=function(e){return null==e?"":r(e)}},function(e,t,n){var r=n(46),a=n(289),o=n(17),i=n(104),s=r?r.prototype:void 0,l=s?s.toString:void 0;e.exports=function e(t){if("string"==typeof t)return t;if(o(t))return a(t,e)+"";if(i(t))return l?l.call(t):"";var n=t+"";return"0"==n&&1/t==-1/0?"-0":n}},function(e,t){e.exports=function(e,t){for(var n=-1,r=null==e?0:e.length,a=Array(r);++n<r;)a[n]=t(e[n],n,e);return a}},function(e,t,n){var r=n(291),a=n(292);e.exports=function(e,t){return null!=e&&a(e,t,r)}},function(e,t){e.exports=function(e,t){return null!=e&&t in Object(e)}},function(e,t,n){var r=n(176),a=n(97),o=n(17),i=n(169),s=n(102),l=n(69);e.exports=function(e,t,n){for(var c=-1,u=(t=r(t,e)).length,d=!1;++c<u;){var p=l(t[c]);if(!(d=null!=e&&n(e,p)))break;e=e[p]}return d||++c!=u?d:!!(u=null==e?0:e.length)&&s(u)&&i(p,u)&&(o(e)||a(e))}},function(e,t,n){var r=n(294),a=n(295),o=n(103),i=n(69);e.exports=function(e){return o(e)?r(i(e)):a(e)}},function(e,t){e.exports=function(e){return function(t){return null==t?void 0:t[e]}}},function(e,t,n){var r=n(175);e.exports=function(e){return function(t){return r(t,e)}}},function(e,t,n){var r=n(105),a=n(297),o=n(299);e.exports=function(e,t){return o(a(e,t,r),e+"")}},function(e,t,n){var r=n(298),a=Math.max;e.exports=function(e,t,n){return t=a(void 0===t?e.length-1:t,0),function(){for(var o=arguments,i=-1,s=a(o.length-t,0),l=Array(s);++i<s;)l[i]=o[t+i];i=-1;for(var c=Array(t+1);++i<t;)c[i]=o[i];return c[t]=n(l),r(e,this,c)}}},function(e,t){e.exports=function(e,t,n){switch(n.length){case 0:return e.call(t);case 1:return e.call(t,n[0]);case 2:return e.call(t,n[0],n[1]);case 3:return e.call(t,n[0],n[1],n[2])}return e.apply(t,n)}},function(e,t,n){var r=n(300),a=n(303)(r);e.exports=a},function(e,t,n){var r=n(301),a=n(302),o=n(105),i=a?function(e,t){return a(e,"toString",{configurable:!0,enumerable:!1,value:r(t),writable:!0})}:o;e.exports=i},function(e,t){e.exports=function(e){return function(){return e}}},function(e,t,n){var r=n(26),a=function(){try{var e=r(Object,"defineProperty");return e({},"",{}),e}catch(e){}}();e.exports=a},function(e,t){var n=Date.now;e.exports=function(e){var t=0,r=0;return function(){var a=n(),o=16-(a-r);if(r=a,o>0){if(++t>=800)return arguments[0]}else t=0;return e.apply(void 0,arguments)}}},function(e,t,n){var r=n(165),a=n(305),o=n(310),i=n(166),s=n(311),l=n(101);e.exports=function(e,t,n){var c=-1,u=a,d=e.length,p=!0,h=[],m=h;if(n)p=!1,u=o;else if(d>=200){var g=t?null:s(e);if(g)return l(g);p=!1,u=i,m=new r}else m=t?[]:h;e:for(;++c<d;){var f=e[c],y=t?t(f):f;if(f=n||0!==f?f:0,p&&y==y){for(var v=m.length;v--;)if(m[v]===y)continue e;t&&m.push(y),h.push(f)}else u(m,y,n)||(m!==h&&m.push(y),h.push(f))}return h}},function(e,t,n){var r=n(306);e.exports=function(e,t){return!!(null==e?0:e.length)&&r(e,t,0)>-1}},function(e,t,n){var r=n(307),a=n(308),o=n(309);e.exports=function(e,t,n){return t==t?o(e,t,n):r(e,a,n)}},function(e,t){e.exports=function(e,t,n,r){for(var a=e.length,o=n+(r?1:-1);r?o--:++o<a;)if(t(e[o],o,e))return o;return-1}},function(e,t){e.exports=function(e){return e!=e}},function(e,t){e.exports=function(e,t,n){for(var r=n-1,a=e.length;++r<a;)if(e[r]===t)return r;return-1}},function(e,t){e.exports=function(e,t,n){for(var r=-1,a=null==e?0:e.length;++r<a;)if(n(t,e[r]))return!0;return!1}},function(e,t,n){var r=n(172),a=n(312),o=n(101),i=r&&1/o(new r([,-0]))[1]==1/0?function(e){return new r(e)}:a;e.exports=i},function(e,t){e.exports=function(){}},function(e,t,n){var r=n(171),a=n(31);e.exports=function(e){return a(e)&&r(e)}},function(e,t,n){},function(e,t,n){var r=n(0),a=n(5);r({target:"Object",stat:!0,forced:!a,sham:!a},{defineProperties:n(117)})},function(e,t,n){var r=n(0),a=n(1),o=n(14),i=n(18).f,s=n(5),l=a((function(){i(1)}));r({target:"Object",stat:!0,forced:!s||l,sham:!s},{getOwnPropertyDescriptor:function(e,t){return i(o(e),t)}})},function(e,t,n){var r=n(2),a=n(126).trim,o=n(127),i=r.parseInt,s=/^[+-]?0[Xx]/,l=8!==i(o+"08")||22!==i(o+"0x16");e.exports=l?function(e,t){var n=a(String(e));return i(n,t>>>0||(s.test(n)?16:10))}:i},function(e,t,n){"use strict";n(177)},function(e,t,n){},function(e,t,n){},function(e,t,n){},function(e,t,n){},function(e,t,n){"use strict";n(178)},function(e,t,n){},function(e,t,n){"use strict";var r,a=n(0),o=n(18).f,i=n(11),s=n(94),l=n(16),c=n(95),u=n(22),d="".endsWith,p=Math.min,h=c("endsWith");a({target:"String",proto:!0,forced:!!(u||h||(r=o(String.prototype,"endsWith"),!r||r.writable))&&!h},{endsWith:function(e){var t=String(l(this));s(e);var n=arguments.length>1?arguments[1]:void 0,r=i(t.length),a=void 0===n?r:p(i(n),r),o=String(e);return d?d.call(t,o,a):t.slice(a-o.length,a)===o}})},function(e,t,n){"use strict";n(179)},function(e,t,n){"use strict";var r=n(24),a=n(4),o=[].slice,i={},s=function(e,t,n){if(!(t in i)){for(var r=[],a=0;a<t;a++)r[a]="a["+a+"]";i[t]=Function("C,a","return new C("+r.join(",")+")")}return i[t](e,n)};e.exports=Function.bind||function(e){var t=r(this),n=o.call(arguments,1),i=function(){var r=n.concat(o.call(arguments));return this instanceof i?s(t,r.length,r):t.apply(e,r)};return a(t.prototype)&&(i.prototype=t.prototype),i}},function(e,t,n){"use strict";n(182)},function(e,t,n){"use strict";n(183)},function(e,t,n){"use strict";n.r(t);n(116),n(206),n(211),n(212),n(20),n(49),n(53),n(10),n(28),n(35),n(110);var r=n(62),a=Object.freeze({});function o(e){return null==e}function i(e){return null!=e}function s(e){return!0===e}function l(e){return"string"==typeof e||"number"==typeof e||"symbol"==typeof e||"boolean"==typeof e}function c(e){return null!==e&&"object"==typeof e}var u=Object.prototype.toString;function d(e){return"[object Object]"===u.call(e)}function p(e){return"[object RegExp]"===u.call(e)}function h(e){var t=parseFloat(String(e));return t>=0&&Math.floor(t)===t&&isFinite(e)}function m(e){return i(e)&&"function"==typeof e.then&&"function"==typeof e.catch}function g(e){return null==e?"":Array.isArray(e)||d(e)&&e.toString===u?JSON.stringify(e,null,2):String(e)}function f(e){var t=parseFloat(e);return isNaN(t)?e:t}function y(e,t){for(var n=Object.create(null),r=e.split(","),a=0;a<r.length;a++)n[r[a]]=!0;return t?function(e){return n[e.toLowerCase()]}:function(e){return n[e]}}y("slot,component",!0);var v=y("key,ref,slot,slot-scope,is");function b(e,t){if(e.length){var n=e.indexOf(t);if(n>-1)return e.splice(n,1)}}var k=Object.prototype.hasOwnProperty;function w(e,t){return k.call(e,t)}function x(e){var t=Object.create(null);return function(n){return t[n]||(t[n]=e(n))}}var T=/-(\w)/g,I=x((function(e){return e.replace(T,(function(e,t){return t?t.toUpperCase():""}))})),q=x((function(e){return e.charAt(0).toUpperCase()+e.slice(1)})),j=/\B([A-Z])/g,z=x((function(e){return e.replace(j,"-$1").toLowerCase()}));var E=Function.prototype.bind?function(e,t){return e.bind(t)}:function(e,t){function n(n){var r=arguments.length;return r?r>1?e.apply(t,arguments):e.call(t,n):e.call(t)}return n._length=e.length,n};function _(e,t){t=t||0;for(var n=e.length-t,r=new Array(n);n--;)r[n]=e[n+t];return r}function S(e,t){for(var n in t)e[n]=t[n];return e}function D(e){for(var t={},n=0;n<e.length;n++)e[n]&&S(t,e[n]);return t}function C(e,t,n){}var R=function(e,t,n){return!1},A=function(e){return e};function P(e,t){if(e===t)return!0;var n=c(e),r=c(t);if(!n||!r)return!n&&!r&&String(e)===String(t);try{var a=Array.isArray(e),o=Array.isArray(t);if(a&&o)return e.length===t.length&&e.every((function(e,n){return P(e,t[n])}));if(e instanceof Date&&t instanceof Date)return e.getTime()===t.getTime();if(a||o)return!1;var i=Object.keys(e),s=Object.keys(t);return i.length===s.length&&i.every((function(n){return P(e[n],t[n])}))}catch(e){return!1}}function O(e,t){for(var n=0;n<e.length;n++)if(P(e[n],t))return n;return-1}function L(e){var t=!1;return function(){t||(t=!0,e.apply(this,arguments))}}var F=["component","directive","filter"],M=["beforeCreate","created","beforeMount","mounted","beforeUpdate","updated","beforeDestroy","destroyed","activated","deactivated","errorCaptured","serverPrefetch"],N={optionMergeStrategies:Object.create(null),silent:!1,productionTip:!1,devtools:!1,performance:!1,errorHandler:null,warnHandler:null,ignoredElements:[],keyCodes:Object.create(null),isReservedTag:R,isReservedAttr:R,isUnknownElement:R,getTagNamespace:C,parsePlatformTagName:A,mustUseProp:R,async:!0,_lifecycleHooks:M},K=/a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;function B(e,t,n,r){Object.defineProperty(e,t,{value:n,enumerable:!!r,writable:!0,configurable:!0})}var U=new RegExp("[^"+K.source+".$_\\d]");var $,W="__proto__"in{},G="undefined"!=typeof window,V="undefined"!=typeof WXEnvironment&&!!WXEnvironment.platform,H=V&&WXEnvironment.platform.toLowerCase(),J=G&&window.navigator.userAgent.toLowerCase(),Y=J&&/msie|trident/.test(J),Q=J&&J.indexOf("msie 9.0")>0,Z=J&&J.indexOf("edge/")>0,X=(J&&J.indexOf("android"),J&&/iphone|ipad|ipod|ios/.test(J)||"ios"===H),ee=(J&&/chrome\/\d+/.test(J),J&&/phantomjs/.test(J),J&&J.match(/firefox\/(\d+)/)),te={}.watch,ne=!1;if(G)try{var re={};Object.defineProperty(re,"passive",{get:function(){ne=!0}}),window.addEventListener("test-passive",null,re)}catch(e){}var ae=function(){return void 0===$&&($=!G&&!V&&"undefined"!=typeof global&&(global.process&&"server"===global.process.env.VUE_ENV)),$},oe=G&&window.__VUE_DEVTOOLS_GLOBAL_HOOK__;function ie(e){return"function"==typeof e&&/native code/.test(e.toString())}var se,le="undefined"!=typeof Symbol&&ie(Symbol)&&"undefined"!=typeof Reflect&&ie(Reflect.ownKeys);se="undefined"!=typeof Set&&ie(Set)?Set:function(){function e(){this.set=Object.create(null)}return e.prototype.has=function(e){return!0===this.set[e]},e.prototype.add=function(e){this.set[e]=!0},e.prototype.clear=function(){this.set=Object.create(null)},e}();var ce=C,ue=0,de=function(){this.id=ue++,this.subs=[]};de.prototype.addSub=function(e){this.subs.push(e)},de.prototype.removeSub=function(e){b(this.subs,e)},de.prototype.depend=function(){de.target&&de.target.addDep(this)},de.prototype.notify=function(){var e=this.subs.slice();for(var t=0,n=e.length;t<n;t++)e[t].update()},de.target=null;var pe=[];function he(e){pe.push(e),de.target=e}function me(){pe.pop(),de.target=pe[pe.length-1]}var ge=function(e,t,n,r,a,o,i,s){this.tag=e,this.data=t,this.children=n,this.text=r,this.elm=a,this.ns=void 0,this.context=o,this.fnContext=void 0,this.fnOptions=void 0,this.fnScopeId=void 0,this.key=t&&t.key,this.componentOptions=i,this.componentInstance=void 0,this.parent=void 0,this.raw=!1,this.isStatic=!1,this.isRootInsert=!0,this.isComment=!1,this.isCloned=!1,this.isOnce=!1,this.asyncFactory=s,this.asyncMeta=void 0,this.isAsyncPlaceholder=!1},fe={child:{configurable:!0}};fe.child.get=function(){return this.componentInstance},Object.defineProperties(ge.prototype,fe);var ye=function(e){void 0===e&&(e="");var t=new ge;return t.text=e,t.isComment=!0,t};function ve(e){return new ge(void 0,void 0,void 0,String(e))}function be(e){var t=new ge(e.tag,e.data,e.children&&e.children.slice(),e.text,e.elm,e.context,e.componentOptions,e.asyncFactory);return t.ns=e.ns,t.isStatic=e.isStatic,t.key=e.key,t.isComment=e.isComment,t.fnContext=e.fnContext,t.fnOptions=e.fnOptions,t.fnScopeId=e.fnScopeId,t.asyncMeta=e.asyncMeta,t.isCloned=!0,t}var ke=Array.prototype,we=Object.create(ke);["push","pop","shift","unshift","splice","sort","reverse"].forEach((function(e){var t=ke[e];B(we,e,(function(){for(var n=[],r=arguments.length;r--;)n[r]=arguments[r];var a,o=t.apply(this,n),i=this.__ob__;switch(e){case"push":case"unshift":a=n;break;case"splice":a=n.slice(2)}return a&&i.observeArray(a),i.dep.notify(),o}))}));var xe=Object.getOwnPropertyNames(we),Te=!0;function Ie(e){Te=e}var qe=function(e){this.value=e,this.dep=new de,this.vmCount=0,B(e,"__ob__",this),Array.isArray(e)?(W?function(e,t){e.__proto__=t}(e,we):function(e,t,n){for(var r=0,a=n.length;r<a;r++){var o=n[r];B(e,o,t[o])}}(e,we,xe),this.observeArray(e)):this.walk(e)};function je(e,t){var n;if(c(e)&&!(e instanceof ge))return w(e,"__ob__")&&e.__ob__ instanceof qe?n=e.__ob__:Te&&!ae()&&(Array.isArray(e)||d(e))&&Object.isExtensible(e)&&!e._isVue&&(n=new qe(e)),t&&n&&n.vmCount++,n}function ze(e,t,n,r,a){var o=new de,i=Object.getOwnPropertyDescriptor(e,t);if(!i||!1!==i.configurable){var s=i&&i.get,l=i&&i.set;s&&!l||2!==arguments.length||(n=e[t]);var c=!a&&je(n);Object.defineProperty(e,t,{enumerable:!0,configurable:!0,get:function(){var t=s?s.call(e):n;return de.target&&(o.depend(),c&&(c.dep.depend(),Array.isArray(t)&&Se(t))),t},set:function(t){var r=s?s.call(e):n;t===r||t!=t&&r!=r||s&&!l||(l?l.call(e,t):n=t,c=!a&&je(t),o.notify())}})}}function Ee(e,t,n){if(Array.isArray(e)&&h(t))return e.length=Math.max(e.length,t),e.splice(t,1,n),n;if(t in e&&!(t in Object.prototype))return e[t]=n,n;var r=e.__ob__;return e._isVue||r&&r.vmCount?n:r?(ze(r.value,t,n),r.dep.notify(),n):(e[t]=n,n)}function _e(e,t){if(Array.isArray(e)&&h(t))e.splice(t,1);else{var n=e.__ob__;e._isVue||n&&n.vmCount||w(e,t)&&(delete e[t],n&&n.dep.notify())}}function Se(e){for(var t=void 0,n=0,r=e.length;n<r;n++)(t=e[n])&&t.__ob__&&t.__ob__.dep.depend(),Array.isArray(t)&&Se(t)}qe.prototype.walk=function(e){for(var t=Object.keys(e),n=0;n<t.length;n++)ze(e,t[n])},qe.prototype.observeArray=function(e){for(var t=0,n=e.length;t<n;t++)je(e[t])};var De=N.optionMergeStrategies;function Ce(e,t){if(!t)return e;for(var n,r,a,o=le?Reflect.ownKeys(t):Object.keys(t),i=0;i<o.length;i++)"__ob__"!==(n=o[i])&&(r=e[n],a=t[n],w(e,n)?r!==a&&d(r)&&d(a)&&Ce(r,a):Ee(e,n,a));return e}function Re(e,t,n){return n?function(){var r="function"==typeof t?t.call(n,n):t,a="function"==typeof e?e.call(n,n):e;return r?Ce(r,a):a}:t?e?function(){return Ce("function"==typeof t?t.call(this,this):t,"function"==typeof e?e.call(this,this):e)}:t:e}function Ae(e,t){var n=t?e?e.concat(t):Array.isArray(t)?t:[t]:e;return n?function(e){for(var t=[],n=0;n<e.length;n++)-1===t.indexOf(e[n])&&t.push(e[n]);return t}(n):n}function Pe(e,t,n,r){var a=Object.create(e||null);return t?S(a,t):a}De.data=function(e,t,n){return n?Re(e,t,n):t&&"function"!=typeof t?e:Re(e,t)},M.forEach((function(e){De[e]=Ae})),F.forEach((function(e){De[e+"s"]=Pe})),De.watch=function(e,t,n,r){if(e===te&&(e=void 0),t===te&&(t=void 0),!t)return Object.create(e||null);if(!e)return t;var a={};for(var o in S(a,e),t){var i=a[o],s=t[o];i&&!Array.isArray(i)&&(i=[i]),a[o]=i?i.concat(s):Array.isArray(s)?s:[s]}return a},De.props=De.methods=De.inject=De.computed=function(e,t,n,r){if(!e)return t;var a=Object.create(null);return S(a,e),t&&S(a,t),a},De.provide=Re;var Oe=function(e,t){return void 0===t?e:t};function Le(e,t,n){if("function"==typeof t&&(t=t.options),function(e,t){var n=e.props;if(n){var r,a,o={};if(Array.isArray(n))for(r=n.length;r--;)"string"==typeof(a=n[r])&&(o[I(a)]={type:null});else if(d(n))for(var i in n)a=n[i],o[I(i)]=d(a)?a:{type:a};else 0;e.props=o}}(t),function(e,t){var n=e.inject;if(n){var r=e.inject={};if(Array.isArray(n))for(var a=0;a<n.length;a++)r[n[a]]={from:n[a]};else if(d(n))for(var o in n){var i=n[o];r[o]=d(i)?S({from:o},i):{from:i}}else 0}}(t),function(e){var t=e.directives;if(t)for(var n in t){var r=t[n];"function"==typeof r&&(t[n]={bind:r,update:r})}}(t),!t._base&&(t.extends&&(e=Le(e,t.extends,n)),t.mixins))for(var r=0,a=t.mixins.length;r<a;r++)e=Le(e,t.mixins[r],n);var o,i={};for(o in e)s(o);for(o in t)w(e,o)||s(o);function s(r){var a=De[r]||Oe;i[r]=a(e[r],t[r],n,r)}return i}function Fe(e,t,n,r){if("string"==typeof n){var a=e[t];if(w(a,n))return a[n];var o=I(n);if(w(a,o))return a[o];var i=q(o);return w(a,i)?a[i]:a[n]||a[o]||a[i]}}function Me(e,t,n,r){var a=t[e],o=!w(n,e),i=n[e],s=Be(Boolean,a.type);if(s>-1)if(o&&!w(a,"default"))i=!1;else if(""===i||i===z(e)){var l=Be(String,a.type);(l<0||s<l)&&(i=!0)}if(void 0===i){i=function(e,t,n){if(!w(t,"default"))return;var r=t.default;0;if(e&&e.$options.propsData&&void 0===e.$options.propsData[n]&&void 0!==e._props[n])return e._props[n];return"function"==typeof r&&"Function"!==Ne(t.type)?r.call(e):r}(r,a,e);var c=Te;Ie(!0),je(i),Ie(c)}return i}function Ne(e){var t=e&&e.toString().match(/^\s*function (\w+)/);return t?t[1]:""}function Ke(e,t){return Ne(e)===Ne(t)}function Be(e,t){if(!Array.isArray(t))return Ke(t,e)?0:-1;for(var n=0,r=t.length;n<r;n++)if(Ke(t[n],e))return n;return-1}function Ue(e,t,n){he();try{if(t)for(var r=t;r=r.$parent;){var a=r.$options.errorCaptured;if(a)for(var o=0;o<a.length;o++)try{if(!1===a[o].call(r,e,t,n))return}catch(e){We(e,r,"errorCaptured hook")}}We(e,t,n)}finally{me()}}function $e(e,t,n,r,a){var o;try{(o=n?e.apply(t,n):e.call(t))&&!o._isVue&&m(o)&&!o._handled&&(o.catch((function(e){return Ue(e,r,a+" (Promise/async)")})),o._handled=!0)}catch(e){Ue(e,r,a)}return o}function We(e,t,n){if(N.errorHandler)try{return N.errorHandler.call(null,e,t,n)}catch(t){t!==e&&Ge(t,null,"config.errorHandler")}Ge(e,t,n)}function Ge(e,t,n){if(!G&&!V||"undefined"==typeof console)throw e;console.error(e)}var Ve,He=!1,Je=[],Ye=!1;function Qe(){Ye=!1;var e=Je.slice(0);Je.length=0;for(var t=0;t<e.length;t++)e[t]()}if("undefined"!=typeof Promise&&ie(Promise)){var Ze=Promise.resolve();Ve=function(){Ze.then(Qe),X&&setTimeout(C)},He=!0}else if(Y||"undefined"==typeof MutationObserver||!ie(MutationObserver)&&"[object MutationObserverConstructor]"!==MutationObserver.toString())Ve="undefined"!=typeof setImmediate&&ie(setImmediate)?function(){setImmediate(Qe)}:function(){setTimeout(Qe,0)};else{var Xe=1,et=new MutationObserver(Qe),tt=document.createTextNode(String(Xe));et.observe(tt,{characterData:!0}),Ve=function(){Xe=(Xe+1)%2,tt.data=String(Xe)},He=!0}function nt(e,t){var n;if(Je.push((function(){if(e)try{e.call(t)}catch(e){Ue(e,t,"nextTick")}else n&&n(t)})),Ye||(Ye=!0,Ve()),!e&&"undefined"!=typeof Promise)return new Promise((function(e){n=e}))}var rt=new se;function at(e){!function e(t,n){var r,a,o=Array.isArray(t);if(!o&&!c(t)||Object.isFrozen(t)||t instanceof ge)return;if(t.__ob__){var i=t.__ob__.dep.id;if(n.has(i))return;n.add(i)}if(o)for(r=t.length;r--;)e(t[r],n);else for(a=Object.keys(t),r=a.length;r--;)e(t[a[r]],n)}(e,rt),rt.clear()}var ot=x((function(e){var t="&"===e.charAt(0),n="~"===(e=t?e.slice(1):e).charAt(0),r="!"===(e=n?e.slice(1):e).charAt(0);return{name:e=r?e.slice(1):e,once:n,capture:r,passive:t}}));function it(e,t){function n(){var e=arguments,r=n.fns;if(!Array.isArray(r))return $e(r,null,arguments,t,"v-on handler");for(var a=r.slice(),o=0;o<a.length;o++)$e(a[o],null,e,t,"v-on handler")}return n.fns=e,n}function st(e,t,n,r,a,i){var l,c,u,d;for(l in e)c=e[l],u=t[l],d=ot(l),o(c)||(o(u)?(o(c.fns)&&(c=e[l]=it(c,i)),s(d.once)&&(c=e[l]=a(d.name,c,d.capture)),n(d.name,c,d.capture,d.passive,d.params)):c!==u&&(u.fns=c,e[l]=u));for(l in t)o(e[l])&&r((d=ot(l)).name,t[l],d.capture)}function lt(e,t,n){var r;e instanceof ge&&(e=e.data.hook||(e.data.hook={}));var a=e[t];function l(){n.apply(this,arguments),b(r.fns,l)}o(a)?r=it([l]):i(a.fns)&&s(a.merged)?(r=a).fns.push(l):r=it([a,l]),r.merged=!0,e[t]=r}function ct(e,t,n,r,a){if(i(t)){if(w(t,n))return e[n]=t[n],a||delete t[n],!0;if(w(t,r))return e[n]=t[r],a||delete t[r],!0}return!1}function ut(e){return l(e)?[ve(e)]:Array.isArray(e)?function e(t,n){var r,a,c,u,d=[];for(r=0;r<t.length;r++)o(a=t[r])||"boolean"==typeof a||(c=d.length-1,u=d[c],Array.isArray(a)?a.length>0&&(dt((a=e(a,(n||"")+"_"+r))[0])&&dt(u)&&(d[c]=ve(u.text+a[0].text),a.shift()),d.push.apply(d,a)):l(a)?dt(u)?d[c]=ve(u.text+a):""!==a&&d.push(ve(a)):dt(a)&&dt(u)?d[c]=ve(u.text+a.text):(s(t._isVList)&&i(a.tag)&&o(a.key)&&i(n)&&(a.key="__vlist"+n+"_"+r+"__"),d.push(a)));return d}(e):void 0}function dt(e){return i(e)&&i(e.text)&&!1===e.isComment}function pt(e,t){if(e){for(var n=Object.create(null),r=le?Reflect.ownKeys(e):Object.keys(e),a=0;a<r.length;a++){var o=r[a];if("__ob__"!==o){for(var i=e[o].from,s=t;s;){if(s._provided&&w(s._provided,i)){n[o]=s._provided[i];break}s=s.$parent}if(!s)if("default"in e[o]){var l=e[o].default;n[o]="function"==typeof l?l.call(t):l}else 0}}return n}}function ht(e,t){if(!e||!e.length)return{};for(var n={},r=0,a=e.length;r<a;r++){var o=e[r],i=o.data;if(i&&i.attrs&&i.attrs.slot&&delete i.attrs.slot,o.context!==t&&o.fnContext!==t||!i||null==i.slot)(n.default||(n.default=[])).push(o);else{var s=i.slot,l=n[s]||(n[s]=[]);"template"===o.tag?l.push.apply(l,o.children||[]):l.push(o)}}for(var c in n)n[c].every(mt)&&delete n[c];return n}function mt(e){return e.isComment&&!e.asyncFactory||" "===e.text}function gt(e,t,n){var r,o=Object.keys(t).length>0,i=e?!!e.$stable:!o,s=e&&e.$key;if(e){if(e._normalized)return e._normalized;if(i&&n&&n!==a&&s===n.$key&&!o&&!n.$hasNormal)return n;for(var l in r={},e)e[l]&&"$"!==l[0]&&(r[l]=ft(t,l,e[l]))}else r={};for(var c in t)c in r||(r[c]=yt(t,c));return e&&Object.isExtensible(e)&&(e._normalized=r),B(r,"$stable",i),B(r,"$key",s),B(r,"$hasNormal",o),r}function ft(e,t,n){var r=function(){var e=arguments.length?n.apply(null,arguments):n({});return(e=e&&"object"==typeof e&&!Array.isArray(e)?[e]:ut(e))&&(0===e.length||1===e.length&&e[0].isComment)?void 0:e};return n.proxy&&Object.defineProperty(e,t,{get:r,enumerable:!0,configurable:!0}),r}function yt(e,t){return function(){return e[t]}}function vt(e,t){var n,r,a,o,s;if(Array.isArray(e)||"string"==typeof e)for(n=new Array(e.length),r=0,a=e.length;r<a;r++)n[r]=t(e[r],r);else if("number"==typeof e)for(n=new Array(e),r=0;r<e;r++)n[r]=t(r+1,r);else if(c(e))if(le&&e[Symbol.iterator]){n=[];for(var l=e[Symbol.iterator](),u=l.next();!u.done;)n.push(t(u.value,n.length)),u=l.next()}else for(o=Object.keys(e),n=new Array(o.length),r=0,a=o.length;r<a;r++)s=o[r],n[r]=t(e[s],s,r);return i(n)||(n=[]),n._isVList=!0,n}function bt(e,t,n,r){var a,o=this.$scopedSlots[e];o?(n=n||{},r&&(n=S(S({},r),n)),a=o(n)||t):a=this.$slots[e]||t;var i=n&&n.slot;return i?this.$createElement("template",{slot:i},a):a}function kt(e){return Fe(this.$options,"filters",e)||A}function wt(e,t){return Array.isArray(e)?-1===e.indexOf(t):e!==t}function xt(e,t,n,r,a){var o=N.keyCodes[t]||n;return a&&r&&!N.keyCodes[t]?wt(a,r):o?wt(o,e):r?z(r)!==t:void 0}function Tt(e,t,n,r,a){if(n)if(c(n)){var o;Array.isArray(n)&&(n=D(n));var i=function(i){if("class"===i||"style"===i||v(i))o=e;else{var s=e.attrs&&e.attrs.type;o=r||N.mustUseProp(t,s,i)?e.domProps||(e.domProps={}):e.attrs||(e.attrs={})}var l=I(i),c=z(i);l in o||c in o||(o[i]=n[i],a&&((e.on||(e.on={}))["update:"+i]=function(e){n[i]=e}))};for(var s in n)i(s)}else;return e}function It(e,t){var n=this._staticTrees||(this._staticTrees=[]),r=n[e];return r&&!t||jt(r=n[e]=this.$options.staticRenderFns[e].call(this._renderProxy,null,this),"__static__"+e,!1),r}function qt(e,t,n){return jt(e,"__once__"+t+(n?"_"+n:""),!0),e}function jt(e,t,n){if(Array.isArray(e))for(var r=0;r<e.length;r++)e[r]&&"string"!=typeof e[r]&&zt(e[r],t+"_"+r,n);else zt(e,t,n)}function zt(e,t,n){e.isStatic=!0,e.key=t,e.isOnce=n}function Et(e,t){if(t)if(d(t)){var n=e.on=e.on?S({},e.on):{};for(var r in t){var a=n[r],o=t[r];n[r]=a?[].concat(a,o):o}}else;return e}function _t(e,t,n,r){t=t||{$stable:!n};for(var a=0;a<e.length;a++){var o=e[a];Array.isArray(o)?_t(o,t,n):o&&(o.proxy&&(o.fn.proxy=!0),t[o.key]=o.fn)}return r&&(t.$key=r),t}function St(e,t){for(var n=0;n<t.length;n+=2){var r=t[n];"string"==typeof r&&r&&(e[t[n]]=t[n+1])}return e}function Dt(e,t){return"string"==typeof e?t+e:e}function Ct(e){e._o=qt,e._n=f,e._s=g,e._l=vt,e._t=bt,e._q=P,e._i=O,e._m=It,e._f=kt,e._k=xt,e._b=Tt,e._v=ve,e._e=ye,e._u=_t,e._g=Et,e._d=St,e._p=Dt}function Rt(e,t,n,r,o){var i,l=this,c=o.options;w(r,"_uid")?(i=Object.create(r))._original=r:(i=r,r=r._original);var u=s(c._compiled),d=!u;this.data=e,this.props=t,this.children=n,this.parent=r,this.listeners=e.on||a,this.injections=pt(c.inject,r),this.slots=function(){return l.$slots||gt(e.scopedSlots,l.$slots=ht(n,r)),l.$slots},Object.defineProperty(this,"scopedSlots",{enumerable:!0,get:function(){return gt(e.scopedSlots,this.slots())}}),u&&(this.$options=c,this.$slots=this.slots(),this.$scopedSlots=gt(e.scopedSlots,this.$slots)),c._scopeId?this._c=function(e,t,n,a){var o=Nt(i,e,t,n,a,d);return o&&!Array.isArray(o)&&(o.fnScopeId=c._scopeId,o.fnContext=r),o}:this._c=function(e,t,n,r){return Nt(i,e,t,n,r,d)}}function At(e,t,n,r,a){var o=be(e);return o.fnContext=n,o.fnOptions=r,t.slot&&((o.data||(o.data={})).slot=t.slot),o}function Pt(e,t){for(var n in t)e[I(n)]=t[n]}Ct(Rt.prototype);var Ot={init:function(e,t){if(e.componentInstance&&!e.componentInstance._isDestroyed&&e.data.keepAlive){var n=e;Ot.prepatch(n,n)}else{(e.componentInstance=function(e,t){var n={_isComponent:!0,_parentVnode:e,parent:t},r=e.data.inlineTemplate;i(r)&&(n.render=r.render,n.staticRenderFns=r.staticRenderFns);return new e.componentOptions.Ctor(n)}(e,Yt)).$mount(t?e.elm:void 0,t)}},prepatch:function(e,t){var n=t.componentOptions;!function(e,t,n,r,o){0;var i=r.data.scopedSlots,s=e.$scopedSlots,l=!!(i&&!i.$stable||s!==a&&!s.$stable||i&&e.$scopedSlots.$key!==i.$key),c=!!(o||e.$options._renderChildren||l);e.$options._parentVnode=r,e.$vnode=r,e._vnode&&(e._vnode.parent=r);if(e.$options._renderChildren=o,e.$attrs=r.data.attrs||a,e.$listeners=n||a,t&&e.$options.props){Ie(!1);for(var u=e._props,d=e.$options._propKeys||[],p=0;p<d.length;p++){var h=d[p],m=e.$options.props;u[h]=Me(h,m,t,e)}Ie(!0),e.$options.propsData=t}n=n||a;var g=e.$options._parentListeners;e.$options._parentListeners=n,Jt(e,n,g),c&&(e.$slots=ht(o,r.context),e.$forceUpdate());0}(t.componentInstance=e.componentInstance,n.propsData,n.listeners,t,n.children)},insert:function(e){var t,n=e.context,r=e.componentInstance;r._isMounted||(r._isMounted=!0,en(r,"mounted")),e.data.keepAlive&&(n._isMounted?((t=r)._inactive=!1,nn.push(t)):Xt(r,!0))},destroy:function(e){var t=e.componentInstance;t._isDestroyed||(e.data.keepAlive?function e(t,n){if(n&&(t._directInactive=!0,Zt(t)))return;if(!t._inactive){t._inactive=!0;for(var r=0;r<t.$children.length;r++)e(t.$children[r]);en(t,"deactivated")}}(t,!0):t.$destroy())}},Lt=Object.keys(Ot);function Ft(e,t,n,r,l){if(!o(e)){var u=n.$options._base;if(c(e)&&(e=u.extend(e)),"function"==typeof e){var d;if(o(e.cid)&&void 0===(e=function(e,t){if(s(e.error)&&i(e.errorComp))return e.errorComp;if(i(e.resolved))return e.resolved;var n=Bt;n&&i(e.owners)&&-1===e.owners.indexOf(n)&&e.owners.push(n);if(s(e.loading)&&i(e.loadingComp))return e.loadingComp;if(n&&!i(e.owners)){var r=e.owners=[n],a=!0,l=null,u=null;n.$on("hook:destroyed",(function(){return b(r,n)}));var d=function(e){for(var t=0,n=r.length;t<n;t++)r[t].$forceUpdate();e&&(r.length=0,null!==l&&(clearTimeout(l),l=null),null!==u&&(clearTimeout(u),u=null))},p=L((function(n){e.resolved=Ut(n,t),a?r.length=0:d(!0)})),h=L((function(t){i(e.errorComp)&&(e.error=!0,d(!0))})),g=e(p,h);return c(g)&&(m(g)?o(e.resolved)&&g.then(p,h):m(g.component)&&(g.component.then(p,h),i(g.error)&&(e.errorComp=Ut(g.error,t)),i(g.loading)&&(e.loadingComp=Ut(g.loading,t),0===g.delay?e.loading=!0:l=setTimeout((function(){l=null,o(e.resolved)&&o(e.error)&&(e.loading=!0,d(!1))}),g.delay||200)),i(g.timeout)&&(u=setTimeout((function(){u=null,o(e.resolved)&&h(null)}),g.timeout)))),a=!1,e.loading?e.loadingComp:e.resolved}}(d=e,u)))return function(e,t,n,r,a){var o=ye();return o.asyncFactory=e,o.asyncMeta={data:t,context:n,children:r,tag:a},o}(d,t,n,r,l);t=t||{},Tn(e),i(t.model)&&function(e,t){var n=e.model&&e.model.prop||"value",r=e.model&&e.model.event||"input";(t.attrs||(t.attrs={}))[n]=t.model.value;var a=t.on||(t.on={}),o=a[r],s=t.model.callback;i(o)?(Array.isArray(o)?-1===o.indexOf(s):o!==s)&&(a[r]=[s].concat(o)):a[r]=s}(e.options,t);var p=function(e,t,n){var r=t.options.props;if(!o(r)){var a={},s=e.attrs,l=e.props;if(i(s)||i(l))for(var c in r){var u=z(c);ct(a,l,c,u,!0)||ct(a,s,c,u,!1)}return a}}(t,e);if(s(e.options.functional))return function(e,t,n,r,o){var s=e.options,l={},c=s.props;if(i(c))for(var u in c)l[u]=Me(u,c,t||a);else i(n.attrs)&&Pt(l,n.attrs),i(n.props)&&Pt(l,n.props);var d=new Rt(n,l,o,r,e),p=s.render.call(null,d._c,d);if(p instanceof ge)return At(p,n,d.parent,s,d);if(Array.isArray(p)){for(var h=ut(p)||[],m=new Array(h.length),g=0;g<h.length;g++)m[g]=At(h[g],n,d.parent,s,d);return m}}(e,p,t,n,r);var h=t.on;if(t.on=t.nativeOn,s(e.options.abstract)){var g=t.slot;t={},g&&(t.slot=g)}!function(e){for(var t=e.hook||(e.hook={}),n=0;n<Lt.length;n++){var r=Lt[n],a=t[r],o=Ot[r];a===o||a&&a._merged||(t[r]=a?Mt(o,a):o)}}(t);var f=e.options.name||l;return new ge("vue-component-"+e.cid+(f?"-"+f:""),t,void 0,void 0,void 0,n,{Ctor:e,propsData:p,listeners:h,tag:l,children:r},d)}}}function Mt(e,t){var n=function(n,r){e(n,r),t(n,r)};return n._merged=!0,n}function Nt(e,t,n,r,a,u){return(Array.isArray(n)||l(n))&&(a=r,r=n,n=void 0),s(u)&&(a=2),function(e,t,n,r,a){if(i(n)&&i(n.__ob__))return ye();i(n)&&i(n.is)&&(t=n.is);if(!t)return ye();0;Array.isArray(r)&&"function"==typeof r[0]&&((n=n||{}).scopedSlots={default:r[0]},r.length=0);2===a?r=ut(r):1===a&&(r=function(e){for(var t=0;t<e.length;t++)if(Array.isArray(e[t]))return Array.prototype.concat.apply([],e);return e}(r));var l,u;if("string"==typeof t){var d;u=e.$vnode&&e.$vnode.ns||N.getTagNamespace(t),l=N.isReservedTag(t)?new ge(N.parsePlatformTagName(t),n,r,void 0,void 0,e):n&&n.pre||!i(d=Fe(e.$options,"components",t))?new ge(t,n,r,void 0,void 0,e):Ft(d,n,e,r,t)}else l=Ft(t,n,e,r);return Array.isArray(l)?l:i(l)?(i(u)&&function e(t,n,r){t.ns=n,"foreignObject"===t.tag&&(n=void 0,r=!0);if(i(t.children))for(var a=0,l=t.children.length;a<l;a++){var c=t.children[a];i(c.tag)&&(o(c.ns)||s(r)&&"svg"!==c.tag)&&e(c,n,r)}}(l,u),i(n)&&function(e){c(e.style)&&at(e.style);c(e.class)&&at(e.class)}(n),l):ye()}(e,t,n,r,a)}var Kt,Bt=null;function Ut(e,t){return(e.__esModule||le&&"Module"===e[Symbol.toStringTag])&&(e=e.default),c(e)?t.extend(e):e}function $t(e){return e.isComment&&e.asyncFactory}function Wt(e){if(Array.isArray(e))for(var t=0;t<e.length;t++){var n=e[t];if(i(n)&&(i(n.componentOptions)||$t(n)))return n}}function Gt(e,t){Kt.$on(e,t)}function Vt(e,t){Kt.$off(e,t)}function Ht(e,t){var n=Kt;return function r(){var a=t.apply(null,arguments);null!==a&&n.$off(e,r)}}function Jt(e,t,n){Kt=e,st(t,n||{},Gt,Vt,Ht,e),Kt=void 0}var Yt=null;function Qt(e){var t=Yt;return Yt=e,function(){Yt=t}}function Zt(e){for(;e&&(e=e.$parent);)if(e._inactive)return!0;return!1}function Xt(e,t){if(t){if(e._directInactive=!1,Zt(e))return}else if(e._directInactive)return;if(e._inactive||null===e._inactive){e._inactive=!1;for(var n=0;n<e.$children.length;n++)Xt(e.$children[n]);en(e,"activated")}}function en(e,t){he();var n=e.$options[t],r=t+" hook";if(n)for(var a=0,o=n.length;a<o;a++)$e(n[a],e,null,e,r);e._hasHookEvent&&e.$emit("hook:"+t),me()}var tn=[],nn=[],rn={},an=!1,on=!1,sn=0;var ln=0,cn=Date.now;if(G&&!Y){var un=window.performance;un&&"function"==typeof un.now&&cn()>document.createEvent("Event").timeStamp&&(cn=function(){return un.now()})}function dn(){var e,t;for(ln=cn(),on=!0,tn.sort((function(e,t){return e.id-t.id})),sn=0;sn<tn.length;sn++)(e=tn[sn]).before&&e.before(),t=e.id,rn[t]=null,e.run();var n=nn.slice(),r=tn.slice();sn=tn.length=nn.length=0,rn={},an=on=!1,function(e){for(var t=0;t<e.length;t++)e[t]._inactive=!0,Xt(e[t],!0)}(n),function(e){var t=e.length;for(;t--;){var n=e[t],r=n.vm;r._watcher===n&&r._isMounted&&!r._isDestroyed&&en(r,"updated")}}(r),oe&&N.devtools&&oe.emit("flush")}var pn=0,hn=function(e,t,n,r,a){this.vm=e,a&&(e._watcher=this),e._watchers.push(this),r?(this.deep=!!r.deep,this.user=!!r.user,this.lazy=!!r.lazy,this.sync=!!r.sync,this.before=r.before):this.deep=this.user=this.lazy=this.sync=!1,this.cb=n,this.id=++pn,this.active=!0,this.dirty=this.lazy,this.deps=[],this.newDeps=[],this.depIds=new se,this.newDepIds=new se,this.expression="","function"==typeof t?this.getter=t:(this.getter=function(e){if(!U.test(e)){var t=e.split(".");return function(e){for(var n=0;n<t.length;n++){if(!e)return;e=e[t[n]]}return e}}}(t),this.getter||(this.getter=C)),this.value=this.lazy?void 0:this.get()};hn.prototype.get=function(){var e;he(this);var t=this.vm;try{e=this.getter.call(t,t)}catch(e){if(!this.user)throw e;Ue(e,t,'getter for watcher "'+this.expression+'"')}finally{this.deep&&at(e),me(),this.cleanupDeps()}return e},hn.prototype.addDep=function(e){var t=e.id;this.newDepIds.has(t)||(this.newDepIds.add(t),this.newDeps.push(e),this.depIds.has(t)||e.addSub(this))},hn.prototype.cleanupDeps=function(){for(var e=this.deps.length;e--;){var t=this.deps[e];this.newDepIds.has(t.id)||t.removeSub(this)}var n=this.depIds;this.depIds=this.newDepIds,this.newDepIds=n,this.newDepIds.clear(),n=this.deps,this.deps=this.newDeps,this.newDeps=n,this.newDeps.length=0},hn.prototype.update=function(){this.lazy?this.dirty=!0:this.sync?this.run():function(e){var t=e.id;if(null==rn[t]){if(rn[t]=!0,on){for(var n=tn.length-1;n>sn&&tn[n].id>e.id;)n--;tn.splice(n+1,0,e)}else tn.push(e);an||(an=!0,nt(dn))}}(this)},hn.prototype.run=function(){if(this.active){var e=this.get();if(e!==this.value||c(e)||this.deep){var t=this.value;if(this.value=e,this.user)try{this.cb.call(this.vm,e,t)}catch(e){Ue(e,this.vm,'callback for watcher "'+this.expression+'"')}else this.cb.call(this.vm,e,t)}}},hn.prototype.evaluate=function(){this.value=this.get(),this.dirty=!1},hn.prototype.depend=function(){for(var e=this.deps.length;e--;)this.deps[e].depend()},hn.prototype.teardown=function(){if(this.active){this.vm._isBeingDestroyed||b(this.vm._watchers,this);for(var e=this.deps.length;e--;)this.deps[e].removeSub(this);this.active=!1}};var mn={enumerable:!0,configurable:!0,get:C,set:C};function gn(e,t,n){mn.get=function(){return this[t][n]},mn.set=function(e){this[t][n]=e},Object.defineProperty(e,n,mn)}function fn(e){e._watchers=[];var t=e.$options;t.props&&function(e,t){var n=e.$options.propsData||{},r=e._props={},a=e.$options._propKeys=[];e.$parent&&Ie(!1);var o=function(o){a.push(o);var i=Me(o,t,n,e);ze(r,o,i),o in e||gn(e,"_props",o)};for(var i in t)o(i);Ie(!0)}(e,t.props),t.methods&&function(e,t){e.$options.props;for(var n in t)e[n]="function"!=typeof t[n]?C:E(t[n],e)}(e,t.methods),t.data?function(e){var t=e.$options.data;d(t=e._data="function"==typeof t?function(e,t){he();try{return e.call(t,t)}catch(e){return Ue(e,t,"data()"),{}}finally{me()}}(t,e):t||{})||(t={});var n=Object.keys(t),r=e.$options.props,a=(e.$options.methods,n.length);for(;a--;){var o=n[a];0,r&&w(r,o)||(i=void 0,36!==(i=(o+"").charCodeAt(0))&&95!==i&&gn(e,"_data",o))}var i;je(t,!0)}(e):je(e._data={},!0),t.computed&&function(e,t){var n=e._computedWatchers=Object.create(null),r=ae();for(var a in t){var o=t[a],i="function"==typeof o?o:o.get;0,r||(n[a]=new hn(e,i||C,C,yn)),a in e||vn(e,a,o)}}(e,t.computed),t.watch&&t.watch!==te&&function(e,t){for(var n in t){var r=t[n];if(Array.isArray(r))for(var a=0;a<r.length;a++)wn(e,n,r[a]);else wn(e,n,r)}}(e,t.watch)}var yn={lazy:!0};function vn(e,t,n){var r=!ae();"function"==typeof n?(mn.get=r?bn(t):kn(n),mn.set=C):(mn.get=n.get?r&&!1!==n.cache?bn(t):kn(n.get):C,mn.set=n.set||C),Object.defineProperty(e,t,mn)}function bn(e){return function(){var t=this._computedWatchers&&this._computedWatchers[e];if(t)return t.dirty&&t.evaluate(),de.target&&t.depend(),t.value}}function kn(e){return function(){return e.call(this,this)}}function wn(e,t,n,r){return d(n)&&(r=n,n=n.handler),"string"==typeof n&&(n=e[n]),e.$watch(t,n,r)}var xn=0;function Tn(e){var t=e.options;if(e.super){var n=Tn(e.super);if(n!==e.superOptions){e.superOptions=n;var r=function(e){var t,n=e.options,r=e.sealedOptions;for(var a in n)n[a]!==r[a]&&(t||(t={}),t[a]=n[a]);return t}(e);r&&S(e.extendOptions,r),(t=e.options=Le(n,e.extendOptions)).name&&(t.components[t.name]=e)}}return t}function In(e){this._init(e)}function qn(e){e.cid=0;var t=1;e.extend=function(e){e=e||{};var n=this,r=n.cid,a=e._Ctor||(e._Ctor={});if(a[r])return a[r];var o=e.name||n.options.name;var i=function(e){this._init(e)};return(i.prototype=Object.create(n.prototype)).constructor=i,i.cid=t++,i.options=Le(n.options,e),i.super=n,i.options.props&&function(e){var t=e.options.props;for(var n in t)gn(e.prototype,"_props",n)}(i),i.options.computed&&function(e){var t=e.options.computed;for(var n in t)vn(e.prototype,n,t[n])}(i),i.extend=n.extend,i.mixin=n.mixin,i.use=n.use,F.forEach((function(e){i[e]=n[e]})),o&&(i.options.components[o]=i),i.superOptions=n.options,i.extendOptions=e,i.sealedOptions=S({},i.options),a[r]=i,i}}function jn(e){return e&&(e.Ctor.options.name||e.tag)}function zn(e,t){return Array.isArray(e)?e.indexOf(t)>-1:"string"==typeof e?e.split(",").indexOf(t)>-1:!!p(e)&&e.test(t)}function En(e,t){var n=e.cache,r=e.keys,a=e._vnode;for(var o in n){var i=n[o];if(i){var s=jn(i.componentOptions);s&&!t(s)&&_n(n,o,r,a)}}}function _n(e,t,n,r){var a=e[t];!a||r&&a.tag===r.tag||a.componentInstance.$destroy(),e[t]=null,b(n,t)}In.prototype._init=function(e){var t=this;t._uid=xn++,t._isVue=!0,e&&e._isComponent?function(e,t){var n=e.$options=Object.create(e.constructor.options),r=t._parentVnode;n.parent=t.parent,n._parentVnode=r;var a=r.componentOptions;n.propsData=a.propsData,n._parentListeners=a.listeners,n._renderChildren=a.children,n._componentTag=a.tag,t.render&&(n.render=t.render,n.staticRenderFns=t.staticRenderFns)}(t,e):t.$options=Le(Tn(t.constructor),e||{},t),t._renderProxy=t,t._self=t,function(e){var t=e.$options,n=t.parent;if(n&&!t.abstract){for(;n.$options.abstract&&n.$parent;)n=n.$parent;n.$children.push(e)}e.$parent=n,e.$root=n?n.$root:e,e.$children=[],e.$refs={},e._watcher=null,e._inactive=null,e._directInactive=!1,e._isMounted=!1,e._isDestroyed=!1,e._isBeingDestroyed=!1}(t),function(e){e._events=Object.create(null),e._hasHookEvent=!1;var t=e.$options._parentListeners;t&&Jt(e,t)}(t),function(e){e._vnode=null,e._staticTrees=null;var t=e.$options,n=e.$vnode=t._parentVnode,r=n&&n.context;e.$slots=ht(t._renderChildren,r),e.$scopedSlots=a,e._c=function(t,n,r,a){return Nt(e,t,n,r,a,!1)},e.$createElement=function(t,n,r,a){return Nt(e,t,n,r,a,!0)};var o=n&&n.data;ze(e,"$attrs",o&&o.attrs||a,null,!0),ze(e,"$listeners",t._parentListeners||a,null,!0)}(t),en(t,"beforeCreate"),function(e){var t=pt(e.$options.inject,e);t&&(Ie(!1),Object.keys(t).forEach((function(n){ze(e,n,t[n])})),Ie(!0))}(t),fn(t),function(e){var t=e.$options.provide;t&&(e._provided="function"==typeof t?t.call(e):t)}(t),en(t,"created"),t.$options.el&&t.$mount(t.$options.el)},function(e){var t={get:function(){return this._data}},n={get:function(){return this._props}};Object.defineProperty(e.prototype,"$data",t),Object.defineProperty(e.prototype,"$props",n),e.prototype.$set=Ee,e.prototype.$delete=_e,e.prototype.$watch=function(e,t,n){if(d(t))return wn(this,e,t,n);(n=n||{}).user=!0;var r=new hn(this,e,t,n);if(n.immediate)try{t.call(this,r.value)}catch(e){Ue(e,this,'callback for immediate watcher "'+r.expression+'"')}return function(){r.teardown()}}}(In),function(e){var t=/^hook:/;e.prototype.$on=function(e,n){var r=this;if(Array.isArray(e))for(var a=0,o=e.length;a<o;a++)r.$on(e[a],n);else(r._events[e]||(r._events[e]=[])).push(n),t.test(e)&&(r._hasHookEvent=!0);return r},e.prototype.$once=function(e,t){var n=this;function r(){n.$off(e,r),t.apply(n,arguments)}return r.fn=t,n.$on(e,r),n},e.prototype.$off=function(e,t){var n=this;if(!arguments.length)return n._events=Object.create(null),n;if(Array.isArray(e)){for(var r=0,a=e.length;r<a;r++)n.$off(e[r],t);return n}var o,i=n._events[e];if(!i)return n;if(!t)return n._events[e]=null,n;for(var s=i.length;s--;)if((o=i[s])===t||o.fn===t){i.splice(s,1);break}return n},e.prototype.$emit=function(e){var t=this,n=t._events[e];if(n){n=n.length>1?_(n):n;for(var r=_(arguments,1),a='event handler for "'+e+'"',o=0,i=n.length;o<i;o++)$e(n[o],t,r,t,a)}return t}}(In),function(e){e.prototype._update=function(e,t){var n=this,r=n.$el,a=n._vnode,o=Qt(n);n._vnode=e,n.$el=a?n.__patch__(a,e):n.__patch__(n.$el,e,t,!1),o(),r&&(r.__vue__=null),n.$el&&(n.$el.__vue__=n),n.$vnode&&n.$parent&&n.$vnode===n.$parent._vnode&&(n.$parent.$el=n.$el)},e.prototype.$forceUpdate=function(){this._watcher&&this._watcher.update()},e.prototype.$destroy=function(){var e=this;if(!e._isBeingDestroyed){en(e,"beforeDestroy"),e._isBeingDestroyed=!0;var t=e.$parent;!t||t._isBeingDestroyed||e.$options.abstract||b(t.$children,e),e._watcher&&e._watcher.teardown();for(var n=e._watchers.length;n--;)e._watchers[n].teardown();e._data.__ob__&&e._data.__ob__.vmCount--,e._isDestroyed=!0,e.__patch__(e._vnode,null),en(e,"destroyed"),e.$off(),e.$el&&(e.$el.__vue__=null),e.$vnode&&(e.$vnode.parent=null)}}}(In),function(e){Ct(e.prototype),e.prototype.$nextTick=function(e){return nt(e,this)},e.prototype._render=function(){var e,t=this,n=t.$options,r=n.render,a=n._parentVnode;a&&(t.$scopedSlots=gt(a.data.scopedSlots,t.$slots,t.$scopedSlots)),t.$vnode=a;try{Bt=t,e=r.call(t._renderProxy,t.$createElement)}catch(n){Ue(n,t,"render"),e=t._vnode}finally{Bt=null}return Array.isArray(e)&&1===e.length&&(e=e[0]),e instanceof ge||(e=ye()),e.parent=a,e}}(In);var Sn=[String,RegExp,Array],Dn={KeepAlive:{name:"keep-alive",abstract:!0,props:{include:Sn,exclude:Sn,max:[String,Number]},created:function(){this.cache=Object.create(null),this.keys=[]},destroyed:function(){for(var e in this.cache)_n(this.cache,e,this.keys)},mounted:function(){var e=this;this.$watch("include",(function(t){En(e,(function(e){return zn(t,e)}))})),this.$watch("exclude",(function(t){En(e,(function(e){return!zn(t,e)}))}))},render:function(){var e=this.$slots.default,t=Wt(e),n=t&&t.componentOptions;if(n){var r=jn(n),a=this.include,o=this.exclude;if(a&&(!r||!zn(a,r))||o&&r&&zn(o,r))return t;var i=this.cache,s=this.keys,l=null==t.key?n.Ctor.cid+(n.tag?"::"+n.tag:""):t.key;i[l]?(t.componentInstance=i[l].componentInstance,b(s,l),s.push(l)):(i[l]=t,s.push(l),this.max&&s.length>parseInt(this.max)&&_n(i,s[0],s,this._vnode)),t.data.keepAlive=!0}return t||e&&e[0]}}};!function(e){var t={get:function(){return N}};Object.defineProperty(e,"config",t),e.util={warn:ce,extend:S,mergeOptions:Le,defineReactive:ze},e.set=Ee,e.delete=_e,e.nextTick=nt,e.observable=function(e){return je(e),e},e.options=Object.create(null),F.forEach((function(t){e.options[t+"s"]=Object.create(null)})),e.options._base=e,S(e.options.components,Dn),function(e){e.use=function(e){var t=this._installedPlugins||(this._installedPlugins=[]);if(t.indexOf(e)>-1)return this;var n=_(arguments,1);return n.unshift(this),"function"==typeof e.install?e.install.apply(e,n):"function"==typeof e&&e.apply(null,n),t.push(e),this}}(e),function(e){e.mixin=function(e){return this.options=Le(this.options,e),this}}(e),qn(e),function(e){F.forEach((function(t){e[t]=function(e,n){return n?("component"===t&&d(n)&&(n.name=n.name||e,n=this.options._base.extend(n)),"directive"===t&&"function"==typeof n&&(n={bind:n,update:n}),this.options[t+"s"][e]=n,n):this.options[t+"s"][e]}}))}(e)}(In),Object.defineProperty(In.prototype,"$isServer",{get:ae}),Object.defineProperty(In.prototype,"$ssrContext",{get:function(){return this.$vnode&&this.$vnode.ssrContext}}),Object.defineProperty(In,"FunctionalRenderContext",{value:Rt}),In.version="2.6.12";var Cn=y("style,class"),Rn=y("input,textarea,option,select,progress"),An=y("contenteditable,draggable,spellcheck"),Pn=y("events,caret,typing,plaintext-only"),On=y("allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,default,defaultchecked,defaultmuted,defaultselected,defer,disabled,enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,required,reversed,scoped,seamless,selected,sortable,translate,truespeed,typemustmatch,visible"),Ln="http://www.w3.org/1999/xlink",Fn=function(e){return":"===e.charAt(5)&&"xlink"===e.slice(0,5)},Mn=function(e){return Fn(e)?e.slice(6,e.length):""},Nn=function(e){return null==e||!1===e};function Kn(e){for(var t=e.data,n=e,r=e;i(r.componentInstance);)(r=r.componentInstance._vnode)&&r.data&&(t=Bn(r.data,t));for(;i(n=n.parent);)n&&n.data&&(t=Bn(t,n.data));return function(e,t){if(i(e)||i(t))return Un(e,$n(t));return""}(t.staticClass,t.class)}function Bn(e,t){return{staticClass:Un(e.staticClass,t.staticClass),class:i(e.class)?[e.class,t.class]:t.class}}function Un(e,t){return e?t?e+" "+t:e:t||""}function $n(e){return Array.isArray(e)?function(e){for(var t,n="",r=0,a=e.length;r<a;r++)i(t=$n(e[r]))&&""!==t&&(n&&(n+=" "),n+=t);return n}(e):c(e)?function(e){var t="";for(var n in e)e[n]&&(t&&(t+=" "),t+=n);return t}(e):"string"==typeof e?e:""}var Wn={svg:"http://www.w3.org/2000/svg",math:"http://www.w3.org/1998/Math/MathML"},Gn=y("html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,menuitem,summary,content,element,shadow,template,blockquote,iframe,tfoot"),Vn=y("svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view",!0),Hn=function(e){return Gn(e)||Vn(e)};var Jn=Object.create(null);var Yn=y("text,number,password,search,email,tel,url");var Qn=Object.freeze({createElement:function(e,t){var n=document.createElement(e);return"select"!==e||t.data&&t.data.attrs&&void 0!==t.data.attrs.multiple&&n.setAttribute("multiple","multiple"),n},createElementNS:function(e,t){return document.createElementNS(Wn[e],t)},createTextNode:function(e){return document.createTextNode(e)},createComment:function(e){return document.createComment(e)},insertBefore:function(e,t,n){e.insertBefore(t,n)},removeChild:function(e,t){e.removeChild(t)},appendChild:function(e,t){e.appendChild(t)},parentNode:function(e){return e.parentNode},nextSibling:function(e){return e.nextSibling},tagName:function(e){return e.tagName},setTextContent:function(e,t){e.textContent=t},setStyleScope:function(e,t){e.setAttribute(t,"")}}),Zn={create:function(e,t){Xn(t)},update:function(e,t){e.data.ref!==t.data.ref&&(Xn(e,!0),Xn(t))},destroy:function(e){Xn(e,!0)}};function Xn(e,t){var n=e.data.ref;if(i(n)){var r=e.context,a=e.componentInstance||e.elm,o=r.$refs;t?Array.isArray(o[n])?b(o[n],a):o[n]===a&&(o[n]=void 0):e.data.refInFor?Array.isArray(o[n])?o[n].indexOf(a)<0&&o[n].push(a):o[n]=[a]:o[n]=a}}var er=new ge("",{},[]),tr=["create","activate","update","remove","destroy"];function nr(e,t){return e.key===t.key&&(e.tag===t.tag&&e.isComment===t.isComment&&i(e.data)===i(t.data)&&function(e,t){if("input"!==e.tag)return!0;var n,r=i(n=e.data)&&i(n=n.attrs)&&n.type,a=i(n=t.data)&&i(n=n.attrs)&&n.type;return r===a||Yn(r)&&Yn(a)}(e,t)||s(e.isAsyncPlaceholder)&&e.asyncFactory===t.asyncFactory&&o(t.asyncFactory.error))}function rr(e,t,n){var r,a,o={};for(r=t;r<=n;++r)i(a=e[r].key)&&(o[a]=r);return o}var ar={create:or,update:or,destroy:function(e){or(e,er)}};function or(e,t){(e.data.directives||t.data.directives)&&function(e,t){var n,r,a,o=e===er,i=t===er,s=sr(e.data.directives,e.context),l=sr(t.data.directives,t.context),c=[],u=[];for(n in l)r=s[n],a=l[n],r?(a.oldValue=r.value,a.oldArg=r.arg,cr(a,"update",t,e),a.def&&a.def.componentUpdated&&u.push(a)):(cr(a,"bind",t,e),a.def&&a.def.inserted&&c.push(a));if(c.length){var d=function(){for(var n=0;n<c.length;n++)cr(c[n],"inserted",t,e)};o?lt(t,"insert",d):d()}u.length&&lt(t,"postpatch",(function(){for(var n=0;n<u.length;n++)cr(u[n],"componentUpdated",t,e)}));if(!o)for(n in s)l[n]||cr(s[n],"unbind",e,e,i)}(e,t)}var ir=Object.create(null);function sr(e,t){var n,r,a=Object.create(null);if(!e)return a;for(n=0;n<e.length;n++)(r=e[n]).modifiers||(r.modifiers=ir),a[lr(r)]=r,r.def=Fe(t.$options,"directives",r.name);return a}function lr(e){return e.rawName||e.name+"."+Object.keys(e.modifiers||{}).join(".")}function cr(e,t,n,r,a){var o=e.def&&e.def[t];if(o)try{o(n.elm,e,n,r,a)}catch(r){Ue(r,n.context,"directive "+e.name+" "+t+" hook")}}var ur=[Zn,ar];function dr(e,t){var n=t.componentOptions;if(!(i(n)&&!1===n.Ctor.options.inheritAttrs||o(e.data.attrs)&&o(t.data.attrs))){var r,a,s=t.elm,l=e.data.attrs||{},c=t.data.attrs||{};for(r in i(c.__ob__)&&(c=t.data.attrs=S({},c)),c)a=c[r],l[r]!==a&&pr(s,r,a);for(r in(Y||Z)&&c.value!==l.value&&pr(s,"value",c.value),l)o(c[r])&&(Fn(r)?s.removeAttributeNS(Ln,Mn(r)):An(r)||s.removeAttribute(r))}}function pr(e,t,n){e.tagName.indexOf("-")>-1?hr(e,t,n):On(t)?Nn(n)?e.removeAttribute(t):(n="allowfullscreen"===t&&"EMBED"===e.tagName?"true":t,e.setAttribute(t,n)):An(t)?e.setAttribute(t,function(e,t){return Nn(t)||"false"===t?"false":"contenteditable"===e&&Pn(t)?t:"true"}(t,n)):Fn(t)?Nn(n)?e.removeAttributeNS(Ln,Mn(t)):e.setAttributeNS(Ln,t,n):hr(e,t,n)}function hr(e,t,n){if(Nn(n))e.removeAttribute(t);else{if(Y&&!Q&&"TEXTAREA"===e.tagName&&"placeholder"===t&&""!==n&&!e.__ieph){var r=function(t){t.stopImmediatePropagation(),e.removeEventListener("input",r)};e.addEventListener("input",r),e.__ieph=!0}e.setAttribute(t,n)}}var mr={create:dr,update:dr};function gr(e,t){var n=t.elm,r=t.data,a=e.data;if(!(o(r.staticClass)&&o(r.class)&&(o(a)||o(a.staticClass)&&o(a.class)))){var s=Kn(t),l=n._transitionClasses;i(l)&&(s=Un(s,$n(l))),s!==n._prevClass&&(n.setAttribute("class",s),n._prevClass=s)}}var fr,yr={create:gr,update:gr};function vr(e,t,n){var r=fr;return function a(){var o=t.apply(null,arguments);null!==o&&wr(e,a,n,r)}}var br=He&&!(ee&&Number(ee[1])<=53);function kr(e,t,n,r){if(br){var a=ln,o=t;t=o._wrapper=function(e){if(e.target===e.currentTarget||e.timeStamp>=a||e.timeStamp<=0||e.target.ownerDocument!==document)return o.apply(this,arguments)}}fr.addEventListener(e,t,ne?{capture:n,passive:r}:n)}function wr(e,t,n,r){(r||fr).removeEventListener(e,t._wrapper||t,n)}function xr(e,t){if(!o(e.data.on)||!o(t.data.on)){var n=t.data.on||{},r=e.data.on||{};fr=t.elm,function(e){if(i(e.__r)){var t=Y?"change":"input";e[t]=[].concat(e.__r,e[t]||[]),delete e.__r}i(e.__c)&&(e.change=[].concat(e.__c,e.change||[]),delete e.__c)}(n),st(n,r,kr,wr,vr,t.context),fr=void 0}}var Tr,Ir={create:xr,update:xr};function qr(e,t){if(!o(e.data.domProps)||!o(t.data.domProps)){var n,r,a=t.elm,s=e.data.domProps||{},l=t.data.domProps||{};for(n in i(l.__ob__)&&(l=t.data.domProps=S({},l)),s)n in l||(a[n]="");for(n in l){if(r=l[n],"textContent"===n||"innerHTML"===n){if(t.children&&(t.children.length=0),r===s[n])continue;1===a.childNodes.length&&a.removeChild(a.childNodes[0])}if("value"===n&&"PROGRESS"!==a.tagName){a._value=r;var c=o(r)?"":String(r);jr(a,c)&&(a.value=c)}else if("innerHTML"===n&&Vn(a.tagName)&&o(a.innerHTML)){(Tr=Tr||document.createElement("div")).innerHTML="<svg>"+r+"</svg>";for(var u=Tr.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;u.firstChild;)a.appendChild(u.firstChild)}else if(r!==s[n])try{a[n]=r}catch(e){}}}}function jr(e,t){return!e.composing&&("OPTION"===e.tagName||function(e,t){var n=!0;try{n=document.activeElement!==e}catch(e){}return n&&e.value!==t}(e,t)||function(e,t){var n=e.value,r=e._vModifiers;if(i(r)){if(r.number)return f(n)!==f(t);if(r.trim)return n.trim()!==t.trim()}return n!==t}(e,t))}var zr={create:qr,update:qr},Er=x((function(e){var t={},n=/:(.+)/;return e.split(/;(?![^(]*\))/g).forEach((function(e){if(e){var r=e.split(n);r.length>1&&(t[r[0].trim()]=r[1].trim())}})),t}));function _r(e){var t=Sr(e.style);return e.staticStyle?S(e.staticStyle,t):t}function Sr(e){return Array.isArray(e)?D(e):"string"==typeof e?Er(e):e}var Dr,Cr=/^--/,Rr=/\s*!important$/,Ar=function(e,t,n){if(Cr.test(t))e.style.setProperty(t,n);else if(Rr.test(n))e.style.setProperty(z(t),n.replace(Rr,""),"important");else{var r=Or(t);if(Array.isArray(n))for(var a=0,o=n.length;a<o;a++)e.style[r]=n[a];else e.style[r]=n}},Pr=["Webkit","Moz","ms"],Or=x((function(e){if(Dr=Dr||document.createElement("div").style,"filter"!==(e=I(e))&&e in Dr)return e;for(var t=e.charAt(0).toUpperCase()+e.slice(1),n=0;n<Pr.length;n++){var r=Pr[n]+t;if(r in Dr)return r}}));function Lr(e,t){var n=t.data,r=e.data;if(!(o(n.staticStyle)&&o(n.style)&&o(r.staticStyle)&&o(r.style))){var a,s,l=t.elm,c=r.staticStyle,u=r.normalizedStyle||r.style||{},d=c||u,p=Sr(t.data.style)||{};t.data.normalizedStyle=i(p.__ob__)?S({},p):p;var h=function(e,t){var n,r={};if(t)for(var a=e;a.componentInstance;)(a=a.componentInstance._vnode)&&a.data&&(n=_r(a.data))&&S(r,n);(n=_r(e.data))&&S(r,n);for(var o=e;o=o.parent;)o.data&&(n=_r(o.data))&&S(r,n);return r}(t,!0);for(s in d)o(h[s])&&Ar(l,s,"");for(s in h)(a=h[s])!==d[s]&&Ar(l,s,null==a?"":a)}}var Fr={create:Lr,update:Lr},Mr=/\s+/;function Nr(e,t){if(t&&(t=t.trim()))if(e.classList)t.indexOf(" ")>-1?t.split(Mr).forEach((function(t){return e.classList.add(t)})):e.classList.add(t);else{var n=" "+(e.getAttribute("class")||"")+" ";n.indexOf(" "+t+" ")<0&&e.setAttribute("class",(n+t).trim())}}function Kr(e,t){if(t&&(t=t.trim()))if(e.classList)t.indexOf(" ")>-1?t.split(Mr).forEach((function(t){return e.classList.remove(t)})):e.classList.remove(t),e.classList.length||e.removeAttribute("class");else{for(var n=" "+(e.getAttribute("class")||"")+" ",r=" "+t+" ";n.indexOf(r)>=0;)n=n.replace(r," ");(n=n.trim())?e.setAttribute("class",n):e.removeAttribute("class")}}function Br(e){if(e){if("object"==typeof e){var t={};return!1!==e.css&&S(t,Ur(e.name||"v")),S(t,e),t}return"string"==typeof e?Ur(e):void 0}}var Ur=x((function(e){return{enterClass:e+"-enter",enterToClass:e+"-enter-to",enterActiveClass:e+"-enter-active",leaveClass:e+"-leave",leaveToClass:e+"-leave-to",leaveActiveClass:e+"-leave-active"}})),$r=G&&!Q,Wr="transition",Gr="transitionend",Vr="animation",Hr="animationend";$r&&(void 0===window.ontransitionend&&void 0!==window.onwebkittransitionend&&(Wr="WebkitTransition",Gr="webkitTransitionEnd"),void 0===window.onanimationend&&void 0!==window.onwebkitanimationend&&(Vr="WebkitAnimation",Hr="webkitAnimationEnd"));var Jr=G?window.requestAnimationFrame?window.requestAnimationFrame.bind(window):setTimeout:function(e){return e()};function Yr(e){Jr((function(){Jr(e)}))}function Qr(e,t){var n=e._transitionClasses||(e._transitionClasses=[]);n.indexOf(t)<0&&(n.push(t),Nr(e,t))}function Zr(e,t){e._transitionClasses&&b(e._transitionClasses,t),Kr(e,t)}function Xr(e,t,n){var r=ta(e,t),a=r.type,o=r.timeout,i=r.propCount;if(!a)return n();var s="transition"===a?Gr:Hr,l=0,c=function(){e.removeEventListener(s,u),n()},u=function(t){t.target===e&&++l>=i&&c()};setTimeout((function(){l<i&&c()}),o+1),e.addEventListener(s,u)}var ea=/\b(transform|all)(,|$)/;function ta(e,t){var n,r=window.getComputedStyle(e),a=(r[Wr+"Delay"]||"").split(", "),o=(r[Wr+"Duration"]||"").split(", "),i=na(a,o),s=(r[Vr+"Delay"]||"").split(", "),l=(r[Vr+"Duration"]||"").split(", "),c=na(s,l),u=0,d=0;return"transition"===t?i>0&&(n="transition",u=i,d=o.length):"animation"===t?c>0&&(n="animation",u=c,d=l.length):d=(n=(u=Math.max(i,c))>0?i>c?"transition":"animation":null)?"transition"===n?o.length:l.length:0,{type:n,timeout:u,propCount:d,hasTransform:"transition"===n&&ea.test(r[Wr+"Property"])}}function na(e,t){for(;e.length<t.length;)e=e.concat(e);return Math.max.apply(null,t.map((function(t,n){return ra(t)+ra(e[n])})))}function ra(e){return 1e3*Number(e.slice(0,-1).replace(",","."))}function aa(e,t){var n=e.elm;i(n._leaveCb)&&(n._leaveCb.cancelled=!0,n._leaveCb());var r=Br(e.data.transition);if(!o(r)&&!i(n._enterCb)&&1===n.nodeType){for(var a=r.css,s=r.type,l=r.enterClass,u=r.enterToClass,d=r.enterActiveClass,p=r.appearClass,h=r.appearToClass,m=r.appearActiveClass,g=r.beforeEnter,y=r.enter,v=r.afterEnter,b=r.enterCancelled,k=r.beforeAppear,w=r.appear,x=r.afterAppear,T=r.appearCancelled,I=r.duration,q=Yt,j=Yt.$vnode;j&&j.parent;)q=j.context,j=j.parent;var z=!q._isMounted||!e.isRootInsert;if(!z||w||""===w){var E=z&&p?p:l,_=z&&m?m:d,S=z&&h?h:u,D=z&&k||g,C=z&&"function"==typeof w?w:y,R=z&&x||v,A=z&&T||b,P=f(c(I)?I.enter:I);0;var O=!1!==a&&!Q,F=sa(C),M=n._enterCb=L((function(){O&&(Zr(n,S),Zr(n,_)),M.cancelled?(O&&Zr(n,E),A&&A(n)):R&&R(n),n._enterCb=null}));e.data.show||lt(e,"insert",(function(){var t=n.parentNode,r=t&&t._pending&&t._pending[e.key];r&&r.tag===e.tag&&r.elm._leaveCb&&r.elm._leaveCb(),C&&C(n,M)})),D&&D(n),O&&(Qr(n,E),Qr(n,_),Yr((function(){Zr(n,E),M.cancelled||(Qr(n,S),F||(ia(P)?setTimeout(M,P):Xr(n,s,M)))}))),e.data.show&&(t&&t(),C&&C(n,M)),O||F||M()}}}function oa(e,t){var n=e.elm;i(n._enterCb)&&(n._enterCb.cancelled=!0,n._enterCb());var r=Br(e.data.transition);if(o(r)||1!==n.nodeType)return t();if(!i(n._leaveCb)){var a=r.css,s=r.type,l=r.leaveClass,u=r.leaveToClass,d=r.leaveActiveClass,p=r.beforeLeave,h=r.leave,m=r.afterLeave,g=r.leaveCancelled,y=r.delayLeave,v=r.duration,b=!1!==a&&!Q,k=sa(h),w=f(c(v)?v.leave:v);0;var x=n._leaveCb=L((function(){n.parentNode&&n.parentNode._pending&&(n.parentNode._pending[e.key]=null),b&&(Zr(n,u),Zr(n,d)),x.cancelled?(b&&Zr(n,l),g&&g(n)):(t(),m&&m(n)),n._leaveCb=null}));y?y(T):T()}function T(){x.cancelled||(!e.data.show&&n.parentNode&&((n.parentNode._pending||(n.parentNode._pending={}))[e.key]=e),p&&p(n),b&&(Qr(n,l),Qr(n,d),Yr((function(){Zr(n,l),x.cancelled||(Qr(n,u),k||(ia(w)?setTimeout(x,w):Xr(n,s,x)))}))),h&&h(n,x),b||k||x())}}function ia(e){return"number"==typeof e&&!isNaN(e)}function sa(e){if(o(e))return!1;var t=e.fns;return i(t)?sa(Array.isArray(t)?t[0]:t):(e._length||e.length)>1}function la(e,t){!0!==t.data.show&&aa(t)}var ca=function(e){var t,n,r={},a=e.modules,c=e.nodeOps;for(t=0;t<tr.length;++t)for(r[tr[t]]=[],n=0;n<a.length;++n)i(a[n][tr[t]])&&r[tr[t]].push(a[n][tr[t]]);function u(e){var t=c.parentNode(e);i(t)&&c.removeChild(t,e)}function d(e,t,n,a,o,l,u){if(i(e.elm)&&i(l)&&(e=l[u]=be(e)),e.isRootInsert=!o,!function(e,t,n,a){var o=e.data;if(i(o)){var l=i(e.componentInstance)&&o.keepAlive;if(i(o=o.hook)&&i(o=o.init)&&o(e,!1),i(e.componentInstance))return p(e,t),h(n,e.elm,a),s(l)&&function(e,t,n,a){var o,s=e;for(;s.componentInstance;)if(s=s.componentInstance._vnode,i(o=s.data)&&i(o=o.transition)){for(o=0;o<r.activate.length;++o)r.activate[o](er,s);t.push(s);break}h(n,e.elm,a)}(e,t,n,a),!0}}(e,t,n,a)){var d=e.data,g=e.children,y=e.tag;i(y)?(e.elm=e.ns?c.createElementNS(e.ns,y):c.createElement(y,e),v(e),m(e,g,t),i(d)&&f(e,t),h(n,e.elm,a)):s(e.isComment)?(e.elm=c.createComment(e.text),h(n,e.elm,a)):(e.elm=c.createTextNode(e.text),h(n,e.elm,a))}}function p(e,t){i(e.data.pendingInsert)&&(t.push.apply(t,e.data.pendingInsert),e.data.pendingInsert=null),e.elm=e.componentInstance.$el,g(e)?(f(e,t),v(e)):(Xn(e),t.push(e))}function h(e,t,n){i(e)&&(i(n)?c.parentNode(n)===e&&c.insertBefore(e,t,n):c.appendChild(e,t))}function m(e,t,n){if(Array.isArray(t)){0;for(var r=0;r<t.length;++r)d(t[r],n,e.elm,null,!0,t,r)}else l(e.text)&&c.appendChild(e.elm,c.createTextNode(String(e.text)))}function g(e){for(;e.componentInstance;)e=e.componentInstance._vnode;return i(e.tag)}function f(e,n){for(var a=0;a<r.create.length;++a)r.create[a](er,e);i(t=e.data.hook)&&(i(t.create)&&t.create(er,e),i(t.insert)&&n.push(e))}function v(e){var t;if(i(t=e.fnScopeId))c.setStyleScope(e.elm,t);else for(var n=e;n;)i(t=n.context)&&i(t=t.$options._scopeId)&&c.setStyleScope(e.elm,t),n=n.parent;i(t=Yt)&&t!==e.context&&t!==e.fnContext&&i(t=t.$options._scopeId)&&c.setStyleScope(e.elm,t)}function b(e,t,n,r,a,o){for(;r<=a;++r)d(n[r],o,e,t,!1,n,r)}function k(e){var t,n,a=e.data;if(i(a))for(i(t=a.hook)&&i(t=t.destroy)&&t(e),t=0;t<r.destroy.length;++t)r.destroy[t](e);if(i(t=e.children))for(n=0;n<e.children.length;++n)k(e.children[n])}function w(e,t,n){for(;t<=n;++t){var r=e[t];i(r)&&(i(r.tag)?(x(r),k(r)):u(r.elm))}}function x(e,t){if(i(t)||i(e.data)){var n,a=r.remove.length+1;for(i(t)?t.listeners+=a:t=function(e,t){function n(){0==--n.listeners&&u(e)}return n.listeners=t,n}(e.elm,a),i(n=e.componentInstance)&&i(n=n._vnode)&&i(n.data)&&x(n,t),n=0;n<r.remove.length;++n)r.remove[n](e,t);i(n=e.data.hook)&&i(n=n.remove)?n(e,t):t()}else u(e.elm)}function T(e,t,n,r){for(var a=n;a<r;a++){var o=t[a];if(i(o)&&nr(e,o))return a}}function I(e,t,n,a,l,u){if(e!==t){i(t.elm)&&i(a)&&(t=a[l]=be(t));var p=t.elm=e.elm;if(s(e.isAsyncPlaceholder))i(t.asyncFactory.resolved)?z(e.elm,t,n):t.isAsyncPlaceholder=!0;else if(s(t.isStatic)&&s(e.isStatic)&&t.key===e.key&&(s(t.isCloned)||s(t.isOnce)))t.componentInstance=e.componentInstance;else{var h,m=t.data;i(m)&&i(h=m.hook)&&i(h=h.prepatch)&&h(e,t);var f=e.children,y=t.children;if(i(m)&&g(t)){for(h=0;h<r.update.length;++h)r.update[h](e,t);i(h=m.hook)&&i(h=h.update)&&h(e,t)}o(t.text)?i(f)&&i(y)?f!==y&&function(e,t,n,r,a){var s,l,u,p=0,h=0,m=t.length-1,g=t[0],f=t[m],y=n.length-1,v=n[0],k=n[y],x=!a;for(0;p<=m&&h<=y;)o(g)?g=t[++p]:o(f)?f=t[--m]:nr(g,v)?(I(g,v,r,n,h),g=t[++p],v=n[++h]):nr(f,k)?(I(f,k,r,n,y),f=t[--m],k=n[--y]):nr(g,k)?(I(g,k,r,n,y),x&&c.insertBefore(e,g.elm,c.nextSibling(f.elm)),g=t[++p],k=n[--y]):nr(f,v)?(I(f,v,r,n,h),x&&c.insertBefore(e,f.elm,g.elm),f=t[--m],v=n[++h]):(o(s)&&(s=rr(t,p,m)),o(l=i(v.key)?s[v.key]:T(v,t,p,m))?d(v,r,e,g.elm,!1,n,h):nr(u=t[l],v)?(I(u,v,r,n,h),t[l]=void 0,x&&c.insertBefore(e,u.elm,g.elm)):d(v,r,e,g.elm,!1,n,h),v=n[++h]);p>m?b(e,o(n[y+1])?null:n[y+1].elm,n,h,y,r):h>y&&w(t,p,m)}(p,f,y,n,u):i(y)?(i(e.text)&&c.setTextContent(p,""),b(p,null,y,0,y.length-1,n)):i(f)?w(f,0,f.length-1):i(e.text)&&c.setTextContent(p,""):e.text!==t.text&&c.setTextContent(p,t.text),i(m)&&i(h=m.hook)&&i(h=h.postpatch)&&h(e,t)}}}function q(e,t,n){if(s(n)&&i(e.parent))e.parent.data.pendingInsert=t;else for(var r=0;r<t.length;++r)t[r].data.hook.insert(t[r])}var j=y("attrs,class,staticClass,staticStyle,key");function z(e,t,n,r){var a,o=t.tag,l=t.data,c=t.children;if(r=r||l&&l.pre,t.elm=e,s(t.isComment)&&i(t.asyncFactory))return t.isAsyncPlaceholder=!0,!0;if(i(l)&&(i(a=l.hook)&&i(a=a.init)&&a(t,!0),i(a=t.componentInstance)))return p(t,n),!0;if(i(o)){if(i(c))if(e.hasChildNodes())if(i(a=l)&&i(a=a.domProps)&&i(a=a.innerHTML)){if(a!==e.innerHTML)return!1}else{for(var u=!0,d=e.firstChild,h=0;h<c.length;h++){if(!d||!z(d,c[h],n,r)){u=!1;break}d=d.nextSibling}if(!u||d)return!1}else m(t,c,n);if(i(l)){var g=!1;for(var y in l)if(!j(y)){g=!0,f(t,n);break}!g&&l.class&&at(l.class)}}else e.data!==t.text&&(e.data=t.text);return!0}return function(e,t,n,a){if(!o(t)){var l,u=!1,p=[];if(o(e))u=!0,d(t,p);else{var h=i(e.nodeType);if(!h&&nr(e,t))I(e,t,p,null,null,a);else{if(h){if(1===e.nodeType&&e.hasAttribute("data-server-rendered")&&(e.removeAttribute("data-server-rendered"),n=!0),s(n)&&z(e,t,p))return q(t,p,!0),e;l=e,e=new ge(c.tagName(l).toLowerCase(),{},[],void 0,l)}var m=e.elm,f=c.parentNode(m);if(d(t,p,m._leaveCb?null:f,c.nextSibling(m)),i(t.parent))for(var y=t.parent,v=g(t);y;){for(var b=0;b<r.destroy.length;++b)r.destroy[b](y);if(y.elm=t.elm,v){for(var x=0;x<r.create.length;++x)r.create[x](er,y);var T=y.data.hook.insert;if(T.merged)for(var j=1;j<T.fns.length;j++)T.fns[j]()}else Xn(y);y=y.parent}i(f)?w([e],0,0):i(e.tag)&&k(e)}}return q(t,p,u),t.elm}i(e)&&k(e)}}({nodeOps:Qn,modules:[mr,yr,Ir,zr,Fr,G?{create:la,activate:la,remove:function(e,t){!0!==e.data.show?oa(e,t):t()}}:{}].concat(ur)});Q&&document.addEventListener("selectionchange",(function(){var e=document.activeElement;e&&e.vmodel&&va(e,"input")}));var ua={inserted:function(e,t,n,r){"select"===n.tag?(r.elm&&!r.elm._vOptions?lt(n,"postpatch",(function(){ua.componentUpdated(e,t,n)})):da(e,t,n.context),e._vOptions=[].map.call(e.options,ma)):("textarea"===n.tag||Yn(e.type))&&(e._vModifiers=t.modifiers,t.modifiers.lazy||(e.addEventListener("compositionstart",fa),e.addEventListener("compositionend",ya),e.addEventListener("change",ya),Q&&(e.vmodel=!0)))},componentUpdated:function(e,t,n){if("select"===n.tag){da(e,t,n.context);var r=e._vOptions,a=e._vOptions=[].map.call(e.options,ma);if(a.some((function(e,t){return!P(e,r[t])})))(e.multiple?t.value.some((function(e){return ha(e,a)})):t.value!==t.oldValue&&ha(t.value,a))&&va(e,"change")}}};function da(e,t,n){pa(e,t,n),(Y||Z)&&setTimeout((function(){pa(e,t,n)}),0)}function pa(e,t,n){var r=t.value,a=e.multiple;if(!a||Array.isArray(r)){for(var o,i,s=0,l=e.options.length;s<l;s++)if(i=e.options[s],a)o=O(r,ma(i))>-1,i.selected!==o&&(i.selected=o);else if(P(ma(i),r))return void(e.selectedIndex!==s&&(e.selectedIndex=s));a||(e.selectedIndex=-1)}}function ha(e,t){return t.every((function(t){return!P(t,e)}))}function ma(e){return"_value"in e?e._value:e.value}function fa(e){e.target.composing=!0}function ya(e){e.target.composing&&(e.target.composing=!1,va(e.target,"input"))}function va(e,t){var n=document.createEvent("HTMLEvents");n.initEvent(t,!0,!0),e.dispatchEvent(n)}function ba(e){return!e.componentInstance||e.data&&e.data.transition?e:ba(e.componentInstance._vnode)}var ka={model:ua,show:{bind:function(e,t,n){var r=t.value,a=(n=ba(n)).data&&n.data.transition,o=e.__vOriginalDisplay="none"===e.style.display?"":e.style.display;r&&a?(n.data.show=!0,aa(n,(function(){e.style.display=o}))):e.style.display=r?o:"none"},update:function(e,t,n){var r=t.value;!r!=!t.oldValue&&((n=ba(n)).data&&n.data.transition?(n.data.show=!0,r?aa(n,(function(){e.style.display=e.__vOriginalDisplay})):oa(n,(function(){e.style.display="none"}))):e.style.display=r?e.__vOriginalDisplay:"none")},unbind:function(e,t,n,r,a){a||(e.style.display=e.__vOriginalDisplay)}}},wa={name:String,appear:Boolean,css:Boolean,mode:String,type:String,enterClass:String,leaveClass:String,enterToClass:String,leaveToClass:String,enterActiveClass:String,leaveActiveClass:String,appearClass:String,appearActiveClass:String,appearToClass:String,duration:[Number,String,Object]};function xa(e){var t=e&&e.componentOptions;return t&&t.Ctor.options.abstract?xa(Wt(t.children)):e}function Ta(e){var t={},n=e.$options;for(var r in n.propsData)t[r]=e[r];var a=n._parentListeners;for(var o in a)t[I(o)]=a[o];return t}function Ia(e,t){if(/\d-keep-alive$/.test(t.tag))return e("keep-alive",{props:t.componentOptions.propsData})}var qa=function(e){return e.tag||$t(e)},ja=function(e){return"show"===e.name},za={name:"transition",props:wa,abstract:!0,render:function(e){var t=this,n=this.$slots.default;if(n&&(n=n.filter(qa)).length){0;var r=this.mode;0;var a=n[0];if(function(e){for(;e=e.parent;)if(e.data.transition)return!0}(this.$vnode))return a;var o=xa(a);if(!o)return a;if(this._leaving)return Ia(e,a);var i="__transition-"+this._uid+"-";o.key=null==o.key?o.isComment?i+"comment":i+o.tag:l(o.key)?0===String(o.key).indexOf(i)?o.key:i+o.key:o.key;var s=(o.data||(o.data={})).transition=Ta(this),c=this._vnode,u=xa(c);if(o.data.directives&&o.data.directives.some(ja)&&(o.data.show=!0),u&&u.data&&!function(e,t){return t.key===e.key&&t.tag===e.tag}(o,u)&&!$t(u)&&(!u.componentInstance||!u.componentInstance._vnode.isComment)){var d=u.data.transition=S({},s);if("out-in"===r)return this._leaving=!0,lt(d,"afterLeave",(function(){t._leaving=!1,t.$forceUpdate()})),Ia(e,a);if("in-out"===r){if($t(o))return c;var p,h=function(){p()};lt(s,"afterEnter",h),lt(s,"enterCancelled",h),lt(d,"delayLeave",(function(e){p=e}))}}return a}}},Ea=S({tag:String,moveClass:String},wa);function _a(e){e.elm._moveCb&&e.elm._moveCb(),e.elm._enterCb&&e.elm._enterCb()}function Sa(e){e.data.newPos=e.elm.getBoundingClientRect()}function Da(e){var t=e.data.pos,n=e.data.newPos,r=t.left-n.left,a=t.top-n.top;if(r||a){e.data.moved=!0;var o=e.elm.style;o.transform=o.WebkitTransform="translate("+r+"px,"+a+"px)",o.transitionDuration="0s"}}delete Ea.mode;var Ca={Transition:za,TransitionGroup:{props:Ea,beforeMount:function(){var e=this,t=this._update;this._update=function(n,r){var a=Qt(e);e.__patch__(e._vnode,e.kept,!1,!0),e._vnode=e.kept,a(),t.call(e,n,r)}},render:function(e){for(var t=this.tag||this.$vnode.data.tag||"span",n=Object.create(null),r=this.prevChildren=this.children,a=this.$slots.default||[],o=this.children=[],i=Ta(this),s=0;s<a.length;s++){var l=a[s];if(l.tag)if(null!=l.key&&0!==String(l.key).indexOf("__vlist"))o.push(l),n[l.key]=l,(l.data||(l.data={})).transition=i;else;}if(r){for(var c=[],u=[],d=0;d<r.length;d++){var p=r[d];p.data.transition=i,p.data.pos=p.elm.getBoundingClientRect(),n[p.key]?c.push(p):u.push(p)}this.kept=e(t,null,c),this.removed=u}return e(t,null,o)},updated:function(){var e=this.prevChildren,t=this.moveClass||(this.name||"v")+"-move";e.length&&this.hasMove(e[0].elm,t)&&(e.forEach(_a),e.forEach(Sa),e.forEach(Da),this._reflow=document.body.offsetHeight,e.forEach((function(e){if(e.data.moved){var n=e.elm,r=n.style;Qr(n,t),r.transform=r.WebkitTransform=r.transitionDuration="",n.addEventListener(Gr,n._moveCb=function e(r){r&&r.target!==n||r&&!/transform$/.test(r.propertyName)||(n.removeEventListener(Gr,e),n._moveCb=null,Zr(n,t))})}})))},methods:{hasMove:function(e,t){if(!$r)return!1;if(this._hasMove)return this._hasMove;var n=e.cloneNode();e._transitionClasses&&e._transitionClasses.forEach((function(e){Kr(n,e)})),Nr(n,t),n.style.display="none",this.$el.appendChild(n);var r=ta(n);return this.$el.removeChild(n),this._hasMove=r.hasTransform}}}};In.config.mustUseProp=function(e,t,n){return"value"===n&&Rn(e)&&"button"!==t||"selected"===n&&"option"===e||"checked"===n&&"input"===e||"muted"===n&&"video"===e},In.config.isReservedTag=Hn,In.config.isReservedAttr=Cn,In.config.getTagNamespace=function(e){return Vn(e)?"svg":"math"===e?"math":void 0},In.config.isUnknownElement=function(e){if(!G)return!0;if(Hn(e))return!1;if(e=e.toLowerCase(),null!=Jn[e])return Jn[e];var t=document.createElement(e);return e.indexOf("-")>-1?Jn[e]=t.constructor===window.HTMLUnknownElement||t.constructor===window.HTMLElement:Jn[e]=/HTMLUnknownElement/.test(t.toString())},S(In.options.directives,ka),S(In.options.components,Ca),In.prototype.__patch__=G?ca:C,In.prototype.$mount=function(e,t){return function(e,t,n){var r;return e.$el=t,e.$options.render||(e.$options.render=ye),en(e,"beforeMount"),r=function(){e._update(e._render(),n)},new hn(e,r,C,{before:function(){e._isMounted&&!e._isDestroyed&&en(e,"beforeUpdate")}},!0),n=!1,null==e.$vnode&&(e._isMounted=!0,en(e,"mounted")),e}(this,e=e&&G?function(e){if("string"==typeof e){var t=document.querySelector(e);return t||document.createElement("div")}return e}(e):void 0,t)},G&&setTimeout((function(){N.devtools&&oe&&oe.emit("init",In)}),0);var Ra=In;
/*!
  * vue-router v3.4.9
  * (c) 2020 Evan You
  * @license MIT
  */function Aa(e,t){for(var n in t)e[n]=t[n];return e}var Pa=/[!'()*]/g,Oa=function(e){return"%"+e.charCodeAt(0).toString(16)},La=/%2C/g,Fa=function(e){return encodeURIComponent(e).replace(Pa,Oa).replace(La,",")};function Ma(e){try{return decodeURIComponent(e)}catch(e){0}return e}var Na=function(e){return null==e||"object"==typeof e?e:String(e)};function Ka(e){var t={};return(e=e.trim().replace(/^(\?|#|&)/,""))?(e.split("&").forEach((function(e){var n=e.replace(/\+/g," ").split("="),r=Ma(n.shift()),a=n.length>0?Ma(n.join("=")):null;void 0===t[r]?t[r]=a:Array.isArray(t[r])?t[r].push(a):t[r]=[t[r],a]})),t):t}function Ba(e){var t=e?Object.keys(e).map((function(t){var n=e[t];if(void 0===n)return"";if(null===n)return Fa(t);if(Array.isArray(n)){var r=[];return n.forEach((function(e){void 0!==e&&(null===e?r.push(Fa(t)):r.push(Fa(t)+"="+Fa(e)))})),r.join("&")}return Fa(t)+"="+Fa(n)})).filter((function(e){return e.length>0})).join("&"):null;return t?"?"+t:""}var Ua=/\/?$/;function $a(e,t,n,r){var a=r&&r.options.stringifyQuery,o=t.query||{};try{o=Wa(o)}catch(e){}var i={name:t.name||e&&e.name,meta:e&&e.meta||{},path:t.path||"/",hash:t.hash||"",query:o,params:t.params||{},fullPath:Ha(t,a),matched:e?Va(e):[]};return n&&(i.redirectedFrom=Ha(n,a)),Object.freeze(i)}function Wa(e){if(Array.isArray(e))return e.map(Wa);if(e&&"object"==typeof e){var t={};for(var n in e)t[n]=Wa(e[n]);return t}return e}var Ga=$a(null,{path:"/"});function Va(e){for(var t=[];e;)t.unshift(e),e=e.parent;return t}function Ha(e,t){var n=e.path,r=e.query;void 0===r&&(r={});var a=e.hash;return void 0===a&&(a=""),(n||"/")+(t||Ba)(r)+a}function Ja(e,t){return t===Ga?e===t:!!t&&(e.path&&t.path?e.path.replace(Ua,"")===t.path.replace(Ua,"")&&e.hash===t.hash&&Ya(e.query,t.query):!(!e.name||!t.name)&&(e.name===t.name&&e.hash===t.hash&&Ya(e.query,t.query)&&Ya(e.params,t.params)))}function Ya(e,t){if(void 0===e&&(e={}),void 0===t&&(t={}),!e||!t)return e===t;var n=Object.keys(e).sort(),r=Object.keys(t).sort();return n.length===r.length&&n.every((function(n,a){var o=e[n];if(r[a]!==n)return!1;var i=t[n];return null==o||null==i?o===i:"object"==typeof o&&"object"==typeof i?Ya(o,i):String(o)===String(i)}))}function Qa(e){for(var t=0;t<e.matched.length;t++){var n=e.matched[t];for(var r in n.instances){var a=n.instances[r],o=n.enteredCbs[r];if(a&&o){delete n.enteredCbs[r];for(var i=0;i<o.length;i++)a._isBeingDestroyed||o[i](a)}}}}var Za={name:"RouterView",functional:!0,props:{name:{type:String,default:"default"}},render:function(e,t){var n=t.props,r=t.children,a=t.parent,o=t.data;o.routerView=!0;for(var i=a.$createElement,s=n.name,l=a.$route,c=a._routerViewCache||(a._routerViewCache={}),u=0,d=!1;a&&a._routerRoot!==a;){var p=a.$vnode?a.$vnode.data:{};p.routerView&&u++,p.keepAlive&&a._directInactive&&a._inactive&&(d=!0),a=a.$parent}if(o.routerViewDepth=u,d){var h=c[s],m=h&&h.component;return m?(h.configProps&&Xa(m,o,h.route,h.configProps),i(m,o,r)):i()}var g=l.matched[u],f=g&&g.components[s];if(!g||!f)return c[s]=null,i();c[s]={component:f},o.registerRouteInstance=function(e,t){var n=g.instances[s];(t&&n!==e||!t&&n===e)&&(g.instances[s]=t)},(o.hook||(o.hook={})).prepatch=function(e,t){g.instances[s]=t.componentInstance},o.hook.init=function(e){e.data.keepAlive&&e.componentInstance&&e.componentInstance!==g.instances[s]&&(g.instances[s]=e.componentInstance),Qa(l)};var y=g.props&&g.props[s];return y&&(Aa(c[s],{route:l,configProps:y}),Xa(f,o,l,y)),i(f,o,r)}};function Xa(e,t,n,r){var a=t.props=function(e,t){switch(typeof t){case"undefined":return;case"object":return t;case"function":return t(e);case"boolean":return t?e.params:void 0;default:0}}(n,r);if(a){a=t.props=Aa({},a);var o=t.attrs=t.attrs||{};for(var i in a)e.props&&i in e.props||(o[i]=a[i],delete a[i])}}function eo(e,t,n){var r=e.charAt(0);if("/"===r)return e;if("?"===r||"#"===r)return t+e;var a=t.split("/");n&&a[a.length-1]||a.pop();for(var o=e.replace(/^\//,"").split("/"),i=0;i<o.length;i++){var s=o[i];".."===s?a.pop():"."!==s&&a.push(s)}return""!==a[0]&&a.unshift(""),a.join("/")}function to(e){return e.replace(/\/\//g,"/")}var no=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)},ro=vo,ao=co,oo=function(e,t){return po(co(e,t),t)},io=po,so=yo,lo=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function co(e,t){for(var n,r=[],a=0,o=0,i="",s=t&&t.delimiter||"/";null!=(n=lo.exec(e));){var l=n[0],c=n[1],u=n.index;if(i+=e.slice(o,u),o=u+l.length,c)i+=c[1];else{var d=e[o],p=n[2],h=n[3],m=n[4],g=n[5],f=n[6],y=n[7];i&&(r.push(i),i="");var v=null!=p&&null!=d&&d!==p,b="+"===f||"*"===f,k="?"===f||"*"===f,w=n[2]||s,x=m||g;r.push({name:h||a++,prefix:p||"",delimiter:w,optional:k,repeat:b,partial:v,asterisk:!!y,pattern:x?mo(x):y?".*":"[^"+ho(w)+"]+?"})}}return o<e.length&&(i+=e.substr(o)),i&&r.push(i),r}function uo(e){return encodeURI(e).replace(/[\/?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function po(e,t){for(var n=new Array(e.length),r=0;r<e.length;r++)"object"==typeof e[r]&&(n[r]=new RegExp("^(?:"+e[r].pattern+")$",fo(t)));return function(t,r){for(var a="",o=t||{},i=(r||{}).pretty?uo:encodeURIComponent,s=0;s<e.length;s++){var l=e[s];if("string"!=typeof l){var c,u=o[l.name];if(null==u){if(l.optional){l.partial&&(a+=l.prefix);continue}throw new TypeError('Expected "'+l.name+'" to be defined')}if(no(u)){if(!l.repeat)throw new TypeError('Expected "'+l.name+'" to not repeat, but received `'+JSON.stringify(u)+"`");if(0===u.length){if(l.optional)continue;throw new TypeError('Expected "'+l.name+'" to not be empty')}for(var d=0;d<u.length;d++){if(c=i(u[d]),!n[s].test(c))throw new TypeError('Expected all "'+l.name+'" to match "'+l.pattern+'", but received `'+JSON.stringify(c)+"`");a+=(0===d?l.prefix:l.delimiter)+c}}else{if(c=l.asterisk?encodeURI(u).replace(/[?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})):i(u),!n[s].test(c))throw new TypeError('Expected "'+l.name+'" to match "'+l.pattern+'", but received "'+c+'"');a+=l.prefix+c}}else a+=l}return a}}function ho(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function mo(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function go(e,t){return e.keys=t,e}function fo(e){return e&&e.sensitive?"":"i"}function yo(e,t,n){no(t)||(n=t||n,t=[]);for(var r=(n=n||{}).strict,a=!1!==n.end,o="",i=0;i<e.length;i++){var s=e[i];if("string"==typeof s)o+=ho(s);else{var l=ho(s.prefix),c="(?:"+s.pattern+")";t.push(s),s.repeat&&(c+="(?:"+l+c+")*"),o+=c=s.optional?s.partial?l+"("+c+")?":"(?:"+l+"("+c+"))?":l+"("+c+")"}}var u=ho(n.delimiter||"/"),d=o.slice(-u.length)===u;return r||(o=(d?o.slice(0,-u.length):o)+"(?:"+u+"(?=$))?"),o+=a?"$":r&&d?"":"(?="+u+"|$)",go(new RegExp("^"+o,fo(n)),t)}function vo(e,t,n){return no(t)||(n=t||n,t=[]),n=n||{},e instanceof RegExp?function(e,t){var n=e.source.match(/\((?!\?)/g);if(n)for(var r=0;r<n.length;r++)t.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return go(e,t)}(e,t):no(e)?function(e,t,n){for(var r=[],a=0;a<e.length;a++)r.push(vo(e[a],t,n).source);return go(new RegExp("(?:"+r.join("|")+")",fo(n)),t)}(e,t,n):function(e,t,n){return yo(co(e,n),t,n)}(e,t,n)}ro.parse=ao,ro.compile=oo,ro.tokensToFunction=io,ro.tokensToRegExp=so;var bo=Object.create(null);function ko(e,t,n){t=t||{};try{var r=bo[e]||(bo[e]=ro.compile(e));return"string"==typeof t.pathMatch&&(t[0]=t.pathMatch),r(t,{pretty:!0})}catch(e){return""}finally{delete t[0]}}function wo(e,t,n,r){var a="string"==typeof e?{path:e}:e;if(a._normalized)return a;if(a.name){var o=(a=Aa({},e)).params;return o&&"object"==typeof o&&(a.params=Aa({},o)),a}if(!a.path&&a.params&&t){(a=Aa({},a))._normalized=!0;var i=Aa(Aa({},t.params),a.params);if(t.name)a.name=t.name,a.params=i;else if(t.matched.length){var s=t.matched[t.matched.length-1].path;a.path=ko(s,i,t.path)}else 0;return a}var l=function(e){var t="",n="",r=e.indexOf("#");r>=0&&(t=e.slice(r),e=e.slice(0,r));var a=e.indexOf("?");return a>=0&&(n=e.slice(a+1),e=e.slice(0,a)),{path:e,query:n,hash:t}}(a.path||""),c=t&&t.path||"/",u=l.path?eo(l.path,c,n||a.append):c,d=function(e,t,n){void 0===t&&(t={});var r,a=n||Ka;try{r=a(e||"")}catch(e){r={}}for(var o in t){var i=t[o];r[o]=Array.isArray(i)?i.map(Na):Na(i)}return r}(l.query,a.query,r&&r.options.parseQuery),p=a.hash||l.hash;return p&&"#"!==p.charAt(0)&&(p="#"+p),{_normalized:!0,path:u,query:d,hash:p}}var xo,To=function(){},Io={name:"RouterLink",props:{to:{type:[String,Object],required:!0},tag:{type:String,default:"a"},exact:Boolean,append:Boolean,replace:Boolean,activeClass:String,exactActiveClass:String,ariaCurrentValue:{type:String,default:"page"},event:{type:[String,Array],default:"click"}},render:function(e){var t=this,n=this.$router,r=this.$route,a=n.resolve(this.to,r,this.append),o=a.location,i=a.route,s=a.href,l={},c=n.options.linkActiveClass,u=n.options.linkExactActiveClass,d=null==c?"router-link-active":c,p=null==u?"router-link-exact-active":u,h=null==this.activeClass?d:this.activeClass,m=null==this.exactActiveClass?p:this.exactActiveClass,g=i.redirectedFrom?$a(null,wo(i.redirectedFrom),null,n):i;l[m]=Ja(r,g),l[h]=this.exact?l[m]:function(e,t){return 0===e.path.replace(Ua,"/").indexOf(t.path.replace(Ua,"/"))&&(!t.hash||e.hash===t.hash)&&function(e,t){for(var n in t)if(!(n in e))return!1;return!0}(e.query,t.query)}(r,g);var f=l[m]?this.ariaCurrentValue:null,y=function(e){qo(e)&&(t.replace?n.replace(o,To):n.push(o,To))},v={click:qo};Array.isArray(this.event)?this.event.forEach((function(e){v[e]=y})):v[this.event]=y;var b={class:l},k=!this.$scopedSlots.$hasNormal&&this.$scopedSlots.default&&this.$scopedSlots.default({href:s,route:i,navigate:y,isActive:l[h],isExactActive:l[m]});if(k){if(1===k.length)return k[0];if(k.length>1||!k.length)return 0===k.length?e():e("span",{},k)}if("a"===this.tag)b.on=v,b.attrs={href:s,"aria-current":f};else{var w=function e(t){var n;if(t)for(var r=0;r<t.length;r++){if("a"===(n=t[r]).tag)return n;if(n.children&&(n=e(n.children)))return n}}(this.$slots.default);if(w){w.isStatic=!1;var x=w.data=Aa({},w.data);for(var T in x.on=x.on||{},x.on){var I=x.on[T];T in v&&(x.on[T]=Array.isArray(I)?I:[I])}for(var q in v)q in x.on?x.on[q].push(v[q]):x.on[q]=y;var j=w.data.attrs=Aa({},w.data.attrs);j.href=s,j["aria-current"]=f}else b.on=v}return e(this.tag,b,this.$slots.default)}};function qo(e){if(!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey||e.defaultPrevented||void 0!==e.button&&0!==e.button)){if(e.currentTarget&&e.currentTarget.getAttribute){var t=e.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(t))return}return e.preventDefault&&e.preventDefault(),!0}}var jo="undefined"!=typeof window;function zo(e,t,n,r){var a=t||[],o=n||Object.create(null),i=r||Object.create(null);e.forEach((function(e){!function e(t,n,r,a,o,i){var s=a.path,l=a.name;0;var c=a.pathToRegexpOptions||{},u=function(e,t,n){n||(e=e.replace(/\/$/,""));if("/"===e[0])return e;if(null==t)return e;return to(t.path+"/"+e)}(s,o,c.strict);"boolean"==typeof a.caseSensitive&&(c.sensitive=a.caseSensitive);var d={path:u,regex:Eo(u,c),components:a.components||{default:a.component},instances:{},enteredCbs:{},name:l,parent:o,matchAs:i,redirect:a.redirect,beforeEnter:a.beforeEnter,meta:a.meta||{},props:null==a.props?{}:a.components?a.props:{default:a.props}};a.children&&a.children.forEach((function(a){var o=i?to(i+"/"+a.path):void 0;e(t,n,r,a,d,o)}));n[d.path]||(t.push(d.path),n[d.path]=d);if(void 0!==a.alias)for(var p=Array.isArray(a.alias)?a.alias:[a.alias],h=0;h<p.length;++h){0;var m={path:p[h],children:a.children};e(t,n,r,m,o,d.path||"/")}l&&(r[l]||(r[l]=d))}(a,o,i,e)}));for(var s=0,l=a.length;s<l;s++)"*"===a[s]&&(a.push(a.splice(s,1)[0]),l--,s--);return{pathList:a,pathMap:o,nameMap:i}}function Eo(e,t){return ro(e,[],t)}function _o(e,t){var n=zo(e),r=n.pathList,a=n.pathMap,o=n.nameMap;function i(e,n,i){var s=wo(e,n,!1,t),c=s.name;if(c){var u=o[c];if(!u)return l(null,s);var d=u.regex.keys.filter((function(e){return!e.optional})).map((function(e){return e.name}));if("object"!=typeof s.params&&(s.params={}),n&&"object"==typeof n.params)for(var p in n.params)!(p in s.params)&&d.indexOf(p)>-1&&(s.params[p]=n.params[p]);return s.path=ko(u.path,s.params),l(u,s,i)}if(s.path){s.params={};for(var h=0;h<r.length;h++){var m=r[h],g=a[m];if(So(g.regex,s.path,s.params))return l(g,s,i)}}return l(null,s)}function s(e,n){var r=e.redirect,a="function"==typeof r?r($a(e,n,null,t)):r;if("string"==typeof a&&(a={path:a}),!a||"object"!=typeof a)return l(null,n);var s=a,c=s.name,u=s.path,d=n.query,p=n.hash,h=n.params;if(d=s.hasOwnProperty("query")?s.query:d,p=s.hasOwnProperty("hash")?s.hash:p,h=s.hasOwnProperty("params")?s.params:h,c){o[c];return i({_normalized:!0,name:c,query:d,hash:p,params:h},void 0,n)}if(u){var m=function(e,t){return eo(e,t.parent?t.parent.path:"/",!0)}(u,e);return i({_normalized:!0,path:ko(m,h),query:d,hash:p},void 0,n)}return l(null,n)}function l(e,n,r){return e&&e.redirect?s(e,r||n):e&&e.matchAs?function(e,t,n){var r=i({_normalized:!0,path:ko(n,t.params)});if(r){var a=r.matched,o=a[a.length-1];return t.params=r.params,l(o,t)}return l(null,t)}(0,n,e.matchAs):$a(e,n,r,t)}return{match:i,addRoutes:function(e){zo(e,r,a,o)}}}function So(e,t,n){var r=t.match(e);if(!r)return!1;if(!n)return!0;for(var a=1,o=r.length;a<o;++a){var i=e.keys[a-1];i&&(n[i.name||"pathMatch"]="string"==typeof r[a]?Ma(r[a]):r[a])}return!0}var Do=jo&&window.performance&&window.performance.now?window.performance:Date;function Co(){return Do.now().toFixed(3)}var Ro=Co();function Ao(){return Ro}function Po(e){return Ro=e}var Oo=Object.create(null);function Lo(){"scrollRestoration"in window.history&&(window.history.scrollRestoration="manual");var e=window.location.protocol+"//"+window.location.host,t=window.location.href.replace(e,""),n=Aa({},window.history.state);return n.key=Ao(),window.history.replaceState(n,"",t),window.addEventListener("popstate",No),function(){window.removeEventListener("popstate",No)}}function Fo(e,t,n,r){if(e.app){var a=e.options.scrollBehavior;a&&e.app.$nextTick((function(){var o=function(){var e=Ao();if(e)return Oo[e]}(),i=a.call(e,t,n,r?o:null);i&&("function"==typeof i.then?i.then((function(e){Wo(e,o)})).catch((function(e){0})):Wo(i,o))}))}}function Mo(){var e=Ao();e&&(Oo[e]={x:window.pageXOffset,y:window.pageYOffset})}function No(e){Mo(),e.state&&e.state.key&&Po(e.state.key)}function Ko(e){return Uo(e.x)||Uo(e.y)}function Bo(e){return{x:Uo(e.x)?e.x:window.pageXOffset,y:Uo(e.y)?e.y:window.pageYOffset}}function Uo(e){return"number"==typeof e}var $o=/^#\d/;function Wo(e,t){var n,r="object"==typeof e;if(r&&"string"==typeof e.selector){var a=$o.test(e.selector)?document.getElementById(e.selector.slice(1)):document.querySelector(e.selector);if(a){var o=e.offset&&"object"==typeof e.offset?e.offset:{};t=function(e,t){var n=document.documentElement.getBoundingClientRect(),r=e.getBoundingClientRect();return{x:r.left-n.left-t.x,y:r.top-n.top-t.y}}(a,o={x:Uo((n=o).x)?n.x:0,y:Uo(n.y)?n.y:0})}else Ko(e)&&(t=Bo(e))}else r&&Ko(e)&&(t=Bo(e));t&&("scrollBehavior"in document.documentElement.style?window.scrollTo({left:t.x,top:t.y,behavior:e.behavior}):window.scrollTo(t.x,t.y))}var Go,Vo=jo&&((-1===(Go=window.navigator.userAgent).indexOf("Android 2.")&&-1===Go.indexOf("Android 4.0")||-1===Go.indexOf("Mobile Safari")||-1!==Go.indexOf("Chrome")||-1!==Go.indexOf("Windows Phone"))&&window.history&&"function"==typeof window.history.pushState);function Ho(e,t){Mo();var n=window.history;try{if(t){var r=Aa({},n.state);r.key=Ao(),n.replaceState(r,"",e)}else n.pushState({key:Po(Co())},"",e)}catch(n){window.location[t?"replace":"assign"](e)}}function Jo(e){Ho(e,!0)}function Yo(e,t,n){var r=function(a){a>=e.length?n():e[a]?t(e[a],(function(){r(a+1)})):r(a+1)};r(0)}var Qo={redirected:2,aborted:4,cancelled:8,duplicated:16};function Zo(e,t){return ei(e,t,Qo.redirected,'Redirected when going from "'+e.fullPath+'" to "'+function(e){if("string"==typeof e)return e;if("path"in e)return e.path;var t={};return ti.forEach((function(n){n in e&&(t[n]=e[n])})),JSON.stringify(t,null,2)}(t)+'" via a navigation guard.')}function Xo(e,t){return ei(e,t,Qo.cancelled,'Navigation cancelled from "'+e.fullPath+'" to "'+t.fullPath+'" with a new navigation.')}function ei(e,t,n,r){var a=new Error(r);return a._isRouter=!0,a.from=e,a.to=t,a.type=n,a}var ti=["params","query","hash"];function ni(e){return Object.prototype.toString.call(e).indexOf("Error")>-1}function ri(e,t){return ni(e)&&e._isRouter&&(null==t||e.type===t)}function ai(e){return function(t,n,r){var a=!1,o=0,i=null;oi(e,(function(e,t,n,s){if("function"==typeof e&&void 0===e.cid){a=!0,o++;var l,c=li((function(t){var a;((a=t).__esModule||si&&"Module"===a[Symbol.toStringTag])&&(t=t.default),e.resolved="function"==typeof t?t:xo.extend(t),n.components[s]=t,--o<=0&&r()})),u=li((function(e){var t="Failed to resolve async component "+s+": "+e;i||(i=ni(e)?e:new Error(t),r(i))}));try{l=e(c,u)}catch(e){u(e)}if(l)if("function"==typeof l.then)l.then(c,u);else{var d=l.component;d&&"function"==typeof d.then&&d.then(c,u)}}})),a||r()}}function oi(e,t){return ii(e.map((function(e){return Object.keys(e.components).map((function(n){return t(e.components[n],e.instances[n],e,n)}))})))}function ii(e){return Array.prototype.concat.apply([],e)}var si="function"==typeof Symbol&&"symbol"==typeof Symbol.toStringTag;function li(e){var t=!1;return function(){for(var n=[],r=arguments.length;r--;)n[r]=arguments[r];if(!t)return t=!0,e.apply(this,n)}}var ci=function(e,t){this.router=e,this.base=function(e){if(!e)if(jo){var t=document.querySelector("base");e=(e=t&&t.getAttribute("href")||"/").replace(/^https?:\/\/[^\/]+/,"")}else e="/";"/"!==e.charAt(0)&&(e="/"+e);return e.replace(/\/$/,"")}(t),this.current=Ga,this.pending=null,this.ready=!1,this.readyCbs=[],this.readyErrorCbs=[],this.errorCbs=[],this.listeners=[]};function ui(e,t,n,r){var a=oi(e,(function(e,r,a,o){var i=function(e,t){"function"!=typeof e&&(e=xo.extend(e));return e.options[t]}(e,t);if(i)return Array.isArray(i)?i.map((function(e){return n(e,r,a,o)})):n(i,r,a,o)}));return ii(r?a.reverse():a)}function di(e,t){if(t)return function(){return e.apply(t,arguments)}}ci.prototype.listen=function(e){this.cb=e},ci.prototype.onReady=function(e,t){this.ready?e():(this.readyCbs.push(e),t&&this.readyErrorCbs.push(t))},ci.prototype.onError=function(e){this.errorCbs.push(e)},ci.prototype.transitionTo=function(e,t,n){var r,a=this;try{r=this.router.match(e,this.current)}catch(e){throw this.errorCbs.forEach((function(t){t(e)})),e}var o=this.current;this.confirmTransition(r,(function(){a.updateRoute(r),t&&t(r),a.ensureURL(),a.router.afterHooks.forEach((function(e){e&&e(r,o)})),a.ready||(a.ready=!0,a.readyCbs.forEach((function(e){e(r)})))}),(function(e){n&&n(e),e&&!a.ready&&(ri(e,Qo.redirected)&&o===Ga||(a.ready=!0,a.readyErrorCbs.forEach((function(t){t(e)}))))}))},ci.prototype.confirmTransition=function(e,t,n){var r=this,a=this.current;this.pending=e;var o,i,s=function(e){!ri(e)&&ni(e)&&(r.errorCbs.length?r.errorCbs.forEach((function(t){t(e)})):console.error(e)),n&&n(e)},l=e.matched.length-1,c=a.matched.length-1;if(Ja(e,a)&&l===c&&e.matched[l]===a.matched[c])return this.ensureURL(),s(((i=ei(o=a,e,Qo.duplicated,'Avoided redundant navigation to current location: "'+o.fullPath+'".')).name="NavigationDuplicated",i));var u=function(e,t){var n,r=Math.max(e.length,t.length);for(n=0;n<r&&e[n]===t[n];n++);return{updated:t.slice(0,n),activated:t.slice(n),deactivated:e.slice(n)}}(this.current.matched,e.matched),d=u.updated,p=u.deactivated,h=u.activated,m=[].concat(function(e){return ui(e,"beforeRouteLeave",di,!0)}(p),this.router.beforeHooks,function(e){return ui(e,"beforeRouteUpdate",di)}(d),h.map((function(e){return e.beforeEnter})),ai(h)),g=function(t,n){if(r.pending!==e)return s(Xo(a,e));try{t(e,a,(function(t){!1===t?(r.ensureURL(!0),s(function(e,t){return ei(e,t,Qo.aborted,'Navigation aborted from "'+e.fullPath+'" to "'+t.fullPath+'" via a navigation guard.')}(a,e))):ni(t)?(r.ensureURL(!0),s(t)):"string"==typeof t||"object"==typeof t&&("string"==typeof t.path||"string"==typeof t.name)?(s(Zo(a,e)),"object"==typeof t&&t.replace?r.replace(t):r.push(t)):n(t)}))}catch(e){s(e)}};Yo(m,g,(function(){Yo(function(e){return ui(e,"beforeRouteEnter",(function(e,t,n,r){return function(e,t,n){return function(r,a,o){return e(r,a,(function(e){"function"==typeof e&&(t.enteredCbs[n]||(t.enteredCbs[n]=[]),t.enteredCbs[n].push(e)),o(e)}))}}(e,n,r)}))}(h).concat(r.router.resolveHooks),g,(function(){if(r.pending!==e)return s(Xo(a,e));r.pending=null,t(e),r.router.app&&r.router.app.$nextTick((function(){Qa(e)}))}))}))},ci.prototype.updateRoute=function(e){this.current=e,this.cb&&this.cb(e)},ci.prototype.setupListeners=function(){},ci.prototype.teardown=function(){this.listeners.forEach((function(e){e()})),this.listeners=[],this.current=Ga,this.pending=null};var pi=function(e){function t(t,n){e.call(this,t,n),this._startLocation=hi(this.base)}return e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t,t.prototype.setupListeners=function(){var e=this;if(!(this.listeners.length>0)){var t=this.router,n=t.options.scrollBehavior,r=Vo&&n;r&&this.listeners.push(Lo());var a=function(){var n=e.current,a=hi(e.base);e.current===Ga&&a===e._startLocation||e.transitionTo(a,(function(e){r&&Fo(t,e,n,!0)}))};window.addEventListener("popstate",a),this.listeners.push((function(){window.removeEventListener("popstate",a)}))}},t.prototype.go=function(e){window.history.go(e)},t.prototype.push=function(e,t,n){var r=this,a=this.current;this.transitionTo(e,(function(e){Ho(to(r.base+e.fullPath)),Fo(r.router,e,a,!1),t&&t(e)}),n)},t.prototype.replace=function(e,t,n){var r=this,a=this.current;this.transitionTo(e,(function(e){Jo(to(r.base+e.fullPath)),Fo(r.router,e,a,!1),t&&t(e)}),n)},t.prototype.ensureURL=function(e){if(hi(this.base)!==this.current.fullPath){var t=to(this.base+this.current.fullPath);e?Ho(t):Jo(t)}},t.prototype.getCurrentLocation=function(){return hi(this.base)},t}(ci);function hi(e){var t=window.location.pathname;return e&&0===t.toLowerCase().indexOf(e.toLowerCase())&&(t=t.slice(e.length)),(t||"/")+window.location.search+window.location.hash}var mi=function(e){function t(t,n,r){e.call(this,t,n),r&&function(e){var t=hi(e);if(!/^\/#/.test(t))return window.location.replace(to(e+"/#"+t)),!0}(this.base)||gi()}return e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t,t.prototype.setupListeners=function(){var e=this;if(!(this.listeners.length>0)){var t=this.router.options.scrollBehavior,n=Vo&&t;n&&this.listeners.push(Lo());var r=function(){var t=e.current;gi()&&e.transitionTo(fi(),(function(r){n&&Fo(e.router,r,t,!0),Vo||bi(r.fullPath)}))},a=Vo?"popstate":"hashchange";window.addEventListener(a,r),this.listeners.push((function(){window.removeEventListener(a,r)}))}},t.prototype.push=function(e,t,n){var r=this,a=this.current;this.transitionTo(e,(function(e){vi(e.fullPath),Fo(r.router,e,a,!1),t&&t(e)}),n)},t.prototype.replace=function(e,t,n){var r=this,a=this.current;this.transitionTo(e,(function(e){bi(e.fullPath),Fo(r.router,e,a,!1),t&&t(e)}),n)},t.prototype.go=function(e){window.history.go(e)},t.prototype.ensureURL=function(e){var t=this.current.fullPath;fi()!==t&&(e?vi(t):bi(t))},t.prototype.getCurrentLocation=function(){return fi()},t}(ci);function gi(){var e=fi();return"/"===e.charAt(0)||(bi("/"+e),!1)}function fi(){var e=window.location.href,t=e.indexOf("#");return t<0?"":e=e.slice(t+1)}function yi(e){var t=window.location.href,n=t.indexOf("#");return(n>=0?t.slice(0,n):t)+"#"+e}function vi(e){Vo?Ho(yi(e)):window.location.hash=e}function bi(e){Vo?Jo(yi(e)):window.location.replace(yi(e))}var ki=function(e){function t(t,n){e.call(this,t,n),this.stack=[],this.index=-1}return e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t,t.prototype.push=function(e,t,n){var r=this;this.transitionTo(e,(function(e){r.stack=r.stack.slice(0,r.index+1).concat(e),r.index++,t&&t(e)}),n)},t.prototype.replace=function(e,t,n){var r=this;this.transitionTo(e,(function(e){r.stack=r.stack.slice(0,r.index).concat(e),t&&t(e)}),n)},t.prototype.go=function(e){var t=this,n=this.index+e;if(!(n<0||n>=this.stack.length)){var r=this.stack[n];this.confirmTransition(r,(function(){var e=t.current;t.index=n,t.updateRoute(r),t.router.afterHooks.forEach((function(t){t&&t(r,e)}))}),(function(e){ri(e,Qo.duplicated)&&(t.index=n)}))}},t.prototype.getCurrentLocation=function(){var e=this.stack[this.stack.length-1];return e?e.fullPath:"/"},t.prototype.ensureURL=function(){},t}(ci),wi=function(e){void 0===e&&(e={}),this.app=null,this.apps=[],this.options=e,this.beforeHooks=[],this.resolveHooks=[],this.afterHooks=[],this.matcher=_o(e.routes||[],this);var t=e.mode||"hash";switch(this.fallback="history"===t&&!Vo&&!1!==e.fallback,this.fallback&&(t="hash"),jo||(t="abstract"),this.mode=t,t){case"history":this.history=new pi(this,e.base);break;case"hash":this.history=new mi(this,e.base,this.fallback);break;case"abstract":this.history=new ki(this,e.base);break;default:0}},xi={currentRoute:{configurable:!0}};function Ti(e,t){return e.push(t),function(){var n=e.indexOf(t);n>-1&&e.splice(n,1)}}wi.prototype.match=function(e,t,n){return this.matcher.match(e,t,n)},xi.currentRoute.get=function(){return this.history&&this.history.current},wi.prototype.init=function(e){var t=this;if(this.apps.push(e),e.$once("hook:destroyed",(function(){var n=t.apps.indexOf(e);n>-1&&t.apps.splice(n,1),t.app===e&&(t.app=t.apps[0]||null),t.app||t.history.teardown()})),!this.app){this.app=e;var n=this.history;if(n instanceof pi||n instanceof mi){var r=function(e){n.setupListeners(),function(e){var r=n.current,a=t.options.scrollBehavior;Vo&&a&&"fullPath"in e&&Fo(t,e,r,!1)}(e)};n.transitionTo(n.getCurrentLocation(),r,r)}n.listen((function(e){t.apps.forEach((function(t){t._route=e}))}))}},wi.prototype.beforeEach=function(e){return Ti(this.beforeHooks,e)},wi.prototype.beforeResolve=function(e){return Ti(this.resolveHooks,e)},wi.prototype.afterEach=function(e){return Ti(this.afterHooks,e)},wi.prototype.onReady=function(e,t){this.history.onReady(e,t)},wi.prototype.onError=function(e){this.history.onError(e)},wi.prototype.push=function(e,t,n){var r=this;if(!t&&!n&&"undefined"!=typeof Promise)return new Promise((function(t,n){r.history.push(e,t,n)}));this.history.push(e,t,n)},wi.prototype.replace=function(e,t,n){var r=this;if(!t&&!n&&"undefined"!=typeof Promise)return new Promise((function(t,n){r.history.replace(e,t,n)}));this.history.replace(e,t,n)},wi.prototype.go=function(e){this.history.go(e)},wi.prototype.back=function(){this.go(-1)},wi.prototype.forward=function(){this.go(1)},wi.prototype.getMatchedComponents=function(e){var t=e?e.matched?e:this.resolve(e).route:this.currentRoute;return t?[].concat.apply([],t.matched.map((function(e){return Object.keys(e.components).map((function(t){return e.components[t]}))}))):[]},wi.prototype.resolve=function(e,t,n){var r=wo(e,t=t||this.history.current,n,this),a=this.match(r,t),o=a.redirectedFrom||a.fullPath;return{location:r,route:a,href:function(e,t,n){var r="hash"===n?"#"+t:t;return e?to(e+"/"+r):r}(this.history.base,o,this.mode),normalizedTo:r,resolved:a}},wi.prototype.addRoutes=function(e){this.matcher.addRoutes(e),this.history.current!==Ga&&this.history.transitionTo(this.history.getCurrentLocation())},Object.defineProperties(wi.prototype,xi),wi.install=function e(t){if(!e.installed||xo!==t){e.installed=!0,xo=t;var n=function(e){return void 0!==e},r=function(e,t){var r=e.$options._parentVnode;n(r)&&n(r=r.data)&&n(r=r.registerRouteInstance)&&r(e,t)};t.mixin({beforeCreate:function(){n(this.$options.router)?(this._routerRoot=this,this._router=this.$options.router,this._router.init(this),t.util.defineReactive(this,"_route",this._router.history.current)):this._routerRoot=this.$parent&&this.$parent._routerRoot||this,r(this,this)},destroyed:function(){r(this)}}),Object.defineProperty(t.prototype,"$router",{get:function(){return this._routerRoot._router}}),Object.defineProperty(t.prototype,"$route",{get:function(){return this._routerRoot._route}}),t.component("RouterView",Za),t.component("RouterLink",Io);var a=t.config.optionMergeStrategies;a.beforeRouteEnter=a.beforeRouteLeave=a.beforeRouteUpdate=a.created}},wi.version="3.4.9",wi.isNavigationFailure=ri,wi.NavigationFailureType=Qo,jo&&window.Vue&&window.Vue.use(wi);var Ii=wi;n(36),n(214),n(216),n(151),n(152),n(75),n(121),n(37);function qi(e){e.locales&&Object.keys(e.locales).forEach((function(t){e.locales[t].path=t})),Object.freeze(e)}n(196),n(153),n(27),n(198),n(73),n(45),n(64),n(96);function ji(e){return(ji="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var zi=n(47),Ei={NotFound:function(){return n.e(26).then(n.bind(null,629))},Layout:function(){return Promise.all([n.e(0),n.e(1),n.e(5)]).then(n.bind(null,627))}},_i={"v-3140ed9c":function(){return n.e(76).then(n.bind(null,661))},"v-1af8f4dc":function(){return n.e(27).then(n.bind(null,662))},"v-24306408":function(){return n.e(28).then(n.bind(null,664))},"v-04b425b0":function(){return n.e(29).then(n.bind(null,665))},"v-c4be06f0":function(){return n.e(30).then(n.bind(null,667))},"v-6e805448":function(){return n.e(31).then(n.bind(null,668))},"v-67c3e868":function(){return n.e(32).then(n.bind(null,670))},"v-3ef378d0":function(){return n.e(34).then(n.bind(null,671))},"v-636e3ee8":function(){return n.e(33).then(n.bind(null,673))},"v-f99b39f0":function(){return n.e(35).then(n.bind(null,674))},"v-6842f008":function(){return n.e(37).then(n.bind(null,676))},"v-55acd5fe":function(){return n.e(36).then(n.bind(null,677))},"v-7854a970":function(){return n.e(38).then(n.bind(null,679))},"v-026cac48":function(){return n.e(39).then(n.bind(null,680))},"v-db882e10":function(){return n.e(40).then(n.bind(null,682))},"v-be84a670":function(){return n.e(21).then(n.bind(null,683))},"v-12b44ec8":function(){return n.e(41).then(n.bind(null,685))},"v-11cc6b58":function(){return n.e(42).then(n.bind(null,686))},"v-a42a4c0e":function(){return n.e(43).then(n.bind(null,688))},"v-631e077a":function(){return n.e(44).then(n.bind(null,689))},"v-477f7948":function(){return n.e(45).then(n.bind(null,691))},"v-587c915c":function(){return n.e(46).then(n.bind(null,768))},"v-550d8c48":function(){return n.e(47).then(n.bind(null,694))},"v-5a7b3ee8":function(){return n.e(8).then(n.bind(null,695))},"v-8488a8b4":function(){return n.e(48).then(n.bind(null,697))},"v-2a1991f2":function(){return n.e(49).then(n.bind(null,698))},"v-7db39c08":function(){return n.e(50).then(n.bind(null,700))},"v-019a6270":function(){return n.e(22).then(n.bind(null,701))},"v-a824f470":function(){return n.e(51).then(n.bind(null,639))},"v-92b626b0":function(){return n.e(52).then(n.bind(null,704))},"v-08c54868":function(){return n.e(53).then(n.bind(null,706))},"v-7e6b41b0":function(){return n.e(54).then(n.bind(null,707))},"v-2b85cc88":function(){return n.e(55).then(n.bind(null,709))},"v-801f5ac2":function(){return n.e(57).then(n.bind(null,710))},"v-084d894c":function(){return n.e(56).then(n.bind(null,712))},"v-4a03194d":function(){return n.e(58).then(n.bind(null,713))},"v-472d66c8":function(){return n.e(59).then(n.bind(null,715))},"v-64927783":function(){return n.e(60).then(n.bind(null,716))},"v-6ae2b2a3":function(){return n.e(61).then(n.bind(null,718))},"v-7aff5bba":function(){return n.e(62).then(n.bind(null,719))},"v-cdabe47a":function(){return n.e(64).then(n.bind(null,721))},"v-b253103a":function(){return n.e(63).then(n.bind(null,722))},"v-65ccacc3":function(){return n.e(65).then(n.bind(null,724))},"v-d036673a":function(){return n.e(66).then(n.bind(null,725))},"v-787eb528":function(){return n.e(6).then(n.bind(null,727))},"v-4e9ad7a0":function(){return n.e(23).then(n.bind(null,728))},"v-af19e69c":function(){return n.e(67).then(n.bind(null,731))},"v-e5195c30":function(){return n.e(68).then(n.bind(null,732))},"v-74d8f83a":function(){return n.e(69).then(n.bind(null,734))},"v-51cba32a":function(){return n.e(71).then(n.bind(null,735))},"v-e228dff0":function(){return n.e(70).then(n.bind(null,737))},"v-c38cdba0":function(){return n.e(72).then(n.bind(null,738))},"v-2e06cf88":function(){return n.e(74).then(n.bind(null,740))},"v-528bedd8":function(){return n.e(75).then(n.bind(null,741))},"v-209f3a3c":function(){return n.e(4).then(n.bind(null,743))},"v-8c82ad54":function(){return n.e(77).then(n.bind(null,744))},"v-cb94d530":function(){return n.e(78).then(n.bind(null,746))},"v-887ced7e":function(){return n.e(79).then(n.bind(null,747))},"v-71cae13a":function(){return n.e(80).then(n.bind(null,749))},"v-692642c3":function(){return n.e(82).then(n.bind(null,750))},"v-6f20d009":function(){return n.e(81).then(n.bind(null,752))},"v-1b5304cf":function(){return n.e(83).then(n.bind(null,753))},"v-4accb5fa":function(){return n.e(84).then(n.bind(null,755))},"v-0ca17f3a":function(){return n.e(85).then(n.bind(null,756))},"v-473550c3":function(){return n.e(86).then(n.bind(null,758))},"v-42fac8a3":function(){return n.e(87).then(n.bind(null,767))},"v-5337ef7a":function(){return n.e(88).then(n.bind(null,757))},"v-a00a283a":function(){return n.e(89).then(n.bind(null,754))},"v-1ac7383a":function(){return n.e(90).then(n.bind(null,751))},"v-63747bba":function(){return n.e(91).then(n.bind(null,748))},"v-b4935bfa":function(){return n.e(92).then(n.bind(null,745))},"v-35363b7a":function(){return n.e(93).then(n.bind(null,742))},"v-7fe967a3":function(){return n.e(95).then(n.bind(null,739))},"v-73b9fb3a":function(){return n.e(94).then(n.bind(null,736))},"v-463aa523":function(){return n.e(96).then(n.bind(null,733))},"v-c59a313a":function(){return n.e(97).then(n.bind(null,730))},"v-76e169a3":function(){return n.e(98).then(n.bind(null,726))},"v-79a66723":function(){return n.e(99).then(n.bind(null,723))},"v-44dca4c3":function(){return n.e(100).then(n.bind(null,720))},"v-1172039b":function(){return n.e(101).then(n.bind(null,717))},"v-471db309":function(){return n.e(102).then(n.bind(null,714))},"v-0b14c0b0":function(){return n.e(103).then(n.bind(null,711))},"v-2a294a03":function(){return n.e(104).then(n.bind(null,708))},"v-87b63d3a":function(){return n.e(105).then(n.bind(null,705))},"v-56e82843":function(){return n.e(106).then(n.bind(null,702))},"v-6ba611ba":function(){return n.e(107).then(n.bind(null,699))},"v-60b891e2":function(){return n.e(108).then(n.bind(null,696))},"v-1bc88783":function(){return n.e(109).then(n.bind(null,693))},"v-b6c1b05a":function(){return n.e(110).then(n.bind(null,690))},"v-2300abf0":function(){return n.e(111).then(n.bind(null,687))},"v-39894003":function(){return n.e(112).then(n.bind(null,684))},"v-495a34ed":function(){return n.e(113).then(n.bind(null,681))},"v-bcd429ea":function(){return n.e(114).then(n.bind(null,678))},"v-2d12e13a":function(){return n.e(115).then(n.bind(null,675))},"v-6ca79c83":function(){return n.e(116).then(n.bind(null,672))},"v-5fe87717":function(){return n.e(117).then(n.bind(null,669))},"v-8568b3d6":function(){return n.e(118).then(n.bind(null,666))},"v-4189dac7":function(){return n.e(120).then(n.bind(null,663))},"v-1a7c016b":function(){return n.e(119).then(n.bind(null,660))},"v-3f13b63a":function(){return n.e(121).then(n.bind(null,659))},"v-02718283":function(){return n.e(122).then(n.bind(null,658))},"v-780273ba":function(){return n.e(123).then(n.bind(null,657))},"v-6a9eb8e3":function(){return n.e(124).then(n.bind(null,656))},"v-23af7da3":function(){return n.e(128).then(n.bind(null,655))},"v-50e7ae83":function(){return n.e(127).then(n.bind(null,654))},"v-b51bc33a":function(){return n.e(129).then(n.bind(null,759))},"v-3f3b5722":function(){return n.e(130).then(n.bind(null,653))},"v-625fbfba":function(){return n.e(131).then(n.bind(null,652))},"v-3812bec4":function(){return n.e(132).then(n.bind(null,651))},"v-a5890592":function(){return n.e(133).then(n.bind(null,650))},"v-034126a8":function(){return n.e(134).then(n.bind(null,649))},"v-1342f403":function(){return n.e(135).then(n.bind(null,648))},"v-3e719c50":function(){return n.e(136).then(n.bind(null,647))},"v-20aa16f0":function(){return n.e(138).then(n.bind(null,646))},"v-8b587e3a":function(){return n.e(140).then(n.bind(null,645))},"v-c55cb926":function(){return n.e(137).then(n.bind(null,644))},"v-c96f8dba":function(){return n.e(139).then(n.bind(null,643))},"v-a838197a":function(){return n.e(141).then(n.bind(null,642))},"v-3eef13ba":function(){return n.e(142).then(n.bind(null,641))},"v-01024800":function(){return n.e(143).then(n.bind(null,640))},"v-69d470a3":function(){return n.e(144).then(n.bind(null,760))},"v-584500cb":function(){return n.e(145).then(n.bind(null,703))},"v-39c4896b":function(){return n.e(146).then(n.bind(null,692))},"v-7af6bb63":function(){return n.e(147).then(n.bind(null,729))},"v-51c6d563":function(){return n.e(148).then(n.bind(null,762))},"v-097684fa":function(){return n.e(18).then(n.bind(null,763))},"v-5cb2b138":function(){return n.e(73).then(n.bind(null,764))},"v-28b0bb5a":function(){return n.e(126).then(n.bind(null,765))},"v-56588943":function(){return n.e(125).then(n.bind(null,766))}};function Si(e){var t=Object.create(null);return function(n){return t[n]||(t[n]=e(n))}}var Di=/-(\w)/g,Ci=Si((function(e){return e.replace(Di,(function(e,t){return t?t.toUpperCase():""}))})),Ri=/\B([A-Z])/g,Ai=Si((function(e){return e.replace(Ri,"-$1").toLowerCase()})),Pi=Si((function(e){return e.charAt(0).toUpperCase()+e.slice(1)}));function Oi(e,t){if(t)return e(t)?e(t):t.includes("-")?e(Pi(Ci(t))):e(Pi(t))||e(Ai(t))}var Li=Object.assign({},Ei,_i),Fi=function(e){return Li[e]},Mi=function(e){return _i[e]},Ni=function(e){return Ei[e]},Ki=function(e){return Ra.component(e)};function Bi(e){return Oi(Mi,e)}function Ui(e){return Oi(Ni,e)}function $i(e){return Oi(Fi,e)}function Wi(e){return Oi(Ki,e)}function Gi(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Promise.all(t.filter((function(e){return e})).map(function(){var e=Object(r.a)(regeneratorRuntime.mark((function e(t){var n;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(Wi(t)||!$i(t)){e.next=5;break}return e.next=3,$i(t)();case 3:n=e.sent,Ra.component(t,n.default);case 5:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}()))}function Vi(e,t){"undefined"!=typeof window&&window.__VUEPRESS__&&(window.__VUEPRESS__[e]=t)}n(115),n(190);var Hi=n(107),Ji=n(184),Yi=n.n(Ji),Qi={created:function(){if(this.siteMeta=this.$site.headTags.filter((function(e){return"meta"===Object(Hi.a)(e,1)[0]})).map((function(e){var t=Object(Hi.a)(e,2);t[0];return t[1]})),this.$ssrContext){var e=this.getMergedMetaTags();this.$ssrContext.title=this.$title,this.$ssrContext.lang=this.$lang,this.$ssrContext.pageMeta=(t=e)?t.map((function(e){var t="<meta";return Object.keys(e).forEach((function(n){t+=" ".concat(n,'="').concat(e[n],'"')})),t+">"})).join("\n    "):"",this.$ssrContext.canonicalLink=Xi(this.$canonicalUrl)}var t},mounted:function(){this.currentMetaTags=Object(zi.a)(document.querySelectorAll("meta")),this.updateMeta(),this.updateCanonicalLink()},methods:{updateMeta:function(){document.title=this.$title,document.documentElement.lang=this.$lang;var e=this.getMergedMetaTags();this.currentMetaTags=es(e,this.currentMetaTags)},getMergedMetaTags:function(){var e=this.$page.frontmatter.meta||[];return Yi()([{name:"description",content:this.$description}],e,this.siteMeta,ts)},updateCanonicalLink:function(){Zi(),this.$canonicalUrl&&document.head.insertAdjacentHTML("beforeend",Xi(this.$canonicalUrl))}},watch:{$page:function(){this.updateMeta(),this.updateCanonicalLink()}},beforeDestroy:function(){es(null,this.currentMetaTags),Zi()}};function Zi(){var e=document.querySelector("link[rel='canonical']");e&&e.remove()}function Xi(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return e?'<link href="'.concat(e,'" rel="canonical" />'):""}function es(e,t){if(t&&Object(zi.a)(t).filter((function(e){return e.parentNode===document.head})).forEach((function(e){return document.head.removeChild(e)})),e)return e.map((function(e){var t=document.createElement("meta");return Object.keys(e).forEach((function(n){t.setAttribute(n,e[n])})),document.head.appendChild(t),t}))}function ts(e){for(var t=0,n=["name","property","itemprop"];t<n.length;t++){var r=n[t];if(e.hasOwnProperty(r))return e[r]+r}return JSON.stringify(e)}n(186);var ns=n(32),rs=n.n(ns),as={mounted:function(){window.addEventListener("scroll",this.onScroll)},methods:{onScroll:rs()((function(){this.setActiveHash()}),300),setActiveHash:function(){for(var e=this,t=[].slice.call(document.querySelectorAll(".sidebar-link")),n=[].slice.call(document.querySelectorAll(".header-anchor")).filter((function(e){return t.some((function(t){return t.hash===e.hash}))})),r=Math.max(window.pageYOffset,document.documentElement.scrollTop,document.body.scrollTop),a=Math.max(document.documentElement.scrollHeight,document.body.scrollHeight),o=window.innerHeight+r,i=0;i<n.length;i++){var s=n[i],l=n[i+1],c=0===i&&0===r||r>=s.parentElement.offsetTop+10&&(!l||r<l.parentElement.offsetTop-10),u=decodeURIComponent(this.$route.hash);if(c&&u!==decodeURIComponent(s.hash)){var d=s;if(o===a)for(var p=i+1;p<n.length;p++)if(u===decodeURIComponent(n[p].hash))return;return this.$vuepress.$set("disableScrollBehavior",!0),void this.$router.replace(decodeURIComponent(d.hash),(function(){e.$nextTick((function(){e.$vuepress.$set("disableScrollBehavior",!1)}))}))}}}},beforeDestroy:function(){window.removeEventListener("scroll",this.onScroll)}},os=n(185),is=n.n(os),ss={mounted:function(){is.a.polyfill()}},ls=(n(78),n(72)),cs=n.n(ls),us={mounted:function(){var e=this;cs.a.configure({showSpinner:!1}),this.$router.beforeEach((function(e,t,n){e.path===t.path||Ra.component(e.name)||cs.a.start(),n()})),this.$router.afterEach((function(){cs.a.done(),e.isSidebarOpen=!1}))}};n(76),n(70);function ds(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}n(106);function ps(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function hs(e,t,n){return t&&ps(e.prototype,t),n&&ps(e,n),e}
/*! medium-zoom 1.0.6 | MIT License | https://github.com/francoischalifour/medium-zoom */var ms=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},gs=function(e){return"IMG"===e.tagName},fs=function(e){return e&&1===e.nodeType},ys=function(e){return".svg"===(e.currentSrc||e.src).substr(-4).toLowerCase()},vs=function(e){try{return Array.isArray(e)?e.filter(gs):function(e){return NodeList.prototype.isPrototypeOf(e)}(e)?[].slice.call(e).filter(gs):fs(e)?[e].filter(gs):"string"==typeof e?[].slice.call(document.querySelectorAll(e)).filter(gs):[]}catch(e){throw new TypeError("The provided selector is invalid.\nExpects a CSS selector, a Node element, a NodeList or an array.\nSee: https://github.com/francoischalifour/medium-zoom")}},bs=function(e){var t=document.createElement("div");return t.classList.add("medium-zoom-overlay"),t.style.background=e,t},ks=function(e){var t=e.getBoundingClientRect(),n=t.top,r=t.left,a=t.width,o=t.height,i=e.cloneNode(),s=window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0,l=window.pageXOffset||document.documentElement.scrollLeft||document.body.scrollLeft||0;return i.removeAttribute("id"),i.style.position="absolute",i.style.top=n+s+"px",i.style.left=r+l+"px",i.style.width=a+"px",i.style.height=o+"px",i.style.transform="",i},ws=function(e,t){var n=ms({bubbles:!1,cancelable:!1,detail:void 0},t);if("function"==typeof window.CustomEvent)return new CustomEvent(e,n);var r=document.createEvent("CustomEvent");return r.initCustomEvent(e,n.bubbles,n.cancelable,n.detail),r};!function(e,t){void 0===t&&(t={});var n=t.insertAt;if(e&&"undefined"!=typeof document){var r=document.head||document.getElementsByTagName("head")[0],a=document.createElement("style");a.type="text/css","top"===n&&r.firstChild?r.insertBefore(a,r.firstChild):r.appendChild(a),a.styleSheet?a.styleSheet.cssText=e:a.appendChild(document.createTextNode(e))}}(".medium-zoom-overlay{position:fixed;top:0;right:0;bottom:0;left:0;opacity:0;transition:opacity .3s;will-change:opacity}.medium-zoom--opened .medium-zoom-overlay{cursor:pointer;cursor:zoom-out;opacity:1}.medium-zoom-image{cursor:pointer;cursor:zoom-in;transition:transform .3s cubic-bezier(.2,0,.2,1)!important}.medium-zoom-image--hidden{visibility:hidden}.medium-zoom-image--opened{position:relative;cursor:pointer;cursor:zoom-out;will-change:transform}");var xs=function e(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=window.Promise||function(e){function t(){}e(t,t)},a=function(e){var t=e.target;t!==q?-1!==b.indexOf(t)&&g({target:t}):m()},o=function(){if(!w&&I.original){var e=window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0;Math.abs(x-e)>T.scrollOffset&&setTimeout(m,150)}},i=function(e){var t=e.key||e.keyCode;"Escape"!==t&&"Esc"!==t&&27!==t||m()},s=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e;if(e.background&&(q.style.background=e.background),e.container&&e.container instanceof Object&&(t.container=ms({},T.container,e.container)),e.template){var n=fs(e.template)?e.template:document.querySelector(e.template);t.template=n}return T=ms({},T,t),b.forEach((function(e){e.dispatchEvent(ws("medium-zoom:update",{detail:{zoom:j}}))})),j},l=function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return e(ms({},T,t))},c=function(){for(var e=arguments.length,t=Array(e),n=0;n<e;n++)t[n]=arguments[n];var r=t.reduce((function(e,t){return[].concat(e,vs(t))}),[]);return r.filter((function(e){return-1===b.indexOf(e)})).forEach((function(e){b.push(e),e.classList.add("medium-zoom-image")})),k.forEach((function(e){var t=e.type,n=e.listener,a=e.options;r.forEach((function(e){e.addEventListener(t,n,a)}))})),j},u=function(){for(var e=arguments.length,t=Array(e),n=0;n<e;n++)t[n]=arguments[n];I.zoomed&&m();var r=t.length>0?t.reduce((function(e,t){return[].concat(e,vs(t))}),[]):b;return r.forEach((function(e){e.classList.remove("medium-zoom-image"),e.dispatchEvent(ws("medium-zoom:detach",{detail:{zoom:j}}))})),b=b.filter((function(e){return-1===r.indexOf(e)})),j},d=function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return b.forEach((function(r){r.addEventListener("medium-zoom:"+e,t,n)})),k.push({type:"medium-zoom:"+e,listener:t,options:n}),j},p=function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return b.forEach((function(r){r.removeEventListener("medium-zoom:"+e,t,n)})),k=k.filter((function(n){return!(n.type==="medium-zoom:"+e&&n.listener.toString()===t.toString())})),j},h=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e.target,n=function(){var e={width:document.documentElement.clientWidth,height:document.documentElement.clientHeight,left:0,top:0,right:0,bottom:0},t=void 0,n=void 0;if(T.container)if(T.container instanceof Object)t=(e=ms({},e,T.container)).width-e.left-e.right-2*T.margin,n=e.height-e.top-e.bottom-2*T.margin;else{var r=(fs(T.container)?T.container:document.querySelector(T.container)).getBoundingClientRect(),a=r.width,o=r.height,i=r.left,s=r.top;e=ms({},e,{width:a,height:o,left:i,top:s})}t=t||e.width-2*T.margin,n=n||e.height-2*T.margin;var l=I.zoomedHd||I.original,c=ys(l)?t:l.naturalWidth||t,u=ys(l)?n:l.naturalHeight||n,d=l.getBoundingClientRect(),p=d.top,h=d.left,m=d.width,g=d.height,f=Math.min(c,t)/m,y=Math.min(u,n)/g,v=Math.min(f,y),b="scale("+v+") translate3d("+((t-m)/2-h+T.margin+e.left)/v+"px, "+((n-g)/2-p+T.margin+e.top)/v+"px, 0)";I.zoomed.style.transform=b,I.zoomedHd&&(I.zoomedHd.style.transform=b)};return new r((function(e){if(t&&-1===b.indexOf(t))e(j);else{if(I.zoomed)e(j);else{if(t)I.original=t;else{if(!(b.length>0))return void e(j);var r=b;I.original=r[0]}if(I.original.dispatchEvent(ws("medium-zoom:open",{detail:{zoom:j}})),x=window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0,w=!0,I.zoomed=ks(I.original),document.body.appendChild(q),T.template){var a=fs(T.template)?T.template:document.querySelector(T.template);I.template=document.createElement("div"),I.template.appendChild(a.content.cloneNode(!0)),document.body.appendChild(I.template)}if(document.body.appendChild(I.zoomed),window.requestAnimationFrame((function(){document.body.classList.add("medium-zoom--opened")})),I.original.classList.add("medium-zoom-image--hidden"),I.zoomed.classList.add("medium-zoom-image--opened"),I.zoomed.addEventListener("click",m),I.zoomed.addEventListener("transitionend",(function t(){w=!1,I.zoomed.removeEventListener("transitionend",t),I.original.dispatchEvent(ws("medium-zoom:opened",{detail:{zoom:j}})),e(j)})),I.original.getAttribute("data-zoom-src")){I.zoomedHd=I.zoomed.cloneNode(),I.zoomedHd.removeAttribute("srcset"),I.zoomedHd.removeAttribute("sizes"),I.zoomedHd.src=I.zoomed.getAttribute("data-zoom-src"),I.zoomedHd.onerror=function(){clearInterval(o),console.warn("Unable to reach the zoom image target "+I.zoomedHd.src),I.zoomedHd=null,n()};var o=setInterval((function(){I.zoomedHd.complete&&(clearInterval(o),I.zoomedHd.classList.add("medium-zoom-image--opened"),I.zoomedHd.addEventListener("click",m),document.body.appendChild(I.zoomedHd),n())}),10)}else if(I.original.hasAttribute("srcset")){I.zoomedHd=I.zoomed.cloneNode(),I.zoomedHd.removeAttribute("sizes"),I.zoomedHd.removeAttribute("loading");var i=I.zoomedHd.addEventListener("load",(function(){I.zoomedHd.removeEventListener("load",i),I.zoomedHd.classList.add("medium-zoom-image--opened"),I.zoomedHd.addEventListener("click",m),document.body.appendChild(I.zoomedHd),n()}))}else n()}}}))},m=function(){return new r((function(e){if(!w&&I.original){w=!0,document.body.classList.remove("medium-zoom--opened"),I.zoomed.style.transform="",I.zoomedHd&&(I.zoomedHd.style.transform=""),I.template&&(I.template.style.transition="opacity 150ms",I.template.style.opacity=0),I.original.dispatchEvent(ws("medium-zoom:close",{detail:{zoom:j}})),I.zoomed.addEventListener("transitionend",(function t(){I.original.classList.remove("medium-zoom-image--hidden"),document.body.removeChild(I.zoomed),I.zoomedHd&&document.body.removeChild(I.zoomedHd),document.body.removeChild(q),I.zoomed.classList.remove("medium-zoom-image--opened"),I.template&&document.body.removeChild(I.template),w=!1,I.zoomed.removeEventListener("transitionend",t),I.original.dispatchEvent(ws("medium-zoom:closed",{detail:{zoom:j}})),I.original=null,I.zoomed=null,I.zoomedHd=null,I.template=null,e(j)}))}else e(j)}))},g=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e.target;return I.original?m():h({target:t})},f=function(){return T},y=function(){return b},v=function(){return I.original},b=[],k=[],w=!1,x=0,T=n,I={original:null,zoomed:null,zoomedHd:null,template:null};"[object Object]"===Object.prototype.toString.call(t)?T=t:(t||"string"==typeof t)&&c(t),T=ms({margin:0,background:"#fff",scrollOffset:40,container:null,template:null},T);var q=bs(T.background);document.addEventListener("click",a),document.addEventListener("keyup",i),document.addEventListener("scroll",o),window.addEventListener("resize",m);var j={open:h,close:m,toggle:g,update:s,clone:l,attach:c,detach:u,on:d,off:p,getOptions:f,getImages:y,getZoomedImage:v};return j},Ts=".theme-default-content img",Is=JSON.parse("{}"),qs=Number("500"),js=function(){function e(){ds(this,e),this.instance=null}return hs(e,[{key:"update",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:Ts;"undefined"!=typeof window&&(null===this.instance?this.instance=xs(e,Is):(this.instance.detach(),this.instance.attach(e)))}},{key:"updateDelay",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:Ts,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:qs;setTimeout((function(){return e.update(t)}),n)}}]),e}(),zs=(n(314),{watch:{"$page.path":function(){void 0!==this.$vuepress.mediumZoom&&this.$vuepress.mediumZoom.updateDelay()}},mounted:function(){this.$vuepress.mediumZoom=new js,this.$vuepress.mediumZoom.updateDelay()}}),Es=n(128),_s=(n(202),{props:{parent:Object,code:String,options:{align:String,color:String,backgroundTransition:Boolean,backgroundColor:String,successText:String,staticIcon:Boolean}},data:function(){return{success:!1,originalBackground:null,originalTransition:null}},computed:{alignStyle:function(){var e={};return e[this.options.align]="7.5px",e},iconClass:function(){return this.options.staticIcon?"":"hover"}},mounted:function(){this.originalTransition=this.parent.style.transition,this.originalBackground=this.parent.style.background},beforeDestroy:function(){this.parent.style.transition=this.originalTransition,this.parent.style.background=this.originalBackground},methods:{hexToRgb:function(e){var t=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(e);return t?{r:parseInt(t[1],16),g:parseInt(t[2],16),b:parseInt(t[3],16)}:null},copyToClipboard:function(e){var t=this;if(navigator.clipboard)navigator.clipboard.writeText(this.code).then((function(){t.setSuccessTransitions()}),(function(){}));else{var n=document.createElement("textarea");document.body.appendChild(n),n.value=this.code,n.select(),document.execCommand("Copy"),n.remove(),this.setSuccessTransitions()}},setSuccessTransitions:function(){var e=this;if(clearTimeout(this.successTimeout),this.options.backgroundTransition){this.parent.style.transition="background 350ms";var t=this.hexToRgb(this.options.backgroundColor);this.parent.style.background="rgba(".concat(t.r,", ").concat(t.g,", ").concat(t.b,", 0.1)")}this.success=!0,this.successTimeout=setTimeout((function(){e.options.backgroundTransition&&(e.parent.style.background=e.originalBackground,e.parent.style.transition=e.originalTransition),e.success=!1}),500)}}}),Ss=(n(318),n(9)),Ds=Object(Ss.a)(_s,(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"code-copy"},[n("svg",{class:e.iconClass,style:e.alignStyle,attrs:{xmlns:"http://www.w3.org/2000/svg",width:"24",height:"24",viewBox:"0 0 24 24"},on:{click:e.copyToClipboard}},[n("path",{attrs:{fill:"none",d:"M0 0h24v24H0z"}}),e._v(" "),n("path",{attrs:{fill:e.options.color,d:"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm-1 4l6 6v10c0 1.1-.9 2-2 2H7.99C6.89 23 6 22.1 6 21l.01-14c0-1.1.89-2 1.99-2h7zm-1 7h5.5L14 6.5V12z"}})]),e._v(" "),n("span",{class:e.success?"success":"",style:e.alignStyle},[e._v("\n        "+e._s(e.options.successText)+"\n    ")])])}),[],!1,null,"49140617",null).exports,Cs=(n(319),[Qi,as,ss,us,zs,{updated:function(){this.update()},methods:{update:function(){setTimeout((function(){document.querySelectorAll('div[class*="language-"] pre').forEach((function(e){if(!e.classList.contains("code-copy-added")){var t=new(Ra.extend(Ds));t.options=Object(Es.a)({},{align:"bottom",color:"#27b1ff",backgroundTransition:!0,backgroundColor:"#0075b8",successText:"Copied!",staticIcon:!1}),t.code=e.innerText,t.parent=e,t.$mount(),e.classList.add("code-copy-added"),e.appendChild(t.$el)}}))}),100)}}}]),Rs={name:"GlobalLayout",computed:{layout:function(){var e=this.getLayout();return Vi("layout",e),Ra.component(e)}},methods:{getLayout:function(){if(this.$page.path){var e=this.$page.frontmatter.layout;return e&&(this.$vuepress.getLayoutAsyncComponent(e)||this.$vuepress.getVueComponent(e))?e:"Layout"}return"NotFound"}}},As=Object(Ss.a)(Rs,(function(){var e=this.$createElement;return(this._self._c||e)(this.layout,{tag:"component"})}),[],!1,null,null,null).exports;!function(e,t,n){var r;switch(t){case"components":e[t]||(e[t]={}),Object.assign(e[t],n);break;case"mixins":e[t]||(e[t]=[]),(r=e[t]).push.apply(r,Object(zi.a)(n));break;default:throw new Error("Unknown option name.")}}(As,"mixins",Cs);var Ps=[{name:"v-3140ed9c",path:"/",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-3140ed9c").then(n)}},{path:"/index.html",redirect:"/"},{name:"v-1af8f4dc",path:"/blogs/",component:As,beforeEnter:function(e,t,n){Gi("BlogsList","v-1af8f4dc").then(n)}},{path:"/blogs/index.html",redirect:"/blogs/"},{name:"v-24306408",path:"/docs/",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-24306408").then(n)}},{path:"/docs/index.html",redirect:"/docs/"},{name:"v-04b425b0",path:"/docs/administrator-guide/",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-04b425b0").then(n)}},{path:"/docs/administrator-guide/index.html",redirect:"/docs/administrator-guide/"},{name:"v-c4be06f0",path:"/docs/administrator-guide/configuration/",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-c4be06f0").then(n)}},{path:"/docs/administrator-guide/configuration/index.html",redirect:"/docs/administrator-guide/configuration/"},{name:"v-6e805448",path:"/docs/administrator-guide/configuration/elasticsearch/",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-6e805448").then(n)}},{path:"/docs/administrator-guide/configuration/elasticsearch/index.html",redirect:"/docs/administrator-guide/configuration/elasticsearch/"},{name:"v-67c3e868",path:"/docs/administrator-guide/configuration/kafka/",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-67c3e868").then(n)}},{path:"/docs/administrator-guide/configuration/kafka/index.html",redirect:"/docs/administrator-guide/configuration/kafka/"},{name:"v-3ef378d0",path:"/docs/administrator-guide/configuration/others/",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-3ef378d0").then(n)}},{path:"/docs/administrator-guide/configuration/others/index.html",redirect:"/docs/administrator-guide/configuration/others/"},{name:"v-636e3ee8",path:"/docs/administrator-guide/configuration/micronaut/",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-636e3ee8").then(n)}},{path:"/docs/administrator-guide/configuration/micronaut/index.html",redirect:"/docs/administrator-guide/configuration/micronaut/"},{name:"v-f99b39f0",path:"/docs/administrator-guide/configuration/storage/",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-f99b39f0").then(n)}},{path:"/docs/administrator-guide/configuration/storage/index.html",redirect:"/docs/administrator-guide/configuration/storage/"},{name:"v-6842f008",path:"/docs/administrator-guide/deployment/docker/",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-6842f008").then(n)}},{path:"/docs/administrator-guide/deployment/docker/index.html",redirect:"/docs/administrator-guide/deployment/docker/"},{name:"v-55acd5fe",path:"/docs/administrator-guide/deployment/",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-55acd5fe").then(n)}},{path:"/docs/administrator-guide/deployment/index.html",redirect:"/docs/administrator-guide/deployment/"},{name:"v-7854a970",path:"/docs/administrator-guide/deployment/kubernetes/",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-7854a970").then(n)}},{path:"/docs/administrator-guide/deployment/kubernetes/index.html",redirect:"/docs/administrator-guide/deployment/kubernetes/"},{name:"v-026cac48",path:"/docs/administrator-guide/deployment/manual/",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-026cac48").then(n)}},{path:"/docs/administrator-guide/deployment/manual/index.html",redirect:"/docs/administrator-guide/deployment/manual/"},{name:"v-db882e10",path:"/docs/administrator-guide/monitoring/",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-db882e10").then(n)}},{path:"/docs/administrator-guide/monitoring/index.html",redirect:"/docs/administrator-guide/monitoring/"},{name:"v-be84a670",path:"/docs/architecture/",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-be84a670").then(n)}},{path:"/docs/architecture/index.html",redirect:"/docs/architecture/"},{name:"v-12b44ec8",path:"/docs/administrator-guide/servers/",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-12b44ec8").then(n)}},{path:"/docs/administrator-guide/servers/index.html",redirect:"/docs/administrator-guide/servers/"},{name:"v-11cc6b58",path:"/docs/concepts/",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-11cc6b58").then(n)}},{path:"/docs/concepts/index.html",redirect:"/docs/concepts/"},{name:"v-a42a4c0e",path:"/docs/concepts/executions.html",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-a42a4c0e").then(n)}},{name:"v-631e077a",path:"/docs/concepts/flows.html",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-631e077a").then(n)}},{name:"v-477f7948",path:"/docs/developer-guide/",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-477f7948").then(n)}},{path:"/docs/developer-guide/index.html",redirect:"/docs/developer-guide/"},{name:"v-587c915c",path:"/docs/developer-guide/conditions/",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-587c915c").then(n)}},{path:"/docs/developer-guide/conditions/index.html",redirect:"/docs/developer-guide/conditions/"},{name:"v-550d8c48",path:"/docs/developer-guide/errors-handling/",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-550d8c48").then(n)}},{path:"/docs/developer-guide/errors-handling/index.html",redirect:"/docs/developer-guide/errors-handling/"},{name:"v-5a7b3ee8",path:"/docs/developer-guide/documentation/",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-5a7b3ee8").then(n)}},{path:"/docs/developer-guide/documentation/index.html",redirect:"/docs/developer-guide/documentation/"},{name:"v-8488a8b4",path:"/docs/developer-guide/flow/",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-8488a8b4").then(n)}},{path:"/docs/developer-guide/flow/index.html",redirect:"/docs/developer-guide/flow/"},{name:"v-2a1991f2",path:"/docs/developer-guide/flowable/",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-2a1991f2").then(n)}},{path:"/docs/developer-guide/flowable/index.html",redirect:"/docs/developer-guide/flowable/"},{name:"v-7db39c08",path:"/docs/developer-guide/helpers/",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-7db39c08").then(n)}},{path:"/docs/developer-guide/helpers/index.html",redirect:"/docs/developer-guide/helpers/"},{name:"v-019a6270",path:"/docs/developer-guide/inputs/",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-019a6270").then(n)}},{path:"/docs/developer-guide/inputs/index.html",redirect:"/docs/developer-guide/inputs/"},{name:"v-a824f470",path:"/docs/developer-guide/listeners/",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-a824f470").then(n)}},{path:"/docs/developer-guide/listeners/index.html",redirect:"/docs/developer-guide/listeners/"},{name:"v-92b626b0",path:"/docs/developer-guide/outputs/",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-92b626b0").then(n)}},{path:"/docs/developer-guide/outputs/index.html",redirect:"/docs/developer-guide/outputs/"},{name:"v-08c54868",path:"/docs/developer-guide/plugins/",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-08c54868").then(n)}},{path:"/docs/developer-guide/plugins/index.html",redirect:"/docs/developer-guide/plugins/"},{name:"v-7e6b41b0",path:"/docs/developer-guide/retries/",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-7e6b41b0").then(n)}},{path:"/docs/developer-guide/retries/index.html",redirect:"/docs/developer-guide/retries/"},{name:"v-2b85cc88",path:"/docs/developer-guide/templates/",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-2b85cc88").then(n)}},{path:"/docs/developer-guide/templates/index.html",redirect:"/docs/developer-guide/templates/"},{name:"v-801f5ac2",path:"/docs/developer-guide/triggers/flow.html",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-801f5ac2").then(n)}},{name:"v-084d894c",path:"/docs/developer-guide/triggers/",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-084d894c").then(n)}},{path:"/docs/developer-guide/triggers/index.html",redirect:"/docs/developer-guide/triggers/"},{name:"v-4a03194d",path:"/docs/developer-guide/triggers/schedule.html",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-4a03194d").then(n)}},{name:"v-472d66c8",path:"/docs/developer-guide/variables/",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-472d66c8").then(n)}},{path:"/docs/developer-guide/variables/index.html",redirect:"/docs/developer-guide/variables/"},{name:"v-64927783",path:"/docs/developer-guide/variables/boolean.html",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-64927783").then(n)}},{name:"v-6ae2b2a3",path:"/docs/developer-guide/variables/date.html",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-6ae2b2a3").then(n)}},{name:"v-7aff5bba",path:"/docs/developer-guide/variables/iterations.html",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-7aff5bba").then(n)}},{name:"v-cdabe47a",path:"/docs/developer-guide/variables/number.html",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-cdabe47a").then(n)}},{name:"v-b253103a",path:"/docs/developer-guide/variables/json.html",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-b253103a").then(n)}},{name:"v-65ccacc3",path:"/docs/developer-guide/variables/string.html",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-65ccacc3").then(n)}},{name:"v-d036673a",path:"/docs/developer-guide/variables/vars.html",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-d036673a").then(n)}},{name:"v-787eb528",path:"/docs/getting-started/",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-787eb528").then(n)}},{path:"/docs/getting-started/index.html",redirect:"/docs/getting-started/"},{name:"v-4e9ad7a0",path:"/docs/plugin-developer-guide/",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-4e9ad7a0").then(n)}},{path:"/docs/plugin-developer-guide/index.html",redirect:"/docs/plugin-developer-guide/"},{name:"v-af19e69c",path:"/docs/plugin-developer-guide/build/",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-af19e69c").then(n)}},{path:"/docs/plugin-developer-guide/build/index.html",redirect:"/docs/plugin-developer-guide/build/"},{name:"v-e5195c30",path:"/docs/plugin-developer-guide/conditions/",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-e5195c30").then(n)}},{path:"/docs/plugin-developer-guide/conditions/index.html",redirect:"/docs/plugin-developer-guide/conditions/"},{name:"v-74d8f83a",path:"/docs/plugin-developer-guide/flowable-task/",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-74d8f83a").then(n)}},{path:"/docs/plugin-developer-guide/flowable-task/index.html",redirect:"/docs/plugin-developer-guide/flowable-task/"},{name:"v-51cba32a",path:"/docs/plugin-developer-guide/outputs/",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-51cba32a").then(n)}},{path:"/docs/plugin-developer-guide/outputs/index.html",redirect:"/docs/plugin-developer-guide/outputs/"},{name:"v-e228dff0",path:"/docs/plugin-developer-guide/gradle/",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-e228dff0").then(n)}},{path:"/docs/plugin-developer-guide/gradle/index.html",redirect:"/docs/plugin-developer-guide/gradle/"},{name:"v-c38cdba0",path:"/docs/plugin-developer-guide/publish/",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-c38cdba0").then(n)}},{path:"/docs/plugin-developer-guide/publish/index.html",redirect:"/docs/plugin-developer-guide/publish/"},{name:"v-2e06cf88",path:"/docs/plugin-developer-guide/triggers/",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-2e06cf88").then(n)}},{path:"/docs/plugin-developer-guide/triggers/index.html",redirect:"/docs/plugin-developer-guide/triggers/"},{name:"v-528bedd8",path:"/docs/plugin-developer-guide/unit-test/",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-528bedd8").then(n)}},{path:"/docs/plugin-developer-guide/unit-test/index.html",redirect:"/docs/plugin-developer-guide/unit-test/"},{name:"v-209f3a3c",path:"/docs/user-interface-guide/",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-209f3a3c").then(n)}},{path:"/docs/user-interface-guide/index.html",redirect:"/docs/user-interface-guide/"},{name:"v-8c82ad54",path:"/plugins/",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-8c82ad54").then(n)}},{path:"/plugins/index.html",redirect:"/plugins/"},{name:"v-cb94d530",path:"/plugins/core/",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-cb94d530").then(n)}},{path:"/plugins/core/index.html",redirect:"/plugins/core/"},{name:"v-887ced7e",path:"/plugins/core/conditions/org.kestra.core.models.conditions.types.ExecutionFlowCondition.html",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-887ced7e").then(n)}},{name:"v-71cae13a",path:"/plugins/core/conditions/org.kestra.core.models.conditions.types.ExecutionNamespaceCondition.html",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-71cae13a").then(n)}},{name:"v-692642c3",path:"/plugins/core/conditions/org.kestra.core.models.conditions.types.FlowCondition.html",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-692642c3").then(n)}},{name:"v-6f20d009",path:"/plugins/core/conditions/org.kestra.core.models.conditions.types.ExecutionStatusCondition.html",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-6f20d009").then(n)}},{name:"v-1b5304cf",path:"/plugins/core/conditions/org.kestra.core.models.conditions.types.FlowNamespaceCondition.html",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-1b5304cf").then(n)}},{name:"v-4accb5fa",path:"/plugins/core/conditions/org.kestra.core.models.conditions.types.VariableCondition.html",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-4accb5fa").then(n)}},{name:"v-0ca17f3a",path:"/plugins/core/conditions/org.kestra.core.models.listeners.types.ExecutionStatusCondition.html",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-0ca17f3a").then(n)}},{name:"v-473550c3",path:"/plugins/core/tasks/debugs/org.kestra.core.tasks.debugs.Echo.html",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-473550c3").then(n)}},{name:"v-42fac8a3",path:"/plugins/core/tasks/debugs/org.kestra.core.tasks.debugs.Return.html",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-42fac8a3").then(n)}},{name:"v-5337ef7a",path:"/plugins/core/tasks/flows/org.kestra.core.tasks.flows.AllowFailure.html",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-5337ef7a").then(n)}},{name:"v-a00a283a",path:"/plugins/core/tasks/flows/org.kestra.core.tasks.flows.EachParallel.html",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-a00a283a").then(n)}},{name:"v-1ac7383a",path:"/plugins/core/tasks/flows/org.kestra.core.tasks.flows.EachSequential.html",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-1ac7383a").then(n)}},{name:"v-63747bba",path:"/plugins/core/tasks/flows/org.kestra.core.tasks.flows.Flow.html",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-63747bba").then(n)}},{name:"v-b4935bfa",path:"/plugins/core/tasks/flows/org.kestra.core.tasks.flows.Parallel.html",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-b4935bfa").then(n)}},{name:"v-35363b7a",path:"/plugins/core/tasks/flows/org.kestra.core.tasks.flows.Sequential.html",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-35363b7a").then(n)}},{name:"v-7fe967a3",path:"/plugins/core/tasks/flows/org.kestra.core.tasks.flows.Template.html",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-7fe967a3").then(n)}},{name:"v-73b9fb3a",path:"/plugins/core/tasks/flows/org.kestra.core.tasks.flows.Switch.html",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-73b9fb3a").then(n)}},{name:"v-463aa523",path:"/plugins/core/tasks/scripts/org.kestra.core.tasks.scripts.Bash.html",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-463aa523").then(n)}},{name:"v-c59a313a",path:"/plugins/core/tasks/scripts/org.kestra.core.tasks.scripts.Node.html",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-c59a313a").then(n)}},{name:"v-76e169a3",path:"/plugins/core/tasks/scripts/org.kestra.core.tasks.scripts.Python.html",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-76e169a3").then(n)}},{name:"v-79a66723",path:"/plugins/core/tasks/storages/org.kestra.core.tasks.storages.Concat.html",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-79a66723").then(n)}},{name:"v-44dca4c3",path:"/plugins/core/tasks/storages/org.kestra.core.tasks.storages.Delete.html",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-44dca4c3").then(n)}},{name:"v-1172039b",path:"/plugins/core/triggers/org.kestra.core.models.triggers.types.Flow.html",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-1172039b").then(n)}},{name:"v-471db309",path:"/plugins/core/triggers/org.kestra.core.models.triggers.types.Schedule.html",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-471db309").then(n)}},{name:"v-0b14c0b0",path:"/plugins/task-aws/",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-0b14c0b0").then(n)}},{path:"/plugins/task-aws/index.html",redirect:"/plugins/task-aws/"},{name:"v-2a294a03",path:"/plugins/task-aws/tasks/s3/org.kestra.task.aws.s3.CreateBucket.html",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-2a294a03").then(n)}},{name:"v-87b63d3a",path:"/plugins/task-aws/tasks/s3/org.kestra.task.aws.s3.Delete.html",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-87b63d3a").then(n)}},{name:"v-56e82843",path:"/plugins/task-aws/tasks/s3/org.kestra.task.aws.s3.Download.html",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-56e82843").then(n)}},{name:"v-6ba611ba",path:"/plugins/task-aws/tasks/s3/org.kestra.task.aws.s3.Upload.html",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-6ba611ba").then(n)}},{name:"v-60b891e2",path:"/plugins/task-crypto/",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-60b891e2").then(n)}},{path:"/plugins/task-crypto/index.html",redirect:"/plugins/task-crypto/"},{name:"v-1bc88783",path:"/plugins/task-crypto/tasks/openpgp/org.kestra.task.crypto.openpgp.Decrypt.html",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-1bc88783").then(n)}},{name:"v-b6c1b05a",path:"/plugins/task-crypto/tasks/openpgp/org.kestra.task.crypto.openpgp.Encrypt.html",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-b6c1b05a").then(n)}},{name:"v-2300abf0",path:"/plugins/task-gcp/",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-2300abf0").then(n)}},{path:"/plugins/task-gcp/index.html",redirect:"/plugins/task-gcp/"},{name:"v-39894003",path:"/plugins/task-gcp/tasks/auth/org.kestra.task.gcp.auth.OauthAccessToken.html",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-39894003").then(n)}},{name:"v-495a34ed",path:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.CreateDataset.html",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-495a34ed").then(n)}},{name:"v-bcd429ea",path:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.DeleteDataset.html",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-bcd429ea").then(n)}},{name:"v-2d12e13a",path:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.ExtractToGcs.html",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-2d12e13a").then(n)}},{name:"v-6ca79c83",path:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.Load.html",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-6ca79c83").then(n)}},{name:"v-5fe87717",path:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.LoadFromGcs.html",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-5fe87717").then(n)}},{name:"v-8568b3d6",path:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.Query.html",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-8568b3d6").then(n)}},{name:"v-4189dac7",path:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.UpdateDataset.html",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-4189dac7").then(n)}},{name:"v-1a7c016b",path:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.TableMetadata.html",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-1a7c016b").then(n)}},{name:"v-3f13b63a",path:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.Copy.html",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-3f13b63a").then(n)}},{name:"v-02718283",path:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.CreateBucket.html",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-02718283").then(n)}},{name:"v-780273ba",path:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.Delete.html",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-780273ba").then(n)}},{name:"v-6a9eb8e3",path:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.DeleteBucket.html",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-6a9eb8e3").then(n)}},{name:"v-23af7da3",path:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.UpdateBucket.html",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-23af7da3").then(n)}},{name:"v-50e7ae83",path:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.List.html",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-50e7ae83").then(n)}},{name:"v-b51bc33a",path:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.Upload.html",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-b51bc33a").then(n)}},{name:"v-3f3b5722",path:"/plugins/task-gcp/tasks/gke/org.kestra.task.gcp.gke.ClusterMetadata.html",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-3f3b5722").then(n)}},{name:"v-625fbfba",path:"/plugins/task-gcp/triggers/gcs/org.kestra.task.gcp.gcs.Trigger.html",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-625fbfba").then(n)}},{name:"v-3812bec4",path:"/plugins/task-jdbc-mysql/",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-3812bec4").then(n)}},{path:"/plugins/task-jdbc-mysql/index.html",redirect:"/plugins/task-jdbc-mysql/"},{name:"v-a5890592",path:"/plugins/task-jdbc-mysql/tasks/mysql/org.kestra.task.jdbc.mysql.Query.html",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-a5890592").then(n)}},{name:"v-034126a8",path:"/plugins/task-jdbc-postgres/",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-034126a8").then(n)}},{path:"/plugins/task-jdbc-postgres/index.html",redirect:"/plugins/task-jdbc-postgres/"},{name:"v-1342f403",path:"/plugins/task-jdbc-postgres/tasks/postgresql/org.kestra.task.jdbc.postgresql.Query.html",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-1342f403").then(n)}},{name:"v-3e719c50",path:"/plugins/task-kubernetes/",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-3e719c50").then(n)}},{path:"/plugins/task-kubernetes/index.html",redirect:"/plugins/task-kubernetes/"},{name:"v-20aa16f0",path:"/plugins/task-notifications/",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-20aa16f0").then(n)}},{path:"/plugins/task-notifications/index.html",redirect:"/plugins/task-notifications/"},{name:"v-8b587e3a",path:"/plugins/task-notifications/tasks/mail/org.kestra.task.notifications.mail.MailSend.html",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-8b587e3a").then(n)}},{name:"v-c55cb926",path:"/plugins/task-kubernetes/tasks/org.kestra.task.kubernetes.JobCreate.html",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-c55cb926").then(n)}},{name:"v-c96f8dba",path:"/plugins/task-notifications/tasks/mail/org.kestra.task.notifications.mail.MailExecution.html",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-c96f8dba").then(n)}},{name:"v-a838197a",path:"/plugins/task-notifications/tasks/slack/org.kestra.task.notifications.slack.SlackExecution.html",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-a838197a").then(n)}},{name:"v-3eef13ba",path:"/plugins/task-notifications/tasks/slack/org.kestra.task.notifications.slack.SlackIncomingWebhook.html",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-3eef13ba").then(n)}},{name:"v-01024800",path:"/plugins/task-serdes/",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-01024800").then(n)}},{path:"/plugins/task-serdes/index.html",redirect:"/plugins/task-serdes/"},{name:"v-69d470a3",path:"/plugins/task-serdes/tasks/avro/org.kestra.task.serdes.avro.AvroWriter.html",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-69d470a3").then(n)}},{name:"v-584500cb",path:"/plugins/task-serdes/tasks/csv/org.kestra.task.serdes.csv.CsvReader.html",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-584500cb").then(n)}},{name:"v-39c4896b",path:"/plugins/task-serdes/tasks/csv/org.kestra.task.serdes.csv.CsvWriter.html",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-39c4896b").then(n)}},{name:"v-7af6bb63",path:"/plugins/task-serdes/tasks/json/org.kestra.task.serdes.json.JsonReader.html",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-7af6bb63").then(n)}},{name:"v-51c6d563",path:"/plugins/task-serdes/tasks/json/org.kestra.task.serdes.json.JsonWriter.html",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-51c6d563").then(n)}},{name:"v-097684fa",path:"/blogs/2020-12-07-airflow-bad-ugly.html",component:As,beforeEnter:function(e,t,n){Gi("BlogsPost","v-097684fa").then(n)}},{name:"v-5cb2b138",path:"/docs/plugin-developer-guide/runnable-task/",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-5cb2b138").then(n)}},{path:"/docs/plugin-developer-guide/runnable-task/index.html",redirect:"/docs/plugin-developer-guide/runnable-task/"},{name:"v-28b0bb5a",path:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.Downloads.html",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-28b0bb5a").then(n)}},{name:"v-56588943",path:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.Download.html",component:As,beforeEnter:function(e,t,n){Gi("Layout","v-56588943").then(n)}},{path:"*",component:As}],Os={title:"Kestra",description:"",base:"/",headTags:[],pages:[{title:"Kestra, The modern, scalable orchestrator & scheduler open source platform",frontmatter:{title:"Kestra, The modern, scalable orchestrator & scheduler open source platform",description:"The modern, scalable orchestrator & scheduler open source platform",pageClass:"landing",home:!0,heroImage:"logo.svg",heroText:"The modern workflow management platform",tagline:"Real time, usable and scalable task processing.",actionText:"Go to documentation →",actionLink:"/docs/",sidebar:!1,meta:[{property:"article:modified_time",content:"2020-11-14T21:58:35.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Kestra, The modern, scalable orchestrator & scheduler open source platform"},{property:"og:description",content:"The modern, scalable orchestrator & scheduler open source platform | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/"},{name:"twitter:title",content:"Kestra, The modern, scalable orchestrator & scheduler open source platform"},{name:"twitter:description",content:"The modern, scalable orchestrator & scheduler open source platform | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"The modern, scalable orchestrator & scheduler open source platform | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/",relativePath:"index.md",key:"v-3140ed9c",path:"/",lastUpdated:"11/14/2020, 9:58:35 PM",headersStr:null,content:"",normalizedContent:"",charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"Blogs",frontmatter:{title:"Blogs",layout:"BlogsList",meta:[{property:"article:modified_time",content:"2020-12-03T20:59:28.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Blogs"},{property:"og:description",content:"Blogs | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"article"},{property:"og:url",content:"/blogs/"},{name:"twitter:title",content:"Blogs"},{name:"twitter:description",content:"Blogs | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/blogs/"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Blogs | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/blogs/",relativePath:"blogs/index.md",key:"v-1af8f4dc",path:"/blogs/",lastUpdated:"12/3/2020, 8:59:28 PM",headersStr:null,content:"",normalizedContent:"",charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"What’s Kestra?",frontmatter:{order:0,meta:[{property:"article:modified_time",content:"2020-11-23T20:57:24.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"What’s Kestra?"},{property:"og:description",content:"What’s Kestra? | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/docs/"},{name:"twitter:title",content:"What’s Kestra?"},{name:"twitter:description",content:"What’s Kestra? | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/docs/"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"What’s Kestra? | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/docs/",relativePath:"docs/README.md",key:"v-24306408",path:"/docs/",headers:[{level:2,title:"Principles",slug:"principles",normalizedTitle:"principles",charIndex:446},{level:2,title:"Usages",slug:"usages",normalizedTitle:"usages",charIndex:1197}],lastUpdated:"11/23/2020, 8:57:24 PM",headersStr:"Principles Usages",content:"# What’s Kestra?\nKestra is an orchestration & scheduler platform that helps you to build, run, schedule, and monitor complex pipelines.\n\n\n\nYou just need to develop some flow in yaml and let Kestra all the others complex things for you :\n\n * Deploying\n * Scaling\n * Monitoring\n * Handling errors\n * ...\n\n> You just need to define the flow with a simple succession of tasks, when or how the flow to launch, and follow the execution in realtime\n\n\n# Principles\n * Simple: Kestra workflow are defined as yaml, no code here, just a simple declarative syntax allowing even complex workflow.\n * Extensible: All the foundation of Kestra is built upon plugins, found one or build your own to fit your business needs.\n * Real time: Kestra is build thinking realtime, just create a flow, run it & see all the logs in realtime\n * Scalable: Kestra has started to enjoy infinite scale, build with top technology like Kafka & Elasticsearch, scale to millions of executions without the pain.\n * Cloud Native: Build with cloud in mind, with top cloud native technology and deploy everywhere in cloud or on premise.\n * Open source: Kestra is built with Apache 2 license, contribute on core or plugins as you can.\n\n# Usages\nKestra can be used as:\n\n * Data orchestrator: handle complex workflow of moving large dataset, transform it and load it (ETL or ELT).\n * Distributed crontab: schedule work on multiples machines and monitor all these process.\n * Events Driven workflow: react to external events like api call to get things done instantly.\n * ...\n\nNow Getting started and happy flows !",normalizedContent:"# what’s kestra?\nkestra is an orchestration & scheduler platform that helps you to build, run, schedule, and monitor complex pipelines.\n\n\n\nyou just need to develop some flow in yaml and let kestra all the others complex things for you :\n\n * deploying\n * scaling\n * monitoring\n * handling errors\n * ...\n\n> you just need to define the flow with a simple succession of tasks, when or how the flow to launch, and follow the execution in realtime\n\n\n# principles\n * simple: kestra workflow are defined as yaml, no code here, just a simple declarative syntax allowing even complex workflow.\n * extensible: all the foundation of kestra is built upon plugins, found one or build your own to fit your business needs.\n * real time: kestra is build thinking realtime, just create a flow, run it & see all the logs in realtime\n * scalable: kestra has started to enjoy infinite scale, build with top technology like kafka & elasticsearch, scale to millions of executions without the pain.\n * cloud native: build with cloud in mind, with top cloud native technology and deploy everywhere in cloud or on premise.\n * open source: kestra is built with apache 2 license, contribute on core or plugins as you can.\n\n# usages\nkestra can be used as:\n\n * data orchestrator: handle complex workflow of moving large dataset, transform it and load it (etl or elt).\n * distributed crontab: schedule work on multiples machines and monitor all these process.\n * events driven workflow: react to external events like api call to get things done instantly.\n * ...\n\nnow getting started and happy flows !",charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"Administrator Guide",frontmatter:{order:5,meta:[{property:"article:modified_time",content:"2020-11-09T20:39:04.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Administrator Guide"},{property:"og:description",content:"Administrator Guide | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/docs/administrator-guide/"},{name:"twitter:title",content:"Administrator Guide"},{name:"twitter:description",content:"Administrator Guide | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/docs/administrator-guide/"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Administrator Guide | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/docs/administrator-guide/",relativePath:"docs/administrator-guide/README.md",key:"v-04b425b0",path:"/docs/administrator-guide/",lastUpdated:"11/9/2020, 8:39:04 PM",headersStr:null,content:"# Administrator Guide\nHere, you will find the necessary information in order to deploy & configure your Kestra cluster.\n\nMore information :",normalizedContent:"# administrator guide\nhere, you will find the necessary information in order to deploy & configure your kestra cluster.\n\nmore information :",charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"Configuration",frontmatter:{order:3,meta:[{property:"article:modified_time",content:"2020-11-08T20:01:13.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Configuration"},{property:"og:description",content:"Configuration | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/docs/administrator-guide/configuration/"},{name:"twitter:title",content:"Configuration"},{name:"twitter:description",content:"Configuration | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/docs/administrator-guide/configuration/"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Configuration | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/docs/administrator-guide/configuration/",relativePath:"docs/administrator-guide/configuration/README.md",key:"v-c4be06f0",path:"/docs/administrator-guide/configuration/",headers:[{level:2,title:"Kestra configuration",slug:"kestra-configuration",normalizedTitle:"kestra configuration",charIndex:97},{level:3,title:"Kafka configuration",slug:"kafka-configuration",normalizedTitle:"kafka configuration",charIndex:202},{level:3,title:"ElasticSearch configuration",slug:"elasticsearch-configuration",normalizedTitle:"elasticsearch configuration",charIndex:372},{level:3,title:"Storage configuration",slug:"storage-configuration",normalizedTitle:"storage configuration",charIndex:584},{level:3,title:"Others Kestra configuration",slug:"others-kestra-configuration",normalizedTitle:"others kestra configuration",charIndex:912},{level:3,title:"Micronaut configuration",slug:"micronaut-configuration",normalizedTitle:"micronaut configuration",charIndex:990}],lastUpdated:"11/8/2020, 8:01:13 PM",headersStr:"Kestra configuration Kafka configuration ElasticSearch configuration Storage configuration Others Kestra configuration Micronaut configuration",content:"# Configuration\nKestra have a lot of configuration in orders to customize the way you use it.\n\n# Kestra configuration\nFirst things, you will need to configure the queue type and the repository type.\n\n# Kafka configuration\nTo enable Kafka Queue, we need add this to your configuration files:\n\nkestra:\n  queue:\n    type: kafka\n\n\nDetails about Kafka configuration is here\n\n# ElasticSearch configuration\nTo enable ElasticSearch Repository, we need add this to your configuration files:\n\nkestra:\n  repository:\n    type: elasticsearch\n\n\nDetails about ElasticSearch configuration is here\n\n# Storage configuration\nKestra support multiple storage, the default one a local storage (only for local testing)\nTo choose the storage type, you will need to add this to your configuration files and be sure to download the corresponding plugins.\n\nkestra:\n  storage:\n    type: gcs\n\n\nDetails about Storage configuration is here\n\n# Others Kestra configuration\nOthers Kestra configurations can be found here\n\n# Micronaut configuration\nSince Kestra is a Java app based on micronaut, you can configure to fit your need, more details here",normalizedContent:"# configuration\nkestra have a lot of configuration in orders to customize the way you use it.\n\n# kestra configuration\nfirst things, you will need to configure the queue type and the repository type.\n\n# kafka configuration\nto enable kafka queue, we need add this to your configuration files:\n\nkestra:\n  queue:\n    type: kafka\n\n\ndetails about kafka configuration is here\n\n# elasticsearch configuration\nto enable elasticsearch repository, we need add this to your configuration files:\n\nkestra:\n  repository:\n    type: elasticsearch\n\n\ndetails about elasticsearch configuration is here\n\n# storage configuration\nkestra support multiple storage, the default one a local storage (only for local testing)\nto choose the storage type, you will need to add this to your configuration files and be sure to download the corresponding plugins.\n\nkestra:\n  storage:\n    type: gcs\n\n\ndetails about storage configuration is here\n\n# others kestra configuration\nothers kestra configurations can be found here\n\n# micronaut configuration\nsince kestra is a java app based on micronaut, you can configure to fit your need, more details here",charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"ElasticSearch configuration",frontmatter:{order:2,meta:[{property:"article:modified_time",content:"2020-11-08T20:01:13.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"ElasticSearch configuration"},{property:"og:description",content:"ElasticSearch configuration | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/docs/administrator-guide/configuration/elasticsearch/"},{name:"twitter:title",content:"ElasticSearch configuration"},{name:"twitter:description",content:"ElasticSearch configuration | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/docs/administrator-guide/configuration/elasticsearch/"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"ElasticSearch configuration | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/docs/administrator-guide/configuration/elasticsearch/",relativePath:"docs/administrator-guide/configuration/elasticsearch/README.md",key:"v-6e805448",path:"/docs/administrator-guide/configuration/elasticsearch/",lastUpdated:"11/8/2020, 8:01:13 PM",headersStr:null,content:'# ElasticSearch configuration\nMost important configuration is to configure the way Kestra connect to ElasticSearch cluster.\n\nHere is a minimal configuration example :\n\nkestra:\n  elasticsearch:\n    client:\n      http-hosts: http://localhost:9200\n  repository:\n    type: elasticsearch\n\n\nHere is another example with a secure ElasticSearch cluster with basic auth\n\nkestra:\n  elasticsearch:\n    client:\n      http-hosts: "https://localhost:9200"\n      basic-auth:\n        username: "<your-user>"\n        password: "<your-password>"',normalizedContent:'# elasticsearch configuration\nmost important configuration is to configure the way kestra connect to elasticsearch cluster.\n\nhere is a minimal configuration example :\n\nkestra:\n  elasticsearch:\n    client:\n      http-hosts: http://localhost:9200\n  repository:\n    type: elasticsearch\n\n\nhere is another example with a secure elasticsearch cluster with basic auth\n\nkestra:\n  elasticsearch:\n    client:\n      http-hosts: "https://localhost:9200"\n      basic-auth:\n        username: "<your-user>"\n        password: "<your-password>"',charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"Kafka configuration",frontmatter:{order:1,meta:[{property:"article:modified_time",content:"2020-11-24T21:15:13.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Kafka configuration"},{property:"og:description",content:"Kafka configuration | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/docs/administrator-guide/configuration/kafka/"},{name:"twitter:title",content:"Kafka configuration"},{name:"twitter:description",content:"Kafka configuration | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/docs/administrator-guide/configuration/kafka/"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Kafka configuration | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/docs/administrator-guide/configuration/kafka/",relativePath:"docs/administrator-guide/configuration/kafka/README.md",key:"v-67c3e868",path:"/docs/administrator-guide/configuration/kafka/",headers:[{level:2,title:"kestra.kafka.client.properties",slug:"kestra-kafka-client-properties",normalizedTitle:"kestra.kafka.client.properties",charIndex:24},{level:2,title:"kestra.kafka.defaults.topic",slug:"kestra-kafka-defaults-topic",normalizedTitle:"kestra.kafka.defaults.topic",charIndex:1010},{level:2,title:"kestra.kafka.defaults.[consumer|producer|stream].properties",slug:"kestra-kafka-defaults-consumer-producer-stream-properties",normalizedTitle:"kestra.kafka.defaults.[consumer|producer|stream].properties",charIndex:1288},{level:2,title:"kestra.kafka.defaults.topics",slug:"kestra-kafka-defaults-topics",normalizedTitle:"kestra.kafka.defaults.topics",charIndex:2096},{level:2,title:"kestra.kafka.defaults.consumer-prefix",slug:"kestra-kafka-defaults-consumer-prefix",normalizedTitle:"kestra.kafka.defaults.consumer-prefix",charIndex:2487}],lastUpdated:"11/24/2020, 9:15:13 PM",headersStr:"kestra.kafka.client.properties kestra.kafka.defaults.topic kestra.kafka.defaults.[consumer|producer|stream].properties kestra.kafka.defaults.topics kestra.kafka.defaults.consumer-prefix",content:'# Kafka configuration\n# kestra.kafka.client.properties\nMost important configuration is to configure the way Kestra connect to Kafka cluster.\n\nHere is a minimal configuration example :\n\nkestra:\n  kafka:\n    client:\n      properties:\n        bootstrap.servers: "localhost:9092"\n  queue:\n    type: kafka\n\n\nHere is another example with a secure kafka cluster hosted by aiven:\n\nkestra:\n  kafka:\n    client:\n      properties:\n        bootstrap.servers: "your-host.aivencloud.com:12835"\n        security.protocol: "SSL"\n        ssl.endpoint.identification.algorithm: ""\n        ssl.key.password: "<your-password>"\n        ssl.keystore.location: "/etc/ssl/private/keystore.p12"\n        ssl.keystore.password: "<your-password>"\n        ssl.keystore.type: "PKCS12"\n        ssl.truststore.location: "/etc/ssl/private/truststore.jks"\n        ssl.truststore.password: "<your-password>"\n\n  queue:\n    type: kafka\n\n\nproperties is the standard java kafka client properties, more details can be found on Kafka Documentation\n\n# kestra.kafka.defaults.topic\nBy default, Kestra automatically create all the topics needed, you can change partition & replication factor of these topics :\n\n * kestra.kafka.defaults.topic.partitions: (default 16)\n * kestra.kafka.defaults.topic.replication-factor: (default 1)\n\n# kestra.kafka.defaults.[consumer|producer|stream].properties\nYou can change the default properties of Kafka client from Kestra. These allow you to change compression, max request, etc...\n\nHere is the default configuration :\n\nkestra:\n  kafka:\n    defaults:\n      consumer:\n        properties:\n          isolation.level: "read_committed"\n          auto.offset.reset: "earliest"\n          enable.auto.commit: "false"\n\n      producer:\n        properties:\n          acks: "all"\n          compression.type: "lz4"\n          max.request.size: "10485760"\n\n      stream:\n        properties:\n          processing.guarantee: "exactly_once"\n          replication.factor: "${kestra.kafka.defaults.topic.replication-factor}"\n          acks: "all"\n          compression.type: "lz4"\n          max.request.size: "10485760"\n\n\n# kestra.kafka.defaults.topics\nAll the topic used by Kestra are declared with default name & properties. You can change the default values:\n\n * kestra.kafka.defaults.topics.{{topic}}.name: Change the name of this topic.\n * kestra.kafka.defaults.topics.{{topic}}.properties: Change the default properties used during topic automatic creation.\n\nYou can see default configuration on this file\n\n# kestra.kafka.defaults.consumer-prefix\nThis configuration allow you to change the consumer-group prefix. By default, the prefix will be kestra.\n\nFor example, if you want to share a common Kafka cluster for the multiple instance of Kestra, just add another prefix like this :\n\nkestra:\n  kafka:\n    defaults:\n      consumer-prefix: "uat_kestra"',normalizedContent:'# kafka configuration\n# kestra.kafka.client.properties\nmost important configuration is to configure the way kestra connect to kafka cluster.\n\nhere is a minimal configuration example :\n\nkestra:\n  kafka:\n    client:\n      properties:\n        bootstrap.servers: "localhost:9092"\n  queue:\n    type: kafka\n\n\nhere is another example with a secure kafka cluster hosted by aiven:\n\nkestra:\n  kafka:\n    client:\n      properties:\n        bootstrap.servers: "your-host.aivencloud.com:12835"\n        security.protocol: "ssl"\n        ssl.endpoint.identification.algorithm: ""\n        ssl.key.password: "<your-password>"\n        ssl.keystore.location: "/etc/ssl/private/keystore.p12"\n        ssl.keystore.password: "<your-password>"\n        ssl.keystore.type: "pkcs12"\n        ssl.truststore.location: "/etc/ssl/private/truststore.jks"\n        ssl.truststore.password: "<your-password>"\n\n  queue:\n    type: kafka\n\n\nproperties is the standard java kafka client properties, more details can be found on kafka documentation\n\n# kestra.kafka.defaults.topic\nby default, kestra automatically create all the topics needed, you can change partition & replication factor of these topics :\n\n * kestra.kafka.defaults.topic.partitions: (default 16)\n * kestra.kafka.defaults.topic.replication-factor: (default 1)\n\n# kestra.kafka.defaults.[consumer|producer|stream].properties\nyou can change the default properties of kafka client from kestra. these allow you to change compression, max request, etc...\n\nhere is the default configuration :\n\nkestra:\n  kafka:\n    defaults:\n      consumer:\n        properties:\n          isolation.level: "read_committed"\n          auto.offset.reset: "earliest"\n          enable.auto.commit: "false"\n\n      producer:\n        properties:\n          acks: "all"\n          compression.type: "lz4"\n          max.request.size: "10485760"\n\n      stream:\n        properties:\n          processing.guarantee: "exactly_once"\n          replication.factor: "${kestra.kafka.defaults.topic.replication-factor}"\n          acks: "all"\n          compression.type: "lz4"\n          max.request.size: "10485760"\n\n\n# kestra.kafka.defaults.topics\nall the topic used by kestra are declared with default name & properties. you can change the default values:\n\n * kestra.kafka.defaults.topics.{{topic}}.name: change the name of this topic.\n * kestra.kafka.defaults.topics.{{topic}}.properties: change the default properties used during topic automatic creation.\n\nyou can see default configuration on this file\n\n# kestra.kafka.defaults.consumer-prefix\nthis configuration allow you to change the consumer-group prefix. by default, the prefix will be kestra.\n\nfor example, if you want to share a common kafka cluster for the multiple instance of kestra, just add another prefix like this :\n\nkestra:\n  kafka:\n    defaults:\n      consumer-prefix: "uat_kestra"',charsets:{cjk:!0},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"Others Kestra configuration",frontmatter:{order:4,meta:[{property:"article:modified_time",content:"2020-11-25T20:51:40.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Others Kestra configuration"},{property:"og:description",content:"Others Kestra configuration | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/docs/administrator-guide/configuration/others/"},{name:"twitter:title",content:"Others Kestra configuration"},{name:"twitter:description",content:"Others Kestra configuration | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/docs/administrator-guide/configuration/others/"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Others Kestra configuration | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/docs/administrator-guide/configuration/others/",relativePath:"docs/administrator-guide/configuration/others/README.md",key:"v-3ef378d0",path:"/docs/administrator-guide/configuration/others/",headers:[{level:2,title:"Plugins configuration",slug:"plugins-configuration",normalizedTitle:"plugins configuration",charIndex:32},{level:2,title:"Variables configuration",slug:"variables-configuration",normalizedTitle:"variables configuration",charIndex:502},{level:3,title:"kestra.variables.env-vars-prefix",slug:"kestra-variables-env-vars-prefix",normalizedTitle:"kestra.variables.env-vars-prefix",charIndex:528},{level:3,title:"kestra.variables.globals",slug:"kestra-variables-globals",normalizedTitle:"kestra.variables.globals",charIndex:850},{level:2,title:"Metrics configuration",slug:"metrics-configuration",normalizedTitle:"metrics configuration",charIndex:1206},{level:2,title:"Servers configuration",slug:"servers-configuration",normalizedTitle:"servers configuration",charIndex:1319},{level:3,title:"kestra.server.access-log: Access Log configuration",slug:"kestra-server-access-log-access-log-configuration",normalizedTitle:"kestra.server.access-log: access log configuration",charIndex:1343},{level:2,title:"JVM configuration",slug:"jvm-configuration",normalizedTitle:"jvm configuration",charIndex:2133},{level:3,title:"user.timezone: Timezone",slug:"user-timezone-timezone",normalizedTitle:"user.timezone: timezone",charIndex:2358}],lastUpdated:"11/25/2020, 8:51:40 PM",headersStr:"Plugins configuration Variables configuration kestra.variables.env-vars-prefix kestra.variables.globals Metrics configuration Servers configuration kestra.server.access-log: Access Log configuration JVM configuration user.timezone: Timezone",content:'# Others Kestra configuration\n# Plugins configuration\nConfiguration of maven repositories used for commande plugins install.\nDefault are necessary for kestra and plugins, but you can add your custom maven registries in order to download your own plugins with this command.\n\nkestra:\n  plugins:\n    repositories:\n      central:\n        url: https://repo.maven.apache.org/maven2/\n      jcenter:\n        url: https://jcenter.bintray.com/\n      kestra:\n        url: https://dl.bintray.com/kestra/maven\n\n\n\n# Variables configuration\n# kestra.variables.env-vars-prefix\nKestra provide a way to use environment variables in your flow.\nBy default, we only get environment variables that start with KESTRA_.\n\nThese variables will be accessible on flow with {{ env.your_env }}\n\nFor example env vars with name KESTRA_MY_ENV will be usable with {{ env.my_env }}\n\n# kestra.variables.globals\nYou can also provide from configuration files globals variables that will be accessible in all your flow.\nMostly it will be use for example to declare environnement on your instance, some global dataset, ...\n\nkestra:\n  variables:\n    globals: \n      env: dev\n\n\n\nThese variables will be accessible on flow with {{ globals.env }}\n\n# Metrics configuration\n * kestra.metrics.prefix: Change the prefix for all metrics for Kestra(default: kestra)\n\n# Servers configuration\n# kestra.server.access-log: Access Log configuration\n * kestra.server.access-log.enabled: Enabled access log from webserver (default true)\n * kestra.server.access-log.name: Logger name (default org.kestra.webserver.access)\n * kestra.server.access-log.format: Access log format (default [Date: {}] [Duration: {} ms] [Method: {}] [Url: {}] [Status: {}] [Length: {}] [Ip: {}] [Port: {}])\n * kestra.server.access-log.filters: list of regexp that will log, use .* to enable all (default - ".*\\\\[Url: /api/.*")\n\nHere is the default values:\n\nkestra:\n  server:\n    access-log:\n      enabled: true\n      name: org.kestra.webserver.access\n      format: "[Date: {}] [Duration: {} ms] [Method: {}] [Url: {}] [Status: {}] [Length: {}] [Ip: {}] [Port: {}]"\n      filters:\n        - ".*\\\\[Url: /api/.*"\n\n\n# JVM configuration\nAll JVM options can be passed as environment vars name JAVA_OPTS. You can use it to change all JVM options available like memory, encoding, ...\n\nexample:\n\nexport JAVA_OPTS="-Duser.timezone=Europe/Paris"\n\n\n# user.timezone: Timezone\nBy default, Kestra will handle all date with your system timezone. You can change the timezone with JVM options.\nChanging the timezone will affect mostly :\n\n * scheduler: by default, all schedule date is UTC, changing the java timezone will allow you to schedule flow in your timezone.\n * log: that will be displayed on your timezone.',normalizedContent:'# others kestra configuration\n# plugins configuration\nconfiguration of maven repositories used for commande plugins install.\ndefault are necessary for kestra and plugins, but you can add your custom maven registries in order to download your own plugins with this command.\n\nkestra:\n  plugins:\n    repositories:\n      central:\n        url: https://repo.maven.apache.org/maven2/\n      jcenter:\n        url: https://jcenter.bintray.com/\n      kestra:\n        url: https://dl.bintray.com/kestra/maven\n\n\n\n# variables configuration\n# kestra.variables.env-vars-prefix\nkestra provide a way to use environment variables in your flow.\nby default, we only get environment variables that start with kestra_.\n\nthese variables will be accessible on flow with {{ env.your_env }}\n\nfor example env vars with name kestra_my_env will be usable with {{ env.my_env }}\n\n# kestra.variables.globals\nyou can also provide from configuration files globals variables that will be accessible in all your flow.\nmostly it will be use for example to declare environnement on your instance, some global dataset, ...\n\nkestra:\n  variables:\n    globals: \n      env: dev\n\n\n\nthese variables will be accessible on flow with {{ globals.env }}\n\n# metrics configuration\n * kestra.metrics.prefix: change the prefix for all metrics for kestra(default: kestra)\n\n# servers configuration\n# kestra.server.access-log: access log configuration\n * kestra.server.access-log.enabled: enabled access log from webserver (default true)\n * kestra.server.access-log.name: logger name (default org.kestra.webserver.access)\n * kestra.server.access-log.format: access log format (default [date: {}] [duration: {} ms] [method: {}] [url: {}] [status: {}] [length: {}] [ip: {}] [port: {}])\n * kestra.server.access-log.filters: list of regexp that will log, use .* to enable all (default - ".*\\\\[url: /api/.*")\n\nhere is the default values:\n\nkestra:\n  server:\n    access-log:\n      enabled: true\n      name: org.kestra.webserver.access\n      format: "[date: {}] [duration: {} ms] [method: {}] [url: {}] [status: {}] [length: {}] [ip: {}] [port: {}]"\n      filters:\n        - ".*\\\\[url: /api/.*"\n\n\n# jvm configuration\nall jvm options can be passed as environment vars name java_opts. you can use it to change all jvm options available like memory, encoding, ...\n\nexample:\n\nexport java_opts="-duser.timezone=europe/paris"\n\n\n# user.timezone: timezone\nby default, kestra will handle all date with your system timezone. you can change the timezone with jvm options.\nchanging the timezone will affect mostly :\n\n * scheduler: by default, all schedule date is utc, changing the java timezone will allow you to schedule flow in your timezone.\n * log: that will be displayed on your timezone.',charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"Micronaut configuration",frontmatter:{order:4,meta:[{property:"article:modified_time",content:"2020-11-08T20:01:13.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Micronaut configuration"},{property:"og:description",content:"Micronaut configuration | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/docs/administrator-guide/configuration/micronaut/"},{name:"twitter:title",content:"Micronaut configuration"},{name:"twitter:description",content:"Micronaut configuration | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/docs/administrator-guide/configuration/micronaut/"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Micronaut configuration | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/docs/administrator-guide/configuration/micronaut/",relativePath:"docs/administrator-guide/configuration/micronaut/README.md",key:"v-636e3ee8",path:"/docs/administrator-guide/configuration/micronaut/",headers:[{level:2,title:"Configure log Level",slug:"configure-log-level",normalizedTitle:"configure log level",charIndex:296},{level:2,title:"Configure port and scheme",slug:"configure-port-and-scheme",normalizedTitle:"configure port and scheme",charIndex:511},{level:2,title:"Configure the timeout or max uploaded file size",slug:"configure-the-timeout-or-max-uploaded-file-size",normalizedTitle:"configure the timeout or max uploaded file size",charIndex:695},{level:2,title:"Changing base path",slug:"changing-base-path",normalizedTitle:"changing base path",charIndex:1041}],lastUpdated:"11/8/2020, 8:01:13 PM",headersStr:"Configure log Level Configure port and scheme Configure the timeout or max uploaded file size Changing base path",content:'# Micronaut configuration\nSince Kestra is a Java app base on micronaut, you can configure to fit your need.\nWe will not explain all the configuration values possible, there are available here\nbut we will provide some tips, and most useful to help you to configure micronaut to fit your need :\n\n# Configure log Level\nlogger:\n  levels:\n    org.kestra.runner: TRACE\n    org.elasticsearch.client: TRACE\n    org.elasticsearch.client.sniffer: TRACE\n    org.apache.kafka: DEBUG\n    io.netty.handler.logging: TRACE\n\n\n# Configure port and scheme\nmicronaut:\n  server:\n    port: 8086\n  ssl:\n    enabled: true\n    keyStore:\n      path: classpath:server.p12\n      password: mypassword\n      type: PKCS12\n\n\n# Configure the timeout or max uploaded file size\nA lot of configuration affect these, here is the default configuration:\n\nmicronaut:\n  server:\n    max-request-size: 10GB\n    multipart:\n      max-file-size: 10GB\n      disk: true\n    read-idle-timeout: 60m\n    write-idle-timeout: 60m\n    idle-timeout: 60m\n    netty:\n      max-chunk-size: 10MB\n\n\n# Changing base path\nIf behind a reverse proxy, change base path:\n\nmicronaut:\n  server:\n    context-path: "kestra-prd"',normalizedContent:'# micronaut configuration\nsince kestra is a java app base on micronaut, you can configure to fit your need.\nwe will not explain all the configuration values possible, there are available here\nbut we will provide some tips, and most useful to help you to configure micronaut to fit your need :\n\n# configure log level\nlogger:\n  levels:\n    org.kestra.runner: trace\n    org.elasticsearch.client: trace\n    org.elasticsearch.client.sniffer: trace\n    org.apache.kafka: debug\n    io.netty.handler.logging: trace\n\n\n# configure port and scheme\nmicronaut:\n  server:\n    port: 8086\n  ssl:\n    enabled: true\n    keystore:\n      path: classpath:server.p12\n      password: mypassword\n      type: pkcs12\n\n\n# configure the timeout or max uploaded file size\na lot of configuration affect these, here is the default configuration:\n\nmicronaut:\n  server:\n    max-request-size: 10gb\n    multipart:\n      max-file-size: 10gb\n      disk: true\n    read-idle-timeout: 60m\n    write-idle-timeout: 60m\n    idle-timeout: 60m\n    netty:\n      max-chunk-size: 10mb\n\n\n# changing base path\nif behind a reverse proxy, change base path:\n\nmicronaut:\n  server:\n    context-path: "kestra-prd"',charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"Storage configuration",frontmatter:{order:3,meta:[{property:"article:modified_time",content:"2020-11-08T20:01:13.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Storage configuration"},{property:"og:description",content:"Storage configuration | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/docs/administrator-guide/configuration/storage/"},{name:"twitter:title",content:"Storage configuration"},{name:"twitter:description",content:"Storage configuration | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/docs/administrator-guide/configuration/storage/"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Storage configuration | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/docs/administrator-guide/configuration/storage/",relativePath:"docs/administrator-guide/configuration/storage/README.md",key:"v-f99b39f0",path:"/docs/administrator-guide/configuration/storage/",headers:[{level:2,title:"GCS",slug:"gcs",normalizedTitle:"gcs",charIndex:216},{level:2,title:"Minio",slug:"minio",normalizedTitle:"minio",charIndex:256}],lastUpdated:"11/8/2020, 8:01:13 PM",headersStr:"GCS Minio",content:'# Storage configuration\nKestra need a internal storage in order to store file proceed (uploaded files & between tasks).\n\nThe default storage is Local storage not production ready\n\nAvailable storage are :\n\n * Storage GCS for Google Cloud Storage\n * Storage Minio compatible with AWS S3 and all others S3 like storage\n\n# GCS\nFor you need to be sure to have the GCS storage plugins installed, you can install it with Kestra command :\n./kestra plugins install org.kestra.storage.gcs:storage-gcs:LATEST, it will download the plugins jar on kestra plugins directory.\n\nAfter you need to enable the storage with this configuration:\n\n\nkestra:\n  storage:\n    type: gcs\n    gcs:\n      bucket: "<your-bucket-name>"\n\n\nKestra will use the default service account GCP service account, meaning that :\n\n * will use on GKE, the service account defined on the cluster\n * will use on GCE, the service account defined on the VM.\n * you can provide an environment variable GOOGLE_APPLICATION_CREDENTIALS with a path to a json GCP service account key.\n\nMore detail can be found here\n\n# Minio\nFor you need to be sure to have the Minio storage plugins installed, you can install it with Kestra command :\n./kestra plugins install org.kestra.storage.minio:storage-minio:LATEST, it will download the plugins jar on kestra plugins directory.\n\nAfter you need to enable the storage with this configuration:\n\n\nkestra:\n  storage:\n    type: minio\n    minio:\n      endpoint: "<your-endpoint>"\n      port: "<your-port>"\n      accessKey: "<your-accessKey>"\n      secretKey: "<your-secretKey>"\n      region: "<your-region>"\n      secure: "<your-secure>"\n      bucket: "<your-bucket>"',normalizedContent:'# storage configuration\nkestra need a internal storage in order to store file proceed (uploaded files & between tasks).\n\nthe default storage is local storage not production ready\n\navailable storage are :\n\n * storage gcs for google cloud storage\n * storage minio compatible with aws s3 and all others s3 like storage\n\n# gcs\nfor you need to be sure to have the gcs storage plugins installed, you can install it with kestra command :\n./kestra plugins install org.kestra.storage.gcs:storage-gcs:latest, it will download the plugins jar on kestra plugins directory.\n\nafter you need to enable the storage with this configuration:\n\n\nkestra:\n  storage:\n    type: gcs\n    gcs:\n      bucket: "<your-bucket-name>"\n\n\nkestra will use the default service account gcp service account, meaning that :\n\n * will use on gke, the service account defined on the cluster\n * will use on gce, the service account defined on the vm.\n * you can provide an environment variable google_application_credentials with a path to a json gcp service account key.\n\nmore detail can be found here\n\n# minio\nfor you need to be sure to have the minio storage plugins installed, you can install it with kestra command :\n./kestra plugins install org.kestra.storage.minio:storage-minio:latest, it will download the plugins jar on kestra plugins directory.\n\nafter you need to enable the storage with this configuration:\n\n\nkestra:\n  storage:\n    type: minio\n    minio:\n      endpoint: "<your-endpoint>"\n      port: "<your-port>"\n      accesskey: "<your-accesskey>"\n      secretkey: "<your-secretkey>"\n      region: "<your-region>"\n      secure: "<your-secure>"\n      bucket: "<your-bucket>"',charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"Deployment with Docker",frontmatter:{order:1,meta:[{property:"article:modified_time",content:"2020-11-21T15:14:25.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Deployment with Docker"},{property:"og:description",content:"Deployment with Docker | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/docs/administrator-guide/deployment/docker/"},{name:"twitter:title",content:"Deployment with Docker"},{name:"twitter:description",content:"Deployment with Docker | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/docs/administrator-guide/deployment/docker/"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Deployment with Docker | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/docs/administrator-guide/deployment/docker/",relativePath:"docs/administrator-guide/deployment/docker/README.md",key:"v-6842f008",path:"/docs/administrator-guide/deployment/docker/",headers:[{level:2,title:"Before you begin",slug:"before-you-begin",normalizedTitle:"before you begin",charIndex:152},{level:2,title:"Launch Kestra",slug:"launch-kestra",normalizedTitle:"launch kestra",charIndex:240},{level:2,title:"Docker Image",slug:"docker-image",normalizedTitle:"docker image",charIndex:622},{level:3,title:"Use official image",slug:"use-official-image",normalizedTitle:"use official image",charIndex:637},{level:3,title:"Create a new image with more binaries",slug:"create-a-new-image-with-more-binaries",normalizedTitle:"create a new image with more binaries",charIndex:1288},{level:3,title:"Create a new image with plugins",slug:"create-a-new-image-with-plugins",normalizedTitle:"create a new image with plugins",charIndex:1657},{level:3,title:"Docker image tag",slug:"docker-image-tag",normalizedTitle:"docker image tag",charIndex:2056}],lastUpdated:"11/21/2020, 3:14:25 PM",headersStr:"Before you begin Launch Kestra Docker Image Use official image Create a new image with more binaries Create a new image with plugins Docker image tag",content:"# Deployment with Docker\nThe quickest way to install Kestra is to use Docker Compose. It will start a non production Kestra with all the dependency.\n\n# Before you begin\nMake sure you have already installed :\n\n * Docker\n * Docker Compose\n\n# Launch Kestra\n * Download the compose file here\n * Run docker-compose up\n * Open http://localhost:8080 on your browser\n\nIt will start all the dependencies with a preconfigured Kestra that is connected to all!\n\nKestra will start with Standalone server (all the different servers in one JVM).\nThis is clearly not for production workload but sufficient to test on a local computer.\n\n# Docker Image\n# Use official image\nThe Kestra docker image is available in Docker hub.\n\nWe provide 2 images :\n\n * kestra/kestra:latest\n * kestra/kestra:latest-full\n\nThe docker image is based on openjdk:11-jre-slim docker image.\n\n# kestra/kestra:latest\nThis image :\n\n * does't contain any kestra plugins.\n * does't contain a lot of binaries to work with your Bash task.\n * does't contain some binaries for Python task or Node task.\n\n# kestra/kestra:latest-full\nThis image contains all the kestra plugins and all the binaries for Python task or Node task.\nTake care that this image will always contain the last version of plugins that can have some breaking change.\n\n# Create a new image with more binaries\nIf the base or full image don't contain binaries\nYou can easily create a new one with the DockerFile :\n\nARG IMAGE_TAG=latest\nFROM kestra/kestra:$IMAGE_TAG\n\nRUN mkdir -p /app/plugins && \\\n  apt-get update -y && \\\n  apt-get install -y --no-install-recommends golang && \\\n  apt-get clean && rm -rf /var/lib/apt/lists/* /var/tmp/*\n\n\n# Create a new image with plugins\nBy default, the kestra base docker image don't contain any plugins, but you can create a new image with all the plugins you want :\n\nARG IMAGE_TAG=latest\nFROM kestra/kestra:$IMAGE_TAG\n\nRUN /app/kestra plugins install \\\n  org.kestra.task.notifications:task-notifications:LATEST \\\n  org.kestra.storage.gcs:storage-gcs:LATEST \\\n  org.kestra.task.gcp:task-gcp:LATEST \n\n\n# Docker image tag\nWe provide a 3 tags for docker image :\n\n * latest: that will contain the default latest image with its full variant latest-full.\n * release: an image with preview of the next release with its full variant release-full.\n * develop: an image based on develop branch that will change every day and contain all unstable feature we are working and with its full variant develop-full.",normalizedContent:"# deployment with docker\nthe quickest way to install kestra is to use docker compose. it will start a non production kestra with all the dependency.\n\n# before you begin\nmake sure you have already installed :\n\n * docker\n * docker compose\n\n# launch kestra\n * download the compose file here\n * run docker-compose up\n * open http://localhost:8080 on your browser\n\nit will start all the dependencies with a preconfigured kestra that is connected to all!\n\nkestra will start with standalone server (all the different servers in one jvm).\nthis is clearly not for production workload but sufficient to test on a local computer.\n\n# docker image\n# use official image\nthe kestra docker image is available in docker hub.\n\nwe provide 2 images :\n\n * kestra/kestra:latest\n * kestra/kestra:latest-full\n\nthe docker image is based on openjdk:11-jre-slim docker image.\n\n# kestra/kestra:latest\nthis image :\n\n * does't contain any kestra plugins.\n * does't contain a lot of binaries to work with your bash task.\n * does't contain some binaries for python task or node task.\n\n# kestra/kestra:latest-full\nthis image contains all the kestra plugins and all the binaries for python task or node task.\ntake care that this image will always contain the last version of plugins that can have some breaking change.\n\n# create a new image with more binaries\nif the base or full image don't contain binaries\nyou can easily create a new one with the dockerfile :\n\narg image_tag=latest\nfrom kestra/kestra:$image_tag\n\nrun mkdir -p /app/plugins && \\\n  apt-get update -y && \\\n  apt-get install -y --no-install-recommends golang && \\\n  apt-get clean && rm -rf /var/lib/apt/lists/* /var/tmp/*\n\n\n# create a new image with plugins\nby default, the kestra base docker image don't contain any plugins, but you can create a new image with all the plugins you want :\n\narg image_tag=latest\nfrom kestra/kestra:$image_tag\n\nrun /app/kestra plugins install \\\n  org.kestra.task.notifications:task-notifications:latest \\\n  org.kestra.storage.gcs:storage-gcs:latest \\\n  org.kestra.task.gcp:task-gcp:latest \n\n\n# docker image tag\nwe provide a 3 tags for docker image :\n\n * latest: that will contain the default latest image with its full variant latest-full.\n * release: an image with preview of the next release with its full variant release-full.\n * develop: an image based on develop branch that will change every day and contain all unstable feature we are working and with its full variant develop-full.",charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"Installation guide",frontmatter:{order:1,meta:[{property:"article:modified_time",content:"2020-11-09T20:39:04.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Installation guide"},{property:"og:description",content:"Installation guide | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/docs/administrator-guide/deployment/"},{name:"twitter:title",content:"Installation guide"},{name:"twitter:description",content:"Installation guide | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/docs/administrator-guide/deployment/"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Installation guide | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/docs/administrator-guide/deployment/",relativePath:"docs/administrator-guide/deployment/README.md",key:"v-55acd5fe",path:"/docs/administrator-guide/deployment/",lastUpdated:"11/9/2020, 8:39:04 PM",headersStr:null,content:"# Installation guide\nWe provide different way to deploy kestra, the recommended way are :\n\n * Docker for a local installation\n * Kubernetes for a production installation\n\nMore information :",normalizedContent:"# installation guide\nwe provide different way to deploy kestra, the recommended way are :\n\n * docker for a local installation\n * kubernetes for a production installation\n\nmore information :",charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"Deployment on Kubernetes",frontmatter:{order:2,meta:[{property:"article:modified_time",content:"2020-11-07T08:20:23.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Deployment on Kubernetes"},{property:"og:description",content:"Deployment on Kubernetes | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/docs/administrator-guide/deployment/kubernetes/"},{name:"twitter:title",content:"Deployment on Kubernetes"},{name:"twitter:description",content:"Deployment on Kubernetes | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/docs/administrator-guide/deployment/kubernetes/"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Deployment on Kubernetes | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/docs/administrator-guide/deployment/kubernetes/",relativePath:"docs/administrator-guide/deployment/kubernetes/README.md",key:"v-7854a970",path:"/docs/administrator-guide/deployment/kubernetes/",lastUpdated:"11/7/2020, 8:20:23 AM",headersStr:null,content:"# Deployment on Kubernetes\nThe recommended deployment environment for production workload is Kubernetes.\nWe provide an Helm Charts in order to deploy your cluster.\n\n * The chart repository is available here.\n * The source code of the charts is here.\n\nBy default, the helm can deploy :\n\n * Zookeeper using kafka.enabled: true\n * Kafka cluster using kafka.enabled: true\n * Elasticsearch cluster using elasticsearch.enabled: true\n * All Kestra servers in separate pods.\n\nYou can change the default behaviour and configuring your cluster changing the defaults values.\n\nMost important configuration that will provide Kestra configuration files are:\n\n * configuration: in order to set the whole configuration files from kestra\n * secrets: that will be merged with configuration but kept as secret on your k8s cluster.",normalizedContent:"# deployment on kubernetes\nthe recommended deployment environment for production workload is kubernetes.\nwe provide an helm charts in order to deploy your cluster.\n\n * the chart repository is available here.\n * the source code of the charts is here.\n\nby default, the helm can deploy :\n\n * zookeeper using kafka.enabled: true\n * kafka cluster using kafka.enabled: true\n * elasticsearch cluster using elasticsearch.enabled: true\n * all kestra servers in separate pods.\n\nyou can change the default behaviour and configuring your cluster changing the defaults values.\n\nmost important configuration that will provide kestra configuration files are:\n\n * configuration: in order to set the whole configuration files from kestra\n * secrets: that will be merged with configuration but kept as secret on your k8s cluster.",charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"Manual deployment",frontmatter:{order:3,meta:[{property:"article:modified_time",content:"2020-11-07T09:16:06.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Manual deployment"},{property:"og:description",content:"Manual deployment | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/docs/administrator-guide/deployment/manual/"},{name:"twitter:title",content:"Manual deployment"},{name:"twitter:description",content:"Manual deployment | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/docs/administrator-guide/deployment/manual/"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Manual deployment | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/docs/administrator-guide/deployment/manual/",relativePath:"docs/administrator-guide/deployment/manual/README.md",key:"v-026cac48",path:"/docs/administrator-guide/deployment/manual/",lastUpdated:"11/7/2020, 9:16:06 AM",headersStr:null,content:"# Manual deployment\nIf you want to deploy by yourself, we provide a Standalone jar that allow to deploy on any environnement you want.\n\nThe latest jar can be download here.\n\nThis is an executable jar:\n\n * For Linux & MacOs, we run it ./kestra-VERSION\n * For Windows, rename the file ./kestra-VERSION to ./kestra-VERSION.bat and call it from CMD.",normalizedContent:"# manual deployment\nif you want to deploy by yourself, we provide a standalone jar that allow to deploy on any environnement you want.\n\nthe latest jar can be download here.\n\nthis is an executable jar:\n\n * for linux & macos, we run it ./kestra-version\n * for windows, rename the file ./kestra-version to ./kestra-version.bat and call it from cmd.",charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"Monitoring & Alerting",frontmatter:{order:4,meta:[{property:"article:modified_time",content:"2020-11-07T08:20:23.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Monitoring & Alerting"},{property:"og:description",content:"Monitoring & Alerting | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/docs/administrator-guide/monitoring/"},{name:"twitter:title",content:"Monitoring & Alerting"},{name:"twitter:description",content:"Monitoring & Alerting | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/docs/administrator-guide/monitoring/"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Monitoring & Alerting | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/docs/administrator-guide/monitoring/",relativePath:"docs/administrator-guide/monitoring/README.md",key:"v-db882e10",path:"/docs/administrator-guide/monitoring/",headers:[{level:2,title:"Prometheus",slug:"prometheus",normalizedTitle:"prometheus",charIndex:251},{level:3,title:"Kestra metrics",slug:"kestra-metrics",normalizedTitle:"kestra metrics",charIndex:352},{level:3,title:"Others metrics",slug:"others-metrics",normalizedTitle:"others metrics",charIndex:2486},{level:2,title:"Grafana or Kibana",slug:"grafana-or-kibana",normalizedTitle:"grafana or kibana",charIndex:2685},{level:2,title:"Others micronaut default endpoint",slug:"others-micronaut-default-endpoint",normalizedTitle:"others micronaut default endpoint",charIndex:2938}],lastUpdated:"11/7/2020, 8:20:23 AM",headersStr:"Prometheus Kestra metrics Others metrics Grafana or Kibana Others micronaut default endpoint",content:"# Monitoring & Alerting\nKestra will start a monitoring endpoint on port 8081 by default. (You can change this port with\nconfiguration options endpoints:.all.port)\n\nThis monitoring endpoint will expose some helpful route in order to monitor Kestra:\n\n# Prometheus\nIf you have any Prometheus monitoring systems, Kestra expose this endpoint /prometheus\n\n# Kestra metrics\nKestra expose some internal metrics allowing to add some alert. Each one declare many timeseries with tags allowing\nto track at least namespace & flow. But also some others tags depending on available tasks.\n\nAlso each task type can expose custom metrics that will be exposed on prometheus.\n\n# Worker\nMetrics                 Type      Description               \nworker.running.count    GAUGE     Task actually running     \nworker.started.count    COUNTER   Count of tasks started    \nworker.retryed.count    COUNTER   Count of tasks retried    \nworker.ended.count      COUNTER   Count of tasks ended      \nworker.ended.duration   TIMER     Duration of tasks ended   \n\n# Executor\nMetrics                            Type      Description                           \nexecutor.taskrun.next.count        COUNTER   Count of tasks found                  \nexecutor.taskrun.ended.count       COUNTER   Count of tasks ended                  \nexecutor.taskrun.ended.duration    TOMER     Duration of tasks ended               \nexecutor.workertaskresult.count    COUNTER   Count of task result send by worker   \nexecutor.execution.started.count   COUNTER   Count of executions started           \nexecutor.execution.end.count       COUNTER   Count of executions ended             \nexecutor.execution.duration        TIMER     Duration of executions ended          \n\n# Indexer\nMetrics            Type       Description                                 \nindexer.count      COUNTER    Count of indexation sent to repository      \nindexer.duration   DURATION   Duration of indexation sent to repository   \n\n# Scheduler\nMetrics                            Type      Description                                                                        \nscheduler.trigger.count            COUNTER   Count of trigger found                                                             \nscheduler.evaluate.running.count   COUNTER   Evaluation of trigger actually running (aka: number of thread used by scheduler)   \nscheduler.evaluate.duration        TIMER     Duration of evaluation of trigger                                                  \n\n# Others metrics\nIt will also expose all internal metrics from :\n\n * Micronaut\n * Kafka\n * Thread pool on the application\n * ...\n\nSome additional information can be found on Micronaut documentation\n\n# Grafana or Kibana\nSince Elasticsearch is used to store all executions & metrics, you can easily make a dashboard with\nGrafana or Kibana in order to follow your Kestra instance.\n\nIn a near future, we will provide a template dashboard as a quick start\n\n# Others micronaut default endpoint\nSince Kestra is based on Micronaut, the default micronaut endpoint\nis enabled by default :\n\n * /info Info Endpoint with git status informations.\n * /health Health Endpoint usable for add an external heathcheck on application.\n * /loggers Loggers Endpoint allowing changing logger level during runtime.\n * /metrics Metrics Endpoint metrics in json format.\n * /env Env Endpoint to debug configuration files.\n\nYou can disabled some endpoint following micronaut configuration above.",normalizedContent:"# monitoring & alerting\nkestra will start a monitoring endpoint on port 8081 by default. (you can change this port with\nconfiguration options endpoints:.all.port)\n\nthis monitoring endpoint will expose some helpful route in order to monitor kestra:\n\n# prometheus\nif you have any prometheus monitoring systems, kestra expose this endpoint /prometheus\n\n# kestra metrics\nkestra expose some internal metrics allowing to add some alert. each one declare many timeseries with tags allowing\nto track at least namespace & flow. but also some others tags depending on available tasks.\n\nalso each task type can expose custom metrics that will be exposed on prometheus.\n\n# worker\nmetrics                 type      description               \nworker.running.count    gauge     task actually running     \nworker.started.count    counter   count of tasks started    \nworker.retryed.count    counter   count of tasks retried    \nworker.ended.count      counter   count of tasks ended      \nworker.ended.duration   timer     duration of tasks ended   \n\n# executor\nmetrics                            type      description                           \nexecutor.taskrun.next.count        counter   count of tasks found                  \nexecutor.taskrun.ended.count       counter   count of tasks ended                  \nexecutor.taskrun.ended.duration    tomer     duration of tasks ended               \nexecutor.workertaskresult.count    counter   count of task result send by worker   \nexecutor.execution.started.count   counter   count of executions started           \nexecutor.execution.end.count       counter   count of executions ended             \nexecutor.execution.duration        timer     duration of executions ended          \n\n# indexer\nmetrics            type       description                                 \nindexer.count      counter    count of indexation sent to repository      \nindexer.duration   duration   duration of indexation sent to repository   \n\n# scheduler\nmetrics                            type      description                                                                        \nscheduler.trigger.count            counter   count of trigger found                                                             \nscheduler.evaluate.running.count   counter   evaluation of trigger actually running (aka: number of thread used by scheduler)   \nscheduler.evaluate.duration        timer     duration of evaluation of trigger                                                  \n\n# others metrics\nit will also expose all internal metrics from :\n\n * micronaut\n * kafka\n * thread pool on the application\n * ...\n\nsome additional information can be found on micronaut documentation\n\n# grafana or kibana\nsince elasticsearch is used to store all executions & metrics, you can easily make a dashboard with\ngrafana or kibana in order to follow your kestra instance.\n\nin a near future, we will provide a template dashboard as a quick start\n\n# others micronaut default endpoint\nsince kestra is based on micronaut, the default micronaut endpoint\nis enabled by default :\n\n * /info info endpoint with git status informations.\n * /health health endpoint usable for add an external heathcheck on application.\n * /loggers loggers endpoint allowing changing logger level during runtime.\n * /metrics metrics endpoint metrics in json format.\n * /env env endpoint to debug configuration files.\n\nyou can disabled some endpoint following micronaut configuration above.",charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"Architecture",frontmatter:{order:3,meta:[{property:"article:modified_time",content:"2020-11-25T20:51:40.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Architecture"},{property:"og:description",content:"Architecture | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/docs/architecture/"},{name:"twitter:title",content:"Architecture"},{name:"twitter:description",content:"Architecture | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/docs/architecture/"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Architecture | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/docs/architecture/",relativePath:"docs/architecture/README.md",key:"v-be84a670",path:"/docs/architecture/",headers:[{level:2,title:"Dependencies",slug:"dependencies",normalizedTitle:"dependencies",charIndex:19},{level:3,title:"Kafka",slug:"kafka",normalizedTitle:"kafka",charIndex:197},{level:3,title:"ElasticSearch",slug:"elasticsearch",normalizedTitle:"elasticsearch",charIndex:378},{level:3,title:"Storage",slug:"storage",normalizedTitle:"storage",charIndex:524},{level:2,title:"Servers",slug:"servers",normalizedTitle:"servers",charIndex:1163},{level:3,title:"Executor",slug:"executor",normalizedTitle:"executor",charIndex:970},{level:3,title:"Worker",slug:"worker",normalizedTitle:"worker",charIndex:1821},{level:3,title:"Scheduler",slug:"scheduler",normalizedTitle:"scheduler",charIndex:2832},{level:3,title:"Indexer",slug:"indexer",normalizedTitle:"indexer",charIndex:985},{level:3,title:"Webserver",slug:"webserver",normalizedTitle:"webserver",charIndex:3592},{level:2,title:"Plugins",slug:"plugins",normalizedTitle:"plugins",charIndex:4233},{level:2,title:"Repositories",slug:"repositories",normalizedTitle:"repositories",charIndex:3490}],lastUpdated:"11/25/2020, 8:51:40 PM",headersStr:"Dependencies Kafka ElasticSearch Storage Servers Executor Worker Scheduler Indexer Webserver Plugins Repositories",content:"# Architecture\n\n\n# Dependencies\nAt the heart, Kestra have a pluggable system allowing to switch some dependencies, but for now there is only one production environments architecture available :\n\n# Kafka\nKafka is the real main dependencies of Kestra, all the most important servers need to have a Kafka up & running. Kafka allowing Kestra to be an infinite scalable solution.\n\n# ElasticSearch\nElasticSearch is the database of Kestra, allowing displaying, search, aggregate all the data from Kestra (Flow, executions, ...)\n\n# Storage\nKestra need to store some files (incoming or outgoing files) and this notion is included in the heart of Kestra. Nowadays, storage availability are backup by many file systems, we rely on these in order to guarantee scalability of Kestra.\n\nThe storage is a simple plugin that you need to include and configure, by default only a Local (not scalable) storage is available.\n\nThe storage is used can be used by any Kestra servers except the Executor & the Indexer that don't need it.\n\nAvailable storage are :\n\n * Storage Minio for Minio compatible with AWS S3 and all others S3 Like storage\n * Storage GCS for Google Cloud Storage\n\n# Servers\nKestra consist of multiple servers that can be scaled independently:\n\n# Executor\nExecutors handle all executions and flowable tasks. The only goal is to receive created execution and find what will be next tasks.\nThere isn't (and can't) heavy computing on this part. Only looking at current execution and find next tasks.\n\nThe executor also handle special execution case :\n\n * Listeners\n * Flow Trigger\n * Template\n\nInternally, the executor is a heavy Kafka Stream. The executor processes all events coming from Kafka in the right order, keep an internal state of the execution and merge taskrun result coming from the worker.\nIt also detects a dead Worker and resubmit the task running by a dead worker.\n\nSince the application is a Kafka Stream, the application can be scale infinitely (with the limit of partition count on Kafka) but since no heavy computation are done on the executor, this server doesn't use a lot of resources (except if you have a very high rate of execution).\n\n# Worker\nWorkers is where the task are done. Worker will receive task from Executor and will process then.\nSince tasks could be everything (heavy computation, simple api call), worker is ThreadPool where you can configure the amount of thread you need.\n\nInternally, Worker are a simple Kafka Consumer that will process any taskrun submitted. Worker will receive all task and dispatch internally in his Thread Pool.\nYou can also scale as you want workers and have many instance on multiple servers(with the limit of partition count on Kafka), each own with Thread Pool.\nIf a worker is dead, the Executor will detect him and resubmit their current taskrun to another worker.\n\n# Scheduler\nScheduler will handle most of the triggers (except the Flow Trigger handle by executor). It will watch continuously all the triggers and detect if all the conditions is meet to trigger an Execution (submitted to Executor).\n\nInternally, Scheduler are 2 ThreadPool :\n\n * ScheduledExecutorService : that will tick every second and try to find an available job\n * CachedThreadPool : that will compute in a separate Thread for all the trigger\n\nWARNING\n\nBy default, Kestra will handle all date with your system timezone. You can change the timezone with JVM options.\n\n# Indexer\nIndexer will watch for many Kafka topic and will simply copy the content to Repositories. This will save to ElasticSearch all the execution & flow allowing to have a rich ui.\n\n# Webserver\nWebserver will offer 2 main module in the same server :\n\n * Api: All the api allowing triggering execution for any systems, and to interact with Kestra.\n * Ui: The ui is also served by the same webserver\n\nThe webserver mostly interact with Elasticsearch in order to have a rich api / ui. It also interacts with Kafka in order to trigger new execution, follow execution in real-time, ...\n\nTIP\n\nAs you understand, all the application is able to work only with Kafka and Storage (mostly except Scheduler).\nElasticsearch is only available for the Web ui and if ElasticSearch is down, you are able to continue any workload on Kestra\n\n# Plugins\nKestra core doesn't allow to handle many tasks type. We have included a Plugins systems that allow you to develop as many tasks as you need.\nA wide range of plugins will deliver by Kestra team !\n\n# Repositories\nRepositories are the internal way to fetch data. On production servers, it will fetch data from ElasticSearch. There is a memory repository than is used during internal Kestra unit test and have an incomplete api. Never use this one on production.",normalizedContent:"# architecture\n\n\n# dependencies\nat the heart, kestra have a pluggable system allowing to switch some dependencies, but for now there is only one production environments architecture available :\n\n# kafka\nkafka is the real main dependencies of kestra, all the most important servers need to have a kafka up & running. kafka allowing kestra to be an infinite scalable solution.\n\n# elasticsearch\nelasticsearch is the database of kestra, allowing displaying, search, aggregate all the data from kestra (flow, executions, ...)\n\n# storage\nkestra need to store some files (incoming or outgoing files) and this notion is included in the heart of kestra. nowadays, storage availability are backup by many file systems, we rely on these in order to guarantee scalability of kestra.\n\nthe storage is a simple plugin that you need to include and configure, by default only a local (not scalable) storage is available.\n\nthe storage is used can be used by any kestra servers except the executor & the indexer that don't need it.\n\navailable storage are :\n\n * storage minio for minio compatible with aws s3 and all others s3 like storage\n * storage gcs for google cloud storage\n\n# servers\nkestra consist of multiple servers that can be scaled independently:\n\n# executor\nexecutors handle all executions and flowable tasks. the only goal is to receive created execution and find what will be next tasks.\nthere isn't (and can't) heavy computing on this part. only looking at current execution and find next tasks.\n\nthe executor also handle special execution case :\n\n * listeners\n * flow trigger\n * template\n\ninternally, the executor is a heavy kafka stream. the executor processes all events coming from kafka in the right order, keep an internal state of the execution and merge taskrun result coming from the worker.\nit also detects a dead worker and resubmit the task running by a dead worker.\n\nsince the application is a kafka stream, the application can be scale infinitely (with the limit of partition count on kafka) but since no heavy computation are done on the executor, this server doesn't use a lot of resources (except if you have a very high rate of execution).\n\n# worker\nworkers is where the task are done. worker will receive task from executor and will process then.\nsince tasks could be everything (heavy computation, simple api call), worker is threadpool where you can configure the amount of thread you need.\n\ninternally, worker are a simple kafka consumer that will process any taskrun submitted. worker will receive all task and dispatch internally in his thread pool.\nyou can also scale as you want workers and have many instance on multiple servers(with the limit of partition count on kafka), each own with thread pool.\nif a worker is dead, the executor will detect him and resubmit their current taskrun to another worker.\n\n# scheduler\nscheduler will handle most of the triggers (except the flow trigger handle by executor). it will watch continuously all the triggers and detect if all the conditions is meet to trigger an execution (submitted to executor).\n\ninternally, scheduler are 2 threadpool :\n\n * scheduledexecutorservice : that will tick every second and try to find an available job\n * cachedthreadpool : that will compute in a separate thread for all the trigger\n\nwarning\n\nby default, kestra will handle all date with your system timezone. you can change the timezone with jvm options.\n\n# indexer\nindexer will watch for many kafka topic and will simply copy the content to repositories. this will save to elasticsearch all the execution & flow allowing to have a rich ui.\n\n# webserver\nwebserver will offer 2 main module in the same server :\n\n * api: all the api allowing triggering execution for any systems, and to interact with kestra.\n * ui: the ui is also served by the same webserver\n\nthe webserver mostly interact with elasticsearch in order to have a rich api / ui. it also interacts with kafka in order to trigger new execution, follow execution in real-time, ...\n\ntip\n\nas you understand, all the application is able to work only with kafka and storage (mostly except scheduler).\nelasticsearch is only available for the web ui and if elasticsearch is down, you are able to continue any workload on kestra\n\n# plugins\nkestra core doesn't allow to handle many tasks type. we have included a plugins systems that allow you to develop as many tasks as you need.\na wide range of plugins will deliver by kestra team !\n\n# repositories\nrepositories are the internal way to fetch data. on production servers, it will fetch data from elasticsearch. there is a memory repository than is used during internal kestra unit test and have an incomplete api. never use this one on production.",charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"Kestra servers",frontmatter:{order:2,meta:[{property:"article:modified_time",content:"2020-11-08T20:24:08.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Kestra servers"},{property:"og:description",content:"Kestra servers | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/docs/administrator-guide/servers/"},{name:"twitter:title",content:"Kestra servers"},{name:"twitter:description",content:"Kestra servers | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/docs/administrator-guide/servers/"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Kestra servers | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/docs/administrator-guide/servers/",relativePath:"docs/administrator-guide/servers/README.md",key:"v-12b44ec8",path:"/docs/administrator-guide/servers/",headers:[{level:2,title:"Production environment servers",slug:"production-environment-servers",normalizedTitle:"production environment servers",charIndex:92},{level:3,title:"Kestra Executor",slug:"kestra-executor",normalizedTitle:"kestra executor",charIndex:125},{level:3,title:"Kestra Indexer",slug:"kestra-indexer",normalizedTitle:"kestra indexer",charIndex:216},{level:3,title:"Kestra Scheduler",slug:"kestra-scheduler",normalizedTitle:"kestra scheduler",charIndex:305},{level:3,title:"Kestra Worker",slug:"kestra-worker",normalizedTitle:"kestra worker",charIndex:398},{level:3,title:"Kestra Webserver",slug:"kestra-webserver",normalizedTitle:"kestra webserver",charIndex:520},{level:2,title:"Kestra standalone, Development environment servers",slug:"kestra-standalone-development-environment-servers",normalizedTitle:"kestra standalone, development environment servers",charIndex:613},{level:2,title:"Options for all server command",slug:"options-for-all-server-command",normalizedTitle:"options for all server command",charIndex:1082},{level:3,title:"Log Level",slug:"log-level",normalizedTitle:"log level",charIndex:1115},{level:3,title:"Internal Log",slug:"internal-log",normalizedTitle:"internal log",charIndex:1352},{level:3,title:"Configuration Files",slug:"configuration-files",normalizedTitle:"configuration files",charIndex:1469},{level:3,title:"Plugins directory",slug:"plugins-directory",normalizedTitle:"plugins directory",charIndex:1591}],lastUpdated:"11/8/2020, 8:24:08 PM",headersStr:"Production environment servers Kestra Executor Kestra Indexer Kestra Scheduler Kestra Worker Kestra Webserver Kestra standalone, Development environment servers Options for all server command Log Level Internal Log Configuration Files Plugins directory",content:"# Kestra servers\nKestra have 5 different servers in order to have a fully working Kestra\n\n# Production environment servers\n# Kestra Executor\n./kestra server executor\n\nOptions:\n\nNo special options for this server.\n\n# Kestra Indexer\n./kestra server indexer\n\nOptions:\n\nNo special options for this server.\n\n# Kestra Scheduler\n./kestra server scheduler\n\nOptions:\n\nNo special options for this server.\n\n# Kestra Worker\n./kestra server worker\n\nOptions:\n\n * -thread: the number of thread that can handle task at the same time\n\n# Kestra Webserver\n./kestra server Webserver\n\nOptions:\n\nNo special options for this servers\n\n# Kestra standalone, Development environment servers\n./kestra server standalone\n\nThis server is a special server only intended for Development environment, since it will contains all the server in one jvm.\nBut this work well on development environment.\nBy default, the worker embedded will start 1 thread per cpu core available.\n\nOptions:\n\n * -f or --flow-path: the path to a directory will flow file as yaml, these files will loaded on the repository at the startup.\n\n# Options for all server command\n# Log Level\nLog level can be changed with 2 options :\n\n * --log-level: possible value: [TRACE, DEBUG, INFO, WARN, ERROR], default: INFO\n * --verbose or -v for DEBUG, -vv for TRACE\n\nThis option affects global log level for all flow only\n\n# Internal Log\n--internal-log: Kestra hide internal log by default, use this option to enable it (High verbosity !)\n\n# Configuration Files\n-c or --config: change the location of kestra configuration files, default is ~/.kestra/config.yml\n\n# Plugins directory\n-p or --plugins: Path to plugins directory, default is plugins directory near your kestra executable",normalizedContent:"# kestra servers\nkestra have 5 different servers in order to have a fully working kestra\n\n# production environment servers\n# kestra executor\n./kestra server executor\n\noptions:\n\nno special options for this server.\n\n# kestra indexer\n./kestra server indexer\n\noptions:\n\nno special options for this server.\n\n# kestra scheduler\n./kestra server scheduler\n\noptions:\n\nno special options for this server.\n\n# kestra worker\n./kestra server worker\n\noptions:\n\n * -thread: the number of thread that can handle task at the same time\n\n# kestra webserver\n./kestra server webserver\n\noptions:\n\nno special options for this servers\n\n# kestra standalone, development environment servers\n./kestra server standalone\n\nthis server is a special server only intended for development environment, since it will contains all the server in one jvm.\nbut this work well on development environment.\nby default, the worker embedded will start 1 thread per cpu core available.\n\noptions:\n\n * -f or --flow-path: the path to a directory will flow file as yaml, these files will loaded on the repository at the startup.\n\n# options for all server command\n# log level\nlog level can be changed with 2 options :\n\n * --log-level: possible value: [trace, debug, info, warn, error], default: info\n * --verbose or -v for debug, -vv for trace\n\nthis option affects global log level for all flow only\n\n# internal log\n--internal-log: kestra hide internal log by default, use this option to enable it (high verbosity !)\n\n# configuration files\n-c or --config: change the location of kestra configuration files, default is ~/.kestra/config.yml\n\n# plugins directory\n-p or --plugins: path to plugins directory, default is plugins directory near your kestra executable",charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"Concepts",frontmatter:{order:2,meta:[{property:"article:modified_time",content:"2020-11-09T20:39:04.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Concepts"},{property:"og:description",content:"Concepts | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/docs/concepts/"},{name:"twitter:title",content:"Concepts"},{name:"twitter:description",content:"Concepts | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/docs/concepts/"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Concepts | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/docs/concepts/",relativePath:"docs/concepts/README.md",key:"v-11cc6b58",path:"/docs/concepts/",lastUpdated:"11/9/2020, 8:39:04 PM",headersStr:null,content:"# Concepts\nThis section describes some specific terms usage for Kestra system. It aims to make it simpler to understand the system for newcomers.",normalizedContent:"# concepts\nthis section describes some specific terms usage for kestra system. it aims to make it simpler to understand the system for newcomers.",charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"Execution",frontmatter:{order:2,meta:[{property:"article:modified_time",content:"2020-12-01T14:17:58.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Execution"},{property:"og:description",content:"Execution | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/docs/concepts/executions.html"},{name:"twitter:title",content:"Execution"},{name:"twitter:description",content:"Execution | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/docs/concepts/executions.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Execution | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/docs/concepts/executions.html",relativePath:"docs/concepts/executions.md",key:"v-a42a4c0e",path:"/docs/concepts/executions.html",headers:[{level:2,title:"Task Run",slug:"task-run",normalizedTitle:"task run",charIndex:200},{level:2,title:"Attempts",slug:"attempts",normalizedTitle:"attempts",charIndex:343},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:538},{level:2,title:"Metrics",slug:"metrics",normalizedTitle:"metrics",charIndex:649},{level:2,title:"State",slug:"state",normalizedTitle:"state",charIndex:867}],lastUpdated:"12/1/2020, 2:17:58 PM",headersStr:"Task Run Attempts Outputs Metrics State",content:"# Execution\nAn execution is a flow that is currently processing or have already finished doing things. It is a task set processing together to achieve the flow goal that is to be ran successfully.\n\n# Task Run\nA task run is a task that was executed and associated to its operationnal data like execution_id, state, start_date, end_date, ...\n\n# Attempts\nEach task run will be produce 1 or more attempt. Most common task run will have only 1 attempt, but you can add some Retries that will generate new attempts for every failed taskrun.\n\n# Outputs\nEach task can generate some output data that can be reused in other tasks of the current execution.\n\n# Metrics\nEach task can generate some metrics data that be useful to understand what the current task are doing.\nThis can be for example file.size, row.count, ...\n\nThere is 2 kind of metrics :\n\n * Duration\n * Counter\n\n# State\nDefine all the state that a Task Run or an Execution can have.\n\nThe Execution or Task Run can have these state :\n\n * CREATED: not handle internally, waiting to be treated. Mostly the execution is in a queue.\n * RUNNING: the tasks are running right now.\n * SUCCESS: all the task are done without any failure.\n * WARNING: execution have any unintended behaviour, but we continue the execution and flagged execution has WARNING also.\n * FAILED: execution have any unintended behaviour that cause the execution to failed.\n * KILLING: execution was asked to be killed and waiting tasks were killed.\n * KILLED: execution was killed, and no more task will be done.\n * RESTARTED: this status is a transitive status that mean CREATED, only for keep track of the restart",normalizedContent:"# execution\nan execution is a flow that is currently processing or have already finished doing things. it is a task set processing together to achieve the flow goal that is to be ran successfully.\n\n# task run\na task run is a task that was executed and associated to its operationnal data like execution_id, state, start_date, end_date, ...\n\n# attempts\neach task run will be produce 1 or more attempt. most common task run will have only 1 attempt, but you can add some retries that will generate new attempts for every failed taskrun.\n\n# outputs\neach task can generate some output data that can be reused in other tasks of the current execution.\n\n# metrics\neach task can generate some metrics data that be useful to understand what the current task are doing.\nthis can be for example file.size, row.count, ...\n\nthere is 2 kind of metrics :\n\n * duration\n * counter\n\n# state\ndefine all the state that a task run or an execution can have.\n\nthe execution or task run can have these state :\n\n * created: not handle internally, waiting to be treated. mostly the execution is in a queue.\n * running: the tasks are running right now.\n * success: all the task are done without any failure.\n * warning: execution have any unintended behaviour, but we continue the execution and flagged execution has warning also.\n * failed: execution have any unintended behaviour that cause the execution to failed.\n * killing: execution was asked to be killed and waiting tasks were killed.\n * killed: execution was killed, and no more task will be done.\n * restarted: this status is a transitive status that mean created, only for keep track of the restart",charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"Flow",frontmatter:{order:1,meta:[{property:"article:modified_time",content:"2020-09-25T19:43:22.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Flow"},{property:"og:description",content:"Flow | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/docs/concepts/flows.html"},{name:"twitter:title",content:"Flow"},{name:"twitter:description",content:"Flow | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/docs/concepts/flows.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Flow | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/docs/concepts/flows.html",relativePath:"docs/concepts/flows.md",key:"v-631e077a",path:"/docs/concepts/flows.html",headers:[{level:2,title:"Task",slug:"task",normalizedTitle:"task",charIndex:132},{level:3,title:"Flowable Task",slug:"flowable-task",normalizedTitle:"flowable task",charIndex:334},{level:3,title:"Runnable Task",slug:"runnable-task",normalizedTitle:"runnable task",charIndex:822},{level:2,title:"Namespace",slug:"namespace",normalizedTitle:"namespace",charIndex:1155},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:1413},{level:2,title:"Revision",slug:"revision",normalizedTitle:"revision",charIndex:1715},{level:2,title:"Listeners",slug:"listeners",normalizedTitle:"listeners",charIndex:1931},{level:2,title:"Triggers",slug:"triggers",normalizedTitle:"triggers",charIndex:2245},{level:2,title:"Templates",slug:"templates",normalizedTitle:"templates",charIndex:2401}],lastUpdated:"9/25/2020, 7:43:22 PM",headersStr:"Task Flowable Task Runnable Task Namespace Inputs Revision Listeners Triggers Templates",content:"# Flow\nA flow is a list of task for Kestra. It defines all the behavior you want for the current flow. So, a flow is simple list of Task, group by namespace.\n\n# Task\nA Task is single action in a flow.\nA task is can optionally takes inputs, performs an action, and produces an optional outputs.\n\nThere is 2 kind of Task in Kestra :\n\n# Flowable Task\nFlowable Task are tasks only handle workflow state and trigger new tasks. It will handle the logic of the flow allowing doing complex workflow like branching, parallel tasks, ...\nA simple example is a Switch task that can take any inputs and decide witch are the next tasks to run (and allow branching).\n\nA Flowable Task is handled by Executors and can be called very often, so it can't run intensive computation.\n\nThe Most common Flowable Task will be keep in the core.\n\n# Runnable Task\nRunnable Task are here to handle any computation work. This can be anything like file systems operation, api call, database query, ... Theses tasks can be compute intensive since it will be\nhandle by Workers. By default, Kestra don't have a lot of RunnableTask and mostly all the tasks will be available as Plugins.\n\n# Namespace\nA namespace is a like a folder for file system. It aims to group flows in a limitless hierarchy.\nNamespace is compose by word and letters separated by .. The hierarchy depth is not limited and is free for Kestra users to fit their organization.\n\n# Inputs\nInputs are mandatory or optional parameters sent to a flow in order to be successfully run. It can be anythings (string, int, file, ...) to will be send when the execution is created. Flow must defined possible inputs and mandatory one will be validated before the creation of the execution.\n\n# Revision\nEach flow modification will produce a new revision, revision is a simple increments number that will update after each change of the flow. Internally Kestra will track and keep all revisions of the flow.\n\n# Listeners\nListeners are special task that can listen to the current flow and launch task outside of the flow.\nThe result of the tasks will not change the execution status. Mostly Listeners are here to send notification or handle special end task behaviour that you don't want to be considered as main workflow.\n\n# Triggers\nTriggers are way to start a flow with external events. For example, on a schedule date or waiting for some external events (like file creation)\n\n# Templates\nTemplates are list of tasks that can be shared between flows. You can define a template and call it from other flows allowing to share a list of tasks and keep these task updated without changing your flow.",normalizedContent:"# flow\na flow is a list of task for kestra. it defines all the behavior you want for the current flow. so, a flow is simple list of task, group by namespace.\n\n# task\na task is single action in a flow.\na task is can optionally takes inputs, performs an action, and produces an optional outputs.\n\nthere is 2 kind of task in kestra :\n\n# flowable task\nflowable task are tasks only handle workflow state and trigger new tasks. it will handle the logic of the flow allowing doing complex workflow like branching, parallel tasks, ...\na simple example is a switch task that can take any inputs and decide witch are the next tasks to run (and allow branching).\n\na flowable task is handled by executors and can be called very often, so it can't run intensive computation.\n\nthe most common flowable task will be keep in the core.\n\n# runnable task\nrunnable task are here to handle any computation work. this can be anything like file systems operation, api call, database query, ... theses tasks can be compute intensive since it will be\nhandle by workers. by default, kestra don't have a lot of runnabletask and mostly all the tasks will be available as plugins.\n\n# namespace\na namespace is a like a folder for file system. it aims to group flows in a limitless hierarchy.\nnamespace is compose by word and letters separated by .. the hierarchy depth is not limited and is free for kestra users to fit their organization.\n\n# inputs\ninputs are mandatory or optional parameters sent to a flow in order to be successfully run. it can be anythings (string, int, file, ...) to will be send when the execution is created. flow must defined possible inputs and mandatory one will be validated before the creation of the execution.\n\n# revision\neach flow modification will produce a new revision, revision is a simple increments number that will update after each change of the flow. internally kestra will track and keep all revisions of the flow.\n\n# listeners\nlisteners are special task that can listen to the current flow and launch task outside of the flow.\nthe result of the tasks will not change the execution status. mostly listeners are here to send notification or handle special end task behaviour that you don't want to be considered as main workflow.\n\n# triggers\ntriggers are way to start a flow with external events. for example, on a schedule date or waiting for some external events (like file creation)\n\n# templates\ntemplates are list of tasks that can be shared between flows. you can define a template and call it from other flows allowing to share a list of tasks and keep these task updated without changing your flow.",charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"Developer Guide",frontmatter:{order:4,meta:[{property:"article:modified_time",content:"2020-11-09T20:39:04.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Developer Guide"},{property:"og:description",content:"Developer Guide | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/docs/developer-guide/"},{name:"twitter:title",content:"Developer Guide"},{name:"twitter:description",content:"Developer Guide | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/docs/developer-guide/"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Developer Guide | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/docs/developer-guide/",relativePath:"docs/developer-guide/README.md",key:"v-477f7948",path:"/docs/developer-guide/",lastUpdated:"11/9/2020, 8:39:04 PM",headersStr:null,content:"# Developer Guide\nHere, you will find the necessary information in order to develop flows for Kestra.\n\nMore information :",normalizedContent:"# developer guide\nhere, you will find the necessary information in order to develop flows for kestra.\n\nmore information :",charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"Conditions",frontmatter:{order:7,meta:[{property:"article:modified_time",content:"2020-10-23T16:19:14.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Conditions"},{property:"og:description",content:"Conditions | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/docs/developer-guide/conditions/"},{name:"twitter:title",content:"Conditions"},{name:"twitter:description",content:"Conditions | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/docs/developer-guide/conditions/"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Conditions | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/docs/developer-guide/conditions/",relativePath:"docs/developer-guide/conditions/README.md",key:"v-587c915c",path:"/docs/developer-guide/conditions/",lastUpdated:"10/23/2020, 4:19:14 PM",headersStr:null,content:"# Conditions\nConditions are use in Triggers & Listeners in order to limit the case this one could happen.\nFor example:\n\n * you can limit the listeners to only specified status\n * you can limit triggers to specified namespace prefix\n * ....\n\nYou can pass a list of conditions and all the conditions must match to enable the current action.\n\nAvailable condition are :\n\n * ExecutionFlowCondition\n * ExecutionNamespaceCondition\n * ExecutionStatusCondition\n * FlowCondition\n * FlowNamespaceCondition\n * VariableCondition",normalizedContent:"# conditions\nconditions are use in triggers & listeners in order to limit the case this one could happen.\nfor example:\n\n * you can limit the listeners to only specified status\n * you can limit triggers to specified namespace prefix\n * ....\n\nyou can pass a list of conditions and all the conditions must match to enable the current action.\n\navailable condition are :\n\n * executionflowcondition\n * executionnamespacecondition\n * executionstatuscondition\n * flowcondition\n * flownamespacecondition\n * variablecondition",charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"Errors handling",frontmatter:{order:5,meta:[{property:"article:modified_time",content:"2020-09-20T19:16:05.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Errors handling"},{property:"og:description",content:"Errors handling | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/docs/developer-guide/errors-handling/"},{name:"twitter:title",content:"Errors handling"},{name:"twitter:description",content:"Errors handling | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/docs/developer-guide/errors-handling/"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Errors handling | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/docs/developer-guide/errors-handling/",relativePath:"docs/developer-guide/errors-handling/README.md",key:"v-550d8c48",path:"/docs/developer-guide/errors-handling/",headers:[{level:2,title:"Global Error",slug:"global-error",normalizedTitle:"global error",charIndex:324},{level:2,title:"Local Error",slug:"local-error",normalizedTitle:"local error",charIndex:717}],lastUpdated:"9/20/2020, 7:16:05 PM",headersStr:"Global Error Local Error",content:'# Errors handling\nErrors are special branch of your flow, where you can define how to handle it if any task failed.\n\n2 kinds of errors can be defined :\n\n * Global: for the flow and must be at root of the flow.\n * Local: that is available for all Flowable Task, that allow to be only for this tasks and all theirs childs.\n\n# Global Error\nThis example processes a task which fails immediately. Then a tasks sequence is processed in the error branch of the flow.\n\nid: errors\nnamespace: org.kestra.tests\n\ntasks:\n  - id: failed\n    type: org.kestra.core.tasks.scripts.Bash\n    commands:\n      - exit 1\nerrors:\n  - id: 2nd\n    type: org.kestra.core.tasks.debugs.Echo\n    format: I\'m failing {{task.id}}\n    level: INFO\n\n\n# Local Error\nIn this case, the error branch will be used only if all childs of task t2 have an errors.\nIn this specific example, if the task t1 failed, no errors will be used. This is really usefull to do some cleanup of ressource for this tasks only.\n\nid: errors\nnamespace: org.kestra.tests\n\ntasks:\n  - id: parent-seq\n    type: org.kestra.core.tasks.flows.Sequential\n    tasks:\n      - id: t1\n        type: org.kestra.core.tasks.debugs.Return\n        format: "{{task.id}} > {{taskrun.startDate}}"\n      - id: t2\n        type: org.kestra.core.tasks.flows.Sequential\n        tasks:\n          - id: t2-t1\n            type: org.kestra.core.tasks.scripts.Bash\n            commands:\n              - \'exit 1\'\n        errors:\n          - id: error-t1\n            type: org.kestra.core.tasks.debugs.Return\n            format: "Error Trigger ! {{task.id}}"',normalizedContent:'# errors handling\nerrors are special branch of your flow, where you can define how to handle it if any task failed.\n\n2 kinds of errors can be defined :\n\n * global: for the flow and must be at root of the flow.\n * local: that is available for all flowable task, that allow to be only for this tasks and all theirs childs.\n\n# global error\nthis example processes a task which fails immediately. then a tasks sequence is processed in the error branch of the flow.\n\nid: errors\nnamespace: org.kestra.tests\n\ntasks:\n  - id: failed\n    type: org.kestra.core.tasks.scripts.bash\n    commands:\n      - exit 1\nerrors:\n  - id: 2nd\n    type: org.kestra.core.tasks.debugs.echo\n    format: i\'m failing {{task.id}}\n    level: info\n\n\n# local error\nin this case, the error branch will be used only if all childs of task t2 have an errors.\nin this specific example, if the task t1 failed, no errors will be used. this is really usefull to do some cleanup of ressource for this tasks only.\n\nid: errors\nnamespace: org.kestra.tests\n\ntasks:\n  - id: parent-seq\n    type: org.kestra.core.tasks.flows.sequential\n    tasks:\n      - id: t1\n        type: org.kestra.core.tasks.debugs.return\n        format: "{{task.id}} > {{taskrun.startdate}}"\n      - id: t2\n        type: org.kestra.core.tasks.flows.sequential\n        tasks:\n          - id: t2-t1\n            type: org.kestra.core.tasks.scripts.bash\n            commands:\n              - \'exit 1\'\n        errors:\n          - id: error-t1\n            type: org.kestra.core.tasks.debugs.return\n            format: "error trigger ! {{task.id}}"',charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"Document your flow",frontmatter:{order:11,meta:[{property:"article:modified_time",content:"2020-11-03T13:38:34.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Document your flow"},{property:"og:description",content:"Document your flow | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/docs/developer-guide/documentation/"},{name:"twitter:title",content:"Document your flow"},{name:"twitter:description",content:"Document your flow | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/docs/developer-guide/documentation/"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Document your flow | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/docs/developer-guide/documentation/",relativePath:"docs/developer-guide/documentation/README.md",key:"v-5a7b3ee8",path:"/docs/developer-guide/documentation/",lastUpdated:"11/3/2020, 1:38:34 PM",headersStr:null,content:"# Document your flow\nYou can document from flow, task, ... in order to explain what is the goal of the current element.\n\nFor this, Kestra allow to add a description attribute where you can write some documentation of the current element.\nDescription must be written on Markdown.\n\nYou can add description attribute on :\n\n * Flow\n * Task\n * Listeners\n * Triggers\n\nAll description will be visible on the ui :",normalizedContent:"# document your flow\nyou can document from flow, task, ... in order to explain what is the goal of the current element.\n\nfor this, kestra allow to add a description attribute where you can write some documentation of the current element.\ndescription must be written on markdown.\n\nyou can add description attribute on :\n\n * flow\n * task\n * listeners\n * triggers\n\nall description will be visible on the ui :",charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"Flow",frontmatter:{order:1,meta:[{property:"article:modified_time",content:"2020-11-12T19:26:26.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Flow"},{property:"og:description",content:"Flow | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/docs/developer-guide/flow/"},{name:"twitter:title",content:"Flow"},{name:"twitter:description",content:"Flow | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/docs/developer-guide/flow/"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Flow | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/docs/developer-guide/flow/",relativePath:"docs/developer-guide/flow/README.md",key:"v-8488a8b4",path:"/docs/developer-guide/flow/",headers:[{level:2,title:"Flow sample",slug:"flow-sample",normalizedTitle:"flow sample",charIndex:107},{level:2,title:"Flow Properties",slug:"flow-properties",normalizedTitle:"flow properties",charIndex:359}],lastUpdated:"11/12/2020, 7:26:26 PM",headersStr:"Flow sample Flow Properties",content:'# Flow\n> Flow is the base of your workload, it defined all the tasks you want to do and theirs orders.\n\n\n# Flow sample\nThe flow model is a yaml document describing how Kestra will schedule and compute your workload.\n\nHere is a full sample flow demonstrating the flow definition.\nThe following code is a sample existing task in Kestra for testing purposes.\n\n# Flow Properties\nid: samples \nnamespace: org.kestra.tests \nrevision: 8\n\ndescription: "Some flow **documentation** in *Markdown*"\n\ninputs:\n  - name: my-value\n    type: STRING\n    required: false\n\nvariables:\n  first: "1"\n  second: "{{vars.first}} > 2"\n  third: "{{vars.second}} > 3"\n\ntasks: \n  - id: date \n    type: org.kestra.core.tasks.debugs.Return\n    description: "Some tasks **documentation** in *Markdown*"\n    disabled: false\n    format: "A log line content with a contextual date variable {{taskrun.startDate}}" \n\nerrors: \n  - id: failed-echo \n    type: org.kestra.core.tasks.debugs.Echo  \n    format: I\'m failing {{task.id}}\n\nlisteners:\n  - description: "some listener **documentation** in *Markdown*"\n    conditions:\n      - type: org.kestra.core.models.conditions.types.ExecutionStatusCondition\n        in:\n          - SUCCESS\n    tasks:\n      - id: execution-failed-listener\n        type: org.kestra.core.tasks.scripts.Bash\n        commands:\n          - echo "I\'m a listeners"\n\ntriggers:\n  - id: monthly\n    type: org.kestra.core.models.triggers.types.Schedule\n    description: "some trigger **documentation** in *Markdown*"\n    cron: 0 0 1 * *\n    backfill:\n      start: 2020-01-01T00:00:00+02:00\n\n\nField                       Description                                                                                                                                        \nid                          Flow identifier, must be unique across namespaces.                                                                                                 \nnamespace                   Each task live in one arbitrary namespace, this is useful for task organisation. Namespace is required.                                            \nrevision                    Flow version, handle internally by kestra, and will be incremented for each modifications save, not required since autogenerated.                  \ndescription                 Description for documentation, more details here                                                                                                   \ninputs                      List of inputs for current flow, more details here                                                                                                 \ninputs.[].name              The name for this inputs, allowing to use it as vars on the current flow                                                                           \ninputs.[].type              The type for this inputs, for example (STRING, FILE, ...)                                                                                          \ninputs.[].required          If the input is required (and prevent flow to be executed without this input                                                                       \nvariables                   A list of variables (as key, value) for the current flow that can be reach with {{ vars.name }}                                                    \ntasks                       A list of related tasks the current flow, all tasks will be run sequentially.                                                                      \ntasks.[].id                 The task id that must be unique for current flow.                                                                                                  \ntasks.[].type               The task type that is a full java class name.                                                                                                      \ntasks.[].description        Description for documentation, more details here                                                                                                   \ntasks.[].disabled           Disabled this task, will be keep on flow source, but never executed.                                                                               \ntasks.[].xxx                Each task type come with specific specific field that is documented on plugins page                                                                \nerrors                      A list of errors tasks the current flow, all tasks will be run sequentially and will be run only if there is any error on the current execution.   \nerrors.[].xxx               The same property as tasks, error can be any normal tasks, more details here                                                                       \nlisteners                   List of listeners for current flow, more details here                                                                                              \nlisteners.[].description    Description for documentation, more details here                                                                                                   \nlisteners.[].condition      The condition that will be valided in order to launch or skip this listeners                                                                       \nlisteners.[].tasks.[].xxx   The same property as tasks, the task to run for this listeners                                                                                     \ntriggers                    Triggers are external events (like date for example) to launch this jobs,more details here                                                         \ntriggers.[].id              The trigger id that must be unique and can\'t be updated.                                                                                           \ntriggers.[].type            The trigger type that is a full java class name.                                                                                                   \ntriggers.[].description     Description for documentation, more details here                                                                                                   \ntriggers.[].xxx             Like task, each trigger have theirs properties',normalizedContent:'# flow\n> flow is the base of your workload, it defined all the tasks you want to do and theirs orders.\n\n\n# flow sample\nthe flow model is a yaml document describing how kestra will schedule and compute your workload.\n\nhere is a full sample flow demonstrating the flow definition.\nthe following code is a sample existing task in kestra for testing purposes.\n\n# flow properties\nid: samples \nnamespace: org.kestra.tests \nrevision: 8\n\ndescription: "some flow **documentation** in *markdown*"\n\ninputs:\n  - name: my-value\n    type: string\n    required: false\n\nvariables:\n  first: "1"\n  second: "{{vars.first}} > 2"\n  third: "{{vars.second}} > 3"\n\ntasks: \n  - id: date \n    type: org.kestra.core.tasks.debugs.return\n    description: "some tasks **documentation** in *markdown*"\n    disabled: false\n    format: "a log line content with a contextual date variable {{taskrun.startdate}}" \n\nerrors: \n  - id: failed-echo \n    type: org.kestra.core.tasks.debugs.echo  \n    format: i\'m failing {{task.id}}\n\nlisteners:\n  - description: "some listener **documentation** in *markdown*"\n    conditions:\n      - type: org.kestra.core.models.conditions.types.executionstatuscondition\n        in:\n          - success\n    tasks:\n      - id: execution-failed-listener\n        type: org.kestra.core.tasks.scripts.bash\n        commands:\n          - echo "i\'m a listeners"\n\ntriggers:\n  - id: monthly\n    type: org.kestra.core.models.triggers.types.schedule\n    description: "some trigger **documentation** in *markdown*"\n    cron: 0 0 1 * *\n    backfill:\n      start: 2020-01-01t00:00:00+02:00\n\n\nfield                       description                                                                                                                                        \nid                          flow identifier, must be unique across namespaces.                                                                                                 \nnamespace                   each task live in one arbitrary namespace, this is useful for task organisation. namespace is required.                                            \nrevision                    flow version, handle internally by kestra, and will be incremented for each modifications save, not required since autogenerated.                  \ndescription                 description for documentation, more details here                                                                                                   \ninputs                      list of inputs for current flow, more details here                                                                                                 \ninputs.[].name              the name for this inputs, allowing to use it as vars on the current flow                                                                           \ninputs.[].type              the type for this inputs, for example (string, file, ...)                                                                                          \ninputs.[].required          if the input is required (and prevent flow to be executed without this input                                                                       \nvariables                   a list of variables (as key, value) for the current flow that can be reach with {{ vars.name }}                                                    \ntasks                       a list of related tasks the current flow, all tasks will be run sequentially.                                                                      \ntasks.[].id                 the task id that must be unique for current flow.                                                                                                  \ntasks.[].type               the task type that is a full java class name.                                                                                                      \ntasks.[].description        description for documentation, more details here                                                                                                   \ntasks.[].disabled           disabled this task, will be keep on flow source, but never executed.                                                                               \ntasks.[].xxx                each task type come with specific specific field that is documented on plugins page                                                                \nerrors                      a list of errors tasks the current flow, all tasks will be run sequentially and will be run only if there is any error on the current execution.   \nerrors.[].xxx               the same property as tasks, error can be any normal tasks, more details here                                                                       \nlisteners                   list of listeners for current flow, more details here                                                                                              \nlisteners.[].description    description for documentation, more details here                                                                                                   \nlisteners.[].condition      the condition that will be valided in order to launch or skip this listeners                                                                       \nlisteners.[].tasks.[].xxx   the same property as tasks, the task to run for this listeners                                                                                     \ntriggers                    triggers are external events (like date for example) to launch this jobs,more details here                                                         \ntriggers.[].id              the trigger id that must be unique and can\'t be updated.                                                                                           \ntriggers.[].type            the trigger type that is a full java class name.                                                                                                   \ntriggers.[].description     description for documentation, more details here                                                                                                   \ntriggers.[].xxx             like task, each trigger have theirs properties',charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"Flowable Task",frontmatter:{order:2,meta:[{property:"article:modified_time",content:"2020-12-01T14:17:58.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Flowable Task"},{property:"og:description",content:"Flowable Task | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/docs/developer-guide/flowable/"},{name:"twitter:title",content:"Flowable Task"},{name:"twitter:description",content:"Flowable Task | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/docs/developer-guide/flowable/"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Flowable Task | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/docs/developer-guide/flowable/",relativePath:"docs/developer-guide/flowable/README.md",key:"v-2a1991f2",path:"/docs/developer-guide/flowable/",headers:[{level:2,title:"Sequential",slug:"sequential",normalizedTitle:"sequential",charIndex:419},{level:2,title:"Parallel",slug:"parallel",normalizedTitle:"parallel",charIndex:1030},{level:2,title:"Switch",slug:"switch",normalizedTitle:"switch",charIndex:338},{level:2,title:"EachSequential",slug:"eachsequential",normalizedTitle:"eachsequential",charIndex:2583},{level:2,title:"EachParallel",slug:"eachparallel",normalizedTitle:"eachparallel",charIndex:3441},{level:2,title:"AllowFailure",slug:"allowfailure",normalizedTitle:"allowfailure",charIndex:4177},{level:2,title:"Flow",slug:"flow",normalizedTitle:"flow",charIndex:2},{level:2,title:"Templates",slug:"templates",normalizedTitle:"templates",charIndex:5634}],lastUpdated:"12/1/2020, 2:17:58 PM",headersStr:"Sequential Parallel Switch EachSequential EachParallel AllowFailure Flow Templates",content:'# Flowable Task\nIn kestra, we orchestrate your workflow with Flowable Tasks. These tasks don\'t compute any things but allow you to build more complex workflow.\nLike branching, doing tasks in parallel, ...\n\nFlowable mostly use context with variables in order to define next tasks.\nFor example, you can use the outputs of a variables to do Switch to defined the next tasks.\n\nHere is the current list of Flowable Tasks\n\n# Sequential\nThis flow processes tasks ones after others sequentially.\nMostly use in order to group tasks.\n\nid: sequential\nnamespace: org.kestra.tests\n\ntasks:\n  - id: sequential\n    type: org.kestra.core.tasks.flows.Sequential\n    tasks:\n      - id: 1st\n        type: org.kestra.core.tasks.debugs.Return\n        format: "{{task.id}} > {{taskrun.startDate}}"\n      - id: 2nd\n        type: org.kestra.core.tasks.debugs.Return\n        format: "{{task.id}} > {{taskrun.id}}"\n  - id: last\n    type: org.kestra.core.tasks.debugs.Return\n    format: "{{task.id}} > {{taskrun.startDate}}"\n\n\nSequential Task documentation# Parallel\nThis flow processes tasks in parallel. It makes it convinient to process many tasks at once.\n\nid: parallel\nnamespace: org.kestra.tests\n\ntasks:\n  - id: parallel\n    type: org.kestra.core.tasks.flows.Parallel\n    tasks:\n      - id: 1st\n        type: org.kestra.core.tasks.debugs.Return\n        format: "{{task.id}} > {{taskrun.startDate}}"\n      - id: 2nd\n        type: org.kestra.core.tasks.debugs.Return\n        format: "{{task.id}} > {{taskrun.id}}"\n  - id: last\n    type: org.kestra.core.tasks.debugs.Return\n    format: "{{task.id}} > {{taskrun.startDate}}"\n\n\nParallel Task documentation# Switch\nThis flow processes some tasks conditionnaly depending on a contextual value.\nIn this case, an input value will trigger only some parts of the flow.\n\nid: switch\nnamespace: org.kestra.tests\n\ninputs:\n  - name: string\n    type: STRING\n    required: true\n\ntasks:\n  - id: switch\n    type: org.kestra.core.tasks.flows.Switch\n    value: "{{inputs.string}}"\n    cases:\n      FIRST:\n        - id: 1st\n          type: org.kestra.core.tasks.debugs.Return\n          format: "{{task.id}} > {{taskrun.startDate}}"\n      SECOND:\n        - id: 2nd\n          type: org.kestra.core.tasks.debugs.Return\n          format: "{{task.id}} > {{taskrun.startDate}}"\n      THIRD:\n        - id: 3th\n          type: org.kestra.core.tasks.debugs.Return\n          format: "{{task.id}} > {{taskrun.startDate}}"\n    defaults:\n      - id: default\n        type: org.kestra.core.tasks.debugs.Return\n        format: "{{task.id}} > {{taskrun.startDate}}"\n\n\nSwitch Task documentation# EachSequential\nThis flow will generate many tasks at runtime depending on a value field.\nHere this field is static, but it can be generated from a previous task output and\ntrigger an arbitrary number of subtasks. Each subtask will run after others sequentially.\n\nid: each\nnamespace: org.kestra.tests\n\ntasks:\n  - id: each\n    type: org.kestra.core.tasks.flows.EachSequential\n    value: \'["value 1", "value 2", "value 3"]\'\n    tasks:\n      - id: 1st\n        type: org.kestra.core.tasks.debugs.Return\n        format: "{{task.id}} > {{taskrun.value}} > {{taskrun.startDate}}"\n      - id: 2nd\n        type: org.kestra.core.tasks.debugs.Return\n        format: "{{task.id}} > {{taskrun.value}} > {{taskrun.startDate}}"\n  - id: last\n    type: org.kestra.core.tasks.debugs.Return\n    format: "{{task.id}} > {{taskrun.startDate}}"\n\n\nEachSequential Task documentation# EachParallel\nThis flow is the same as EachSequential but each subtask will run after in parallel.\n\nid: each-parallel\nnamespace: org.kestra.tests\n\ntasks:\n  - id: 1_each\n    type: org.kestra.core.tasks.flows.EachParallel\n    value: \'["value 1", "value 2", "value 3"]\'\n    tasks:\n      - id: 1-1\n        type: org.kestra.core.tasks.scripts.Bash\n        commands:\n          - \'echo "{{task.id}} > $(date +"%T.%N")"\'\n          - \'sleep 1\'\n      - id: 1-2\n        type: org.kestra.core.tasks.scripts.Bash\n        commands:\n          - \'echo "{{task.id}} > $(date +"%T.%N")"\'\n          - \'sleep 1\'\n  - id: 2_end\n    type: org.kestra.core.tasks.debugs.Return\n    format: "{{task.id}} > {{taskrun.startDate}}"\n\n\nEachParallel Task documentation# AllowFailure\nThis task will allow a failed child task. If any child task failed:\n\n * AllowFailure will be marked as WARNING\n * All children task inside the AllowFailure will be stopped immediately\n * The execution will continue for all others tasks.\n * at the end, the execution will be also marked as status WARNING\n\nIn this example:\n\n * allow-failure will WARNING\n * ko will be FAILED\n * next will not be run\n * end will be run and SUCCESS\n\nid: each\nnamespace: org.kestra.tests\n\ntasks:\n  - id: allow-failure\n    type: org.kestra.core.tasks.flows.AllowFailure\n    tasks:\n      - id: ko\n        type: org.kestra.core.tasks.scripts.Bash\n        commands:\n          - \'exit 1\'\n      - id: next\n        type: org.kestra.core.tasks.debugs.Return\n        format: "{{task.id}} > {{taskrun.startDate}}"\n  - id: end\n    type: org.kestra.core.tasks.debugs.Return\n    format: "{{task.id}} > {{taskrun.startDate}}"\n\n\nAllowFailure Task documentation# Flow\nThis flow will trigger another one.\nThis allows to decouple the first one from the second one and to monitor each flows individually.\n\nYou can pass outputs to the trigger flow as inputs (that you need to declare in the subflow).\n\nid: each\nnamespace: org.kestra.tests\nrevision: 8\ntasks:\n  - id: "subflow"  \n    type: org.kestra.core.tasks.flows.Flow\n    namespace: org.kestra.tests\n    flowId: my-sub-flows\n    inputs:\n      file: "{{ outputs.my-task.files.resolver\' }}"\n      store: 12\n\n\nFlow Task documentation# Templates\nTemplates are a special task that will include task from a template at runtime.\nYou defined the template and can use on every flow you want, allowing to share the common tasks between your flows.\n\nid: each\nnamespace: org.kestra.tests\nrevision: 8\ntasks:\n  - id: template\n    type: org.kestra.core.tasks.flows.Template\n    namespace: org.kestra.tests\n    templateId: template\n\n\nTemplate Task documentation',normalizedContent:'# flowable task\nin kestra, we orchestrate your workflow with flowable tasks. these tasks don\'t compute any things but allow you to build more complex workflow.\nlike branching, doing tasks in parallel, ...\n\nflowable mostly use context with variables in order to define next tasks.\nfor example, you can use the outputs of a variables to do switch to defined the next tasks.\n\nhere is the current list of flowable tasks\n\n# sequential\nthis flow processes tasks ones after others sequentially.\nmostly use in order to group tasks.\n\nid: sequential\nnamespace: org.kestra.tests\n\ntasks:\n  - id: sequential\n    type: org.kestra.core.tasks.flows.sequential\n    tasks:\n      - id: 1st\n        type: org.kestra.core.tasks.debugs.return\n        format: "{{task.id}} > {{taskrun.startdate}}"\n      - id: 2nd\n        type: org.kestra.core.tasks.debugs.return\n        format: "{{task.id}} > {{taskrun.id}}"\n  - id: last\n    type: org.kestra.core.tasks.debugs.return\n    format: "{{task.id}} > {{taskrun.startdate}}"\n\n\nsequential task documentation# parallel\nthis flow processes tasks in parallel. it makes it convinient to process many tasks at once.\n\nid: parallel\nnamespace: org.kestra.tests\n\ntasks:\n  - id: parallel\n    type: org.kestra.core.tasks.flows.parallel\n    tasks:\n      - id: 1st\n        type: org.kestra.core.tasks.debugs.return\n        format: "{{task.id}} > {{taskrun.startdate}}"\n      - id: 2nd\n        type: org.kestra.core.tasks.debugs.return\n        format: "{{task.id}} > {{taskrun.id}}"\n  - id: last\n    type: org.kestra.core.tasks.debugs.return\n    format: "{{task.id}} > {{taskrun.startdate}}"\n\n\nparallel task documentation# switch\nthis flow processes some tasks conditionnaly depending on a contextual value.\nin this case, an input value will trigger only some parts of the flow.\n\nid: switch\nnamespace: org.kestra.tests\n\ninputs:\n  - name: string\n    type: string\n    required: true\n\ntasks:\n  - id: switch\n    type: org.kestra.core.tasks.flows.switch\n    value: "{{inputs.string}}"\n    cases:\n      first:\n        - id: 1st\n          type: org.kestra.core.tasks.debugs.return\n          format: "{{task.id}} > {{taskrun.startdate}}"\n      second:\n        - id: 2nd\n          type: org.kestra.core.tasks.debugs.return\n          format: "{{task.id}} > {{taskrun.startdate}}"\n      third:\n        - id: 3th\n          type: org.kestra.core.tasks.debugs.return\n          format: "{{task.id}} > {{taskrun.startdate}}"\n    defaults:\n      - id: default\n        type: org.kestra.core.tasks.debugs.return\n        format: "{{task.id}} > {{taskrun.startdate}}"\n\n\nswitch task documentation# eachsequential\nthis flow will generate many tasks at runtime depending on a value field.\nhere this field is static, but it can be generated from a previous task output and\ntrigger an arbitrary number of subtasks. each subtask will run after others sequentially.\n\nid: each\nnamespace: org.kestra.tests\n\ntasks:\n  - id: each\n    type: org.kestra.core.tasks.flows.eachsequential\n    value: \'["value 1", "value 2", "value 3"]\'\n    tasks:\n      - id: 1st\n        type: org.kestra.core.tasks.debugs.return\n        format: "{{task.id}} > {{taskrun.value}} > {{taskrun.startdate}}"\n      - id: 2nd\n        type: org.kestra.core.tasks.debugs.return\n        format: "{{task.id}} > {{taskrun.value}} > {{taskrun.startdate}}"\n  - id: last\n    type: org.kestra.core.tasks.debugs.return\n    format: "{{task.id}} > {{taskrun.startdate}}"\n\n\neachsequential task documentation# eachparallel\nthis flow is the same as eachsequential but each subtask will run after in parallel.\n\nid: each-parallel\nnamespace: org.kestra.tests\n\ntasks:\n  - id: 1_each\n    type: org.kestra.core.tasks.flows.eachparallel\n    value: \'["value 1", "value 2", "value 3"]\'\n    tasks:\n      - id: 1-1\n        type: org.kestra.core.tasks.scripts.bash\n        commands:\n          - \'echo "{{task.id}} > $(date +"%t.%n")"\'\n          - \'sleep 1\'\n      - id: 1-2\n        type: org.kestra.core.tasks.scripts.bash\n        commands:\n          - \'echo "{{task.id}} > $(date +"%t.%n")"\'\n          - \'sleep 1\'\n  - id: 2_end\n    type: org.kestra.core.tasks.debugs.return\n    format: "{{task.id}} > {{taskrun.startdate}}"\n\n\neachparallel task documentation# allowfailure\nthis task will allow a failed child task. if any child task failed:\n\n * allowfailure will be marked as warning\n * all children task inside the allowfailure will be stopped immediately\n * the execution will continue for all others tasks.\n * at the end, the execution will be also marked as status warning\n\nin this example:\n\n * allow-failure will warning\n * ko will be failed\n * next will not be run\n * end will be run and success\n\nid: each\nnamespace: org.kestra.tests\n\ntasks:\n  - id: allow-failure\n    type: org.kestra.core.tasks.flows.allowfailure\n    tasks:\n      - id: ko\n        type: org.kestra.core.tasks.scripts.bash\n        commands:\n          - \'exit 1\'\n      - id: next\n        type: org.kestra.core.tasks.debugs.return\n        format: "{{task.id}} > {{taskrun.startdate}}"\n  - id: end\n    type: org.kestra.core.tasks.debugs.return\n    format: "{{task.id}} > {{taskrun.startdate}}"\n\n\nallowfailure task documentation# flow\nthis flow will trigger another one.\nthis allows to decouple the first one from the second one and to monitor each flows individually.\n\nyou can pass outputs to the trigger flow as inputs (that you need to declare in the subflow).\n\nid: each\nnamespace: org.kestra.tests\nrevision: 8\ntasks:\n  - id: "subflow"  \n    type: org.kestra.core.tasks.flows.flow\n    namespace: org.kestra.tests\n    flowid: my-sub-flows\n    inputs:\n      file: "{{ outputs.my-task.files.resolver\' }}"\n      store: 12\n\n\nflow task documentation# templates\ntemplates are a special task that will include task from a template at runtime.\nyou defined the template and can use on every flow you want, allowing to share the common tasks between your flows.\n\nid: each\nnamespace: org.kestra.tests\nrevision: 8\ntasks:\n  - id: template\n    type: org.kestra.core.tasks.flows.template\n    namespace: org.kestra.tests\n    templateid: template\n\n\ntemplate task documentation',charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"Helpers",frontmatter:{order:10,meta:[{property:"article:modified_time",content:"2020-09-25T19:43:22.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Helpers"},{property:"og:description",content:"Helpers | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/docs/developer-guide/helpers/"},{name:"twitter:title",content:"Helpers"},{name:"twitter:description",content:"Helpers | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/docs/developer-guide/helpers/"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Helpers | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/docs/developer-guide/helpers/",relativePath:"docs/developer-guide/helpers/README.md",key:"v-7db39c08",path:"/docs/developer-guide/helpers/",headers:[{level:2,title:"Expand the flow to be uploaded to the server",slug:"expand-the-flow-to-be-uploaded-to-the-server",normalizedTitle:"expand the flow to be uploaded to the server",charIndex:268},{level:2,title:"[[> file.txt]]: Include another file",slug:"file-txt-include-another-file",normalizedTitle:"[[&gt; file.txt]]: include another file",charIndex:null}],lastUpdated:"9/25/2020, 7:43:22 PM",headersStr:"Expand the flow to be uploaded to the server [[> file.txt]]: Include another file",content:'# Helpers\nKestra have some helpers function that can help during flow development.\n\nWARNING\n\nThese helpers are only available during flow development in order to test on your local installation.\nYou must expand the flow definition before sending it to your server.\n\n# Expand the flow to be uploaded to the server\nThere is a convient task on Kestra executable that allow validation of the current flow and\nwill output the expanded version of your flow without any helper :\n\n./kestra flow validate path-to-your-flow.yaml \n\n\n# [[> file.txt]]: Include another file\nWhen doing a large flow, the flow can be messy when a lot of tasks are defined and\nspecially when you have some big text inside the flow (example, sql statement, ...).\n\nLet\'s take an example :\n\nid: include\nnamespace: org.kestra.tests\n\ntasks:\n- id: t1\n  type: org.kestra.core.tasks.debugs.Return\n  format: |\n    Lorem Ipsum is simply dummy text of the printing \n    .....\n    500 lines later\n\n\nYou can replace the flow with this one :\n\nid: include\nnamespace: org.kestra.tests\n\ntasks:\n- id: t1\n  type: org.kestra.core.tasks.debugs.Return\n  format: "[[> lorem.txt]]"\n\n\nand have a local file lorem.txt with the large content.\n\nThe path can be :\n\n * [[> lorem.txt]]: a relative path from the flow (flow.yaml & lorem.txt are on the same directory)\n * [[> /path/to/lorem.txt]]: an absolute path\n * [[> path/to/lorem.txt]]: a relative path from the flow (flow.yaml with a subdirectory path/to/)',normalizedContent:'# helpers\nkestra have some helpers function that can help during flow development.\n\nwarning\n\nthese helpers are only available during flow development in order to test on your local installation.\nyou must expand the flow definition before sending it to your server.\n\n# expand the flow to be uploaded to the server\nthere is a convient task on kestra executable that allow validation of the current flow and\nwill output the expanded version of your flow without any helper :\n\n./kestra flow validate path-to-your-flow.yaml \n\n\n# [[> file.txt]]: include another file\nwhen doing a large flow, the flow can be messy when a lot of tasks are defined and\nspecially when you have some big text inside the flow (example, sql statement, ...).\n\nlet\'s take an example :\n\nid: include\nnamespace: org.kestra.tests\n\ntasks:\n- id: t1\n  type: org.kestra.core.tasks.debugs.return\n  format: |\n    lorem ipsum is simply dummy text of the printing \n    .....\n    500 lines later\n\n\nyou can replace the flow with this one :\n\nid: include\nnamespace: org.kestra.tests\n\ntasks:\n- id: t1\n  type: org.kestra.core.tasks.debugs.return\n  format: "[[> lorem.txt]]"\n\n\nand have a local file lorem.txt with the large content.\n\nthe path can be :\n\n * [[> lorem.txt]]: a relative path from the flow (flow.yaml & lorem.txt are on the same directory)\n * [[> /path/to/lorem.txt]]: an absolute path\n * [[> path/to/lorem.txt]]: a relative path from the flow (flow.yaml with a subdirectory path/to/)',charsets:{cjk:!0},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"Inputs",frontmatter:{order:3,meta:[{property:"article:modified_time",content:"2020-03-03T13:58:59.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Inputs"},{property:"og:description",content:"Inputs | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/docs/developer-guide/inputs/"},{name:"twitter:title",content:"Inputs"},{name:"twitter:description",content:"Inputs | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/docs/developer-guide/inputs/"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Inputs | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/docs/developer-guide/inputs/",relativePath:"docs/developer-guide/inputs/README.md",key:"v-019a6270",path:"/docs/developer-guide/inputs/",headers:[{level:2,title:"Declaring inputs",slug:"declaring-inputs",normalizedTitle:"declaring inputs",charIndex:319},{level:2,title:"Input types",slug:"input-types",normalizedTitle:"input types",charIndex:1224},{level:3,title:"STRING",slug:"string",normalizedTitle:"string",charIndex:874},{level:3,title:"INT",slug:"int",normalizedTitle:"int",charIndex:980},{level:3,title:"FLOAT",slug:"float",normalizedTitle:"float",charIndex:1029},{level:3,title:"DATETIME",slug:"datetime",normalizedTitle:"datetime",charIndex:1082},{level:3,title:"FILE",slug:"file",normalizedTitle:"file",charIndex:1138},{level:2,title:"Using input value in flow",slug:"using-input-value-in-flow",normalizedTitle:"using input value in flow",charIndex:1901},{level:2,title:"Send inputs programmatically",slug:"send-inputs-programmatically",normalizedTitle:"send inputs programmatically",charIndex:2222},{level:2,title:"Send inputs via WebUI",slug:"send-inputs-via-webui",normalizedTitle:"send inputs via webui",charIndex:2814}],lastUpdated:"3/3/2020, 1:58:59 PM",headersStr:"Declaring inputs Input types STRING INT FLOAT DATETIME FILE Using input value in flow Send inputs programmatically Send inputs via WebUI",content:'# Inputs\nKestra\'s flow can be parametrized using inputs. Inputs will be available in variable\ncontext and can be used during the whole flow, in order to customize it depending on\ninputs.\n\nA good example is you need to have an identifier (ex: storeId, paymentId) in order to\nchange save path for the uplodated files.\n\n# Declaring inputs\nYou can declare as many inputs for any flow. Input can be required or not.\nIf the input are required, the flow couldn\'t start if the input are not provide during the\ncreation of the execution.\nAlso, every inputs will be parsed during the creation of the execution and any invalid\ninputs will refuse to create the execution.\n\nWARNING\n\nIf the execution is not created due to invalid or missing inputs, no execution will be\nfound on the executions list.\n\nExamples:\n\nid: my-flow\nnamespace: org.kestra.docs\n\ninputs:\n  - name: string\n    type: STRING\n    required: true\n  - name: optional\n    type: STRING\n    required: false\n  - name: int\n    type: INT\n    required: true\n  - name: float\n    type: FLOAT\n    required: true\n  - name: instant\n    type: DATETIME\n    required: true\n  - name: my-file\n    type: FILE\n    required: true\n  - name: optionalFile\n    type: FILE\n    required: false\n\n\n# Input types\nHere are the following input fields available :\n\n# STRING\nNo control is done on this input type (no parsing), can be any string.\n\n# INT\nMust be a valid integer (without any decimals).\n\n# FLOAT\nMust be a valid float (with any decimals).\n\n# DATETIME\nMust be a valid valid full ISO 8601 datetime with timezone in UTC from a text string such as\n2007-12-03T10:15:30.00Z.\n\n# FILE\nMust be a files send with multipart/form-data. All the file are automatically uploaded\nto Storage and is available for further task. The return will be a full qualified url\nwith the form kestra:///.../.../, Kestra are able to handle this url and this inputs can\nbe passed as is to tasks.\n\n# Using input value in flow\nEvery input is available with dynamic variable like : {{ inputs.NAME }}.\n\nFor example, considering that you declare your input :\n\ninputs:\n  - name: my-file\n    type: FILE\n  - name: my-value\n    type: STRING\n    required: true\n\n\nYou can use the value of the inputs with {{ inputs.my-value }}.\n\n# Send inputs programmatically\nThe flow my-flow above can be triggered programmaticaly, here is an example with curl:\n\ncurl -v "http://kestra:8080/api/v1/executions/trigger/org.kestra.docs/my-flow" \\\n    -H "Transfer-Encoding:chunked" \\\n    -H "Content-Type:multipart/form-data" \\\n    -F string="a string"  \\\n    -F optional="an optionnal string"  \\\n    -F int=1  \\\n    -F float=1.255  \\\n    -F instant=2020-01-14T23:00:00.000Z \\\n    -F "files=@/tmp/128M.txt;filename=my-file"\n\n\nAll files must be send in a form data files with an header filename=my-file that\nwill be the name of the input.\n\n# Send inputs via WebUI\nWith such flow, the web ui let you input some inputs by generating a form accordingly\non the flow > trigger view. The input form for the task above looks like below :\n\n\n\nOnce inputs filled, you can trigger a flow execution that will run with\ncontextual inputs as task variables.',normalizedContent:'# inputs\nkestra\'s flow can be parametrized using inputs. inputs will be available in variable\ncontext and can be used during the whole flow, in order to customize it depending on\ninputs.\n\na good example is you need to have an identifier (ex: storeid, paymentid) in order to\nchange save path for the uplodated files.\n\n# declaring inputs\nyou can declare as many inputs for any flow. input can be required or not.\nif the input are required, the flow couldn\'t start if the input are not provide during the\ncreation of the execution.\nalso, every inputs will be parsed during the creation of the execution and any invalid\ninputs will refuse to create the execution.\n\nwarning\n\nif the execution is not created due to invalid or missing inputs, no execution will be\nfound on the executions list.\n\nexamples:\n\nid: my-flow\nnamespace: org.kestra.docs\n\ninputs:\n  - name: string\n    type: string\n    required: true\n  - name: optional\n    type: string\n    required: false\n  - name: int\n    type: int\n    required: true\n  - name: float\n    type: float\n    required: true\n  - name: instant\n    type: datetime\n    required: true\n  - name: my-file\n    type: file\n    required: true\n  - name: optionalfile\n    type: file\n    required: false\n\n\n# input types\nhere are the following input fields available :\n\n# string\nno control is done on this input type (no parsing), can be any string.\n\n# int\nmust be a valid integer (without any decimals).\n\n# float\nmust be a valid float (with any decimals).\n\n# datetime\nmust be a valid valid full iso 8601 datetime with timezone in utc from a text string such as\n2007-12-03t10:15:30.00z.\n\n# file\nmust be a files send with multipart/form-data. all the file are automatically uploaded\nto storage and is available for further task. the return will be a full qualified url\nwith the form kestra:///.../.../, kestra are able to handle this url and this inputs can\nbe passed as is to tasks.\n\n# using input value in flow\nevery input is available with dynamic variable like : {{ inputs.name }}.\n\nfor example, considering that you declare your input :\n\ninputs:\n  - name: my-file\n    type: file\n  - name: my-value\n    type: string\n    required: true\n\n\nyou can use the value of the inputs with {{ inputs.my-value }}.\n\n# send inputs programmatically\nthe flow my-flow above can be triggered programmaticaly, here is an example with curl:\n\ncurl -v "http://kestra:8080/api/v1/executions/trigger/org.kestra.docs/my-flow" \\\n    -h "transfer-encoding:chunked" \\\n    -h "content-type:multipart/form-data" \\\n    -f string="a string"  \\\n    -f optional="an optionnal string"  \\\n    -f int=1  \\\n    -f float=1.255  \\\n    -f instant=2020-01-14t23:00:00.000z \\\n    -f "files=@/tmp/128m.txt;filename=my-file"\n\n\nall files must be send in a form data files with an header filename=my-file that\nwill be the name of the input.\n\n# send inputs via webui\nwith such flow, the web ui let you input some inputs by generating a form accordingly\non the flow > trigger view. the input form for the task above looks like below :\n\n\n\nonce inputs filled, you can trigger a flow execution that will run with\ncontextual inputs as task variables.',charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"Listeners",frontmatter:{order:8,meta:[{property:"article:modified_time",content:"2020-09-21T19:33:35.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Listeners"},{property:"og:description",content:"Listeners | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/docs/developer-guide/listeners/"},{name:"twitter:title",content:"Listeners"},{name:"twitter:description",content:"Listeners | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/docs/developer-guide/listeners/"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Listeners | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/docs/developer-guide/listeners/",relativePath:"docs/developer-guide/listeners/README.md",key:"v-a824f470",path:"/docs/developer-guide/listeners/",lastUpdated:"9/21/2020, 7:33:35 PM",headersStr:null,content:"# Listeners\nListeners are special task that can listen to the current flow and launch task outside of the flow.\nThe result of the tasks will not change the execution status. Mostly Listeners are here to send notification or handle special end task behaviour that you don't want to be considered as main workflow.\n\nWARNING\n\nTODO",normalizedContent:"# listeners\nlisteners are special task that can listen to the current flow and launch task outside of the flow.\nthe result of the tasks will not change the execution status. mostly listeners are here to send notification or handle special end task behaviour that you don't want to be considered as main workflow.\n\nwarning\n\ntodo",charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"Outputs",frontmatter:{order:4,meta:[{property:"article:modified_time",content:"2020-10-28T07:10:20.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Outputs"},{property:"og:description",content:"Outputs | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/docs/developer-guide/outputs/"},{name:"twitter:title",content:"Outputs"},{name:"twitter:description",content:"Outputs | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/docs/developer-guide/outputs/"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Outputs | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/docs/developer-guide/outputs/",relativePath:"docs/developer-guide/outputs/README.md",key:"v-92b626b0",path:"/docs/developer-guide/outputs/",headers:[{level:2,title:"Using outputs",slug:"using-outputs",normalizedTitle:"using outputs",charIndex:356},{level:2,title:"Specific outputs for dynamic tasks",slug:"specific-outputs-for-dynamic-tasks",normalizedTitle:"specific outputs for dynamic tasks",charIndex:1627}],lastUpdated:"10/28/2020, 7:10:20 AM",headersStr:"Using outputs Specific outputs for dynamic tasks",content:'# Outputs\nKestra\'s flow can produce outputs when processing tasks. Output data are stored in flow execution context and can be handled and used by tasks next to the output producer one.\n\nYou can use outputs every where variables are allowed, so it can be used as next task values for iteration or conditional processing or even as extra output content.\n\n# Using outputs\nYou can declare as many outputs for any flow. Outputs context variables are stored following each task declaration.\n\nHere how to use output between tasks into a flow:\n\ntasks:\n- id: produce-output\n  type: org.kestra.core.tasks.debugs.Return\n  format: my output {{ execution.id }}\n- id: use-output\n  type: org.kestra.core.tasks.debugs.Echo\n  format: This task display previous task output {{ outputs.produce-output.value }}\n\n\nIn the example above the first task produces an output with the format yaml property. the ouput content is then used in the second task output formating. Indeed, the use-output task uses the templating system {{ outputs.produce-output.value }} to reference the previous task output.\n\nUsing this template context variable interpolates the bracket reference with the entire output generated by the first task.\n\nnote\n\nThe .value in the template bracket that reach another task\'s output content is a value that depends on what data is produced per value. In our case, for the Return task, the value content is filled with the output. It could be bq_table for another task implemented for big query management. Have a look at each task documentation for specific information about what context variable are filled with ouput contents.\n\n# Specific outputs for dynamic tasks\nAnother more specific case for output management is the runtime generated tasks output variables. It is the case for the EachSequential or EachParallel task that produces dynamically other tasks depending on it\'s value property. In this case it is possible to reach each iteration output individually using the following syntax :\n\nid: output-sample\nnamespace: org.kestra.tests\n\ntasks:\n  - id: 1-output\n    type: org.kestra.core.tasks.flows.EachSequential\n    value: \'["s1", "s2", "s3"]\'\n    tasks:\n        - id: 1_1-produce_output\n        type: org.kestra.core.tasks.debugs.Return\n        format: "{{task.id}} > {{taskrun.value}} > {{taskrun.startDate}}"\n  - id: 2_use_output\n    type: org.kestra.core.tasks.debugs.Return\n    format: "Previous task produced output : {{outputs.1_1-produce_output.s1.a.value}}"\n\n\nHere the outputs.1_1-produce_output.s1.a.value reach the first 1-output task element.',normalizedContent:'# outputs\nkestra\'s flow can produce outputs when processing tasks. output data are stored in flow execution context and can be handled and used by tasks next to the output producer one.\n\nyou can use outputs every where variables are allowed, so it can be used as next task values for iteration or conditional processing or even as extra output content.\n\n# using outputs\nyou can declare as many outputs for any flow. outputs context variables are stored following each task declaration.\n\nhere how to use output between tasks into a flow:\n\ntasks:\n- id: produce-output\n  type: org.kestra.core.tasks.debugs.return\n  format: my output {{ execution.id }}\n- id: use-output\n  type: org.kestra.core.tasks.debugs.echo\n  format: this task display previous task output {{ outputs.produce-output.value }}\n\n\nin the example above the first task produces an output with the format yaml property. the ouput content is then used in the second task output formating. indeed, the use-output task uses the templating system {{ outputs.produce-output.value }} to reference the previous task output.\n\nusing this template context variable interpolates the bracket reference with the entire output generated by the first task.\n\nnote\n\nthe .value in the template bracket that reach another task\'s output content is a value that depends on what data is produced per value. in our case, for the return task, the value content is filled with the output. it could be bq_table for another task implemented for big query management. have a look at each task documentation for specific information about what context variable are filled with ouput contents.\n\n# specific outputs for dynamic tasks\nanother more specific case for output management is the runtime generated tasks output variables. it is the case for the eachsequential or eachparallel task that produces dynamically other tasks depending on it\'s value property. in this case it is possible to reach each iteration output individually using the following syntax :\n\nid: output-sample\nnamespace: org.kestra.tests\n\ntasks:\n  - id: 1-output\n    type: org.kestra.core.tasks.flows.eachsequential\n    value: \'["s1", "s2", "s3"]\'\n    tasks:\n        - id: 1_1-produce_output\n        type: org.kestra.core.tasks.debugs.return\n        format: "{{task.id}} > {{taskrun.value}} > {{taskrun.startdate}}"\n  - id: 2_use_output\n    type: org.kestra.core.tasks.debugs.return\n    format: "previous task produced output : {{outputs.1_1-produce_output.s1.a.value}}"\n\n\nhere the outputs.1_1-produce_output.s1.a.value reach the first 1-output task element.',charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"Plugins",frontmatter:{order:12,meta:[{property:"article:modified_time",content:"2020-11-03T13:38:34.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Plugins"},{property:"og:description",content:"Plugins | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/docs/developer-guide/plugins/"},{name:"twitter:title",content:"Plugins"},{name:"twitter:description",content:"Plugins | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/docs/developer-guide/plugins/"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Plugins | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/docs/developer-guide/plugins/",relativePath:"docs/developer-guide/plugins/README.md",key:"v-08c54868",path:"/docs/developer-guide/plugins/",headers:[{level:2,title:"Backend plugins",slug:"backend-plugins",normalizedTitle:"backend plugins",charIndex:295},{level:2,title:"Frontend plugins",slug:"frontend-plugins",normalizedTitle:"frontend plugins",charIndex:489}],lastUpdated:"11/3/2020, 1:38:34 PM",headersStr:"Backend plugins Frontend plugins",content:"# Plugins\nKestra is extensible at core. It allows you to add extra features by providing some developer tools and conviniences to contribute to Kestra's ecosystem.\n\nHave a look at the technical architecture section to understand how is made Kestra and how you should start to create plugins.\n\n# Backend plugins\nThe Kestra's core backend is micronaut / java powered. In order to start developping a plugin for Kestra you have to setup a working development environment on your computer.\n\n# Frontend plugins\nKestra frontend is a vue js webapp. A plugin manager is planned later.",normalizedContent:"# plugins\nkestra is extensible at core. it allows you to add extra features by providing some developer tools and conviniences to contribute to kestra's ecosystem.\n\nhave a look at the technical architecture section to understand how is made kestra and how you should start to create plugins.\n\n# backend plugins\nthe kestra's core backend is micronaut / java powered. in order to start developping a plugin for kestra you have to setup a working development environment on your computer.\n\n# frontend plugins\nkestra frontend is a vue js webapp. a plugin manager is planned later.",charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"Retries",frontmatter:{order:6,meta:[{property:"article:modified_time",content:"2020-09-25T19:43:22.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Retries"},{property:"og:description",content:"Retries | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/docs/developer-guide/retries/"},{name:"twitter:title",content:"Retries"},{name:"twitter:description",content:"Retries | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/docs/developer-guide/retries/"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Retries | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/docs/developer-guide/retries/",relativePath:"docs/developer-guide/retries/README.md",key:"v-7e6b41b0",path:"/docs/developer-guide/retries/",headers:[{level:2,title:"Example",slug:"example",normalizedTitle:"example",charIndex:183},{level:2,title:"Retry options for all type",slug:"retry-options-for-all-type",normalizedTitle:"retry options for all type",charIndex:471},{level:3,title:"Duration",slug:"duration",normalizedTitle:"duration",charIndex:831},{level:3,title:"Retry types",slug:"retry-types",normalizedTitle:"retry types",charIndex:1290}],lastUpdated:"9/25/2020, 7:43:22 PM",headersStr:"Example Retry options for all type Duration Retry types",content:"# Retries\nKestra provide some task retry feature. This sub system makes it convinient to add failed executions retry behavior depending on retry configuration in flow description.\n\n# Example\nBelow a flow sample that retry execute a task on failure maximum 5 times each 15 minutes :\n\n- id: retry-sample\n  type: org.kestra.core.tasks.debugs.Echo\n  format: my output for task {{task.id}}\n  timeout: 1000\n  retry:\n    maxAttempt: 5\n    type: constant\n    interval: PT15M\n\n\n# Retry options for all type\nname          type       description                                                                         \ntype          string     Retry behavior to apply. Can be one of constant, exponential, random.               \nmaxAttempt    integer    Number of retries performed before the system stops retry.                          \nmaxDuration   Duration   Maxium delay the execution is retried. Once passed, the task is no more processed   \n\n# Duration\nSome of the option above have to be filled with duration notation.\nDurations are expressed in ISO 8601 Durations\nand here is some examples :\n\nname       description                \nPT0.250S   250 milliseconds delay     \nPT2S       2 seconds delay            \nPT1M       1 minute delay             \nPT3.5H     3 hours and a half delay   \n\n# Retry types\n# constant\nConstant retry times, when time is set to 10 minutes it retries each 10 minutes\n\nname       type       description                    \ninterval   Duration   Duration between each retry.   \n\n# exponential\nRetry behavior that waits longer between each retry e.g. 1s, 5s, 15s ...\n\nname          type       description                                                                                                                                            \ninterval      Duration   Duration between each retry.                                                                                                                           \ndelayFactor   Double     Multiplier for interval on each retry, default is 2. For example, with and interval=30s and delayFactor=2, retry will append at 30s, 1m30, 3m30, ...   \n\n# random\nRetry with random delay with min and max limits\n\nname          type       description                            \nminInterval   Duration   Minimal duration between each retry.   \nmaxInterval   Duration   Maximum duration between each retry.",normalizedContent:"# retries\nkestra provide some task retry feature. this sub system makes it convinient to add failed executions retry behavior depending on retry configuration in flow description.\n\n# example\nbelow a flow sample that retry execute a task on failure maximum 5 times each 15 minutes :\n\n- id: retry-sample\n  type: org.kestra.core.tasks.debugs.echo\n  format: my output for task {{task.id}}\n  timeout: 1000\n  retry:\n    maxattempt: 5\n    type: constant\n    interval: pt15m\n\n\n# retry options for all type\nname          type       description                                                                         \ntype          string     retry behavior to apply. can be one of constant, exponential, random.               \nmaxattempt    integer    number of retries performed before the system stops retry.                          \nmaxduration   duration   maxium delay the execution is retried. once passed, the task is no more processed   \n\n# duration\nsome of the option above have to be filled with duration notation.\ndurations are expressed in iso 8601 durations\nand here is some examples :\n\nname       description                \npt0.250s   250 milliseconds delay     \npt2s       2 seconds delay            \npt1m       1 minute delay             \npt3.5h     3 hours and a half delay   \n\n# retry types\n# constant\nconstant retry times, when time is set to 10 minutes it retries each 10 minutes\n\nname       type       description                    \ninterval   duration   duration between each retry.   \n\n# exponential\nretry behavior that waits longer between each retry e.g. 1s, 5s, 15s ...\n\nname          type       description                                                                                                                                            \ninterval      duration   duration between each retry.                                                                                                                           \ndelayfactor   double     multiplier for interval on each retry, default is 2. for example, with and interval=30s and delayfactor=2, retry will append at 30s, 1m30, 3m30, ...   \n\n# random\nretry with random delay with min and max limits\n\nname          type       description                            \nmininterval   duration   minimal duration between each retry.   \nmaxinterval   duration   maximum duration between each retry.",charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"Templates",frontmatter:{order:9,meta:[{property:"article:modified_time",content:"2020-11-17T14:49:00.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Templates"},{property:"og:description",content:"Templates | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/docs/developer-guide/templates/"},{name:"twitter:title",content:"Templates"},{name:"twitter:description",content:"Templates | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/docs/developer-guide/templates/"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Templates | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/docs/developer-guide/templates/",relativePath:"docs/developer-guide/templates/README.md",key:"v-2b85cc88",path:"/docs/developer-guide/templates/",headers:[{level:2,title:"Example",slug:"example",normalizedTitle:"example",charIndex:396}],lastUpdated:"11/17/2020, 2:49:00 PM",headersStr:"Example",content:'# Templates\nTemplates are list of tasks that can be shared between flows. You can define a template and call it from other flows allowing to share a list of tasks and keep these task updated without changing your flow.\n\nAll tasks in a template will be executed sequentially, you can provide the same tasks than in standard flow and you can also have an errros path.\n\nTemplate Task documentation# Example\nBelow a flow sample that will include a template :\n\nid: with-template\nnamespace: org.kestra.tests\n\ninputs:\n  - name: store\n    type: STRING\n    required: true\n\ntasks:\n  - id: template\n    type: org.kestra.core.tasks.flows.Template\n    namespace: org.kestra.tests\n    templateId: template\n    args:\n      renamed-store: "{{ inputs.store }}\n\n\nIf the template is defined like that :\n\nid: template\nnamespace: org.kestra.tests\n\ntasks:\n  - id: 1-return\n    type: org.kestra.core.tasks.debugs.Return\n    format: "{{ parent.outputs.args.renamed-store }}"\n\n\nIt will produce a flow same that this one :\n\nid: with-template\nnamespace: org.kestra.tests\n\ntasks:\n  - id: template\n    type: org.kestra.core.tasks.flows.Sequential\n    tasks:\n      - id: 1-return\n        type: org.kestra.core.tasks.debugs.Return\n        format: "{{ inputs.store }}"\n\n\nAll the tasks within the template will be copied at the runtime.\n\nWARNING\n\nFrom the template, you can access all the variables defined on the context executions. But it\'s highly discouraged, the better will be to use args to rename variables from global context to a local one.\n\nBy this way, your template will be usable on many flows. Just think args as argument for a function in code !',normalizedContent:'# templates\ntemplates are list of tasks that can be shared between flows. you can define a template and call it from other flows allowing to share a list of tasks and keep these task updated without changing your flow.\n\nall tasks in a template will be executed sequentially, you can provide the same tasks than in standard flow and you can also have an errros path.\n\ntemplate task documentation# example\nbelow a flow sample that will include a template :\n\nid: with-template\nnamespace: org.kestra.tests\n\ninputs:\n  - name: store\n    type: string\n    required: true\n\ntasks:\n  - id: template\n    type: org.kestra.core.tasks.flows.template\n    namespace: org.kestra.tests\n    templateid: template\n    args:\n      renamed-store: "{{ inputs.store }}\n\n\nif the template is defined like that :\n\nid: template\nnamespace: org.kestra.tests\n\ntasks:\n  - id: 1-return\n    type: org.kestra.core.tasks.debugs.return\n    format: "{{ parent.outputs.args.renamed-store }}"\n\n\nit will produce a flow same that this one :\n\nid: with-template\nnamespace: org.kestra.tests\n\ntasks:\n  - id: template\n    type: org.kestra.core.tasks.flows.sequential\n    tasks:\n      - id: 1-return\n        type: org.kestra.core.tasks.debugs.return\n        format: "{{ inputs.store }}"\n\n\nall the tasks within the template will be copied at the runtime.\n\nwarning\n\nfrom the template, you can access all the variables defined on the context executions. but it\'s highly discouraged, the better will be to use args to rename variables from global context to a local one.\n\nby this way, your template will be usable on many flows. just think args as argument for a function in code !',charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"Flow trigger",frontmatter:{meta:[{property:"article:modified_time",content:"2020-11-06T10:56:31.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Flow trigger"},{property:"og:description",content:"Flow trigger | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/docs/developer-guide/triggers/flow.html"},{name:"twitter:title",content:"Flow trigger"},{name:"twitter:description",content:"Flow trigger | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/docs/developer-guide/triggers/flow.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Flow trigger | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/docs/developer-guide/triggers/flow.html",relativePath:"docs/developer-guide/triggers/flow.md",key:"v-801f5ac2",path:"/docs/developer-guide/triggers/flow.html",headers:[{level:2,title:"Example",slug:"example",normalizedTitle:"example",charIndex:276},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:1083},{level:3,title:"id",slug:"id",normalizedTitle:"id",charIndex:435},{level:3,title:"inputs",slug:"inputs-2",normalizedTitle:"inputs",charIndex:502},{level:3,title:"conditions",slug:"conditions",normalizedTitle:"conditions",charIndex:814},{level:2,title:"Variables",slug:"variables",normalizedTitle:"variables",charIndex:1762}],lastUpdated:"11/6/2020, 10:56:31 AM",headersStr:"Example Inputs id inputs conditions Variables",content:"# Flow trigger\ntype: \"org.kestra.core.models.triggers.types.Schedule\"\n\n\n> Kestra is able to trigger flow after another one. This allows chaining flow without need to update the base flows.\nWith that, you can break responsibility between different flow to different teams.\n\n\n# Example\n> This flow will be triggered after each successfully execution of flow org.kestra.tests.trigger-flow and forward the uri of my-task taskId outputs.\n\n\nid: trigger-flow-listener\nnamespace: org.kestra.tests\nrevision: 1\n\ninputs:\n  - name: from-parent\n    type: STRING\n\ntasks:\n  - id: only-no-input\n    type: org.kestra.core.tasks.debugs.Return\n    format: \"v1: {{trigger.executionId}}\"\n\ntriggers:\n  - id: listen-flow\n    type: org.kestra.core.models.triggers.types.Flow\n    inputs:\n      from-parent: '{{ outputs.my-task.uri }}'\n    conditions:\n      - type: org.kestra.core.models.conditions.types.ExecutionFlowCondition\n        namespace: org.kestra.tests\n        flowId: trigger-flow\n      - type: org.kestra.core.models.conditions.types.ExecutionStatusCondition\n        in:\n          - SUCCESS\n\n\n# Inputs\n# id\n * Type: \n * Required: ✔\n\n> unique for a flow\n\n\n# inputs\n * Type: \n * Required: ❌\n * Dynamic: ✔\n\n> fill input of this flow based on output of current flow, allowing to pass data or file on the triggered flow\n\n\nWARNING\n\nIf you provide invalid input, the flow will be created and already state as FAILED! Since there is no task started, you can't log any reason visible on the ui.\nSo you will need to go to server log to understand the error\n\n# conditions\n * Type: \n * Required: ❌\n\n> List of Conditions in order to limit the flow trigger.\n\n\nWARNING\n\nIf you don't provide any conditions, the flow will be triggered for EVERY execution of EVERY flow on your instance.\n\n# Variables\nWhen the flow is trigger by another one, some context variables will be injected to allow some customization of the flow.\n\nParameter                    Description                                               \n{{ trigger.executionId }}    the execution id that trigger the current flow            \n{{ trigger.namespace }}      the namespace of the flow that trigger the current flow   \n{{ trigger.flowId }}         the flow id that trigger the current flow                 \n{{ trigger.flowRevision }}   the flow revision that trigger the current flow",normalizedContent:"# flow trigger\ntype: \"org.kestra.core.models.triggers.types.schedule\"\n\n\n> kestra is able to trigger flow after another one. this allows chaining flow without need to update the base flows.\nwith that, you can break responsibility between different flow to different teams.\n\n\n# example\n> this flow will be triggered after each successfully execution of flow org.kestra.tests.trigger-flow and forward the uri of my-task taskid outputs.\n\n\nid: trigger-flow-listener\nnamespace: org.kestra.tests\nrevision: 1\n\ninputs:\n  - name: from-parent\n    type: string\n\ntasks:\n  - id: only-no-input\n    type: org.kestra.core.tasks.debugs.return\n    format: \"v1: {{trigger.executionid}}\"\n\ntriggers:\n  - id: listen-flow\n    type: org.kestra.core.models.triggers.types.flow\n    inputs:\n      from-parent: '{{ outputs.my-task.uri }}'\n    conditions:\n      - type: org.kestra.core.models.conditions.types.executionflowcondition\n        namespace: org.kestra.tests\n        flowid: trigger-flow\n      - type: org.kestra.core.models.conditions.types.executionstatuscondition\n        in:\n          - success\n\n\n# inputs\n# id\n * type: \n * required: ✔\n\n> unique for a flow\n\n\n# inputs\n * type: \n * required: ❌\n * dynamic: ✔\n\n> fill input of this flow based on output of current flow, allowing to pass data or file on the triggered flow\n\n\nwarning\n\nif you provide invalid input, the flow will be created and already state as failed! since there is no task started, you can't log any reason visible on the ui.\nso you will need to go to server log to understand the error\n\n# conditions\n * type: \n * required: ❌\n\n> list of conditions in order to limit the flow trigger.\n\n\nwarning\n\nif you don't provide any conditions, the flow will be triggered for every execution of every flow on your instance.\n\n# variables\nwhen the flow is trigger by another one, some context variables will be injected to allow some customization of the flow.\n\nparameter                    description                                               \n{{ trigger.executionid }}    the execution id that trigger the current flow            \n{{ trigger.namespace }}      the namespace of the flow that trigger the current flow   \n{{ trigger.flowid }}         the flow id that trigger the current flow                 \n{{ trigger.flowrevision }}   the flow revision that trigger the current flow",charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"Triggers & schedule",frontmatter:{order:5,meta:[{property:"article:modified_time",content:"2020-09-21T19:33:35.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Triggers & schedule"},{property:"og:description",content:"Triggers & schedule | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/docs/developer-guide/triggers/"},{name:"twitter:title",content:"Triggers & schedule"},{name:"twitter:description",content:"Triggers & schedule | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/docs/developer-guide/triggers/"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Triggers & schedule | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/docs/developer-guide/triggers/",relativePath:"docs/developer-guide/triggers/README.md",key:"v-084d894c",path:"/docs/developer-guide/triggers/",lastUpdated:"9/21/2020, 7:33:35 PM",headersStr:null,content:"# Triggers & schedule\nTriggers are way to start a flow with external events. For example, on a schedule date or waiting for some external events (like file creation or another flow end)\n\nHere is the current available triggers :\n\n * Flow trigger\n * Schedule",normalizedContent:"# triggers & schedule\ntriggers are way to start a flow with external events. for example, on a schedule date or waiting for some external events (like file creation or another flow end)\n\nhere is the current available triggers :\n\n * flow trigger\n * schedule",charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"Schedule",frontmatter:{meta:[{property:"article:modified_time",content:"2020-09-21T19:33:35.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Schedule"},{property:"og:description",content:"Schedule | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/docs/developer-guide/triggers/schedule.html"},{name:"twitter:title",content:"Schedule"},{name:"twitter:description",content:"Schedule | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/docs/developer-guide/triggers/schedule.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Schedule | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/docs/developer-guide/triggers/schedule.html",relativePath:"docs/developer-guide/triggers/schedule.md",key:"v-4a03194d",path:"/docs/developer-guide/triggers/schedule.html",headers:[{level:2,title:"Example",slug:"example",normalizedTitle:"example",charIndex:275},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:444},{level:3,title:"id",slug:"id",normalizedTitle:"id",charIndex:297},{level:3,title:"cron",slug:"cron",normalizedTitle:"cron",charIndex:371},{level:3,title:"backfill",slug:"backfill",normalizedTitle:"backfill",charIndex:396},{level:3,title:"backfill.start",slug:"backfill-start",normalizedTitle:"backfill.start",charIndex:810},{level:2,title:"Backfill",slug:"backfill-2",normalizedTitle:"backfill",charIndex:771},{level:2,title:"Variables",slug:"variables",normalizedTitle:"variables",charIndex:1127}],lastUpdated:"9/21/2020, 7:33:35 PM",headersStr:"Example Inputs id cron backfill backfill.start Backfill Variables",content:'# Schedule\ntype: "org.kestra.core.models.triggers.types.Schedule"\n\n\n> Kestra is able to trigger flow based on Schedule (aka the time). If you need to wait another system to be ready and can\'t use any event mechanism, you can schedule 1 or more time for the current flow.\n\n\n# Example\ntriggers:\n  - id: schedule\n    type: org.kestra.core.models.triggers.types.Schedule\n    cron: "*/15 * * * *"\n    backfill:\n      start: 2020-06-25T14:00:00Z\n\n\n# Inputs\n# id\n * Type: \n * Required: ✔\n\n> unique for a flow. The scheduler will keep the last execution date for this schedule. This allow you to change the cron expression without restart all the past execution (if backfill exists)\n\n\n# cron\n * Type: \n * Required: ✔\n\n> a cron expression\n\n\n# backfill\n * Type: \n * Required: ❌\n\n> Backfill in order to play the past\n\n\n# backfill.start\n * Type: \n * Required: ✔\n\n> Backfill date\n\n\n# Backfill\nKestra will handle optionnaly a backfill. The concept of backfill is the replay the missing schedule because we create the flow later.\n\nBackfill will do all schedules between define date & current date and will start after the normal schedule.\n\n# Variables\nWhen the flow is schedule, some context variables are injected to allow some customization of the flow\n(like filename, where in sql query).\n\nParameter                 Description                     \n{{ schedule.date }}       the date of current schedule    \n{{ schedule.next }}       the date of next schedule       \n{{ schedule.previous }}   the date of previous schedule   \n\nWARNING\n\nSchedule cannot overlap, this mean that we can\'t have any concurrent schedule. If the previous schedule is not ended when the next one must start, the scheduler will wait the end of the previous one. Same is applied for backfill.',normalizedContent:'# schedule\ntype: "org.kestra.core.models.triggers.types.schedule"\n\n\n> kestra is able to trigger flow based on schedule (aka the time). if you need to wait another system to be ready and can\'t use any event mechanism, you can schedule 1 or more time for the current flow.\n\n\n# example\ntriggers:\n  - id: schedule\n    type: org.kestra.core.models.triggers.types.schedule\n    cron: "*/15 * * * *"\n    backfill:\n      start: 2020-06-25t14:00:00z\n\n\n# inputs\n# id\n * type: \n * required: ✔\n\n> unique for a flow. the scheduler will keep the last execution date for this schedule. this allow you to change the cron expression without restart all the past execution (if backfill exists)\n\n\n# cron\n * type: \n * required: ✔\n\n> a cron expression\n\n\n# backfill\n * type: \n * required: ❌\n\n> backfill in order to play the past\n\n\n# backfill.start\n * type: \n * required: ✔\n\n> backfill date\n\n\n# backfill\nkestra will handle optionnaly a backfill. the concept of backfill is the replay the missing schedule because we create the flow later.\n\nbackfill will do all schedules between define date & current date and will start after the normal schedule.\n\n# variables\nwhen the flow is schedule, some context variables are injected to allow some customization of the flow\n(like filename, where in sql query).\n\nparameter                 description                     \n{{ schedule.date }}       the date of current schedule    \n{{ schedule.next }}       the date of next schedule       \n{{ schedule.previous }}   the date of previous schedule   \n\nwarning\n\nschedule cannot overlap, this mean that we can\'t have any concurrent schedule. if the previous schedule is not ended when the next one must start, the scheduler will wait the end of the previous one. same is applied for backfill.',charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"Variables",frontmatter:{order:2,meta:[{property:"article:modified_time",content:"2020-11-18T15:28:58.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Variables"},{property:"og:description",content:"Variables | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/docs/developer-guide/variables/"},{name:"twitter:title",content:"Variables"},{name:"twitter:description",content:"Variables | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/docs/developer-guide/variables/"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Variables | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/docs/developer-guide/variables/",relativePath:"docs/developer-guide/variables/README.md",key:"v-472d66c8",path:"/docs/developer-guide/variables/",headers:[{level:2,title:"Default variable",slug:"default-variable",normalizedTitle:"default variable",charIndex:333},{level:3,title:"Flow & Execution",slug:"flow-execution",normalizedTitle:"flow &amp; execution",charIndex:null},{level:3,title:"Inputs variables",slug:"inputs-variables",normalizedTitle:"inputs variables",charIndex:4106},{level:3,title:"Outputs variables",slug:"outputs-variables",normalizedTitle:"outputs variables",charIndex:4369},{level:3,title:"Dynamic variables",slug:"dynamic-variables",normalizedTitle:"dynamic variables",charIndex:4916},{level:2,title:"Functions",slug:"functions",normalizedTitle:"functions",charIndex:7316}],lastUpdated:"11/18/2020, 3:28:58 PM",headersStr:"Default variable Flow & Execution Inputs variables Outputs variables Dynamic variables Functions",content:'# Variables\nVariables are specific fields for task. They use the power of handlebars with Kestra\'s special context system, allowing powerfull task composition.\n\nVariables can use variable information registrered / existing in the execution context. This context are some data injected in Variables and are from different sources:\n\n# Default variable\n# Flow & Execution\nFlow & Execution variables allow using current context for this execution in order to customize the tasks (example: name file with current date or current execution id, ...)\n\nThe following table lists all the default variables available on each execution.\n\nParameter                        Description                                                                                                                              \n{{ flow.id }}                    The name the current flow Id                                                                                                             \n{{ flow.namespace }}             The name current namespace                                                                                                               \n{{ execution.id }}               Return the execution Id, a unique id for each                                                                                            \n{{ execution.startDate }}        The start date of the current execution, you can format it with {{ dateFormat execution.startDate "yyyy-MM-dd HH:mm:ss.SSSSSS"}}         \n{{ task.id }}                    The current task Id                                                                                                                      \n{{ task.type }}                  The current task Type (full class name)                                                                                                  \n{{ taskrun.id }}                 The current task Id                                                                                                                      \n{{ taskrun.value }}              The value for current taskrun, only available with (Flowable Task)                                                                       \n{{ taskrun.attemptsCount }}      The number of attempts for current task (when retry or restart is done)                                                                  \n{{ parents.[].taskrun.value }}   The value of parents taskrun, the index if based on closest Flowable Task, only available with tasks previsouly in a (Flowable Task)     \n{{ parents.[].outputs }}         The outputs of parents taskrun, the index if based on closest Flowable Task, only available with tasks previsouly in a (Flowable Task)   \n{{ parent.taskrun.value }}       The value of closest (first) parent taskrun Flowable Task, only available with tasks previsouly in a (Flowable Task)                     \n{{ parent.outputs }}             The outputs of (first) parent taskrun Flowable Task, only available with tasks previsouly in a (Flowable Task)                           \n\nIf the flow is triggered by a schedule, this vars are also available :\n\nParameter                 Description                     \n{{ schedule.date }}       the date of current schedule    \n{{ schedule.next }}       the date of next schedule       \n{{ schedule.previous }}   the date of previous schedule   \n\nIf the flow is triggered by a flow, this vars are also available :\n\nParameter                    Description                                               \n{{ trigger.executionId }}    the execution id that trigger the current flow            \n{{ trigger.namespace }}      the namespace of the flow that trigger the current flow   \n{{ trigger.flowId }}         the flow id that trigger the current flow                 \n{{ trigger.flowRevision }}   the flow revision that trigger the current flow           \n\nHere some example usage :\n\nid: context-example\nnamespace: org.kestra.tests\n\ntasks:\n  - id: echo\n    type: org.kestra.core.tasks.debugs.Return\n    format: |\n      taskid: {{task.id}}\n      date: {{ instantFormat execution.startDate "yyyy-MM-dd HH:mm:ss.SSSSSS" }}\n\n\n# Inputs variables\nYou can use any inputs using his name, example:\n\nid: context-inputs\nnamespace: org.kestra.tests\n\ninputs:\n  - name: myinput\n    type: STRING\n\ntasks:\n  - id: mytask\n    type: org.kestra.core.tasks.debugs.Return\n    format: "{{inputs.myinput}}"\n\n\n# Outputs variables\nOutputs variables can also be referencing their names with the form\noutputs.NAME.PROPERTY :\n\n * NAME is the taskId you want to locate\n * PROPERTY is the property you want to use, each task type can emit different properties, so look at the\n   documentation of one.\n\nid: context-outpouts\nnamespace: org.kestra.tests\n\ntasks:\n    - id: task-id\n      type: io.kestra.task.templates.Example\n      format: "{{task.id}}"\n    - id: flow-id\n      type: io.kestra.task.templates.Example\n      format: "{{outputs.task-id.child.value}}"\n\n\n# Dynamic variables\nSome tasks are dynamic like EachSequential,\nEachParallel or\nSwitch and can hold a special taskrun.value.\n\n# Current value\nYou can access the current value with {{ taskrun.value }} like that:\n\ntasks:\n  - id: each\n    type: org.kestra.core.tasks.flows.EachSequential\n    value: \'["value 1", "value 2", "value 3"]\'\n    tasks:\n      - id: inner\n        type: org.kestra.core.tasks.debugs.Return\n        format: "{{task.id}} > {{taskrun.value}} > {{taskrun.startDate}}"\n\n\n# Previous task lookup\nIt\'s also possible to locate a special task by his value:\n\ntasks:\n  - id: each\n    type: org.kestra.core.tasks.flows.EachSequential\n    value: \'["value 1", "value 2", "value 3"]\'\n    tasks:\n      - id: inner\n        type: org.kestra.core.tasks.debugs.Return\n        format: "{{task.id}}"\n  - id: end\n    type: org.kestra.core.tasks.debugs.Return\n    format: "{{task.id}} > {{outputs.inner.[value 1].value}}"\n\n\nwith the format outputs.TASKID.[VALUE].PROPERTY. The special bracket [] in .[VALUE]. enable special chars like space (and can be remove without any special characters)\n\n# Lookup in current childs tasks tree\nSometime, it can be useful to access to previous outputs on current task tree, for example on\nEachSequential,\nyou iterate for a list of value, doing a first tasks (Download a file for example) and\nloading previous files to a database.\n\nFor this, you can use function get :\n\ntasks:\n  - id: each\n    type: org.kestra.core.tasks.flows.EachSequential\n    value: \'["value 1", "value 2", "value 3"]\'\n    tasks:\n      - id: first\n        type: org.kestra.core.tasks.debugs.Return\n        format: "{{task.id}}"\n      - id: second\n        type: org.kestra.core.tasks.debugs.Return\n        format: "{{ (get outputs.first taskrun.value).value }}"\n  - id: end\n    type: org.kestra.core.tasks.debugs.Return\n    format: "{{task.id}} > {{outputs.inner.[value 1].value}}"\n\n\nor the function eval :\n\ntasks:\n  - id: each\n    type: org.kestra.core.tasks.flows.EachSequential\n    value: \'["value 1", "value 2", "value 3"]\'\n    tasks:\n      - id: first\n        type: org.kestra.core.tasks.debugs.Return\n        format: "{{task.id}}"\n      - id: second\n        type: org.kestra.core.tasks.debugs.Return\n        format: "{{ eval \'outputs.first.[{{taskrun.value}}].value\' }}"\n  - id: end\n    type: org.kestra.core.tasks.debugs.Return\n    format: "{{task.id}} > {{outputs.inner.[value 1].value}}"\n\n\n# Functions\nSome time, you need to change the format of variables. For this, you can use some functions:\n\n * String functions\n * Boolean functions\n * Number functions\n * Date functions\n * Json functions\n * Iterations functions\n * Vars functions',normalizedContent:'# variables\nvariables are specific fields for task. they use the power of handlebars with kestra\'s special context system, allowing powerfull task composition.\n\nvariables can use variable information registrered / existing in the execution context. this context are some data injected in variables and are from different sources:\n\n# default variable\n# flow & execution\nflow & execution variables allow using current context for this execution in order to customize the tasks (example: name file with current date or current execution id, ...)\n\nthe following table lists all the default variables available on each execution.\n\nparameter                        description                                                                                                                              \n{{ flow.id }}                    the name the current flow id                                                                                                             \n{{ flow.namespace }}             the name current namespace                                                                                                               \n{{ execution.id }}               return the execution id, a unique id for each                                                                                            \n{{ execution.startdate }}        the start date of the current execution, you can format it with {{ dateformat execution.startdate "yyyy-mm-dd hh:mm:ss.ssssss"}}         \n{{ task.id }}                    the current task id                                                                                                                      \n{{ task.type }}                  the current task type (full class name)                                                                                                  \n{{ taskrun.id }}                 the current task id                                                                                                                      \n{{ taskrun.value }}              the value for current taskrun, only available with (flowable task)                                                                       \n{{ taskrun.attemptscount }}      the number of attempts for current task (when retry or restart is done)                                                                  \n{{ parents.[].taskrun.value }}   the value of parents taskrun, the index if based on closest flowable task, only available with tasks previsouly in a (flowable task)     \n{{ parents.[].outputs }}         the outputs of parents taskrun, the index if based on closest flowable task, only available with tasks previsouly in a (flowable task)   \n{{ parent.taskrun.value }}       the value of closest (first) parent taskrun flowable task, only available with tasks previsouly in a (flowable task)                     \n{{ parent.outputs }}             the outputs of (first) parent taskrun flowable task, only available with tasks previsouly in a (flowable task)                           \n\nif the flow is triggered by a schedule, this vars are also available :\n\nparameter                 description                     \n{{ schedule.date }}       the date of current schedule    \n{{ schedule.next }}       the date of next schedule       \n{{ schedule.previous }}   the date of previous schedule   \n\nif the flow is triggered by a flow, this vars are also available :\n\nparameter                    description                                               \n{{ trigger.executionid }}    the execution id that trigger the current flow            \n{{ trigger.namespace }}      the namespace of the flow that trigger the current flow   \n{{ trigger.flowid }}         the flow id that trigger the current flow                 \n{{ trigger.flowrevision }}   the flow revision that trigger the current flow           \n\nhere some example usage :\n\nid: context-example\nnamespace: org.kestra.tests\n\ntasks:\n  - id: echo\n    type: org.kestra.core.tasks.debugs.return\n    format: |\n      taskid: {{task.id}}\n      date: {{ instantformat execution.startdate "yyyy-mm-dd hh:mm:ss.ssssss" }}\n\n\n# inputs variables\nyou can use any inputs using his name, example:\n\nid: context-inputs\nnamespace: org.kestra.tests\n\ninputs:\n  - name: myinput\n    type: string\n\ntasks:\n  - id: mytask\n    type: org.kestra.core.tasks.debugs.return\n    format: "{{inputs.myinput}}"\n\n\n# outputs variables\noutputs variables can also be referencing their names with the form\noutputs.name.property :\n\n * name is the taskid you want to locate\n * property is the property you want to use, each task type can emit different properties, so look at the\n   documentation of one.\n\nid: context-outpouts\nnamespace: org.kestra.tests\n\ntasks:\n    - id: task-id\n      type: io.kestra.task.templates.example\n      format: "{{task.id}}"\n    - id: flow-id\n      type: io.kestra.task.templates.example\n      format: "{{outputs.task-id.child.value}}"\n\n\n# dynamic variables\nsome tasks are dynamic like eachsequential,\neachparallel or\nswitch and can hold a special taskrun.value.\n\n# current value\nyou can access the current value with {{ taskrun.value }} like that:\n\ntasks:\n  - id: each\n    type: org.kestra.core.tasks.flows.eachsequential\n    value: \'["value 1", "value 2", "value 3"]\'\n    tasks:\n      - id: inner\n        type: org.kestra.core.tasks.debugs.return\n        format: "{{task.id}} > {{taskrun.value}} > {{taskrun.startdate}}"\n\n\n# previous task lookup\nit\'s also possible to locate a special task by his value:\n\ntasks:\n  - id: each\n    type: org.kestra.core.tasks.flows.eachsequential\n    value: \'["value 1", "value 2", "value 3"]\'\n    tasks:\n      - id: inner\n        type: org.kestra.core.tasks.debugs.return\n        format: "{{task.id}}"\n  - id: end\n    type: org.kestra.core.tasks.debugs.return\n    format: "{{task.id}} > {{outputs.inner.[value 1].value}}"\n\n\nwith the format outputs.taskid.[value].property. the special bracket [] in .[value]. enable special chars like space (and can be remove without any special characters)\n\n# lookup in current childs tasks tree\nsometime, it can be useful to access to previous outputs on current task tree, for example on\neachsequential,\nyou iterate for a list of value, doing a first tasks (download a file for example) and\nloading previous files to a database.\n\nfor this, you can use function get :\n\ntasks:\n  - id: each\n    type: org.kestra.core.tasks.flows.eachsequential\n    value: \'["value 1", "value 2", "value 3"]\'\n    tasks:\n      - id: first\n        type: org.kestra.core.tasks.debugs.return\n        format: "{{task.id}}"\n      - id: second\n        type: org.kestra.core.tasks.debugs.return\n        format: "{{ (get outputs.first taskrun.value).value }}"\n  - id: end\n    type: org.kestra.core.tasks.debugs.return\n    format: "{{task.id}} > {{outputs.inner.[value 1].value}}"\n\n\nor the function eval :\n\ntasks:\n  - id: each\n    type: org.kestra.core.tasks.flows.eachsequential\n    value: \'["value 1", "value 2", "value 3"]\'\n    tasks:\n      - id: first\n        type: org.kestra.core.tasks.debugs.return\n        format: "{{task.id}}"\n      - id: second\n        type: org.kestra.core.tasks.debugs.return\n        format: "{{ eval \'outputs.first.[{{taskrun.value}}].value\' }}"\n  - id: end\n    type: org.kestra.core.tasks.debugs.return\n    format: "{{task.id}} > {{outputs.inner.[value 1].value}}"\n\n\n# functions\nsome time, you need to change the format of variables. for this, you can use some functions:\n\n * string functions\n * boolean functions\n * number functions\n * date functions\n * json functions\n * iterations functions\n * vars functions',charsets:{cjk:!0},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"Boolean functions",frontmatter:{meta:[{property:"article:modified_time",content:"2020-06-03T05:58:29.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Boolean functions"},{property:"og:description",content:"Boolean functions | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/docs/developer-guide/variables/boolean.html"},{name:"twitter:title",content:"Boolean functions"},{name:"twitter:description",content:"Boolean functions | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/docs/developer-guide/variables/boolean.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Boolean functions | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/docs/developer-guide/variables/boolean.html",relativePath:"docs/developer-guide/variables/boolean.md",key:"v-64927783",path:"/docs/developer-guide/variables/boolean.html",headers:[{level:3,title:"eq: Equality",slug:"eq-equality",normalizedTitle:"eq: equality",charIndex:23},{level:3,title:"neq: Not equality",slug:"neq-not-equality",normalizedTitle:"neq: not equality",charIndex:39},{level:3,title:"gt: Greater operator",slug:"gt-greater-operator",normalizedTitle:"gt: greater operator",charIndex:60},{level:3,title:"gte: Greater or equal operator",slug:"gte-greater-or-equal-operator",normalizedTitle:"gte: greater or equal operator",charIndex:84},{level:3,title:"lt: Less operator",slug:"lt-less-operator",normalizedTitle:"lt: less operator",charIndex:118},{level:3,title:"lte: Less or equal operator",slug:"lte-less-or-equal-operator",normalizedTitle:"lte: less or equal operator",charIndex:139},{level:3,title:"and: And operator",slug:"and-and-operator",normalizedTitle:"and: and operator",charIndex:170},{level:3,title:"or: Or operator",slug:"or-or-operator",normalizedTitle:"or: or operator",charIndex:191},{level:3,title:"not: Not operator",slug:"not-not-operator",normalizedTitle:"not: not operator",charIndex:210},{level:3,title:"cmp: Compare operator",slug:"cmp-compare-operator",normalizedTitle:"cmp: compare operator",charIndex:231}],lastUpdated:"6/3/2020, 5:58:29 AM",headersStr:"eq: Equality neq: Not equality gt: Greater operator gte: Greater or equal operator lt: Less operator lte: Less or equal operator and: And operator or: Or operator not: Not operator cmp: Compare operator",content:"# Boolean functions\n * eq: Equality\n * neq: Not equality\n * gt: Greater operator\n * gte: Greater or equal operator\n * lt: Less operator\n * lte: Less or equal operator\n * and: And operator\n * or: Or operator\n * not: Not operator\n * cmp: Compare operator\n\n\n\n# eq: Equality\nTest if two elements are equals.\n\n> Render yes or no:\n\n\n  {{#eq a b}}\n    yes\n  {{else}}\n    no\n  {{/eq}}\n\n\n> Render true or false:\n\n\n  {{eq a b}}\n\n\n> Render yes or no:\n\n\n  {{eq a b yes='yes' no='no'}}\n\n\n# neq: Not equality\nTest if two elements are NOT equals.\n\n> Render yes or no:\n\n\n  {{#neq a b}}\n    yes\n  {{else}}\n    no\n  {{/neq}}\n\n\n> Render true or false:\n\n\n  {{neq a b}}\n\n\n> Render yes or no:\n\n\n  {{neq a b yes='yes' no='no'}}\n\n\n# gt: Greater operator\nGreater operator (arguments must be Comparable elements).\n\n> Render yes or no:\n\n\n  {{#gt a b}}\n    yes\n  {{else}}\n    no\n  {{/gt}}\n\n\n> Render true or false:\n\n\n  {{gt a b}}\n\n\n> Render yes or no:\n\n\n  {{gte a b yes='yes' no='no'}}\n\n\n# gte: Greater or equal operator\nGreater or equal operator (arguments must be Comparable elements).\n\n> Render yes or no:\n\n\n  {{#gte a b}}\n    yes\n  {{else}}\n    no\n  {{/gte}}\n\n\n> Render true or false:\n\n\n  {{gte a b}}\n\n\n> Render yes or no:\n\n\n  {{gte a b yes='yes' no='no'}}\n\n\n# lt: Less operator\nLess than operator (arguments must be Comparable elements).\n\n> Render yes or no:\n\n\n  {{#lt a b}}\n    yes\n  {{else}}\n    no\n  {{/lt}}\n\n\n> Render true or false:\n\n\n  {{lt a b}}\n\n\n> Render yes or no:\n\n\n  {{lt a b yes='yes' no='no'}}\n\n\n# lte: Less or equal operator\nLess than operator (arguments must be Comparable elements.\n\n> Render yes or no:\n\n\n  {{#lte a b}}\n    yes\n  {{else}}\n    no\n  {{/lte}}\n\n\n> Render true or false:\n\n\n  {{lte a b}}\n\n\n> Render yes or no:\n\n\n  {{lte a b yes='yes' no='no'}}\n\n\n# and: And operator\nAnd operator. This is a boolean operation.\n\nTruthiness of arguments is determined by isEmpty, so this\nhelper can be used with non-boolean values.\n\nMultiple arguments are supported too:\n\n  {{#and a b c d}}\n    yes\n  {{else}}\n    no\n  {{/and}}\n\n\n> Render yes or no:\n\n\n  {{#and a b}}\n    yes\n  {{else}}\n    no\n  {{/and}}\n\n\n> Render true or false:\n\n\n  {{and a b}}\n\n\n> Render yes or no:\n\n\n  {{and a b yes='yes' no='no'}}\n\n\n# or: Or operator\nOr operator. This is a boolean operation\n\nTruthiness of arguments is determined by isEmpty, so this\nhelper can be used with non-boolean values.\n\nMultiple arguments are supported too:\n\n  {{#or a b c d}}\n    yes\n  {{else}}\n    no\n  {{/or}}\n\n\n> Render yes or no:\n\n\n  {{#or a b}}\n    yes\n  {{else}}\n    no\n  {{/or}}\n\n\n> Render true or false:\n\n\n  {{or a b}}\n\n\n> Render yes or no:\n\n\n  {{or a b yes='yes' no='no'}}\n\n\n# not: Not operator\nTruthiness of arguments is determined by isEmpty, so this\nhelper can be used with non-boolean values.\n\n> Render yes or no:\n\n\n  {{#not a}}\n    yes\n  {{else}}\n    no\n  {{/not}}\n\n\n> Render true or false:\n\n\n  {{not a}}\n\n\n> Render y or n:\n\n\n  {{not a yes='yes' no='no'}}\n\n\n# cmp: Compare operator\nCompare to object as Comparables.\n\n> Renders 1 if a > b, 0 if a == b -1 if a < b\n\n\n  {{cmp a b}}",normalizedContent:"# boolean functions\n * eq: equality\n * neq: not equality\n * gt: greater operator\n * gte: greater or equal operator\n * lt: less operator\n * lte: less or equal operator\n * and: and operator\n * or: or operator\n * not: not operator\n * cmp: compare operator\n\n\n\n# eq: equality\ntest if two elements are equals.\n\n> render yes or no:\n\n\n  {{#eq a b}}\n    yes\n  {{else}}\n    no\n  {{/eq}}\n\n\n> render true or false:\n\n\n  {{eq a b}}\n\n\n> render yes or no:\n\n\n  {{eq a b yes='yes' no='no'}}\n\n\n# neq: not equality\ntest if two elements are not equals.\n\n> render yes or no:\n\n\n  {{#neq a b}}\n    yes\n  {{else}}\n    no\n  {{/neq}}\n\n\n> render true or false:\n\n\n  {{neq a b}}\n\n\n> render yes or no:\n\n\n  {{neq a b yes='yes' no='no'}}\n\n\n# gt: greater operator\ngreater operator (arguments must be comparable elements).\n\n> render yes or no:\n\n\n  {{#gt a b}}\n    yes\n  {{else}}\n    no\n  {{/gt}}\n\n\n> render true or false:\n\n\n  {{gt a b}}\n\n\n> render yes or no:\n\n\n  {{gte a b yes='yes' no='no'}}\n\n\n# gte: greater or equal operator\ngreater or equal operator (arguments must be comparable elements).\n\n> render yes or no:\n\n\n  {{#gte a b}}\n    yes\n  {{else}}\n    no\n  {{/gte}}\n\n\n> render true or false:\n\n\n  {{gte a b}}\n\n\n> render yes or no:\n\n\n  {{gte a b yes='yes' no='no'}}\n\n\n# lt: less operator\nless than operator (arguments must be comparable elements).\n\n> render yes or no:\n\n\n  {{#lt a b}}\n    yes\n  {{else}}\n    no\n  {{/lt}}\n\n\n> render true or false:\n\n\n  {{lt a b}}\n\n\n> render yes or no:\n\n\n  {{lt a b yes='yes' no='no'}}\n\n\n# lte: less or equal operator\nless than operator (arguments must be comparable elements.\n\n> render yes or no:\n\n\n  {{#lte a b}}\n    yes\n  {{else}}\n    no\n  {{/lte}}\n\n\n> render true or false:\n\n\n  {{lte a b}}\n\n\n> render yes or no:\n\n\n  {{lte a b yes='yes' no='no'}}\n\n\n# and: and operator\nand operator. this is a boolean operation.\n\ntruthiness of arguments is determined by isempty, so this\nhelper can be used with non-boolean values.\n\nmultiple arguments are supported too:\n\n  {{#and a b c d}}\n    yes\n  {{else}}\n    no\n  {{/and}}\n\n\n> render yes or no:\n\n\n  {{#and a b}}\n    yes\n  {{else}}\n    no\n  {{/and}}\n\n\n> render true or false:\n\n\n  {{and a b}}\n\n\n> render yes or no:\n\n\n  {{and a b yes='yes' no='no'}}\n\n\n# or: or operator\nor operator. this is a boolean operation\n\ntruthiness of arguments is determined by isempty, so this\nhelper can be used with non-boolean values.\n\nmultiple arguments are supported too:\n\n  {{#or a b c d}}\n    yes\n  {{else}}\n    no\n  {{/or}}\n\n\n> render yes or no:\n\n\n  {{#or a b}}\n    yes\n  {{else}}\n    no\n  {{/or}}\n\n\n> render true or false:\n\n\n  {{or a b}}\n\n\n> render yes or no:\n\n\n  {{or a b yes='yes' no='no'}}\n\n\n# not: not operator\ntruthiness of arguments is determined by isempty, so this\nhelper can be used with non-boolean values.\n\n> render yes or no:\n\n\n  {{#not a}}\n    yes\n  {{else}}\n    no\n  {{/not}}\n\n\n> render true or false:\n\n\n  {{not a}}\n\n\n> render y or n:\n\n\n  {{not a yes='yes' no='no'}}\n\n\n# cmp: compare operator\ncompare to object as comparables.\n\n> renders 1 if a > b, 0 if a == b -1 if a < b\n\n\n  {{cmp a b}}",charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"Date functions",frontmatter:{meta:[{property:"article:modified_time",content:"2020-11-25T14:40:27.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Date functions"},{property:"og:description",content:"Date functions | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/docs/developer-guide/variables/date.html"},{name:"twitter:title",content:"Date functions"},{name:"twitter:description",content:"Date functions | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/docs/developer-guide/variables/date.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Date functions | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/docs/developer-guide/variables/date.html",relativePath:"docs/developer-guide/variables/date.md",key:"v-6ae2b2a3",path:"/docs/developer-guide/variables/date.html",headers:[{level:2,title:"dateFormat: Date format",slug:"dateformat-date-format",normalizedTitle:"dateformat: date format",charIndex:20},{level:2,title:"now: Current date",slug:"now-current-date",normalizedTitle:"now: current date",charIndex:47},{level:2,title:"timestamp: Current second timestamp",slug:"timestamp-current-second-timestamp",normalizedTitle:"timestamp: current second timestamp",charIndex:68},{level:2,title:"namotimestamp: Current nano timestamp",slug:"namotimestamp-current-nano-timestamp",normalizedTitle:"namotimestamp: current nano timestamp",charIndex:107},{level:2,title:"microtimestamp: Current micro timestamp",slug:"microtimestamp-current-micro-timestamp",normalizedTitle:"microtimestamp: current micro timestamp",charIndex:148}],lastUpdated:"11/25/2020, 2:40:27 PM",headersStr:"dateFormat: Date format now: Current date timestamp: Current second timestamp namotimestamp: Current nano timestamp microtimestamp: Current micro timestamp",content:"# Date functions\n * dateFormat: Date format\n * now: Current date\n * timestamp: Current second timestamp\n * namotimestamp: Current nano timestamp\n * microtimestamp: Current micro timestamp\n\n\n\n# dateFormat: Date format\n{{dateFormat date ['format'] [format='format'][tz=timeZone|timeZoneId]}}\n\n\n# Arguments:\n * format: Format parameters is one of : * full: Sunday, September 8, 2013 at 4:19:12 PM Central European Summer Time\n    * long: September 8, 2013 at 4:19:12 PM CEST\n    * medium: Sep 8, 2013, 4:19:12 PM\n    * short: 9/8/13, 4:19 PM\n    * iso: 2013-09-08T16:19:12.000000+02:00\n    * iso_sec: 2013-09-08T16:19:12+02:00\n    * sql: 2013-09-08 16:19:12.000000\n    * sql_seq: 2013-09-08 16:19:12\n    * iso_date_time: 2013-09-08T16:19:12+02:00[Europe/Paris]\n    * iso_date: 2013-09-08+02:00\n    * iso_time: 16:19:12+02:00\n    * iso_local_date: 2013-09-08\n    * iso_instant: 2013-09-08T14:19:12Z\n    * iso_local_date_time: 2013-09-08T16:19:12\n    * iso_local_time: 16:19:12\n    * iso_offset_time: 16:19:12+02:00\n    * iso_ordinal_date: 2013-251+02:00\n    * iso_week_date: 2013-W36-7+02:00\n    * iso_zoned_date_time: 2013-09-08T16:19:12+02:00[Europe/Paris]\n    * rfc_1123_date_time: Sun, 8 Sep 2013 16:19:12 +0200\n    * pattern: a date pattern.\n    * Otherwise, the default formatter iso will be used. The format option can be specified as a parameter or hash (a.k.a named parameter).\n    * You can pass the any format from SimpleDateFormat\n   \n   \n * timezeome: with the format Europe/Paris\n\n# now: Current date\n   {{now ['format'] [tz=timeZone|timeZoneId]}}\n\n\n# Arguments:\n * format: Same format as dateFormat\n * timezone: with the format Europe/Paris\n\n# timestamp: Current second timestamp\n   {{timestamp}}\n\n\n# namotimestamp: Current nano timestamp\n   {{namotimestamp}}\n\n\n# microtimestamp: Current micro timestamp\n   {{microtimestamp}}",normalizedContent:"# date functions\n * dateformat: date format\n * now: current date\n * timestamp: current second timestamp\n * namotimestamp: current nano timestamp\n * microtimestamp: current micro timestamp\n\n\n\n# dateformat: date format\n{{dateformat date ['format'] [format='format'][tz=timezone|timezoneid]}}\n\n\n# arguments:\n * format: format parameters is one of : * full: sunday, september 8, 2013 at 4:19:12 pm central european summer time\n    * long: september 8, 2013 at 4:19:12 pm cest\n    * medium: sep 8, 2013, 4:19:12 pm\n    * short: 9/8/13, 4:19 pm\n    * iso: 2013-09-08t16:19:12.000000+02:00\n    * iso_sec: 2013-09-08t16:19:12+02:00\n    * sql: 2013-09-08 16:19:12.000000\n    * sql_seq: 2013-09-08 16:19:12\n    * iso_date_time: 2013-09-08t16:19:12+02:00[europe/paris]\n    * iso_date: 2013-09-08+02:00\n    * iso_time: 16:19:12+02:00\n    * iso_local_date: 2013-09-08\n    * iso_instant: 2013-09-08t14:19:12z\n    * iso_local_date_time: 2013-09-08t16:19:12\n    * iso_local_time: 16:19:12\n    * iso_offset_time: 16:19:12+02:00\n    * iso_ordinal_date: 2013-251+02:00\n    * iso_week_date: 2013-w36-7+02:00\n    * iso_zoned_date_time: 2013-09-08t16:19:12+02:00[europe/paris]\n    * rfc_1123_date_time: sun, 8 sep 2013 16:19:12 +0200\n    * pattern: a date pattern.\n    * otherwise, the default formatter iso will be used. the format option can be specified as a parameter or hash (a.k.a named parameter).\n    * you can pass the any format from simpledateformat\n   \n   \n * timezeome: with the format europe/paris\n\n# now: current date\n   {{now ['format'] [tz=timezone|timezoneid]}}\n\n\n# arguments:\n * format: same format as dateformat\n * timezone: with the format europe/paris\n\n# timestamp: current second timestamp\n   {{timestamp}}\n\n\n# namotimestamp: current nano timestamp\n   {{namotimestamp}}\n\n\n# microtimestamp: current micro timestamp\n   {{microtimestamp}}",charsets:{cjk:!0},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"Iterations functions",frontmatter:{meta:[{property:"article:modified_time",content:"2020-06-03T05:58:29.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Iterations functions"},{property:"og:description",content:"Iterations functions | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/docs/developer-guide/variables/iterations.html"},{name:"twitter:title",content:"Iterations functions"},{name:"twitter:description",content:"Iterations functions | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/docs/developer-guide/variables/iterations.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Iterations functions | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/docs/developer-guide/variables/iterations.html",relativePath:"docs/developer-guide/variables/iterations.md",key:"v-7aff5bba",path:"/docs/developer-guide/variables/iterations.html",headers:[{level:2,title:"For each",slug:"for-each",normalizedTitle:"for each",charIndex:26}],lastUpdated:"6/3/2020, 5:58:29 AM",headersStr:"For each",content:'# Iterations functions\n * For each\n\n\n\n# For each\nYou can iterate over a list using the built-in each helper. Inside the block, you can use this to reference the element being iterated over. contextualListVariable is an iterable item on which the mydata property is displayed for all entries.\n\nThe @index is a special variable available in the each loop context which value is the current index of the element beeing iterated. There are agic* variables like @index in a each context. The following ones are also available: @key @index @first @last @odd @even\n\nSee handlebars documentation for more about this topic.\n\n{{#each contextualListVariable}}\n    {{this.mydata}} {{@index}}\n{{/each}}\n\n\nwill produce\n\none 0\ntwo 1\nthree 2\ndjango! 3\n\n\nfor the following data sample when\n\ncontextualListVariable = [\n  {"mydata": "one"},\n  {"mydata": "two"},\n  {"mydata": "three"},\n  {"mydata": "django!"},\n]\n\n\nIf the contextual this is not convinient to use data as you wish it is possible to alias it like below:\n\n{{#each iterableVariable as | myItem | }}\n    {{myItem.mydata}}\n{{/each}}',normalizedContent:'# iterations functions\n * for each\n\n\n\n# for each\nyou can iterate over a list using the built-in each helper. inside the block, you can use this to reference the element being iterated over. contextuallistvariable is an iterable item on which the mydata property is displayed for all entries.\n\nthe @index is a special variable available in the each loop context which value is the current index of the element beeing iterated. there are agic* variables like @index in a each context. the following ones are also available: @key @index @first @last @odd @even\n\nsee handlebars documentation for more about this topic.\n\n{{#each contextuallistvariable}}\n    {{this.mydata}} {{@index}}\n{{/each}}\n\n\nwill produce\n\none 0\ntwo 1\nthree 2\ndjango! 3\n\n\nfor the following data sample when\n\ncontextuallistvariable = [\n  {"mydata": "one"},\n  {"mydata": "two"},\n  {"mydata": "three"},\n  {"mydata": "django!"},\n]\n\n\nif the contextual this is not convinient to use data as you wish it is possible to alias it like below:\n\n{{#each iterablevariable as | myitem | }}\n    {{myitem.mydata}}\n{{/each}}',charsets:{cjk:!0},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"Number functions",frontmatter:{meta:[{property:"article:modified_time",content:"2020-06-03T05:58:29.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Number functions"},{property:"og:description",content:"Number functions | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/docs/developer-guide/variables/number.html"},{name:"twitter:title",content:"Number functions"},{name:"twitter:description",content:"Number functions | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/docs/developer-guide/variables/number.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Number functions | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/docs/developer-guide/variables/number.html",relativePath:"docs/developer-guide/variables/number.md",key:"v-cdabe47a",path:"/docs/developer-guide/variables/number.html",headers:[{level:2,title:"numberFormat: Format a number",slug:"numberformat-format-a-number",normalizedTitle:"numberformat: format a number",charIndex:22}],lastUpdated:"6/3/2020, 5:58:29 AM",headersStr:"numberFormat: Format a number",content:'# Number functions\n * numberFormat: Format a number\n\n\n\n# numberFormat: Format a number\n   {{numberFormat number ["format"] [locale=default]}}\n\n\nArguments:\n\n * format: Format parameters is one of: * "integer": the integer number format\n    * "percent": the percent number format\n    * "currency": the decimal number format\n    * "pattern": a decimal pattern.\n    * Otherwise, the default formatter will be used.\n   \n   \n\nMore options:\n\n * groupingUsed: Set whether or not grouping will be used in this format.\n * maximumFractionDigits: Sets the maximum number of digits allowed in the fraction portion of\n   a number.\n * maximumIntegerDigits: Sets the maximum number of digits allowed in the integer portion of a\n   number\n * minimumFractionDigits: Sets the minimum number of digits allowed in the fraction portion of\n   a number\n * minimumIntegerDigits: Sets the minimum number of digits allowed in the integer portion of a\n   number.\n * parseIntegerOnly: Sets whether or not numbers should be parsed as integers only.\n * roundingMode: Sets the {@link java.math.RoundingMode} used in this NumberFormat.',normalizedContent:'# number functions\n * numberformat: format a number\n\n\n\n# numberformat: format a number\n   {{numberformat number ["format"] [locale=default]}}\n\n\narguments:\n\n * format: format parameters is one of: * "integer": the integer number format\n    * "percent": the percent number format\n    * "currency": the decimal number format\n    * "pattern": a decimal pattern.\n    * otherwise, the default formatter will be used.\n   \n   \n\nmore options:\n\n * groupingused: set whether or not grouping will be used in this format.\n * maximumfractiondigits: sets the maximum number of digits allowed in the fraction portion of\n   a number.\n * maximumintegerdigits: sets the maximum number of digits allowed in the integer portion of a\n   number\n * minimumfractiondigits: sets the minimum number of digits allowed in the fraction portion of\n   a number\n * minimumintegerdigits: sets the minimum number of digits allowed in the integer portion of a\n   number.\n * parseintegeronly: sets whether or not numbers should be parsed as integers only.\n * roundingmode: sets the {@link java.math.roundingmode} used in this numberformat.',charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"JSON functions",frontmatter:{meta:[{property:"article:modified_time",content:"2020-11-13T10:32:36.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"JSON functions"},{property:"og:description",content:"JSON functions | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/docs/developer-guide/variables/json.html"},{name:"twitter:title",content:"JSON functions"},{name:"twitter:description",content:"JSON functions | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/docs/developer-guide/variables/json.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"JSON functions | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/docs/developer-guide/variables/json.html",relativePath:"docs/developer-guide/variables/json.md",key:"v-b253103a",path:"/docs/developer-guide/variables/json.html",headers:[{level:2,title:"json Convert an object to json",slug:"json-convert-an-object-to-json",normalizedTitle:"json convert an object to json",charIndex:20},{level:2,title:"jq Transform vars with JQ",slug:"jq-transform-vars-with-jq",normalizedTitle:"jq transform vars with jq",charIndex:54}],lastUpdated:"11/13/2020, 10:32:36 AM",headersStr:"json Convert an object to json jq Transform vars with JQ",content:'# JSON functions\n * json Convert an object to json\n * jq Transform vars with JQ\n\n\n\n# json Convert an object to json\nConvert an object to is JSON representation\n\n{{json output.task-id}}\n\n\nExample, if the current context is :\n\n{\n  "outputs": {\n    "task1": {\n      "value": 1,\n      "text": "awesome1"\n    },\n    "task2": {\n      "value": 2,\n      "text": "awesome2"\n    }\n  }\n}\n\n\nthe output of {{ json outputs.task2}} will be {"value":2,"text":"awesome2"}.\n\n# jq Transform vars with JQ\nApply the JQ expression to a variables.\n\n{{jq vars jqExpr [first=false]}}\n\n\nfirst mean to always fetch the first element, by default jq return an array of results\n\nWARNING\n\nInternally, Jackson JQ is used and support only a large subset of official JQ.\n\nExample, if the current context is :\n\n{\n  "outputs": {\n    "task1": {\n      "value": 1,\n      "text": "awesome1"\n    },\n    "task2": {\n      "value": 2,\n      "text": "awesome2"\n    }\n  }\n}\n\n\n{{jq outputs .task1.value true}}\n\n\nthe output will be 1.',normalizedContent:'# json functions\n * json convert an object to json\n * jq transform vars with jq\n\n\n\n# json convert an object to json\nconvert an object to is json representation\n\n{{json output.task-id}}\n\n\nexample, if the current context is :\n\n{\n  "outputs": {\n    "task1": {\n      "value": 1,\n      "text": "awesome1"\n    },\n    "task2": {\n      "value": 2,\n      "text": "awesome2"\n    }\n  }\n}\n\n\nthe output of {{ json outputs.task2}} will be {"value":2,"text":"awesome2"}.\n\n# jq transform vars with jq\napply the jq expression to a variables.\n\n{{jq vars jqexpr [first=false]}}\n\n\nfirst mean to always fetch the first element, by default jq return an array of results\n\nwarning\n\ninternally, jackson jq is used and support only a large subset of official jq.\n\nexample, if the current context is :\n\n{\n  "outputs": {\n    "task1": {\n      "value": 1,\n      "text": "awesome1"\n    },\n    "task2": {\n      "value": 2,\n      "text": "awesome2"\n    }\n  }\n}\n\n\n{{jq outputs .task1.value true}}\n\n\nthe output will be 1.',charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"String functions",frontmatter:{meta:[{property:"article:modified_time",content:"2020-06-03T05:58:29.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"String functions"},{property:"og:description",content:"String functions | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/docs/developer-guide/variables/string.html"},{name:"twitter:title",content:"String functions"},{name:"twitter:description",content:"String functions | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/docs/developer-guide/variables/string.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"String functions | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/docs/developer-guide/variables/string.html",relativePath:"docs/developer-guide/variables/string.md",key:"v-65ccacc3",path:"/docs/developer-guide/variables/string.html",headers:[{level:2,title:"capitalizeFirst: Capitalizes the first character of the value.",slug:"capitalizefirst-capitalizes-the-first-character-of-the-value",normalizedTitle:"capitalizefirst: capitalizes the first character of the value.",charIndex:22},{level:2,title:"center: Centers the value in a field of a given width.",slug:"center-centers-the-value-in-a-field-of-a-given-width",normalizedTitle:"center: centers the value in a field of a given width.",charIndex:88},{level:2,title:"cut: Removes all values of arg from the given string.",slug:"cut-removes-all-values-of-arg-from-the-given-string",normalizedTitle:"cut: removes all values of arg from the given string.",charIndex:146},{level:2,title:"defaultIfEmpty: Default if empty",slug:"defaultifempty-default-if-empty",normalizedTitle:"defaultifempty: default if empty",charIndex:203},{level:2,title:"join: Join string",slug:"join-join-string",normalizedTitle:"join: join string",charIndex:239},{level:2,title:"ljust: Left-aligns the value in a field of a given width.",slug:"ljust-left-aligns-the-value-in-a-field-of-a-given-width",normalizedTitle:"ljust: left-aligns the value in a field of a given width.",charIndex:260},{level:2,title:"rjust: Right-aligns the value in a field of a given width.",slug:"rjust-right-aligns-the-value-in-a-field-of-a-given-width",normalizedTitle:"rjust: right-aligns the value in a field of a given width.",charIndex:321},{level:2,title:"substring Substring",slug:"substring-substring",normalizedTitle:"substring substring",charIndex:383},{level:2,title:"lower: Converts a string into all lowercase.",slug:"lower-converts-a-string-into-all-lowercase",normalizedTitle:"lower: converts a string into all lowercase.",charIndex:406},{level:2,title:"upper Converts a string into all uppercase.",slug:"upper-converts-a-string-into-all-uppercase",normalizedTitle:"upper converts a string into all uppercase.",charIndex:454},{level:2,title:"stringFormat: Formats the variable",slug:"stringformat-formats-the-variable",normalizedTitle:"stringformat: formats the variable",charIndex:501},{level:2,title:"stripTags: Strips all [X]HTML tags.",slug:"striptags-strips-all-x-html-tags",normalizedTitle:"striptags: strips all [x]html tags.",charIndex:539},{level:2,title:"capitalize: Capitalizes all the whitespace separated words in a String.",slug:"capitalize-capitalizes-all-the-whitespace-separated-words-in-a-string",normalizedTitle:"capitalize: capitalizes all the whitespace separated words in a string.",charIndex:578},{level:2,title:"abbreviate: Truncates a string",slug:"abbreviate-truncates-a-string",normalizedTitle:"abbreviate: truncates a string",charIndex:653},{level:2,title:"wordWrap: Wraps words",slug:"wordwrap-wraps-words",normalizedTitle:"wordwrap: wraps words",charIndex:687},{level:2,title:"replace Replaces",slug:"replace-replaces",normalizedTitle:"replace replaces",charIndex:712},{level:2,title:"yesno: Boolean to yes / no",slug:"yesno-boolean-to-yes-no",normalizedTitle:"yesno: boolean to yes / no",charIndex:732}],lastUpdated:"6/3/2020, 5:58:29 AM",headersStr:"capitalizeFirst: Capitalizes the first character of the value. center: Centers the value in a field of a given width. cut: Removes all values of arg from the given string. defaultIfEmpty: Default if empty join: Join string ljust: Left-aligns the value in a field of a given width. rjust: Right-aligns the value in a field of a given width. substring Substring lower: Converts a string into all lowercase. upper Converts a string into all uppercase. stringFormat: Formats the variable stripTags: Strips all [X]HTML tags. capitalize: Capitalizes all the whitespace separated words in a String. abbreviate: Truncates a string wordWrap: Wraps words replace Replaces yesno: Boolean to yes / no",content:'# String functions\n * capitalizeFirst: Capitalizes the first character of the value.\n * center: Centers the value in a field of a given width.\n * cut: Removes all values of arg from the given string.\n * defaultIfEmpty: Default if empty\n * join: Join string\n * ljust: Left-aligns the value in a field of a given width.\n * rjust: Right-aligns the value in a field of a given width.\n * substring Substring\n * lower: Converts a string into all lowercase.\n * upper Converts a string into all uppercase.\n * stringFormat: Formats the variable\n * stripTags: Strips all [X]HTML tags.\n * capitalize: Capitalizes all the whitespace separated words in a String.\n * abbreviate: Truncates a string\n * wordWrap: Wraps words\n * replace Replaces\n * yesno: Boolean to yes / no\n\n\n\n# capitalizeFirst: Capitalizes the first character of the value.\nIf value is "kestra is cool !", the output will be "Kestra is cool !".\n\n{{capitalizeFirst value}}\n\n\n# center: Centers the value in a field of a given width.\nIf value is "Handlebars.java", the output will be " Handlebars.java ".\n\n{{ center value size=19 [pad="char"] }}\n\n\n# Arguments:\n * size\n * pad\n\n# cut: Removes all values of arg from the given string.\nIf value is "String with spaces", the output will be "Stringwithspaces".\n\n{{cut value [" "]}}\n\n\n# defaultIfEmpty: Default if empty\nIf value evaluates to False, uses the given default. Otherwise, uses the\nvalue. If value is "" (the empty string), the output will be nothing.\n\n{{defaultIfEmpty value ["nothing"] }}\n\n\n# join: Join string\nJoins an array, iterator or an iterable with a string.\n\n{{join value join [prefix=""] [suffix=""]}}\n\n\n# Arguments:\n * join\n * prefix\n * suffix\n\n> If value is the list [\'a\', \'b\', \'c\'], the output will be the string "a // b // c".\n\n\n{{join value " // " [prefix=""] [suffix=""]}}\n\n\n> Join the "a", "b", "c", the output will be the string "a // b // c".\n\n\n{{join "a" "b" "c" " // " [prefix=""] [suffix=""]}}\n\n\n# ljust: Left-aligns the value in a field of a given width.\nIf value is Handlebars.java, the output will be "Handlebars.java ".\n\n{{ljust value 20 [pad=" "] }}\n\n\n# Arguments:\n * field size\n\n# rjust: Right-aligns the value in a field of a given width.\nIf value is Handlebars.java, the output will be " Handlebars.java".\n\n{{rjust value 20 [pad=" "] }}\n\n\n# Arguments:\n * field size\n * pad\n\n# substring Substring\nReturns a new CharSequence that is a subsequence of this sequence.\nThe subsequence starts with the char value at the specified index and\nends with the char value at nd - 1*\n\n{{substring value start end }}\n\n\n# Arguments:\n * start offset\n * end offset\n\nFor example:\n\n> If value is Handlebars.java, the output will be "java".\n\n\n{{substring value 11 }}\n\n\n> If value is Handlebars.java, the output will be "Handlebars".\n\n\n{{substring value 0 10 }}\n\n\n# lower: Converts a string into all lowercase.\nIf value is \'Still MAD At Yoko\', the output will be \'still mad at yoko\'.\n\n{{lower value}}\n\n\n# upper Converts a string into all uppercase.\nIf value is \'Hello\', the output will be \'HELLO\'.\n\n{{upper value}}\n\n\n# slugify Converts to lowercase\nremoves non-word characters (alphanumerics and underscores) and converts spaces to hyphens. Also strips leading and trailing whitespace.\nIf value is "Joel is a slug", the output will be "joel-is-a-slug".\n\n{{slugify value}}\n\n\n# stringFormat: Formats the variable\nAccording to the argument, a string formatting specifier.\nIf value is "Hello %s" "handlebars.java", the output will be "Hello handlebars.java".\n\n{{stringFormat string param0 param1 ... paramN}}\n\n\n# Arguments:\n * format\n * paramN\n\n# stripTags: Strips all [X]HTML tags.\n{{stripTags value}}\n\n\n# capitalize: Capitalizes all the whitespace separated words in a String.\nIf value is "my first post", the output will be "My First Post".\n\n{{ capitalize value [fully=false]}}\n\n\nArguments:\n\n * fully\n\n# abbreviate: Truncates a string\nIf it is longer than the specified number of characters.\nTruncated strings will end with a translatable ellipsis sequence ("...").\nIf value is "Handlebars rocks", the output will be "Handlebars...".\n\n{{abbreviate value 13 }}\n\n\n# Arguments:\n * Number of characters to truncate to\n\n# wordWrap: Wraps words\nWrap sentence at specified line length. If value is Joel is a slug, the output would be: Joel\\nis a\\nslug\n\n{{ wordWrap value 5 }}\n\n\n# Arguments:\n * number of characters at which to wrap the text\n\n# replace Replaces\nEach substring of this string that matches the literal target sequence with the specified literal replacement sequence.\nIf value is "Handlebars ...", the output will be "Handlebars rocks".\n\n{{ replace value "..." "rocks" }}\n\n\n# yesno: Boolean to yes / no\nFor true, false and (optionally) null, to the strings "yes", "no", "maybe".\n\n# Arguments:\n * yes\n * no\n * maybe\n\n{{yesno value [yes="yes"] [no="no"] maybe=["maybe"] }}',normalizedContent:'# string functions\n * capitalizefirst: capitalizes the first character of the value.\n * center: centers the value in a field of a given width.\n * cut: removes all values of arg from the given string.\n * defaultifempty: default if empty\n * join: join string\n * ljust: left-aligns the value in a field of a given width.\n * rjust: right-aligns the value in a field of a given width.\n * substring substring\n * lower: converts a string into all lowercase.\n * upper converts a string into all uppercase.\n * stringformat: formats the variable\n * striptags: strips all [x]html tags.\n * capitalize: capitalizes all the whitespace separated words in a string.\n * abbreviate: truncates a string\n * wordwrap: wraps words\n * replace replaces\n * yesno: boolean to yes / no\n\n\n\n# capitalizefirst: capitalizes the first character of the value.\nif value is "kestra is cool !", the output will be "kestra is cool !".\n\n{{capitalizefirst value}}\n\n\n# center: centers the value in a field of a given width.\nif value is "handlebars.java", the output will be " handlebars.java ".\n\n{{ center value size=19 [pad="char"] }}\n\n\n# arguments:\n * size\n * pad\n\n# cut: removes all values of arg from the given string.\nif value is "string with spaces", the output will be "stringwithspaces".\n\n{{cut value [" "]}}\n\n\n# defaultifempty: default if empty\nif value evaluates to false, uses the given default. otherwise, uses the\nvalue. if value is "" (the empty string), the output will be nothing.\n\n{{defaultifempty value ["nothing"] }}\n\n\n# join: join string\njoins an array, iterator or an iterable with a string.\n\n{{join value join [prefix=""] [suffix=""]}}\n\n\n# arguments:\n * join\n * prefix\n * suffix\n\n> if value is the list [\'a\', \'b\', \'c\'], the output will be the string "a // b // c".\n\n\n{{join value " // " [prefix=""] [suffix=""]}}\n\n\n> join the "a", "b", "c", the output will be the string "a // b // c".\n\n\n{{join "a" "b" "c" " // " [prefix=""] [suffix=""]}}\n\n\n# ljust: left-aligns the value in a field of a given width.\nif value is handlebars.java, the output will be "handlebars.java ".\n\n{{ljust value 20 [pad=" "] }}\n\n\n# arguments:\n * field size\n\n# rjust: right-aligns the value in a field of a given width.\nif value is handlebars.java, the output will be " handlebars.java".\n\n{{rjust value 20 [pad=" "] }}\n\n\n# arguments:\n * field size\n * pad\n\n# substring substring\nreturns a new charsequence that is a subsequence of this sequence.\nthe subsequence starts with the char value at the specified index and\nends with the char value at nd - 1*\n\n{{substring value start end }}\n\n\n# arguments:\n * start offset\n * end offset\n\nfor example:\n\n> if value is handlebars.java, the output will be "java".\n\n\n{{substring value 11 }}\n\n\n> if value is handlebars.java, the output will be "handlebars".\n\n\n{{substring value 0 10 }}\n\n\n# lower: converts a string into all lowercase.\nif value is \'still mad at yoko\', the output will be \'still mad at yoko\'.\n\n{{lower value}}\n\n\n# upper converts a string into all uppercase.\nif value is \'hello\', the output will be \'hello\'.\n\n{{upper value}}\n\n\n# slugify converts to lowercase\nremoves non-word characters (alphanumerics and underscores) and converts spaces to hyphens. also strips leading and trailing whitespace.\nif value is "joel is a slug", the output will be "joel-is-a-slug".\n\n{{slugify value}}\n\n\n# stringformat: formats the variable\naccording to the argument, a string formatting specifier.\nif value is "hello %s" "handlebars.java", the output will be "hello handlebars.java".\n\n{{stringformat string param0 param1 ... paramn}}\n\n\n# arguments:\n * format\n * paramn\n\n# striptags: strips all [x]html tags.\n{{striptags value}}\n\n\n# capitalize: capitalizes all the whitespace separated words in a string.\nif value is "my first post", the output will be "my first post".\n\n{{ capitalize value [fully=false]}}\n\n\narguments:\n\n * fully\n\n# abbreviate: truncates a string\nif it is longer than the specified number of characters.\ntruncated strings will end with a translatable ellipsis sequence ("...").\nif value is "handlebars rocks", the output will be "handlebars...".\n\n{{abbreviate value 13 }}\n\n\n# arguments:\n * number of characters to truncate to\n\n# wordwrap: wraps words\nwrap sentence at specified line length. if value is joel is a slug, the output would be: joel\\nis a\\nslug\n\n{{ wordwrap value 5 }}\n\n\n# arguments:\n * number of characters at which to wrap the text\n\n# replace replaces\neach substring of this string that matches the literal target sequence with the specified literal replacement sequence.\nif value is "handlebars ...", the output will be "handlebars rocks".\n\n{{ replace value "..." "rocks" }}\n\n\n# yesno: boolean to yes / no\nfor true, false and (optionally) null, to the strings "yes", "no", "maybe".\n\n# arguments:\n * yes\n * no\n * maybe\n\n{{yesno value [yes="yes"] [no="no"] maybe=["maybe"] }}',charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"Vars functions",frontmatter:{meta:[{property:"article:modified_time",content:"2020-11-18T15:17:31.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Vars functions"},{property:"og:description",content:"Vars functions | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/docs/developer-guide/variables/vars.html"},{name:"twitter:title",content:"Vars functions"},{name:"twitter:description",content:"Vars functions | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/docs/developer-guide/variables/vars.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Vars functions | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/docs/developer-guide/variables/vars.html",relativePath:"docs/developer-guide/variables/vars.md",key:"v-d036673a",path:"/docs/developer-guide/variables/vars.html",headers:[{level:2,title:"firstDefined First defined variables",slug:"firstdefined-first-defined-variables",normalizedTitle:"firstdefined first defined variables",charIndex:20},{level:2,title:"eval Evaluate a handlebars expression",slug:"eval-evaluate-a-handlebars-expression",normalizedTitle:"eval evaluate a handlebars expression",charIndex:60},{level:2,title:"firstDefinedEval First defined evaluation",slug:"firstdefinedeval-first-defined-evaluation",normalizedTitle:"firstdefinedeval first defined evaluation",charIndex:101},{level:2,title:"get get an element for an array or map by key",slug:"get-get-an-element-for-an-array-or-map-by-key",normalizedTitle:"get get an element for an array or map by key",charIndex:146}],lastUpdated:"11/18/2020, 3:17:31 PM",headersStr:"firstDefined First defined variables eval Evaluate a handlebars expression firstDefinedEval First defined evaluation get get an element for an array or map by key",content:"# Vars functions\n * firstDefined First defined variables\n * eval Evaluate a handlebars expression\n * firstDefinedEval First defined evaluation\n * get get an element for an array or map by key\n\n\n\n# firstDefined First defined variables\nReturn the first defined variables or throw exception if no variables are defined.\n\n{{ firstDefined outputs.task1.uri outputs.task2.uri }}\n\n\n# eval Evaluate a handlebars expression\nEvaluate at runtime a handlebars expression based on the whole context.\n\nMostly useful for Lookup in current childs tasks tree and dynamic tasks.\n\n{{ eval 'outputs.first.[{{taskrun.value}}].value' }}\n\n\n# firstDefinedEval First defined evaluation\nFirst defined evaluate at runtime a handlebars expression based on the whole context or throw exception if no variables are defined.\n\nMostly useful for Lookup in current childs tasks tree and dynamic tasks.\n\n{{ firstDefined 'outputs.first.value' 'outputs.first.[{{taskrun.value}}].value' }}\n\n\n# get get an element for an array or map by key\n   {{get object [\"key\"]}}\n\n\n * get on object type map, the key at key\n * get on object type array, the index at key\n\nMostly useful for Lookup in current childs tasks tree and dynamic tasks.\n\n{{ get outputs 'first' }}",normalizedContent:"# vars functions\n * firstdefined first defined variables\n * eval evaluate a handlebars expression\n * firstdefinedeval first defined evaluation\n * get get an element for an array or map by key\n\n\n\n# firstdefined first defined variables\nreturn the first defined variables or throw exception if no variables are defined.\n\n{{ firstdefined outputs.task1.uri outputs.task2.uri }}\n\n\n# eval evaluate a handlebars expression\nevaluate at runtime a handlebars expression based on the whole context.\n\nmostly useful for lookup in current childs tasks tree and dynamic tasks.\n\n{{ eval 'outputs.first.[{{taskrun.value}}].value' }}\n\n\n# firstdefinedeval first defined evaluation\nfirst defined evaluate at runtime a handlebars expression based on the whole context or throw exception if no variables are defined.\n\nmostly useful for lookup in current childs tasks tree and dynamic tasks.\n\n{{ firstdefined 'outputs.first.value' 'outputs.first.[{{taskrun.value}}].value' }}\n\n\n# get get an element for an array or map by key\n   {{get object [\"key\"]}}\n\n\n * get on object type map, the key at key\n * get on object type array, the index at key\n\nmostly useful for lookup in current childs tasks tree and dynamic tasks.\n\n{{ get outputs 'first' }}",charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"Getting Started",frontmatter:{order:1,meta:[{property:"article:modified_time",content:"2020-11-23T20:44:50.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Getting Started"},{property:"og:description",content:"Getting Started | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/docs/getting-started/"},{name:"twitter:title",content:"Getting Started"},{name:"twitter:description",content:"Getting Started | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/docs/getting-started/"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Getting Started | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/docs/getting-started/",relativePath:"docs/getting-started/README.md",key:"v-787eb528",path:"/docs/getting-started/",headers:[{level:2,title:"Before you begin",slug:"before-you-begin",normalizedTitle:"before you begin",charIndex:20},{level:2,title:"Launch Kestra",slug:"launch-kestra",normalizedTitle:"launch kestra",charIndex:107},{level:2,title:"Create your first flow",slug:"create-your-first-flow",normalizedTitle:"create your first flow",charIndex:232},{level:2,title:"Execute your first flow",slug:"execute-your-first-flow",normalizedTitle:"execute your first flow",charIndex:843},{level:2,title:"Next Steps",slug:"next-steps",normalizedTitle:"next steps",charIndex:1139}],lastUpdated:"11/23/2020, 8:44:50 PM",headersStr:"Before you begin Launch Kestra Create your first flow Execute your first flow Next Steps",content:"# Getting Started\n# Before you begin\nMake sure you have already installed:\n\n * Docker\n * Docker Compose\n\n# Launch Kestra\n * Download the compose file here\n * Run docker-compose up -d\n * Open http://localhost:8080 on your browser\n\n# Create your first flow\nThe default installation is empty and don't contain any flows.\n\n\n\nWe will create the first one :\n\n\n\n * Click on the Create button at the button\n * Paste the flow below\n * Click on save\n\nid: logs\nnamespace: org.kestra.tests\n\ntasks:\n- id: t1\n  type: org.kestra.core.tasks.debugs.Echo\n  format: first {{task.id}}\n  level: TRACE\n- id: t2\n  type: org.kestra.core.tasks.debugs.Echo\n  format: second {{task.type}}\n  level: WARN\n- id: t3\n  type: org.kestra.core.tasks.debugs.Echo\n  format: third {{flow.id}}\n  level: ERROR\n\n\nYou will see the Topology of your flow as graph on Overview tabs.\n\n\n\n# Execute your first flow\nNow let's run our first flow and see it running :\n\n * Now hit the button Execute on top Tabs.\n * You will see in Real time the execution of the current flow\n   \n * Look at the log of the current tasks on Logs\n   \n * And watch the topology of the current execution.\n   \n\n# Next Steps\nNow, you are ready to use Kestra !\n\nNow I suggest you to read some documentations in order:\n\n * to understand Kestra concepts.\n * read the Developer Guide to understand how to code your own flow.\n * Look at Plugins to have some real task .\n * Deploy your kestra instance to real environments.",normalizedContent:"# getting started\n# before you begin\nmake sure you have already installed:\n\n * docker\n * docker compose\n\n# launch kestra\n * download the compose file here\n * run docker-compose up -d\n * open http://localhost:8080 on your browser\n\n# create your first flow\nthe default installation is empty and don't contain any flows.\n\n\n\nwe will create the first one :\n\n\n\n * click on the create button at the button\n * paste the flow below\n * click on save\n\nid: logs\nnamespace: org.kestra.tests\n\ntasks:\n- id: t1\n  type: org.kestra.core.tasks.debugs.echo\n  format: first {{task.id}}\n  level: trace\n- id: t2\n  type: org.kestra.core.tasks.debugs.echo\n  format: second {{task.type}}\n  level: warn\n- id: t3\n  type: org.kestra.core.tasks.debugs.echo\n  format: third {{flow.id}}\n  level: error\n\n\nyou will see the topology of your flow as graph on overview tabs.\n\n\n\n# execute your first flow\nnow let's run our first flow and see it running :\n\n * now hit the button execute on top tabs.\n * you will see in real time the execution of the current flow\n   \n * look at the log of the current tasks on logs\n   \n * and watch the topology of the current execution.\n   \n\n# next steps\nnow, you are ready to use kestra !\n\nnow i suggest you to read some documentations in order:\n\n * to understand kestra concepts.\n * read the developer guide to understand how to code your own flow.\n * look at plugins to have some real task .\n * deploy your kestra instance to real environments.",charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"Plugin Developer Guide",frontmatter:{order:6,meta:[{property:"article:modified_time",content:"2020-11-16T21:13:31.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Plugin Developer Guide"},{property:"og:description",content:"Plugin Developer Guide | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/docs/plugin-developer-guide/"},{name:"twitter:title",content:"Plugin Developer Guide"},{name:"twitter:description",content:"Plugin Developer Guide | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/docs/plugin-developer-guide/"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Plugin Developer Guide | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/docs/plugin-developer-guide/",relativePath:"docs/plugin-developer-guide/README.md",key:"v-4e9ad7a0",path:"/docs/plugin-developer-guide/",headers:[{level:2,title:"Requirements",slug:"requirements",normalizedTitle:"requirements",charIndex:117},{level:2,title:"Create a new plugins",slug:"create-a-new-plugins",normalizedTitle:"create a new plugins",charIndex:332},{level:2,title:"Develop a new plugins",slug:"develop-a-new-plugins",normalizedTitle:"develop a new plugins",charIndex:902}],lastUpdated:"11/16/2020, 9:13:31 PM",headersStr:"Requirements Create a new plugins Develop a new plugins",content:"# Plugin Developer Guide\nWe provide a plugin template in order to start quickly the development of a new plugins.\n\n# Requirements\nKestra plugins development requirements are :\n\n * Java 11 or later\n * IntelliJ IDEA (or any other Java IDE, we provide only help for IntelliJ IDEA)\n * Gradle (included most of the time with the IDE)\n\n# Create a new plugins\nHere is the step:\n\n 1. Go on the plugin-template repository.\n 2. Click on Use this template.\n 3. Choose the github account your want to link & repository name for the new plugins.\n 4. Clone the new repository: git clone git@github.com:{{user}}/{{name}}.git.\n 5. Open the cloned directory in IntelliJ IDEA.\n 6. Enable annotations processors.\n 7. If you are using an IntelliJ IDEA < 2020.03, install the lombok plugins (if not it's included by default).\n\nDone ! You are ready to create a new plugin, here is the directory structure you will have:\n\n\n# Develop a new plugins\nIn order to customize your plugin to your need you can follow this guide based on your need:",normalizedContent:"# plugin developer guide\nwe provide a plugin template in order to start quickly the development of a new plugins.\n\n# requirements\nkestra plugins development requirements are :\n\n * java 11 or later\n * intellij idea (or any other java ide, we provide only help for intellij idea)\n * gradle (included most of the time with the ide)\n\n# create a new plugins\nhere is the step:\n\n 1. go on the plugin-template repository.\n 2. click on use this template.\n 3. choose the github account your want to link & repository name for the new plugins.\n 4. clone the new repository: git clone git@github.com:{{user}}/{{name}}.git.\n 5. open the cloned directory in intellij idea.\n 6. enable annotations processors.\n 7. if you are using an intellij idea < 2020.03, install the lombok plugins (if not it's included by default).\n\ndone ! you are ready to create a new plugin, here is the directory structure you will have:\n\n\n# develop a new plugins\nin order to customize your plugin to your need you can follow this guide based on your need:",charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"Build a plugin",frontmatter:{order:8,meta:[{property:"article:modified_time",content:"2020-12-01T14:47:07.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Build a plugin"},{property:"og:description",content:"Build a plugin | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/docs/plugin-developer-guide/build/"},{name:"twitter:title",content:"Build a plugin"},{name:"twitter:description",content:"Build a plugin | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/docs/plugin-developer-guide/build/"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Build a plugin | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/docs/plugin-developer-guide/build/",relativePath:"docs/plugin-developer-guide/build/README.md",key:"v-af19e69c",path:"/docs/plugin-developer-guide/build/",lastUpdated:"12/1/2020, 2:47:07 PM",headersStr:null,content:"# Build a plugin\nKestra template include a gradle task in order to build your plugin.\n\nSimple use ./gradlew shadowJar to build your plugin.\n\nThe jar will be generated on the build/libs/*.jar directory.\n\nJust drop this jar on the Kestra plugins path and it will be usable by your Kestra instance.",normalizedContent:"# build a plugin\nkestra template include a gradle task in order to build your plugin.\n\nsimple use ./gradlew shadowjar to build your plugin.\n\nthe jar will be generated on the build/libs/*.jar directory.\n\njust drop this jar on the kestra plugins path and it will be usable by your kestra instance.",charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"Develop your Condition",frontmatter:{order:5,meta:[{property:"article:modified_time",content:"2020-11-16T21:13:31.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Develop your Condition"},{property:"og:description",content:"Develop your Condition | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/docs/plugin-developer-guide/conditions/"},{name:"twitter:title",content:"Develop your Condition"},{name:"twitter:description",content:"Develop your Condition | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/docs/plugin-developer-guide/conditions/"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Develop your Condition | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/docs/plugin-developer-guide/conditions/",relativePath:"docs/plugin-developer-guide/conditions/README.md",key:"v-e5195c30",path:"/docs/plugin-developer-guide/conditions/",lastUpdated:"11/16/2020, 9:13:31 PM",headersStr:null,content:'# Develop your Condition\nHere is the instruction to develop a Condition.\n\nHere is a simple condition example that validate the current flow:\n\n@SuperBuilder\n@ToString\n@EqualsAndHashCode\n@Getter\n@NoArgsConstructor\n@Schema(\n    title = "Condition for a specific flow"\n)\n@Plugin(\n    examples = {\n        @Example(\n            full = true,\n            code = {\n                "- conditions:",\n                "    - type: org.kestra.core.models.conditions.types.FlowCondition",\n                "      namespace: org.kestra.tests",\n                "      flowId: my-current-flow"\n            }\n        )\n    }\n)\npublic class FlowCondition extends Condition {\n    @NotNull\n    @Schema(title = "The namespace of the flow")\n    public String namespace;\n\n    @NotNull\n    @Schema(title = "The flow id")\n    public String flowId;\n\n    @Override\n    public boolean test(ConditionContext conditionContext) {\n        return conditionContext.getFlow().getNamespace().equals(this.namespace) && conditionContext.getFlow().getId().equals(this.flowId);\n    }\n}\n\n\nYou just need to extend Condition and implement the boolean test(ConditionContext conditionContext) method.\n\nYou can have any properties you want like for any task (validatation, documentation, ...) is working the same way.\n\nThe test will receive a ConditionContext that will expose :\n\n * conditionContext.getFlow(): the current flow\n * conditionContext.getExecution(): the current execution that can be null for Triggers\n * conditionContext.getRunContext(): a RunContext in order to render your properties.\n\nThis method must simply return a boolean in order to validate or not the Conditions.',normalizedContent:'# develop your condition\nhere is the instruction to develop a condition.\n\nhere is a simple condition example that validate the current flow:\n\n@superbuilder\n@tostring\n@equalsandhashcode\n@getter\n@noargsconstructor\n@schema(\n    title = "condition for a specific flow"\n)\n@plugin(\n    examples = {\n        @example(\n            full = true,\n            code = {\n                "- conditions:",\n                "    - type: org.kestra.core.models.conditions.types.flowcondition",\n                "      namespace: org.kestra.tests",\n                "      flowid: my-current-flow"\n            }\n        )\n    }\n)\npublic class flowcondition extends condition {\n    @notnull\n    @schema(title = "the namespace of the flow")\n    public string namespace;\n\n    @notnull\n    @schema(title = "the flow id")\n    public string flowid;\n\n    @override\n    public boolean test(conditioncontext conditioncontext) {\n        return conditioncontext.getflow().getnamespace().equals(this.namespace) && conditioncontext.getflow().getid().equals(this.flowid);\n    }\n}\n\n\nyou just need to extend condition and implement the boolean test(conditioncontext conditioncontext) method.\n\nyou can have any properties you want like for any task (validatation, documentation, ...) is working the same way.\n\nthe test will receive a conditioncontext that will expose :\n\n * conditioncontext.getflow(): the current flow\n * conditioncontext.getexecution(): the current execution that can be null for triggers\n * conditioncontext.getruncontext(): a runcontext in order to render your properties.\n\nthis method must simply return a boolean in order to validate or not the conditions.',charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"Develop your FlowableTask",frontmatter:{order:3,meta:[{property:"article:modified_time",content:"2020-11-16T21:13:31.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Develop your FlowableTask"},{property:"og:description",content:"Develop your FlowableTask | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/docs/plugin-developer-guide/flowable-task/"},{name:"twitter:title",content:"Develop your FlowableTask"},{name:"twitter:description",content:"Develop your FlowableTask | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/docs/plugin-developer-guide/flowable-task/"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Develop your FlowableTask | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/docs/plugin-developer-guide/flowable-task/",relativePath:"docs/plugin-developer-guide/flowable-task/README.md",key:"v-74d8f83a",path:"/docs/plugin-developer-guide/flowable-task/",lastUpdated:"11/16/2020, 9:13:31 PM",headersStr:null,content:"# Develop your FlowableTask\nFlowable are most complexe tasks to develop, and will be as possible available from the core team.\n\nWARNING\n\nJust keep in mind, a FlowableTask will be evaluated very frequently and must be cpu less operations, no IO can be done on this kind of tasks.\n\nIn a future, a full documentation will be available here. In a meantime, you can find all the actual Flowable tasks here to have some inspiration for Sequential or Parallel tasks development.",normalizedContent:"# develop your flowabletask\nflowable are most complexe tasks to develop, and will be as possible available from the core team.\n\nwarning\n\njust keep in mind, a flowabletask will be evaluated very frequently and must be cpu less operations, no io can be done on this kind of tasks.\n\nin a future, a full documentation will be available here. in a meantime, you can find all the actual flowable tasks here to have some inspiration for sequential or parallel tasks development.",charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"Outputs & Metrics from a script engine",frontmatter:{order:7,meta:[{property:"article:modified_time",content:"2020-12-01T14:47:07.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Outputs & Metrics from a script engine"},{property:"og:description",content:"Outputs & Metrics from a script engine | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/docs/plugin-developer-guide/outputs/"},{name:"twitter:title",content:"Outputs & Metrics from a script engine"},{name:"twitter:description",content:"Outputs & Metrics from a script engine | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/docs/plugin-developer-guide/outputs/"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Outputs & Metrics from a script engine | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/docs/plugin-developer-guide/outputs/",relativePath:"docs/plugin-developer-guide/outputs/README.md",key:"v-51cba32a",path:"/docs/plugin-developer-guide/outputs/",headers:[{level:2,title:"Script command",slug:"script-command",normalizedTitle:"script command",charIndex:318},{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:1004}],lastUpdated:"12/1/2020, 2:47:07 PM",headersStr:"Script command Examples",content:'# Outputs & Metrics from a script engine\nKestra can catch outputs & metrics from any scripting language. In the core, Python & Node inject an package to help you!\n\nIf you are using another language like Bash or another one, we don\'t provide any package to help, but you can easily do it with simple echo on stdout.\n\n# Script command\nKestra look at every outputs on standard out (or standard err) for a special ::{}:: with {} a compacted json string (not multiple line).\n\nHere is the full representation of the object :\n\n{\n    "outputs": { // map of key value with all the outputs you want to send\n        "my-key": "my-value",\n        "my-list": [1, 2, 3] // you can use \n    },\n    "metrics": [ // you can send multiple metrics at once\n       {\n            "name": "my-counter", // mandatory, the name of the metrics\n            "type": "counter", // mandatory, "counter" or "timer"\n            "value": 1.2, // mandatory (double), counter to add, or duration in seconds for timer \n       }\n    ]\n}\n\n\n# Examples\n# send some outputs with right type \necho \'::{"outputs":{"test":"value","int":2,"bool":true,"float":3.65}}::\'\n\n# send a counter with tags\necho \'::{"metrics":[{"name":"count","type":"counter","value":1,"tags":{"tag1":"i","tag2":"win"}}]}::\'\n\n# send a timer with tags\necho \'::{"metrics":[{"name":"timer2","type":"timer","value":2.12,"tags":{"tag1":"i","tag2":"destroy"}}]}::\'',normalizedContent:'# outputs & metrics from a script engine\nkestra can catch outputs & metrics from any scripting language. in the core, python & node inject an package to help you!\n\nif you are using another language like bash or another one, we don\'t provide any package to help, but you can easily do it with simple echo on stdout.\n\n# script command\nkestra look at every outputs on standard out (or standard err) for a special ::{}:: with {} a compacted json string (not multiple line).\n\nhere is the full representation of the object :\n\n{\n    "outputs": { // map of key value with all the outputs you want to send\n        "my-key": "my-value",\n        "my-list": [1, 2, 3] // you can use \n    },\n    "metrics": [ // you can send multiple metrics at once\n       {\n            "name": "my-counter", // mandatory, the name of the metrics\n            "type": "counter", // mandatory, "counter" or "timer"\n            "value": 1.2, // mandatory (double), counter to add, or duration in seconds for timer \n       }\n    ]\n}\n\n\n# examples\n# send some outputs with right type \necho \'::{"outputs":{"test":"value","int":2,"bool":true,"float":3.65}}::\'\n\n# send a counter with tags\necho \'::{"metrics":[{"name":"count","type":"counter","value":1,"tags":{"tag1":"i","tag2":"win"}}]}::\'\n\n# send a timer with tags\necho \'::{"metrics":[{"name":"timer2","type":"timer","value":2.12,"tags":{"tag1":"i","tag2":"destroy"}}]}::\'',charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"Gradle configuration",frontmatter:{order:1,meta:[{property:"article:modified_time",content:"2020-11-16T21:13:31.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Gradle configuration"},{property:"og:description",content:"Gradle configuration | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/docs/plugin-developer-guide/gradle/"},{name:"twitter:title",content:"Gradle configuration"},{name:"twitter:description",content:"Gradle configuration | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/docs/plugin-developer-guide/gradle/"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Gradle configuration | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/docs/plugin-developer-guide/gradle/",relativePath:"docs/plugin-developer-guide/gradle/README.md",key:"v-e228dff0",path:"/docs/plugin-developer-guide/gradle/",headers:[{level:2,title:"Mandatory configuration",slug:"mandatory-configuration",normalizedTitle:"mandatory configuration",charIndex:65},{level:2,title:"Others configurations",slug:"others-configurations",normalizedTitle:"others configurations",charIndex:614},{level:3,title:"Include some dependencies on plugins",slug:"include-some-dependencies-on-plugins",normalizedTitle:"include some dependencies on plugins",charIndex:638}],lastUpdated:"11/16/2020, 9:13:31 PM",headersStr:"Mandatory configuration Others configurations Include some dependencies on plugins",content:"# Gradle configuration\nWe use gradle as built tool in Kestra.\n\n# Mandatory configuration\nThe first thing you need to configure is the plugin name & the class package.\n\n 1. change in settings.gradle the rootProject.name = 'plugin-template' with your plugin name.\n 2. change the class package: by default, the template provide a package org.kestra.task.templates, just rename the folder in src/main/java & src/test/java\n 3. change the package name on build.gradle: replace group \"org.kestra.task.templates\" to the package name.\n\nNow you can start develop your task or look at other optional gradle configuration.\n\n# Others configurations\n# Include some dependencies on plugins\nYou can add as many dependencies with your plugins, that will be isolated in Kestra runtimes. By this way, we ensure the 2 different libs will not clash and have some runtime errors about missing methods.\n\nThe build.gradle handle most of Kestra use case by default using compileOnly group: \"org.kestra\", name: \"core\", version: kestraVersion for Kestra libs.\n\nBut if your plugin need some dependencies, you can add as many as you want that will be isolated, you just add to provide an api dependencies :\n\napi group: 'com.google.code.gson', name: 'gson', version: '2.8.6'",normalizedContent:"# gradle configuration\nwe use gradle as built tool in kestra.\n\n# mandatory configuration\nthe first thing you need to configure is the plugin name & the class package.\n\n 1. change in settings.gradle the rootproject.name = 'plugin-template' with your plugin name.\n 2. change the class package: by default, the template provide a package org.kestra.task.templates, just rename the folder in src/main/java & src/test/java\n 3. change the package name on build.gradle: replace group \"org.kestra.task.templates\" to the package name.\n\nnow you can start develop your task or look at other optional gradle configuration.\n\n# others configurations\n# include some dependencies on plugins\nyou can add as many dependencies with your plugins, that will be isolated in kestra runtimes. by this way, we ensure the 2 different libs will not clash and have some runtime errors about missing methods.\n\nthe build.gradle handle most of kestra use case by default using compileonly group: \"org.kestra\", name: \"core\", version: kestraversion for kestra libs.\n\nbut if your plugin need some dependencies, you can add as many as you want that will be isolated, you just add to provide an api dependencies :\n\napi group: 'com.google.code.gson', name: 'gson', version: '2.8.6'",charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"Publish a plugin",frontmatter:{order:9,meta:[{property:"article:modified_time",content:"2020-12-01T14:47:07.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Publish a plugin"},{property:"og:description",content:"Publish a plugin | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/docs/plugin-developer-guide/publish/"},{name:"twitter:title",content:"Publish a plugin"},{name:"twitter:description",content:"Publish a plugin | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/docs/plugin-developer-guide/publish/"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Publish a plugin | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/docs/plugin-developer-guide/publish/",relativePath:"docs/plugin-developer-guide/publish/README.md",key:"v-c38cdba0",path:"/docs/plugin-developer-guide/publish/",headers:[{level:2,title:"With GitHub Actions",slug:"with-github-actions",normalizedTitle:"with github actions",charIndex:21},{level:2,title:"Publish on Bintray",slug:"publish-on-bintray",normalizedTitle:"publish on bintray",charIndex:199},{level:2,title:"To others artifact manager",slug:"to-others-artifact-manager",normalizedTitle:"to others artifact manager",charIndex:971}],lastUpdated:"12/1/2020, 2:47:07 PM",headersStr:"With GitHub Actions Publish on Bintray To others artifact manager",content:"# Publish a plugin\n# With GitHub Actions\nThe template include a GitHub Actions workflow in order to test.\nFeel free to add any step to start containers for integration, deploy to artifactory, ...\n\n# Publish on Bintray\nThe template also include a gradle task that will publish to Bintray account.\n\nYou only need export to env vars :\n\n * BINTRAY_USER: your bintray username\n * BINTRAY_KEY: your bintray key.\n\nYou can customize the build.gradle to fit with your bintray account, the default one is the kestra account that you will not have any right to publish.\n\nYou can also add this step to publish to bintray on the .github/workflows/main.yml files:\n\n      # Publish package\n      - name: Publish package\n        if: startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/master'\n        env:\n          BINTRAY_USER: ${{ secrets.BINTRAY_USER }}\n          BINTRAY_KEY: ${{ secrets.BINTRAY_KEY }}\n        run: ./gradlew bintrayUpload --parallel --no-daemon\n\n\n# To others artifact manager\nSince Kestra plugins are a simple java app, you can customize the Github Actions and the gradle build to publish anywhere.\nJust look at for your artifact gradle plugins and add this to both.",normalizedContent:"# publish a plugin\n# with github actions\nthe template include a github actions workflow in order to test.\nfeel free to add any step to start containers for integration, deploy to artifactory, ...\n\n# publish on bintray\nthe template also include a gradle task that will publish to bintray account.\n\nyou only need export to env vars :\n\n * bintray_user: your bintray username\n * bintray_key: your bintray key.\n\nyou can customize the build.gradle to fit with your bintray account, the default one is the kestra account that you will not have any right to publish.\n\nyou can also add this step to publish to bintray on the .github/workflows/main.yml files:\n\n      # publish package\n      - name: publish package\n        if: startswith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/master'\n        env:\n          bintray_user: ${{ secrets.bintray_user }}\n          bintray_key: ${{ secrets.bintray_key }}\n        run: ./gradlew bintrayupload --parallel --no-daemon\n\n\n# to others artifact manager\nsince kestra plugins are a simple java app, you can customize the github actions and the gradle build to publish anywhere.\njust look at for your artifact gradle plugins and add this to both.",charsets:{cjk:!0},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"Develop your Trigger",frontmatter:{order:4,meta:[{property:"article:modified_time",content:"2020-11-16T21:13:31.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Develop your Trigger"},{property:"og:description",content:"Develop your Trigger | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/docs/plugin-developer-guide/triggers/"},{name:"twitter:title",content:"Develop your Trigger"},{name:"twitter:description",content:"Develop your Trigger | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/docs/plugin-developer-guide/triggers/"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Develop your Trigger | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/docs/plugin-developer-guide/triggers/",relativePath:"docs/plugin-developer-guide/triggers/README.md",key:"v-2e06cf88",path:"/docs/plugin-developer-guide/triggers/",lastUpdated:"11/16/2020, 9:13:31 PM",headersStr:null,content:"# Develop your Trigger\nHere is the instruction to develop a Trigger.\n\nHere is a simple Trigger example that will trigger an execution randomly:\n\n\n@SuperBuilder\n@ToString\n@EqualsAndHashCode\n@Getter\n@NoArgsConstructor\n\npublic class Trigger extends AbstractTrigger implements PollingTriggerInterface, TriggerOutput<Trigger.Random> {\n    @Builder.Default\n    private final Duration interval = Duration.ofSeconds(60);\n\n    protected Double min = 0.5;\n\n    @Override\n    public Optional<Execution> evaluate(RunContext runContext, TriggerContext context) throws Exception {\n        Logger logger = runContext.logger();\n        double random = Math.random();\n\n        if (random < this.min) {\n            return Optional.empty();\n        }\n\n        Execution execution = Execution.builder()\n            .id(IdUtils.create())\n            .namespace(context.getNamespace())\n            .flowId(context.getFlowId())\n            .flowRevision(context.getFlowRevision())\n            .state(new State())\n            .trigger(ExecutionTrigger.of(\n                this,\n                Trigger.Random.builder().random(random).build()\n            ))\n            .build();\n\n        return Optional.of(execution);\n    }\n\n    @Builder\n    @Getter\n    public class Random implements org.kestra.core.models.tasks.Output {\n        private Double random;\n    }\n}\n\n\nYou just need to extend PollingTriggerInterface and implement the Optional<Execution> evaluate(RunContext runContext, TriggerContext context) method.\n\nYou can have any properties you want like for any task (validation, documentation, ...) is working the same way.\n\nThe test will receive these arguments :\n\n * RunContext runContext: a RunContext in order to render your properties.\n * TriggerContext context: to have the context of this call (flow, execution, trigger, date, ...)\n\nIn this method, you add any logic you want, connect to a database, connect to remove file systems.\nYou don't have to take care of ressource, Kestra will run this method in this own thread.\n\nThis method must simply return an Optional<Execution> with :\n\n * Optional.empty(): if the condition is not validated\n * Optional.of(execution): with the execution created if the condition is validated.\n\nYou have to provide a TriggerOutput<T> for any output needed (result of query, result of file system listing, ...) that will be available for the flow tasks withing the {{ trigger.* }} variables.\n\nWARNING\n\nTake care that the trigger must free the resource for the next evaluation, for each interval, this method will be called, and if the condition are meet, an execution will be created.\n\nTo avoid this, move the file, remove the record from the database, but take an action to avoid an infinite triggering.",normalizedContent:"# develop your trigger\nhere is the instruction to develop a trigger.\n\nhere is a simple trigger example that will trigger an execution randomly:\n\n\n@superbuilder\n@tostring\n@equalsandhashcode\n@getter\n@noargsconstructor\n\npublic class trigger extends abstracttrigger implements pollingtriggerinterface, triggeroutput<trigger.random> {\n    @builder.default\n    private final duration interval = duration.ofseconds(60);\n\n    protected double min = 0.5;\n\n    @override\n    public optional<execution> evaluate(runcontext runcontext, triggercontext context) throws exception {\n        logger logger = runcontext.logger();\n        double random = math.random();\n\n        if (random < this.min) {\n            return optional.empty();\n        }\n\n        execution execution = execution.builder()\n            .id(idutils.create())\n            .namespace(context.getnamespace())\n            .flowid(context.getflowid())\n            .flowrevision(context.getflowrevision())\n            .state(new state())\n            .trigger(executiontrigger.of(\n                this,\n                trigger.random.builder().random(random).build()\n            ))\n            .build();\n\n        return optional.of(execution);\n    }\n\n    @builder\n    @getter\n    public class random implements org.kestra.core.models.tasks.output {\n        private double random;\n    }\n}\n\n\nyou just need to extend pollingtriggerinterface and implement the optional<execution> evaluate(runcontext runcontext, triggercontext context) method.\n\nyou can have any properties you want like for any task (validation, documentation, ...) is working the same way.\n\nthe test will receive these arguments :\n\n * runcontext runcontext: a runcontext in order to render your properties.\n * triggercontext context: to have the context of this call (flow, execution, trigger, date, ...)\n\nin this method, you add any logic you want, connect to a database, connect to remove file systems.\nyou don't have to take care of ressource, kestra will run this method in this own thread.\n\nthis method must simply return an optional<execution> with :\n\n * optional.empty(): if the condition is not validated\n * optional.of(execution): with the execution created if the condition is validated.\n\nyou have to provide a triggeroutput<t> for any output needed (result of query, result of file system listing, ...) that will be available for the flow tasks withing the {{ trigger.* }} variables.\n\nwarning\n\ntake care that the trigger must free the resource for the next evaluation, for each interval, this method will be called, and if the condition are meet, an execution will be created.\n\nto avoid this, move the file, remove the record from the database, but take an action to avoid an infinite triggering.",charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"Add unit tests",frontmatter:{order:6,meta:[{property:"article:modified_time",content:"2020-11-16T21:13:31.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Add unit tests"},{property:"og:description",content:"Add unit tests | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/docs/plugin-developer-guide/unit-test/"},{name:"twitter:title",content:"Add unit tests"},{name:"twitter:description",content:"Add unit tests | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/docs/plugin-developer-guide/unit-test/"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Add unit tests | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/docs/plugin-developer-guide/unit-test/",relativePath:"docs/plugin-developer-guide/unit-test/README.md",key:"v-528bedd8",path:"/docs/plugin-developer-guide/unit-test/",headers:[{level:2,title:"Unit test a RunnableTask",slug:"unit-test-a-runnabletask",normalizedTitle:"unit test a runnabletask",charIndex:184},{level:2,title:"Unit test with a full flow",slug:"unit-test-with-a-full-flow",normalizedTitle:"unit test with a full flow",charIndex:1010}],lastUpdated:"11/16/2020, 9:13:31 PM",headersStr:"Unit test a RunnableTask Unit test with a full flow",content:'# Add unit tests\nKestra is build from the inception with unit test in mind. A task must be unit testable to avoid regression and bug. So we provide 2 ways to unit test your tasks :\n\n# Unit test a RunnableTask\nThis is the most common way to test a RunnableTask. You simply create your RunnableTask, and test output or Exception. This will cover most of the case.\nHere is an example :\n\n\n@MicronautTest\nclass ExampleTest {\n    @Inject\n    private RunContextFactory runContextFactory;\n\n    @Test\n    void run() throws Exception {\n        RunContext runContext = runContextFactory.of(ImmutableMap.of("variable", "John Doe"));\n\n        Example task = Example.builder()\n            .format("Hello {{ variable }}")\n            .build();\n\n        Example.Output runOutput = task.run(runContext);\n\n        assertThat(runOutput.getChild().getValue(), is(StringUtils.reverse("Hello John Doe")));\n    }\n}\n\n\nAs simple as any java unit test, fell free to used any dependencies, test method, started docker containers, ...\n\n# Unit test with a full flow\nMaybe you want to add some unit test with a full flow, in some rare case, it can be necessary (mostly for FlowableTask).\n\nHere is an example:\n\n@MicronautTest\nclass ExampleRunnerTest {\n    @Inject\n    protected MemoryRunner runner;\n\n    @Inject\n    protected RunnerUtils runnerUtils;\n\n    @Inject\n    protected LocalFlowRepositoryLoader repositoryLoader;\n\n    @BeforeEach\n    private void init() throws IOException, URISyntaxException {\n        repositoryLoader.load(Objects.requireNonNull(ExampleRunnerTest.class.getClassLoader().getResource("flows")));\n        this.runner.run();\n    }\n\n    @SuppressWarnings("unchecked")\n    @Test\n    void flow() throws TimeoutException {\n        Execution execution = runnerUtils.runOne("org.kestra.templates", "example");\n\n        assertThat(execution.getTaskRunList(), hasSize(3));\n        assertThat(((Map<String, Object>)execution.getTaskRunList().get(2).getOutputs().get("child")).get("value"), is("task-id"));\n    }\n}\n\n\nwith this, you will :\n\n * Inject all dependencies with @MicronautTest\n * on init(), load all the flow on the src/resources/flow directory.\n * run an full execution with Execution execution = runnerUtils.runOne("org.kestra.templates", "example");\n\nWith this execution, you can look at all the properties you want to control (status, taskRunList number, outputs, ...)\n\nTo make it work, you need to have an application.yml files with this minimum configuration :\n\nkestra:\n  repository:\n    type: memory\n  queue:\n    type: memory\n  storage:\n    type: local\n    local:\n      base-path: /tmp/unittest\n\n\nAnd these dependencies on your build.gradle :\n\n    testImplementation group: "org.kestra", name: "core", version: kestraVersion\n    testImplementation group: "org.kestra", name: "repository-memory", version: kestraVersion\n    testImplementation group: "org.kestra", name: "runner-memory", version: kestraVersion\n    testImplementation group: "org.kestra", name: "storage-local", version: kestraVersion\n\n\nthis will enabled the in memory runner to work and to run your flow without any others dependencies (kafka, ...)',normalizedContent:'# add unit tests\nkestra is build from the inception with unit test in mind. a task must be unit testable to avoid regression and bug. so we provide 2 ways to unit test your tasks :\n\n# unit test a runnabletask\nthis is the most common way to test a runnabletask. you simply create your runnabletask, and test output or exception. this will cover most of the case.\nhere is an example :\n\n\n@micronauttest\nclass exampletest {\n    @inject\n    private runcontextfactory runcontextfactory;\n\n    @test\n    void run() throws exception {\n        runcontext runcontext = runcontextfactory.of(immutablemap.of("variable", "john doe"));\n\n        example task = example.builder()\n            .format("hello {{ variable }}")\n            .build();\n\n        example.output runoutput = task.run(runcontext);\n\n        assertthat(runoutput.getchild().getvalue(), is(stringutils.reverse("hello john doe")));\n    }\n}\n\n\nas simple as any java unit test, fell free to used any dependencies, test method, started docker containers, ...\n\n# unit test with a full flow\nmaybe you want to add some unit test with a full flow, in some rare case, it can be necessary (mostly for flowabletask).\n\nhere is an example:\n\n@micronauttest\nclass examplerunnertest {\n    @inject\n    protected memoryrunner runner;\n\n    @inject\n    protected runnerutils runnerutils;\n\n    @inject\n    protected localflowrepositoryloader repositoryloader;\n\n    @beforeeach\n    private void init() throws ioexception, urisyntaxexception {\n        repositoryloader.load(objects.requirenonnull(examplerunnertest.class.getclassloader().getresource("flows")));\n        this.runner.run();\n    }\n\n    @suppresswarnings("unchecked")\n    @test\n    void flow() throws timeoutexception {\n        execution execution = runnerutils.runone("org.kestra.templates", "example");\n\n        assertthat(execution.gettaskrunlist(), hassize(3));\n        assertthat(((map<string, object>)execution.gettaskrunlist().get(2).getoutputs().get("child")).get("value"), is("task-id"));\n    }\n}\n\n\nwith this, you will :\n\n * inject all dependencies with @micronauttest\n * on init(), load all the flow on the src/resources/flow directory.\n * run an full execution with execution execution = runnerutils.runone("org.kestra.templates", "example");\n\nwith this execution, you can look at all the properties you want to control (status, taskrunlist number, outputs, ...)\n\nto make it work, you need to have an application.yml files with this minimum configuration :\n\nkestra:\n  repository:\n    type: memory\n  queue:\n    type: memory\n  storage:\n    type: local\n    local:\n      base-path: /tmp/unittest\n\n\nand these dependencies on your build.gradle :\n\n    testimplementation group: "org.kestra", name: "core", version: kestraversion\n    testimplementation group: "org.kestra", name: "repository-memory", version: kestraversion\n    testimplementation group: "org.kestra", name: "runner-memory", version: kestraversion\n    testimplementation group: "org.kestra", name: "storage-local", version: kestraversion\n\n\nthis will enabled the in memory runner to work and to run your flow without any others dependencies (kafka, ...)',charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"User Interface Guide",frontmatter:{order:6,meta:[{property:"article:modified_time",content:"2020-11-14T16:25:54.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"User Interface Guide"},{property:"og:description",content:"User Interface Guide | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/docs/user-interface-guide/"},{name:"twitter:title",content:"User Interface Guide"},{name:"twitter:description",content:"User Interface Guide | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/docs/user-interface-guide/"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"User Interface Guide | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/docs/user-interface-guide/",relativePath:"docs/user-interface-guide/README.md",key:"v-209f3a3c",path:"/docs/user-interface-guide/",headers:[{level:2,title:"Flows",slug:"flows",normalizedTitle:"flows",charIndex:137},{level:2,title:"Executions",slug:"executions",normalizedTitle:"executions",charIndex:157},{level:2,title:"Task Runs",slug:"task-runs",normalizedTitle:"task runs",charIndex:182},{level:2,title:"Logs",slug:"logs",normalizedTitle:"logs",charIndex:196},{level:2,title:"Documentation",slug:"documentation",normalizedTitle:"documentation",charIndex:205}],lastUpdated:"11/14/2020, 4:25:54 PM",headersStr:"Flows Executions Task Runs Logs Documentation",content:"# User Interface Guide\nKestra comes with a web user interface. For now, here are some screenshots, Later a full user guide will here.\n\n# Flows\n\n\n\n\n\n\n\n\n\n\n\n\n# Executions\n\n\n\n\n\n\n\n\n\n\n\n\n# Task Runs\n\n\n# Logs\n\n\n# Documentation",normalizedContent:"# user interface guide\nkestra comes with a web user interface. for now, here are some screenshots, later a full user guide will here.\n\n# flows\n\n\n\n\n\n\n\n\n\n\n\n\n# executions\n\n\n\n\n\n\n\n\n\n\n\n\n# task runs\n\n\n# logs\n\n\n# documentation",charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"Plugins",frontmatter:{meta:[{property:"article:modified_time",content:"2020-11-09T20:39:04.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Plugins"},{property:"og:description",content:"Plugins | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/"},{name:"twitter:title",content:"Plugins"},{name:"twitter:description",content:"Plugins | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/plugins/"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Plugins | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/plugins/",relativePath:"plugins/README.md",key:"v-8c82ad54",path:"/plugins/",lastUpdated:"11/9/2020, 8:39:04 PM",headersStr:null,content:"# Plugins\nThis section all the official plugins for Kestra that is maintained by core Kestra developpers.\n\nPlugins available are :",normalizedContent:"# plugins\nthis section all the official plugins for kestra that is maintained by core kestra developpers.\n\nplugins available are :",charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"Core",frontmatter:{title:"Core",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Core"},{property:"og:description",content:"Core | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/core/"},{name:"twitter:title",content:"Core"},{name:"twitter:description",content:"Core | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/plugins/core/"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Core | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/plugins/core/",relativePath:"plugins/core/README.md",key:"v-cb94d530",path:"/plugins/core/",headers:[{level:2,title:"Storages",slug:"storages",normalizedTitle:"storages",charIndex:9},{level:3,title:"Tasks",slug:"tasks",normalizedTitle:"tasks",charIndex:20},{level:2,title:"Common",slug:"common",normalizedTitle:"common",charIndex:49},{level:3,title:"Triggers",slug:"triggers",normalizedTitle:"triggers",charIndex:58},{level:3,title:"Conditions",slug:"conditions",normalizedTitle:"conditions",charIndex:90},{level:2,title:"Debugs",slug:"debugs",normalizedTitle:"debugs",charIndex:281},{level:3,title:"Tasks",slug:"tasks-2",normalizedTitle:"tasks",charIndex:20},{level:2,title:"Flows",slug:"flows",normalizedTitle:"flows",charIndex:317},{level:3,title:"Tasks",slug:"tasks-3",normalizedTitle:"tasks",charIndex:20},{level:2,title:"Scripts",slug:"scripts",normalizedTitle:"scripts",charIndex:440},{level:3,title:"Tasks",slug:"tasks-4",normalizedTitle:"tasks",charIndex:20}],headersStr:"Storages Tasks Common Triggers Conditions Debugs Tasks Flows Tasks Scripts Tasks",content:"# Core\n# Storages\n# Tasks\n * Concat\n * Delete\n\n# Common\n# Triggers\n * Flow\n * Schedule\n\n# Conditions\n * ExecutionFlowCondition\n * ExecutionNamespaceCondition\n * ExecutionStatusCondition\n * FlowCondition\n * FlowNamespaceCondition\n * VariableCondition\n * ExecutionStatusCondition\n\n# Debugs\n# Tasks\n * Echo\n * Return\n\n# Flows\n# Tasks\n * AllowFailure\n * EachParallel\n * EachSequential\n * Flow\n * Parallel\n * Sequential\n * Switch\n * Template\n\n# Scripts\n# Tasks\n * Bash\n * Node\n * Python",normalizedContent:"# core\n# storages\n# tasks\n * concat\n * delete\n\n# common\n# triggers\n * flow\n * schedule\n\n# conditions\n * executionflowcondition\n * executionnamespacecondition\n * executionstatuscondition\n * flowcondition\n * flownamespacecondition\n * variablecondition\n * executionstatuscondition\n\n# debugs\n# tasks\n * echo\n * return\n\n# flows\n# tasks\n * allowfailure\n * eachparallel\n * eachsequential\n * flow\n * parallel\n * sequential\n * switch\n * template\n\n# scripts\n# tasks\n * bash\n * node\n * python",charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"ExecutionFlowCondition",frontmatter:{title:"ExecutionFlowCondition",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"ExecutionFlowCondition"},{property:"og:description",content:"ExecutionFlowCondition | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/core/conditions/org.kestra.core.models.conditions.types.ExecutionFlowCondition.html"},{name:"twitter:title",content:"ExecutionFlowCondition"},{name:"twitter:description",content:"ExecutionFlowCondition | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/plugins/core/conditions/org.kestra.core.models.conditions.types.ExecutionFlowCondition.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"ExecutionFlowCondition | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/plugins/core/conditions/org.kestra.core.models.conditions.types.ExecutionFlowCondition.html",relativePath:"plugins/core/conditions/org.kestra.core.models.conditions.types.ExecutionFlowCondition.md",key:"v-887ced7e",path:"/plugins/core/conditions/org.kestra.core.models.conditions.types.ExecutionFlowCondition.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:150},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:316},{level:3,title:"flowId",slug:"flowid",normalizedTitle:"flowid",charIndex:288},{level:3,title:"namespace",slug:"namespace",normalizedTitle:"namespace",charIndex:254}],headersStr:"Examples Inputs flowId namespace",content:'# ExecutionFlowCondition\ntype: "org.kestra.core.models.conditions.types.ExecutionFlowCondition"\n\n\n> Condition for a specific flow of an execution\n\n\n# Examples\n- conditions:\n    - type: org.kestra.core.models.conditions.types.ExecutionFlowCondition\n      namespace: org.kestra.tests\n      flowId: my-current-flow\n\n\n# Inputs\n# flowId\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n\n> The flow id\n\n\n# namespace\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n\n> The namespace of the flow',normalizedContent:'# executionflowcondition\ntype: "org.kestra.core.models.conditions.types.executionflowcondition"\n\n\n> condition for a specific flow of an execution\n\n\n# examples\n- conditions:\n    - type: org.kestra.core.models.conditions.types.executionflowcondition\n      namespace: org.kestra.tests\n      flowid: my-current-flow\n\n\n# inputs\n# flowid\n * type: string\n * dynamic: ❓\n * required: ✔️\n\n> the flow id\n\n\n# namespace\n * type: string\n * dynamic: ❓\n * required: ✔️\n\n> the namespace of the flow',charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"ExecutionNamespaceCondition",frontmatter:{title:"ExecutionNamespaceCondition",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"ExecutionNamespaceCondition"},{property:"og:description",content:"ExecutionNamespaceCondition | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/core/conditions/org.kestra.core.models.conditions.types.ExecutionNamespaceCondition.html"},{name:"twitter:title",content:"ExecutionNamespaceCondition"},{name:"twitter:description",content:"ExecutionNamespaceCondition | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/plugins/core/conditions/org.kestra.core.models.conditions.types.ExecutionNamespaceCondition.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"ExecutionNamespaceCondition | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/plugins/core/conditions/org.kestra.core.models.conditions.types.ExecutionNamespaceCondition.html",relativePath:"plugins/core/conditions/org.kestra.core.models.conditions.types.ExecutionNamespaceCondition.md",key:"v-71cae13a",path:"/plugins/core/conditions/org.kestra.core.models.conditions.types.ExecutionNamespaceCondition.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:151},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:311},{level:3,title:"namespace",slug:"namespace",normalizedTitle:"namespace",charIndex:137},{level:3,title:"prefix",slug:"prefix",normalizedTitle:"prefix",charIndex:294}],headersStr:"Examples Inputs namespace prefix",content:'# ExecutionNamespaceCondition\ntype: "org.kestra.core.models.conditions.types.ExecutionNamespaceCondition"\n\n\n> Condition for an execution namespace\n\n\n# Examples\n- conditions:\n    - type: org.kestra.core.models.conditions.types.ExecutionNamespaceCondition\n      namespace: org.kestra.tests\n      prefix: true\n\n\n# Inputs\n# namespace\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n\nThe namespace of the flow or the prefix if prefix is true\n\n# prefix\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\nIf we must look at the flow namespace by prefix (simple startWith case sensitive)',normalizedContent:'# executionnamespacecondition\ntype: "org.kestra.core.models.conditions.types.executionnamespacecondition"\n\n\n> condition for an execution namespace\n\n\n# examples\n- conditions:\n    - type: org.kestra.core.models.conditions.types.executionnamespacecondition\n      namespace: org.kestra.tests\n      prefix: true\n\n\n# inputs\n# namespace\n * type: string\n * dynamic: ❓\n * required: ✔️\n\nthe namespace of the flow or the prefix if prefix is true\n\n# prefix\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\nif we must look at the flow namespace by prefix (simple startwith case sensitive)',charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"FlowCondition",frontmatter:{title:"FlowCondition",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"FlowCondition"},{property:"og:description",content:"FlowCondition | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/core/conditions/org.kestra.core.models.conditions.types.FlowCondition.html"},{name:"twitter:title",content:"FlowCondition"},{name:"twitter:description",content:"FlowCondition | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/plugins/core/conditions/org.kestra.core.models.conditions.types.FlowCondition.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"FlowCondition | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/plugins/core/conditions/org.kestra.core.models.conditions.types.FlowCondition.html",relativePath:"plugins/core/conditions/org.kestra.core.models.conditions.types.FlowCondition.md",key:"v-692642c3",path:"/plugins/core/conditions/org.kestra.core.models.conditions.types.FlowCondition.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:116},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:273},{level:3,title:"flowId",slug:"flowid",normalizedTitle:"flowid",charIndex:245},{level:3,title:"namespace",slug:"namespace",normalizedTitle:"namespace",charIndex:211}],headersStr:"Examples Inputs flowId namespace",content:'# FlowCondition\ntype: "org.kestra.core.models.conditions.types.FlowCondition"\n\n\n> Condition for a specific flow\n\n\n# Examples\n- conditions:\n    - type: org.kestra.core.models.conditions.types.FlowCondition\n      namespace: org.kestra.tests\n      flowId: my-current-flow\n\n\n# Inputs\n# flowId\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n\n> The flow id\n\n\n# namespace\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n\n> The namespace of the flow',normalizedContent:'# flowcondition\ntype: "org.kestra.core.models.conditions.types.flowcondition"\n\n\n> condition for a specific flow\n\n\n# examples\n- conditions:\n    - type: org.kestra.core.models.conditions.types.flowcondition\n      namespace: org.kestra.tests\n      flowid: my-current-flow\n\n\n# inputs\n# flowid\n * type: string\n * dynamic: ❓\n * required: ✔️\n\n> the flow id\n\n\n# namespace\n * type: string\n * dynamic: ❓\n * required: ✔️\n\n> the namespace of the flow',charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"ExecutionStatusCondition",frontmatter:{title:"ExecutionStatusCondition",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"ExecutionStatusCondition"},{property:"og:description",content:"ExecutionStatusCondition | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/core/conditions/org.kestra.core.models.conditions.types.ExecutionStatusCondition.html"},{name:"twitter:title",content:"ExecutionStatusCondition"},{name:"twitter:description",content:"ExecutionStatusCondition | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/plugins/core/conditions/org.kestra.core.models.conditions.types.ExecutionStatusCondition.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"ExecutionStatusCondition | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/plugins/core/conditions/org.kestra.core.models.conditions.types.ExecutionStatusCondition.html",relativePath:"plugins/core/conditions/org.kestra.core.models.conditions.types.ExecutionStatusCondition.md",key:"v-6f20d009",path:"/plugins/core/conditions/org.kestra.core.models.conditions.types.ExecutionStatusCondition.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:144},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:307},{level:3,title:"in",slug:"in",normalizedTitle:"in",charIndex:250},{level:3,title:"notIn",slug:"notin",normalizedTitle:"notin",charIndex:278}],headersStr:"Examples Inputs in notIn",content:'# ExecutionStatusCondition\ntype: "org.kestra.core.models.conditions.types.ExecutionStatusCondition"\n\n\n> Condition based on execution status\n\n\n# Examples\n- conditions:\n    - type: org.kestra.core.models.conditions.types.ExecutionStatusCondition\n      in:\n        - SUCCESS\n      notIn: \n        - FAILED\n\n\n# Inputs\n# in\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n\n> List of state that are authorized\n\n\n# notIn\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n\n> List of state that aren\'t authorized',normalizedContent:'# executionstatuscondition\ntype: "org.kestra.core.models.conditions.types.executionstatuscondition"\n\n\n> condition based on execution status\n\n\n# examples\n- conditions:\n    - type: org.kestra.core.models.conditions.types.executionstatuscondition\n      in:\n        - success\n      notin: \n        - failed\n\n\n# inputs\n# in\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n\n> list of state that are authorized\n\n\n# notin\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n\n> list of state that aren\'t authorized',charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"FlowNamespaceCondition",frontmatter:{title:"FlowNamespaceCondition",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"FlowNamespaceCondition"},{property:"og:description",content:"FlowNamespaceCondition | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/core/conditions/org.kestra.core.models.conditions.types.FlowNamespaceCondition.html"},{name:"twitter:title",content:"FlowNamespaceCondition"},{name:"twitter:description",content:"FlowNamespaceCondition | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/plugins/core/conditions/org.kestra.core.models.conditions.types.FlowNamespaceCondition.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"FlowNamespaceCondition | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/plugins/core/conditions/org.kestra.core.models.conditions.types.FlowNamespaceCondition.html",relativePath:"plugins/core/conditions/org.kestra.core.models.conditions.types.FlowNamespaceCondition.md",key:"v-1b5304cf",path:"/plugins/core/conditions/org.kestra.core.models.conditions.types.FlowNamespaceCondition.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:135},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:290},{level:3,title:"namespace",slug:"namespace",normalizedTitle:"namespace",charIndex:121},{level:3,title:"prefix",slug:"prefix",normalizedTitle:"prefix",charIndex:273}],headersStr:"Examples Inputs namespace prefix",content:'# FlowNamespaceCondition\ntype: "org.kestra.core.models.conditions.types.FlowNamespaceCondition"\n\n\n> Condition for a flow namespace\n\n\n# Examples\n- conditions:\n    - type: org.kestra.core.models.conditions.types.FlowNamespaceCondition\n      namespace: org.kestra.tests\n      prefix: true\n\n\n# Inputs\n# namespace\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n\n> The namespace of the flow or the prefix if prefix is true\n\n\n# prefix\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n> If we must look at the flow namespace by prefix (simple startWith case sensitive)',normalizedContent:'# flownamespacecondition\ntype: "org.kestra.core.models.conditions.types.flownamespacecondition"\n\n\n> condition for a flow namespace\n\n\n# examples\n- conditions:\n    - type: org.kestra.core.models.conditions.types.flownamespacecondition\n      namespace: org.kestra.tests\n      prefix: true\n\n\n# inputs\n# namespace\n * type: string\n * dynamic: ❓\n * required: ✔️\n\n> the namespace of the flow or the prefix if prefix is true\n\n\n# prefix\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n> if we must look at the flow namespace by prefix (simple startwith case sensitive)',charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"VariableCondition",frontmatter:{title:"VariableCondition",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"VariableCondition"},{property:"og:description",content:"VariableCondition | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/core/conditions/org.kestra.core.models.conditions.types.VariableCondition.html"},{name:"twitter:title",content:"VariableCondition"},{name:"twitter:description",content:"VariableCondition | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/plugins/core/conditions/org.kestra.core.models.conditions.types.VariableCondition.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"VariableCondition | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/plugins/core/conditions/org.kestra.core.models.conditions.types.VariableCondition.html",relativePath:"plugins/core/conditions/org.kestra.core.models.conditions.types.VariableCondition.md",key:"v-4accb5fa",path:"/plugins/core/conditions/org.kestra.core.models.conditions.types.VariableCondition.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:238},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:433},{level:3,title:"expression",slug:"expression",normalizedTitle:"expression",charIndex:119}],headersStr:"Examples Inputs expression",content:'# VariableCondition\ntype: "org.kestra.core.models.conditions.types.VariableCondition"\n\n\n> Condition based on variables expression\n\n\nIf the result is an empty string, a string containing only space or false, the condition will be false\n\n# Examples\n> A condition that will return false for a missing variable\n\n\n- conditions:\n    - type: org.kestra.core.models.conditions.types.VariableCondition\n      expression: {{ and unknown }}\n\n\n# Inputs\n# expression\n * Type: string\n * Dynamic: ❓\n * Required: ✔️',normalizedContent:'# variablecondition\ntype: "org.kestra.core.models.conditions.types.variablecondition"\n\n\n> condition based on variables expression\n\n\nif the result is an empty string, a string containing only space or false, the condition will be false\n\n# examples\n> a condition that will return false for a missing variable\n\n\n- conditions:\n    - type: org.kestra.core.models.conditions.types.variablecondition\n      expression: {{ and unknown }}\n\n\n# inputs\n# expression\n * type: string\n * dynamic: ❓\n * required: ✔️',charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"ExecutionStatusCondition",frontmatter:{title:"ExecutionStatusCondition",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"ExecutionStatusCondition"},{property:"og:description",content:"ExecutionStatusCondition | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/core/conditions/org.kestra.core.models.listeners.types.ExecutionStatusCondition.html"},{name:"twitter:title",content:"ExecutionStatusCondition"},{name:"twitter:description",content:"ExecutionStatusCondition | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/plugins/core/conditions/org.kestra.core.models.listeners.types.ExecutionStatusCondition.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"ExecutionStatusCondition | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/plugins/core/conditions/org.kestra.core.models.listeners.types.ExecutionStatusCondition.html",relativePath:"plugins/core/conditions/org.kestra.core.models.listeners.types.ExecutionStatusCondition.md",key:"v-0ca17f3a",path:"/plugins/core/conditions/org.kestra.core.models.listeners.types.ExecutionStatusCondition.html",headers:[{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:188},{level:3,title:"in",slug:"in",normalizedTitle:"in",charIndex:197},{level:3,title:"notIn",slug:"notin",normalizedTitle:"notin",charIndex:304}],headersStr:"Inputs in notIn",content:'# ExecutionStatusCondition\ntype: "org.kestra.core.models.listeners.types.ExecutionStatusCondition"\n\n\n> Deprecated, use org.kestra.core.models.conditions.types.ExecutionStatusCondition\n\n\n# Inputs\n# in\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n\n> List of state that are authorized\n\n\n# notIn\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n\n> List of state that aren\'t authorized',normalizedContent:'# executionstatuscondition\ntype: "org.kestra.core.models.listeners.types.executionstatuscondition"\n\n\n> deprecated, use org.kestra.core.models.conditions.types.executionstatuscondition\n\n\n# inputs\n# in\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n\n> list of state that are authorized\n\n\n# notin\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n\n> list of state that aren\'t authorized',charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"Echo",frontmatter:{title:"Echo",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Echo"},{property:"og:description",content:"Echo | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/core/tasks/debugs/org.kestra.core.tasks.debugs.Echo.html"},{name:"twitter:title",content:"Echo"},{name:"twitter:description",content:"Echo | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/plugins/core/tasks/debugs/org.kestra.core.tasks.debugs.Echo.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Echo | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/plugins/core/tasks/debugs/org.kestra.core.tasks.debugs.Echo.html",relativePath:"plugins/core/tasks/debugs/org.kestra.core.tasks.debugs.Echo.md",key:"v-473550c3",path:"/plugins/core/tasks/debugs/org.kestra.core.tasks.debugs.Echo.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:264},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:388},{level:3,title:"format",slug:"format",normalizedTitle:"format",charIndex:338},{level:3,title:"level",slug:"level",normalizedTitle:"level",charIndex:326}],headersStr:"Examples Inputs format level",content:'# Echo\ntype: "org.kestra.core.tasks.debugs.Echo"\n\n\n> Simple debugging task that log a renderer value.\n\n\nThis task is mostly useful for debugging purpose.\n\nThis one allow you to logs inputs or outputs variables for example, or to debug some templated functions.\n\n# Examples\nid: "echo"\ntype: "org.kestra.core.tasks.debugs.Echo"\nlevel: WARN\nformat: "{{task.id}} > {{taskrun.startDate}}"\n\n\n# Inputs\n# format\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n * Min length: 1\n\n# level\n * Type: string\n * Dynamic: ❓\n * Required: ❌',normalizedContent:'# echo\ntype: "org.kestra.core.tasks.debugs.echo"\n\n\n> simple debugging task that log a renderer value.\n\n\nthis task is mostly useful for debugging purpose.\n\nthis one allow you to logs inputs or outputs variables for example, or to debug some templated functions.\n\n# examples\nid: "echo"\ntype: "org.kestra.core.tasks.debugs.echo"\nlevel: warn\nformat: "{{task.id}} > {{taskrun.startdate}}"\n\n\n# inputs\n# format\n * type: string\n * dynamic: ❓\n * required: ✔️\n * min length: 1\n\n# level\n * type: string\n * dynamic: ❓\n * required: ❌',charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"Return",frontmatter:{title:"Return",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Return"},{property:"og:description",content:"Return | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/core/tasks/debugs/org.kestra.core.tasks.debugs.Return.html"},{name:"twitter:title",content:"Return"},{name:"twitter:description",content:"Return | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/plugins/core/tasks/debugs/org.kestra.core.tasks.debugs.Return.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Return | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/plugins/core/tasks/debugs/org.kestra.core.tasks.debugs.Return.html",relativePath:"plugins/core/tasks/debugs/org.kestra.core.tasks.debugs.Return.md",key:"v-42fac8a3",path:"/plugins/core/tasks/debugs/org.kestra.core.tasks.debugs.Return.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:270},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:386},{level:3,title:"format",slug:"format",normalizedTitle:"format",charIndex:336},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:488},{level:3,title:"value",slug:"value",normalizedTitle:"value",charIndex:102}],headersStr:"Examples Inputs format Outputs value",content:'# Return\ntype: "org.kestra.core.tasks.debugs.Return"\n\n\n> Simple debugging task that return a renderer value.\n\n\nThis task is mostly useful for debugging purpose.\n\nThis one allow you to see inputs or outputs variables for example, or to debug some templated functions.\n\n# Examples\nid: "return"\ntype: "org.kestra.core.tasks.debugs.Return"\nformat: "{{task.id}} > {{taskrun.startDate}}"\n\n\n# Inputs\n# format\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The templatized string to render\n\n\n# Outputs\n# value\n * Type: string\n\n> The generated string',normalizedContent:'# return\ntype: "org.kestra.core.tasks.debugs.return"\n\n\n> simple debugging task that return a renderer value.\n\n\nthis task is mostly useful for debugging purpose.\n\nthis one allow you to see inputs or outputs variables for example, or to debug some templated functions.\n\n# examples\nid: "return"\ntype: "org.kestra.core.tasks.debugs.return"\nformat: "{{task.id}} > {{taskrun.startdate}}"\n\n\n# inputs\n# format\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the templatized string to render\n\n\n# outputs\n# value\n * type: string\n\n> the generated string',charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"AllowFailure",frontmatter:{title:"AllowFailure",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"AllowFailure"},{property:"og:description",content:"AllowFailure | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/core/tasks/flows/org.kestra.core.tasks.flows.AllowFailure.html"},{name:"twitter:title",content:"AllowFailure"},{name:"twitter:description",content:"AllowFailure | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/plugins/core/tasks/flows/org.kestra.core.tasks.flows.AllowFailure.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"AllowFailure | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/plugins/core/tasks/flows/org.kestra.core.tasks.flows.AllowFailure.html",relativePath:"plugins/core/tasks/flows/org.kestra.core.tasks.flows.AllowFailure.md",key:"v-5337ef7a",path:"/plugins/core/tasks/flows/org.kestra.core.tasks.flows.AllowFailure.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:188},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:543},{level:3,title:"errors",slug:"errors",normalizedTitle:"errors",charIndex:552},{level:3,title:"tasks",slug:"tasks",normalizedTitle:"tasks",charIndex:38}],headersStr:"Examples Inputs errors tasks",content:'# AllowFailure\ntype: "org.kestra.core.tasks.flows.AllowFailure"\n\n\n> Allow a task to failed\n\n\nIf any child tasks failed, the flow will stop child tasks, but will continue the main flow.\n\n# Examples\nid: allow-failure\nnamespace: org.kestra.tests\n\ntasks:\n  - id: sequential\n    type: org.kestra.core.tasks.flows.AllowFailure\n    tasks:\n     - id: ko\n       type: org.kestra.core.tasks.scripts.Bash\n       commands:\n        - \'exit 1\'\n  - id: last\n    type: org.kestra.core.tasks.debugs.Return\n    format: "{{task.id}} > {{taskrun.startDate}}"\n\n\n# Inputs\n# errors\n * Type: array\n * SubType: object\n * Dynamic: ❓\n * Required: ❌\n\n> List of tasks to run if any tasks failed on this FlowableTask\n\n\n# tasks\n * Type: array\n * SubType: object\n * Dynamic: ❓\n * Required: ✔️\n * Min items: 1',normalizedContent:'# allowfailure\ntype: "org.kestra.core.tasks.flows.allowfailure"\n\n\n> allow a task to failed\n\n\nif any child tasks failed, the flow will stop child tasks, but will continue the main flow.\n\n# examples\nid: allow-failure\nnamespace: org.kestra.tests\n\ntasks:\n  - id: sequential\n    type: org.kestra.core.tasks.flows.allowfailure\n    tasks:\n     - id: ko\n       type: org.kestra.core.tasks.scripts.bash\n       commands:\n        - \'exit 1\'\n  - id: last\n    type: org.kestra.core.tasks.debugs.return\n    format: "{{task.id}} > {{taskrun.startdate}}"\n\n\n# inputs\n# errors\n * type: array\n * subtype: object\n * dynamic: ❓\n * required: ❌\n\n> list of tasks to run if any tasks failed on this flowabletask\n\n\n# tasks\n * type: array\n * subtype: object\n * dynamic: ❓\n * required: ✔️\n * min items: 1',charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"EachParallel",frontmatter:{title:"EachParallel",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"EachParallel"},{property:"og:description",content:"EachParallel | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/core/tasks/flows/org.kestra.core.tasks.flows.EachParallel.html"},{name:"twitter:title",content:"EachParallel"},{name:"twitter:description",content:"EachParallel | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/plugins/core/tasks/flows/org.kestra.core.tasks.flows.EachParallel.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"EachParallel | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/plugins/core/tasks/flows/org.kestra.core.tasks.flows.EachParallel.html",relativePath:"plugins/core/tasks/flows/org.kestra.core.tasks.flows.EachParallel.md",key:"v-a00a283a",path:"/plugins/core/tasks/flows/org.kestra.core.tasks.flows.EachParallel.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:663},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:1527},{level:3,title:"concurrent",slug:"concurrent",normalizedTitle:"concurrent",charIndex:577},{level:3,title:"errors",slug:"errors",normalizedTitle:"errors",charIndex:1596},{level:3,title:"tasks",slug:"tasks",normalizedTitle:"tasks",charIndex:38},{level:3,title:"value",slug:"value",normalizedTitle:"value",charIndex:98}],headersStr:"Examples Inputs concurrent errors tasks value",content:'# EachParallel\ntype: "org.kestra.core.tasks.flows.EachParallel"\n\n\n> Execute a tasks for a list of value in parallel.\n\n\nFor each value, tasks will be executed\nThe value must be valid json string representing an arrays, like ["value1", "value2"] or [{"key":"value1"}, {"key":"value2"}]\nThe current value is available on vars {{ taskrun.value }}.\nThe task list will be executed in parallel, for example if you have a 3 value with each one 2 tasks, all the 6 tasks will be computed in parallel with out any garantee on the order.\nIf you want to have each value in parallel, but no concurrent task for each value, you need to wrap the tasks with a Sequential tasks\n\n# Examples\nid: "each_parallel"\ntype: "org.kestra.core.tasks.flows.EachParallel"\nvalue: \'["value 1", "value 2", "value 3"]\'\ntasks:\n  - id: each-value\n    type: org.kestra.core.tasks.debugs.Return\n    format: "{{ task.id }} with current value \'{{ taskrun.value }}\'"\n\n\n> Handling each value in parralel but only 1 child task for each value at the same time.\n\n\nid: "each_parallel"\ntype: "org.kestra.core.tasks.flows.EachParallel"\nvalue: \'["value 1", "value 2", "value 3"]\'\ntasks:\n  - id: seq\n    type: org.kestra.core.tasks.flows.Sequential\n    tasks:\n    - id: t1\n      type: org.kestra.core.tasks.scripts.Bash\n      commands:\n        - \'echo "{{task.id}} > {{ parents.0.taskrun.value }}\n        - \'sleep 1\'\n    - id: t2\n      type: org.kestra.core.tasks.scripts.Bash\n      commands:\n        - \'echo "{{task.id}} > {{ parents.0.taskrun.value }}\n        - \'sleep 1\'\n\n\n# Inputs\n# concurrent\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n# errors\n * Type: array\n * SubType: object\n * Dynamic: ❓\n * Required: ❌\n\n> List of tasks to run if any tasks failed on this FlowableTask\n\n\n# tasks\n * Type: array\n * SubType: object\n * Dynamic: ❓\n * Required: ❌\n\n# value\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n * Min length: 1',normalizedContent:'# eachparallel\ntype: "org.kestra.core.tasks.flows.eachparallel"\n\n\n> execute a tasks for a list of value in parallel.\n\n\nfor each value, tasks will be executed\nthe value must be valid json string representing an arrays, like ["value1", "value2"] or [{"key":"value1"}, {"key":"value2"}]\nthe current value is available on vars {{ taskrun.value }}.\nthe task list will be executed in parallel, for example if you have a 3 value with each one 2 tasks, all the 6 tasks will be computed in parallel with out any garantee on the order.\nif you want to have each value in parallel, but no concurrent task for each value, you need to wrap the tasks with a sequential tasks\n\n# examples\nid: "each_parallel"\ntype: "org.kestra.core.tasks.flows.eachparallel"\nvalue: \'["value 1", "value 2", "value 3"]\'\ntasks:\n  - id: each-value\n    type: org.kestra.core.tasks.debugs.return\n    format: "{{ task.id }} with current value \'{{ taskrun.value }}\'"\n\n\n> handling each value in parralel but only 1 child task for each value at the same time.\n\n\nid: "each_parallel"\ntype: "org.kestra.core.tasks.flows.eachparallel"\nvalue: \'["value 1", "value 2", "value 3"]\'\ntasks:\n  - id: seq\n    type: org.kestra.core.tasks.flows.sequential\n    tasks:\n    - id: t1\n      type: org.kestra.core.tasks.scripts.bash\n      commands:\n        - \'echo "{{task.id}} > {{ parents.0.taskrun.value }}\n        - \'sleep 1\'\n    - id: t2\n      type: org.kestra.core.tasks.scripts.bash\n      commands:\n        - \'echo "{{task.id}} > {{ parents.0.taskrun.value }}\n        - \'sleep 1\'\n\n\n# inputs\n# concurrent\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n# errors\n * type: array\n * subtype: object\n * dynamic: ❓\n * required: ❌\n\n> list of tasks to run if any tasks failed on this flowabletask\n\n\n# tasks\n * type: array\n * subtype: object\n * dynamic: ❓\n * required: ❌\n\n# value\n * type: string\n * dynamic: ❓\n * required: ✔️\n * min length: 1',charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"EachSequential",frontmatter:{title:"EachSequential",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"EachSequential"},{property:"og:description",content:"EachSequential | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/core/tasks/flows/org.kestra.core.tasks.flows.EachSequential.html"},{name:"twitter:title",content:"EachSequential"},{name:"twitter:description",content:"EachSequential | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/plugins/core/tasks/flows/org.kestra.core.tasks.flows.EachSequential.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"EachSequential | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/plugins/core/tasks/flows/org.kestra.core.tasks.flows.EachSequential.html",relativePath:"plugins/core/tasks/flows/org.kestra.core.tasks.flows.EachSequential.md",key:"v-1ac7383a",path:"/plugins/core/tasks/flows/org.kestra.core.tasks.flows.EachSequential.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:351},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:621},{level:3,title:"errors",slug:"errors",normalizedTitle:"errors",charIndex:630},{level:3,title:"tasks",slug:"tasks",normalizedTitle:"tasks",charIndex:40},{level:3,title:"value",slug:"value",normalizedTitle:"value",charIndex:102}],headersStr:"Examples Inputs errors tasks value",content:'# EachSequential\ntype: "org.kestra.core.tasks.flows.EachSequential"\n\n\n> Execute a tasks for a list of value sequentially\n\n\nFor each value, tasks will be executed\nThe value must be valid json string representing an arrays, like ["value1", "value2"] or [{"key":"value1"}, {"key":"value2"}]\nThe current value is available on vars {{ taskrun.value }}.\n\n# Examples\nid: "each_sequential"\ntype: "org.kestra.core.tasks.flows.EachSequential"\nvalue: \'["value 1", "value 2", "value 3"]\'\ntasks:\n  - id: each-value\n    type: org.kestra.core.tasks.debugs.Return\n    format: "{{ task.id }} with current value \'{{ taskrun.value }}\'"\n\n\n# Inputs\n# errors\n * Type: array\n * SubType: object\n * Dynamic: ❓\n * Required: ❌\n\n> List of tasks to run if any tasks failed on this FlowableTask\n\n\n# tasks\n * Type: array\n * SubType: object\n * Dynamic: ❓\n * Required: ✔️\n * Min items: 1\n\n# value\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n * Min length: 1',normalizedContent:'# eachsequential\ntype: "org.kestra.core.tasks.flows.eachsequential"\n\n\n> execute a tasks for a list of value sequentially\n\n\nfor each value, tasks will be executed\nthe value must be valid json string representing an arrays, like ["value1", "value2"] or [{"key":"value1"}, {"key":"value2"}]\nthe current value is available on vars {{ taskrun.value }}.\n\n# examples\nid: "each_sequential"\ntype: "org.kestra.core.tasks.flows.eachsequential"\nvalue: \'["value 1", "value 2", "value 3"]\'\ntasks:\n  - id: each-value\n    type: org.kestra.core.tasks.debugs.return\n    format: "{{ task.id }} with current value \'{{ taskrun.value }}\'"\n\n\n# inputs\n# errors\n * type: array\n * subtype: object\n * dynamic: ❓\n * required: ❌\n\n> list of tasks to run if any tasks failed on this flowabletask\n\n\n# tasks\n * type: array\n * subtype: object\n * dynamic: ❓\n * required: ✔️\n * min items: 1\n\n# value\n * type: string\n * dynamic: ❓\n * required: ✔️\n * min length: 1',charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"Flow",frontmatter:{title:"Flow",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Flow"},{property:"og:description",content:"Flow | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/core/tasks/flows/org.kestra.core.tasks.flows.Flow.html"},{name:"twitter:title",content:"Flow"},{name:"twitter:description",content:"Flow | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/plugins/core/tasks/flows/org.kestra.core.tasks.flows.Flow.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Flow | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/plugins/core/tasks/flows/org.kestra.core.tasks.flows.Flow.html",relativePath:"plugins/core/tasks/flows/org.kestra.core.tasks.flows.Flow.md",key:"v-63747bba",path:"/plugins/core/tasks/flows/org.kestra.core.tasks.flows.Flow.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:77},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:329},{level:3,title:"flowId",slug:"flowid",normalizedTitle:"flowid",charIndex:224},{level:3,title:"inputs",slug:"inputs-2",normalizedTitle:"inputs",charIndex:245},{level:3,title:"namespace",slug:"namespace",normalizedTitle:"namespace",charIndex:196},{level:3,title:"revision",slug:"revision",normalizedTitle:"revision",charIndex:622},{level:3,title:"transmitFailed",slug:"transmitfailed",normalizedTitle:"transmitfailed",charIndex:772},{level:3,title:"wait",slug:"wait",normalizedTitle:"wait",charIndex:313},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1176},{level:3,title:"executionId",slug:"executionid",normalizedTitle:"executionid",charIndex:1186},{level:3,title:"state",slug:"state",normalizedTitle:"state",charIndex:1254}],headersStr:"Examples Inputs flowId inputs namespace revision transmitFailed wait Outputs executionId state",content:'# Flow\ntype: "org.kestra.core.tasks.flows.Flow"\n\n\n> Trigger another flow\n\n\n# Examples\n> Trigger another flow, passing some file and arguments\n\n\nid: "flow"\ntype: "org.kestra.core.tasks.flows.Flow"\nnamespace: org.kestra.tests\nflowId: my-sub-flows\ninputs:\n  file: "{{ outputs.my-task.files.resolver\' }}"\n  store: 12\nwait: false\n\n\n# Inputs\n# flowId\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The flowId to trigger\n\n\n# inputs\n * Type: object\n * Dynamic: ✔️\n * Required: ❌\n\n> The input to pass to the triggered flow\n\n\n# namespace\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The namespace of the flow to trigger\n\n\n# revision\n * Type: integer\n * Dynamic: ✔️\n * Required: ❌\n\n> The revision of the flow you want to trigger\n\n\nBy default, we trigger the last version.\n\n# transmitFailed\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n\n> Failed the current execution if the waited execution is failed or killed.\n\n\nwait need to be true to make it work\n\n# wait\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n\n> Wait the end of the execution.\n\n\nBy default, we don\'t wait till the end of the flow, if you set to true, we wait the end of the trigger flow before continue this one.\n\n# Outputs\n# executionId\n * Type: string\n\n> The id of the execution trigger.\n\n\n# state\n * Type: string\n\n> The state of the execution trigger.\n\n\nOnly available if the execution is waited with wait options',normalizedContent:'# flow\ntype: "org.kestra.core.tasks.flows.flow"\n\n\n> trigger another flow\n\n\n# examples\n> trigger another flow, passing some file and arguments\n\n\nid: "flow"\ntype: "org.kestra.core.tasks.flows.flow"\nnamespace: org.kestra.tests\nflowid: my-sub-flows\ninputs:\n  file: "{{ outputs.my-task.files.resolver\' }}"\n  store: 12\nwait: false\n\n\n# inputs\n# flowid\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the flowid to trigger\n\n\n# inputs\n * type: object\n * dynamic: ✔️\n * required: ❌\n\n> the input to pass to the triggered flow\n\n\n# namespace\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the namespace of the flow to trigger\n\n\n# revision\n * type: integer\n * dynamic: ✔️\n * required: ❌\n\n> the revision of the flow you want to trigger\n\n\nby default, we trigger the last version.\n\n# transmitfailed\n * type: boolean\n * dynamic: ❌\n * required: ❌\n\n> failed the current execution if the waited execution is failed or killed.\n\n\nwait need to be true to make it work\n\n# wait\n * type: boolean\n * dynamic: ❌\n * required: ❌\n\n> wait the end of the execution.\n\n\nby default, we don\'t wait till the end of the flow, if you set to true, we wait the end of the trigger flow before continue this one.\n\n# outputs\n# executionid\n * type: string\n\n> the id of the execution trigger.\n\n\n# state\n * type: string\n\n> the state of the execution trigger.\n\n\nonly available if the execution is waited with wait options',charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"Parallel",frontmatter:{title:"Parallel",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Parallel"},{property:"og:description",content:"Parallel | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/core/tasks/flows/org.kestra.core.tasks.flows.Parallel.html"},{name:"twitter:title",content:"Parallel"},{name:"twitter:description",content:"Parallel | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/plugins/core/tasks/flows/org.kestra.core.tasks.flows.Parallel.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Parallel | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/plugins/core/tasks/flows/org.kestra.core.tasks.flows.Parallel.html",relativePath:"plugins/core/tasks/flows/org.kestra.core.tasks.flows.Parallel.md",key:"v-b4935bfa",path:"/plugins/core/tasks/flows/org.kestra.core.tasks.flows.Parallel.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:183},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:662},{level:3,title:"concurrent",slug:"concurrent",normalizedTitle:"concurrent",charIndex:671},{level:3,title:"errors",slug:"errors",normalizedTitle:"errors",charIndex:731},{level:3,title:"tasks",slug:"tasks",normalizedTitle:"tasks",charIndex:34}],headersStr:"Examples Inputs concurrent errors tasks",content:'# Parallel\ntype: "org.kestra.core.tasks.flows.Parallel"\n\n\n> Process task in parallel\n\n\nThis task processes tasks in parallel. It makes it convinient to process many tasks at once.\n\n# Examples\nid: parallel\nnamespace: org.kestra.tests\n\ntasks:\n  - id: parallel\n    type: org.kestra.core.tasks.flows.Parallel\n    tasks:\n      - id: 1st\n        type: org.kestra.core.tasks.debugs.Return\n        format: "{{task.id}} > {{taskrun.startDate}}"\n      - id: 2nd\n        type: org.kestra.core.tasks.debugs.Return\n        format: "{{task.id}} > {{taskrun.id}}"\n  - id: last\n    type: org.kestra.core.tasks.debugs.Return\n    format: "{{task.id}} > {{taskrun.startDate}}"\n\n\n# Inputs\n# concurrent\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n# errors\n * Type: array\n * SubType: object\n * Dynamic: ❓\n * Required: ❌\n\n> List of tasks to run if any tasks failed on this FlowableTask\n\n\n# tasks\n * Type: array\n * SubType: object\n * Dynamic: ❓\n * Required: ❌',normalizedContent:'# parallel\ntype: "org.kestra.core.tasks.flows.parallel"\n\n\n> process task in parallel\n\n\nthis task processes tasks in parallel. it makes it convinient to process many tasks at once.\n\n# examples\nid: parallel\nnamespace: org.kestra.tests\n\ntasks:\n  - id: parallel\n    type: org.kestra.core.tasks.flows.parallel\n    tasks:\n      - id: 1st\n        type: org.kestra.core.tasks.debugs.return\n        format: "{{task.id}} > {{taskrun.startdate}}"\n      - id: 2nd\n        type: org.kestra.core.tasks.debugs.return\n        format: "{{task.id}} > {{taskrun.id}}"\n  - id: last\n    type: org.kestra.core.tasks.debugs.return\n    format: "{{task.id}} > {{taskrun.startdate}}"\n\n\n# inputs\n# concurrent\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n# errors\n * type: array\n * subtype: object\n * dynamic: ❓\n * required: ❌\n\n> list of tasks to run if any tasks failed on this flowabletask\n\n\n# tasks\n * type: array\n * subtype: object\n * dynamic: ❓\n * required: ❌',charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"Sequential",frontmatter:{title:"Sequential",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Sequential"},{property:"og:description",content:"Sequential | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/core/tasks/flows/org.kestra.core.tasks.flows.Sequential.html"},{name:"twitter:title",content:"Sequential"},{name:"twitter:description",content:"Sequential | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/plugins/core/tasks/flows/org.kestra.core.tasks.flows.Sequential.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Sequential | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/plugins/core/tasks/flows/org.kestra.core.tasks.flows.Sequential.html",relativePath:"plugins/core/tasks/flows/org.kestra.core.tasks.flows.Sequential.md",key:"v-35363b7a",path:"/plugins/core/tasks/flows/org.kestra.core.tasks.flows.Sequential.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:150},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:635},{level:3,title:"errors",slug:"errors",normalizedTitle:"errors",charIndex:644},{level:3,title:"tasks",slug:"tasks",normalizedTitle:"tasks",charIndex:36}],headersStr:"Examples Inputs errors tasks",content:'# Sequential\ntype: "org.kestra.core.tasks.flows.Sequential"\n\n\n> Process tasks ones after others sequentially\n\n\nMostly use in order to group tasks.\n\n# Examples\nid: sequential\nnamespace: org.kestra.tests\n\ntasks:\n  - id: sequential\n    type: org.kestra.core.tasks.flows.Sequential\n    tasks:\n      - id: 1st\n        type: org.kestra.core.tasks.debugs.Return\n        format: "{{task.id}} > {{taskrun.startDate}}"\n      - id: 2nd\n        type: org.kestra.core.tasks.debugs.Return\n        format: "{{task.id}} > {{taskrun.id}}"\n  - id: last\n    type: org.kestra.core.tasks.debugs.Return\n    format: "{{task.id}} > {{taskrun.startDate}}"\n\n\n# Inputs\n# errors\n * Type: array\n * SubType: object\n * Dynamic: ❓\n * Required: ❌\n\n> List of tasks to run if any tasks failed on this FlowableTask\n\n\n# tasks\n * Type: array\n * SubType: object\n * Dynamic: ❓\n * Required: ✔️\n * Min items: 1',normalizedContent:'# sequential\ntype: "org.kestra.core.tasks.flows.sequential"\n\n\n> process tasks ones after others sequentially\n\n\nmostly use in order to group tasks.\n\n# examples\nid: sequential\nnamespace: org.kestra.tests\n\ntasks:\n  - id: sequential\n    type: org.kestra.core.tasks.flows.sequential\n    tasks:\n      - id: 1st\n        type: org.kestra.core.tasks.debugs.return\n        format: "{{task.id}} > {{taskrun.startdate}}"\n      - id: 2nd\n        type: org.kestra.core.tasks.debugs.return\n        format: "{{task.id}} > {{taskrun.id}}"\n  - id: last\n    type: org.kestra.core.tasks.debugs.return\n    format: "{{task.id}} > {{taskrun.startdate}}"\n\n\n# inputs\n# errors\n * type: array\n * subtype: object\n * dynamic: ❓\n * required: ❌\n\n> list of tasks to run if any tasks failed on this flowabletask\n\n\n# tasks\n * type: array\n * subtype: object\n * dynamic: ❓\n * required: ✔️\n * min items: 1',charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"Template",frontmatter:{title:"Template",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Template"},{property:"og:description",content:"Template | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/core/tasks/flows/org.kestra.core.tasks.flows.Template.html"},{name:"twitter:title",content:"Template"},{name:"twitter:description",content:"Template | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/plugins/core/tasks/flows/org.kestra.core.tasks.flows.Template.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Template | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/plugins/core/tasks/flows/org.kestra.core.tasks.flows.Template.html",relativePath:"plugins/core/tasks/flows/org.kestra.core.tasks.flows.Template.md",key:"v-7fe967a3",path:"/plugins/core/tasks/flows/org.kestra.core.tasks.flows.Template.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:106},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:616},{level:3,title:"args",slug:"args",normalizedTitle:"args",charIndex:450},{level:3,title:"errors",slug:"errors",normalizedTitle:"errors",charIndex:1201},{level:3,title:"namespace",slug:"namespace",normalizedTitle:"namespace",charIndex:128},{level:3,title:"templateId",slug:"templateid",normalizedTitle:"templateid",charIndex:425},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1520},{level:3,title:"args",slug:"args-2",normalizedTitle:"args",charIndex:450}],headersStr:"Examples Inputs args errors namespace templateId Outputs args",content:'# Template\ntype: "org.kestra.core.tasks.flows.Template"\n\n\n> Include a resuable template inside a flow\n\n\n# Examples\nid: template\nnamespace: org.kestra.tests\n\ninputs:  - name: with-string    type: STRING\n\ntasks:\n  - id: 1-return\n    type: org.kestra.core.tasks.debugs.Return\n    format: "{{task.id}} > {{taskrun.startDate}}"\n  - id: 2-template\n    type: org.kestra.core.tasks.flows.Template\n    namespace: org.kestra.tests\n    templateId: template\n    args:\n      my-forward: "{{ inputs.with-string }}"\n  - id: 3-end\n    type: org.kestra.core.tasks.debugs.Return\n    format: "{{task.id}} > {{taskrun.startDate}}"\n\n\n\n# Inputs\n# args\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The args to pass to the template\n\n\nYou can provide a list of named arguments (like function argument on dev) allowing to rename outputs of current flow for this template.\nfor example, if you declare this use of template like this:\n\n  - id: 2-template\n    type: org.kestra.core.tasks.flows.Template\n    namespace: org.kestra.tests\n    templateId: template\n    args:\n      forward: "{{ output.task-id.uri }}"\n\n\nYou will be able to get this output on the template with {{ parent.outputs.args.forward }}\n\n# errors\n * Type: array\n * SubType: object\n * Dynamic: ❓\n * Required: ❌\n\n> List of tasks to run if any tasks failed on this FlowableTask\n\n\n# namespace\n * Type: string\n * Dynamic: ❌\n * Required: ✔️\n\n> The namespace of the template\n\n\n# templateId\n * Type: string\n * Dynamic: ❌\n * Required: ✔️\n\n> The id of the template\n\n\n# Outputs\n# args\n * Type: object\n\n> The args passed to the template',normalizedContent:'# template\ntype: "org.kestra.core.tasks.flows.template"\n\n\n> include a resuable template inside a flow\n\n\n# examples\nid: template\nnamespace: org.kestra.tests\n\ninputs:  - name: with-string    type: string\n\ntasks:\n  - id: 1-return\n    type: org.kestra.core.tasks.debugs.return\n    format: "{{task.id}} > {{taskrun.startdate}}"\n  - id: 2-template\n    type: org.kestra.core.tasks.flows.template\n    namespace: org.kestra.tests\n    templateid: template\n    args:\n      my-forward: "{{ inputs.with-string }}"\n  - id: 3-end\n    type: org.kestra.core.tasks.debugs.return\n    format: "{{task.id}} > {{taskrun.startdate}}"\n\n\n\n# inputs\n# args\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> the args to pass to the template\n\n\nyou can provide a list of named arguments (like function argument on dev) allowing to rename outputs of current flow for this template.\nfor example, if you declare this use of template like this:\n\n  - id: 2-template\n    type: org.kestra.core.tasks.flows.template\n    namespace: org.kestra.tests\n    templateid: template\n    args:\n      forward: "{{ output.task-id.uri }}"\n\n\nyou will be able to get this output on the template with {{ parent.outputs.args.forward }}\n\n# errors\n * type: array\n * subtype: object\n * dynamic: ❓\n * required: ❌\n\n> list of tasks to run if any tasks failed on this flowabletask\n\n\n# namespace\n * type: string\n * dynamic: ❌\n * required: ✔️\n\n> the namespace of the template\n\n\n# templateid\n * type: string\n * dynamic: ❌\n * required: ✔️\n\n> the id of the template\n\n\n# outputs\n# args\n * type: object\n\n> the args passed to the template',charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"Switch",frontmatter:{title:"Switch",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Switch"},{property:"og:description",content:"Switch | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/core/tasks/flows/org.kestra.core.tasks.flows.Switch.html"},{name:"twitter:title",content:"Switch"},{name:"twitter:description",content:"Switch | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/plugins/core/tasks/flows/org.kestra.core.tasks.flows.Switch.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Switch | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/plugins/core/tasks/flows/org.kestra.core.tasks.flows.Switch.html",relativePath:"plugins/core/tasks/flows/org.kestra.core.tasks.flows.Switch.md",key:"v-73b9fb3a",path:"/plugins/core/tasks/flows/org.kestra.core.tasks.flows.Switch.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:223},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:1003},{level:3,title:"cases",slug:"cases",normalizedTitle:"cases",charIndex:436},{level:3,title:"defaults",slug:"defaults",normalizedTitle:"defaults",charIndex:865},{level:3,title:"errors",slug:"errors",normalizedTitle:"errors",charIndex:1141},{level:3,title:"value",slug:"value",normalizedTitle:"value",charIndex:115},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1383},{level:3,title:"defaults",slug:"defaults-2",normalizedTitle:"defaults",charIndex:865},{level:3,title:"value",slug:"value-2",normalizedTitle:"value",charIndex:115}],headersStr:"Examples Inputs cases defaults errors value Outputs defaults value",content:'# Switch\ntype: "org.kestra.core.tasks.flows.Switch"\n\n\n> Process some tasks conditionnaly depending on a contextual value\n\n\nAllow some workflow based on context variables, allow you to branch your based on previous task.\n\n# Examples\nid: switch\nnamespace: org.kestra.tests\n\ninputs:\n  - name: string\n    type: STRING\n    required: true\n\ntasks:\n  - id: switch\n    type: org.kestra.core.tasks.flows.Switch\n    value: "{{inputs.string}}"\n    cases:\n      FIRST:\n        - id: 1st\n          type: org.kestra.core.tasks.debugs.Return\n          format: "{{task.id}} > {{taskrun.startDate}}"\n      SECOND:\n        - id: 2nd\n          type: org.kestra.core.tasks.debugs.Return\n          format: "{{task.id}} > {{taskrun.startDate}}"\n      THIRD:\n        - id: 3th\n          type: org.kestra.core.tasks.debugs.Return\n          format: "{{task.id}} > {{taskrun.startDate}}"\n    defaults:\n      - id: default\n        type: org.kestra.core.tasks.debugs.Return\n        format: "{{task.id}} > {{taskrun.startDate}}"\n\n\n# Inputs\n# cases\n * Type: object\n * Dynamic: ❓\n * Required: ❌\n\n# defaults\n * Type: array\n * SubType: object\n * Dynamic: ❓\n * Required: ❌\n\n# errors\n * Type: array\n * SubType: object\n * Dynamic: ❓\n * Required: ❌\n\n> List of tasks to run if any tasks failed on this FlowableTask\n\n\n# value\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min length: 1\n\n> The value to be evaluated\n\n\n# Outputs\n# defaults\n * Type: boolean\n\n# value\n * Type: string',normalizedContent:'# switch\ntype: "org.kestra.core.tasks.flows.switch"\n\n\n> process some tasks conditionnaly depending on a contextual value\n\n\nallow some workflow based on context variables, allow you to branch your based on previous task.\n\n# examples\nid: switch\nnamespace: org.kestra.tests\n\ninputs:\n  - name: string\n    type: string\n    required: true\n\ntasks:\n  - id: switch\n    type: org.kestra.core.tasks.flows.switch\n    value: "{{inputs.string}}"\n    cases:\n      first:\n        - id: 1st\n          type: org.kestra.core.tasks.debugs.return\n          format: "{{task.id}} > {{taskrun.startdate}}"\n      second:\n        - id: 2nd\n          type: org.kestra.core.tasks.debugs.return\n          format: "{{task.id}} > {{taskrun.startdate}}"\n      third:\n        - id: 3th\n          type: org.kestra.core.tasks.debugs.return\n          format: "{{task.id}} > {{taskrun.startdate}}"\n    defaults:\n      - id: default\n        type: org.kestra.core.tasks.debugs.return\n        format: "{{task.id}} > {{taskrun.startdate}}"\n\n\n# inputs\n# cases\n * type: object\n * dynamic: ❓\n * required: ❌\n\n# defaults\n * type: array\n * subtype: object\n * dynamic: ❓\n * required: ❌\n\n# errors\n * type: array\n * subtype: object\n * dynamic: ❓\n * required: ❌\n\n> list of tasks to run if any tasks failed on this flowabletask\n\n\n# value\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * min length: 1\n\n> the value to be evaluated\n\n\n# outputs\n# defaults\n * type: boolean\n\n# value\n * type: string',charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"Bash",frontmatter:{title:"Bash",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Bash"},{property:"og:description",content:"Bash | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/core/tasks/scripts/org.kestra.core.tasks.scripts.Bash.html"},{name:"twitter:title",content:"Bash"},{name:"twitter:description",content:"Bash | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/plugins/core/tasks/scripts/org.kestra.core.tasks.scripts.Bash.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Bash | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/plugins/core/tasks/scripts/org.kestra.core.tasks.scripts.Bash.html",relativePath:"plugins/core/tasks/scripts/org.kestra.core.tasks.scripts.Bash.md",key:"v-463aa523",path:"/plugins/core/tasks/scripts/org.kestra.core.tasks.scripts.Bash.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:109},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:685},{level:3,title:"commands",slug:"commands",normalizedTitle:"commands",charIndex:95},{level:3,title:"exitOnFailed",slug:"exitonfailed",normalizedTitle:"exitonfailed",charIndex:872},{level:3,title:"files",slug:"files",normalizedTitle:"files",charIndex:533},{level:3,title:"inputFiles",slug:"inputfiles",normalizedTitle:"inputfiles",charIndex:1401},{level:3,title:"interpreter",slug:"interpreter",normalizedTitle:"interpreter",charIndex:1805},{level:3,title:"interpreterArgs",slug:"interpreterargs",normalizedTitle:"interpreterargs",charIndex:1924},{level:3,title:"outputFiles",slug:"outputfiles",normalizedTitle:"outputfiles",charIndex:447},{level:3,title:"outputsFiles",slug:"outputsfiles",normalizedTitle:"outputsfiles",charIndex:389},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:2618},{level:3,title:"exitCode",slug:"exitcode",normalizedTitle:"exitcode",charIndex:2628},{level:3,title:"files",slug:"files-2",normalizedTitle:"files",charIndex:533},{level:3,title:"outputFiles",slug:"outputfiles-2",normalizedTitle:"outputfiles",charIndex:447},{level:3,title:"stdErrLineCount",slug:"stderrlinecount",normalizedTitle:"stderrlinecount",charIndex:2904},{level:3,title:"stdOutLineCount",slug:"stdoutlinecount",normalizedTitle:"stdoutlinecount",charIndex:2974},{level:3,title:"vars",slug:"vars",normalizedTitle:"vars",charIndex:2369}],headersStr:"Examples Inputs commands exitOnFailed files inputFiles interpreter interpreterArgs outputFiles outputsFiles Outputs exitCode files outputFiles stdErrLineCount stdOutLineCount vars",content:'# Bash\ntype: "org.kestra.core.tasks.scripts.Bash"\n\n\n> Execute a Bash script, command or set of commands.\n\n\n# Examples\n> Single bash command\n\n\nid: "bash"\ntype: "org.kestra.core.tasks.scripts.Bash"\ncommands:\n- echo "The current execution is : {{execution.id}}"\n\n\n> Bash command that generate file in storage accessible through outputs\n\n\nid: "bash"\ntype: "org.kestra.core.tasks.scripts.Bash"\noutputsFiles:\n- first\n- second\ncommands:\n- echo "1" >> {{ outputFiles.first }}\n- echo "2" >> {{ outputFiles.second }}\n\n\n> Bash with some inputs files\n\n\nid: "bash"\ntype: "org.kestra.core.tasks.scripts.Bash"\ninputsFiles:\n  script.sh: |\n    echo {{ workingDir }}\ncommands:\n- /bin/bash script.sh\n\n\n# Inputs\n# commands\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ✔️\n * Min items: 1\n\n> The commands to run\n\n\nDefault command will be launched with /bin/sh -c "commands"\n\n# exitOnFailed\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Exit if any non true return value\n\n\nThis tells bash that it should exit the script if any statement returns a non-true return value.\nThe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n# files\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The list of files that will be uploaded to internal storage,\n\n\nuse outputsFiles property instead\n\n# inputFiles\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Input files are extra files supplied by user that make it simpler organize code.\n\n\nDescribe a files map that will be written and usable in execution context. In python execution context is in a temp folder, for bash scripts, you can reach files using a inputsDirectory variable like \'source {{inputsDirectory}}/myfile.sh\'\n\n# interpreter\n * Type: string\n * Dynamic: ❌\n * Required: ✔️\n * Default: /bin/sh\n * Min length: 1\n\nInterpreter to used\n\n# interpreterArgs\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n * Default: [-c]\n\n> Interpreter args used\n\n\n# outputFiles\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Output file list that will be uploaded to internal storage\n\n\nList of key that will generate temporary files.\nOn the command, just can use with special variable named outputFiles.key.\nIf you add a files with ["first"], you can use the special vars echo 1 >> {[ outputFiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n# outputsFiles\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Deprecated Output file\n\n\nuse outputFiles\n\n# Outputs\n# exitCode\n * Type: integer\n\n> The exit code of the whole execution\n\n\n# files\n🔒 Deprecated\n\n * Type: object\n * SubType: object\n\n> Deprecated output files\n\n\nuse outputFiles\n\n# outputFiles\n * Type: object\n * SubType: object\n\n> The output files uri in Kestra internal storage\n\n\n# stdErrLineCount\n * Type: integer\n\n> The standard error line count\n\n\n# stdOutLineCount\n * Type: integer\n\n> The standard output line count\n\n\n# vars\n * Type: object\n\n> The value extract from output of the commands',normalizedContent:'# bash\ntype: "org.kestra.core.tasks.scripts.bash"\n\n\n> execute a bash script, command or set of commands.\n\n\n# examples\n> single bash command\n\n\nid: "bash"\ntype: "org.kestra.core.tasks.scripts.bash"\ncommands:\n- echo "the current execution is : {{execution.id}}"\n\n\n> bash command that generate file in storage accessible through outputs\n\n\nid: "bash"\ntype: "org.kestra.core.tasks.scripts.bash"\noutputsfiles:\n- first\n- second\ncommands:\n- echo "1" >> {{ outputfiles.first }}\n- echo "2" >> {{ outputfiles.second }}\n\n\n> bash with some inputs files\n\n\nid: "bash"\ntype: "org.kestra.core.tasks.scripts.bash"\ninputsfiles:\n  script.sh: |\n    echo {{ workingdir }}\ncommands:\n- /bin/bash script.sh\n\n\n# inputs\n# commands\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ✔️\n * min items: 1\n\n> the commands to run\n\n\ndefault command will be launched with /bin/sh -c "commands"\n\n# exitonfailed\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> exit if any non true return value\n\n\nthis tells bash that it should exit the script if any statement returns a non-true return value.\nthe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n# files\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> the list of files that will be uploaded to internal storage,\n\n\nuse outputsfiles property instead\n\n# inputfiles\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> input files are extra files supplied by user that make it simpler organize code.\n\n\ndescribe a files map that will be written and usable in execution context. in python execution context is in a temp folder, for bash scripts, you can reach files using a inputsdirectory variable like \'source {{inputsdirectory}}/myfile.sh\'\n\n# interpreter\n * type: string\n * dynamic: ❌\n * required: ✔️\n * default: /bin/sh\n * min length: 1\n\ninterpreter to used\n\n# interpreterargs\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n * default: [-c]\n\n> interpreter args used\n\n\n# outputfiles\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> output file list that will be uploaded to internal storage\n\n\nlist of key that will generate temporary files.\non the command, just can use with special variable named outputfiles.key.\nif you add a files with ["first"], you can use the special vars echo 1 >> {[ outputfiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n# outputsfiles\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> deprecated output file\n\n\nuse outputfiles\n\n# outputs\n# exitcode\n * type: integer\n\n> the exit code of the whole execution\n\n\n# files\n🔒 deprecated\n\n * type: object\n * subtype: object\n\n> deprecated output files\n\n\nuse outputfiles\n\n# outputfiles\n * type: object\n * subtype: object\n\n> the output files uri in kestra internal storage\n\n\n# stderrlinecount\n * type: integer\n\n> the standard error line count\n\n\n# stdoutlinecount\n * type: integer\n\n> the standard output line count\n\n\n# vars\n * type: object\n\n> the value extract from output of the commands',charsets:{cjk:!0},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"Node",frontmatter:{title:"Node",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Node"},{property:"og:description",content:"Node | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/core/tasks/scripts/org.kestra.core.tasks.scripts.Node.html"},{name:"twitter:title",content:"Node"},{name:"twitter:description",content:"Node | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/plugins/core/tasks/scripts/org.kestra.core.tasks.scripts.Node.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Node | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/plugins/core/tasks/scripts/org.kestra.core.tasks.scripts.Node.html",relativePath:"plugins/core/tasks/scripts/org.kestra.core.tasks.scripts.Node.md",key:"v-c59a313a",path:"/plugins/core/tasks/scripts/org.kestra.core.tasks.scripts.Node.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:962},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:1920},{level:3,title:"args",slug:"args",normalizedTitle:"args",charIndex:1896},{level:3,title:"exitOnFailed",slug:"exitonfailed",normalizedTitle:"exitonfailed",charIndex:2073},{level:3,title:"files",slug:"files",normalizedTitle:"files",charIndex:340},{level:3,title:"inputFiles",slug:"inputfiles",normalizedTitle:"inputfiles",charIndex:349},{level:3,title:"interpreter",slug:"interpreter",normalizedTitle:"interpreter",charIndex:3006},{level:3,title:"interpreterArgs",slug:"interpreterargs",normalizedTitle:"interpreterargs",charIndex:3125},{level:3,title:"nodePath",slug:"nodepath",normalizedTitle:"nodepath",charIndex:3250},{level:3,title:"npmPath",slug:"npmpath",normalizedTitle:"npmpath",charIndex:3403},{level:3,title:"outputFiles",slug:"outputfiles",normalizedTitle:"outputfiles",charIndex:3563},{level:3,title:"outputsFiles",slug:"outputsfiles",normalizedTitle:"outputsfiles",charIndex:2569},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:4132},{level:3,title:"exitCode",slug:"exitcode",normalizedTitle:"exitcode",charIndex:4142},{level:3,title:"files",slug:"files-2",normalizedTitle:"files",charIndex:340},{level:3,title:"outputFiles",slug:"outputfiles-2",normalizedTitle:"outputfiles",charIndex:3563},{level:3,title:"stdErrLineCount",slug:"stderrlinecount",normalizedTitle:"stderrlinecount",charIndex:4418},{level:3,title:"stdOutLineCount",slug:"stdoutlinecount",normalizedTitle:"stdoutlinecount",charIndex:4488},{level:3,title:"vars",slug:"vars",normalizedTitle:"vars",charIndex:3883}],headersStr:"Examples Inputs args exitOnFailed files inputFiles interpreter interpreterArgs nodePath npmPath outputFiles outputsFiles Outputs exitCode files outputFiles stdErrLineCount stdOutLineCount vars",content:'# Node\ntype: "org.kestra.core.tasks.scripts.Node"\n\n\n> Execute a Node.js script\n\n\nWith this Node task, we can execute a full javascript script.\nThe task will create a temprorary folder for every tasks and allows you to install some npm packages defined in an optional package.json file.\n\nBy convention, you need to define at least a main.js files in inputFiles that will be the script used.\nYou can also add as many javascript files as you need in inputFiles.\n\nYou can send outputs & metrics from your node script that can be used by others tasks. In order to help, we inject a node package directly on the working dir.Here is an example usage:\n\nconst Kestra = require("./kestra");\nKestra.outputs({test: \'value\', int: 2, bool: true, float: 3.65});\nKestra.counter(\'count\', 1, {tag1: \'i\', tag2: \'win\'});\nKestra.timer(\'timer1\', (callback) => { setTimeout(callback, 1000) }, {tag1: \'i\', tag2: \'lost\'});\nKestra.timer(\'timer2\', 2.12, {tag1: \'i\', tag2: \'destroy\'});\n\n\n# Examples\n> Execute a node script\n\n\nid: "node"\ntype: "org.kestra.core.tasks.scripts.Node"\ninputFiles:\n  main.js: |\n    const Kestra = require("./kestra");\n    const fs = require(\'fs\')\n    const result = fs.readFileSync(process.argv[2], "utf-8")\n    console.log(JSON.parse(result).status)\n    const axios = require(\'axios\')\n    axios.get(\'http://google.fr\').then(d => console.log(d.status); Kestra.outputs({\'status\': d.status, \'text\': d.data}))\n    console.log(require(\'./mymodule\').value)\n  data.json: |\n    {"status": "OK"}\n  mymodule.js: |\n    module.exports.value = \'hello world\'\n  package.json: |\n    {\n      "name": "tmp",\n      "version": "1.0.0",\n      "description": "",\n      "main": "index.js",\n      "dependencies": {\n          "axios": "^0.20.0"\n      },\n      "devDependencies": {},\n      "scripts": {\n          "test": "echo "Error: no test specified" && exit 1"\n      },\n      "author": "",\n      "license": "ISC"\n    }\nargs:\n  - data.json\n\n\n# Inputs\n# args\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> node command args\n\n\nArguments list to pass to main javascript script\n\n# exitOnFailed\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Exit if any non true return value\n\n\nThis tells bash that it should exit the script if any statement returns a non-true return value.\nThe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n# files\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The list of files that will be uploaded to internal storage,\n\n\nuse outputsFiles property instead\n\n# inputFiles\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Input files are extra files supplied by user that make it simpler organize code.\n\n\nDescribe a files map that will be written and usable in execution context. In python execution context is in a temp folder, for bash scripts, you can reach files using a inputsDirectory variable like \'source {{inputsDirectory}}/myfile.sh\'\n\n# interpreter\n * Type: string\n * Dynamic: ❌\n * Required: ✔️\n * Default: /bin/sh\n * Min length: 1\n\nInterpreter to used\n\n# interpreterArgs\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n * Default: [-c]\n\n> Interpreter args used\n\n\n# nodePath\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Default: /usr/bin/node\n\n> The node interpreter to use\n\n\nSet the node interpreter path to use\n\n# npmPath\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Default: /usr/bin/npm\n\n> The npm binary to use\n\n\nSet the npm binary path for node dependencies setup\n\n# outputFiles\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Output file list that will be uploaded to internal storage\n\n\nList of key that will generate temporary files.\nOn the command, just can use with special variable named outputFiles.key.\nIf you add a files with ["first"], you can use the special vars echo 1 >> {[ outputFiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n# outputsFiles\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Deprecated Output file\n\n\nuse outputFiles\n\n# Outputs\n# exitCode\n * Type: integer\n\n> The exit code of the whole execution\n\n\n# files\n🔒 Deprecated\n\n * Type: object\n * SubType: object\n\n> Deprecated output files\n\n\nuse outputFiles\n\n# outputFiles\n * Type: object\n * SubType: object\n\n> The output files uri in Kestra internal storage\n\n\n# stdErrLineCount\n * Type: integer\n\n> The standard error line count\n\n\n# stdOutLineCount\n * Type: integer\n\n> The standard output line count\n\n\n# vars\n * Type: object\n\n> The value extract from output of the commands',normalizedContent:'# node\ntype: "org.kestra.core.tasks.scripts.node"\n\n\n> execute a node.js script\n\n\nwith this node task, we can execute a full javascript script.\nthe task will create a temprorary folder for every tasks and allows you to install some npm packages defined in an optional package.json file.\n\nby convention, you need to define at least a main.js files in inputfiles that will be the script used.\nyou can also add as many javascript files as you need in inputfiles.\n\nyou can send outputs & metrics from your node script that can be used by others tasks. in order to help, we inject a node package directly on the working dir.here is an example usage:\n\nconst kestra = require("./kestra");\nkestra.outputs({test: \'value\', int: 2, bool: true, float: 3.65});\nkestra.counter(\'count\', 1, {tag1: \'i\', tag2: \'win\'});\nkestra.timer(\'timer1\', (callback) => { settimeout(callback, 1000) }, {tag1: \'i\', tag2: \'lost\'});\nkestra.timer(\'timer2\', 2.12, {tag1: \'i\', tag2: \'destroy\'});\n\n\n# examples\n> execute a node script\n\n\nid: "node"\ntype: "org.kestra.core.tasks.scripts.node"\ninputfiles:\n  main.js: |\n    const kestra = require("./kestra");\n    const fs = require(\'fs\')\n    const result = fs.readfilesync(process.argv[2], "utf-8")\n    console.log(json.parse(result).status)\n    const axios = require(\'axios\')\n    axios.get(\'http://google.fr\').then(d => console.log(d.status); kestra.outputs({\'status\': d.status, \'text\': d.data}))\n    console.log(require(\'./mymodule\').value)\n  data.json: |\n    {"status": "ok"}\n  mymodule.js: |\n    module.exports.value = \'hello world\'\n  package.json: |\n    {\n      "name": "tmp",\n      "version": "1.0.0",\n      "description": "",\n      "main": "index.js",\n      "dependencies": {\n          "axios": "^0.20.0"\n      },\n      "devdependencies": {},\n      "scripts": {\n          "test": "echo "error: no test specified" && exit 1"\n      },\n      "author": "",\n      "license": "isc"\n    }\nargs:\n  - data.json\n\n\n# inputs\n# args\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> node command args\n\n\narguments list to pass to main javascript script\n\n# exitonfailed\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> exit if any non true return value\n\n\nthis tells bash that it should exit the script if any statement returns a non-true return value.\nthe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n# files\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> the list of files that will be uploaded to internal storage,\n\n\nuse outputsfiles property instead\n\n# inputfiles\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> input files are extra files supplied by user that make it simpler organize code.\n\n\ndescribe a files map that will be written and usable in execution context. in python execution context is in a temp folder, for bash scripts, you can reach files using a inputsdirectory variable like \'source {{inputsdirectory}}/myfile.sh\'\n\n# interpreter\n * type: string\n * dynamic: ❌\n * required: ✔️\n * default: /bin/sh\n * min length: 1\n\ninterpreter to used\n\n# interpreterargs\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n * default: [-c]\n\n> interpreter args used\n\n\n# nodepath\n * type: string\n * dynamic: ❓\n * required: ❌\n * default: /usr/bin/node\n\n> the node interpreter to use\n\n\nset the node interpreter path to use\n\n# npmpath\n * type: string\n * dynamic: ❓\n * required: ❌\n * default: /usr/bin/npm\n\n> the npm binary to use\n\n\nset the npm binary path for node dependencies setup\n\n# outputfiles\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> output file list that will be uploaded to internal storage\n\n\nlist of key that will generate temporary files.\non the command, just can use with special variable named outputfiles.key.\nif you add a files with ["first"], you can use the special vars echo 1 >> {[ outputfiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n# outputsfiles\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> deprecated output file\n\n\nuse outputfiles\n\n# outputs\n# exitcode\n * type: integer\n\n> the exit code of the whole execution\n\n\n# files\n🔒 deprecated\n\n * type: object\n * subtype: object\n\n> deprecated output files\n\n\nuse outputfiles\n\n# outputfiles\n * type: object\n * subtype: object\n\n> the output files uri in kestra internal storage\n\n\n# stderrlinecount\n * type: integer\n\n> the standard error line count\n\n\n# stdoutlinecount\n * type: integer\n\n> the standard output line count\n\n\n# vars\n * type: object\n\n> the value extract from output of the commands',charsets:{cjk:!0},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"Python",frontmatter:{title:"Python",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Python"},{property:"og:description",content:"Python | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/core/tasks/scripts/org.kestra.core.tasks.scripts.Python.html"},{name:"twitter:title",content:"Python"},{name:"twitter:description",content:"Python | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/plugins/core/tasks/scripts/org.kestra.core.tasks.scripts.Python.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Python | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/plugins/core/tasks/scripts/org.kestra.core.tasks.scripts.Python.html",relativePath:"plugins/core/tasks/scripts/org.kestra.core.tasks.scripts.Python.md",key:"v-76e169a3",path:"/plugins/core/tasks/scripts/org.kestra.core.tasks.scripts.Python.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:1059},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:1670},{level:3,title:"args",slug:"args",normalizedTitle:"args",charIndex:1619},{level:3,title:"exitOnFailed",slug:"exitonfailed",normalizedTitle:"exitonfailed",charIndex:1821},{level:3,title:"files",slug:"files",normalizedTitle:"files",charIndex:332},{level:3,title:"inputFiles",slug:"inputfiles",normalizedTitle:"inputfiles",charIndex:341},{level:3,title:"interpreter",slug:"interpreter",normalizedTitle:"interpreter",charIndex:2754},{level:3,title:"interpreterArgs",slug:"interpreterargs",normalizedTitle:"interpreterargs",charIndex:2873},{level:3,title:"outputFiles",slug:"outputfiles",normalizedTitle:"outputfiles",charIndex:2998},{level:3,title:"outputsFiles",slug:"outputsfiles",normalizedTitle:"outputsfiles",charIndex:2317},{level:3,title:"pythonPath",slug:"pythonpath",normalizedTitle:"pythonpath",charIndex:3567},{level:3,title:"requirements",slug:"requirements",normalizedTitle:"requirements",charIndex:255},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:4003},{level:3,title:"exitCode",slug:"exitcode",normalizedTitle:"exitcode",charIndex:4013},{level:3,title:"files",slug:"files-2",normalizedTitle:"files",charIndex:332},{level:3,title:"outputFiles",slug:"outputfiles-2",normalizedTitle:"outputfiles",charIndex:2998},{level:3,title:"stdErrLineCount",slug:"stderrlinecount",normalizedTitle:"stderrlinecount",charIndex:4289},{level:3,title:"stdOutLineCount",slug:"stdoutlinecount",normalizedTitle:"stdoutlinecount",charIndex:4359},{level:3,title:"vars",slug:"vars",normalizedTitle:"vars",charIndex:3318}],headersStr:"Examples Inputs args exitOnFailed files inputFiles interpreter interpreterArgs outputFiles outputsFiles pythonPath requirements Outputs exitCode files outputFiles stdErrLineCount stdOutLineCount vars",content:"# Python\ntype: \"org.kestra.core.tasks.scripts.Python\"\n\n\n> Execute a Python script\n\n\nWith this Python task, we can execute a full python script.\nThe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nBy convention, you need to define at least a main.py files in inputFiles that will be the script used.\nBut you are also able to add as many script as you need in inputFiles.\n\nYou can also add a pip.conf in inputFiles to customize the pip download of dependencies (like a private registry).\n\nYou can send outputs & metrics from your python script that can be used by others tasks. In order to help, we inject a python package directly on the working dir.Here is an example usage:\n\nfrom kestra import Kestra\nKestra.outputs({'test': 'value', 'int': 2, 'bool': True, 'float': 3.65})\nKestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nKestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nKestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n# Examples\n> Execute a python script\n\n\nid: \"python\"\ntype: \"org.kestra.core.tasks.scripts.Python\"\ninputFiles:\n  data.json: |\n          {\"status\": \"OK\"}\n  main.py: |\n    from kestra import Kestra\n    import json\n    import requests\n    import sys\n    result = json.loads(open(sys.argv[1]).read())\n    print(f\"python script {result['status']}\")\n    response = requests.get('http://google.com')\n    print(response.status_code)\n    Kestra.outputs({'status': response.status_code, 'text': response.text})\n  pip.conf: |\n    # some specific pip repository configuration\nargs:\n  - data.json\nrequirements:\n  - requests\n\n\n# Inputs\n# args\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Python command args\n\n\nArguments list to pass to main python script\n\n# exitOnFailed\n * Type: boolean\n * Dynamic: ❌\n * Required: ✔️\n * Default: true\n\n> Exit if any non true return value\n\n\nThis tells bash that it should exit the script if any statement returns a non-true return value.\nThe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n# files\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The list of files that will be uploaded to internal storage,\n\n\nuse outputsFiles property instead\n\n# inputFiles\n * Type: object\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Input files are extra files supplied by user that make it simpler organize code.\n\n\nDescribe a files map that will be written and usable in execution context. In python execution context is in a temp folder, for bash scripts, you can reach files using a inputsDirectory variable like 'source {{inputsDirectory}}/myfile.sh'\n\n# interpreter\n * Type: string\n * Dynamic: ❌\n * Required: ✔️\n * Default: /bin/sh\n * Min length: 1\n\nInterpreter to used\n\n# interpreterArgs\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n * Default: [-c]\n\n> Interpreter args used\n\n\n# outputFiles\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Output file list that will be uploaded to internal storage\n\n\nList of key that will generate temporary files.\nOn the command, just can use with special variable named outputFiles.key.\nIf you add a files with [\"first\"], you can use the special vars echo 1 >> {[ outputFiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n# outputsFiles\n🔒 Deprecated\n\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> Deprecated Output file\n\n\nuse outputFiles\n\n# pythonPath\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n * Default: /usr/bin/python3\n * Min length: 1\n\n> The python interpreter to use\n\n\nSet the python interpreter path to use\n\n# requirements\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Requirements are python dependencies to add to the python execution process\n\n\nPython dependencies list to setup in the virtualenv, in the same format than requirements.txt\n\n# Outputs\n# exitCode\n * Type: integer\n\n> The exit code of the whole execution\n\n\n# files\n🔒 Deprecated\n\n * Type: object\n * SubType: object\n\n> Deprecated output files\n\n\nuse outputFiles\n\n# outputFiles\n * Type: object\n * SubType: object\n\n> The output files uri in Kestra internal storage\n\n\n# stdErrLineCount\n * Type: integer\n\n> The standard error line count\n\n\n# stdOutLineCount\n * Type: integer\n\n> The standard output line count\n\n\n# vars\n * Type: object\n\n> The value extract from output of the commands",normalizedContent:"# python\ntype: \"org.kestra.core.tasks.scripts.python\"\n\n\n> execute a python script\n\n\nwith this python task, we can execute a full python script.\nthe task will create a fresh virtualenv for every tasks and allow you to install some python package define in requirements property.\n\nby convention, you need to define at least a main.py files in inputfiles that will be the script used.\nbut you are also able to add as many script as you need in inputfiles.\n\nyou can also add a pip.conf in inputfiles to customize the pip download of dependencies (like a private registry).\n\nyou can send outputs & metrics from your python script that can be used by others tasks. in order to help, we inject a python package directly on the working dir.here is an example usage:\n\nfrom kestra import kestra\nkestra.outputs({'test': 'value', 'int': 2, 'bool': true, 'float': 3.65})\nkestra.counter('count', 1, {'tag1': 'i', 'tag2': 'win'})\nkestra.timer('timer1', lambda: time.sleep(1), {'tag1': 'i', 'tag2': 'lost'})\nkestra.timer('timer2', 2.12, {'tag1': 'i', 'tag2': 'destroy'})\n\n\n# examples\n> execute a python script\n\n\nid: \"python\"\ntype: \"org.kestra.core.tasks.scripts.python\"\ninputfiles:\n  data.json: |\n          {\"status\": \"ok\"}\n  main.py: |\n    from kestra import kestra\n    import json\n    import requests\n    import sys\n    result = json.loads(open(sys.argv[1]).read())\n    print(f\"python script {result['status']}\")\n    response = requests.get('http://google.com')\n    print(response.status_code)\n    kestra.outputs({'status': response.status_code, 'text': response.text})\n  pip.conf: |\n    # some specific pip repository configuration\nargs:\n  - data.json\nrequirements:\n  - requests\n\n\n# inputs\n# args\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> python command args\n\n\narguments list to pass to main python script\n\n# exitonfailed\n * type: boolean\n * dynamic: ❌\n * required: ✔️\n * default: true\n\n> exit if any non true return value\n\n\nthis tells bash that it should exit the script if any statement returns a non-true return value.\nthe benefit of using -e is that it prevents errors snowballing into serious issues when they could have been caught earlier.\n\n# files\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> the list of files that will be uploaded to internal storage,\n\n\nuse outputsfiles property instead\n\n# inputfiles\n * type: object\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> input files are extra files supplied by user that make it simpler organize code.\n\n\ndescribe a files map that will be written and usable in execution context. in python execution context is in a temp folder, for bash scripts, you can reach files using a inputsdirectory variable like 'source {{inputsdirectory}}/myfile.sh'\n\n# interpreter\n * type: string\n * dynamic: ❌\n * required: ✔️\n * default: /bin/sh\n * min length: 1\n\ninterpreter to used\n\n# interpreterargs\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n * default: [-c]\n\n> interpreter args used\n\n\n# outputfiles\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> output file list that will be uploaded to internal storage\n\n\nlist of key that will generate temporary files.\non the command, just can use with special variable named outputfiles.key.\nif you add a files with [\"first\"], you can use the special vars echo 1 >> {[ outputfiles.first }} and you used on others tasks using {{ outputs.task-id.files.first }}\n\n# outputsfiles\n🔒 deprecated\n\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> deprecated output file\n\n\nuse outputfiles\n\n# pythonpath\n * type: string\n * dynamic: ✔️\n * required: ✔️\n * default: /usr/bin/python3\n * min length: 1\n\n> the python interpreter to use\n\n\nset the python interpreter path to use\n\n# requirements\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> requirements are python dependencies to add to the python execution process\n\n\npython dependencies list to setup in the virtualenv, in the same format than requirements.txt\n\n# outputs\n# exitcode\n * type: integer\n\n> the exit code of the whole execution\n\n\n# files\n🔒 deprecated\n\n * type: object\n * subtype: object\n\n> deprecated output files\n\n\nuse outputfiles\n\n# outputfiles\n * type: object\n * subtype: object\n\n> the output files uri in kestra internal storage\n\n\n# stderrlinecount\n * type: integer\n\n> the standard error line count\n\n\n# stdoutlinecount\n * type: integer\n\n> the standard output line count\n\n\n# vars\n * type: object\n\n> the value extract from output of the commands",charsets:{cjk:!0},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"Concat",frontmatter:{title:"Concat",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Concat"},{property:"og:description",content:"Concat | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/core/tasks/storages/org.kestra.core.tasks.storages.Concat.html"},{name:"twitter:title",content:"Concat"},{name:"twitter:description",content:"Concat | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/plugins/core/tasks/storages/org.kestra.core.tasks.storages.Concat.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Concat | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/plugins/core/tasks/storages/org.kestra.core.tasks.storages.Concat.html",relativePath:"plugins/core/tasks/storages/org.kestra.core.tasks.storages.Concat.md",key:"v-79a66723",path:"/plugins/core/tasks/storages/org.kestra.core.tasks.storages.Concat.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:96},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:926},{level:3,title:"files",slug:"files",normalizedTitle:"files",charIndex:64},{level:3,title:"separator",slug:"separator",normalizedTitle:"separator",charIndex:136},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1202},{level:3,title:"uri",slug:"uri",normalizedTitle:"uri",charIndex:1212}],headersStr:"Examples Inputs files separator Outputs uri",content:'# Concat\ntype: "org.kestra.core.tasks.storages.Concat"\n\n\nConcat files from internal storage.\n\n# Examples\n> Concat 2 files with a custom separator\n\n\nid: "concat"\ntype: "org.kestra.core.tasks.storages.Concat"\nfiles: \n  - "kestra://long/url/file1.txt"\n  - "kestra://long/url/file2.txt"\nseparator: "\\n"\n\n\n> Concat file generated by a each tasks\n\n\ntasks:\n  - id: each\n    type: org.kestra.core.tasks.flows.EachSequential\n    tasks:\n      - id: start_api_call\n        type: org.kestra.core.tasks.scripts.Bash\n        commands:\n          - echo {{ taskrun.value }} > {{ temp.generated }}\n        files:\n          - generated\n    value: \'["value1", "value2", "value3"]\'\n  - id: concat\n    type: org.kestra.core.tasks.storages.Concat\n    files:\n      - "{{ outputs.start_api_call.value1.files.generated }}"\n      - "{{ outputs.start_api_call.value2.files.generated }}"\n      - "{{ outputs.start_api_call.value3.files.generated }}"\n\n\n# Inputs\n# files\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> List of files to be concatenated.\n\n\nMust be a kestra:// storage url\n\n# separator\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The separator to used between files, default is no seprator\n\n\n# Outputs\n# uri\n * Type: object\n\n> The concatenate file uri.',normalizedContent:'# concat\ntype: "org.kestra.core.tasks.storages.concat"\n\n\nconcat files from internal storage.\n\n# examples\n> concat 2 files with a custom separator\n\n\nid: "concat"\ntype: "org.kestra.core.tasks.storages.concat"\nfiles: \n  - "kestra://long/url/file1.txt"\n  - "kestra://long/url/file2.txt"\nseparator: "\\n"\n\n\n> concat file generated by a each tasks\n\n\ntasks:\n  - id: each\n    type: org.kestra.core.tasks.flows.eachsequential\n    tasks:\n      - id: start_api_call\n        type: org.kestra.core.tasks.scripts.bash\n        commands:\n          - echo {{ taskrun.value }} > {{ temp.generated }}\n        files:\n          - generated\n    value: \'["value1", "value2", "value3"]\'\n  - id: concat\n    type: org.kestra.core.tasks.storages.concat\n    files:\n      - "{{ outputs.start_api_call.value1.files.generated }}"\n      - "{{ outputs.start_api_call.value2.files.generated }}"\n      - "{{ outputs.start_api_call.value3.files.generated }}"\n\n\n# inputs\n# files\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> list of files to be concatenated.\n\n\nmust be a kestra:// storage url\n\n# separator\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the separator to used between files, default is no seprator\n\n\n# outputs\n# uri\n * type: object\n\n> the concatenate file uri.',charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"Delete",frontmatter:{title:"Delete",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Delete"},{property:"og:description",content:"Delete | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/core/tasks/storages/org.kestra.core.tasks.storages.Delete.html"},{name:"twitter:title",content:"Delete"},{name:"twitter:description",content:"Delete | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/plugins/core/tasks/storages/org.kestra.core.tasks.storages.Delete.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Delete | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/plugins/core/tasks/storages/org.kestra.core.tasks.storages.Delete.html",relativePath:"plugins/core/tasks/storages/org.kestra.core.tasks.storages.Delete.md",key:"v-44dca4c3",path:"/plugins/core/tasks/storages/org.kestra.core.tasks.storages.Delete.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:97},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:203},{level:3,title:"errorOnMissing",slug:"erroronmissing",normalizedTitle:"erroronmissing",charIndex:212},{level:3,title:"uri",slug:"uri",normalizedTitle:"uri",charIndex:165},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:430},{level:3,title:"deleted",slug:"deleted",normalizedTitle:"deleted",charIndex:440},{level:3,title:"uri",slug:"uri-2",normalizedTitle:"uri",charIndex:165}],headersStr:"Examples Inputs errorOnMissing uri Outputs deleted uri",content:'# Delete\ntype: "org.kestra.core.tasks.storages.Delete"\n\n\nDelete a file from internal storage.\n\n# Examples\nid: "delete"\ntype: "org.kestra.core.tasks.storages.Delete"\nuri: "kestra://long/url/file.txt"\n\n\n# Inputs\n# errorOnMissing\n * Type: boolean\n * Dynamic: ✔️\n * Required: ❌\n\n> raise an error if the file is not found\n\n\n# uri\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> the file to delete\n\n\nMust be a kestra:// storage url\n\n# Outputs\n# deleted\n * Type: boolean\n\n> If the files was really deleted\n\n\n# uri\n * Type: object\n\n> The deleted',normalizedContent:'# delete\ntype: "org.kestra.core.tasks.storages.delete"\n\n\ndelete a file from internal storage.\n\n# examples\nid: "delete"\ntype: "org.kestra.core.tasks.storages.delete"\nuri: "kestra://long/url/file.txt"\n\n\n# inputs\n# erroronmissing\n * type: boolean\n * dynamic: ✔️\n * required: ❌\n\n> raise an error if the file is not found\n\n\n# uri\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the file to delete\n\n\nmust be a kestra:// storage url\n\n# outputs\n# deleted\n * type: boolean\n\n> if the files was really deleted\n\n\n# uri\n * type: object\n\n> the deleted',charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"Flow",frontmatter:{title:"Flow",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Flow"},{property:"og:description",content:"Flow | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/core/triggers/org.kestra.core.models.triggers.types.Flow.html"},{name:"twitter:title",content:"Flow"},{name:"twitter:description",content:"Flow | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/plugins/core/triggers/org.kestra.core.models.triggers.types.Flow.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Flow | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/plugins/core/triggers/org.kestra.core.models.triggers.types.Flow.html",relativePath:"plugins/core/triggers/org.kestra.core.models.triggers.types.Flow.md",key:"v-1172039b",path:"/plugins/core/triggers/org.kestra.core.models.triggers.types.Flow.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:390},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:1251},{level:3,title:"inputs",slug:"inputs-2",normalizedTitle:"inputs",charIndex:679},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1654},{level:3,title:"executionId",slug:"executionid",normalizedTitle:"executionid",charIndex:829},{level:3,title:"flowId",slug:"flowid",normalizedTitle:"flowid",charIndex:1115},{level:3,title:"flowRevision",slug:"flowrevision",normalizedTitle:"flowrevision",charIndex:1823},{level:3,title:"namespace",slug:"namespace",normalizedTitle:"namespace",charIndex:638}],headersStr:"Examples Inputs inputs Outputs executionId flowId flowRevision namespace",content:'# Flow\ntype: "org.kestra.core.models.triggers.types.Flow"\n\n\n> Kestra is able to trigger flow after another one. This allows chaining flow without need to update the base flows.\nWith that, you can break responsibility between different flow to different teams.\n\n\nWARNING\n\nIf you don\'t provide any conditions, the flow will be triggered for EVERY execution of EVERY flow on your instance.\n\n# Examples\n> This flow will be triggered after each successfully execution of flow org.kestra.tests.trigger-flow and forward the uri of my-task taskId outputs.\n\n\nid: "flow"\ntype: "org.kestra.core.models.triggers.types.Flow"\nid: trigger-flow-listener\nnamespace: org.kestra.tests\nrevision: 1\n\ninputs:\n  - name: from-parent\n    type: STRING\n\ntasks:\n  - id: only-no-input\n    type: org.kestra.core.tasks.debugs.Return\n    format: "v1: {{trigger.executionId}}"\n\ntriggers:\n  - id: listen-flow\n    type: org.kestra.core.models.triggers.types.Flow\n    inputs:\n      from-parent: \'{{ outputs.my-task.uri }}\'\n    conditions:\n      - type: org.kestra.core.models.conditions.types.FlowCondition\n        namespace: org.kestra.tests\n        flowId: trigger-flow\n      - type: org.kestra.core.models.conditions.types.ExecutionStatusCondition\n        in:\n          - SUCCESS\n\n\n# Inputs\n# inputs\n * Type: object\n * Dynamic: ❓\n * Required: ❌\n\n> Fill input of this flow based on output of current flow, allowing to pass data or file on the triggered flow\n\n\nWARNING\n\nIf you provide invalid input, the flow will not be created! Since there is no task started, you can\'t log any reason visible on the execution ui.\nSo you will need to go to Logs tabs on the ui to understand the error\n\n# Outputs\n# executionId\n * Type: string\n\n> The execution id that trigger the current flow\n\n\n# flowId\n * Type: string\n\n> The execution id that trigger the current flow\n\n\n# flowRevision\n * Type: integer\n\n> The flow revision that trigger the current flow\n\n\n# namespace\n * Type: string\n\n> The namespace of the flow that trigger the current flow',normalizedContent:'# flow\ntype: "org.kestra.core.models.triggers.types.flow"\n\n\n> kestra is able to trigger flow after another one. this allows chaining flow without need to update the base flows.\nwith that, you can break responsibility between different flow to different teams.\n\n\nwarning\n\nif you don\'t provide any conditions, the flow will be triggered for every execution of every flow on your instance.\n\n# examples\n> this flow will be triggered after each successfully execution of flow org.kestra.tests.trigger-flow and forward the uri of my-task taskid outputs.\n\n\nid: "flow"\ntype: "org.kestra.core.models.triggers.types.flow"\nid: trigger-flow-listener\nnamespace: org.kestra.tests\nrevision: 1\n\ninputs:\n  - name: from-parent\n    type: string\n\ntasks:\n  - id: only-no-input\n    type: org.kestra.core.tasks.debugs.return\n    format: "v1: {{trigger.executionid}}"\n\ntriggers:\n  - id: listen-flow\n    type: org.kestra.core.models.triggers.types.flow\n    inputs:\n      from-parent: \'{{ outputs.my-task.uri }}\'\n    conditions:\n      - type: org.kestra.core.models.conditions.types.flowcondition\n        namespace: org.kestra.tests\n        flowid: trigger-flow\n      - type: org.kestra.core.models.conditions.types.executionstatuscondition\n        in:\n          - success\n\n\n# inputs\n# inputs\n * type: object\n * dynamic: ❓\n * required: ❌\n\n> fill input of this flow based on output of current flow, allowing to pass data or file on the triggered flow\n\n\nwarning\n\nif you provide invalid input, the flow will not be created! since there is no task started, you can\'t log any reason visible on the execution ui.\nso you will need to go to logs tabs on the ui to understand the error\n\n# outputs\n# executionid\n * type: string\n\n> the execution id that trigger the current flow\n\n\n# flowid\n * type: string\n\n> the execution id that trigger the current flow\n\n\n# flowrevision\n * type: integer\n\n> the flow revision that trigger the current flow\n\n\n# namespace\n * type: string\n\n> the namespace of the flow that trigger the current flow',charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"Schedule",frontmatter:{title:"Schedule",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Schedule"},{property:"og:description",content:"Schedule | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/core/triggers/org.kestra.core.models.triggers.types.Schedule.html"},{name:"twitter:title",content:"Schedule"},{name:"twitter:description",content:"Schedule | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/plugins/core/triggers/org.kestra.core.models.triggers.types.Schedule.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Schedule | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/plugins/core/triggers/org.kestra.core.models.triggers.types.Schedule.html",relativePath:"plugins/core/triggers/org.kestra.core.models.triggers.types.Schedule.md",key:"v-471db309",path:"/plugins/core/triggers/org.kestra.core.models.triggers.types.Schedule.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:663},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:903},{level:3,title:"backfill",slug:"backfill",normalizedTitle:"backfill",charIndex:480},{level:3,title:"backfill.start",slug:"backfill-start",normalizedTitle:"backfill.start",charIndex:1279},{level:3,title:"cron",slug:"cron",normalizedTitle:"cron",charIndex:95},{level:3,title:"interval",slug:"interval",normalizedTitle:"interval",charIndex:1507},{level:3,title:"interval.seconds",slug:"interval-seconds",normalizedTitle:"interval.seconds",charIndex:1822},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1888},{level:3,title:"date",slug:"date",normalizedTitle:"date",charIndex:100},{level:3,title:"next",slug:"next",normalizedTitle:"next",charIndex:1955},{level:3,title:"previous",slug:"previous",normalizedTitle:"previous",charIndex:1011}],headersStr:"Examples Inputs backfill backfill.start cron interval interval.seconds Outputs date next previous",content:'# Schedule\ntype: "org.kestra.core.models.triggers.types.Schedule"\n\n\n> Schedule a flow based on cron date\n\n\nKestra is able to trigger flow based on Schedule (aka the time). If you need to wait another system to be ready and can\'t use any event mechanism, you can schedule 1 or more time for the current flow.\n\nThe scheduler will keep the last execution date for this schedule based on the id. This allow you to change the cron expression without restart all the past execution (if backfill exists)\nIf you changed the current id, the scheduler will think it\'s a new schedule and will start with a fresh date and replay the all backfill date (if backfill exists)\n\n# Examples\nid: "schedule"\ntype: "org.kestra.core.models.triggers.types.Schedule"\ntriggers:\n  - id: schedule\n    type: org.kestra.core.models.triggers.types.Schedule\n    cron: "*/15 * * * *"\n    backfill:\n      start: 2020-06-25T14:00:00Z\n\n\n# Inputs\n# backfill\n * Type: object\n * Dynamic: ❓\n * Required: ❌\n\n> Backfill options in order to fill missing previous past date\n\n\nKestra will handle optionnaly a backfill. The concept of backfill is the replay the missing schedule because we create the flow later.\n\nBackfill will do all schedules between define date & current date and will start after the normal schedule.\n\n# backfill.start\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The first start date\n\n\n# cron\n * Type: string\n * Dynamic: ❓\n * Required: ✔️\n\n> the cron expression you need tyo\n\n\na standard unix cron expression without second.\n\n# interval\n * Type: object\n * Dynamic: ❓\n * Required: ❌\n * Default: PT1S\n\n> Interval between polling\n\n\nThe interval between 2 different test of schedule, this can avoid to overload the remote system with too many call. For most of trigger that depend on external system, a minimal interval must be at least PT30S.\n\n# interval.seconds\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n# Outputs\n# date\n * Type: string\n\n> The date of current schedule\n\n\n# next\n * Type: string\n\n> The date of next schedule\n\n\n# previous\n * Type: string\n\n> The date of previous schedule',normalizedContent:'# schedule\ntype: "org.kestra.core.models.triggers.types.schedule"\n\n\n> schedule a flow based on cron date\n\n\nkestra is able to trigger flow based on schedule (aka the time). if you need to wait another system to be ready and can\'t use any event mechanism, you can schedule 1 or more time for the current flow.\n\nthe scheduler will keep the last execution date for this schedule based on the id. this allow you to change the cron expression without restart all the past execution (if backfill exists)\nif you changed the current id, the scheduler will think it\'s a new schedule and will start with a fresh date and replay the all backfill date (if backfill exists)\n\n# examples\nid: "schedule"\ntype: "org.kestra.core.models.triggers.types.schedule"\ntriggers:\n  - id: schedule\n    type: org.kestra.core.models.triggers.types.schedule\n    cron: "*/15 * * * *"\n    backfill:\n      start: 2020-06-25t14:00:00z\n\n\n# inputs\n# backfill\n * type: object\n * dynamic: ❓\n * required: ❌\n\n> backfill options in order to fill missing previous past date\n\n\nkestra will handle optionnaly a backfill. the concept of backfill is the replay the missing schedule because we create the flow later.\n\nbackfill will do all schedules between define date & current date and will start after the normal schedule.\n\n# backfill.start\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the first start date\n\n\n# cron\n * type: string\n * dynamic: ❓\n * required: ✔️\n\n> the cron expression you need tyo\n\n\na standard unix cron expression without second.\n\n# interval\n * type: object\n * dynamic: ❓\n * required: ❌\n * default: pt1s\n\n> interval between polling\n\n\nthe interval between 2 different test of schedule, this can avoid to overload the remote system with too many call. for most of trigger that depend on external system, a minimal interval must be at least pt30s.\n\n# interval.seconds\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n# outputs\n# date\n * type: string\n\n> the date of current schedule\n\n\n# next\n * type: string\n\n> the date of next schedule\n\n\n# previous\n * type: string\n\n> the date of previous schedule',charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"Task aws",frontmatter:{title:"Task aws",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Task aws"},{property:"og:description",content:"Task aws | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-aws/"},{name:"twitter:title",content:"Task aws"},{name:"twitter:description",content:"Task aws | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/plugins/task-aws/"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Task aws | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/plugins/task-aws/",relativePath:"plugins/task-aws/README.md",key:"v-0b14c0b0",path:"/plugins/task-aws/",headers:[{level:2,title:"S3",slug:"s3",normalizedTitle:"s3",charIndex:13},{level:3,title:"Tasks",slug:"tasks",normalizedTitle:"tasks",charIndex:18}],headersStr:"S3 Tasks",content:"# Task aws\n# S3\n# Tasks\n * CreateBucket\n * Delete\n * Download\n * Upload",normalizedContent:"# task aws\n# s3\n# tasks\n * createbucket\n * delete\n * download\n * upload",charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"CreateBucket",frontmatter:{title:"CreateBucket",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"CreateBucket"},{property:"og:description",content:"CreateBucket | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-aws/tasks/s3/org.kestra.task.aws.s3.CreateBucket.html"},{name:"twitter:title",content:"CreateBucket"},{name:"twitter:description",content:"CreateBucket | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/plugins/task-aws/tasks/s3/org.kestra.task.aws.s3.CreateBucket.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"CreateBucket | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/plugins/task-aws/tasks/s3/org.kestra.task.aws.s3.CreateBucket.html",relativePath:"plugins/task-aws/tasks/s3/org.kestra.task.aws.s3.CreateBucket.md",key:"v-2a294a03",path:"/plugins/task-aws/tasks/s3/org.kestra.task.aws.s3.CreateBucket.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:83},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:240},{level:3,title:"accessKeyId",slug:"accesskeyid",normalizedTitle:"accesskeyid",charIndex:249},{level:3,title:"acl",slug:"acl",normalizedTitle:"acl",charIndex:469},{level:3,title:"bucket",slug:"bucket",normalizedTitle:"bucket",charIndex:72},{level:3,title:"grantFullControl",slug:"grantfullcontrol",normalizedTitle:"grantfullcontrol",charIndex:660},{level:3,title:"grantRead",slug:"grantread",normalizedTitle:"grantread",charIndex:810},{level:3,title:"grantReadACP",slug:"grantreadacp",normalizedTitle:"grantreadacp",charIndex:923},{level:3,title:"grantWrite",slug:"grantwrite",normalizedTitle:"grantwrite",charIndex:1039},{level:3,title:"grantWriteACP",slug:"grantwriteacp",normalizedTitle:"grantwriteacp",charIndex:1177},{level:3,title:"objectLockEnabledForBucket",slug:"objectlockenabledforbucket",normalizedTitle:"objectlockenabledforbucket",charIndex:1303},{level:3,title:"region",slug:"region",normalizedTitle:"region",charIndex:216},{level:3,title:"secretKeyId",slug:"secretkeyid",normalizedTitle:"secretkeyid",charIndex:1542},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1762},{level:3,title:"bucket",slug:"bucket-2",normalizedTitle:"bucket",charIndex:72},{level:3,title:"region",slug:"region-2",normalizedTitle:"region",charIndex:216}],headersStr:"Examples Inputs accessKeyId acl bucket grantFullControl grantRead grantReadACP grantWrite grantWriteACP objectLockEnabledForBucket region secretKeyId Outputs bucket region",content:'# CreateBucket\ntype: "org.kestra.task.aws.s3.CreateBucket"\n\n\n> Create a bucket\n\n\n# Examples\n> Create a new bucket with some options\n\n\nid: "create_bucket"\ntype: "org.kestra.task.aws.s3.CreateBucket"\nname: "my-bucket"\nregion: "eu-west-1"\n\n\n# Inputs\n# accessKeyId\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The Access Key Id in order to connect to AWS\n\n\nIf no connection is defined, we will use default DefaultCredentialsProvider that will try to guess the value\n\n# acl\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The canned ACL to apply to the bucket.\n\n\n# bucket\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\nThe bucket where to download the file\n\n# grantFullControl\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\nAllows grantee the read, write, read ACP, and write ACP permissions on the bucket.\n\n# grantRead\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Allows grantee to list the objects in the bucket.\n\n\n# grantReadACP\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Allows grantee to list the objects in the bucket.\n\n\n# grantWrite\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Allows grantee to create, overwrite, and delete any object in the bucket.\n\n\n# grantWriteACP\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Allows grantee to write the ACL for the applicable bucket.\n\n\n# objectLockEnabledForBucket\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n> Specifies whether you want S3 Object Lock to be enabled for the new bucket.\n\n\n# region\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The AWS region to used\n\n\n# secretKeyId\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The Secret Key Id in order to connect to AWS\n\n\nIf no connection is defined, we will use default DefaultCredentialsProvider that will try to guess the value\n\n# Outputs\n# bucket\n * Type: string\n\n# region\n * Type: string',normalizedContent:'# createbucket\ntype: "org.kestra.task.aws.s3.createbucket"\n\n\n> create a bucket\n\n\n# examples\n> create a new bucket with some options\n\n\nid: "create_bucket"\ntype: "org.kestra.task.aws.s3.createbucket"\nname: "my-bucket"\nregion: "eu-west-1"\n\n\n# inputs\n# accesskeyid\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the access key id in order to connect to aws\n\n\nif no connection is defined, we will use default defaultcredentialsprovider that will try to guess the value\n\n# acl\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the canned acl to apply to the bucket.\n\n\n# bucket\n * type: string\n * dynamic: ✔️\n * required: ❌\n\nthe bucket where to download the file\n\n# grantfullcontrol\n * type: string\n * dynamic: ✔️\n * required: ❌\n\nallows grantee the read, write, read acp, and write acp permissions on the bucket.\n\n# grantread\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> allows grantee to list the objects in the bucket.\n\n\n# grantreadacp\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> allows grantee to list the objects in the bucket.\n\n\n# grantwrite\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> allows grantee to create, overwrite, and delete any object in the bucket.\n\n\n# grantwriteacp\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> allows grantee to write the acl for the applicable bucket.\n\n\n# objectlockenabledforbucket\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n> specifies whether you want s3 object lock to be enabled for the new bucket.\n\n\n# region\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the aws region to used\n\n\n# secretkeyid\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the secret key id in order to connect to aws\n\n\nif no connection is defined, we will use default defaultcredentialsprovider that will try to guess the value\n\n# outputs\n# bucket\n * type: string\n\n# region\n * type: string',charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"Delete",frontmatter:{title:"Delete",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Delete"},{property:"og:description",content:"Delete | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-aws/tasks/s3/org.kestra.task.aws.s3.Delete.html"},{name:"twitter:title",content:"Delete"},{name:"twitter:description",content:"Delete | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/plugins/task-aws/tasks/s3/org.kestra.task.aws.s3.Delete.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Delete | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/plugins/task-aws/tasks/s3/org.kestra.task.aws.s3.Delete.html",relativePath:"plugins/task-aws/tasks/s3/org.kestra.task.aws.s3.Delete.md",key:"v-87b63d3a",path:"/plugins/task-aws/tasks/s3/org.kestra.task.aws.s3.Delete.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:87},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:191},{level:3,title:"accessKeyId",slug:"accesskeyid",normalizedTitle:"accesskeyid",charIndex:200},{level:3,title:"bucket",slug:"bucket",normalizedTitle:"bucket",charIndex:75},{level:3,title:"bypassGovernanceRetention",slug:"bypassgovernanceretention",normalizedTitle:"bypassgovernanceretention",charIndex:491},{level:3,title:"key",slug:"key",normalizedTitle:"key",charIndex:167},{level:3,title:"mfa",slug:"mfa",normalizedTitle:"mfa",charIndex:748},{level:3,title:"region",slug:"region",normalizedTitle:"region",charIndex:1045},{level:3,title:"requestPayer",slug:"requestpayer",normalizedTitle:"requestpayer",charIndex:1128},{level:3,title:"secretKeyId",slug:"secretkeyid",normalizedTitle:"secretkeyid",charIndex:1252},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1472},{level:3,title:"deleteMarker",slug:"deletemarker",normalizedTitle:"deletemarker",charIndex:1482},{level:3,title:"requestCharged",slug:"requestcharged",normalizedTitle:"requestcharged",charIndex:1634},{level:3,title:"versionId",slug:"versionid",normalizedTitle:"versionid",charIndex:1738}],headersStr:"Examples Inputs accessKeyId bucket bypassGovernanceRetention key mfa region requestPayer secretKeyId Outputs deleteMarker requestCharged versionId",content:'# Delete\ntype: "org.kestra.task.aws.s3.Delete"\n\n\n> Download a file to a S3 bucket.\n\n\n# Examples\nid: "delete"\ntype: "org.kestra.task.aws.s3.Delete"\nbucket: "my-bucket"\nkey: "path/to/file"\n\n\n# Inputs\n# accessKeyId\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The Access Key Id in order to connect to AWS\n\n\nIf no connection is defined, we will use default DefaultCredentialsProvider that will try to guess the value\n\n# bucket\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The bucket\n\n\n# bypassGovernanceRetention\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n> Indicates whether S3 Object Lock should bypass Governance-mode restrictions to process this operation.\n\n\n# key\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The key to delete\n\n\n# mfa\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The concatenation of the authentication device\'s serial number, a space, and the value that is displayed on your authentication device.\n\n\nRequired to permanently delete a versioned object if versioning is configured with MFA delete enabled.\n\n# region\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The AWS region to used\n\n\n# requestPayer\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\nSets the value of the RequestPayer property for this object.\n\n# secretKeyId\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The Secret Key Id in order to connect to AWS\n\n\nIf no connection is defined, we will use default DefaultCredentialsProvider that will try to guess the value\n\n# Outputs\n# deleteMarker\n * Type: boolean\n\n> Specifies whether the versioned object that was permanently deleted was (true) or was not (false) a delete marker.\n\n\n# requestCharged\n * Type: string\n\n> Returns the value of the RequestCharged property for this object.\n\n\n# versionId\n * Type: string\n\n> Returns the version ID of the delete marker created as a result of the DELETE operation.',normalizedContent:'# delete\ntype: "org.kestra.task.aws.s3.delete"\n\n\n> download a file to a s3 bucket.\n\n\n# examples\nid: "delete"\ntype: "org.kestra.task.aws.s3.delete"\nbucket: "my-bucket"\nkey: "path/to/file"\n\n\n# inputs\n# accesskeyid\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the access key id in order to connect to aws\n\n\nif no connection is defined, we will use default defaultcredentialsprovider that will try to guess the value\n\n# bucket\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the bucket\n\n\n# bypassgovernanceretention\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n> indicates whether s3 object lock should bypass governance-mode restrictions to process this operation.\n\n\n# key\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the key to delete\n\n\n# mfa\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the concatenation of the authentication device\'s serial number, a space, and the value that is displayed on your authentication device.\n\n\nrequired to permanently delete a versioned object if versioning is configured with mfa delete enabled.\n\n# region\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the aws region to used\n\n\n# requestpayer\n * type: string\n * dynamic: ✔️\n * required: ❌\n\nsets the value of the requestpayer property for this object.\n\n# secretkeyid\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the secret key id in order to connect to aws\n\n\nif no connection is defined, we will use default defaultcredentialsprovider that will try to guess the value\n\n# outputs\n# deletemarker\n * type: boolean\n\n> specifies whether the versioned object that was permanently deleted was (true) or was not (false) a delete marker.\n\n\n# requestcharged\n * type: string\n\n> returns the value of the requestcharged property for this object.\n\n\n# versionid\n * type: string\n\n> returns the version id of the delete marker created as a result of the delete operation.',charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"Download",frontmatter:{title:"Download",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Download"},{property:"og:description",content:"Download | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-aws/tasks/s3/org.kestra.task.aws.s3.Download.html"},{name:"twitter:title",content:"Download"},{name:"twitter:description",content:"Download | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/plugins/task-aws/tasks/s3/org.kestra.task.aws.s3.Download.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Download | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/plugins/task-aws/tasks/s3/org.kestra.task.aws.s3.Download.html",relativePath:"plugins/task-aws/tasks/s3/org.kestra.task.aws.s3.Download.md",key:"v-56e82843",path:"/plugins/task-aws/tasks/s3/org.kestra.task.aws.s3.Download.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:91},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:199},{level:3,title:"accessKeyId",slug:"accesskeyid",normalizedTitle:"accesskeyid",charIndex:208},{level:3,title:"bucket",slug:"bucket",normalizedTitle:"bucket",charIndex:79},{level:3,title:"key",slug:"key",normalizedTitle:"key",charIndex:175},{level:3,title:"region",slug:"region",normalizedTitle:"region",charIndex:618},{level:3,title:"requestPayer",slug:"requestpayer",normalizedTitle:"requestpayer",charIndex:701},{level:3,title:"secretKeyId",slug:"secretkeyid",normalizedTitle:"secretkeyid",charIndex:828},{level:3,title:"versionId",slug:"versionid",normalizedTitle:"versionid",charIndex:1048},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1173},{level:3,title:"contentLength",slug:"contentlength",normalizedTitle:"contentlength",charIndex:1183},{level:3,title:"contentType",slug:"contenttype",normalizedTitle:"contenttype",charIndex:1248},{level:3,title:"metadata",slug:"metadata",normalizedTitle:"metadata",charIndex:1346},{level:3,title:"uri",slug:"uri",normalizedTitle:"uri",charIndex:1428},{level:3,title:"versionId",slug:"versionid-2",normalizedTitle:"versionid",charIndex:1048}],headersStr:"Examples Inputs accessKeyId bucket key region requestPayer secretKeyId versionId Outputs contentLength contentType metadata uri versionId",content:'# Download\ntype: "org.kestra.task.aws.s3.Download"\n\n\n> Download a file to a S3 bucket.\n\n\n# Examples\nid: "download"\ntype: "org.kestra.task.aws.s3.Download"\nbucket: "my-bucket"\nkey: "path/to/file"\n\n\n# Inputs\n# accessKeyId\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The Access Key Id in order to connect to AWS\n\n\nIf no connection is defined, we will use default DefaultCredentialsProvider that will try to guess the value\n\n# bucket\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The bucket where to download the file\n\n\n# key\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The key where to download the file\n\n\n# region\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The AWS region to used\n\n\n# requestPayer\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Sets the value of the RequestPayer property for this object.\n\n\n# secretKeyId\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The Secret Key Id in order to connect to AWS\n\n\nIf no connection is defined, we will use default DefaultCredentialsProvider that will try to guess the value\n\n# versionId\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> VersionId used to reference a specific version of the object.\n\n\n# Outputs\n# contentLength\n * Type: integer\n\n> Size of the body in bytes.\n\n\n# contentType\n * Type: string\n\n> A standard MIME type describing the format of the object data.\n\n\n# metadata\n * Type: object\n\n> A map of metadata to store with the object in S3.\n\n\n# uri\n * Type: object\n\n# versionId\n * Type: string\n\n> Version of the object.',normalizedContent:'# download\ntype: "org.kestra.task.aws.s3.download"\n\n\n> download a file to a s3 bucket.\n\n\n# examples\nid: "download"\ntype: "org.kestra.task.aws.s3.download"\nbucket: "my-bucket"\nkey: "path/to/file"\n\n\n# inputs\n# accesskeyid\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the access key id in order to connect to aws\n\n\nif no connection is defined, we will use default defaultcredentialsprovider that will try to guess the value\n\n# bucket\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the bucket where to download the file\n\n\n# key\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the key where to download the file\n\n\n# region\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the aws region to used\n\n\n# requestpayer\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> sets the value of the requestpayer property for this object.\n\n\n# secretkeyid\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the secret key id in order to connect to aws\n\n\nif no connection is defined, we will use default defaultcredentialsprovider that will try to guess the value\n\n# versionid\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> versionid used to reference a specific version of the object.\n\n\n# outputs\n# contentlength\n * type: integer\n\n> size of the body in bytes.\n\n\n# contenttype\n * type: string\n\n> a standard mime type describing the format of the object data.\n\n\n# metadata\n * type: object\n\n> a map of metadata to store with the object in s3.\n\n\n# uri\n * type: object\n\n# versionid\n * type: string\n\n> version of the object.',charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"Upload",frontmatter:{title:"Upload",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Upload"},{property:"og:description",content:"Upload | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-aws/tasks/s3/org.kestra.task.aws.s3.Upload.html"},{name:"twitter:title",content:"Upload"},{name:"twitter:description",content:"Upload | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/plugins/task-aws/tasks/s3/org.kestra.task.aws.s3.Upload.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Upload | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/plugins/task-aws/tasks/s3/org.kestra.task.aws.s3.Upload.html",relativePath:"plugins/task-aws/tasks/s3/org.kestra.task.aws.s3.Upload.md",key:"v-6ba611ba",path:"/plugins/task-aws/tasks/s3/org.kestra.task.aws.s3.Upload.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:85},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:215},{level:3,title:"accessKeyId",slug:"accesskeyid",normalizedTitle:"accesskeyid",charIndex:224},{level:3,title:"bucket",slug:"bucket",normalizedTitle:"bucket",charIndex:73},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:145},{level:3,title:"key",slug:"key",normalizedTitle:"key",charIndex:191},{level:3,title:"metadata",slug:"metadata",normalizedTitle:"metadata",charIndex:707},{level:3,title:"region",slug:"region",normalizedTitle:"region",charIndex:818},{level:3,title:"requestPayer",slug:"requestpayer",normalizedTitle:"requestpayer",charIndex:901},{level:3,title:"secretKeyId",slug:"secretkeyid",normalizedTitle:"secretkeyid",charIndex:1028},{level:3,title:"storageClass",slug:"storageclass",normalizedTitle:"storageclass",charIndex:1248},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1420},{level:3,title:"bucket",slug:"bucket-2",normalizedTitle:"bucket",charIndex:73},{level:3,title:"key",slug:"key-2",normalizedTitle:"key",charIndex:191},{level:3,title:"versionId",slug:"versionid",normalizedTitle:"versionid",charIndex:1479}],headersStr:"Examples Inputs accessKeyId bucket from key metadata region requestPayer secretKeyId storageClass Outputs bucket key versionId",content:'# Upload\ntype: "org.kestra.task.aws.s3.Upload"\n\n\n> Upload a file to a S3 bucket.\n\n\n# Examples\nid: "upload"\ntype: "org.kestra.task.aws.s3.Upload"\nfrom: "{{ inputs.file }}"\nbucket: "my-bucket"\nkey: "path/to/file"\n\n\n# Inputs\n# accessKeyId\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The Access Key Id in order to connect to AWS\n\n\nIf no connection is defined, we will use default DefaultCredentialsProvider that will try to guess the value\n\n# bucket\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The bucket where to upload the file\n\n\n# from\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The file to upload\n\n\n# key\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The key where to upload the file\n\n\n# metadata\n * Type: object\n * Dynamic: ❌\n * Required: ❌\n\n> A map of metadata to store with the object in S3.\n\n\n# region\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The AWS region to used\n\n\n# requestPayer\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Sets the value of the RequestPayer property for this object.\n\n\n# secretKeyId\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The Secret Key Id in order to connect to AWS\n\n\nIf no connection is defined, we will use default DefaultCredentialsProvider that will try to guess the value\n\n# storageClass\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> If you don\'t specify, S3 Standard is the default storage class. Amazon S3 supports other storage classes.\n\n\n# Outputs\n# bucket\n * Type: string\n\n# key\n * Type: string\n\n# versionId\n * Type: string\n\n> Version of the object.',normalizedContent:'# upload\ntype: "org.kestra.task.aws.s3.upload"\n\n\n> upload a file to a s3 bucket.\n\n\n# examples\nid: "upload"\ntype: "org.kestra.task.aws.s3.upload"\nfrom: "{{ inputs.file }}"\nbucket: "my-bucket"\nkey: "path/to/file"\n\n\n# inputs\n# accesskeyid\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the access key id in order to connect to aws\n\n\nif no connection is defined, we will use default defaultcredentialsprovider that will try to guess the value\n\n# bucket\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the bucket where to upload the file\n\n\n# from\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the file to upload\n\n\n# key\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the key where to upload the file\n\n\n# metadata\n * type: object\n * dynamic: ❌\n * required: ❌\n\n> a map of metadata to store with the object in s3.\n\n\n# region\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the aws region to used\n\n\n# requestpayer\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> sets the value of the requestpayer property for this object.\n\n\n# secretkeyid\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the secret key id in order to connect to aws\n\n\nif no connection is defined, we will use default defaultcredentialsprovider that will try to guess the value\n\n# storageclass\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> if you don\'t specify, s3 standard is the default storage class. amazon s3 supports other storage classes.\n\n\n# outputs\n# bucket\n * type: string\n\n# key\n * type: string\n\n# versionid\n * type: string\n\n> version of the object.',charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"Task crypto",frontmatter:{title:"Task crypto",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Task crypto"},{property:"og:description",content:"Task crypto | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-crypto/"},{name:"twitter:title",content:"Task crypto"},{name:"twitter:description",content:"Task crypto | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/plugins/task-crypto/"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Task crypto | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/plugins/task-crypto/",relativePath:"plugins/task-crypto/README.md",key:"v-60b891e2",path:"/plugins/task-crypto/",headers:[{level:2,title:"Openpgp",slug:"openpgp",normalizedTitle:"openpgp",charIndex:16},{level:3,title:"Tasks",slug:"tasks",normalizedTitle:"tasks",charIndex:26}],headersStr:"Openpgp Tasks",content:"# Task crypto\n# Openpgp\n# Tasks\n * Decrypt\n * Encrypt",normalizedContent:"# task crypto\n# openpgp\n# tasks\n * decrypt\n * encrypt",charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"Decrypt",frontmatter:{title:"Decrypt",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Decrypt"},{property:"og:description",content:"Decrypt | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-crypto/tasks/openpgp/org.kestra.task.crypto.openpgp.Decrypt.html"},{name:"twitter:title",content:"Decrypt"},{name:"twitter:description",content:"Decrypt | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/plugins/task-crypto/tasks/openpgp/org.kestra.task.crypto.openpgp.Decrypt.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Decrypt | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/plugins/task-crypto/tasks/openpgp/org.kestra.task.crypto.openpgp.Decrypt.html",relativePath:"plugins/task-crypto/tasks/openpgp/org.kestra.task.crypto.openpgp.Decrypt.md",key:"v-1bc88783",path:"/plugins/task-crypto/tasks/openpgp/org.kestra.task.crypto.openpgp.Decrypt.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:97},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:631},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:186},{level:3,title:"privateKey",slug:"privatekey",normalizedTitle:"privatekey",charIndex:212},{level:3,title:"privateKeyPassphrase",slug:"privatekeypassphrase",normalizedTitle:"privatekeypassphrase",charIndex:266},{level:3,title:"requiredSignerUsers",slug:"requiredsignerusers",normalizedTitle:"requiredsignerusers",charIndex:584},{level:3,title:"signUsersKey",slug:"signuserskey",normalizedTitle:"signuserskey",charIndex:521},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1300},{level:3,title:"uri",slug:"uri",normalizedTitle:"uri",charIndex:1310}],headersStr:"Examples Inputs from privateKey privateKeyPassphrase requiredSignerUsers signUsersKey Outputs uri",content:'# Decrypt\ntype: "org.kestra.task.crypto.openpgp.Decrypt"\n\n\n> Decrypt a file crypted with PGP\n\n\n# Examples\n> Decrypt a file\n\n\nid: "decrypt"\ntype: "org.kestra.task.crypto.openpgp.Decrypt"\nfrom: "{{ inputs.file }}"\nprivateKey: |\n  -----BEGIN PGP PRIVATE KEY BLOCK-----\nprivateKeyPassphrase: my-passphrase\n\n\n> Decrypt a file and verify signature\n\n\nid: "decrypt"\ntype: "org.kestra.task.crypto.openpgp.Decrypt"\nfrom: "{{ inputs.file }}"\nprivateKey: |\n  -----BEGIN PGP PRIVATE KEY BLOCK-----\nprivateKeyPassphrase: my-passphrase\nsignUsersKey: \n  - |\n    -----BEGIN PGP PRIVATE KEY BLOCK-----\nrequiredSignerUsers: \n  - signer@kestra.io\n\n\n# Inputs\n# from\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The file to crypt\n\n\n# privateKey\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The private key to decrypt\n\n\nMust be an ascii key export with gpg --export-secret-key -a\n\n# privateKeyPassphrase\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The passphrase use to unlock the secret ring\n\n\n# requiredSignerUsers\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The list of recipients the file will be generated.\n\n\n# signUsersKey\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The public key use to sign the files\n\n\nMust be an ascii key export with gpg --export -a\n\n# Outputs\n# uri\n * Type: object\n\n> The decrypted files uri',normalizedContent:'# decrypt\ntype: "org.kestra.task.crypto.openpgp.decrypt"\n\n\n> decrypt a file crypted with pgp\n\n\n# examples\n> decrypt a file\n\n\nid: "decrypt"\ntype: "org.kestra.task.crypto.openpgp.decrypt"\nfrom: "{{ inputs.file }}"\nprivatekey: |\n  -----begin pgp private key block-----\nprivatekeypassphrase: my-passphrase\n\n\n> decrypt a file and verify signature\n\n\nid: "decrypt"\ntype: "org.kestra.task.crypto.openpgp.decrypt"\nfrom: "{{ inputs.file }}"\nprivatekey: |\n  -----begin pgp private key block-----\nprivatekeypassphrase: my-passphrase\nsignuserskey: \n  - |\n    -----begin pgp private key block-----\nrequiredsignerusers: \n  - signer@kestra.io\n\n\n# inputs\n# from\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the file to crypt\n\n\n# privatekey\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the private key to decrypt\n\n\nmust be an ascii key export with gpg --export-secret-key -a\n\n# privatekeypassphrase\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the passphrase use to unlock the secret ring\n\n\n# requiredsignerusers\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> the list of recipients the file will be generated.\n\n\n# signuserskey\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> the public key use to sign the files\n\n\nmust be an ascii key export with gpg --export -a\n\n# outputs\n# uri\n * type: object\n\n> the decrypted files uri',charsets:{cjk:!0},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"Encrypt",frontmatter:{title:"Encrypt",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Encrypt"},{property:"og:description",content:"Encrypt | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-crypto/tasks/openpgp/org.kestra.task.crypto.openpgp.Encrypt.html"},{name:"twitter:title",content:"Encrypt"},{name:"twitter:description",content:"Encrypt | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/plugins/task-crypto/tasks/openpgp/org.kestra.task.crypto.openpgp.Encrypt.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Encrypt | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/plugins/task-crypto/tasks/openpgp/org.kestra.task.crypto.openpgp.Encrypt.html",relativePath:"plugins/task-crypto/tasks/openpgp/org.kestra.task.crypto.openpgp.Encrypt.md",key:"v-b6c1b05a",path:"/plugins/task-crypto/tasks/openpgp/org.kestra.task.crypto.openpgp.Encrypt.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:97},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:684},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:197},{level:3,title:"key",slug:"key",normalizedTitle:"key",charIndex:223},{level:3,title:"recipients",slug:"recipients",normalizedTitle:"recipients",charIndex:274},{level:3,title:"signPassphrase",slug:"signpassphrase",normalizedTitle:"signpassphrase",charIndex:623},{level:3,title:"signPrivateKey",slug:"signprivatekey",normalizedTitle:"signprivatekey",charIndex:565},{level:3,title:"signPublicKey",slug:"signpublickey",normalizedTitle:"signpublickey",charIndex:504},{level:3,title:"signUser",slug:"signuser",normalizedTitle:"signuser",charIndex:653},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1630},{level:3,title:"uri",slug:"uri",normalizedTitle:"uri",charIndex:1640}],headersStr:"Examples Inputs from key recipients signPassphrase signPrivateKey signPublicKey signUser Outputs uri",content:'# Encrypt\ntype: "org.kestra.task.crypto.openpgp.Encrypt"\n\n\n> Encrypt a file crypted with PGP\n\n\n# Examples\n> Encrypt a file not signed\n\n\nid: "encrypt"\ntype: "org.kestra.task.crypto.openpgp.Encrypt"\nfrom: "{{ inputs.file }}"\nkey: |\n  -----BEGIN PGP PUBLIC KEY BLOCK----- ... \nrecipients:\n  - hello@kestra.io\n\n\n> Encrypt a file signed\n\n\nid: "encrypt"\ntype: "org.kestra.task.crypto.openpgp.Encrypt"\nfrom: "{{ inputs.file }}"\nkey: |\n  -----BEGIN PGP PUBLIC KEY BLOCK----- ... \nrecipients:\n  - hello@kestra.io\nsignPublicKey: |\n  -----BEGIN PGP PUBLIC KEY BLOCK----- ... \nsignPrivateKey: |\n  -----BEGIN PGP PRIVATE KEY BLOCK-----\nsignPassphrase: my-passphrase\nsignUser: signer@kestra.io\n\n\n# Inputs\n# from\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The file to crypt\n\n\n# key\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The public key use to sign the files\n\n\nMust be an ascii key export with gpg --export -a\n\n# recipients\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The list of recipients the file will be generated.\n\n\n# signPassphrase\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The passphrase use to unlock the secret ring\n\n\n# signPrivateKey\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The public key use to sign the files\n\n\nMust be an ascii key export with gpg --export -a\n\n# signPublicKey\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The public key use to sign the files\n\n\nMust be an ascii key export with gpg --export -a\n\n# signUser\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The user that will signed the files\n\n\nIf you want to sign the file, you need to provide a privateKey\n\n# Outputs\n# uri\n * Type: object\n\n> The encrypted files uri',normalizedContent:'# encrypt\ntype: "org.kestra.task.crypto.openpgp.encrypt"\n\n\n> encrypt a file crypted with pgp\n\n\n# examples\n> encrypt a file not signed\n\n\nid: "encrypt"\ntype: "org.kestra.task.crypto.openpgp.encrypt"\nfrom: "{{ inputs.file }}"\nkey: |\n  -----begin pgp public key block----- ... \nrecipients:\n  - hello@kestra.io\n\n\n> encrypt a file signed\n\n\nid: "encrypt"\ntype: "org.kestra.task.crypto.openpgp.encrypt"\nfrom: "{{ inputs.file }}"\nkey: |\n  -----begin pgp public key block----- ... \nrecipients:\n  - hello@kestra.io\nsignpublickey: |\n  -----begin pgp public key block----- ... \nsignprivatekey: |\n  -----begin pgp private key block-----\nsignpassphrase: my-passphrase\nsignuser: signer@kestra.io\n\n\n# inputs\n# from\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the file to crypt\n\n\n# key\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the public key use to sign the files\n\n\nmust be an ascii key export with gpg --export -a\n\n# recipients\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> the list of recipients the file will be generated.\n\n\n# signpassphrase\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the passphrase use to unlock the secret ring\n\n\n# signprivatekey\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the public key use to sign the files\n\n\nmust be an ascii key export with gpg --export -a\n\n# signpublickey\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the public key use to sign the files\n\n\nmust be an ascii key export with gpg --export -a\n\n# signuser\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the user that will signed the files\n\n\nif you want to sign the file, you need to provide a privatekey\n\n# outputs\n# uri\n * type: object\n\n> the encrypted files uri',charsets:{cjk:!0},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"Task gcp",frontmatter:{title:"Task gcp",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Task gcp"},{property:"og:description",content:"Task gcp | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-gcp/"},{name:"twitter:title",content:"Task gcp"},{name:"twitter:description",content:"Task gcp | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/plugins/task-gcp/"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Task gcp | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/plugins/task-gcp/",relativePath:"plugins/task-gcp/README.md",key:"v-2300abf0",path:"/plugins/task-gcp/",headers:[{level:2,title:"Gke",slug:"gke",normalizedTitle:"gke",charIndex:13},{level:3,title:"Tasks",slug:"tasks",normalizedTitle:"tasks",charIndex:19},{level:2,title:"Auth",slug:"auth",normalizedTitle:"auth",charIndex:47},{level:3,title:"Tasks",slug:"tasks-2",normalizedTitle:"tasks",charIndex:19},{level:2,title:"Gcs",slug:"gcs",normalizedTitle:"gcs",charIndex:83},{level:3,title:"Triggers",slug:"triggers",normalizedTitle:"triggers",charIndex:89},{level:3,title:"Tasks",slug:"tasks-3",normalizedTitle:"tasks",charIndex:19},{level:2,title:"Bigquery",slug:"bigquery",normalizedTitle:"bigquery",charIndex:230},{level:3,title:"Tasks",slug:"tasks-4",normalizedTitle:"tasks",charIndex:19}],headersStr:"Gke Tasks Auth Tasks Gcs Triggers Tasks Bigquery Tasks",content:"# Task gcp\n# Gke\n# Tasks\n * ClusterMetadata\n\n# Auth\n# Tasks\n * OauthAccessToken\n\n# Gcs\n# Triggers\n * Trigger\n\n# Tasks\n * Copy\n * CreateBucket\n * Delete\n * DeleteBucket\n * Download\n * Downloads\n * List\n * UpdateBucket\n * Upload\n\n# Bigquery\n# Tasks\n * CreateDataset\n * DeleteDataset\n * ExtractToGcs\n * Load\n * LoadFromGcs\n * Query\n * TableMetadata\n * UpdateDataset",normalizedContent:"# task gcp\n# gke\n# tasks\n * clustermetadata\n\n# auth\n# tasks\n * oauthaccesstoken\n\n# gcs\n# triggers\n * trigger\n\n# tasks\n * copy\n * createbucket\n * delete\n * deletebucket\n * download\n * downloads\n * list\n * updatebucket\n * upload\n\n# bigquery\n# tasks\n * createdataset\n * deletedataset\n * extracttogcs\n * load\n * loadfromgcs\n * query\n * tablemetadata\n * updatedataset",charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"OauthAccessToken",frontmatter:{title:"OauthAccessToken",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"OauthAccessToken"},{property:"og:description",content:"OauthAccessToken | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-gcp/tasks/auth/org.kestra.task.gcp.auth.OauthAccessToken.html"},{name:"twitter:title",content:"OauthAccessToken"},{name:"twitter:description",content:"OauthAccessToken | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/plugins/task-gcp/tasks/auth/org.kestra.task.gcp.auth.OauthAccessToken.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"OauthAccessToken | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/plugins/task-gcp/tasks/auth/org.kestra.task.gcp.auth.OauthAccessToken.html",relativePath:"plugins/task-gcp/tasks/auth/org.kestra.task.gcp.auth.OauthAccessToken.md",key:"v-39894003",path:"/plugins/task-gcp/tasks/auth/org.kestra.task.gcp.auth.OauthAccessToken.html",headers:[{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:106},{level:3,title:"scopes",slug:"scopes",normalizedTitle:"scopes",charIndex:115},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:406},{level:3,title:"accessToken",slug:"accesstoken",normalizedTitle:"accesstoken",charIndex:416},{level:3,title:"accessToken.tokenValue",slug:"accesstoken-tokenvalue",normalizedTitle:"accesstoken.tokenvalue",charIndex:493}],headersStr:"Inputs scopes Outputs accessToken accessToken.tokenValue",content:'# OauthAccessToken\ntype: "org.kestra.task.gcp.auth.OauthAccessToken"\n\n\n> Fetch an OAuth access token.\n\n\n# Inputs\n# scopes\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ✔️\n * Default: [https://www.googleapis.com/auth/cloud-platform]\n * Min items: 1\n\n> The scopes requested for the access token.\n\n\nFull list can be found here\n\ndefault is ["https://www.googleapis.com/auth/cloud-platform"]\n\n# Outputs\n# accessToken\n * Type: object\n\n> A oauth access token for the current user\n\n\n# accessToken.tokenValue\n * Type: string',normalizedContent:'# oauthaccesstoken\ntype: "org.kestra.task.gcp.auth.oauthaccesstoken"\n\n\n> fetch an oauth access token.\n\n\n# inputs\n# scopes\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ✔️\n * default: [https://www.googleapis.com/auth/cloud-platform]\n * min items: 1\n\n> the scopes requested for the access token.\n\n\nfull list can be found here\n\ndefault is ["https://www.googleapis.com/auth/cloud-platform"]\n\n# outputs\n# accesstoken\n * type: object\n\n> a oauth access token for the current user\n\n\n# accesstoken.tokenvalue\n * type: string',charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"CreateDataset",frontmatter:{title:"CreateDataset",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"CreateDataset"},{property:"og:description",content:"CreateDataset | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.CreateDataset.html"},{name:"twitter:title",content:"CreateDataset"},{name:"twitter:description",content:"CreateDataset | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.CreateDataset.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"CreateDataset | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.CreateDataset.html",relativePath:"plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.CreateDataset.md",key:"v-495a34ed",path:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.CreateDataset.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:124},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:294},{level:3,title:"acl",slug:"acl",normalizedTitle:"acl",charIndex:303},{level:3,title:"defaultEncryptionConfiguration",slug:"defaultencryptionconfiguration",normalizedTitle:"defaultencryptionconfiguration",charIndex:420},{level:3,title:"defaultEncryptionConfiguration.kmsKeyName",slug:"defaultencryptionconfiguration-kmskeyname",normalizedTitle:"defaultencryptionconfiguration.kmskeyname",charIndex:744},{level:3,title:"defaultPartitionExpirationMs",slug:"defaultpartitionexpirationms",normalizedTitle:"defaultpartitionexpirationms",charIndex:834},{level:3,title:"defaultTableLifetime",slug:"defaulttablelifetime",normalizedTitle:"defaulttablelifetime",charIndex:1779},{level:3,title:"description",slug:"description",normalizedTitle:"description",charIndex:2611},{level:3,title:"friendlyName",slug:"friendlyname",normalizedTitle:"friendlyname",charIndex:2734},{level:3,title:"ifExists",slug:"ifexists",normalizedTitle:"ifexists",charIndex:273},{level:3,title:"labels",slug:"labels",normalizedTitle:"labels",charIndex:2961},{level:3,title:"location",slug:"location",normalizedTitle:"location",charIndex:258},{level:3,title:"name",slug:"name",normalizedTitle:"name",charIndex:239},{level:3,title:"projectId",slug:"projectid",normalizedTitle:"projectid",charIndex:3344},{level:3,title:"retryAuto",slug:"retryauto",normalizedTitle:"retryauto",charIndex:3426},{level:3,title:"retryMessages",slug:"retrymessages",normalizedTitle:"retrymessages",charIndex:3482},{level:3,title:"retryReasons",slug:"retryreasons",normalizedTitle:"retryreasons",charIndex:3731},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:3913},{level:3,title:"dataset",slug:"dataset",normalizedTitle:"dataset",charIndex:80},{level:3,title:"description",slug:"description-2",normalizedTitle:"description",charIndex:2611},{level:3,title:"friendlyName",slug:"friendlyname-2",normalizedTitle:"friendlyname",charIndex:2734},{level:3,title:"location",slug:"location-2",normalizedTitle:"location",charIndex:258},{level:3,title:"project",slug:"project",normalizedTitle:"project",charIndex:3344}],headersStr:"Examples Inputs acl defaultEncryptionConfiguration defaultEncryptionConfiguration.kmsKeyName defaultPartitionExpirationMs defaultTableLifetime description friendlyName ifExists labels location name projectId retryAuto retryMessages retryReasons Outputs dataset description friendlyName location project",content:'# CreateDataset\ntype: "org.kestra.task.gcp.bigquery.CreateDataset"\n\n\n> Create a dataset or update if it already exists.\n\n\n# Examples\n> Create a dataset if not exits\n\n\nid: "create_dataset"\ntype: "org.kestra.task.gcp.bigquery.CreateDataset"\nname: "my_dataset"\nlocation: "EU"\nifExists: "SKIP"\n\n\n# Inputs\n# acl\n * Type: array\n * SubType: object\n * Dynamic: ❓\n * Required: ❌\n\n> The dataset\'s access control configuration\n\n\n# defaultEncryptionConfiguration\n * Type: object\n * Dynamic: ❓\n * Required: ❌\n\n> The default encryption key for all tables in the dataset\n\n\nOnce this property is set, all\nnewly-created partitioned tables in the dataset will have encryption key set to this value,\nunless table creation request (or query) overrides the key.\n\n# defaultEncryptionConfiguration.kmsKeyName\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# defaultPartitionExpirationMs\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n> [Optional] The default partition expiration time for all partitioned tables in the dataset, in milliseconds\n\n\nOnce this property is set, all newly-created partitioned tables in the\ndataset will has an expirationMs property in the timePartitioning settings set to this value.\nChanging the value only affect new tables, not existing ones. The storage in a partition will\nhave an expiration time of its partition time plus this value. Setting this property\noverrides the use of defaultTableExpirationMs for partitioned tables: only one of\ndefaultTableExpirationMs and defaultPartitionExpirationMs will be used for any new\npartitioned table. If you provide an explicit timePartitioning.expirationMs when creating or\nupdating a partitioned table, that value takes precedence over the default partition\nexpiration time indicated by this property. The value may be null.\n\n# defaultTableLifetime\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n> The default lifetime of all tables in the dataset, in milliseconds\n\n\nThe minimum value is\n3600000 milliseconds (one hour). Once this property is set, all newly-created tables in the\ndataset will have an expirationTime property set to the creation time plus the value in this\nproperty, and changing the value will only affect new tables, not existing ones. When the\nexpirationTime for a given table is reached, that table will be deleted automatically. If a\ntable\'s expirationTime is modified or removed before the table expires, or if you provide an\nexplicit expirationTime when creating a table, that value takes precedence over the default\nexpiration time indicated by this property. This property is experimental and might be\nsubject to change or removed.\n\n# description\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Description\n\n\nA user-friendly description for the dataset.\n\n# friendlyName\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> A user-friendly name for the dataset\n\n\n# ifExists\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Default: ERROR\n\n> Policy to apply if a dataset already exists.\n\n\n# labels\n * Type: object\n * Dynamic: ❓\n * Required: ❌\n\n> The dataset\'s labels\n\n\n# location\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The geographic location where the dataset should reside\n\n\nThis property is experimental\nand might be subject to change or removed.\n\nSee Dataset Location\n\n# name\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The dataset\'s user-defined id\n\n\n# projectId\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The GCP project id\n\n\n# retryAuto\n * Type: ====\n * Dynamic: ❓\n * Required: ❌\n\n# retryMessages\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: [due to concurrent update]\n\n> The message that are valid for a automatic retry.\n\n\nMessage is tested as a substring of the full message and case insensitive\n\n# retryReasons\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: [rateLimitExceeded, jobBackendError]\n\n> The reason that are valid for a automatic retry.\n\n\n# Outputs\n# dataset\n * Type: string\n\n> The dataset\'s user-defined id\n\n\n# description\n * Type: string\n\n> A user-friendly description for the dataset\n\n\n# friendlyName\n * Type: string\n\n> A user-friendly name for the dataset\n\n\n# location\n * Type: string\n\n> The geographic location where the dataset should reside\n\n\nThis property is experimental\nand might be subject to change or removed.\n\nSee Dataset Location\n\n# project\n * Type: string\n\n> The GCP project id',normalizedContent:'# createdataset\ntype: "org.kestra.task.gcp.bigquery.createdataset"\n\n\n> create a dataset or update if it already exists.\n\n\n# examples\n> create a dataset if not exits\n\n\nid: "create_dataset"\ntype: "org.kestra.task.gcp.bigquery.createdataset"\nname: "my_dataset"\nlocation: "eu"\nifexists: "skip"\n\n\n# inputs\n# acl\n * type: array\n * subtype: object\n * dynamic: ❓\n * required: ❌\n\n> the dataset\'s access control configuration\n\n\n# defaultencryptionconfiguration\n * type: object\n * dynamic: ❓\n * required: ❌\n\n> the default encryption key for all tables in the dataset\n\n\nonce this property is set, all\nnewly-created partitioned tables in the dataset will have encryption key set to this value,\nunless table creation request (or query) overrides the key.\n\n# defaultencryptionconfiguration.kmskeyname\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# defaultpartitionexpirationms\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n> [optional] the default partition expiration time for all partitioned tables in the dataset, in milliseconds\n\n\nonce this property is set, all newly-created partitioned tables in the\ndataset will has an expirationms property in the timepartitioning settings set to this value.\nchanging the value only affect new tables, not existing ones. the storage in a partition will\nhave an expiration time of its partition time plus this value. setting this property\noverrides the use of defaulttableexpirationms for partitioned tables: only one of\ndefaulttableexpirationms and defaultpartitionexpirationms will be used for any new\npartitioned table. if you provide an explicit timepartitioning.expirationms when creating or\nupdating a partitioned table, that value takes precedence over the default partition\nexpiration time indicated by this property. the value may be null.\n\n# defaulttablelifetime\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n> the default lifetime of all tables in the dataset, in milliseconds\n\n\nthe minimum value is\n3600000 milliseconds (one hour). once this property is set, all newly-created tables in the\ndataset will have an expirationtime property set to the creation time plus the value in this\nproperty, and changing the value will only affect new tables, not existing ones. when the\nexpirationtime for a given table is reached, that table will be deleted automatically. if a\ntable\'s expirationtime is modified or removed before the table expires, or if you provide an\nexplicit expirationtime when creating a table, that value takes precedence over the default\nexpiration time indicated by this property. this property is experimental and might be\nsubject to change or removed.\n\n# description\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> description\n\n\na user-friendly description for the dataset.\n\n# friendlyname\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> a user-friendly name for the dataset\n\n\n# ifexists\n * type: string\n * dynamic: ❓\n * required: ❌\n * default: error\n\n> policy to apply if a dataset already exists.\n\n\n# labels\n * type: object\n * dynamic: ❓\n * required: ❌\n\n> the dataset\'s labels\n\n\n# location\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the geographic location where the dataset should reside\n\n\nthis property is experimental\nand might be subject to change or removed.\n\nsee dataset location\n\n# name\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the dataset\'s user-defined id\n\n\n# projectid\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the gcp project id\n\n\n# retryauto\n * type: ====\n * dynamic: ❓\n * required: ❌\n\n# retrymessages\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n * default: [due to concurrent update]\n\n> the message that are valid for a automatic retry.\n\n\nmessage is tested as a substring of the full message and case insensitive\n\n# retryreasons\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n * default: [ratelimitexceeded, jobbackenderror]\n\n> the reason that are valid for a automatic retry.\n\n\n# outputs\n# dataset\n * type: string\n\n> the dataset\'s user-defined id\n\n\n# description\n * type: string\n\n> a user-friendly description for the dataset\n\n\n# friendlyname\n * type: string\n\n> a user-friendly name for the dataset\n\n\n# location\n * type: string\n\n> the geographic location where the dataset should reside\n\n\nthis property is experimental\nand might be subject to change or removed.\n\nsee dataset location\n\n# project\n * type: string\n\n> the gcp project id',charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"DeleteDataset",frontmatter:{title:"DeleteDataset",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"DeleteDataset"},{property:"og:description",content:"DeleteDataset | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.DeleteDataset.html"},{name:"twitter:title",content:"DeleteDataset"},{name:"twitter:description",content:"DeleteDataset | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.DeleteDataset.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"DeleteDataset | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.DeleteDataset.html",relativePath:"plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.DeleteDataset.md",key:"v-bcd429ea",path:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.DeleteDataset.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:93},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:238},{level:3,title:"deleteContents",slug:"deletecontents",normalizedTitle:"deletecontents",charIndex:213},{level:3,title:"location",slug:"location",normalizedTitle:"location",charIndex:461},{level:3,title:"name",slug:"name",normalizedTitle:"name",charIndex:195},{level:3,title:"projectId",slug:"projectid",normalizedTitle:"projectid",charIndex:764},{level:3,title:"retryAuto",slug:"retryauto",normalizedTitle:"retryauto",charIndex:846},{level:3,title:"retryMessages",slug:"retrymessages",normalizedTitle:"retrymessages",charIndex:902},{level:3,title:"retryReasons",slug:"retryreasons",normalizedTitle:"retryreasons",charIndex:1151},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1333},{level:3,title:"dataset",slug:"dataset",normalizedTitle:"dataset",charIndex:80}],headersStr:"Examples Inputs deleteContents location name projectId retryAuto retryMessages retryReasons Outputs dataset",content:'# DeleteDataset\ntype: "org.kestra.task.gcp.bigquery.DeleteDataset"\n\n\n> Delete a dataset.\n\n\n# Examples\n> Delete a dataset\n\n\nid: "delete_dataset"\ntype: "org.kestra.task.gcp.bigquery.DeleteDataset"\nname: "my-bucket"\ndeleteContents: true\n\n\n# Inputs\n# deleteContents\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n> Whether to delete a dataset even if non-empty\n\n\nIf not provided, attempting to\ndelete a non-empty dataset will result in a exception being thrown.\n\n# location\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The geographic location where the dataset should reside\n\n\nThis property is experimental\nand might be subject to change or removed.\n\nSee Dataset Location\n\n# name\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The dataset\'s user-defined id\n\n\n# projectId\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The GCP project id\n\n\n# retryAuto\n * Type: ====\n * Dynamic: ❓\n * Required: ❌\n\n# retryMessages\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: [due to concurrent update]\n\n> The message that are valid for a automatic retry.\n\n\nMessage is tested as a substring of the full message and case insensitive\n\n# retryReasons\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: [rateLimitExceeded, jobBackendError]\n\n> The reason that are valid for a automatic retry.\n\n\n# Outputs\n# dataset\n * Type: string\n\n> The dataset\'s user-defined id',normalizedContent:'# deletedataset\ntype: "org.kestra.task.gcp.bigquery.deletedataset"\n\n\n> delete a dataset.\n\n\n# examples\n> delete a dataset\n\n\nid: "delete_dataset"\ntype: "org.kestra.task.gcp.bigquery.deletedataset"\nname: "my-bucket"\ndeletecontents: true\n\n\n# inputs\n# deletecontents\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n> whether to delete a dataset even if non-empty\n\n\nif not provided, attempting to\ndelete a non-empty dataset will result in a exception being thrown.\n\n# location\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the geographic location where the dataset should reside\n\n\nthis property is experimental\nand might be subject to change or removed.\n\nsee dataset location\n\n# name\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the dataset\'s user-defined id\n\n\n# projectid\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the gcp project id\n\n\n# retryauto\n * type: ====\n * dynamic: ❓\n * required: ❌\n\n# retrymessages\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n * default: [due to concurrent update]\n\n> the message that are valid for a automatic retry.\n\n\nmessage is tested as a substring of the full message and case insensitive\n\n# retryreasons\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n * default: [ratelimitexceeded, jobbackenderror]\n\n> the reason that are valid for a automatic retry.\n\n\n# outputs\n# dataset\n * type: string\n\n> the dataset\'s user-defined id',charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"ExtractToGcs",frontmatter:{title:"ExtractToGcs",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"ExtractToGcs"},{property:"og:description",content:"ExtractToGcs | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.ExtractToGcs.html"},{name:"twitter:title",content:"ExtractToGcs"},{name:"twitter:description",content:"ExtractToGcs | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.ExtractToGcs.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"ExtractToGcs | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.ExtractToGcs.html",relativePath:"plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.ExtractToGcs.md",key:"v-2d12e13a",path:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.ExtractToGcs.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:136},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:415},{level:3,title:"compression",slug:"compression",normalizedTitle:"compression",charIndex:424},{level:3,title:"destinationUris",slug:"destinationuris",normalizedTitle:"destinationuris",charIndex:261},{level:3,title:"fieldDelimiter",slug:"fielddelimiter",normalizedTitle:"fielddelimiter",charIndex:373},{level:3,title:"format",slug:"format",normalizedTitle:"format",charIndex:361},{level:3,title:"jobTimeoutMs",slug:"jobtimeoutms",normalizedTitle:"jobtimeoutms",charIndex:1074},{level:3,title:"labels",slug:"labels",normalizedTitle:"labels",charIndex:1255},{level:3,title:"location",slug:"location",normalizedTitle:"location",charIndex:1780},{level:3,title:"printHeader",slug:"printheader",normalizedTitle:"printheader",charIndex:393},{level:3,title:"projectId",slug:"projectid",normalizedTitle:"projectid",charIndex:2142},{level:3,title:"retryAuto",slug:"retryauto",normalizedTitle:"retryauto",charIndex:2224},{level:3,title:"retryMessages",slug:"retrymessages",normalizedTitle:"retrymessages",charIndex:2280},{level:3,title:"retryReasons",slug:"retryreasons",normalizedTitle:"retryreasons",charIndex:2529},{level:3,title:"sourceTable",slug:"sourcetable",normalizedTitle:"sourcetable",charIndex:315},{level:3,title:"useAvroLogicalTypes",slug:"useavrologicaltypes",normalizedTitle:"useavrologicaltypes",charIndex:2797},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:3242},{level:3,title:"destinationUris",slug:"destinationuris-2",normalizedTitle:"destinationuris",charIndex:261},{level:3,title:"fileCounts",slug:"filecounts",normalizedTitle:"filecounts",charIndex:3334},{level:3,title:"jobId",slug:"jobid",normalizedTitle:"jobid",charIndex:3413},{level:3,title:"sourceTable",slug:"sourcetable-2",normalizedTitle:"sourcetable",charIndex:315}],headersStr:"Examples Inputs compression destinationUris fieldDelimiter format jobTimeoutMs labels location printHeader projectId retryAuto retryMessages retryReasons sourceTable useAvroLogicalTypes Outputs destinationUris fileCounts jobId sourceTable",content:'# ExtractToGcs\ntype: "org.kestra.task.gcp.bigquery.ExtractToGcs"\n\n\n> Extract data from BigQuery table to GCS (Google Cloud Storage)\n\n\n# Examples\n> Extract a BigQuery table to a gcs bucket\n\n\nid: "extract_to_gcs"\ntype: "org.kestra.task.gcp.bigquery.ExtractToGcs"\ndestinationUris: \n  - "gs://bucket_name/filename.csv"\nsourceTable: "my_project.my_dataset.my_table"\nformat: CSV\nfieldDelimiter: \';\'\nprintHeader: true\n\n\n# Inputs\n# compression\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> the compression value to use for exported files. If not set exported files are not compressed.\n\n\n# destinationUris\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The list of fully-qualified Google Cloud Storage URIs (e.g. gs://bucket/path) where the extracted table should be written.\n\n\n# fieldDelimiter\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The delimiter to use between fields in the exported data. By default "," is used.\n\n\n# format\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The exported file format. If not set table is exported in CSV format.\n\n\n# jobTimeoutMs\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n> [Optional] Job timeout in milliseconds. If this time limit is exceeded, BigQuery may attempt to terminate the job.\n\n\n# labels\n * Type: object\n * Dynamic: ✔️\n * Required: ❌\n\n> The labels associated with this job.\n\n\nThe labels associated with this job. You can use these to organize and group your jobs. Label keys and values can be no longer than 63 characters, can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. Label values are optional. Label keys must start with a letter and each label in the list must have a different key.\nParameters:\nlabels - labels or null for none\n\n# location\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The geographic location where the dataset should reside\n\n\nThis property is experimental\nand might be subject to change or removed.\n\nSee Dataset Location\n\n# printHeader\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n> Whether to print out a header row in the results. By default an header is printed.\n\n\n# projectId\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The GCP project id\n\n\n# retryAuto\n * Type: ====\n * Dynamic: ❓\n * Required: ❌\n\n# retryMessages\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: [due to concurrent update]\n\n> The message that are valid for a automatic retry.\n\n\nMessage is tested as a substring of the full message and case insensitive\n\n# retryReasons\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: [rateLimitExceeded, jobBackendError]\n\n> The reason that are valid for a automatic retry.\n\n\n# sourceTable\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The table to export.\n\n\n# useAvroLogicalTypes\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n> [Optional] Flag if format is set to "AVRO".\n\n\n[Optional] If destinationFormat is set to "AVRO", this flag indicates whether to enable extracting applicable column types (such as TIMESTAMP) to their corresponding AVRO logical types (timestamp-micros), instead of only using their raw types (avro-long).\nParameters:\nuseAvroLogicalTypes - useAvroLogicalTypes or null for none\n\n# Outputs\n# destinationUris\n * Type: array\n * SubType: string\n\n> The destination URI file\n\n\n# fileCounts\n * Type: array\n * SubType: integer\n\n> Number of extracted files\n\n\n# jobId\n * Type: string\n\n> The job id\n\n\n# sourceTable\n * Type: string\n\n> source Table',normalizedContent:'# extracttogcs\ntype: "org.kestra.task.gcp.bigquery.extracttogcs"\n\n\n> extract data from bigquery table to gcs (google cloud storage)\n\n\n# examples\n> extract a bigquery table to a gcs bucket\n\n\nid: "extract_to_gcs"\ntype: "org.kestra.task.gcp.bigquery.extracttogcs"\ndestinationuris: \n  - "gs://bucket_name/filename.csv"\nsourcetable: "my_project.my_dataset.my_table"\nformat: csv\nfielddelimiter: \';\'\nprintheader: true\n\n\n# inputs\n# compression\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the compression value to use for exported files. if not set exported files are not compressed.\n\n\n# destinationuris\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> the list of fully-qualified google cloud storage uris (e.g. gs://bucket/path) where the extracted table should be written.\n\n\n# fielddelimiter\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the delimiter to use between fields in the exported data. by default "," is used.\n\n\n# format\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the exported file format. if not set table is exported in csv format.\n\n\n# jobtimeoutms\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n> [optional] job timeout in milliseconds. if this time limit is exceeded, bigquery may attempt to terminate the job.\n\n\n# labels\n * type: object\n * dynamic: ✔️\n * required: ❌\n\n> the labels associated with this job.\n\n\nthe labels associated with this job. you can use these to organize and group your jobs. label keys and values can be no longer than 63 characters, can only contain lowercase letters, numeric characters, underscores and dashes. international characters are allowed. label values are optional. label keys must start with a letter and each label in the list must have a different key.\nparameters:\nlabels - labels or null for none\n\n# location\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the geographic location where the dataset should reside\n\n\nthis property is experimental\nand might be subject to change or removed.\n\nsee dataset location\n\n# printheader\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n> whether to print out a header row in the results. by default an header is printed.\n\n\n# projectid\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the gcp project id\n\n\n# retryauto\n * type: ====\n * dynamic: ❓\n * required: ❌\n\n# retrymessages\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n * default: [due to concurrent update]\n\n> the message that are valid for a automatic retry.\n\n\nmessage is tested as a substring of the full message and case insensitive\n\n# retryreasons\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n * default: [ratelimitexceeded, jobbackenderror]\n\n> the reason that are valid for a automatic retry.\n\n\n# sourcetable\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the table to export.\n\n\n# useavrologicaltypes\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n> [optional] flag if format is set to "avro".\n\n\n[optional] if destinationformat is set to "avro", this flag indicates whether to enable extracting applicable column types (such as timestamp) to their corresponding avro logical types (timestamp-micros), instead of only using their raw types (avro-long).\nparameters:\nuseavrologicaltypes - useavrologicaltypes or null for none\n\n# outputs\n# destinationuris\n * type: array\n * subtype: string\n\n> the destination uri file\n\n\n# filecounts\n * type: array\n * subtype: integer\n\n> number of extracted files\n\n\n# jobid\n * type: string\n\n> the job id\n\n\n# sourcetable\n * type: string\n\n> source table',charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"Load",frontmatter:{title:"Load",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Load"},{property:"og:description",content:"Load | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.Load.html"},{name:"twitter:title",content:"Load"},{name:"twitter:description",content:"Load | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.Load.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Load | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.Load.html",relativePath:"plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.Load.md",key:"v-6ca79c83",path:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.Load.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:95},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:324},{level:3,title:"autodetect",slug:"autodetect",normalizedTitle:"autodetect",charIndex:333},{level:3,title:"avroOptions",slug:"avrooptions",normalizedTitle:"avrooptions",charIndex:483},{level:3,title:"avroOptions.useAvroLogicalTypes",slug:"avrooptions-useavrologicaltypes",normalizedTitle:"avrooptions.useavrologicaltypes",charIndex:568},{level:3,title:"clusteringFields",slug:"clusteringfields",normalizedTitle:"clusteringfields",charIndex:850},{level:3,title:"createDisposition",slug:"createdisposition",normalizedTitle:"createdisposition",charIndex:993},{level:3,title:"csvOptions",slug:"csvoptions",normalizedTitle:"csvoptions",charIndex:286},{level:3,title:"csvOptions.allowJaggedRows",slug:"csvoptions-allowjaggedrows",normalizedTitle:"csvoptions.allowjaggedrows",charIndex:1190},{level:3,title:"csvOptions.allowQuotedNewLines",slug:"csvoptions-allowquotednewlines",normalizedTitle:"csvoptions.allowquotednewlines",charIndex:1663},{level:3,title:"csvOptions.encoding",slug:"csvoptions-encoding",normalizedTitle:"csvoptions.encoding",charIndex:1889},{level:3,title:"csvOptions.fieldDelimiter",slug:"csvoptions-fielddelimiter",normalizedTitle:"csvoptions.fielddelimiter",charIndex:2230},{level:3,title:"csvOptions.quote",slug:"csvoptions-quote",normalizedTitle:"csvoptions.quote",charIndex:2609},{level:3,title:"csvOptions.skipLeadingRows",slug:"csvoptions-skipleadingrows",normalizedTitle:"csvoptions.skipleadingrows",charIndex:3155},{level:3,title:"destinationTable",slug:"destinationtable",normalizedTitle:"destinationtable",charIndex:223},{level:3,title:"format",slug:"format",normalizedTitle:"format",charIndex:274},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:63},{level:3,title:"ignoreUnknownValues",slug:"ignoreunknownvalues",normalizedTitle:"ignoreunknownvalues",charIndex:3826},{level:3,title:"location",slug:"location",normalizedTitle:"location",charIndex:4222},{level:3,title:"maxBadRecords",slug:"maxbadrecords",normalizedTitle:"maxbadrecords",charIndex:4436},{level:3,title:"projectId",slug:"projectid",normalizedTitle:"projectid",charIndex:4718},{level:3,title:"retryAuto",slug:"retryauto",normalizedTitle:"retryauto",charIndex:4800},{level:3,title:"retryMessages",slug:"retrymessages",normalizedTitle:"retrymessages",charIndex:4856},{level:3,title:"retryReasons",slug:"retryreasons",normalizedTitle:"retryreasons",charIndex:5105},{level:3,title:"schema",slug:"schema",normalizedTitle:"schema",charIndex:447},{level:3,title:"schemaUpdateOptions",slug:"schemaupdateoptions",normalizedTitle:"schemaupdateoptions",charIndex:5553},{level:3,title:"timePartitioningField",slug:"timepartitioningfield",normalizedTitle:"timepartitioningfield",charIndex:6045},{level:3,title:"writeDisposition",slug:"writedisposition",normalizedTitle:"writedisposition",charIndex:5812},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:6320},{level:3,title:"destinationTable",slug:"destinationtable-2",normalizedTitle:"destinationtable",charIndex:223},{level:3,title:"jobId",slug:"jobid",normalizedTitle:"jobid",charIndex:6388},{level:3,title:"rows",slug:"rows",normalizedTitle:"rows",charIndex:1298}],headersStr:"Examples Inputs autodetect avroOptions avroOptions.useAvroLogicalTypes clusteringFields createDisposition csvOptions csvOptions.allowJaggedRows csvOptions.allowQuotedNewLines csvOptions.encoding csvOptions.fieldDelimiter csvOptions.quote csvOptions.skipLeadingRows destinationTable format from ignoreUnknownValues location maxBadRecords projectId retryAuto retryMessages retryReasons schema schemaUpdateOptions timePartitioningField writeDisposition Outputs destinationTable jobId rows",content:'# Load\ntype: "org.kestra.task.gcp.bigquery.Load"\n\n\n> Load data from local file to BigQuery\n\n\n# Examples\n> Load an csv file from an input file\n\n\nid: "load"\ntype: "org.kestra.task.gcp.bigquery.Load"\nfrom: "{{ inputs.file }}"\ndestinationTable: "my_project.my_dataset.my_table"\nformat: CSV\ncsvOptions:\n  fieldDelimiter: ";"\n\n\n# Inputs\n# autodetect\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n\n> [Experimental] Automatic inference of the options and schema for CSV and JSON sources\n\n\n# avroOptions\n * Type: object\n * Dynamic: ❓\n * Required: ❌\n\n> Avro parsing options\n\n\n# avroOptions.useAvroLogicalTypes\n * Type: boolean\n * Dynamic: ✔️\n * Required: ❌\n\n> If Format option is set to AVRO, you can interpret logical types into their corresponding\ntypes (such as TIMESTAMP) instead of only using their raw types (such as INTEGER)\n\n\nThe value may be null.\n\n# clusteringFields\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The clustering specification for the destination table\n\n\n# createDisposition\n * Type: string\n * Dynamic: ❌\n * Required: ❌\n\n> Whether the job is allowed to create tables\n\n\n# csvOptions\n * Type: object\n * Dynamic: ❓\n * Required: ❌\n\n> Csv parsing options\n\n\n# csvOptions.allowJaggedRows\n * Type: boolean\n * Dynamic: ✔️\n * Required: ❌\n\n> Whether BigQuery should accept rows that are missing trailing optional columns\n\n\nIf true, BigQuery treats missing trailing columns as null values. If {@code false}, records\nwith missing trailing columns are treated as bad records, and if there are too many bad\nrecords, an invalid error is returned in the job result. By default, rows with missing\ntrailing columns are considered bad records.\n\n# csvOptions.allowQuotedNewLines\n * Type: boolean\n * Dynamic: ✔️\n * Required: ❌\n\n> Whether BigQuery should allow quoted data sections that contain newline characters in a CSV file\n\n\nBy default quoted newline are not allowed.\n\n# csvOptions.encoding\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The character encoding of the data\n\n\nThe supported values are UTF-8 or ISO-8859-1. The\ndefault value is UTF-8. BigQuery decodes the data after the raw, binary data has been split\nusing the values set in {@link #setQuote(String)} and {@link #setFieldDelimiter(String)}.\n\n# csvOptions.fieldDelimiter\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The separator for fields in a CSV file\n\n\nBigQuery converts the string to ISO-8859-1\nencoding, and then uses the first byte of the encoded string to split the data in its raw,\nbinary state. BigQuery also supports the escape sequence "\\t" to specify a tab separator. The\ndefault value is a comma (\',\').\n\n# csvOptions.quote\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The value that is used to quote data sections in a CSV file\n\n\nBigQuery converts the\nstring to ISO-8859-1 encoding, and then uses the first byte of the encoded string to split\nthe data in its raw, binary state. The default value is a double-quote (\'"\'). If your data\ndoes not contain quoted sections, set the property value to an empty string. If your data\ncontains quoted newline characters, you must also set {@link\n#setAllowQuotedNewLines(boolean)} property to {@code true}.\n\n# csvOptions.skipLeadingRows\n * Type: integer\n * Dynamic: ✔️\n * Required: ❌\n\n> The number of rows at the top of a CSV file that BigQuery will skip when reading the data\n\n\nThe default value is 0. This property is useful if you have header rows in the file\nthat should be skipped.\n\n# destinationTable\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The table where to put query results\n\n\nIf not provided a new table is created.\n\n# format\n * Type: string\n * Dynamic: ❌\n * Required: ❌\n\n> The source format, and possibly some parsing options, of the external data\n\n\n# from\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The fully-qualified URIs that point to source data\n\n\n# ignoreUnknownValues\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n\n> Whether BigQuery should allow extra values that are not represented in the table schema\n\n\nIf true, the extra values are ignored. If false, records with extra columns\nare treated as bad records, and if there are too many bad records, an invalid error is\nreturned in the job result. By default unknown values are not allowed.\n\n# location\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The geographic location where the dataset should reside\n\n\nThis property is experimental\nand might be subject to change or removed.\n\nSee Dataset Location\n\n# maxBadRecords\n * Type: integer\n * Dynamic: ❌\n * Required: ❌\n\n> The maximum number of bad records that BigQuery can ignore when running the job\n\n\nIf the number of bad records exceeds this value, an invalid error is returned in the job result.\nBy default no bad record is ignored.\n\n# projectId\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The GCP project id\n\n\n# retryAuto\n * Type: ====\n * Dynamic: ❓\n * Required: ❌\n\n# retryMessages\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: [due to concurrent update]\n\n> The message that are valid for a automatic retry.\n\n\nMessage is tested as a substring of the full message and case insensitive\n\n# retryReasons\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: [rateLimitExceeded, jobBackendError]\n\n> The reason that are valid for a automatic retry.\n\n\n# schema\n * Type: object\n * Dynamic: ❌\n * Required: ❌\n\n> The schema for the destination table\n\n\nThe schema can be omitted if the destination table\nalready exists, or if you\'re loading data from a Google Cloud Datastore backup (i.e.\nDATASTORE_BACKUP format option).\n\n# schemaUpdateOptions\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> [Experimental] Options allowing the schema of the destination table to be updated as a side effect of the query job\n\n\nSchema update options are supported in two cases: when\nwriteDisposition is WRITE_APPEND; when writeDisposition is WRITE_TRUNCATE and the destination\ntable is a partition of a table, specified by partition decorators. For normal tables,\nWRITE_TRUNCATE will always overwrite the schema.\n\n# timePartitioningField\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The time partitioning specification for the destination table\n\n\n# writeDisposition\n * Type: string\n * Dynamic: ❌\n * Required: ❌\n\n> The action that should occur if the destination table already exists\n\n\n# Outputs\n# destinationTable\n * Type: string\n\n> Destination table\n\n\n# jobId\n * Type: string\n\n> The job id\n\n\n# rows\n * Type: integer\n\n> Output rows count',normalizedContent:'# load\ntype: "org.kestra.task.gcp.bigquery.load"\n\n\n> load data from local file to bigquery\n\n\n# examples\n> load an csv file from an input file\n\n\nid: "load"\ntype: "org.kestra.task.gcp.bigquery.load"\nfrom: "{{ inputs.file }}"\ndestinationtable: "my_project.my_dataset.my_table"\nformat: csv\ncsvoptions:\n  fielddelimiter: ";"\n\n\n# inputs\n# autodetect\n * type: boolean\n * dynamic: ❌\n * required: ❌\n\n> [experimental] automatic inference of the options and schema for csv and json sources\n\n\n# avrooptions\n * type: object\n * dynamic: ❓\n * required: ❌\n\n> avro parsing options\n\n\n# avrooptions.useavrologicaltypes\n * type: boolean\n * dynamic: ✔️\n * required: ❌\n\n> if format option is set to avro, you can interpret logical types into their corresponding\ntypes (such as timestamp) instead of only using their raw types (such as integer)\n\n\nthe value may be null.\n\n# clusteringfields\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> the clustering specification for the destination table\n\n\n# createdisposition\n * type: string\n * dynamic: ❌\n * required: ❌\n\n> whether the job is allowed to create tables\n\n\n# csvoptions\n * type: object\n * dynamic: ❓\n * required: ❌\n\n> csv parsing options\n\n\n# csvoptions.allowjaggedrows\n * type: boolean\n * dynamic: ✔️\n * required: ❌\n\n> whether bigquery should accept rows that are missing trailing optional columns\n\n\nif true, bigquery treats missing trailing columns as null values. if {@code false}, records\nwith missing trailing columns are treated as bad records, and if there are too many bad\nrecords, an invalid error is returned in the job result. by default, rows with missing\ntrailing columns are considered bad records.\n\n# csvoptions.allowquotednewlines\n * type: boolean\n * dynamic: ✔️\n * required: ❌\n\n> whether bigquery should allow quoted data sections that contain newline characters in a csv file\n\n\nby default quoted newline are not allowed.\n\n# csvoptions.encoding\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the character encoding of the data\n\n\nthe supported values are utf-8 or iso-8859-1. the\ndefault value is utf-8. bigquery decodes the data after the raw, binary data has been split\nusing the values set in {@link #setquote(string)} and {@link #setfielddelimiter(string)}.\n\n# csvoptions.fielddelimiter\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the separator for fields in a csv file\n\n\nbigquery converts the string to iso-8859-1\nencoding, and then uses the first byte of the encoded string to split the data in its raw,\nbinary state. bigquery also supports the escape sequence "\\t" to specify a tab separator. the\ndefault value is a comma (\',\').\n\n# csvoptions.quote\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the value that is used to quote data sections in a csv file\n\n\nbigquery converts the\nstring to iso-8859-1 encoding, and then uses the first byte of the encoded string to split\nthe data in its raw, binary state. the default value is a double-quote (\'"\'). if your data\ndoes not contain quoted sections, set the property value to an empty string. if your data\ncontains quoted newline characters, you must also set {@link\n#setallowquotednewlines(boolean)} property to {@code true}.\n\n# csvoptions.skipleadingrows\n * type: integer\n * dynamic: ✔️\n * required: ❌\n\n> the number of rows at the top of a csv file that bigquery will skip when reading the data\n\n\nthe default value is 0. this property is useful if you have header rows in the file\nthat should be skipped.\n\n# destinationtable\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the table where to put query results\n\n\nif not provided a new table is created.\n\n# format\n * type: string\n * dynamic: ❌\n * required: ❌\n\n> the source format, and possibly some parsing options, of the external data\n\n\n# from\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the fully-qualified uris that point to source data\n\n\n# ignoreunknownvalues\n * type: boolean\n * dynamic: ❌\n * required: ❌\n\n> whether bigquery should allow extra values that are not represented in the table schema\n\n\nif true, the extra values are ignored. if false, records with extra columns\nare treated as bad records, and if there are too many bad records, an invalid error is\nreturned in the job result. by default unknown values are not allowed.\n\n# location\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the geographic location where the dataset should reside\n\n\nthis property is experimental\nand might be subject to change or removed.\n\nsee dataset location\n\n# maxbadrecords\n * type: integer\n * dynamic: ❌\n * required: ❌\n\n> the maximum number of bad records that bigquery can ignore when running the job\n\n\nif the number of bad records exceeds this value, an invalid error is returned in the job result.\nby default no bad record is ignored.\n\n# projectid\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the gcp project id\n\n\n# retryauto\n * type: ====\n * dynamic: ❓\n * required: ❌\n\n# retrymessages\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n * default: [due to concurrent update]\n\n> the message that are valid for a automatic retry.\n\n\nmessage is tested as a substring of the full message and case insensitive\n\n# retryreasons\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n * default: [ratelimitexceeded, jobbackenderror]\n\n> the reason that are valid for a automatic retry.\n\n\n# schema\n * type: object\n * dynamic: ❌\n * required: ❌\n\n> the schema for the destination table\n\n\nthe schema can be omitted if the destination table\nalready exists, or if you\'re loading data from a google cloud datastore backup (i.e.\ndatastore_backup format option).\n\n# schemaupdateoptions\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> [experimental] options allowing the schema of the destination table to be updated as a side effect of the query job\n\n\nschema update options are supported in two cases: when\nwritedisposition is write_append; when writedisposition is write_truncate and the destination\ntable is a partition of a table, specified by partition decorators. for normal tables,\nwrite_truncate will always overwrite the schema.\n\n# timepartitioningfield\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the time partitioning specification for the destination table\n\n\n# writedisposition\n * type: string\n * dynamic: ❌\n * required: ❌\n\n> the action that should occur if the destination table already exists\n\n\n# outputs\n# destinationtable\n * type: string\n\n> destination table\n\n\n# jobid\n * type: string\n\n> the job id\n\n\n# rows\n * type: integer\n\n> output rows count',charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"LoadFromGcs",frontmatter:{title:"LoadFromGcs",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"LoadFromGcs"},{property:"og:description",content:"LoadFromGcs | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.LoadFromGcs.html"},{name:"twitter:title",content:"LoadFromGcs"},{name:"twitter:description",content:"LoadFromGcs | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.LoadFromGcs.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"LoadFromGcs | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.LoadFromGcs.html",relativePath:"plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.LoadFromGcs.md",key:"v-5fe87717",path:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.LoadFromGcs.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:125},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:390},{level:3,title:"autodetect",slug:"autodetect",normalizedTitle:"autodetect",charIndex:399},{level:3,title:"avroOptions",slug:"avrooptions",normalizedTitle:"avrooptions",charIndex:345},{level:3,title:"avroOptions.useAvroLogicalTypes",slug:"avrooptions-useavrologicaltypes",normalizedTitle:"avrooptions.useavrologicaltypes",charIndex:634},{level:3,title:"clusteringFields",slug:"clusteringfields",normalizedTitle:"clusteringfields",charIndex:916},{level:3,title:"createDisposition",slug:"createdisposition",normalizedTitle:"createdisposition",charIndex:1059},{level:3,title:"csvOptions",slug:"csvoptions",normalizedTitle:"csvoptions",charIndex:1173},{level:3,title:"csvOptions.allowJaggedRows",slug:"csvoptions-allowjaggedrows",normalizedTitle:"csvoptions.allowjaggedrows",charIndex:1256},{level:3,title:"csvOptions.allowQuotedNewLines",slug:"csvoptions-allowquotednewlines",normalizedTitle:"csvoptions.allowquotednewlines",charIndex:1729},{level:3,title:"csvOptions.encoding",slug:"csvoptions-encoding",normalizedTitle:"csvoptions.encoding",charIndex:1955},{level:3,title:"csvOptions.fieldDelimiter",slug:"csvoptions-fielddelimiter",normalizedTitle:"csvoptions.fielddelimiter",charIndex:2296},{level:3,title:"csvOptions.quote",slug:"csvoptions-quote",normalizedTitle:"csvoptions.quote",charIndex:2675},{level:3,title:"csvOptions.skipLeadingRows",slug:"csvoptions-skipleadingrows",normalizedTitle:"csvoptions.skipleadingrows",charIndex:3221},{level:3,title:"destinationTable",slug:"destinationtable",normalizedTitle:"destinationtable",charIndex:281},{level:3,title:"format",slug:"format",normalizedTitle:"format",charIndex:332},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:77},{level:3,title:"ignoreUnknownValues",slug:"ignoreunknownvalues",normalizedTitle:"ignoreunknownvalues",charIndex:4083},{level:3,title:"location",slug:"location",normalizedTitle:"location",charIndex:4479},{level:3,title:"maxBadRecords",slug:"maxbadrecords",normalizedTitle:"maxbadrecords",charIndex:4693},{level:3,title:"projectId",slug:"projectid",normalizedTitle:"projectid",charIndex:4975},{level:3,title:"retryAuto",slug:"retryauto",normalizedTitle:"retryauto",charIndex:5057},{level:3,title:"retryMessages",slug:"retrymessages",normalizedTitle:"retrymessages",charIndex:5113},{level:3,title:"retryReasons",slug:"retryreasons",normalizedTitle:"retryreasons",charIndex:5362},{level:3,title:"schema",slug:"schema",normalizedTitle:"schema",charIndex:513},{level:3,title:"schemaUpdateOptions",slug:"schemaupdateoptions",normalizedTitle:"schemaupdateoptions",charIndex:5810},{level:3,title:"timePartitioningField",slug:"timepartitioningfield",normalizedTitle:"timepartitioningfield",charIndex:6302},{level:3,title:"writeDisposition",slug:"writedisposition",normalizedTitle:"writedisposition",charIndex:6069},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:6577},{level:3,title:"destinationTable",slug:"destinationtable-2",normalizedTitle:"destinationtable",charIndex:281},{level:3,title:"jobId",slug:"jobid",normalizedTitle:"jobid",charIndex:6645},{level:3,title:"rows",slug:"rows",normalizedTitle:"rows",charIndex:1364}],headersStr:"Examples Inputs autodetect avroOptions avroOptions.useAvroLogicalTypes clusteringFields createDisposition csvOptions csvOptions.allowJaggedRows csvOptions.allowQuotedNewLines csvOptions.encoding csvOptions.fieldDelimiter csvOptions.quote csvOptions.skipLeadingRows destinationTable format from ignoreUnknownValues location maxBadRecords projectId retryAuto retryMessages retryReasons schema schemaUpdateOptions timePartitioningField writeDisposition Outputs destinationTable jobId rows",content:'# LoadFromGcs\ntype: "org.kestra.task.gcp.bigquery.LoadFromGcs"\n\n\n> Load data from GCS (Google Cloud Storage) to BigQuery\n\n\n# Examples\n> Load an avro file from a gcs bucket\n\n\nid: "load_from_gcs"\ntype: "org.kestra.task.gcp.bigquery.LoadFromGcs"\nfrom:\n  - "{{ outputs.avro-to-gcs }}"\ndestinationTable: "my_project.my_dataset.my_table"\nformat: AVRO\navroOptions:\n  useAvroLogicalTypes: true\n\n\n# Inputs\n# autodetect\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n\n> [Experimental] Automatic inference of the options and schema for CSV and JSON sources\n\n\n# avroOptions\n * Type: object\n * Dynamic: ❓\n * Required: ❌\n\n> Avro parsing options\n\n\n# avroOptions.useAvroLogicalTypes\n * Type: boolean\n * Dynamic: ✔️\n * Required: ❌\n\n> If Format option is set to AVRO, you can interpret logical types into their corresponding\ntypes (such as TIMESTAMP) instead of only using their raw types (such as INTEGER)\n\n\nThe value may be null.\n\n# clusteringFields\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The clustering specification for the destination table\n\n\n# createDisposition\n * Type: string\n * Dynamic: ❌\n * Required: ❌\n\n> Whether the job is allowed to create tables\n\n\n# csvOptions\n * Type: object\n * Dynamic: ❓\n * Required: ❌\n\n> Csv parsing options\n\n\n# csvOptions.allowJaggedRows\n * Type: boolean\n * Dynamic: ✔️\n * Required: ❌\n\n> Whether BigQuery should accept rows that are missing trailing optional columns\n\n\nIf true, BigQuery treats missing trailing columns as null values. If {@code false}, records\nwith missing trailing columns are treated as bad records, and if there are too many bad\nrecords, an invalid error is returned in the job result. By default, rows with missing\ntrailing columns are considered bad records.\n\n# csvOptions.allowQuotedNewLines\n * Type: boolean\n * Dynamic: ✔️\n * Required: ❌\n\n> Whether BigQuery should allow quoted data sections that contain newline characters in a CSV file\n\n\nBy default quoted newline are not allowed.\n\n# csvOptions.encoding\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The character encoding of the data\n\n\nThe supported values are UTF-8 or ISO-8859-1. The\ndefault value is UTF-8. BigQuery decodes the data after the raw, binary data has been split\nusing the values set in {@link #setQuote(String)} and {@link #setFieldDelimiter(String)}.\n\n# csvOptions.fieldDelimiter\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The separator for fields in a CSV file\n\n\nBigQuery converts the string to ISO-8859-1\nencoding, and then uses the first byte of the encoded string to split the data in its raw,\nbinary state. BigQuery also supports the escape sequence "\\t" to specify a tab separator. The\ndefault value is a comma (\',\').\n\n# csvOptions.quote\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The value that is used to quote data sections in a CSV file\n\n\nBigQuery converts the\nstring to ISO-8859-1 encoding, and then uses the first byte of the encoded string to split\nthe data in its raw, binary state. The default value is a double-quote (\'"\'). If your data\ndoes not contain quoted sections, set the property value to an empty string. If your data\ncontains quoted newline characters, you must also set {@link\n#setAllowQuotedNewLines(boolean)} property to {@code true}.\n\n# csvOptions.skipLeadingRows\n * Type: integer\n * Dynamic: ✔️\n * Required: ❌\n\n> The number of rows at the top of a CSV file that BigQuery will skip when reading the data\n\n\nThe default value is 0. This property is useful if you have header rows in the file\nthat should be skipped.\n\n# destinationTable\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The table where to put query results\n\n\nIf not provided a new table is created.\n\n# format\n * Type: string\n * Dynamic: ❌\n * Required: ❌\n\n> The source format, and possibly some parsing options, of the external data\n\n\n# from\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Google Cloud Storage source data\n\n\nThe fully-qualified URIs that point to source data in Google Cloud Storage (e.g.\ngs://bucket/path). Each URI can contain one \'*\' wildcard character and it must come after the\n\'bucket\' name.\n\n# ignoreUnknownValues\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n\n> Whether BigQuery should allow extra values that are not represented in the table schema\n\n\nIf true, the extra values are ignored. If false, records with extra columns\nare treated as bad records, and if there are too many bad records, an invalid error is\nreturned in the job result. By default unknown values are not allowed.\n\n# location\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The geographic location where the dataset should reside\n\n\nThis property is experimental\nand might be subject to change or removed.\n\nSee Dataset Location\n\n# maxBadRecords\n * Type: integer\n * Dynamic: ❌\n * Required: ❌\n\n> The maximum number of bad records that BigQuery can ignore when running the job\n\n\nIf the number of bad records exceeds this value, an invalid error is returned in the job result.\nBy default no bad record is ignored.\n\n# projectId\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The GCP project id\n\n\n# retryAuto\n * Type: ====\n * Dynamic: ❓\n * Required: ❌\n\n# retryMessages\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: [due to concurrent update]\n\n> The message that are valid for a automatic retry.\n\n\nMessage is tested as a substring of the full message and case insensitive\n\n# retryReasons\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: [rateLimitExceeded, jobBackendError]\n\n> The reason that are valid for a automatic retry.\n\n\n# schema\n * Type: object\n * Dynamic: ❌\n * Required: ❌\n\n> The schema for the destination table\n\n\nThe schema can be omitted if the destination table\nalready exists, or if you\'re loading data from a Google Cloud Datastore backup (i.e.\nDATASTORE_BACKUP format option).\n\n# schemaUpdateOptions\n * Type: array\n * SubType: string\n * Dynamic: ❌\n * Required: ❌\n\n> [Experimental] Options allowing the schema of the destination table to be updated as a side effect of the query job\n\n\nSchema update options are supported in two cases: when\nwriteDisposition is WRITE_APPEND; when writeDisposition is WRITE_TRUNCATE and the destination\ntable is a partition of a table, specified by partition decorators. For normal tables,\nWRITE_TRUNCATE will always overwrite the schema.\n\n# timePartitioningField\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The time partitioning specification for the destination table\n\n\n# writeDisposition\n * Type: string\n * Dynamic: ❌\n * Required: ❌\n\n> The action that should occur if the destination table already exists\n\n\n# Outputs\n# destinationTable\n * Type: string\n\n> Destination table\n\n\n# jobId\n * Type: string\n\n> The job id\n\n\n# rows\n * Type: integer\n\n> Output rows count',normalizedContent:'# loadfromgcs\ntype: "org.kestra.task.gcp.bigquery.loadfromgcs"\n\n\n> load data from gcs (google cloud storage) to bigquery\n\n\n# examples\n> load an avro file from a gcs bucket\n\n\nid: "load_from_gcs"\ntype: "org.kestra.task.gcp.bigquery.loadfromgcs"\nfrom:\n  - "{{ outputs.avro-to-gcs }}"\ndestinationtable: "my_project.my_dataset.my_table"\nformat: avro\navrooptions:\n  useavrologicaltypes: true\n\n\n# inputs\n# autodetect\n * type: boolean\n * dynamic: ❌\n * required: ❌\n\n> [experimental] automatic inference of the options and schema for csv and json sources\n\n\n# avrooptions\n * type: object\n * dynamic: ❓\n * required: ❌\n\n> avro parsing options\n\n\n# avrooptions.useavrologicaltypes\n * type: boolean\n * dynamic: ✔️\n * required: ❌\n\n> if format option is set to avro, you can interpret logical types into their corresponding\ntypes (such as timestamp) instead of only using their raw types (such as integer)\n\n\nthe value may be null.\n\n# clusteringfields\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> the clustering specification for the destination table\n\n\n# createdisposition\n * type: string\n * dynamic: ❌\n * required: ❌\n\n> whether the job is allowed to create tables\n\n\n# csvoptions\n * type: object\n * dynamic: ❓\n * required: ❌\n\n> csv parsing options\n\n\n# csvoptions.allowjaggedrows\n * type: boolean\n * dynamic: ✔️\n * required: ❌\n\n> whether bigquery should accept rows that are missing trailing optional columns\n\n\nif true, bigquery treats missing trailing columns as null values. if {@code false}, records\nwith missing trailing columns are treated as bad records, and if there are too many bad\nrecords, an invalid error is returned in the job result. by default, rows with missing\ntrailing columns are considered bad records.\n\n# csvoptions.allowquotednewlines\n * type: boolean\n * dynamic: ✔️\n * required: ❌\n\n> whether bigquery should allow quoted data sections that contain newline characters in a csv file\n\n\nby default quoted newline are not allowed.\n\n# csvoptions.encoding\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the character encoding of the data\n\n\nthe supported values are utf-8 or iso-8859-1. the\ndefault value is utf-8. bigquery decodes the data after the raw, binary data has been split\nusing the values set in {@link #setquote(string)} and {@link #setfielddelimiter(string)}.\n\n# csvoptions.fielddelimiter\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the separator for fields in a csv file\n\n\nbigquery converts the string to iso-8859-1\nencoding, and then uses the first byte of the encoded string to split the data in its raw,\nbinary state. bigquery also supports the escape sequence "\\t" to specify a tab separator. the\ndefault value is a comma (\',\').\n\n# csvoptions.quote\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the value that is used to quote data sections in a csv file\n\n\nbigquery converts the\nstring to iso-8859-1 encoding, and then uses the first byte of the encoded string to split\nthe data in its raw, binary state. the default value is a double-quote (\'"\'). if your data\ndoes not contain quoted sections, set the property value to an empty string. if your data\ncontains quoted newline characters, you must also set {@link\n#setallowquotednewlines(boolean)} property to {@code true}.\n\n# csvoptions.skipleadingrows\n * type: integer\n * dynamic: ✔️\n * required: ❌\n\n> the number of rows at the top of a csv file that bigquery will skip when reading the data\n\n\nthe default value is 0. this property is useful if you have header rows in the file\nthat should be skipped.\n\n# destinationtable\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the table where to put query results\n\n\nif not provided a new table is created.\n\n# format\n * type: string\n * dynamic: ❌\n * required: ❌\n\n> the source format, and possibly some parsing options, of the external data\n\n\n# from\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> google cloud storage source data\n\n\nthe fully-qualified uris that point to source data in google cloud storage (e.g.\ngs://bucket/path). each uri can contain one \'*\' wildcard character and it must come after the\n\'bucket\' name.\n\n# ignoreunknownvalues\n * type: boolean\n * dynamic: ❌\n * required: ❌\n\n> whether bigquery should allow extra values that are not represented in the table schema\n\n\nif true, the extra values are ignored. if false, records with extra columns\nare treated as bad records, and if there are too many bad records, an invalid error is\nreturned in the job result. by default unknown values are not allowed.\n\n# location\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the geographic location where the dataset should reside\n\n\nthis property is experimental\nand might be subject to change or removed.\n\nsee dataset location\n\n# maxbadrecords\n * type: integer\n * dynamic: ❌\n * required: ❌\n\n> the maximum number of bad records that bigquery can ignore when running the job\n\n\nif the number of bad records exceeds this value, an invalid error is returned in the job result.\nby default no bad record is ignored.\n\n# projectid\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the gcp project id\n\n\n# retryauto\n * type: ====\n * dynamic: ❓\n * required: ❌\n\n# retrymessages\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n * default: [due to concurrent update]\n\n> the message that are valid for a automatic retry.\n\n\nmessage is tested as a substring of the full message and case insensitive\n\n# retryreasons\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n * default: [ratelimitexceeded, jobbackenderror]\n\n> the reason that are valid for a automatic retry.\n\n\n# schema\n * type: object\n * dynamic: ❌\n * required: ❌\n\n> the schema for the destination table\n\n\nthe schema can be omitted if the destination table\nalready exists, or if you\'re loading data from a google cloud datastore backup (i.e.\ndatastore_backup format option).\n\n# schemaupdateoptions\n * type: array\n * subtype: string\n * dynamic: ❌\n * required: ❌\n\n> [experimental] options allowing the schema of the destination table to be updated as a side effect of the query job\n\n\nschema update options are supported in two cases: when\nwritedisposition is write_append; when writedisposition is write_truncate and the destination\ntable is a partition of a table, specified by partition decorators. for normal tables,\nwrite_truncate will always overwrite the schema.\n\n# timepartitioningfield\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the time partitioning specification for the destination table\n\n\n# writedisposition\n * type: string\n * dynamic: ❌\n * required: ❌\n\n> the action that should occur if the destination table already exists\n\n\n# outputs\n# destinationtable\n * type: string\n\n> destination table\n\n\n# jobid\n * type: string\n\n> the job id\n\n\n# rows\n * type: integer\n\n> output rows count',charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"Query",frontmatter:{title:"Query",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Query"},{property:"og:description",content:"Query | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.Query.html"},{name:"twitter:title",content:"Query"},{name:"twitter:description",content:"Query | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.Query.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Query | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.Query.html",relativePath:"plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.Query.md",key:"v-8568b3d6",path:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.Query.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:118},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:1220},{level:3,title:"clusteringFields",slug:"clusteringfields",normalizedTitle:"clusteringfields",charIndex:1229},{level:3,title:"createDisposition",slug:"createdisposition",normalizedTitle:"createdisposition",charIndex:1372},{level:3,title:"destinationTable",slug:"destinationtable",normalizedTitle:"destinationtable",charIndex:221},{level:3,title:"fetch",slug:"fetch",normalizedTitle:"fetch",charIndex:839},{level:3,title:"fetchOne",slug:"fetchone",normalizedTitle:"fetchone",charIndex:1762},{level:3,title:"legacySql",slug:"legacysql",normalizedTitle:"legacysql",charIndex:1901},{level:3,title:"location",slug:"location",normalizedTitle:"location",charIndex:2068},{level:3,title:"projectId",slug:"projectid",normalizedTitle:"projectid",charIndex:2282},{level:3,title:"retryAuto",slug:"retryauto",normalizedTitle:"retryauto",charIndex:2364},{level:3,title:"retryMessages",slug:"retrymessages",normalizedTitle:"retrymessages",charIndex:2420},{level:3,title:"retryReasons",slug:"retryreasons",normalizedTitle:"retryreasons",charIndex:2669},{level:3,title:"schemaUpdateOptions",slug:"schemaupdateoptions",normalizedTitle:"schemaupdateoptions",charIndex:2851},{level:3,title:"sql",slug:"sql",normalizedTitle:"sql",charIndex:303},{level:3,title:"store",slug:"store",normalizedTitle:"store",charIndex:3422},{level:3,title:"timePartitioningField",slug:"timepartitioningfield",normalizedTitle:"timepartitioningfield",charIndex:3563},{level:3,title:"writeDisposition",slug:"writedisposition",normalizedTitle:"writedisposition",charIndex:272},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:3839},{level:3,title:"jobId",slug:"jobid",normalizedTitle:"jobid",charIndex:3849},{level:3,title:"row",slug:"row",normalizedTitle:"row",charIndex:1149},{level:3,title:"rows",slug:"rows",normalizedTitle:"rows",charIndex:1149},{level:3,title:"size",slug:"size",normalizedTitle:"size",charIndex:4149},{level:3,title:"uri",slug:"uri",normalizedTitle:"uri",charIndex:4272}],headersStr:"Examples Inputs clusteringFields createDisposition destinationTable fetch fetchOne legacySql location projectId retryAuto retryMessages retryReasons schemaUpdateOptions sql store timePartitioningField writeDisposition Outputs jobId row rows size uri",content:'# Query\ntype: "org.kestra.task.gcp.bigquery.Query"\n\n\n> Execute BigQuery SQL query in a specific BigQuery database\n\n\n# Examples\n> Create a table with a custom query\n\n\nid: "query"\ntype: "org.kestra.task.gcp.bigquery.Query"\ndestinationTable: "my_project.my_dataset.my_table"\nwriteDisposition: WRITE_APPEND\nsql: |\n  SELECT \n    "hello" as string,\n    NULL AS `nullable`,\n    1 as int,\n    1.25 AS float,\n    DATE("2008-12-25") AS date,\n    DATETIME "2008-12-25 15:30:00.123456" AS datetime,\n    TIME(DATETIME "2008-12-25 15:30:00.123456") AS time,\n    TIMESTAMP("2008-12-25 15:30:00.123456") AS timestamp,\n    ST_GEOGPOINT(50.6833, 2.9) AS geopoint,\n    ARRAY(SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3) AS `array`,\n    STRUCT(4 AS x, 0 AS y, ARRAY(SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3) AS z) AS `struct`\n\n\n> Execute a query and fetch results sets on another task\n\n\ntasks:\n- id: fetch\n  type: org.kestra.task.gcp.bigquery.Query\n  fetch: true\n  sql: |\n    SELECT 1 as id, "John" as name\n    UNION ALL\n    SELECT 2 as id, "Doe" as name\n- id: use-fetched-data\n  type: org.kestra.core.tasks.debugs.Return\n  format: |\n    {{#each outputs.fetch.rows}}\n    id : {{ this.id }}, name: {{ this.name }}\n    {{/each}}\n\n\n# Inputs\n# clusteringFields\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The clustering specification for the destination table\n\n\n# createDisposition\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Whether the job is allowed to create tables\n\n\n# destinationTable\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The table where to put query results\n\n\nIf not provided a new table is created.\n\n# fetch\n * Type: boolean\n * Dynamic: ✔️\n * Required: ❌\n\n> Whether to Fetch the data from the query result to the task output\n\n\n# fetchOne\n * Type: boolean\n * Dynamic: ✔️\n * Required: ❌\n\n> Whether to Fetch only one data row from the query result to the task output\n\n\n# legacySql\n * Type: boolean\n * Dynamic: ✔️\n * Required: ❌\n\n> Whether to use BigQuery\'s legacy SQL dialect for this query\n\n\nBy default this property is set to false.\n\n# location\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The geographic location where the dataset should reside\n\n\nThis property is experimental\nand might be subject to change or removed.\n\nSee Dataset Location\n\n# projectId\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The GCP project id\n\n\n# retryAuto\n * Type: ====\n * Dynamic: ❓\n * Required: ❌\n\n# retryMessages\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: [due to concurrent update]\n\n> The message that are valid for a automatic retry.\n\n\nMessage is tested as a substring of the full message and case insensitive\n\n# retryReasons\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: [rateLimitExceeded, jobBackendError]\n\n> The reason that are valid for a automatic retry.\n\n\n# schemaUpdateOptions\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> [Experimental] Options allowing the schema of the destination table to be updated as a side effect of the query job\n\n\nSchema update options are supported in two cases: when\nwriteDisposition is WRITE_APPEND; when writeDisposition is WRITE_TRUNCATE and the destination\ntable is a partition of a table, specified by partition decorators. For normal tables,\nWRITE_TRUNCATE will always overwrite the schema.\n\n# sql\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The sql query to run\n\n\n# store\n * Type: boolean\n * Dynamic: ✔️\n * Required: ❌\n\n> Whether to store the data from the query result into an ion serialized data file\n\n\n# timePartitioningField\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The time partitioning specification for the destination table\n\n\n# writeDisposition\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The action that should occur if the destination table already exists\n\n\n# Outputs\n# jobId\n * Type: string\n\n> The job id\n\n\n# row\n * Type: object\n\n> Map containing the first row of fetched data\n\n\nOnly populated if \'fetchOne\' parameter is set to true.\n\n# rows\n * Type: array\n * SubType: object\n\n> List containing the fetched data\n\n\nOnly populated if \'fetch\' parameter is set to true.\n\n# size\n * Type: integer\n\n> The size of the rows fetch\n\n\nOnly populated if \'fetchOne\' or \'fetch\' parameter is set to true.\n\n# uri\n * Type: object\n\n> The uri of store result\n\n\nOnly populated if \'store\' is set to true.',normalizedContent:'# query\ntype: "org.kestra.task.gcp.bigquery.query"\n\n\n> execute bigquery sql query in a specific bigquery database\n\n\n# examples\n> create a table with a custom query\n\n\nid: "query"\ntype: "org.kestra.task.gcp.bigquery.query"\ndestinationtable: "my_project.my_dataset.my_table"\nwritedisposition: write_append\nsql: |\n  select \n    "hello" as string,\n    null as `nullable`,\n    1 as int,\n    1.25 as float,\n    date("2008-12-25") as date,\n    datetime "2008-12-25 15:30:00.123456" as datetime,\n    time(datetime "2008-12-25 15:30:00.123456") as time,\n    timestamp("2008-12-25 15:30:00.123456") as timestamp,\n    st_geogpoint(50.6833, 2.9) as geopoint,\n    array(select 1 union all select 2 union all select 3) as `array`,\n    struct(4 as x, 0 as y, array(select 1 union all select 2 union all select 3) as z) as `struct`\n\n\n> execute a query and fetch results sets on another task\n\n\ntasks:\n- id: fetch\n  type: org.kestra.task.gcp.bigquery.query\n  fetch: true\n  sql: |\n    select 1 as id, "john" as name\n    union all\n    select 2 as id, "doe" as name\n- id: use-fetched-data\n  type: org.kestra.core.tasks.debugs.return\n  format: |\n    {{#each outputs.fetch.rows}}\n    id : {{ this.id }}, name: {{ this.name }}\n    {{/each}}\n\n\n# inputs\n# clusteringfields\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> the clustering specification for the destination table\n\n\n# createdisposition\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> whether the job is allowed to create tables\n\n\n# destinationtable\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the table where to put query results\n\n\nif not provided a new table is created.\n\n# fetch\n * type: boolean\n * dynamic: ✔️\n * required: ❌\n\n> whether to fetch the data from the query result to the task output\n\n\n# fetchone\n * type: boolean\n * dynamic: ✔️\n * required: ❌\n\n> whether to fetch only one data row from the query result to the task output\n\n\n# legacysql\n * type: boolean\n * dynamic: ✔️\n * required: ❌\n\n> whether to use bigquery\'s legacy sql dialect for this query\n\n\nby default this property is set to false.\n\n# location\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the geographic location where the dataset should reside\n\n\nthis property is experimental\nand might be subject to change or removed.\n\nsee dataset location\n\n# projectid\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the gcp project id\n\n\n# retryauto\n * type: ====\n * dynamic: ❓\n * required: ❌\n\n# retrymessages\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n * default: [due to concurrent update]\n\n> the message that are valid for a automatic retry.\n\n\nmessage is tested as a substring of the full message and case insensitive\n\n# retryreasons\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n * default: [ratelimitexceeded, jobbackenderror]\n\n> the reason that are valid for a automatic retry.\n\n\n# schemaupdateoptions\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> [experimental] options allowing the schema of the destination table to be updated as a side effect of the query job\n\n\nschema update options are supported in two cases: when\nwritedisposition is write_append; when writedisposition is write_truncate and the destination\ntable is a partition of a table, specified by partition decorators. for normal tables,\nwrite_truncate will always overwrite the schema.\n\n# sql\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the sql query to run\n\n\n# store\n * type: boolean\n * dynamic: ✔️\n * required: ❌\n\n> whether to store the data from the query result into an ion serialized data file\n\n\n# timepartitioningfield\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the time partitioning specification for the destination table\n\n\n# writedisposition\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the action that should occur if the destination table already exists\n\n\n# outputs\n# jobid\n * type: string\n\n> the job id\n\n\n# row\n * type: object\n\n> map containing the first row of fetched data\n\n\nonly populated if \'fetchone\' parameter is set to true.\n\n# rows\n * type: array\n * subtype: object\n\n> list containing the fetched data\n\n\nonly populated if \'fetch\' parameter is set to true.\n\n# size\n * type: integer\n\n> the size of the rows fetch\n\n\nonly populated if \'fetchone\' or \'fetch\' parameter is set to true.\n\n# uri\n * type: object\n\n> the uri of store result\n\n\nonly populated if \'store\' is set to true.',charsets:{cjk:!0},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"UpdateDataset",frontmatter:{title:"UpdateDataset",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"UpdateDataset"},{property:"og:description",content:"UpdateDataset | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.UpdateDataset.html"},{name:"twitter:title",content:"UpdateDataset"},{name:"twitter:description",content:"UpdateDataset | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.UpdateDataset.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"UpdateDataset | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.UpdateDataset.html",relativePath:"plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.UpdateDataset.md",key:"v-4189dac7",path:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.UpdateDataset.html",headers:[{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:93},{level:3,title:"acl",slug:"acl",normalizedTitle:"acl",charIndex:102},{level:3,title:"defaultEncryptionConfiguration",slug:"defaultencryptionconfiguration",normalizedTitle:"defaultencryptionconfiguration",charIndex:219},{level:3,title:"defaultEncryptionConfiguration.kmsKeyName",slug:"defaultencryptionconfiguration-kmskeyname",normalizedTitle:"defaultencryptionconfiguration.kmskeyname",charIndex:543},{level:3,title:"defaultPartitionExpirationMs",slug:"defaultpartitionexpirationms",normalizedTitle:"defaultpartitionexpirationms",charIndex:633},{level:3,title:"defaultTableLifetime",slug:"defaulttablelifetime",normalizedTitle:"defaulttablelifetime",charIndex:1578},{level:3,title:"description",slug:"description",normalizedTitle:"description",charIndex:2410},{level:3,title:"friendlyName",slug:"friendlyname",normalizedTitle:"friendlyname",charIndex:2533},{level:3,title:"labels",slug:"labels",normalizedTitle:"labels",charIndex:2636},{level:3,title:"location",slug:"location",normalizedTitle:"location",charIndex:2716},{level:3,title:"name",slug:"name",normalizedTitle:"name",charIndex:2611},{level:3,title:"projectId",slug:"projectid",normalizedTitle:"projectid",charIndex:3019},{level:3,title:"retryAuto",slug:"retryauto",normalizedTitle:"retryauto",charIndex:3101},{level:3,title:"retryMessages",slug:"retrymessages",normalizedTitle:"retrymessages",charIndex:3157},{level:3,title:"retryReasons",slug:"retryreasons",normalizedTitle:"retryreasons",charIndex:3406},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:3588},{level:3,title:"dataset",slug:"dataset",normalizedTitle:"dataset",charIndex:80},{level:3,title:"description",slug:"description-2",normalizedTitle:"description",charIndex:2410},{level:3,title:"friendlyName",slug:"friendlyname-2",normalizedTitle:"friendlyname",charIndex:2533},{level:3,title:"location",slug:"location-2",normalizedTitle:"location",charIndex:2716},{level:3,title:"project",slug:"project",normalizedTitle:"project",charIndex:3019}],headersStr:"Inputs acl defaultEncryptionConfiguration defaultEncryptionConfiguration.kmsKeyName defaultPartitionExpirationMs defaultTableLifetime description friendlyName labels location name projectId retryAuto retryMessages retryReasons Outputs dataset description friendlyName location project",content:"# UpdateDataset\ntype: \"org.kestra.task.gcp.bigquery.UpdateDataset\"\n\n\n> Update a dataset.\n\n\n# Inputs\n# acl\n * Type: array\n * SubType: object\n * Dynamic: ❓\n * Required: ❌\n\n> The dataset's access control configuration\n\n\n# defaultEncryptionConfiguration\n * Type: object\n * Dynamic: ❓\n * Required: ❌\n\n> The default encryption key for all tables in the dataset\n\n\nOnce this property is set, all\nnewly-created partitioned tables in the dataset will have encryption key set to this value,\nunless table creation request (or query) overrides the key.\n\n# defaultEncryptionConfiguration.kmsKeyName\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# defaultPartitionExpirationMs\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n> [Optional] The default partition expiration time for all partitioned tables in the dataset, in milliseconds\n\n\nOnce this property is set, all newly-created partitioned tables in the\ndataset will has an expirationMs property in the timePartitioning settings set to this value.\nChanging the value only affect new tables, not existing ones. The storage in a partition will\nhave an expiration time of its partition time plus this value. Setting this property\noverrides the use of defaultTableExpirationMs for partitioned tables: only one of\ndefaultTableExpirationMs and defaultPartitionExpirationMs will be used for any new\npartitioned table. If you provide an explicit timePartitioning.expirationMs when creating or\nupdating a partitioned table, that value takes precedence over the default partition\nexpiration time indicated by this property. The value may be null.\n\n# defaultTableLifetime\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n> The default lifetime of all tables in the dataset, in milliseconds\n\n\nThe minimum value is\n3600000 milliseconds (one hour). Once this property is set, all newly-created tables in the\ndataset will have an expirationTime property set to the creation time plus the value in this\nproperty, and changing the value will only affect new tables, not existing ones. When the\nexpirationTime for a given table is reached, that table will be deleted automatically. If a\ntable's expirationTime is modified or removed before the table expires, or if you provide an\nexplicit expirationTime when creating a table, that value takes precedence over the default\nexpiration time indicated by this property. This property is experimental and might be\nsubject to change or removed.\n\n# description\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Description\n\n\nA user-friendly description for the dataset.\n\n# friendlyName\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> A user-friendly name for the dataset\n\n\n# labels\n * Type: object\n * Dynamic: ❓\n * Required: ❌\n\n> The dataset's labels\n\n\n# location\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The geographic location where the dataset should reside\n\n\nThis property is experimental\nand might be subject to change or removed.\n\nSee Dataset Location\n\n# name\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The dataset's user-defined id\n\n\n# projectId\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The GCP project id\n\n\n# retryAuto\n * Type: ====\n * Dynamic: ❓\n * Required: ❌\n\n# retryMessages\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: [due to concurrent update]\n\n> The message that are valid for a automatic retry.\n\n\nMessage is tested as a substring of the full message and case insensitive\n\n# retryReasons\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: [rateLimitExceeded, jobBackendError]\n\n> The reason that are valid for a automatic retry.\n\n\n# Outputs\n# dataset\n * Type: string\n\n> The dataset's user-defined id\n\n\n# description\n * Type: string\n\n> A user-friendly description for the dataset\n\n\n# friendlyName\n * Type: string\n\n> A user-friendly name for the dataset\n\n\n# location\n * Type: string\n\n> The geographic location where the dataset should reside\n\n\nThis property is experimental\nand might be subject to change or removed.\n\nSee Dataset Location\n\n# project\n * Type: string\n\n> The GCP project id",normalizedContent:"# updatedataset\ntype: \"org.kestra.task.gcp.bigquery.updatedataset\"\n\n\n> update a dataset.\n\n\n# inputs\n# acl\n * type: array\n * subtype: object\n * dynamic: ❓\n * required: ❌\n\n> the dataset's access control configuration\n\n\n# defaultencryptionconfiguration\n * type: object\n * dynamic: ❓\n * required: ❌\n\n> the default encryption key for all tables in the dataset\n\n\nonce this property is set, all\nnewly-created partitioned tables in the dataset will have encryption key set to this value,\nunless table creation request (or query) overrides the key.\n\n# defaultencryptionconfiguration.kmskeyname\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# defaultpartitionexpirationms\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n> [optional] the default partition expiration time for all partitioned tables in the dataset, in milliseconds\n\n\nonce this property is set, all newly-created partitioned tables in the\ndataset will has an expirationms property in the timepartitioning settings set to this value.\nchanging the value only affect new tables, not existing ones. the storage in a partition will\nhave an expiration time of its partition time plus this value. setting this property\noverrides the use of defaulttableexpirationms for partitioned tables: only one of\ndefaulttableexpirationms and defaultpartitionexpirationms will be used for any new\npartitioned table. if you provide an explicit timepartitioning.expirationms when creating or\nupdating a partitioned table, that value takes precedence over the default partition\nexpiration time indicated by this property. the value may be null.\n\n# defaulttablelifetime\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n> the default lifetime of all tables in the dataset, in milliseconds\n\n\nthe minimum value is\n3600000 milliseconds (one hour). once this property is set, all newly-created tables in the\ndataset will have an expirationtime property set to the creation time plus the value in this\nproperty, and changing the value will only affect new tables, not existing ones. when the\nexpirationtime for a given table is reached, that table will be deleted automatically. if a\ntable's expirationtime is modified or removed before the table expires, or if you provide an\nexplicit expirationtime when creating a table, that value takes precedence over the default\nexpiration time indicated by this property. this property is experimental and might be\nsubject to change or removed.\n\n# description\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> description\n\n\na user-friendly description for the dataset.\n\n# friendlyname\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> a user-friendly name for the dataset\n\n\n# labels\n * type: object\n * dynamic: ❓\n * required: ❌\n\n> the dataset's labels\n\n\n# location\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the geographic location where the dataset should reside\n\n\nthis property is experimental\nand might be subject to change or removed.\n\nsee dataset location\n\n# name\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the dataset's user-defined id\n\n\n# projectid\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the gcp project id\n\n\n# retryauto\n * type: ====\n * dynamic: ❓\n * required: ❌\n\n# retrymessages\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n * default: [due to concurrent update]\n\n> the message that are valid for a automatic retry.\n\n\nmessage is tested as a substring of the full message and case insensitive\n\n# retryreasons\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n * default: [ratelimitexceeded, jobbackenderror]\n\n> the reason that are valid for a automatic retry.\n\n\n# outputs\n# dataset\n * type: string\n\n> the dataset's user-defined id\n\n\n# description\n * type: string\n\n> a user-friendly description for the dataset\n\n\n# friendlyname\n * type: string\n\n> a user-friendly name for the dataset\n\n\n# location\n * type: string\n\n> the geographic location where the dataset should reside\n\n\nthis property is experimental\nand might be subject to change or removed.\n\nsee dataset location\n\n# project\n * type: string\n\n> the gcp project id",charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"TableMetadata",frontmatter:{title:"TableMetadata",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"TableMetadata"},{property:"og:description",content:"TableMetadata | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.TableMetadata.html"},{name:"twitter:title",content:"TableMetadata"},{name:"twitter:description",content:"TableMetadata | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.TableMetadata.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"TableMetadata | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.TableMetadata.html",relativePath:"plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.TableMetadata.md",key:"v-1a7c016b",path:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.TableMetadata.html",headers:[{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:94},{level:3,title:"dataset",slug:"dataset",normalizedTitle:"dataset",charIndex:103},{level:3,title:"ifNotExists",slug:"ifnotexists",normalizedTitle:"ifnotexists",charIndex:195},{level:3,title:"location",slug:"location",normalizedTitle:"location",charIndex:413},{level:3,title:"projectId",slug:"projectid",normalizedTitle:"projectid",charIndex:627},{level:3,title:"retryAuto",slug:"retryauto",normalizedTitle:"retryauto",charIndex:709},{level:3,title:"retryMessages",slug:"retrymessages",normalizedTitle:"retrymessages",charIndex:765},{level:3,title:"retryReasons",slug:"retryreasons",normalizedTitle:"retryreasons",charIndex:1014},{level:3,title:"table",slug:"table",normalizedTitle:"table",charIndex:75},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1282},{level:3,title:"creationTime",slug:"creationtime",normalizedTitle:"creationtime",charIndex:1292},{level:3,title:"datasetId",slug:"datasetid",normalizedTitle:"datasetid",charIndex:1365},{level:3,title:"definition",slug:"definition",normalizedTitle:"definition",charIndex:1415},{level:3,title:"definition.externalTableDefinition",slug:"definition-externaltabledefinition",normalizedTitle:"definition.externaltabledefinition",charIndex:1470},{level:3,title:"definition.materializedViewDefinition",slug:"definition-materializedviewdefinition",normalizedTitle:"definition.materializedviewdefinition",charIndex:1590},{level:3,title:"definition.schema",slug:"definition-schema",normalizedTitle:"definition.schema",charIndex:1725},{level:3,title:"definition.standardTableDefinition",slug:"definition-standardtabledefinition",normalizedTitle:"definition.standardtabledefinition",charIndex:1794},{level:3,title:"definition.type",slug:"definition-type",normalizedTitle:"definition.type",charIndex:1902},{level:3,title:"definition.viewDefinition",slug:"definition-viewdefinition",normalizedTitle:"definition.viewdefinition",charIndex:1967},{level:3,title:"description",slug:"description",normalizedTitle:"description",charIndex:2064},{level:3,title:"encryptionConfiguration",slug:"encryptionconfiguration",normalizedTitle:"encryptionconfiguration",charIndex:2143},{level:3,title:"encryptionConfiguration.kmsKeyName",slug:"encryptionconfiguration-kmskeyname",normalizedTitle:"encryptionconfiguration.kmskeyname",charIndex:2219},{level:3,title:"etag",slug:"etag",normalizedTitle:"etag",charIndex:2273},{level:3,title:"expirationTime",slug:"expirationtime",normalizedTitle:"expirationtime",charIndex:2332},{level:3,title:"externalTableDefinition.autodetect",slug:"externaltabledefinition-autodetect",normalizedTitle:"externaltabledefinition.autodetect",charIndex:2525},{level:3,title:"externalTableDefinition.compression",slug:"externaltabledefinition-compression",normalizedTitle:"externaltabledefinition.compression",charIndex:2670},{level:3,title:"externalTableDefinition.ignoreUnknownValues",slug:"externaltabledefinition-ignoreunknownvalues",normalizedTitle:"externaltabledefinition.ignoreunknownvalues",charIndex:2778},{level:3,title:"externalTableDefinition.maxBadRecords",slug:"externaltabledefinition-maxbadrecords",normalizedTitle:"externaltabledefinition.maxbadrecords",charIndex:3135},{level:3,title:"externalTableDefinition.sourceUris",slug:"externaltabledefinition-sourceuris",normalizedTitle:"externaltabledefinition.sourceuris",charIndex:3381},{level:3,title:"friendlyName",slug:"friendlyname",normalizedTitle:"friendlyname",charIndex:3767},{level:3,title:"generatedId",slug:"generatedid",normalizedTitle:"generatedid",charIndex:3840},{level:3,title:"labels",slug:"labels",normalizedTitle:"labels",charIndex:3914},{level:3,title:"lastModifiedTime",slug:"lastmodifiedtime",normalizedTitle:"lastmodifiedtime",charIndex:3989},{level:3,title:"materializedViewDefinition.enableRefresh",slug:"materializedviewdefinition-enablerefresh",normalizedTitle:"materializedviewdefinition.enablerefresh",charIndex:4072},{level:3,title:"materializedViewDefinition.lastRefreshDate",slug:"materializedviewdefinition-lastrefreshdate",normalizedTitle:"materializedviewdefinition.lastrefreshdate",charIndex:4221},{level:3,title:"materializedViewDefinition.query",slug:"materializedviewdefinition-query",normalizedTitle:"materializedviewdefinition.query",charIndex:4338},{level:3,title:"materializedViewDefinition.refreshIntervalMs",slug:"materializedviewdefinition-refreshintervalms",normalizedTitle:"materializedviewdefinition.refreshintervalms",charIndex:4430},{level:3,title:"numBytes",slug:"numbytes",normalizedTitle:"numbytes",charIndex:4571},{level:3,title:"numLongTermBytes",slug:"numlongtermbytes",normalizedTitle:"numlongtermbytes",charIndex:4636},{level:3,title:"numRows",slug:"numrows",normalizedTitle:"numrows",charIndex:4758},{level:3,title:"projectId",slug:"projectid-2",normalizedTitle:"projectid",charIndex:627},{level:3,title:"range.end",slug:"range-end",normalizedTitle:"range.end",charIndex:4881},{level:3,title:"range.interval",slug:"range-interval",normalizedTitle:"range.interval",charIndex:4911},{level:3,title:"range.start",slug:"range-start",normalizedTitle:"range.start",charIndex:4946},{level:3,title:"rangePartitioning.field",slug:"rangepartitioning-field",normalizedTitle:"rangepartitioning.field",charIndex:4978},{level:3,title:"rangePartitioning.range",slug:"rangepartitioning-range",normalizedTitle:"rangepartitioning.range",charIndex:5021},{level:3,title:"requirePartitionFilter",slug:"requirepartitionfilter",normalizedTitle:"requirepartitionfilter",charIndex:5064},{level:3,title:"selfLink",slug:"selflink",normalizedTitle:"selflink",charIndex:5231},{level:3,title:"standardTableDefinition.clustering",slug:"standardtabledefinition-clustering",normalizedTitle:"standardtabledefinition.clustering",charIndex:5375},{level:3,title:"standardTableDefinition.rangePartitioning",slug:"standardtabledefinition-rangepartitioning",normalizedTitle:"standardtabledefinition.rangepartitioning",charIndex:5531},{level:3,title:"standardTableDefinition.streamingBuffer",slug:"standardtabledefinition-streamingbuffer",normalizedTitle:"standardtabledefinition.streamingbuffer",charIndex:5710},{level:3,title:"standardTableDefinition.timePartitioning",slug:"standardtabledefinition-timepartitioning",normalizedTitle:"standardtabledefinition.timepartitioning",charIndex:5892},{level:3,title:"streamingBuffer.estimatedBytes",slug:"streamingbuffer-estimatedbytes",normalizedTitle:"streamingbuffer.estimatedbytes",charIndex:6068},{level:3,title:"streamingBuffer.estimatedRows",slug:"streamingbuffer-estimatedrows",normalizedTitle:"streamingbuffer.estimatedrows",charIndex:6119},{level:3,title:"streamingBuffer.oldestEntryTime",slug:"streamingbuffer-oldestentrytime",normalizedTitle:"streamingbuffer.oldestentrytime",charIndex:6169},{level:3,title:"table",slug:"table-2",normalizedTitle:"table",charIndex:75},{level:3,title:"viewDefinition.query",slug:"viewdefinition-query",normalizedTitle:"viewdefinition.query",charIndex:6265},{level:3,title:"viewDefinition.viewUserDefinedFunctions",slug:"viewdefinition-viewuserdefinedfunctions",normalizedTitle:"viewdefinition.viewuserdefinedfunctions",charIndex:6345}],headersStr:"Inputs dataset ifNotExists location projectId retryAuto retryMessages retryReasons table Outputs creationTime datasetId definition definition.externalTableDefinition definition.materializedViewDefinition definition.schema definition.standardTableDefinition definition.type definition.viewDefinition description encryptionConfiguration encryptionConfiguration.kmsKeyName etag expirationTime externalTableDefinition.autodetect externalTableDefinition.compression externalTableDefinition.ignoreUnknownValues externalTableDefinition.maxBadRecords externalTableDefinition.sourceUris friendlyName generatedId labels lastModifiedTime materializedViewDefinition.enableRefresh materializedViewDefinition.lastRefreshDate materializedViewDefinition.query materializedViewDefinition.refreshIntervalMs numBytes numLongTermBytes numRows projectId range.end range.interval range.start rangePartitioning.field rangePartitioning.range requirePartitionFilter selfLink standardTableDefinition.clustering standardTableDefinition.rangePartitioning standardTableDefinition.streamingBuffer standardTableDefinition.timePartitioning streamingBuffer.estimatedBytes streamingBuffer.estimatedRows streamingBuffer.oldestEntryTime table viewDefinition.query viewDefinition.viewUserDefinedFunctions",content:"# TableMetadata\ntype: \"org.kestra.task.gcp.bigquery.TableMetadata\"\n\n\n> Get table metadata\n\n\n# Inputs\n# dataset\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The dataset's user-defined id\n\n\n# ifNotExists\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Default: ERROR\n\n> Policy to apply if a table don't exists.\n\n\nIf the policy is SKIP, the output will contain only null value, otherwize an error is raised.\n\n# location\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The geographic location where the dataset should reside\n\n\nThis property is experimental\nand might be subject to change or removed.\n\nSee Dataset Location\n\n# projectId\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The GCP project id\n\n\n# retryAuto\n * Type: ====\n * Dynamic: ❓\n * Required: ❌\n\n# retryMessages\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: [due to concurrent update]\n\n> The message that are valid for a automatic retry.\n\n\nMessage is tested as a substring of the full message and case insensitive\n\n# retryReasons\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: [rateLimitExceeded, jobBackendError]\n\n> The reason that are valid for a automatic retry.\n\n\n# table\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The table user-defined id\n\n\n# Outputs\n# creationTime\n * Type: string\n\n> The time when this table was created\n\n\n# datasetId\n * Type: string\n\n> The dataset's id\n\n\n# definition\n * Type: object\n\n> The table definition\n\n\n# definition.externalTableDefinition\n * Type: object\n\n> Returns the external table definition if the type is EXTERNAL\n\n\n# definition.materializedViewDefinition\n * Type: object\n\n> Returns the materialized view definition if the type is MATERIALIZED_VIEW\n\n\n# definition.schema\n * Type: object\n\n> Returns the table's schema.\n\n\n# definition.standardTableDefinition\n * Type: object\n\n> Returns the table definition if the type is TABLE\n\n\n# definition.type\n * Type: string\n\n> Returns the table's type.\n\n\n# definition.viewDefinition\n * Type: object\n\n> Returns the view definition if the type is VIEW\n\n\n# description\n * Type: string\n\n> The user-friendly description for the table\n\n\n# encryptionConfiguration\n * Type: object\n\n> The encryption configuration\n\n\n# encryptionConfiguration.kmsKeyName\n * Type: string\n\n# etag\n * Type: string\n\n> The hash of the table resource\n\n\n# expirationTime\n * Type: string\n\n> Returns the time when this table expires\n\n\nIf not present, the table will persist indefinitely. Expired tables will be deleted and their storage reclaimed.\n\n# externalTableDefinition.autodetect\n * Type: boolean\n\n> Returns whether automatic detection of schema and format options should be performed.\n\n\n# externalTableDefinition.compression\n * Type: string\n\n> Returns the compression type of the data source.\n\n\n# externalTableDefinition.ignoreUnknownValues\n * Type: boolean\n\n> Returns whether BigQuery should allow extra values that are not represented in the table schema.\n\n\nIf true, the extra values are ignored. If false, records with extra columns are treated as bad records, and if there are too many bad records, an invalid error is returned in the job result.\n\n# externalTableDefinition.maxBadRecords\n * Type: integer\n\n> Returns the maximum number of bad records that BigQuery can ignore when reading data.\n\n\nIf the number of bad records exceeds this value, an invalid error is returned in the job result.\n\n# externalTableDefinition.sourceUris\n * Type: array\n * SubType: string\n\n> Returns the fully-qualified URIs that point to your data in Google Cloud Storage.\n\n\nEach URI can\n\n * contain one '*' wildcard character that must come after the bucket's name. Size limits related\n * to load jobs apply to external data sources, plus an additional limit of 10 GB maximum size\n * across all URIs.\n\n# friendlyName\n * Type: string\n\n> The user-friendly name for the table\n\n\n# generatedId\n * Type: string\n\n> The service-generated id for the table\n\n\n# labels\n * Type: object\n\n> Return a map for labels applied to the table\n\n\n# lastModifiedTime\n * Type: string\n\n> The time when this table was last modified\n\n\n# materializedViewDefinition.enableRefresh\n * Type: boolean\n\n> is enable automatic refresh of the materialized view when the base table is updated\n\n\n# materializedViewDefinition.lastRefreshDate\n * Type: string\n\n> Date when this materialized view was last modified\n\n\n# materializedViewDefinition.query\n * Type: string\n\n> the query whose result is persisted\n\n\n# materializedViewDefinition.refreshIntervalMs\n * Type: integer\n\n> the maximum frequency at which this materialized view will be refreshed\n\n\n# numBytes\n * Type: integer\n\n> The size of this table in bytes\n\n\n# numLongTermBytes\n * Type: integer\n\n> The number of bytes considered \"long-term storage\" for reduced billing purposes.\n\n\n# numRows\n * Type: integer\n\n> The number of rows of data in this table\n\n\n# projectId\n * Type: string\n\n> The project's id\n\n\n# range.end\n * Type: integer\n\n# range.interval\n * Type: integer\n\n# range.start\n * Type: integer\n\n# rangePartitioning.field\n * Type: string\n\n# rangePartitioning.range\n * Type: object\n\n# requirePartitionFilter\n * Type: boolean\n\n> Return true if a partition filter (that can be used for partition elimination) is required for queries over this table.\n\n\n# selfLink\n * Type: string\n\n> The URL that can be used to access the resource again. The returned URL can be used for get or update requests.\n\n\n# standardTableDefinition.clustering\n * Type: object\n\n> Returns the clustering configuration for this table. If {@code null}, the table is not clustered.\n\n\n# standardTableDefinition.rangePartitioning\n * Type: object\n\n> Returns the range partitioning configuration for this table. If {@code null}, the table is not range-partitioned.\n\n\n# standardTableDefinition.streamingBuffer\n * Type: object\n\n> Returns information on the table's streaming buffer if any exists. Returns {@code null} if no streaming buffer exists.\n\n\n# standardTableDefinition.timePartitioning\n * Type: object\n\n> Returns the time partitioning configuration for this table. If {@code null}, the table is not time-partitioned.\n\n\n# streamingBuffer.estimatedBytes\n * Type: integer\n\n# streamingBuffer.estimatedRows\n * Type: integer\n\n# streamingBuffer.oldestEntryTime\n * Type: integer\n\n# table\n * Type: string\n\n> The table name\n\n\n# viewDefinition.query\n * Type: string\n\n> The query whose result is persisted\n\n\n# viewDefinition.viewUserDefinedFunctions\n * Type: array\n * SubType: object\n\n> User defined functions that can be used by query. Returns null if not set.",normalizedContent:"# tablemetadata\ntype: \"org.kestra.task.gcp.bigquery.tablemetadata\"\n\n\n> get table metadata\n\n\n# inputs\n# dataset\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the dataset's user-defined id\n\n\n# ifnotexists\n * type: string\n * dynamic: ❓\n * required: ❌\n * default: error\n\n> policy to apply if a table don't exists.\n\n\nif the policy is skip, the output will contain only null value, otherwize an error is raised.\n\n# location\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the geographic location where the dataset should reside\n\n\nthis property is experimental\nand might be subject to change or removed.\n\nsee dataset location\n\n# projectid\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the gcp project id\n\n\n# retryauto\n * type: ====\n * dynamic: ❓\n * required: ❌\n\n# retrymessages\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n * default: [due to concurrent update]\n\n> the message that are valid for a automatic retry.\n\n\nmessage is tested as a substring of the full message and case insensitive\n\n# retryreasons\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n * default: [ratelimitexceeded, jobbackenderror]\n\n> the reason that are valid for a automatic retry.\n\n\n# table\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the table user-defined id\n\n\n# outputs\n# creationtime\n * type: string\n\n> the time when this table was created\n\n\n# datasetid\n * type: string\n\n> the dataset's id\n\n\n# definition\n * type: object\n\n> the table definition\n\n\n# definition.externaltabledefinition\n * type: object\n\n> returns the external table definition if the type is external\n\n\n# definition.materializedviewdefinition\n * type: object\n\n> returns the materialized view definition if the type is materialized_view\n\n\n# definition.schema\n * type: object\n\n> returns the table's schema.\n\n\n# definition.standardtabledefinition\n * type: object\n\n> returns the table definition if the type is table\n\n\n# definition.type\n * type: string\n\n> returns the table's type.\n\n\n# definition.viewdefinition\n * type: object\n\n> returns the view definition if the type is view\n\n\n# description\n * type: string\n\n> the user-friendly description for the table\n\n\n# encryptionconfiguration\n * type: object\n\n> the encryption configuration\n\n\n# encryptionconfiguration.kmskeyname\n * type: string\n\n# etag\n * type: string\n\n> the hash of the table resource\n\n\n# expirationtime\n * type: string\n\n> returns the time when this table expires\n\n\nif not present, the table will persist indefinitely. expired tables will be deleted and their storage reclaimed.\n\n# externaltabledefinition.autodetect\n * type: boolean\n\n> returns whether automatic detection of schema and format options should be performed.\n\n\n# externaltabledefinition.compression\n * type: string\n\n> returns the compression type of the data source.\n\n\n# externaltabledefinition.ignoreunknownvalues\n * type: boolean\n\n> returns whether bigquery should allow extra values that are not represented in the table schema.\n\n\nif true, the extra values are ignored. if false, records with extra columns are treated as bad records, and if there are too many bad records, an invalid error is returned in the job result.\n\n# externaltabledefinition.maxbadrecords\n * type: integer\n\n> returns the maximum number of bad records that bigquery can ignore when reading data.\n\n\nif the number of bad records exceeds this value, an invalid error is returned in the job result.\n\n# externaltabledefinition.sourceuris\n * type: array\n * subtype: string\n\n> returns the fully-qualified uris that point to your data in google cloud storage.\n\n\neach uri can\n\n * contain one '*' wildcard character that must come after the bucket's name. size limits related\n * to load jobs apply to external data sources, plus an additional limit of 10 gb maximum size\n * across all uris.\n\n# friendlyname\n * type: string\n\n> the user-friendly name for the table\n\n\n# generatedid\n * type: string\n\n> the service-generated id for the table\n\n\n# labels\n * type: object\n\n> return a map for labels applied to the table\n\n\n# lastmodifiedtime\n * type: string\n\n> the time when this table was last modified\n\n\n# materializedviewdefinition.enablerefresh\n * type: boolean\n\n> is enable automatic refresh of the materialized view when the base table is updated\n\n\n# materializedviewdefinition.lastrefreshdate\n * type: string\n\n> date when this materialized view was last modified\n\n\n# materializedviewdefinition.query\n * type: string\n\n> the query whose result is persisted\n\n\n# materializedviewdefinition.refreshintervalms\n * type: integer\n\n> the maximum frequency at which this materialized view will be refreshed\n\n\n# numbytes\n * type: integer\n\n> the size of this table in bytes\n\n\n# numlongtermbytes\n * type: integer\n\n> the number of bytes considered \"long-term storage\" for reduced billing purposes.\n\n\n# numrows\n * type: integer\n\n> the number of rows of data in this table\n\n\n# projectid\n * type: string\n\n> the project's id\n\n\n# range.end\n * type: integer\n\n# range.interval\n * type: integer\n\n# range.start\n * type: integer\n\n# rangepartitioning.field\n * type: string\n\n# rangepartitioning.range\n * type: object\n\n# requirepartitionfilter\n * type: boolean\n\n> return true if a partition filter (that can be used for partition elimination) is required for queries over this table.\n\n\n# selflink\n * type: string\n\n> the url that can be used to access the resource again. the returned url can be used for get or update requests.\n\n\n# standardtabledefinition.clustering\n * type: object\n\n> returns the clustering configuration for this table. if {@code null}, the table is not clustered.\n\n\n# standardtabledefinition.rangepartitioning\n * type: object\n\n> returns the range partitioning configuration for this table. if {@code null}, the table is not range-partitioned.\n\n\n# standardtabledefinition.streamingbuffer\n * type: object\n\n> returns information on the table's streaming buffer if any exists. returns {@code null} if no streaming buffer exists.\n\n\n# standardtabledefinition.timepartitioning\n * type: object\n\n> returns the time partitioning configuration for this table. if {@code null}, the table is not time-partitioned.\n\n\n# streamingbuffer.estimatedbytes\n * type: integer\n\n# streamingbuffer.estimatedrows\n * type: integer\n\n# streamingbuffer.oldestentrytime\n * type: integer\n\n# table\n * type: string\n\n> the table name\n\n\n# viewdefinition.query\n * type: string\n\n> the query whose result is persisted\n\n\n# viewdefinition.viewuserdefinedfunctions\n * type: array\n * subtype: object\n\n> user defined functions that can be used by query. returns null if not set.",charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"Copy",frontmatter:{title:"Copy",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Copy"},{property:"og:description",content:"Copy | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.Copy.html"},{name:"twitter:title",content:"Copy"},{name:"twitter:description",content:"Copy | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.Copy.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Copy | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.Copy.html",relativePath:"plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.Copy.md",key:"v-3f13b63a",path:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.Copy.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:148},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:284},{level:3,title:"delete",slug:"delete",normalizedTitle:"delete",charIndex:267},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:241},{level:3,title:"projectId",slug:"projectid",normalizedTitle:"projectid",charIndex:496},{level:3,title:"to",slug:"to",normalizedTitle:"to",charIndex:109},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:655},{level:3,title:"uri",slug:"uri",normalizedTitle:"uri",charIndex:665}],headersStr:"Examples Inputs delete from projectId to Outputs uri",content:'# Copy\ntype: "org.kestra.task.gcp.gcs.Copy"\n\n\n> Copy a file between bucket\n\n\nCopy the file between Internal Storage or Google Cloud Storage file\n\n# Examples\n> Move a file between bucket path\n\n\nid: "copy"\ntype: "org.kestra.task.gcp.gcs.Copy"\nfrom: "{{ inputs.file }}"\ndelete: true\n\n\n# Inputs\n# delete\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n> Whether to delete the source files (from parameter) on success copy\n\n\n# from\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The file to copy\n\n\n# projectId\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The GCP project id\n\n\n# to\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The destination path\n\n\n# Outputs\n# uri\n * Type: object\n\n> The destination full uri\n\n\nThe full url will be like gs://{bucket}/{path}/{file}',normalizedContent:'# copy\ntype: "org.kestra.task.gcp.gcs.copy"\n\n\n> copy a file between bucket\n\n\ncopy the file between internal storage or google cloud storage file\n\n# examples\n> move a file between bucket path\n\n\nid: "copy"\ntype: "org.kestra.task.gcp.gcs.copy"\nfrom: "{{ inputs.file }}"\ndelete: true\n\n\n# inputs\n# delete\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n> whether to delete the source files (from parameter) on success copy\n\n\n# from\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the file to copy\n\n\n# projectid\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the gcp project id\n\n\n# to\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the destination path\n\n\n# outputs\n# uri\n * type: object\n\n> the destination full uri\n\n\nthe full url will be like gs://{bucket}/{path}/{file}',charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"CreateBucket",frontmatter:{title:"CreateBucket",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"CreateBucket"},{property:"og:description",content:"CreateBucket | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.CreateBucket.html"},{name:"twitter:title",content:"CreateBucket"},{name:"twitter:description",content:"CreateBucket | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.CreateBucket.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"CreateBucket | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.CreateBucket.html",relativePath:"plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.CreateBucket.md",key:"v-02718283",path:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.CreateBucket.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:116},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:308},{level:3,title:"acl",slug:"acl",normalizedTitle:"acl",charIndex:317},{level:3,title:"cors",slug:"cors",normalizedTitle:"cors",charIndex:465},{level:3,title:"defaultAcl",slug:"defaultacl",normalizedTitle:"defaultacl",charIndex:646},{level:3,title:"defaultEventBasedHold",slug:"defaulteventbasedhold",normalizedTitle:"defaulteventbasedhold",charIndex:904},{level:3,title:"defaultKmsKeyName",slug:"defaultkmskeyname",normalizedTitle:"defaultkmskeyname",charIndex:1024},{level:3,title:"iamConfiguration",slug:"iamconfiguration",normalizedTitle:"iamconfiguration",charIndex:1141},{level:3,title:"iamConfiguration.uniformBucketLevelAccessLockedTime",slug:"iamconfiguration-uniformbucketlevelaccesslockedtime",normalizedTitle:"iamconfiguration.uniformbucketlevelaccesslockedtime",charIndex:1274},{level:3,title:"ifExists",slug:"ifexists",normalizedTitle:"ifexists",charIndex:1375},{level:3,title:"indexPage",slug:"indexpage",normalizedTitle:"indexpage",charIndex:1498},{level:3,title:"labels",slug:"labels",normalizedTitle:"labels",charIndex:274},{level:3,title:"lifecycleRules",slug:"lifecyclerules",normalizedTitle:"lifecyclerules",charIndex:1776},{level:3,title:"location",slug:"location",normalizedTitle:"location",charIndex:2037},{level:3,title:"logging",slug:"logging",normalizedTitle:"logging",charIndex:2245},{level:3,title:"logging.logBucket",slug:"logging-logbucket",normalizedTitle:"logging.logbucket",charIndex:2447},{level:3,title:"logging.logObjectPrefix",slug:"logging-logobjectprefix",normalizedTitle:"logging.logobjectprefix",charIndex:2513},{level:3,title:"name",slug:"name",normalizedTitle:"name",charIndex:232},{level:3,title:"notFoundPage",slug:"notfoundpage",normalizedTitle:"notfoundpage",charIndex:2665},{level:3,title:"projectId",slug:"projectid",normalizedTitle:"projectid",charIndex:2797},{level:3,title:"requesterPays",slug:"requesterpays",normalizedTitle:"requesterpays",charIndex:2879},{level:3,title:"retentionPeriod",slug:"retentionperiod",normalizedTitle:"retentionperiod",charIndex:3098},{level:3,title:"storageClass",slug:"storageclass",normalizedTitle:"storageclass",charIndex:3326},{level:3,title:"versioningEnabled",slug:"versioningenabled",normalizedTitle:"versioningenabled",charIndex:250},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:3733},{level:3,title:"bucket",slug:"bucket",normalizedTitle:"bucket",charIndex:73},{level:3,title:"bucketUri",slug:"bucketuri",normalizedTitle:"bucketuri",charIndex:3798},{level:3,title:"indexPage",slug:"indexpage-2",normalizedTitle:"indexpage",charIndex:1498},{level:3,title:"location",slug:"location-2",normalizedTitle:"location",charIndex:2037},{level:3,title:"notFoundPage",slug:"notfoundpage-2",normalizedTitle:"notfoundpage",charIndex:2665}],headersStr:"Examples Inputs acl cors defaultAcl defaultEventBasedHold defaultKmsKeyName iamConfiguration iamConfiguration.uniformBucketLevelAccessLockedTime ifExists indexPage labels lifecycleRules location logging logging.logBucket logging.logObjectPrefix name notFoundPage projectId requesterPays retentionPeriod storageClass versioningEnabled Outputs bucket bucketUri indexPage location notFoundPage",content:"# CreateBucket\ntype: \"org.kestra.task.gcp.gcs.CreateBucket\"\n\n\n> Create a bucket or update if it already exists.\n\n\n# Examples\n> Create a new bucket with some options\n\n\nid: \"create_bucket\"\ntype: \"org.kestra.task.gcp.gcs.CreateBucket\"\nname: \"my-bucket\"\nversioningEnabled: true\nlabels: \n  my-label: my-value\n\n\n# Inputs\n# acl\n * Type: array\n * SubType: object\n * Dynamic: ❓\n * Required: ❌\n\n> The bucket's access control configuration\n\n\nSee About Access Control Lists\n\n# cors\n * Type: array\n * SubType: object\n * Dynamic: ❓\n * Required: ❌\n\n> The bucket's Cross-Origin Resource Sharing (CORS) configuration\n\n\nSee Cross-Origin Resource Sharing (CORS)\n\n# defaultAcl\n * Type: array\n * SubType: object\n * Dynamic: ❓\n * Required: ❌\n\n> The default access control configuration\n\n\nThe access control configuration to apply to bucket's blobs when no other\nconfiguration is specified.\n\nSsee About Access Control Lists\n\n# defaultEventBasedHold\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n> The default event-based hold for this bucket\n\n\n# defaultKmsKeyName\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The default Cloud KMS key name for this bucket\n\n\n# iamConfiguration\n * Type: object\n * Dynamic: ❓\n * Required: ❌\n\n> The Bucket's IAM Configuration\n\n\nSee uniform bucket-level access\n\n# iamConfiguration.uniformBucketLevelAccessLockedTime\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n# ifExists\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Default: ERROR\n\n> Policy to apply if a bucket already exists.\n\n\n# indexPage\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The bucket's website index page\n\n\nBehaves as the bucket's directory index where missing\nblobs are treated as potential directories.\n\n# labels\n * Type: object\n * Dynamic: ❓\n * Required: ❌\n\n> The labels of this bucket\n\n\n# lifecycleRules\n * Type: array\n * SubType: object\n * Dynamic: ❓\n * Required: ❌\n\n> The bucket's lifecycle configuration\n\n\nThis configuration is expressed as a number of lifecycle rules, consisting of an\naction and a condition.\n\nSee Object Lifecycle Management\n\n# location\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The bucket's location\n\n\nData for blobs in the bucket resides in physical storage within\nthis region. A list of supported values is available here.\n\n# logging\n * Type: object\n * Dynamic: ❓\n * Required: ❌\n\n> The bucket's logging configuration\n\n\nThis configuration defines the destination bucket and optional name\nprefix for the current bucket's logs.\n\n# logging.logBucket\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# logging.logObjectPrefix\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# name\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> Bucket's unique name\n\n\n# notFoundPage\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The custom object to return when a requested resource is not found\n\n\n# projectId\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The GCP project id\n\n\n# requesterPays\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n> Whether the requester pays or not.\n\n\nWhether a user accessing the bucket or an object it contains should assume the transit\ncosts related to the access.\n\n# retentionPeriod\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n> Retention period\n\n\nIf policy is not locked this value can be cleared, increased, and decreased. If policy is\nlocked the retention period can only be increased.\n\n# storageClass\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The bucket's storage class\n\n\nThis defines how blobs in the bucket are stored and\ndetermines the SLA and the cost of storage. A list of supported values is available here.\n\n# versioningEnabled\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n> Whether versioning should be enabled for this bucket\n\n\nWhen set to true, versioning is\nfully enabled.\n\n# Outputs\n# bucket\n * Type: string\n\n> The bucket's unique name\n\n\n# bucketUri\n * Type: object\n\n> The bucket's URI.\n\n\n# indexPage\n * Type: string\n\n> The bucket's website index page.\n\n\n# location\n * Type: string\n\n> The bucket's location\n\n\n# notFoundPage\n * Type: string\n\n> The custom object to return when a requested resource is not found.",normalizedContent:"# createbucket\ntype: \"org.kestra.task.gcp.gcs.createbucket\"\n\n\n> create a bucket or update if it already exists.\n\n\n# examples\n> create a new bucket with some options\n\n\nid: \"create_bucket\"\ntype: \"org.kestra.task.gcp.gcs.createbucket\"\nname: \"my-bucket\"\nversioningenabled: true\nlabels: \n  my-label: my-value\n\n\n# inputs\n# acl\n * type: array\n * subtype: object\n * dynamic: ❓\n * required: ❌\n\n> the bucket's access control configuration\n\n\nsee about access control lists\n\n# cors\n * type: array\n * subtype: object\n * dynamic: ❓\n * required: ❌\n\n> the bucket's cross-origin resource sharing (cors) configuration\n\n\nsee cross-origin resource sharing (cors)\n\n# defaultacl\n * type: array\n * subtype: object\n * dynamic: ❓\n * required: ❌\n\n> the default access control configuration\n\n\nthe access control configuration to apply to bucket's blobs when no other\nconfiguration is specified.\n\nssee about access control lists\n\n# defaulteventbasedhold\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n> the default event-based hold for this bucket\n\n\n# defaultkmskeyname\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the default cloud kms key name for this bucket\n\n\n# iamconfiguration\n * type: object\n * dynamic: ❓\n * required: ❌\n\n> the bucket's iam configuration\n\n\nsee uniform bucket-level access\n\n# iamconfiguration.uniformbucketlevelaccesslockedtime\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n# ifexists\n * type: string\n * dynamic: ❓\n * required: ❌\n * default: error\n\n> policy to apply if a bucket already exists.\n\n\n# indexpage\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the bucket's website index page\n\n\nbehaves as the bucket's directory index where missing\nblobs are treated as potential directories.\n\n# labels\n * type: object\n * dynamic: ❓\n * required: ❌\n\n> the labels of this bucket\n\n\n# lifecyclerules\n * type: array\n * subtype: object\n * dynamic: ❓\n * required: ❌\n\n> the bucket's lifecycle configuration\n\n\nthis configuration is expressed as a number of lifecycle rules, consisting of an\naction and a condition.\n\nsee object lifecycle management\n\n# location\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the bucket's location\n\n\ndata for blobs in the bucket resides in physical storage within\nthis region. a list of supported values is available here.\n\n# logging\n * type: object\n * dynamic: ❓\n * required: ❌\n\n> the bucket's logging configuration\n\n\nthis configuration defines the destination bucket and optional name\nprefix for the current bucket's logs.\n\n# logging.logbucket\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# logging.logobjectprefix\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# name\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> bucket's unique name\n\n\n# notfoundpage\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the custom object to return when a requested resource is not found\n\n\n# projectid\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the gcp project id\n\n\n# requesterpays\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n> whether the requester pays or not.\n\n\nwhether a user accessing the bucket or an object it contains should assume the transit\ncosts related to the access.\n\n# retentionperiod\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n> retention period\n\n\nif policy is not locked this value can be cleared, increased, and decreased. if policy is\nlocked the retention period can only be increased.\n\n# storageclass\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the bucket's storage class\n\n\nthis defines how blobs in the bucket are stored and\ndetermines the sla and the cost of storage. a list of supported values is available here.\n\n# versioningenabled\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n> whether versioning should be enabled for this bucket\n\n\nwhen set to true, versioning is\nfully enabled.\n\n# outputs\n# bucket\n * type: string\n\n> the bucket's unique name\n\n\n# bucketuri\n * type: object\n\n> the bucket's uri.\n\n\n# indexpage\n * type: string\n\n> the bucket's website index page.\n\n\n# location\n * type: string\n\n> the bucket's location\n\n\n# notfoundpage\n * type: string\n\n> the custom object to return when a requested resource is not found.",charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"Delete",frontmatter:{title:"Delete",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Delete"},{property:"og:description",content:"Delete | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.Delete.html"},{name:"twitter:title",content:"Delete"},{name:"twitter:description",content:"Delete | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.Delete.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Delete | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.Delete.html",relativePath:"plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.Delete.md",key:"v-780273ba",path:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.Delete.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:87},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:187},{level:3,title:"errorOnMissing",slug:"erroronmissing",normalizedTitle:"erroronmissing",charIndex:196},{level:3,title:"projectId",slug:"projectid",normalizedTitle:"projectid",charIndex:305},{level:3,title:"uri",slug:"uri",normalizedTitle:"uri",charIndex:148},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:463},{level:3,title:"deleted",slug:"deleted",normalizedTitle:"deleted",charIndex:473},{level:3,title:"uri",slug:"uri-2",normalizedTitle:"uri",charIndex:148}],headersStr:"Examples Inputs errorOnMissing projectId uri Outputs deleted uri",content:'# Delete\ntype: "org.kestra.task.gcp.gcs.Delete"\n\n\n> Delete a file to a GCS bucket.\n\n\n# Examples\nid: "delete"\ntype: "org.kestra.task.gcp.gcs.Delete"\nuri: "gs://my_bucket/dir/file.csv"\n\n\n# Inputs\n# errorOnMissing\n * Type: boolean\n * Dynamic: ✔️\n * Required: ❌\n\n> raise an error if the file is not found\n\n\n# projectId\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The GCP project id\n\n\n# uri\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The file to delete\n\n\n# Outputs\n# deleted\n * Type: boolean\n\n> If the files was really deleted\n\n\n# uri\n * Type: object\n\n> The deleted uri',normalizedContent:'# delete\ntype: "org.kestra.task.gcp.gcs.delete"\n\n\n> delete a file to a gcs bucket.\n\n\n# examples\nid: "delete"\ntype: "org.kestra.task.gcp.gcs.delete"\nuri: "gs://my_bucket/dir/file.csv"\n\n\n# inputs\n# erroronmissing\n * type: boolean\n * dynamic: ✔️\n * required: ❌\n\n> raise an error if the file is not found\n\n\n# projectid\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the gcp project id\n\n\n# uri\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the file to delete\n\n\n# outputs\n# deleted\n * type: boolean\n\n> if the files was really deleted\n\n\n# uri\n * type: object\n\n> the deleted uri',charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"DeleteBucket",frontmatter:{title:"DeleteBucket",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"DeleteBucket"},{property:"og:description",content:"DeleteBucket | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.DeleteBucket.html"},{name:"twitter:title",content:"DeleteBucket"},{name:"twitter:description",content:"DeleteBucket | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.DeleteBucket.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"DeleteBucket | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.DeleteBucket.html",relativePath:"plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.DeleteBucket.md",key:"v-6a9eb8e3",path:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.DeleteBucket.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:85},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:201},{level:3,title:"name",slug:"name",normalizedTitle:"name",charIndex:179},{level:3,title:"projectId",slug:"projectid",normalizedTitle:"projectid",charIndex:290},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:372},{level:3,title:"bucket",slug:"bucket",normalizedTitle:"bucket",charIndex:73},{level:3,title:"bucketUri",slug:"bucketuri",normalizedTitle:"bucketuri",charIndex:437}],headersStr:"Examples Inputs name projectId Outputs bucket bucketUri",content:'# DeleteBucket\ntype: "org.kestra.task.gcp.gcs.DeleteBucket"\n\n\n> Delete a bucket.\n\n\n# Examples\n> Delete a bucket\n\n\nid: "delete_bucket"\ntype: "org.kestra.task.gcp.gcs.DeleteBucket"\nname: "my-bucket"\n\n\n# Inputs\n# name\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> Bucket\'s unique name\n\n\n# projectId\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The GCP project id\n\n\n# Outputs\n# bucket\n * Type: string\n\n> The bucket\'s unique name\n\n\n# bucketUri\n * Type: object\n\n> The bucket\'s URI',normalizedContent:'# deletebucket\ntype: "org.kestra.task.gcp.gcs.deletebucket"\n\n\n> delete a bucket.\n\n\n# examples\n> delete a bucket\n\n\nid: "delete_bucket"\ntype: "org.kestra.task.gcp.gcs.deletebucket"\nname: "my-bucket"\n\n\n# inputs\n# name\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> bucket\'s unique name\n\n\n# projectid\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the gcp project id\n\n\n# outputs\n# bucket\n * type: string\n\n> the bucket\'s unique name\n\n\n# bucketuri\n * type: object\n\n> the bucket\'s uri',charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"UpdateBucket",frontmatter:{title:"UpdateBucket",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"UpdateBucket"},{property:"og:description",content:"UpdateBucket | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.UpdateBucket.html"},{name:"twitter:title",content:"UpdateBucket"},{name:"twitter:description",content:"UpdateBucket | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.UpdateBucket.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"UpdateBucket | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.UpdateBucket.html",relativePath:"plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.UpdateBucket.md",key:"v-23af7da3",path:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.UpdateBucket.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:85},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:240},{level:3,title:"acl",slug:"acl",normalizedTitle:"acl",charIndex:249},{level:3,title:"cors",slug:"cors",normalizedTitle:"cors",charIndex:397},{level:3,title:"defaultAcl",slug:"defaultacl",normalizedTitle:"defaultacl",charIndex:578},{level:3,title:"defaultEventBasedHold",slug:"defaulteventbasedhold",normalizedTitle:"defaulteventbasedhold",charIndex:836},{level:3,title:"defaultKmsKeyName",slug:"defaultkmskeyname",normalizedTitle:"defaultkmskeyname",charIndex:956},{level:3,title:"iamConfiguration",slug:"iamconfiguration",normalizedTitle:"iamconfiguration",charIndex:1073},{level:3,title:"iamConfiguration.uniformBucketLevelAccessLockedTime",slug:"iamconfiguration-uniformbucketlevelaccesslockedtime",normalizedTitle:"iamconfiguration.uniformbucketlevelaccesslockedtime",charIndex:1206},{level:3,title:"indexPage",slug:"indexpage",normalizedTitle:"indexpage",charIndex:1307},{level:3,title:"labels",slug:"labels",normalizedTitle:"labels",charIndex:115},{level:3,title:"lifecycleRules",slug:"lifecyclerules",normalizedTitle:"lifecyclerules",charIndex:1585},{level:3,title:"location",slug:"location",normalizedTitle:"location",charIndex:1846},{level:3,title:"logging",slug:"logging",normalizedTitle:"logging",charIndex:2054},{level:3,title:"logging.logBucket",slug:"logging-logbucket",normalizedTitle:"logging.logbucket",charIndex:2256},{level:3,title:"logging.logObjectPrefix",slug:"logging-logobjectprefix",normalizedTitle:"logging.logobjectprefix",charIndex:2322},{level:3,title:"name",slug:"name",normalizedTitle:"name",charIndex:189},{level:3,title:"notFoundPage",slug:"notfoundpage",normalizedTitle:"notfoundpage",charIndex:2474},{level:3,title:"projectId",slug:"projectid",normalizedTitle:"projectid",charIndex:2606},{level:3,title:"requesterPays",slug:"requesterpays",normalizedTitle:"requesterpays",charIndex:2688},{level:3,title:"retentionPeriod",slug:"retentionperiod",normalizedTitle:"retentionperiod",charIndex:2907},{level:3,title:"storageClass",slug:"storageclass",normalizedTitle:"storageclass",charIndex:3135},{level:3,title:"versioningEnabled",slug:"versioningenabled",normalizedTitle:"versioningenabled",charIndex:3370},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:3542},{level:3,title:"bucket",slug:"bucket",normalizedTitle:"bucket",charIndex:73},{level:3,title:"bucketUri",slug:"bucketuri",normalizedTitle:"bucketuri",charIndex:3607},{level:3,title:"indexPage",slug:"indexpage-2",normalizedTitle:"indexpage",charIndex:1307},{level:3,title:"location",slug:"location-2",normalizedTitle:"location",charIndex:1846},{level:3,title:"notFoundPage",slug:"notfoundpage-2",normalizedTitle:"notfoundpage",charIndex:2474}],headersStr:"Examples Inputs acl cors defaultAcl defaultEventBasedHold defaultKmsKeyName iamConfiguration iamConfiguration.uniformBucketLevelAccessLockedTime indexPage labels lifecycleRules location logging logging.logBucket logging.logObjectPrefix name notFoundPage projectId requesterPays retentionPeriod storageClass versioningEnabled Outputs bucket bucketUri indexPage location notFoundPage",content:"# UpdateBucket\ntype: \"org.kestra.task.gcp.gcs.UpdateBucket\"\n\n\n> Update a bucket.\n\n\n# Examples\n> Update some bucket labels\n\n\nid: \"update_bucket\"\ntype: \"org.kestra.task.gcp.gcs.UpdateBucket\"\nname: \"my-bucket\"\nlabels:\n  my-label: my-value\n\n\n# Inputs\n# acl\n * Type: array\n * SubType: object\n * Dynamic: ❓\n * Required: ❌\n\n> The bucket's access control configuration\n\n\nSee About Access Control Lists\n\n# cors\n * Type: array\n * SubType: object\n * Dynamic: ❓\n * Required: ❌\n\n> The bucket's Cross-Origin Resource Sharing (CORS) configuration\n\n\nSee Cross-Origin Resource Sharing (CORS)\n\n# defaultAcl\n * Type: array\n * SubType: object\n * Dynamic: ❓\n * Required: ❌\n\n> The default access control configuration\n\n\nThe access control configuration to apply to bucket's blobs when no other\nconfiguration is specified.\n\nSsee About Access Control Lists\n\n# defaultEventBasedHold\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n> The default event-based hold for this bucket\n\n\n# defaultKmsKeyName\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The default Cloud KMS key name for this bucket\n\n\n# iamConfiguration\n * Type: object\n * Dynamic: ❓\n * Required: ❌\n\n> The Bucket's IAM Configuration\n\n\nSee uniform bucket-level access\n\n# iamConfiguration.uniformBucketLevelAccessLockedTime\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n# indexPage\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The bucket's website index page\n\n\nBehaves as the bucket's directory index where missing\nblobs are treated as potential directories.\n\n# labels\n * Type: object\n * Dynamic: ❓\n * Required: ❌\n\n> The labels of this bucket\n\n\n# lifecycleRules\n * Type: array\n * SubType: object\n * Dynamic: ❓\n * Required: ❌\n\n> The bucket's lifecycle configuration\n\n\nThis configuration is expressed as a number of lifecycle rules, consisting of an\naction and a condition.\n\nSee Object Lifecycle Management\n\n# location\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The bucket's location\n\n\nData for blobs in the bucket resides in physical storage within\nthis region. A list of supported values is available here.\n\n# logging\n * Type: object\n * Dynamic: ❓\n * Required: ❌\n\n> The bucket's logging configuration\n\n\nThis configuration defines the destination bucket and optional name\nprefix for the current bucket's logs.\n\n# logging.logBucket\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# logging.logObjectPrefix\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n# name\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> Bucket's unique name\n\n\n# notFoundPage\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The custom object to return when a requested resource is not found\n\n\n# projectId\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The GCP project id\n\n\n# requesterPays\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n> Whether the requester pays or not.\n\n\nWhether a user accessing the bucket or an object it contains should assume the transit\ncosts related to the access.\n\n# retentionPeriod\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n> Retention period\n\n\nIf policy is not locked this value can be cleared, increased, and decreased. If policy is\nlocked the retention period can only be increased.\n\n# storageClass\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The bucket's storage class\n\n\nThis defines how blobs in the bucket are stored and\ndetermines the SLA and the cost of storage. A list of supported values is available here.\n\n# versioningEnabled\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n> Whether versioning should be enabled for this bucket\n\n\nWhen set to true, versioning is\nfully enabled.\n\n# Outputs\n# bucket\n * Type: string\n\n> The bucket's unique name\n\n\n# bucketUri\n * Type: object\n\n> The bucket's URI.\n\n\n# indexPage\n * Type: string\n\n> The bucket's website index page.\n\n\n# location\n * Type: string\n\n> The bucket's location\n\n\n# notFoundPage\n * Type: string\n\n> The custom object to return when a requested resource is not found.",normalizedContent:"# updatebucket\ntype: \"org.kestra.task.gcp.gcs.updatebucket\"\n\n\n> update a bucket.\n\n\n# examples\n> update some bucket labels\n\n\nid: \"update_bucket\"\ntype: \"org.kestra.task.gcp.gcs.updatebucket\"\nname: \"my-bucket\"\nlabels:\n  my-label: my-value\n\n\n# inputs\n# acl\n * type: array\n * subtype: object\n * dynamic: ❓\n * required: ❌\n\n> the bucket's access control configuration\n\n\nsee about access control lists\n\n# cors\n * type: array\n * subtype: object\n * dynamic: ❓\n * required: ❌\n\n> the bucket's cross-origin resource sharing (cors) configuration\n\n\nsee cross-origin resource sharing (cors)\n\n# defaultacl\n * type: array\n * subtype: object\n * dynamic: ❓\n * required: ❌\n\n> the default access control configuration\n\n\nthe access control configuration to apply to bucket's blobs when no other\nconfiguration is specified.\n\nssee about access control lists\n\n# defaulteventbasedhold\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n> the default event-based hold for this bucket\n\n\n# defaultkmskeyname\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the default cloud kms key name for this bucket\n\n\n# iamconfiguration\n * type: object\n * dynamic: ❓\n * required: ❌\n\n> the bucket's iam configuration\n\n\nsee uniform bucket-level access\n\n# iamconfiguration.uniformbucketlevelaccesslockedtime\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n# indexpage\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the bucket's website index page\n\n\nbehaves as the bucket's directory index where missing\nblobs are treated as potential directories.\n\n# labels\n * type: object\n * dynamic: ❓\n * required: ❌\n\n> the labels of this bucket\n\n\n# lifecyclerules\n * type: array\n * subtype: object\n * dynamic: ❓\n * required: ❌\n\n> the bucket's lifecycle configuration\n\n\nthis configuration is expressed as a number of lifecycle rules, consisting of an\naction and a condition.\n\nsee object lifecycle management\n\n# location\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the bucket's location\n\n\ndata for blobs in the bucket resides in physical storage within\nthis region. a list of supported values is available here.\n\n# logging\n * type: object\n * dynamic: ❓\n * required: ❌\n\n> the bucket's logging configuration\n\n\nthis configuration defines the destination bucket and optional name\nprefix for the current bucket's logs.\n\n# logging.logbucket\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# logging.logobjectprefix\n * type: string\n * dynamic: ❓\n * required: ❌\n\n# name\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> bucket's unique name\n\n\n# notfoundpage\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the custom object to return when a requested resource is not found\n\n\n# projectid\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the gcp project id\n\n\n# requesterpays\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n> whether the requester pays or not.\n\n\nwhether a user accessing the bucket or an object it contains should assume the transit\ncosts related to the access.\n\n# retentionperiod\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n> retention period\n\n\nif policy is not locked this value can be cleared, increased, and decreased. if policy is\nlocked the retention period can only be increased.\n\n# storageclass\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the bucket's storage class\n\n\nthis defines how blobs in the bucket are stored and\ndetermines the sla and the cost of storage. a list of supported values is available here.\n\n# versioningenabled\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n> whether versioning should be enabled for this bucket\n\n\nwhen set to true, versioning is\nfully enabled.\n\n# outputs\n# bucket\n * type: string\n\n> the bucket's unique name\n\n\n# bucketuri\n * type: object\n\n> the bucket's uri.\n\n\n# indexpage\n * type: string\n\n> the bucket's website index page.\n\n\n# location\n * type: string\n\n> the bucket's location\n\n\n# notfoundpage\n * type: string\n\n> the custom object to return when a requested resource is not found.",charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"List",frontmatter:{title:"List",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"List"},{property:"og:description",content:"List | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.List.html"},{name:"twitter:title",content:"List"},{name:"twitter:description",content:"List | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.List.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"List | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.List.html",relativePath:"plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.List.md",key:"v-50e7ae83",path:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.List.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:79},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:195},{level:3,title:"allVersions",slug:"allversions",normalizedTitle:"allversions",charIndex:204},{level:3,title:"filter",slug:"filter",normalizedTitle:"filter",charIndex:338},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:163},{level:3,title:"listingType",slug:"listingtype",normalizedTitle:"listingtype",charIndex:525},{level:3,title:"projectId",slug:"projectid",normalizedTitle:"projectid",charIndex:667},{level:3,title:"regExp",slug:"regexp",normalizedTitle:"regexp",charIndex:749},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:841},{level:3,title:"blobs",slug:"blobs",normalizedTitle:"blobs",charIndex:851}],headersStr:"Examples Inputs allVersions filter from listingType projectId regExp Outputs blobs",content:'# List\ntype: "org.kestra.task.gcp.gcs.List"\n\n\n> List file on a GCS bucket.\n\n\n# Examples\n> List files in a bucket\n\n\nid: "list"\ntype: "org.kestra.task.gcp.gcs.List"\nfrom: "gs://my_bucket/dir/"\n\n\n# Inputs\n# allVersions\n * Type: boolean\n * Dynamic: ✔️\n * Required: ❌\n\n> If set to true, lists all versions of a blob. The default is false.\n\n\n# filter\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Default: BOTH\n\n> The filter files or directory\n\n\n# from\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The directory to list\n\n\n# listingType\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Default: DIRECTORY\n\n> The listing type you want (like directory or recursive)\n\n\n# projectId\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The GCP project id\n\n\n# regExp\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> A regexp to filter on full path\n\n\n# Outputs\n# blobs\n * Type: array\n * SubType: object\n\n> The list of blobs',normalizedContent:'# list\ntype: "org.kestra.task.gcp.gcs.list"\n\n\n> list file on a gcs bucket.\n\n\n# examples\n> list files in a bucket\n\n\nid: "list"\ntype: "org.kestra.task.gcp.gcs.list"\nfrom: "gs://my_bucket/dir/"\n\n\n# inputs\n# allversions\n * type: boolean\n * dynamic: ✔️\n * required: ❌\n\n> if set to true, lists all versions of a blob. the default is false.\n\n\n# filter\n * type: string\n * dynamic: ❓\n * required: ❌\n * default: both\n\n> the filter files or directory\n\n\n# from\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the directory to list\n\n\n# listingtype\n * type: string\n * dynamic: ❓\n * required: ❌\n * default: directory\n\n> the listing type you want (like directory or recursive)\n\n\n# projectid\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the gcp project id\n\n\n# regexp\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> a regexp to filter on full path\n\n\n# outputs\n# blobs\n * type: array\n * subtype: object\n\n> the list of blobs',charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"Upload",frontmatter:{title:"Upload",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Upload"},{property:"og:description",content:"Upload | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.Upload.html"},{name:"twitter:title",content:"Upload"},{name:"twitter:description",content:"Upload | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.Upload.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Upload | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.Upload.html",relativePath:"plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.Upload.md",key:"v-b51bc33a",path:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.Upload.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:87},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:212},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:148},{level:3,title:"projectId",slug:"projectid",normalizedTitle:"projectid",charIndex:296},{level:3,title:"to",slug:"to",normalizedTitle:"to",charIndex:66},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:455},{level:3,title:"uri",slug:"uri",normalizedTitle:"uri",charIndex:465}],headersStr:"Examples Inputs from projectId to Outputs uri",content:'# Upload\ntype: "org.kestra.task.gcp.gcs.Upload"\n\n\n> Upload a file to a GCS bucket.\n\n\n# Examples\nid: "upload"\ntype: "org.kestra.task.gcp.gcs.Upload"\nfrom: "{{ inputs.file }}"\nto: "gs://my_bucket/dir/file.csv"\n\n\n# Inputs\n# from\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The file to copy\n\n\n# projectId\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The GCP project id\n\n\n# to\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The destination path\n\n\n# Outputs\n# uri\n * Type: object',normalizedContent:'# upload\ntype: "org.kestra.task.gcp.gcs.upload"\n\n\n> upload a file to a gcs bucket.\n\n\n# examples\nid: "upload"\ntype: "org.kestra.task.gcp.gcs.upload"\nfrom: "{{ inputs.file }}"\nto: "gs://my_bucket/dir/file.csv"\n\n\n# inputs\n# from\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the file to copy\n\n\n# projectid\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the gcp project id\n\n\n# to\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the destination path\n\n\n# outputs\n# uri\n * type: object',charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"ClusterMetadata",frontmatter:{title:"ClusterMetadata",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"ClusterMetadata"},{property:"og:description",content:"ClusterMetadata | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-gcp/tasks/gke/org.kestra.task.gcp.gke.ClusterMetadata.html"},{name:"twitter:title",content:"ClusterMetadata"},{name:"twitter:description",content:"ClusterMetadata | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/plugins/task-gcp/tasks/gke/org.kestra.task.gcp.gke.ClusterMetadata.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"ClusterMetadata | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/plugins/task-gcp/tasks/gke/org.kestra.task.gcp.gke.ClusterMetadata.html",relativePath:"plugins/task-gcp/tasks/gke/org.kestra.task.gcp.gke.ClusterMetadata.md",key:"v-3f3b5722",path:"/plugins/task-gcp/tasks/gke/org.kestra.task.gcp.gke.ClusterMetadata.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:92},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:294},{level:3,title:"clusterId",slug:"clusterid",normalizedTitle:"clusterid",charIndex:265},{level:3,title:"projectId",slug:"projectid",normalizedTitle:"projectid",charIndex:223},{level:3,title:"zone",slug:"zone",normalizedTitle:"zone",charIndex:248},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:587},{level:3,title:"clusterIpv4Cidr",slug:"clusteripv4cidr",normalizedTitle:"clusteripv4cidr",charIndex:597},{level:3,title:"createTime",slug:"createtime",normalizedTitle:"createtime",charIndex:632},{level:3,title:"description",slug:"description",normalizedTitle:"description",charIndex:662},{level:3,title:"endpoint",slug:"endpoint",normalizedTitle:"endpoint",charIndex:693},{level:3,title:"link",slug:"link",normalizedTitle:"link",charIndex:721},{level:3,title:"location",slug:"location",normalizedTitle:"location",charIndex:745},{level:3,title:"loggingService",slug:"loggingservice",normalizedTitle:"loggingservice",charIndex:773},{level:3,title:"masterAuth",slug:"masterauth",normalizedTitle:"masterauth",charIndex:807},{level:3,title:"masterAuth.clientCertificat",slug:"masterauth-clientcertificat",normalizedTitle:"masterauth.clientcertificat",charIndex:837},{level:3,title:"masterAuth.clientKey",slug:"masterauth-clientkey",normalizedTitle:"masterauth.clientkey",charIndex:884},{level:3,title:"masterAuth.clusterCertificat",slug:"masterauth-clustercertificat",normalizedTitle:"masterauth.clustercertificat",charIndex:924},{level:3,title:"masterAuth.password",slug:"masterauth-password",normalizedTitle:"masterauth.password",charIndex:972},{level:3,title:"masterAuth.username",slug:"masterauth-username",normalizedTitle:"masterauth.username",charIndex:1011},{level:3,title:"monitoringService",slug:"monitoringservice",normalizedTitle:"monitoringservice",charIndex:1265},{level:3,title:"name",slug:"name",normalizedTitle:"name",charIndex:205},{level:3,title:"network",slug:"network",normalizedTitle:"network",charIndex:1326},{level:3,title:"nodePools",slug:"nodepools",normalizedTitle:"nodepools",charIndex:1353},{level:3,title:"nodePoolsCount",slug:"nodepoolscount",normalizedTitle:"nodepoolscount",charIndex:1400},{level:3,title:"project",slug:"project",normalizedTitle:"project",charIndex:223},{level:3,title:"subNetwork",slug:"subnetwork",normalizedTitle:"subnetwork",charIndex:1462},{level:3,title:"zone",slug:"zone-2",normalizedTitle:"zone",charIndex:248}],headersStr:"Examples Inputs clusterId projectId zone Outputs clusterIpv4Cidr createTime description endpoint link location loggingService masterAuth masterAuth.clientCertificat masterAuth.clientKey masterAuth.clusterCertificat masterAuth.password masterAuth.username monitoringService name network nodePools nodePoolsCount project subNetwork zone",content:'# ClusterMetadata\ntype: "org.kestra.task.gcp.gke.ClusterMetadata"\n\n\n> Delete a dataset.\n\n\n# Examples\n> Fetch a gke cluster metadata\n\n\nid: "cluster_metadata"\ntype: "org.kestra.task.gcp.gke.ClusterMetadata"\nname: "gke-metas"\nprojectId: my-project-id\nzone: eu-west-1c\nclusterId: my-cluster-id\n\n\n# Inputs\n# clusterId\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> Cluster id where meta data are fetch\n\n\n# projectId\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Project ID in GCP were is located cluster\n\n\n# zone\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Cluster zone in GCP\n\n\n# Outputs\n# clusterIpv4Cidr\n * Type: string\n\n# createTime\n * Type: string\n\n# description\n * Type: string\n\n# endpoint\n * Type: string\n\n# link\n * Type: string\n\n# location\n * Type: string\n\n# loggingService\n * Type: string\n\n# masterAuth\n * Type: object\n\n# masterAuth.clientCertificat\n * Type: string\n\n# masterAuth.clientKey\n * Type: string\n\n# masterAuth.clusterCertificat\n * Type: string\n\n# masterAuth.password\n * Type: string\n\n# masterAuth.username\n * Type: string\n\n> The username to use for HTTP basic authentication to the master endpoint.\n\n\nFor clusters v1.6.0 and later, basic authentication can be disabled byleaving username unspecified (or setting it to the empty string).\n\n# monitoringService\n * Type: string\n\n# name\n * Type: string\n\n# network\n * Type: string\n\n# nodePools\n * Type: array\n * SubType: object\n\n# nodePoolsCount\n * Type: integer\n\n# project\n * Type: string\n\n# subNetwork\n * Type: string\n\n# zone\n * Type: string',normalizedContent:'# clustermetadata\ntype: "org.kestra.task.gcp.gke.clustermetadata"\n\n\n> delete a dataset.\n\n\n# examples\n> fetch a gke cluster metadata\n\n\nid: "cluster_metadata"\ntype: "org.kestra.task.gcp.gke.clustermetadata"\nname: "gke-metas"\nprojectid: my-project-id\nzone: eu-west-1c\nclusterid: my-cluster-id\n\n\n# inputs\n# clusterid\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> cluster id where meta data are fetch\n\n\n# projectid\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> project id in gcp were is located cluster\n\n\n# zone\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> cluster zone in gcp\n\n\n# outputs\n# clusteripv4cidr\n * type: string\n\n# createtime\n * type: string\n\n# description\n * type: string\n\n# endpoint\n * type: string\n\n# link\n * type: string\n\n# location\n * type: string\n\n# loggingservice\n * type: string\n\n# masterauth\n * type: object\n\n# masterauth.clientcertificat\n * type: string\n\n# masterauth.clientkey\n * type: string\n\n# masterauth.clustercertificat\n * type: string\n\n# masterauth.password\n * type: string\n\n# masterauth.username\n * type: string\n\n> the username to use for http basic authentication to the master endpoint.\n\n\nfor clusters v1.6.0 and later, basic authentication can be disabled byleaving username unspecified (or setting it to the empty string).\n\n# monitoringservice\n * type: string\n\n# name\n * type: string\n\n# network\n * type: string\n\n# nodepools\n * type: array\n * subtype: object\n\n# nodepoolscount\n * type: integer\n\n# project\n * type: string\n\n# subnetwork\n * type: string\n\n# zone\n * type: string',charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"Trigger",frontmatter:{title:"Trigger",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Trigger"},{property:"og:description",content:"Trigger | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-gcp/triggers/gcs/org.kestra.task.gcp.gcs.Trigger.html"},{name:"twitter:title",content:"Trigger"},{name:"twitter:description",content:"Trigger | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/plugins/task-gcp/triggers/gcs/org.kestra.task.gcp.gcs.Trigger.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Trigger | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/plugins/task-gcp/triggers/gcs/org.kestra.task.gcp.gcs.Trigger.html",relativePath:"plugins/task-gcp/triggers/gcs/org.kestra.task.gcp.gcs.Trigger.md",key:"v-625fbfba",path:"/plugins/task-gcp/triggers/gcs/org.kestra.task.gcp.gcs.Trigger.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:97},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:662},{level:3,title:"action",slug:"action",normalizedTitle:"action",charIndex:595},{level:3,title:"filter",slug:"filter",normalizedTitle:"filter",charIndex:763},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:555},{level:3,title:"interval",slug:"interval",normalizedTitle:"interval",charIndex:534},{level:3,title:"interval.seconds",slug:"interval-seconds",normalizedTitle:"interval.seconds",charIndex:1074},{level:3,title:"listingType",slug:"listingtype",normalizedTitle:"listingtype",charIndex:1140},{level:3,title:"moveDirectory",slug:"movedirectory",normalizedTitle:"movedirectory",charIndex:612},{level:3,title:"projectId",slug:"projectid",normalizedTitle:"projectid",charIndex:1392},{level:3,title:"regExp",slug:"regexp",normalizedTitle:"regexp",charIndex:1474}],headersStr:"Examples Inputs action filter from interval interval.seconds listingType moveDirectory projectId regExp",content:'# Trigger\ntype: "org.kestra.task.gcp.gcs.Trigger"\n\n\n> Wait for files on Google cloud storage\n\n\n# Examples\n> Wait for a list of file on a GCS bucket and iterate through the files\n\n\nid: gcs-listen\nnamespace: org.kestra.tests\n\ntasks:\n  - id: each\n    type: org.kestra.core.tasks.flows.EachSequential\n    tasks:\n      - id: return\n        type: org.kestra.core.tasks.debugs.Return\n        format: "{{taskrun.value}}"\n    value: "{{ jq trigger \'.blobs[].uri\' true }}"\n\ntriggers:\n  - id: watch\n    type: org.kestra.task.gcp.gcs.Trigger\n    interval: "PT5M"\n    from: gs://my-bucket/kestra/listen/\n    action: MOVE\n    moveDirectory: gs://my-bucket/kestra/archive/\n\n\n# Inputs\n# action\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The action to do on find files\n\n\n# filter\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Default: BOTH\n\n> The filter files or directory\n\n\n# from\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The directory to list\n\n\n# interval\n * Type: object\n * Dynamic: ❓\n * Required: ❌\n * Default: 60.000000000\n\n> The interval between test of triggers\n\n\n# interval.seconds\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n# listingType\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Default: DIRECTORY\n\n> The listing type you want (like directory or recursive)\n\n\n# moveDirectory\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The destination directory in case off MOVE\n\n\n# projectId\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The GCP project id\n\n\n# regExp\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> A regexp to filter on full path',normalizedContent:'# trigger\ntype: "org.kestra.task.gcp.gcs.trigger"\n\n\n> wait for files on google cloud storage\n\n\n# examples\n> wait for a list of file on a gcs bucket and iterate through the files\n\n\nid: gcs-listen\nnamespace: org.kestra.tests\n\ntasks:\n  - id: each\n    type: org.kestra.core.tasks.flows.eachsequential\n    tasks:\n      - id: return\n        type: org.kestra.core.tasks.debugs.return\n        format: "{{taskrun.value}}"\n    value: "{{ jq trigger \'.blobs[].uri\' true }}"\n\ntriggers:\n  - id: watch\n    type: org.kestra.task.gcp.gcs.trigger\n    interval: "pt5m"\n    from: gs://my-bucket/kestra/listen/\n    action: move\n    movedirectory: gs://my-bucket/kestra/archive/\n\n\n# inputs\n# action\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the action to do on find files\n\n\n# filter\n * type: string\n * dynamic: ❓\n * required: ❌\n * default: both\n\n> the filter files or directory\n\n\n# from\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the directory to list\n\n\n# interval\n * type: object\n * dynamic: ❓\n * required: ❌\n * default: 60.000000000\n\n> the interval between test of triggers\n\n\n# interval.seconds\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n# listingtype\n * type: string\n * dynamic: ❓\n * required: ❌\n * default: directory\n\n> the listing type you want (like directory or recursive)\n\n\n# movedirectory\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the destination directory in case off move\n\n\n# projectid\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the gcp project id\n\n\n# regexp\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> a regexp to filter on full path',charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"Task jdbc mysql",frontmatter:{title:"Task jdbc mysql",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Task jdbc mysql"},{property:"og:description",content:"Task jdbc mysql | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-jdbc-mysql/"},{name:"twitter:title",content:"Task jdbc mysql"},{name:"twitter:description",content:"Task jdbc mysql | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/plugins/task-jdbc-mysql/"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Task jdbc mysql | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/plugins/task-jdbc-mysql/",relativePath:"plugins/task-jdbc-mysql/README.md",key:"v-3812bec4",path:"/plugins/task-jdbc-mysql/",headers:[{level:2,title:"Mysql",slug:"mysql",normalizedTitle:"mysql",charIndex:20},{level:3,title:"Tasks",slug:"tasks",normalizedTitle:"tasks",charIndex:28}],headersStr:"Mysql Tasks",content:"# Task jdbc mysql\n# Mysql\n# Tasks\n * Query",normalizedContent:"# task jdbc mysql\n# mysql\n# tasks\n * query",charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"Query",frontmatter:{title:"Query",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Query"},{property:"og:description",content:"Query | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-jdbc-mysql/tasks/mysql/org.kestra.task.jdbc.mysql.Query.html"},{name:"twitter:title",content:"Query"},{name:"twitter:description",content:"Query | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/plugins/task-jdbc-mysql/tasks/mysql/org.kestra.task.jdbc.mysql.Query.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Query | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/plugins/task-jdbc-mysql/tasks/mysql/org.kestra.task.jdbc.mysql.Query.html",relativePath:"plugins/task-jdbc-mysql/tasks/mysql/org.kestra.task.jdbc.mysql.Query.md",key:"v-a5890592",path:"/plugins/task-jdbc-mysql/tasks/mysql/org.kestra.task.jdbc.mysql.Query.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:334},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:587},{level:3,title:"fetch",slug:"fetch",normalizedTitle:"fetch",charIndex:380},{level:3,title:"fetchOne",slug:"fetchone",normalizedTitle:"fetchone",charIndex:568},{level:3,title:"password",slug:"password",normalizedTitle:"password",charIndex:517},{level:3,title:"sql",slug:"sql",normalizedTitle:"sql",charIndex:38},{level:3,title:"store",slug:"store",normalizedTitle:"store",charIndex:768},{level:3,title:"timeZoneId",slug:"timezoneid",normalizedTitle:"timezoneid",charIndex:1425},{level:3,title:"url",slug:"url",normalizedTitle:"url",charIndex:458},{level:3,title:"username",slug:"username",normalizedTitle:"username",charIndex:498},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1762},{level:3,title:"row",slug:"row",normalizedTitle:"row",charIndex:388},{level:3,title:"rows",slug:"rows",normalizedTitle:"rows",charIndex:1900},{level:3,title:"size",slug:"size",normalizedTitle:"size",charIndex:2042},{level:3,title:"uri",slug:"uri",normalizedTitle:"uri",charIndex:2164}],headersStr:"Examples Inputs fetch fetchOne password sql store timeZoneId url username Outputs row rows size uri",content:"# Query\ntype: \"org.kestra.task.jdbc.mysql.Query\"\n\n\n> MySQL Query Task.\n\n\nCurrently supported types are the following ones :\n\n * serial,\n * tinyint,\n * char(n),\n * varchar(n),\n * text,\n * bigint,\n * bit(n),\n * float,\n * double,\n * numeric,\n * decimal,\n * date,\n * datetime(n),\n * time,\n * timestamp(n),\n * year(n),\n * json,\n * blob\n\n# Examples\n> Request a PostgresSQL Database and fetch a row as outputs\n\n\nid: \"query\"\ntype: \"org.kestra.task.jdbc.mysql.Query\"\nurl: jdbc:postgresql://127.0.0.1:56982/\nusername: postgres\npassword: pg_passwd\nsql: select * from mysql_types\nfetchOne: true\n\n\n# Inputs\n# fetch\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n> Whether to fetch the data from the query result to the task output This parameter is evaluated after 'fetchOne' and 'store'.\n\n\n# fetchOne\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n> Whether to fetch only one data row from the query result to the task output. This parameter is evaluated before 'store' and 'fetch'.\n\n\n# password\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The database user's password\n\n\n# sql\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The sql query to run\n\n\n# store\n * Type: boolean\n * Dynamic: ✔️\n * Required: ❌\n\n> Whether to fetch data row from the query result to a file in internal storage. File will be saved as Amazon Ion (text format).\nSee Amazon Ion documentation This parameter is evaluated after 'fetchOne' but before 'fetch'.\n\n\n# timeZoneId\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The time zone id to use for date/time manipulation. Default value is the worker default zone id.\n\n\n# url\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The jdbc url to connect to the database\n\n\n# username\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The database user\n\n\n# Outputs\n# row\n * Type: object\n\n> Map containing the first row of fetched data\n\n\nOnly populated if 'fetchOne' parameter is set to true.\n\n# rows\n * Type: array\n * SubType: object\n\n> Lit of map containing rows of fetched data\n\n\nOnly populated if 'fetch' parameter is set to true.\n\n# size\n * Type: integer\n\n> The size of the fetched rows\n\n\nOnly populated if 'store' or 'fetch' parameter is set to true.\n\n# uri\n * Type: object\n\n> The url of the result file on kestra storage (.ion file / Amazon Ion text format)\n\n\nOnly populated if 'store' is set to true.",normalizedContent:"# query\ntype: \"org.kestra.task.jdbc.mysql.query\"\n\n\n> mysql query task.\n\n\ncurrently supported types are the following ones :\n\n * serial,\n * tinyint,\n * char(n),\n * varchar(n),\n * text,\n * bigint,\n * bit(n),\n * float,\n * double,\n * numeric,\n * decimal,\n * date,\n * datetime(n),\n * time,\n * timestamp(n),\n * year(n),\n * json,\n * blob\n\n# examples\n> request a postgressql database and fetch a row as outputs\n\n\nid: \"query\"\ntype: \"org.kestra.task.jdbc.mysql.query\"\nurl: jdbc:postgresql://127.0.0.1:56982/\nusername: postgres\npassword: pg_passwd\nsql: select * from mysql_types\nfetchone: true\n\n\n# inputs\n# fetch\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n> whether to fetch the data from the query result to the task output this parameter is evaluated after 'fetchone' and 'store'.\n\n\n# fetchone\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n> whether to fetch only one data row from the query result to the task output. this parameter is evaluated before 'store' and 'fetch'.\n\n\n# password\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the database user's password\n\n\n# sql\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the sql query to run\n\n\n# store\n * type: boolean\n * dynamic: ✔️\n * required: ❌\n\n> whether to fetch data row from the query result to a file in internal storage. file will be saved as amazon ion (text format).\nsee amazon ion documentation this parameter is evaluated after 'fetchone' but before 'fetch'.\n\n\n# timezoneid\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the time zone id to use for date/time manipulation. default value is the worker default zone id.\n\n\n# url\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the jdbc url to connect to the database\n\n\n# username\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the database user\n\n\n# outputs\n# row\n * type: object\n\n> map containing the first row of fetched data\n\n\nonly populated if 'fetchone' parameter is set to true.\n\n# rows\n * type: array\n * subtype: object\n\n> lit of map containing rows of fetched data\n\n\nonly populated if 'fetch' parameter is set to true.\n\n# size\n * type: integer\n\n> the size of the fetched rows\n\n\nonly populated if 'store' or 'fetch' parameter is set to true.\n\n# uri\n * type: object\n\n> the url of the result file on kestra storage (.ion file / amazon ion text format)\n\n\nonly populated if 'store' is set to true.",charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"Task jdbc postgres",frontmatter:{title:"Task jdbc postgres",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Task jdbc postgres"},{property:"og:description",content:"Task jdbc postgres | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-jdbc-postgres/"},{name:"twitter:title",content:"Task jdbc postgres"},{name:"twitter:description",content:"Task jdbc postgres | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/plugins/task-jdbc-postgres/"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Task jdbc postgres | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/plugins/task-jdbc-postgres/",relativePath:"plugins/task-jdbc-postgres/README.md",key:"v-034126a8",path:"/plugins/task-jdbc-postgres/",headers:[{level:2,title:"Postgresql",slug:"postgresql",normalizedTitle:"postgresql",charIndex:23},{level:3,title:"Tasks",slug:"tasks",normalizedTitle:"tasks",charIndex:36}],headersStr:"Postgresql Tasks",content:"# Task jdbc postgres\n# Postgresql\n# Tasks\n * Query",normalizedContent:"# task jdbc postgres\n# postgresql\n# tasks\n * query",charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"Query",frontmatter:{title:"Query",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Query"},{property:"og:description",content:"Query | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-jdbc-postgres/tasks/postgresql/org.kestra.task.jdbc.postgresql.Query.html"},{name:"twitter:title",content:"Query"},{name:"twitter:description",content:"Query | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/plugins/task-jdbc-postgres/tasks/postgresql/org.kestra.task.jdbc.postgresql.Query.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Query | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/plugins/task-jdbc-postgres/tasks/postgresql/org.kestra.task.jdbc.postgresql.Query.html",relativePath:"plugins/task-jdbc-postgres/tasks/postgresql/org.kestra.task.jdbc.postgresql.Query.md",key:"v-1342f403",path:"/plugins/task-jdbc-postgres/tasks/postgresql/org.kestra.task.jdbc.postgresql.Query.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:553},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:1475},{level:3,title:"fetch",slug:"fetch",normalizedTitle:"fetch",charIndex:584},{level:3,title:"fetchOne",slug:"fetchone",normalizedTitle:"fetchone",charIndex:1641},{level:3,title:"password",slug:"password",normalizedTitle:"password",charIndex:771},{level:3,title:"sql",slug:"sql",normalizedTitle:"sql",charIndex:43},{level:3,title:"store",slug:"store",normalizedTitle:"store",charIndex:1286},{level:3,title:"timeZoneId",slug:"timezoneid",normalizedTitle:"timezoneid",charIndex:2313},{level:3,title:"url",slug:"url",normalizedTitle:"url",charIndex:708},{level:3,title:"username",slug:"username",normalizedTitle:"username",charIndex:750},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:2650},{level:3,title:"row",slug:"row",normalizedTitle:"row",charIndex:1264},{level:3,title:"rows",slug:"rows",normalizedTitle:"rows",charIndex:1264},{level:3,title:"size",slug:"size",normalizedTitle:"size",charIndex:2930},{level:3,title:"uri",slug:"uri",normalizedTitle:"uri",charIndex:3052}],headersStr:"Examples Inputs fetch fetchOne password sql store timeZoneId url username Outputs row rows size uri",content:"# Query\ntype: \"org.kestra.task.jdbc.postgresql.Query\"\n\n\n> PostgresSQL Query Task\n\n\nCurrently supported types are the following ones :\n\n * serial\n * boolean\n * char(4)\n * varchar(n)\n * text\n * smallint\n * bigint\n * float(n)\n * double precision\n * real\n * numeric\n * date\n * time\n * timez / time with time zone (avoid this type as it can lead to some gap. See this PostgreSQL issue)\n * timestamp\n * timestampz / timestamp with time zone\n * interval\n * integer[]\n * text[][] (ie. array of array ... it may be of another supported type)\n * json\n * bytea\n\n# Examples\n> Execute a query and fetch results on another task to update another table\n\n\ntasks:\n- id: update\n  type: org.kestra.task.jdbc.postgresql.Query\n  url: jdbc:postgresql://127.0.0.1:56982/\n  username: postgres\n  password: pg_passwd\n  sql: select concert_id, available, a, b, c, d, play_time, library_record, floatn_test, double_test, real_test, numeric_test, date_type, time_type, timez_type, timestamp_type, timestampz_type, interval_type, pay_by_quarter, schedule, json_type, blob_type from pgsql_types\n  fetch: true\n- id: use-fetched-data\n  type: org.kestra.task.jdbc.postgresql.Query\n  url: jdbc:postgresql://127.0.0.1:56982/\n  username: postgres\n  password: pg_passwd\n  sql:  \"{{#each outputs.update.rows}} INSERT INTO pl_store_distribute (year_month,store_code, update_date) values ({{this.play_time}}, {{this.concert_id}}, TO_TIMESTAMP('{{this.timestamp_type}}', 'YYYY/MM/DDTHH24:MI:SS.US') ); {{/each}}\"\n\n\n# Inputs\n# fetch\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n> Whether to fetch the data from the query result to the task output This parameter is evaluated after 'fetchOne' and 'store'.\n\n\n# fetchOne\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n> Whether to fetch only one data row from the query result to the task output. This parameter is evaluated before 'store' and 'fetch'.\n\n\n# password\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The database user's password\n\n\n# sql\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The sql query to run\n\n\n# store\n * Type: boolean\n * Dynamic: ✔️\n * Required: ❌\n\n> Whether to fetch data row from the query result to a file in internal storage. File will be saved as Amazon Ion (text format).\nSee Amazon Ion documentation This parameter is evaluated after 'fetchOne' but before 'fetch'.\n\n\n# timeZoneId\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n\n> The time zone id to use for date/time manipulation. Default value is the worker default zone id.\n\n\n# url\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The jdbc url to connect to the database\n\n\n# username\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The database user\n\n\n# Outputs\n# row\n * Type: object\n\n> Map containing the first row of fetched data\n\n\nOnly populated if 'fetchOne' parameter is set to true.\n\n# rows\n * Type: array\n * SubType: object\n\n> Lit of map containing rows of fetched data\n\n\nOnly populated if 'fetch' parameter is set to true.\n\n# size\n * Type: integer\n\n> The size of the fetched rows\n\n\nOnly populated if 'store' or 'fetch' parameter is set to true.\n\n# uri\n * Type: object\n\n> The url of the result file on kestra storage (.ion file / Amazon Ion text format)\n\n\nOnly populated if 'store' is set to true.",normalizedContent:"# query\ntype: \"org.kestra.task.jdbc.postgresql.query\"\n\n\n> postgressql query task\n\n\ncurrently supported types are the following ones :\n\n * serial\n * boolean\n * char(4)\n * varchar(n)\n * text\n * smallint\n * bigint\n * float(n)\n * double precision\n * real\n * numeric\n * date\n * time\n * timez / time with time zone (avoid this type as it can lead to some gap. see this postgresql issue)\n * timestamp\n * timestampz / timestamp with time zone\n * interval\n * integer[]\n * text[][] (ie. array of array ... it may be of another supported type)\n * json\n * bytea\n\n# examples\n> execute a query and fetch results on another task to update another table\n\n\ntasks:\n- id: update\n  type: org.kestra.task.jdbc.postgresql.query\n  url: jdbc:postgresql://127.0.0.1:56982/\n  username: postgres\n  password: pg_passwd\n  sql: select concert_id, available, a, b, c, d, play_time, library_record, floatn_test, double_test, real_test, numeric_test, date_type, time_type, timez_type, timestamp_type, timestampz_type, interval_type, pay_by_quarter, schedule, json_type, blob_type from pgsql_types\n  fetch: true\n- id: use-fetched-data\n  type: org.kestra.task.jdbc.postgresql.query\n  url: jdbc:postgresql://127.0.0.1:56982/\n  username: postgres\n  password: pg_passwd\n  sql:  \"{{#each outputs.update.rows}} insert into pl_store_distribute (year_month,store_code, update_date) values ({{this.play_time}}, {{this.concert_id}}, to_timestamp('{{this.timestamp_type}}', 'yyyy/mm/ddthh24:mi:ss.us') ); {{/each}}\"\n\n\n# inputs\n# fetch\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n> whether to fetch the data from the query result to the task output this parameter is evaluated after 'fetchone' and 'store'.\n\n\n# fetchone\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n> whether to fetch only one data row from the query result to the task output. this parameter is evaluated before 'store' and 'fetch'.\n\n\n# password\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the database user's password\n\n\n# sql\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the sql query to run\n\n\n# store\n * type: boolean\n * dynamic: ✔️\n * required: ❌\n\n> whether to fetch data row from the query result to a file in internal storage. file will be saved as amazon ion (text format).\nsee amazon ion documentation this parameter is evaluated after 'fetchone' but before 'fetch'.\n\n\n# timezoneid\n * type: string\n * dynamic: ❓\n * required: ❌\n\n> the time zone id to use for date/time manipulation. default value is the worker default zone id.\n\n\n# url\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the jdbc url to connect to the database\n\n\n# username\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the database user\n\n\n# outputs\n# row\n * type: object\n\n> map containing the first row of fetched data\n\n\nonly populated if 'fetchone' parameter is set to true.\n\n# rows\n * type: array\n * subtype: object\n\n> lit of map containing rows of fetched data\n\n\nonly populated if 'fetch' parameter is set to true.\n\n# size\n * type: integer\n\n> the size of the fetched rows\n\n\nonly populated if 'store' or 'fetch' parameter is set to true.\n\n# uri\n * type: object\n\n> the url of the result file on kestra storage (.ion file / amazon ion text format)\n\n\nonly populated if 'store' is set to true.",charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"Task kubernetes",frontmatter:{title:"Task kubernetes",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Task kubernetes"},{property:"og:description",content:"Task kubernetes | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-kubernetes/"},{name:"twitter:title",content:"Task kubernetes"},{name:"twitter:description",content:"Task kubernetes | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/plugins/task-kubernetes/"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Task kubernetes | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/plugins/task-kubernetes/",relativePath:"plugins/task-kubernetes/README.md",key:"v-3e719c50",path:"/plugins/task-kubernetes/",headers:[{level:2,title:"Common",slug:"common",normalizedTitle:"common",charIndex:20},{level:3,title:"Tasks",slug:"tasks",normalizedTitle:"tasks",charIndex:29}],headersStr:"Common Tasks",content:"# Task kubernetes\n# Common\n# Tasks\n * JobCreate",normalizedContent:"# task kubernetes\n# common\n# tasks\n * jobcreate",charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"Task notifications",frontmatter:{title:"Task notifications",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Task notifications"},{property:"og:description",content:"Task notifications | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-notifications/"},{name:"twitter:title",content:"Task notifications"},{name:"twitter:description",content:"Task notifications | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/plugins/task-notifications/"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Task notifications | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/plugins/task-notifications/",relativePath:"plugins/task-notifications/README.md",key:"v-20aa16f0",path:"/plugins/task-notifications/",headers:[{level:2,title:"Mail",slug:"mail",normalizedTitle:"mail",charIndex:23},{level:3,title:"Tasks",slug:"tasks",normalizedTitle:"tasks",charIndex:30},{level:2,title:"Slack",slug:"slack",normalizedTitle:"slack",charIndex:68},{level:3,title:"Tasks",slug:"tasks-2",normalizedTitle:"tasks",charIndex:30}],headersStr:"Mail Tasks Slack Tasks",content:"# Task notifications\n# Mail\n# Tasks\n * MailExecution\n * MailSend\n\n# Slack\n# Tasks\n * SlackExecution\n * SlackIncomingWebhook",normalizedContent:"# task notifications\n# mail\n# tasks\n * mailexecution\n * mailsend\n\n# slack\n# tasks\n * slackexecution\n * slackincomingwebhook",charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"MailSend",frontmatter:{title:"MailSend",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"MailSend"},{property:"og:description",content:"MailSend | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-notifications/tasks/mail/org.kestra.task.notifications.mail.MailSend.html"},{name:"twitter:title",content:"MailSend"},{name:"twitter:description",content:"MailSend | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/plugins/task-notifications/tasks/mail/org.kestra.task.notifications.mail.MailSend.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"MailSend | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/plugins/task-notifications/tasks/mail/org.kestra.task.notifications.mail.MailSend.html",relativePath:"plugins/task-notifications/tasks/mail/org.kestra.task.notifications.mail.MailSend.md",key:"v-8b587e3a",path:"/plugins/task-notifications/tasks/mail/org.kestra.task.notifications.mail.MailSend.html",headers:[{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:100},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:109},{level:3,title:"host",slug:"host",normalizedTitle:"host",charIndex:207},{level:3,title:"htmlTextContent",slug:"htmltextcontent",normalizedTitle:"htmltextcontent",charIndex:286},{level:3,title:"password",slug:"password",normalizedTitle:"password",charIndex:602},{level:3,title:"port",slug:"port",normalizedTitle:"port",charIndex:522},{level:3,title:"sessionTimeout",slug:"sessiontimeout",normalizedTitle:"sessiontimeout",charIndex:769},{level:3,title:"subject",slug:"subject",normalizedTitle:"subject",charIndex:956},{level:3,title:"to",slug:"to",normalizedTitle:"to",charIndex:80},{level:3,title:"transportStrategy",slug:"transportstrategy",normalizedTitle:"transportstrategy",charIndex:1210},{level:3,title:"username",slug:"username",normalizedTitle:"username",charIndex:1368}],headersStr:"Inputs from host htmlTextContent password port sessionTimeout subject to transportStrategy username",content:'# MailSend\ntype: "org.kestra.task.notifications.mail.MailSend"\n\n\n> Generic task to send a mail.\n\n\n# Inputs\n# from\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The address of the sender of this email\n\n\n# host\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The mail server host\n\n\n# htmlTextContent\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The optional email message body in HTML text\n\n\nBoth text and HTML can be provided, which will be offered to the email client as alternative content. Email clients that support it, will favor HTML over plain text and ignore the text body completely\n\n# password\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The mail server password\n\n\n# port\n * Type: integer\n * Dynamic: ✔️\n * Required: ❌\n\n> The mail server port\n\n\n# sessionTimeout\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n * Default: 1000\n\n> Controls the timeout to use when sending emails\n\n\nIt affects socket connect-, read- and write timeouts\n\n# subject\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The optional subject of this email\n\n\n# to\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The recipient email address\n\n\nNote that the email address must be an RFC2822 format compliant address.\n\n# transportStrategy\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Default: SMTPS\n\n> The optional transport strategy\n\n\nWill default to SMTPS if left empty.\n\n# username\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The mail server username',normalizedContent:'# mailsend\ntype: "org.kestra.task.notifications.mail.mailsend"\n\n\n> generic task to send a mail.\n\n\n# inputs\n# from\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the address of the sender of this email\n\n\n# host\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the mail server host\n\n\n# htmltextcontent\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the optional email message body in html text\n\n\nboth text and html can be provided, which will be offered to the email client as alternative content. email clients that support it, will favor html over plain text and ignore the text body completely\n\n# password\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the mail server password\n\n\n# port\n * type: integer\n * dynamic: ✔️\n * required: ❌\n\n> the mail server port\n\n\n# sessiontimeout\n * type: integer\n * dynamic: ❓\n * required: ❌\n * default: 1000\n\n> controls the timeout to use when sending emails\n\n\nit affects socket connect-, read- and write timeouts\n\n# subject\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the optional subject of this email\n\n\n# to\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the recipient email address\n\n\nnote that the email address must be an rfc2822 format compliant address.\n\n# transportstrategy\n * type: string\n * dynamic: ❓\n * required: ❌\n * default: smtps\n\n> the optional transport strategy\n\n\nwill default to smtps if left empty.\n\n# username\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the mail server username',charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"JobCreate",frontmatter:{title:"JobCreate",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"JobCreate"},{property:"og:description",content:"JobCreate | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-kubernetes/tasks/org.kestra.task.kubernetes.JobCreate.html"},{name:"twitter:title",content:"JobCreate"},{name:"twitter:description",content:"JobCreate | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/plugins/task-kubernetes/tasks/org.kestra.task.kubernetes.JobCreate.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"JobCreate | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/plugins/task-kubernetes/tasks/org.kestra.task.kubernetes.JobCreate.html",relativePath:"plugins/task-kubernetes/tasks/org.kestra.task.kubernetes.JobCreate.md",key:"v-c55cb926",path:"/plugins/task-kubernetes/tasks/org.kestra.task.kubernetes.JobCreate.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:103},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:485},{level:3,title:"connection",slug:"connection",normalizedTitle:"connection",charIndex:494},{level:3,title:"connection.apiVersion",slug:"connection-apiversion",normalizedTitle:"connection.apiversion",charIndex:880},{level:3,title:"connection.caCertData",slug:"connection-cacertdata",normalizedTitle:"connection.cacertdata",charIndex:1e3},{level:3,title:"connection.caCertFile",slug:"connection-cacertfile",normalizedTitle:"connection.cacertfile",charIndex:1100},{level:3,title:"connection.clientCertData",slug:"connection-clientcertdata",normalizedTitle:"connection.clientcertdata",charIndex:1203},{level:3,title:"connection.clientCertFile",slug:"connection-clientcertfile",normalizedTitle:"connection.clientcertfile",charIndex:1309},{level:3,title:"connection.clientKeyAlgo",slug:"connection-clientkeyalgo",normalizedTitle:"connection.clientkeyalgo",charIndex:1420},{level:3,title:"connection.clientKeyData",slug:"connection-clientkeydata",normalizedTitle:"connection.clientkeydata",charIndex:1562},{level:3,title:"connection.clientKeyFile",slug:"connection-clientkeyfile",normalizedTitle:"connection.clientkeyfile",charIndex:1659},{level:3,title:"connection.clientKeyPassphrase",slug:"connection-clientkeypassphrase",normalizedTitle:"connection.clientkeypassphrase",charIndex:1761},{level:3,title:"connection.disableHostnameVerification",slug:"connection-disablehostnameverification",normalizedTitle:"connection.disablehostnameverification",charIndex:1867},{level:3,title:"connection.keyStoreFile",slug:"connection-keystorefile",normalizedTitle:"connection.keystorefile",charIndex:1989},{level:3,title:"connection.keyStorePassphrase",slug:"connection-keystorepassphrase",normalizedTitle:"connection.keystorepassphrase",charIndex:2081},{level:3,title:"connection.masterUrl",slug:"connection-masterurl",normalizedTitle:"connection.masterurl",charIndex:2185},{level:3,title:"connection.namespace",slug:"connection-namespace",normalizedTitle:"connection.namespace",charIndex:2328},{level:3,title:"connection.oauthToken",slug:"connection-oauthtoken",normalizedTitle:"connection.oauthtoken",charIndex:2421},{level:3,title:"connection.trustCerts",slug:"connection-trustcerts",normalizedTitle:"connection.trustcerts",charIndex:2508},{level:3,title:"connection.trustStoreFile",slug:"connection-truststorefile",normalizedTitle:"connection.truststorefile",charIndex:2606},{level:3,title:"connection.trustStorePassphrase",slug:"connection-truststorepassphrase",normalizedTitle:"connection.truststorepassphrase",charIndex:2701},{level:3,title:"delete",slug:"delete",normalizedTitle:"delete",charIndex:2808},{level:3,title:"metadata",slug:"metadata",normalizedTitle:"metadata",charIndex:193},{level:3,title:"namespace",slug:"namespace",normalizedTitle:"namespace",charIndex:174},{level:3,title:"spec",slug:"spec",normalizedTitle:"spec",charIndex:236},{level:3,title:"waitUntilRunning",slug:"waituntilrunning",normalizedTitle:"waituntilrunning",charIndex:3195},{level:3,title:"waitUntilRunning.seconds",slug:"waituntilrunning-seconds",normalizedTitle:"waituntilrunning.seconds",charIndex:3489},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:3563},{level:3,title:"job",slug:"job",normalizedTitle:"job",charIndex:70},{level:3,title:"job.annotations",slug:"job-annotations",normalizedTitle:"job.annotations",charIndex:3622},{level:3,title:"job.clusterName",slug:"job-clustername",normalizedTitle:"job.clustername",charIndex:3701},{level:3,title:"job.creationTimestamp",slug:"job-creationtimestamp",normalizedTitle:"job.creationtimestamp",charIndex:3768},{level:3,title:"job.deletionGracePeriodSeconds",slug:"job-deletiongraceperiodseconds",normalizedTitle:"job.deletiongraceperiodseconds",charIndex:3831},{level:3,title:"job.deletionTimestamp",slug:"job-deletiontimestamp",normalizedTitle:"job.deletiontimestamp",charIndex:3921},{level:3,title:"job.finalizers",slug:"job-finalizers",normalizedTitle:"job.finalizers",charIndex:3986},{level:3,title:"job.generateName",slug:"job-generatename",normalizedTitle:"job.generatename",charIndex:4061},{level:3,title:"job.generation",slug:"job-generation",normalizedTitle:"job.generation",charIndex:4131},{level:3,title:"job.labels",slug:"job-labels",normalizedTitle:"job.labels",charIndex:4181},{level:3,title:"job.managedFields",slug:"job-managedfields",normalizedTitle:"job.managedfields",charIndex:4230},{level:3,title:"job.name",slug:"job-name",normalizedTitle:"job.name",charIndex:4312},{level:3,title:"job.namespace",slug:"job-namespace",normalizedTitle:"job.namespace",charIndex:4365},{level:3,title:"job.ownerReferences",slug:"job-ownerreferences",normalizedTitle:"job.ownerreferences",charIndex:4428},{level:3,title:"job.resourceVersion",slug:"job-resourceversion",normalizedTitle:"job.resourceversion",charIndex:4513},{level:3,title:"job.selfLink",slug:"job-selflink",normalizedTitle:"job.selflink",charIndex:4573},{level:3,title:"job.uid",slug:"job-uid",normalizedTitle:"job.uid",charIndex:4649},{level:3,title:"pod",slug:"pod",normalizedTitle:"pod",charIndex:3344},{level:3,title:"pod.annotations",slug:"pod-annotations",normalizedTitle:"pod.annotations",charIndex:4760},{level:3,title:"pod.clusterName",slug:"pod-clustername",normalizedTitle:"pod.clustername",charIndex:4839},{level:3,title:"pod.creationTimestamp",slug:"pod-creationtimestamp",normalizedTitle:"pod.creationtimestamp",charIndex:4906},{level:3,title:"pod.deletionGracePeriodSeconds",slug:"pod-deletiongraceperiodseconds",normalizedTitle:"pod.deletiongraceperiodseconds",charIndex:4969},{level:3,title:"pod.deletionTimestamp",slug:"pod-deletiontimestamp",normalizedTitle:"pod.deletiontimestamp",charIndex:5059},{level:3,title:"pod.finalizers",slug:"pod-finalizers",normalizedTitle:"pod.finalizers",charIndex:5124},{level:3,title:"pod.generateName",slug:"pod-generatename",normalizedTitle:"pod.generatename",charIndex:5199},{level:3,title:"pod.generation",slug:"pod-generation",normalizedTitle:"pod.generation",charIndex:5269},{level:3,title:"pod.labels",slug:"pod-labels",normalizedTitle:"pod.labels",charIndex:5319},{level:3,title:"pod.managedFields",slug:"pod-managedfields",normalizedTitle:"pod.managedfields",charIndex:5368},{level:3,title:"pod.name",slug:"pod-name",normalizedTitle:"pod.name",charIndex:5450},{level:3,title:"pod.namespace",slug:"pod-namespace",normalizedTitle:"pod.namespace",charIndex:5503},{level:3,title:"pod.ownerReferences",slug:"pod-ownerreferences",normalizedTitle:"pod.ownerreferences",charIndex:5566},{level:3,title:"pod.resourceVersion",slug:"pod-resourceversion",normalizedTitle:"pod.resourceversion",charIndex:5651},{level:3,title:"pod.selfLink",slug:"pod-selflink",normalizedTitle:"pod.selflink",charIndex:5711},{level:3,title:"pod.uid",slug:"pod-uid",normalizedTitle:"pod.uid",charIndex:5787}],headersStr:"Examples Inputs connection connection.apiVersion connection.caCertData connection.caCertFile connection.clientCertData connection.clientCertFile connection.clientKeyAlgo connection.clientKeyData connection.clientKeyFile connection.clientKeyPassphrase connection.disableHostnameVerification connection.keyStoreFile connection.keyStorePassphrase connection.masterUrl connection.namespace connection.oauthToken connection.trustCerts connection.trustStoreFile connection.trustStorePassphrase delete metadata namespace spec waitUntilRunning waitUntilRunning.seconds Outputs job job.annotations job.clusterName job.creationTimestamp job.deletionGracePeriodSeconds job.deletionTimestamp job.finalizers job.generateName job.generation job.labels job.managedFields job.name job.namespace job.ownerReferences job.resourceVersion job.selfLink job.uid pod pod.annotations pod.clusterName pod.creationTimestamp pod.deletionGracePeriodSeconds pod.deletionTimestamp pod.finalizers pod.generateName pod.generation pod.labels pod.managedFields pod.name pod.namespace pod.ownerReferences pod.resourceVersion pod.selfLink pod.uid",content:"# JobCreate\ntype: \"org.kestra.task.kubernetes.JobCreate\"\n\n\n> Create a job on a kubernetes cluster.\n\n\n# Examples\nid: \"job_create\"\ntype: \"org.kestra.task.kubernetes.JobCreate\"\nnamespace: default\nmetadata:\n  labels:\n    my-label: my-value\nspec:\n  template:\n    spec:\n      containers:\n      - name: unittest\n        image: debian:stable-slim\n        command: \n          - 'bash' \n          - '-c'\n          - 'for i in {1..10}; do echo $i; sleep 0.1; done'\n      restartPolicy: Never\n\n\n# Inputs\n# connection\n * Type: object\n * Dynamic: ❓\n * Required: ❌\n\n> The connection parameters to Kubernetes cluster\n\n\nIf no connection is defined, we try to load connection from current context in order below:\n\n 1. System properties\n 2. Environment variables\n 3. Kube config file\n 4. Service account token & mounted CA certificate\n\nYou can pass a full configuration with all option if needed\n\n# connection.apiVersion\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: v1\n\n> The api version of API to use\n\n\n# connection.caCertData\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> CA certificate as data (\n\n\n# connection.caCertFile\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> CA certificate as file path\n\n\n# connection.clientCertData\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Client certificate as data\n\n\n# connection.clientCertFile\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Client certificate as file path\n\n\n# connection.clientKeyAlgo\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: RSA\n\n> Client key encryption algorithm\n\n\ndefault is RSA\n\n# connection.clientKeyData\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Client Key as data\n\n\n# connection.clientKeyFile\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Client Key as file path\n\n\n# connection.clientKeyPassphrase\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Client key passphrase\n\n\n# connection.disableHostnameVerification\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n> Disable hostname verification\n\n\n# connection.keyStoreFile\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Key store file\n\n\n# connection.keyStorePassphrase\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Key store passphrase\n\n\n# connection.masterUrl\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: https://kubernetes.default.svc\n\n> The url to kubernetes API\n\n\n# connection.namespace\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The namespace used\n\n\n# connection.oauthToken\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Oauth token\n\n\n# connection.trustCerts\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n> Trust all certificates\n\n\n# connection.trustStoreFile\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Truststore file\n\n\n# connection.trustStorePassphrase\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Truststore passphrase\n\n\n# delete\n * Type: boolean\n * Dynamic: ❓\n * Required: ✔️\n\n> If the job will be deleted on completion\n\n\n# metadata\n * Type: object\n * Dynamic: ✔️\n * Required: ❌\n\n> Full metadata yaml for a job.\n\n\n# namespace\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The namespace where the job will be created\n\n\n# spec\n * Type: object\n * Dynamic: ✔️\n * Required: ✔️\n\n> Full spec yaml for a job.\n\n\n# waitUntilRunning\n * Type: object\n * Dynamic: ❓\n * Required: ✔️\n * Default: 600.000000000\n\n> The maximum duration we need to wait until the job & the pod is created.\n\n\nThis timeout is the maximum time that k8s scheduler take to\n\n * schedule the job\n * pull the pod image\n * and start the pod\n\n# waitUntilRunning.seconds\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n# Outputs\n# job\n * Type: object\n\n> The full job metadata\n\n\n# job.annotations\n * Type: object\n\n> List of all annotations of the resource\n\n\n# job.clusterName\n * Type: string\n\n> Name of the current cluster\n\n\n# job.creationTimestamp\n * Type: string\n\n> Creation datetime\n\n\n# job.deletionGracePeriodSeconds\n * Type: integer\n\n> Deletetion grace period in seconds\n\n\n# job.deletionTimestamp\n * Type: string\n\n> Deletetion datetime\n\n\n# job.finalizers\n * Type: array\n * SubType: string\n\n> List of finalizers\n\n\n# job.generateName\n * Type: string\n\n> Generate name of the resource\n\n\n# job.generation\n * Type: integer\n\n> Generation\n\n\n# job.labels\n * Type: object\n\n> List of labels\n\n\n# job.managedFields\n * Type: array\n * SubType: object\n\n> List of managed fields\n\n\n# job.name\n * Type: string\n\n> Name of the resource\n\n\n# job.namespace\n * Type: string\n\n> Namespace of the resource\n\n\n# job.ownerReferences\n * Type: array\n * SubType: object\n\n> List of owner reference\n\n\n# job.resourceVersion\n * Type: string\n\n> Resource version\n\n\n# job.selfLink\n * Type: string\n\n> Direct link on the api of this resource\n\n\n# job.uid\n * Type: string\n\n> Generated Uid of this resource\n\n\n# pod\n * Type: object\n\n> The full pod metadata\n\n\n# pod.annotations\n * Type: object\n\n> List of all annotations of the resource\n\n\n# pod.clusterName\n * Type: string\n\n> Name of the current cluster\n\n\n# pod.creationTimestamp\n * Type: string\n\n> Creation datetime\n\n\n# pod.deletionGracePeriodSeconds\n * Type: integer\n\n> Deletetion grace period in seconds\n\n\n# pod.deletionTimestamp\n * Type: string\n\n> Deletetion datetime\n\n\n# pod.finalizers\n * Type: array\n * SubType: string\n\n> List of finalizers\n\n\n# pod.generateName\n * Type: string\n\n> Generate name of the resource\n\n\n# pod.generation\n * Type: integer\n\n> Generation\n\n\n# pod.labels\n * Type: object\n\n> List of labels\n\n\n# pod.managedFields\n * Type: array\n * SubType: object\n\n> List of managed fields\n\n\n# pod.name\n * Type: string\n\n> Name of the resource\n\n\n# pod.namespace\n * Type: string\n\n> Namespace of the resource\n\n\n# pod.ownerReferences\n * Type: array\n * SubType: object\n\n> List of owner reference\n\n\n# pod.resourceVersion\n * Type: string\n\n> Resource version\n\n\n# pod.selfLink\n * Type: string\n\n> Direct link on the api of this resource\n\n\n# pod.uid\n * Type: string\n\n> Generated Uid of this resource",normalizedContent:"# jobcreate\ntype: \"org.kestra.task.kubernetes.jobcreate\"\n\n\n> create a job on a kubernetes cluster.\n\n\n# examples\nid: \"job_create\"\ntype: \"org.kestra.task.kubernetes.jobcreate\"\nnamespace: default\nmetadata:\n  labels:\n    my-label: my-value\nspec:\n  template:\n    spec:\n      containers:\n      - name: unittest\n        image: debian:stable-slim\n        command: \n          - 'bash' \n          - '-c'\n          - 'for i in {1..10}; do echo $i; sleep 0.1; done'\n      restartpolicy: never\n\n\n# inputs\n# connection\n * type: object\n * dynamic: ❓\n * required: ❌\n\n> the connection parameters to kubernetes cluster\n\n\nif no connection is defined, we try to load connection from current context in order below:\n\n 1. system properties\n 2. environment variables\n 3. kube config file\n 4. service account token & mounted ca certificate\n\nyou can pass a full configuration with all option if needed\n\n# connection.apiversion\n * type: string\n * dynamic: ✔️\n * required: ❌\n * default: v1\n\n> the api version of api to use\n\n\n# connection.cacertdata\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> ca certificate as data (\n\n\n# connection.cacertfile\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> ca certificate as file path\n\n\n# connection.clientcertdata\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> client certificate as data\n\n\n# connection.clientcertfile\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> client certificate as file path\n\n\n# connection.clientkeyalgo\n * type: string\n * dynamic: ✔️\n * required: ❌\n * default: rsa\n\n> client key encryption algorithm\n\n\ndefault is rsa\n\n# connection.clientkeydata\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> client key as data\n\n\n# connection.clientkeyfile\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> client key as file path\n\n\n# connection.clientkeypassphrase\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> client key passphrase\n\n\n# connection.disablehostnameverification\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n> disable hostname verification\n\n\n# connection.keystorefile\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> key store file\n\n\n# connection.keystorepassphrase\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> key store passphrase\n\n\n# connection.masterurl\n * type: string\n * dynamic: ✔️\n * required: ❌\n * default: https://kubernetes.default.svc\n\n> the url to kubernetes api\n\n\n# connection.namespace\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the namespace used\n\n\n# connection.oauthtoken\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> oauth token\n\n\n# connection.trustcerts\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n> trust all certificates\n\n\n# connection.truststorefile\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> truststore file\n\n\n# connection.truststorepassphrase\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> truststore passphrase\n\n\n# delete\n * type: boolean\n * dynamic: ❓\n * required: ✔️\n\n> if the job will be deleted on completion\n\n\n# metadata\n * type: object\n * dynamic: ✔️\n * required: ❌\n\n> full metadata yaml for a job.\n\n\n# namespace\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the namespace where the job will be created\n\n\n# spec\n * type: object\n * dynamic: ✔️\n * required: ✔️\n\n> full spec yaml for a job.\n\n\n# waituntilrunning\n * type: object\n * dynamic: ❓\n * required: ✔️\n * default: 600.000000000\n\n> the maximum duration we need to wait until the job & the pod is created.\n\n\nthis timeout is the maximum time that k8s scheduler take to\n\n * schedule the job\n * pull the pod image\n * and start the pod\n\n# waituntilrunning.seconds\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n# outputs\n# job\n * type: object\n\n> the full job metadata\n\n\n# job.annotations\n * type: object\n\n> list of all annotations of the resource\n\n\n# job.clustername\n * type: string\n\n> name of the current cluster\n\n\n# job.creationtimestamp\n * type: string\n\n> creation datetime\n\n\n# job.deletiongraceperiodseconds\n * type: integer\n\n> deletetion grace period in seconds\n\n\n# job.deletiontimestamp\n * type: string\n\n> deletetion datetime\n\n\n# job.finalizers\n * type: array\n * subtype: string\n\n> list of finalizers\n\n\n# job.generatename\n * type: string\n\n> generate name of the resource\n\n\n# job.generation\n * type: integer\n\n> generation\n\n\n# job.labels\n * type: object\n\n> list of labels\n\n\n# job.managedfields\n * type: array\n * subtype: object\n\n> list of managed fields\n\n\n# job.name\n * type: string\n\n> name of the resource\n\n\n# job.namespace\n * type: string\n\n> namespace of the resource\n\n\n# job.ownerreferences\n * type: array\n * subtype: object\n\n> list of owner reference\n\n\n# job.resourceversion\n * type: string\n\n> resource version\n\n\n# job.selflink\n * type: string\n\n> direct link on the api of this resource\n\n\n# job.uid\n * type: string\n\n> generated uid of this resource\n\n\n# pod\n * type: object\n\n> the full pod metadata\n\n\n# pod.annotations\n * type: object\n\n> list of all annotations of the resource\n\n\n# pod.clustername\n * type: string\n\n> name of the current cluster\n\n\n# pod.creationtimestamp\n * type: string\n\n> creation datetime\n\n\n# pod.deletiongraceperiodseconds\n * type: integer\n\n> deletetion grace period in seconds\n\n\n# pod.deletiontimestamp\n * type: string\n\n> deletetion datetime\n\n\n# pod.finalizers\n * type: array\n * subtype: string\n\n> list of finalizers\n\n\n# pod.generatename\n * type: string\n\n> generate name of the resource\n\n\n# pod.generation\n * type: integer\n\n> generation\n\n\n# pod.labels\n * type: object\n\n> list of labels\n\n\n# pod.managedfields\n * type: array\n * subtype: object\n\n> list of managed fields\n\n\n# pod.name\n * type: string\n\n> name of the resource\n\n\n# pod.namespace\n * type: string\n\n> namespace of the resource\n\n\n# pod.ownerreferences\n * type: array\n * subtype: object\n\n> list of owner reference\n\n\n# pod.resourceversion\n * type: string\n\n> resource version\n\n\n# pod.selflink\n * type: string\n\n> direct link on the api of this resource\n\n\n# pod.uid\n * type: string\n\n> generated uid of this resource",charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"MailExecution",frontmatter:{title:"MailExecution",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"MailExecution"},{property:"og:description",content:"MailExecution | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-notifications/tasks/mail/org.kestra.task.notifications.mail.MailExecution.html"},{name:"twitter:title",content:"MailExecution"},{name:"twitter:description",content:"MailExecution | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/plugins/task-notifications/tasks/mail/org.kestra.task.notifications.mail.MailExecution.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"MailExecution | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/plugins/task-notifications/tasks/mail/org.kestra.task.notifications.mail.MailExecution.html",relativePath:"plugins/task-notifications/tasks/mail/org.kestra.task.notifications.mail.MailExecution.md",key:"v-c96f8dba",path:"/plugins/task-notifications/tasks/mail/org.kestra.task.notifications.mail.MailExecution.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:242},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:927},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:593},{level:3,title:"host",slug:"host",normalizedTitle:"host",charIndex:658},{level:3,title:"htmlTextContent",slug:"htmltextcontent",normalizedTitle:"htmltextcontent",charIndex:1113},{level:3,title:"password",slug:"password",normalizedTitle:"password",charIndex:730},{level:3,title:"port",slug:"port",normalizedTitle:"port",charIndex:689},{level:3,title:"sessionTimeout",slug:"sessiontimeout",normalizedTitle:"sessiontimeout",charIndex:753},{level:3,title:"subject",slug:"subject",normalizedTitle:"subject",charIndex:621},{level:3,title:"to",slug:"to",normalizedTitle:"to",charIndex:82},{level:3,title:"transportStrategy",slug:"transportstrategy",normalizedTitle:"transportstrategy",charIndex:782},{level:3,title:"username",slug:"username",normalizedTitle:"username",charIndex:707}],headersStr:"Examples Inputs from host htmlTextContent password port sessionTimeout subject to transportStrategy username",content:'# MailExecution\ntype: "org.kestra.task.notifications.mail.MailExecution"\n\n\n> Task to send a mail with execution information\n\n\nMain execution information are provided in the sent mail (id, namespace, flow, state, duration, start date ...).\n\n# Examples\n> Send a mail notification on failed flow\n\n\nid: mail\nnamespace: org.kestra.tests\n\nlisteners:\n  - conditions:\n      - type: org.kestra.core.models.conditions.types.ExecutionStatusCondition\n        in:\n          - FAILED\n    tasks:\n      - id: mail\n        type: org.kestra.task.notifications.mail.MailExecution\n        to: to@mail.com\n        from: from@mail.com\n        subject: This is the subject\n        host: nohost-mail.site\n        port: 465\n        username: user\n        password: pass\n        sessionTimeout: 1000\n        transportStrategy: SMTPS\n\n\ntasks:\n  - id: ok\n    type: org.kestra.core.tasks.debugs.Return\n    format: "{{task.id}} > {{taskrun.startDate}}"\n\n\n# Inputs\n# from\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The address of the sender of this email\n\n\n# host\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The mail server host\n\n\n# htmlTextContent\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The optional email message body in HTML text\n\n\nBoth text and HTML can be provided, which will be offered to the email client as alternative content. Email clients that support it, will favor HTML over plain text and ignore the text body completely\n\n# password\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The mail server password\n\n\n# port\n * Type: integer\n * Dynamic: ✔️\n * Required: ❌\n\n> The mail server port\n\n\n# sessionTimeout\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n * Default: 1000\n\n> Controls the timeout to use when sending emails\n\n\nIt affects socket connect-, read- and write timeouts\n\n# subject\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The optional subject of this email\n\n\n# to\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The recipient email address\n\n\nNote that the email address must be an RFC2822 format compliant address.\n\n# transportStrategy\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Default: SMTPS\n\n> The optional transport strategy\n\n\nWill default to SMTPS if left empty.\n\n# username\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The mail server username',normalizedContent:'# mailexecution\ntype: "org.kestra.task.notifications.mail.mailexecution"\n\n\n> task to send a mail with execution information\n\n\nmain execution information are provided in the sent mail (id, namespace, flow, state, duration, start date ...).\n\n# examples\n> send a mail notification on failed flow\n\n\nid: mail\nnamespace: org.kestra.tests\n\nlisteners:\n  - conditions:\n      - type: org.kestra.core.models.conditions.types.executionstatuscondition\n        in:\n          - failed\n    tasks:\n      - id: mail\n        type: org.kestra.task.notifications.mail.mailexecution\n        to: to@mail.com\n        from: from@mail.com\n        subject: this is the subject\n        host: nohost-mail.site\n        port: 465\n        username: user\n        password: pass\n        sessiontimeout: 1000\n        transportstrategy: smtps\n\n\ntasks:\n  - id: ok\n    type: org.kestra.core.tasks.debugs.return\n    format: "{{task.id}} > {{taskrun.startdate}}"\n\n\n# inputs\n# from\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the address of the sender of this email\n\n\n# host\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the mail server host\n\n\n# htmltextcontent\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the optional email message body in html text\n\n\nboth text and html can be provided, which will be offered to the email client as alternative content. email clients that support it, will favor html over plain text and ignore the text body completely\n\n# password\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the mail server password\n\n\n# port\n * type: integer\n * dynamic: ✔️\n * required: ❌\n\n> the mail server port\n\n\n# sessiontimeout\n * type: integer\n * dynamic: ❓\n * required: ❌\n * default: 1000\n\n> controls the timeout to use when sending emails\n\n\nit affects socket connect-, read- and write timeouts\n\n# subject\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the optional subject of this email\n\n\n# to\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the recipient email address\n\n\nnote that the email address must be an rfc2822 format compliant address.\n\n# transportstrategy\n * type: string\n * dynamic: ❓\n * required: ❌\n * default: smtps\n\n> the optional transport strategy\n\n\nwill default to smtps if left empty.\n\n# username\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the mail server username',charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"SlackExecution",frontmatter:{title:"SlackExecution",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"SlackExecution"},{property:"og:description",content:"SlackExecution | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-notifications/tasks/slack/org.kestra.task.notifications.slack.SlackExecution.html"},{name:"twitter:title",content:"SlackExecution"},{name:"twitter:description",content:"SlackExecution | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/plugins/task-notifications/tasks/slack/org.kestra.task.notifications.slack.SlackExecution.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"SlackExecution | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/plugins/task-notifications/tasks/slack/org.kestra.task.notifications.slack.SlackExecution.html",relativePath:"plugins/task-notifications/tasks/slack/org.kestra.task.notifications.slack.SlackExecution.md",key:"v-a838197a",path:"/plugins/task-notifications/tasks/slack/org.kestra.task.notifications.slack.SlackExecution.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:257},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:820},{level:3,title:"channel",slug:"channel",normalizedTitle:"channel",charIndex:681},{level:3,title:"iconEmoji",slug:"iconemoji",normalizedTitle:"iconemoji",charIndex:927},{level:3,title:"iconUrl",slug:"iconurl",normalizedTitle:"iconurl",charIndex:1008},{level:3,title:"payload",slug:"payload",normalizedTitle:"payload",charIndex:1092},{level:3,title:"url",slug:"url",normalizedTitle:"url",charIndex:588},{level:3,title:"username",slug:"username",normalizedTitle:"username",charIndex:1291}],headersStr:"Examples Inputs channel iconEmoji iconUrl payload url username",content:'# SlackExecution\ntype: "org.kestra.task.notifications.slack.SlackExecution"\n\n\n> Task to send a slack message with execution information\n\n\nMain execution information are provided in the sent message (id, namespace, flow, state, duration, start date ...).\n\n# Examples\n> Send a slack notification on failed flow\n\n\nid: mail\nnamespace: org.kestra.tests\n\nlisteners:\n  - conditions:\n      - type: org.kestra.core.models.conditions.types.ExecutionStatusCondition\n        in:\n          - FAILED\n    tasks:\n      - id: slack\n        type: org.kestra.task.notifications.slack.SlackExecution\n        url: "https://hooks.slack.com/services/T00000000/B00000000/XXXXXXXXXXXXXXXXXXXXXXXX"\n        channel: "#random"\n\n\ntasks:\n  - id: ok\n    type: org.kestra.core.tasks.debugs.Return\n    format: "{{task.id}} > {{taskrun.startDate}}"\n\n\n# Inputs\n# channel\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Slack channel to send the message to\n\n\n# iconEmoji\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Emoji icon to use\n\n\n# iconUrl\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Url of the icon to use\n\n\n# payload\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Slack message payload\n\n\n# url\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Slack incoming webhook url\n\n\nSee Create an Incoming Webhook\n\n# username\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Author of the slack message',normalizedContent:'# slackexecution\ntype: "org.kestra.task.notifications.slack.slackexecution"\n\n\n> task to send a slack message with execution information\n\n\nmain execution information are provided in the sent message (id, namespace, flow, state, duration, start date ...).\n\n# examples\n> send a slack notification on failed flow\n\n\nid: mail\nnamespace: org.kestra.tests\n\nlisteners:\n  - conditions:\n      - type: org.kestra.core.models.conditions.types.executionstatuscondition\n        in:\n          - failed\n    tasks:\n      - id: slack\n        type: org.kestra.task.notifications.slack.slackexecution\n        url: "https://hooks.slack.com/services/t00000000/b00000000/xxxxxxxxxxxxxxxxxxxxxxxx"\n        channel: "#random"\n\n\ntasks:\n  - id: ok\n    type: org.kestra.core.tasks.debugs.return\n    format: "{{task.id}} > {{taskrun.startdate}}"\n\n\n# inputs\n# channel\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> slack channel to send the message to\n\n\n# iconemoji\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> emoji icon to use\n\n\n# iconurl\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> url of the icon to use\n\n\n# payload\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> slack message payload\n\n\n# url\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> slack incoming webhook url\n\n\nsee create an incoming webhook\n\n# username\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> author of the slack message',charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"SlackIncomingWebhook",frontmatter:{title:"SlackIncomingWebhook",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"SlackIncomingWebhook"},{property:"og:description",content:"SlackIncomingWebhook | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-notifications/tasks/slack/org.kestra.task.notifications.slack.SlackIncomingWebhook.html"},{name:"twitter:title",content:"SlackIncomingWebhook"},{name:"twitter:description",content:"SlackIncomingWebhook | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/plugins/task-notifications/tasks/slack/org.kestra.task.notifications.slack.SlackIncomingWebhook.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"SlackIncomingWebhook | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/plugins/task-notifications/tasks/slack/org.kestra.task.notifications.slack.SlackIncomingWebhook.html",relativePath:"plugins/task-notifications/tasks/slack/org.kestra.task.notifications.slack.SlackIncomingWebhook.md",key:"v-3eef13ba",path:"/plugins/task-notifications/tasks/slack/org.kestra.task.notifications.slack.SlackIncomingWebhook.html",headers:[{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:180},{level:3,title:"payload",slug:"payload",normalizedTitle:"payload",charIndex:189},{level:3,title:"url",slug:"url",normalizedTitle:"url",charIndex:272}],headersStr:"Inputs payload url",content:'# SlackIncomingWebhook\ntype: "org.kestra.task.notifications.slack.SlackIncomingWebhook"\n\n\n> Generic task to send a slack message.\n\n\nSee Sending messages using Incoming Webhooks\n\n# Inputs\n# payload\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Slack message payload\n\n\n# url\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Slack incoming webhook url\n\n\nSee Create an Incoming Webhook',normalizedContent:'# slackincomingwebhook\ntype: "org.kestra.task.notifications.slack.slackincomingwebhook"\n\n\n> generic task to send a slack message.\n\n\nsee sending messages using incoming webhooks\n\n# inputs\n# payload\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> slack message payload\n\n\n# url\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> slack incoming webhook url\n\n\nsee create an incoming webhook',charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"Task serdes",frontmatter:{title:"Task serdes",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Task serdes"},{property:"og:description",content:"Task serdes | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-serdes/"},{name:"twitter:title",content:"Task serdes"},{name:"twitter:description",content:"Task serdes | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/plugins/task-serdes/"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Task serdes | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/plugins/task-serdes/",relativePath:"plugins/task-serdes/README.md",key:"v-01024800",path:"/plugins/task-serdes/",headers:[{level:2,title:"Csv",slug:"csv",normalizedTitle:"csv",charIndex:16},{level:3,title:"Tasks",slug:"tasks",normalizedTitle:"tasks",charIndex:22},{level:2,title:"Json",slug:"json",normalizedTitle:"json",charIndex:57},{level:3,title:"Tasks",slug:"tasks-2",normalizedTitle:"tasks",charIndex:22},{level:2,title:"Avro",slug:"avro",normalizedTitle:"avro",charIndex:101},{level:3,title:"Tasks",slug:"tasks-3",normalizedTitle:"tasks",charIndex:22}],headersStr:"Csv Tasks Json Tasks Avro Tasks",content:"# Task serdes\n# Csv\n# Tasks\n * CsvReader\n * CsvWriter\n\n# Json\n# Tasks\n * JsonReader\n * JsonWriter\n\n# Avro\n# Tasks\n * AvroWriter",normalizedContent:"# task serdes\n# csv\n# tasks\n * csvreader\n * csvwriter\n\n# json\n# tasks\n * jsonreader\n * jsonwriter\n\n# avro\n# tasks\n * avrowriter",charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"AvroWriter",frontmatter:{title:"AvroWriter",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"AvroWriter"},{property:"og:description",content:"AvroWriter | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-serdes/tasks/avro/org.kestra.task.serdes.avro.AvroWriter.html"},{name:"twitter:title",content:"AvroWriter"},{name:"twitter:description",content:"AvroWriter | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/plugins/task-serdes/tasks/avro/org.kestra.task.serdes.avro.AvroWriter.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"AvroWriter | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/plugins/task-serdes/tasks/avro/org.kestra.task.serdes.avro.AvroWriter.html",relativePath:"plugins/task-serdes/tasks/avro/org.kestra.task.serdes.avro.AvroWriter.md",key:"v-69d470a3",path:"/plugins/task-serdes/tasks/avro/org.kestra.task.serdes.avro.AvroWriter.html",headers:[{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:144},{level:3,title:"dateFormat",slug:"dateformat",normalizedTitle:"dateformat",charIndex:153},{level:3,title:"datetimeFormat",slug:"datetimeformat",normalizedTitle:"datetimeformat",charIndex:284},{level:3,title:"decimalSeparator",slug:"decimalseparator",normalizedTitle:"decimalseparator",charIndex:444},{level:3,title:"falseValues",slug:"falsevalues",normalizedTitle:"falsevalues",charIndex:610},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:788},{level:3,title:"nullValues",slug:"nullvalues",normalizedTitle:"nullvalues",charIndex:863},{level:3,title:"schema",slug:"schema",normalizedTitle:"schema",charIndex:1102},{level:3,title:"timeFormat",slug:"timeformat",normalizedTitle:"timeformat",charIndex:288},{level:3,title:"trueValues",slug:"truevalues",normalizedTitle:"truevalues",charIndex:1341},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1511},{level:3,title:"uri",slug:"uri",normalizedTitle:"uri",charIndex:1521}],headersStr:"Inputs dateFormat datetimeFormat decimalSeparator falseValues from nullValues schema timeFormat trueValues Outputs uri",content:'# AvroWriter\ntype: "org.kestra.task.serdes.avro.AvroWriter"\n\n\n> Read a provided file containing ion serialized data and convert it to avro.\n\n\n# Inputs\n# dateFormat\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Format to use when parsing date\n\n\nDefault value is yyyy-MM-dd[XXX].\n\n# datetimeFormat\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Format to use when parsing datetime\n\n\nDefault value is yyyy-MM-dd\'T\'HH:mm[:ss][.SSSSSS][XXX]\n\n# decimalSeparator\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Character to recognize as decimal point (e.g. use ‘,’ for European data).\n\n\nDefault value is \'.\'\n\n# falseValues\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Values to consider as False\n\n\nDefault values are "f", "false", "disabled", "0", "off", "no", ""\n\n# from\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> Source file URI\n\n\n# nullValues\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Values to consider as null\n\n\nDefault values are "",\n"#N/A",\n"#N/A N/A",\n"#NA",\n"-1.#IND",\n"-1.#QNAN",\n"-NaN",\n"1.#IND",\n"1.#QNAN",\n"NA",\n"n/a",\n"nan",\n"null"\n\n# schema\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The avro schema associated to the data\n\n\n# timeFormat\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Format to use when parsing time\n\n\nDefault value is HH:mm[:ss][.SSSSSS][XXX]\n\n# trueValues\n * Type: array\n * SubType: string\n * Dynamic: ✔️\n * Required: ❌\n\n> Values to consider as True\n\n\nDefault values are "t", "true", "enabled", "1", "on", "yes"\n\n# Outputs\n# uri\n * Type: object\n\n> URI of a temporary result file',normalizedContent:'# avrowriter\ntype: "org.kestra.task.serdes.avro.avrowriter"\n\n\n> read a provided file containing ion serialized data and convert it to avro.\n\n\n# inputs\n# dateformat\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> format to use when parsing date\n\n\ndefault value is yyyy-mm-dd[xxx].\n\n# datetimeformat\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> format to use when parsing datetime\n\n\ndefault value is yyyy-mm-dd\'t\'hh:mm[:ss][.ssssss][xxx]\n\n# decimalseparator\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> character to recognize as decimal point (e.g. use ‘,’ for european data).\n\n\ndefault value is \'.\'\n\n# falsevalues\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> values to consider as false\n\n\ndefault values are "f", "false", "disabled", "0", "off", "no", ""\n\n# from\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> source file uri\n\n\n# nullvalues\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> values to consider as null\n\n\ndefault values are "",\n"#n/a",\n"#n/a n/a",\n"#na",\n"-1.#ind",\n"-1.#qnan",\n"-nan",\n"1.#ind",\n"1.#qnan",\n"na",\n"n/a",\n"nan",\n"null"\n\n# schema\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the avro schema associated to the data\n\n\n# timeformat\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> format to use when parsing time\n\n\ndefault value is hh:mm[:ss][.ssssss][xxx]\n\n# truevalues\n * type: array\n * subtype: string\n * dynamic: ✔️\n * required: ❌\n\n> values to consider as true\n\n\ndefault values are "t", "true", "enabled", "1", "on", "yes"\n\n# outputs\n# uri\n * type: object\n\n> uri of a temporary result file',charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"CsvReader",frontmatter:{title:"CsvReader",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"CsvReader"},{property:"og:description",content:"CsvReader | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-serdes/tasks/csv/org.kestra.task.serdes.csv.CsvReader.html"},{name:"twitter:title",content:"CsvReader"},{name:"twitter:description",content:"CsvReader | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/plugins/task-serdes/tasks/csv/org.kestra.task.serdes.csv.CsvReader.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"CsvReader | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/plugins/task-serdes/tasks/csv/org.kestra.task.serdes.csv.CsvReader.html",relativePath:"plugins/task-serdes/tasks/csv/org.kestra.task.serdes.csv.CsvReader.md",key:"v-584500cb",path:"/plugins/task-serdes/tasks/csv/org.kestra.task.serdes.csv.CsvReader.html",headers:[{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:126},{level:3,title:"charset",slug:"charset",normalizedTitle:"charset",charIndex:135},{level:3,title:"errorOnDifferentFieldCount",slug:"errorondifferentfieldcount",normalizedTitle:"errorondifferentfieldcount",charIndex:270},{level:3,title:"fieldSeparator",slug:"fieldseparator",normalizedTitle:"fieldseparator",charIndex:454},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:588},{level:3,title:"header",slug:"header",normalizedTitle:"header",charIndex:663},{level:3,title:"skipEmptyRows",slug:"skipemptyrows",normalizedTitle:"skipemptyrows",charIndex:806},{level:3,title:"skipRows",slug:"skiprows",normalizedTitle:"skiprows",charIndex:931},{level:3,title:"textDelimiter",slug:"textdelimiter",normalizedTitle:"textdelimiter",charIndex:1042},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1182},{level:3,title:"uri",slug:"uri",normalizedTitle:"uri",charIndex:1192}],headersStr:"Inputs charset errorOnDifferentFieldCount fieldSeparator from header skipEmptyRows skipRows textDelimiter Outputs uri",content:"# CsvReader\ntype: \"org.kestra.task.serdes.csv.CsvReader\"\n\n\n> Read a csv file and write it to an ion serialized data file.\n\n\n# Inputs\n# charset\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Default: UTF-8\n\n> The name of a supported charset\n\n\nDefault value is UTF-8.\n\n# errorOnDifferentFieldCount\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n> Specifies if an exception should be thrown, if CSV data contains different field count (default: false)\n\n\n# fieldSeparator\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Default: ,\n\n> The field separator character (default: ',' - comma)\n\n\n# from\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> Source file URI\n\n\n# header\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: true\n\n> Specifies if the first line should be the header (default: false)\n\n\n# skipEmptyRows\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n> Specifies if empty rows should be skipped (default: true)\n\n\n# skipRows\n * Type: integer\n * Dynamic: ❓\n * Required: ❌\n\n> Number of lines to skip at the start of the file\n\n\n# textDelimiter\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Default: \"\n\n> The text delimiter character (default: '\"' - double quotes)\n\n\n# Outputs\n# uri\n * Type: object\n\n> URI of a temporary result file",normalizedContent:"# csvreader\ntype: \"org.kestra.task.serdes.csv.csvreader\"\n\n\n> read a csv file and write it to an ion serialized data file.\n\n\n# inputs\n# charset\n * type: string\n * dynamic: ❓\n * required: ❌\n * default: utf-8\n\n> the name of a supported charset\n\n\ndefault value is utf-8.\n\n# errorondifferentfieldcount\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n> specifies if an exception should be thrown, if csv data contains different field count (default: false)\n\n\n# fieldseparator\n * type: string\n * dynamic: ❓\n * required: ❌\n * default: ,\n\n> the field separator character (default: ',' - comma)\n\n\n# from\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> source file uri\n\n\n# header\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: true\n\n> specifies if the first line should be the header (default: false)\n\n\n# skipemptyrows\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n> specifies if empty rows should be skipped (default: true)\n\n\n# skiprows\n * type: integer\n * dynamic: ❓\n * required: ❌\n\n> number of lines to skip at the start of the file\n\n\n# textdelimiter\n * type: string\n * dynamic: ❓\n * required: ❌\n * default: \"\n\n> the text delimiter character (default: '\"' - double quotes)\n\n\n# outputs\n# uri\n * type: object\n\n> uri of a temporary result file",charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"CsvWriter",frontmatter:{title:"CsvWriter",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"CsvWriter"},{property:"og:description",content:"CsvWriter | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-serdes/tasks/csv/org.kestra.task.serdes.csv.CsvWriter.html"},{name:"twitter:title",content:"CsvWriter"},{name:"twitter:description",content:"CsvWriter | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/plugins/task-serdes/tasks/csv/org.kestra.task.serdes.csv.CsvWriter.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"CsvWriter | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/plugins/task-serdes/tasks/csv/org.kestra.task.serdes.csv.CsvWriter.html",relativePath:"plugins/task-serdes/tasks/csv/org.kestra.task.serdes.csv.CsvWriter.md",key:"v-39c4896b",path:"/plugins/task-serdes/tasks/csv/org.kestra.task.serdes.csv.CsvWriter.html",headers:[{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:126},{level:3,title:"alwaysDelimitText",slug:"alwaysdelimittext",normalizedTitle:"alwaysdelimittext",charIndex:135},{level:3,title:"charset",slug:"charset",normalizedTitle:"charset",charIndex:304},{level:3,title:"fieldSeparator",slug:"fieldseparator",normalizedTitle:"fieldseparator",charIndex:439},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:573},{level:3,title:"header",slug:"header",normalizedTitle:"header",charIndex:648},{level:3,title:"lineDelimiter",slug:"linedelimiter",normalizedTitle:"linedelimiter",charIndex:791},{level:3,title:"textDelimiter",slug:"textdelimiter",normalizedTitle:"textdelimiter",charIndex:254},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1067},{level:3,title:"uri",slug:"uri",normalizedTitle:"uri",charIndex:1077}],headersStr:"Inputs alwaysDelimitText charset fieldSeparator from header lineDelimiter textDelimiter Outputs uri",content:"# CsvWriter\ntype: \"org.kestra.task.serdes.csv.CsvWriter\"\n\n\n> Read an ion serialized data file and write it to a csv file.\n\n\n# Inputs\n# alwaysDelimitText\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n> Whether fields should always be delimited using the textDelimiter option.\n\n\nDefault value is false\n\n# charset\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Default: UTF-8\n\n> The name of a supported charset\n\n\nDefault value is UTF-8.\n\n# fieldSeparator\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Default: ,\n\n> The field separator character (default: ',' - comma)\n\n\n# from\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> Source file URI\n\n\n# header\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n * Default: true\n\n> Specifies if the first line should be the header (default: false)\n\n\n# lineDelimiter\n * Type: array\n * SubType: string\n * Dynamic: ❓\n * Required: ❌\n * Default: [ ]\n\n> The character used to separate rows\n\n\n# textDelimiter\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Default: \"\n\n> The text delimiter character (default: '\"' - double quotes)\n\n\n# Outputs\n# uri\n * Type: object\n\n> URI of a temporary result file",normalizedContent:"# csvwriter\ntype: \"org.kestra.task.serdes.csv.csvwriter\"\n\n\n> read an ion serialized data file and write it to a csv file.\n\n\n# inputs\n# alwaysdelimittext\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n> whether fields should always be delimited using the textdelimiter option.\n\n\ndefault value is false\n\n# charset\n * type: string\n * dynamic: ❓\n * required: ❌\n * default: utf-8\n\n> the name of a supported charset\n\n\ndefault value is utf-8.\n\n# fieldseparator\n * type: string\n * dynamic: ❓\n * required: ❌\n * default: ,\n\n> the field separator character (default: ',' - comma)\n\n\n# from\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> source file uri\n\n\n# header\n * type: boolean\n * dynamic: ❓\n * required: ❌\n * default: true\n\n> specifies if the first line should be the header (default: false)\n\n\n# linedelimiter\n * type: array\n * subtype: string\n * dynamic: ❓\n * required: ❌\n * default: [ ]\n\n> the character used to separate rows\n\n\n# textdelimiter\n * type: string\n * dynamic: ❓\n * required: ❌\n * default: \"\n\n> the text delimiter character (default: '\"' - double quotes)\n\n\n# outputs\n# uri\n * type: object\n\n> uri of a temporary result file",charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"JsonReader",frontmatter:{title:"JsonReader",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"JsonReader"},{property:"og:description",content:"JsonReader | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-serdes/tasks/json/org.kestra.task.serdes.json.JsonReader.html"},{name:"twitter:title",content:"JsonReader"},{name:"twitter:description",content:"JsonReader | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/plugins/task-serdes/tasks/json/org.kestra.task.serdes.json.JsonReader.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"JsonReader | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/plugins/task-serdes/tasks/json/org.kestra.task.serdes.json.JsonReader.html",relativePath:"plugins/task-serdes/tasks/json/org.kestra.task.serdes.json.JsonReader.md",key:"v-7af6bb63",path:"/plugins/task-serdes/tasks/json/org.kestra.task.serdes.json.JsonReader.html",headers:[{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:130},{level:3,title:"charset",slug:"charset",normalizedTitle:"charset",charIndex:139},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:274},{level:3,title:"newLine",slug:"newline",normalizedTitle:"newline",charIndex:349},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:583},{level:3,title:"uri",slug:"uri",normalizedTitle:"uri",charIndex:593}],headersStr:"Inputs charset from newLine Outputs uri",content:'# JsonReader\ntype: "org.kestra.task.serdes.json.JsonReader"\n\n\n> Read a json file and write it to an ion serialized data file.\n\n\n# Inputs\n# charset\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Default: UTF-8\n\n> The name of a supported charset\n\n\nDefault value is UTF-8.\n\n# from\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> Source file URI\n\n\n# newLine\n * Type: boolean\n * Dynamic: ❓\n * Required: ❌\n\n> Is the file is a json new line (JSON-NL)\n\n\nIs the file is a json with new line separator\nWarning, if not, the whole file will loaded in memory and can lead to out of memory!\n\n# Outputs\n# uri\n * Type: object\n\n> URI of a temporary result file',normalizedContent:'# jsonreader\ntype: "org.kestra.task.serdes.json.jsonreader"\n\n\n> read a json file and write it to an ion serialized data file.\n\n\n# inputs\n# charset\n * type: string\n * dynamic: ❓\n * required: ❌\n * default: utf-8\n\n> the name of a supported charset\n\n\ndefault value is utf-8.\n\n# from\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> source file uri\n\n\n# newline\n * type: boolean\n * dynamic: ❓\n * required: ❌\n\n> is the file is a json new line (json-nl)\n\n\nis the file is a json with new line separator\nwarning, if not, the whole file will loaded in memory and can lead to out of memory!\n\n# outputs\n# uri\n * type: object\n\n> uri of a temporary result file',charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"JsonWriter",frontmatter:{title:"JsonWriter",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"JsonWriter"},{property:"og:description",content:"JsonWriter | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-serdes/tasks/json/org.kestra.task.serdes.json.JsonWriter.html"},{name:"twitter:title",content:"JsonWriter"},{name:"twitter:description",content:"JsonWriter | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/plugins/task-serdes/tasks/json/org.kestra.task.serdes.json.JsonWriter.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"JsonWriter | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/plugins/task-serdes/tasks/json/org.kestra.task.serdes.json.JsonWriter.html",relativePath:"plugins/task-serdes/tasks/json/org.kestra.task.serdes.json.JsonWriter.md",key:"v-51c6d563",path:"/plugins/task-serdes/tasks/json/org.kestra.task.serdes.json.JsonWriter.html",headers:[{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:149},{level:3,title:"charset",slug:"charset",normalizedTitle:"charset",charIndex:158},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:294},{level:3,title:"newLine",slug:"newline",normalizedTitle:"newline",charIndex:369},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:603},{level:3,title:"uri",slug:"uri",normalizedTitle:"uri",charIndex:613}],headersStr:"Inputs charset from newLine Outputs uri",content:'# JsonWriter\ntype: "org.kestra.task.serdes.json.JsonWriter"\n\n\n> Read an ion serialized data file and write it to a new line delimited json file.\n\n\n# Inputs\n# charset\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n * Default: UTF-8\n\n> The name of a supported charset\n\n\nDefault value is UTF-8.\n\n# from\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> Source file URI\n\n\n# newLine\n * Type: boolean\n * Dynamic: ❌\n * Required: ❌\n\n> Is the file is a json new line (JSON-NL)\n\n\nIs the file is a json with new line separator\nWarning, if not, the whole file will loaded in memory and can lead to out of memory!\n\n# Outputs\n# uri\n * Type: object\n\n> URI of a temporary result file',normalizedContent:'# jsonwriter\ntype: "org.kestra.task.serdes.json.jsonwriter"\n\n\n> read an ion serialized data file and write it to a new line delimited json file.\n\n\n# inputs\n# charset\n * type: string\n * dynamic: ✔️\n * required: ❌\n * default: utf-8\n\n> the name of a supported charset\n\n\ndefault value is utf-8.\n\n# from\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> source file uri\n\n\n# newline\n * type: boolean\n * dynamic: ❌\n * required: ❌\n\n> is the file is a json new line (json-nl)\n\n\nis the file is a json with new line separator\nwarning, if not, the whole file will loaded in memory and can lead to out of memory!\n\n# outputs\n# uri\n * type: object\n\n> uri of a temporary result file',charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"Airflow, the Bad and the Ugly!",frontmatter:{title:"Airflow, the Bad and the Ugly!",date:"2020-12-07T00:00:00.000Z",image:"/blogs/2020-12-07-airflow-bad-ugly.jpg",layout:"BlogsPost",category:"versus",tags:["airflow"],meta:[{property:"article:published_time",content:"2020-12-07T00:00:00.000Z"},{property:"article:modified_time",content:"2020-12-04T08:48:04.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Airflow, the Bad and the Ugly!"},{property:"og:description",content:"Airflow, the Bad and the Ugly! | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"article"},{property:"og:url",content:"/blogs/2020-12-07-airflow-bad-ugly.html"},{property:"og:image",content:"/blogs/2020-12-07-airflow-bad-ugly.jpg"},{name:"twitter:title",content:"Airflow, the Bad and the Ugly!"},{name:"twitter:description",content:"Airflow, the Bad and the Ugly! | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/blogs/2020-12-07-airflow-bad-ugly.html"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image",content:"/blogs/2020-12-07-airflow-bad-ugly.jpg"},{name:"twitter:label2",content:"Filed under"},{name:"twitter:data2",content:"airflow"},{property:"article:tag",content:"airflow"},{name:"description",content:"Airflow, the Bad and the Ugly! | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/blogs/2020-12-07-airflow-bad-ugly.html",relativePath:"blogs/2020-12-07-airflow-bad-ugly.md",key:"v-097684fa",path:"/blogs/2020-12-07-airflow-bad-ugly.html",headers:[{level:2,title:"Workflow as code, not so good idea !",slug:"workflow-as-code-not-so-good-idea",normalizedTitle:"workflow as code, not so good idea !",charIndex:657},{level:2,title:"Realtime baby !",slug:"realtime-baby",normalizedTitle:"realtime baby !",charIndex:697},{level:2,title:"Events based & API First",slug:"events-based-api-first",normalizedTitle:"events based &amp; api first",charIndex:null},{level:3,title:"API not so first",slug:"api-not-so-first",normalizedTitle:"api not so first",charIndex:743},{level:3,title:"What Events ?",slug:"what-events",normalizedTitle:"what events ?",charIndex:766},{level:2,title:"Stable ? ...",slug:"stable",normalizedTitle:"stable ? ...",charIndex:791},{level:2,title:"Scalability, hum hum ...",slug:"scalability-hum-hum",normalizedTitle:"scalability, hum hum ...",charIndex:807},{level:3,title:"Save my CPU",slug:"save-my-cpu",normalizedTitle:"save my cpu",charIndex:834},{level:3,title:"Where is the SPOF ?",slug:"where-is-the-spof",normalizedTitle:"where is the spof ?",charIndex:852},{level:2,title:"Dynamic workflows !",slug:"dynamic-workflows",normalizedTitle:"dynamic workflows !",charIndex:883},{level:3,title:"First one are dynamic tasks.",slug:"first-one-are-dynamic-tasks",normalizedTitle:"first one are dynamic tasks.",charIndex:905},{level:3,title:"Second are sensors.",slug:"second-are-sensors",normalizedTitle:"second are sensors.",charIndex:940},{level:3,title:"Task outputs vs XCom",slug:"task-outputs-vs-xcom",normalizedTitle:"task outputs vs xcom",charIndex:966},{level:3,title:"Where is my files ?",slug:"where-is-my-files",normalizedTitle:"where is my files ?",charIndex:993},{level:2,title:"Entreprise not so ready !",slug:"entreprise-not-so-ready",normalizedTitle:"entreprise not so ready !",charIndex:1024},{level:3,title:"Please keep my revision !",slug:"please-keep-my-revision",normalizedTitle:"please keep my revision !",charIndex:1052},{level:3,title:"Where is the RBAC ?",slug:"where-is-the-rbac",normalizedTitle:"where is the rbac ?",charIndex:1084}],lastUpdated:"12/4/2020, 8:48:04 AM",headersStr:"Workflow as code, not so good idea ! Realtime baby ! Events based & API First API not so first What Events ? Stable ? ... Scalability, hum hum ... Save my CPU Where is the SPOF ? Dynamic workflows ! First one are dynamic tasks. Second are sensors. Task outputs vs XCom Where is my files ? Entreprise not so ready ! Please keep my revision ! Where is the RBAC ?",content:"Airflow is defined for now as a clear winner for open source orchestration tools. So like everyone, reading medium on the web, we are thinking this tool is mature and will resolved all the constraint we have to schedule, orchestrate & monitor our dags.\n\nMostly this blog post will be technical focus but let you overview the major issues we have with Airflow trying to make it the main orchestrator for our data pipeline and will describe our long road to hell to lead us to create & open source Kestra based on the frustration using Airflow.\n\nWithout any order, here is the major points that we have discovered, and we want to share them with you :\n\n\n\n\n * Workflow as code, not so good idea !\n * Realtime baby !\n * Events based & API First * API not so first\n    * What Events ?\n   \n   \n * Stable ? ...\n * Scalability, hum hum ... * Save my CPU\n    * Where is the SPOF ?\n   \n   \n * Dynamic workflows ! * First one are dynamic tasks.\n    * Second are sensors.\n    * Task outputs vs XCom\n    * Where is my files ?\n   \n   \n * Entreprise not so ready ! * Please keep my revision !\n    * Where is the RBAC ?\n   \n   \n\n\n\n# Workflow as code, not so good idea !\nAirflow dag are defined as python code ! First look seems to be a good idea but in the fact it can be a very dangerous pattern. Lets me explain a real use case.\n\nfrom airflow import DAG\nfrom airflow.operators.bash_operator import BashOperator\nfrom datetime import timedelta\nfrom airflow.utils.dates import days_ago\nimport time\n\ndef get_command(arg):\n    time.sleep(3)\n    return f\"echo '{arg}'\"\n\ndefault_args = {\n    'owner': 'airflow',\n    'depends_on_past': False,\n    'start_date': days_ago(2)\n}\n\nwith DAG(\n        'sleep',\n        default_args=default_args,\n        schedule_interval=timedelta(days=1),\n) as dag:\n    task_1 = BashOperator(\n        task_id='first_task',\n        bash_command=get_command(\"1\"),\n    )\n\n    task_2 = BashOperator(\n        task_id='second_task',\n        bash_command=get_command(\"2\"),\n    )\n\ntask_1 >> task_2\n\n\nSimple and working and let's change the function get_bash_print with a function that will do an heavy computing task (like fetching database, ...) . Still working, but in this case, the whole airflow instance is in danger. Airflow evaluate dag a lot of time in all services (webserver, worker, scheduler, ...).\nImagine an Airflow as self-service for a large company, a simple dag could break the whole platform.\n\nHow can you prevent this to happen ? You need to have a strong review of each dags to be sure that no heavy compute are done outside of an Operator. Still, it's possible, but it will be really hard on a large scale company cluster.\n\nNow we are changing the function with a sleep (that would simulate any heavy work):\n\ndef get_bash_print(arg):\n    time.sleep(5)\n    return f\"Hello from a {arg}\"\n\n\nAnd run airflow list_dags -r, this command will expose the parsing time for all the dag, that will be done every x seconds on webserver and scheduler and before any task on workers:\n\n-------------------------------------------------------------------\nDagBag loading stats for /usr/local/airflow/dags\n-------------------------------------------------------------------\nNumber of DAGs: 2\nTotal task number: 4\nDagBag parsing time: 10.130541999999993\n-------------------------------------------------------------------------------------------------------+--------------------+---------+----------+------------------------------------------------------------------------------\nfile                                                                                                   | duration           | dag_num | task_num | dags                                                                         \n-------------------------------------------------------------------------------------------------------+--------------------+---------+----------+------------------------------------------------------------------------------\n/sleep.py                                                                                              | 10.018332000000001 |       1 |        2 | ['sleep']                                                                    \n/bash.py                                                                                               | 0.002396           |       1 |        2 | ['bash']\n-------------------------------------------------------------------------------------------------------+--------------------+---------+----------+------------------------------------------------------------------------------\n\n\nSimple experiment, let's create the same dag and remove the time.sleep and trigger it from the ui dag. Look at this taskrun:\n\nAs you can see, there is a huge gap between tasks! and it's only because the sleep dag exists on the current cluster, even if the bash dag is fast, it will be slow down by other dag.\n\nYou got it ? Yeah, you have successfully slow down your Airflow whole cluster. Worst, imagine that this task will fetch any external service, you could overload & crash this service, since Airflow scan everytime all dags even if the dag is not running.\nYou can mitigate this using a strong dag review process, but it will not scale well on a shared large cluster used by a lots of independent teams\n\nConclusion\n\nIt's why Kestra have chosen a declarative language for its workflow engine, since all flow are isolated and serialized preventing any code injection.\nYou can scale to thousands of flows, not matter how there are configured, there will be not impact on your cluster since flow are only evaluated at runtime.\n\n# Realtime baby !\nAirflow is not built with realtime in mind, the ui is a static, server side generated app. When using airflow UI you will hit F5 or refresh all the time.\nYou want to know if the dag is running, hit F5 is the only solution ! Same for logs !\n\n# Events based & API First\nAirflow was born with a simple concept, schedule a dag at this time ! Every else is not in the mindset of Airflow.\n\n# API not so first\nThere is an expirimental API but clearly insufficient for a real world.\nFor example, the trigger dag API can be used passing some args, but the server don't know them! So you can create some DagRun that will instatitely failed because you forgot some mandatory arguments.\n\nIn other hand, Kestra was built with a strong API, everything can be done with API, create a flow, execute it, ... That let you integrate Kestra the way you want to use it in your company.\n\n# What Events ?\nAirflow have a mandatory dag options start_date & schedule_interval! Meaning that all is thinking like a crontab with a start date.\nBut wait, in real life, we don't want to schedule a flow, we want to start when an external event occurs (like a new file on a storage for example).\n\nAirflow is not the right tool for this use case! Kestra handle it with optional trigger that allow you handle events (time or anything else) that will start an execution and tou will be able to follow it.\n\n# Stable ? ...\nLet me give some insight. So we start by testing a simple use case that will represent our real usage from our data pipeline: Doing lots of different dags that would simply call external API, you understand me ELT here.\n\nIn order to prove the stability of Airflow, we simply simulate some kind of real workflow, 200 dags with each 15/20 tasks with external api, simulate here with a sleep 1. We run the test at the same time, what we expect to have on daily basis at least.\nWe use example_bash_operator and just change the range from 5 to 15 and activate all the task at the same time.\n\nWe will not comment on the execution times which took longer than expected, the worst are :\n\nYes this is failed task ! How can a scheduler can failed tasks with sleep 1 !\n\nHow can I monitor my daily flows if I can get failed tasks only due to the scheduler!\n\n# Scalability, hum hum ...\nFrom airflow documentation :\n\n> Scalable: Airflow has a modular architecture and uses a message queue to orchestrate an arbitrary number of workers. Airflow is ready to scale to infinity.\n\n\n# Save my CPU\nAt first, we have believed the marketing baseline, but the road was not so happy.\nWhen we start the bench below, this one used the whole 16 cores of the servers I was using just for doing sleep tasks.\n\nIn fact, Airflow is a python software that handle scalability with Celery executor. Celery will fork many airflow process, not sharing anything.\nWhen I start a dag, the scheduler will scan every x seconds all the dags, worker for every task will scan all the dags on the cluster, this will use a lots of CPU for large cluster instance, and this will be worst & worst as long as you add new dags / tasks.\nIt's by design, Airflow must be used for long running tasks, not for lots of small / short tasks.\n\n# Where is the SPOF ?\nAirflow will not scale to infinity since a lot's of components in their architecture are not scalable by design:\n\n * Database (MySQL or Postgres): are not horizontal scalable, only vertical (raise CPU & mem) since mono server.\n * Queue (Redis): Aiflow use a queue that is not scalable and mono servers also\n * Airflow Scheduler: handle all the task in the cluster can only have one instance on the cluster, if not there will be multiple task run for the same execution.\n\n# Dynamic workflows !\nStill from Airflow documentation :\n\n> Dynamic: Airflow pipelines are configuration as code (Python), allowing for dynamic pipeline generation. This allows for writing code that instantiates pipelines dynamically.\n\nExtensible: Easily define your own operators, executors and extend the library so that it fits the level of abstraction that suits your environment.\n\nElegant: Airflow pipelines are lean and explicit. Parameterizing your scripts is built into the core of Airflow using the powerful Jinja templating engine\n\n\nTask in dags are set up using dependencies.\nYou can use\n\n * Magic operator >>, << or their more verbose api t1.set_downstream([t2, t3]) and t1.set_downstream(t2). These operators allow you to define complex workflow, handling sequential and parallel tasks, fine !\n * Branch operator in order to choose tasks depending on previous tasks.\n * Error handling using on_failure_callback for example.\n * Sensors in order to wait for something.\n\nSince all these allow you to define complex workflow, Airflow lack of some major features in my opinion !\n\n# First one are dynamic tasks.\nI mean create as many tasks depending on previous tasks like Each.\nIn Airflow, this is impossible, some people try to trigger others dags to emulate this (like or Flow), but this will complexify the monitoring of your flow.\nWe will need to follow 2 dags in order to understand what is the issue, the main flow is success and the child are not, really complicated !\n\n# Second are sensors.\nIn airflow, you can in the middle of a dag wait for a resource, so If you need a file on a server, the dags will start, the sensors task will wait for the file (keeping the flow running), and restart.\n\nIn Kestra, we have reversed the way it works, Scheduler will wait for the file and will launch a new execution when the condition are match. By this way, we don't have long running dags that are just doing nothing.\nAlso in Airflow, Sensors are blocking a worker thread waiting. In Kestra, Scheduler have a dedicated thread pool (and scalable also) for handling all time waiting, no scalabilty issue here !\n\n# Task outputs vs XCom\nIn Airflow, there is no real notion of output for task (mean value that can be used for next task). Xcom are the way for Airflow to respond to thIs problems.\nBut in the fact, there is major drawback with XCom :\n\n * TODO Control this XCom are not isolated for current execution, they can be overwritten by the concurrent execution of the same dag.\n * XCom are stored in the database (MySQL or Postgres) so you can't store big data between tasks.\n * No file here, you can't exchange file between tasks (except with hack, see below) !\n\n# Where is my files ?\nAirflow have no notion of files at the heart ! Meaning that if you want to download a file on a task and upload it anywhere on the second tasks, we need to send a viable path to the second one.\n\nIn the practice, this can be done with a path on a local filesystem, this work, but what about isolation between flow & scalability (cluster of airflow worker), this does't work. There is still hack to make it work (like Google Composer that use a Cloud Storage Fuse filesystem backup with Google Cloud Storage for example), but in Kestra, we have put the file at the heart with an Internal Storage that will allow any task to output files like any others outputs (string, int, ...)\n\n# Entreprise not so ready !\n# Please keep my revision !\nIn Airflow, there is no notion of dag version, when you changed your dag, the old execution are changed and if you remove a task, the complete task will disappear for all previous executions.\nNo way to understand what is going with previous dags when you update it.\n\nKestra have this in mind and keep all the revision for all flows, and let you watch previous at the state they are, let you watch the diff between revisions, ...\n\n# Where is the RBAC ?\nAirflow by default have no login, you can enable a lots of auths to secure your webserver. but still no RBAC, I mean this team can handle this list of dag!\nThis is a RBAC options, that will allow to specify for each users what dag role they have.\n\nYou understand, Users > Dags, where is the group here ? Who want to handle the security user by user ? In a large company, this is just impossible!",normalizedContent:"airflow is defined for now as a clear winner for open source orchestration tools. so like everyone, reading medium on the web, we are thinking this tool is mature and will resolved all the constraint we have to schedule, orchestrate & monitor our dags.\n\nmostly this blog post will be technical focus but let you overview the major issues we have with airflow trying to make it the main orchestrator for our data pipeline and will describe our long road to hell to lead us to create & open source kestra based on the frustration using airflow.\n\nwithout any order, here is the major points that we have discovered, and we want to share them with you :\n\n\n\n\n * workflow as code, not so good idea !\n * realtime baby !\n * events based & api first * api not so first\n    * what events ?\n   \n   \n * stable ? ...\n * scalability, hum hum ... * save my cpu\n    * where is the spof ?\n   \n   \n * dynamic workflows ! * first one are dynamic tasks.\n    * second are sensors.\n    * task outputs vs xcom\n    * where is my files ?\n   \n   \n * entreprise not so ready ! * please keep my revision !\n    * where is the rbac ?\n   \n   \n\n\n\n# workflow as code, not so good idea !\nairflow dag are defined as python code ! first look seems to be a good idea but in the fact it can be a very dangerous pattern. lets me explain a real use case.\n\nfrom airflow import dag\nfrom airflow.operators.bash_operator import bashoperator\nfrom datetime import timedelta\nfrom airflow.utils.dates import days_ago\nimport time\n\ndef get_command(arg):\n    time.sleep(3)\n    return f\"echo '{arg}'\"\n\ndefault_args = {\n    'owner': 'airflow',\n    'depends_on_past': false,\n    'start_date': days_ago(2)\n}\n\nwith dag(\n        'sleep',\n        default_args=default_args,\n        schedule_interval=timedelta(days=1),\n) as dag:\n    task_1 = bashoperator(\n        task_id='first_task',\n        bash_command=get_command(\"1\"),\n    )\n\n    task_2 = bashoperator(\n        task_id='second_task',\n        bash_command=get_command(\"2\"),\n    )\n\ntask_1 >> task_2\n\n\nsimple and working and let's change the function get_bash_print with a function that will do an heavy computing task (like fetching database, ...) . still working, but in this case, the whole airflow instance is in danger. airflow evaluate dag a lot of time in all services (webserver, worker, scheduler, ...).\nimagine an airflow as self-service for a large company, a simple dag could break the whole platform.\n\nhow can you prevent this to happen ? you need to have a strong review of each dags to be sure that no heavy compute are done outside of an operator. still, it's possible, but it will be really hard on a large scale company cluster.\n\nnow we are changing the function with a sleep (that would simulate any heavy work):\n\ndef get_bash_print(arg):\n    time.sleep(5)\n    return f\"hello from a {arg}\"\n\n\nand run airflow list_dags -r, this command will expose the parsing time for all the dag, that will be done every x seconds on webserver and scheduler and before any task on workers:\n\n-------------------------------------------------------------------\ndagbag loading stats for /usr/local/airflow/dags\n-------------------------------------------------------------------\nnumber of dags: 2\ntotal task number: 4\ndagbag parsing time: 10.130541999999993\n-------------------------------------------------------------------------------------------------------+--------------------+---------+----------+------------------------------------------------------------------------------\nfile                                                                                                   | duration           | dag_num | task_num | dags                                                                         \n-------------------------------------------------------------------------------------------------------+--------------------+---------+----------+------------------------------------------------------------------------------\n/sleep.py                                                                                              | 10.018332000000001 |       1 |        2 | ['sleep']                                                                    \n/bash.py                                                                                               | 0.002396           |       1 |        2 | ['bash']\n-------------------------------------------------------------------------------------------------------+--------------------+---------+----------+------------------------------------------------------------------------------\n\n\nsimple experiment, let's create the same dag and remove the time.sleep and trigger it from the ui dag. look at this taskrun:\n\nas you can see, there is a huge gap between tasks! and it's only because the sleep dag exists on the current cluster, even if the bash dag is fast, it will be slow down by other dag.\n\nyou got it ? yeah, you have successfully slow down your airflow whole cluster. worst, imagine that this task will fetch any external service, you could overload & crash this service, since airflow scan everytime all dags even if the dag is not running.\nyou can mitigate this using a strong dag review process, but it will not scale well on a shared large cluster used by a lots of independent teams\n\nconclusion\n\nit's why kestra have chosen a declarative language for its workflow engine, since all flow are isolated and serialized preventing any code injection.\nyou can scale to thousands of flows, not matter how there are configured, there will be not impact on your cluster since flow are only evaluated at runtime.\n\n# realtime baby !\nairflow is not built with realtime in mind, the ui is a static, server side generated app. when using airflow ui you will hit f5 or refresh all the time.\nyou want to know if the dag is running, hit f5 is the only solution ! same for logs !\n\n# events based & api first\nairflow was born with a simple concept, schedule a dag at this time ! every else is not in the mindset of airflow.\n\n# api not so first\nthere is an expirimental api but clearly insufficient for a real world.\nfor example, the trigger dag api can be used passing some args, but the server don't know them! so you can create some dagrun that will instatitely failed because you forgot some mandatory arguments.\n\nin other hand, kestra was built with a strong api, everything can be done with api, create a flow, execute it, ... that let you integrate kestra the way you want to use it in your company.\n\n# what events ?\nairflow have a mandatory dag options start_date & schedule_interval! meaning that all is thinking like a crontab with a start date.\nbut wait, in real life, we don't want to schedule a flow, we want to start when an external event occurs (like a new file on a storage for example).\n\nairflow is not the right tool for this use case! kestra handle it with optional trigger that allow you handle events (time or anything else) that will start an execution and tou will be able to follow it.\n\n# stable ? ...\nlet me give some insight. so we start by testing a simple use case that will represent our real usage from our data pipeline: doing lots of different dags that would simply call external api, you understand me elt here.\n\nin order to prove the stability of airflow, we simply simulate some kind of real workflow, 200 dags with each 15/20 tasks with external api, simulate here with a sleep 1. we run the test at the same time, what we expect to have on daily basis at least.\nwe use example_bash_operator and just change the range from 5 to 15 and activate all the task at the same time.\n\nwe will not comment on the execution times which took longer than expected, the worst are :\n\nyes this is failed task ! how can a scheduler can failed tasks with sleep 1 !\n\nhow can i monitor my daily flows if i can get failed tasks only due to the scheduler!\n\n# scalability, hum hum ...\nfrom airflow documentation :\n\n> scalable: airflow has a modular architecture and uses a message queue to orchestrate an arbitrary number of workers. airflow is ready to scale to infinity.\n\n\n# save my cpu\nat first, we have believed the marketing baseline, but the road was not so happy.\nwhen we start the bench below, this one used the whole 16 cores of the servers i was using just for doing sleep tasks.\n\nin fact, airflow is a python software that handle scalability with celery executor. celery will fork many airflow process, not sharing anything.\nwhen i start a dag, the scheduler will scan every x seconds all the dags, worker for every task will scan all the dags on the cluster, this will use a lots of cpu for large cluster instance, and this will be worst & worst as long as you add new dags / tasks.\nit's by design, airflow must be used for long running tasks, not for lots of small / short tasks.\n\n# where is the spof ?\nairflow will not scale to infinity since a lot's of components in their architecture are not scalable by design:\n\n * database (mysql or postgres): are not horizontal scalable, only vertical (raise cpu & mem) since mono server.\n * queue (redis): aiflow use a queue that is not scalable and mono servers also\n * airflow scheduler: handle all the task in the cluster can only have one instance on the cluster, if not there will be multiple task run for the same execution.\n\n# dynamic workflows !\nstill from airflow documentation :\n\n> dynamic: airflow pipelines are configuration as code (python), allowing for dynamic pipeline generation. this allows for writing code that instantiates pipelines dynamically.\n\nextensible: easily define your own operators, executors and extend the library so that it fits the level of abstraction that suits your environment.\n\nelegant: airflow pipelines are lean and explicit. parameterizing your scripts is built into the core of airflow using the powerful jinja templating engine\n\n\ntask in dags are set up using dependencies.\nyou can use\n\n * magic operator >>, << or their more verbose api t1.set_downstream([t2, t3]) and t1.set_downstream(t2). these operators allow you to define complex workflow, handling sequential and parallel tasks, fine !\n * branch operator in order to choose tasks depending on previous tasks.\n * error handling using on_failure_callback for example.\n * sensors in order to wait for something.\n\nsince all these allow you to define complex workflow, airflow lack of some major features in my opinion !\n\n# first one are dynamic tasks.\ni mean create as many tasks depending on previous tasks like each.\nin airflow, this is impossible, some people try to trigger others dags to emulate this (like or flow), but this will complexify the monitoring of your flow.\nwe will need to follow 2 dags in order to understand what is the issue, the main flow is success and the child are not, really complicated !\n\n# second are sensors.\nin airflow, you can in the middle of a dag wait for a resource, so if you need a file on a server, the dags will start, the sensors task will wait for the file (keeping the flow running), and restart.\n\nin kestra, we have reversed the way it works, scheduler will wait for the file and will launch a new execution when the condition are match. by this way, we don't have long running dags that are just doing nothing.\nalso in airflow, sensors are blocking a worker thread waiting. in kestra, scheduler have a dedicated thread pool (and scalable also) for handling all time waiting, no scalabilty issue here !\n\n# task outputs vs xcom\nin airflow, there is no real notion of output for task (mean value that can be used for next task). xcom are the way for airflow to respond to this problems.\nbut in the fact, there is major drawback with xcom :\n\n * todo control this xcom are not isolated for current execution, they can be overwritten by the concurrent execution of the same dag.\n * xcom are stored in the database (mysql or postgres) so you can't store big data between tasks.\n * no file here, you can't exchange file between tasks (except with hack, see below) !\n\n# where is my files ?\nairflow have no notion of files at the heart ! meaning that if you want to download a file on a task and upload it anywhere on the second tasks, we need to send a viable path to the second one.\n\nin the practice, this can be done with a path on a local filesystem, this work, but what about isolation between flow & scalability (cluster of airflow worker), this does't work. there is still hack to make it work (like google composer that use a cloud storage fuse filesystem backup with google cloud storage for example), but in kestra, we have put the file at the heart with an internal storage that will allow any task to output files like any others outputs (string, int, ...)\n\n# entreprise not so ready !\n# please keep my revision !\nin airflow, there is no notion of dag version, when you changed your dag, the old execution are changed and if you remove a task, the complete task will disappear for all previous executions.\nno way to understand what is going with previous dags when you update it.\n\nkestra have this in mind and keep all the revision for all flows, and let you watch previous at the state they are, let you watch the diff between revisions, ...\n\n# where is the rbac ?\nairflow by default have no login, you can enable a lots of auths to secure your webserver. but still no rbac, i mean this team can handle this list of dag!\nthis is a rbac options, that will allow to specify for each users what dag role they have.\n\nyou understand, users > dags, where is the group here ? who want to handle the security user by user ? in a large company, this is just impossible!",charsets:{cjk:!0},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"Develop your RunnableTask",frontmatter:{order:2,meta:[{property:"article:modified_time",content:"2020-11-17T14:22:24.000Z"},{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Develop your RunnableTask"},{property:"og:description",content:"Develop your RunnableTask | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/docs/plugin-developer-guide/runnable-task/"},{name:"twitter:title",content:"Develop your RunnableTask"},{name:"twitter:description",content:"Develop your RunnableTask | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/docs/plugin-developer-guide/runnable-task/"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Develop your RunnableTask | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/docs/plugin-developer-guide/runnable-task/",relativePath:"docs/plugin-developer-guide/runnable-task/README.md",key:"v-5cb2b138",path:"/docs/plugin-developer-guide/runnable-task/",headers:[{level:2,title:"Class annotations",slug:"class-annotations",normalizedTitle:"class annotations",charIndex:1142},{level:2,title:"Class declaration",slug:"class-declaration",normalizedTitle:"class declaration",charIndex:1382},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:1835},{level:3,title:"Properties validation",slug:"properties-validation",normalizedTitle:"properties validation",charIndex:2366},{level:2,title:"Run",slug:"run",normalizedTitle:"run",charIndex:15},{level:3,title:"Log",slug:"log",normalizedTitle:"log",charIndex:656},{level:3,title:"Render variables",slug:"render-variables",normalizedTitle:"render variables",charIndex:4575},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:5088},{level:2,title:"Exception",slug:"exception",normalizedTitle:"exception",charIndex:636},{level:2,title:"Metrics",slug:"metrics",normalizedTitle:"metrics",charIndex:6416},{level:3,title:"Name",slug:"name",normalizedTitle:"name",charIndex:1625},{level:3,title:"Tags",slug:"tags",normalizedTitle:"tags",charIndex:7164},{level:2,title:"Documentation",slug:"documentation",normalizedTitle:"documentation",charIndex:7308},{level:3,title:"With @Schema",slug:"with-schema",normalizedTitle:"with @schema",charIndex:7590},{level:3,title:"With @Plugin on class",slug:"with-plugin-on-class",normalizedTitle:"with @plugin on class",charIndex:7875},{level:3,title:"With @PluginProperty on class",slug:"with-pluginproperty-on-class",normalizedTitle:"with @pluginproperty on class",charIndex:8403}],lastUpdated:"11/17/2020, 2:22:24 PM",headersStr:"Class annotations Class declaration Properties Properties validation Run Log Render variables Outputs Exception Metrics Name Tags Documentation With @Schema With @Plugin on class With @PluginProperty on class",content:'# Develop your RunnableTask\nHere is the instruction to develop the most common Runnable Task.\n\nHere is a simple task example that reverse a string:\n\n@SuperBuilder\n@ToString\n@EqualsAndHashCode\n@Getter\n@NoArgsConstructor\n@AllArgsConstructor\n@Schema(\n    title = "Reverse a string",\n    description = "Reverse all letters from a string"\n)\npublic class ReverseString extends Task implements RunnableTask<ReverseString.Output> {\n    @Schema(\n        title = "The base string you want to reverse"\n    )\n    @PluginProperty(dynamic = true) \n    private String format;\n\n    @Override\n    public Example.Output run(RunContext runContext) throws Exception {\n        Logger logger = runContext.logger();\n\n        String render = runContext.render(format);\n        logger.debug(render);\n\n        return Output.builder()\n            .reverse(StringUtils.reverse(render))\n            .build();\n    }\n\n    @Builder\n    @Getter\n    public static class Output implements org.kestra.core.models.tasks.Output {\n        @Schema(\n            title = "The reverse string "\n        )\n        private final String reverse;\n    }\n}\n\n\nLet look at these one deeply:\n\n# Class annotations\n@SuperBuilder\n@ToString\n@EqualsAndHashCode\n@Getter\n@NoArgsConstructor\n\n\nThese are required in order to make your plugin works with Kestra, these are Lombok that allow kestra and internal serialization to work properly.\n\n# Class declaration\npublic class ReverseString extends Task implements RunnableTask<Example.Output>\n\n\n * ReverseString is the name of your task and can be use on Kestra with type: org.kestra.task.templates.ReverseString (aka: {{package}}.{{className}})\n * Class must extends Task to be usable\n * implements RunnableTask<ReverseString.Output>: must implements RunnableTask to be discovered and must declared the output of the tasks ReverseString.Output\n\n# Properties\n    @PluginProperty(dynamic = true) \n    private String format;\n\n\nDeclare all the properties that you can pass to current task on flow. For example, this will be a valid yaml for this task:\n\ntype: org.kestra.task.templates.ReverseString\nformat: "{{outputs.previous-task.name}}"\n\n\nYou can declare as many properties you want, all of these will be filled by Kestra executors.\nYou can use any serializable by Jackson for your properties (ex: Double, boolean, ...). You can create any class since the class Serializable.\n\n# Properties validation\nProperties can be validated using javax.validation.constraints.* annotations. When the user creates a flow, your task properties will be validated before insertion and prevent wrong definition to be inserted.\n\nThe default available annotations are:\n\n * @Positive\n * @AssertFalse\n * @AssertTrue\n * @Max\n * @Min\n * @Negative\n * @NegativeOrZero\n * @Positive\n * @PositiveOrZero\n * @NotBlank\n * @NotNull\n * @Null\n * @NotEmpty\n * @Past\n * @PastOrPresent\n * @Future\n * @FutureOrPresent\n\nYou can also create your custom validation, you must defined the annotation\n\n@Retention(RetentionPolicy.RUNTIME)\n@Constraint(validatedBy = { })\npublic @interface CronExpression {\n    String message() default "invalid cron expression ({validatedValue})";\n}\n\n\nand a factory to inject the validation method :\n\n@Factory\npublic class ValidationFactory {\nprivate static final CronParser CRON_PARSER = new CronParser(CronDefinitionBuilder.instanceDefinitionFor(CronType.UNIX));\n\n    @Singleton\n    ConstraintValidator<CronExpression, CharSequence> cronExpressionValidator() {\n        return (value, annotationMetadata, context) -> {\n            if (value == null) {\n                return true;\n            }\n\n            try {\n                Cron parse = CRON_PARSER.parse(value.toString());\n                parse.validate();\n            } catch (IllegalArgumentException e) {\n                return false;\n            }\n\n            return true;\n        };\n    }\n}\n\n\n\n\n# Run\n    @Override\n    public Example.Output run(RunContext runContext) throws Exception {\n        Logger logger = runContext.logger();\n\n        String render = runContext.render(format);\n        logger.debug(render);\n\n        return Output.builder()\n            .reverse(StringUtils.reverse(render))\n            .build();\n    }\n\n\nIs where the main logic of your task will do all the work needed. You can used any Java code here with any libs you need until you have declared it Gradle configuration.\n\n# Log\nLogger logger = runContext.logger();\n\n\nTo have a logger, you need to use this instruction, this will provide a logger for the current execution and will be log properly, don\'t have your own logger in order to track log on the UI.\n\n# Render variables\nString render = runContext.render(format);\n\n\nIn order to use variables, you need to render the variables, aka: transform the properties with handlebars.\nJust don\'t forgot to render this variables if you need to pass some output from previous variables.\n\nYou also need to this annotations @PluginProperty(dynamic = true) in order to explain in the documentation that you can pass some variables.\nProvide a @PluginProperty(dynamic = false) to explain clearly that you don\'t transform the value.\n\n# Outputs\npublic class ReverseString extends Task implements RunnableTask<ReverseString.Output> {\n    @Override\n    public Example.Output run(RunContext runContext) throws Exception {\n        return Output.builder()\n            .reverse(StringUtils.reverse(render))\n            .build();\n    }\n\n    @Builder\n    @Getter\n    public static class Output implements org.kestra.core.models.tasks.Output {\n        @Schema(\n            title = "The reverse string "\n        )\n        private final String reverse;\n    }\n}\n\n\n\nEach task must return a class instance with outputs values that can be used for next tasks.\nYou must return a class that implements org.kestra.core.models.tasks.Output.\nYou can add as many properties as you want, but keep in mind that all theses must be serializable.\nAll output will be available for next task through variables.\n\nIf your task don\'t provide any outputs (mostly never), you can create a task like that:\n\npublic class NoOutput extends Task implements FlowableTask<VoidOutput> {\n    @Override\n    public VoidOutput run(RunContext runContext) throws Exception {\n        return null;\n    }\n}\n\n\n# Exception\nIn the run methods, you can throw any Exception that will be catch by Kestra and will failed the execution.\nWe advise you to throw any Exception that can break your task as soon as possible.\n\n# Metrics\nYou can send metrics to add some observability on your task. Metrics will be recorded with yout execution and will be show on the UI.\n\nThere is 2 kind of metrics :\n\n * Counter: Counter.of("your.counter", count, tags); with args * String name: The name of the metrics\n    * Double|Long|Integer|Float count: the counter associated\n    * String... tags: a list of tags associated with your metrics\n   \n   \n * Timer: Timer.of("your.duration", duration, tags); * String name: The name of the metrics\n    * Duration duration: the duration recorded\n    * String... tags: a list of tags associated with your metrics\n   \n   \n\nTo save metrics with execution, you need to use runContext.metric(metrics)\n\n# Name\nMust be lowercase separated by dots.\n\n# Tags\nMust be a key and value of tags. Example of a valid tags are :\n\nCounter.of("your.counter", count, "zone", "EU", "location", "france");\n\n\n# Documentation\nDocumentation (on the ui and on this website) is based on annotations.\nWe tried to guess as many documentation from javax annotation, default value from properties, ...\nBut some need to be declared manually in order to provide a full documentation for final users.\n\n# With @Schema\nMost are based on swagger annotation of package io.swagger.v3.oas.annotations.media.\n\nYou can add a @Schema on :\n\n * class\n * properties\n * output\n\nMost of @Schema properties can be used, most important are :\n\n * title\n * description\n * but feel free to used other one\n\n# With @Plugin on class\nWe have introduced @Plugin for the documentation that is out of scope of json schema.\n\nFor now only examples are available :\n\n@Plugin(\n    examples = @Example(\n        full = true,\n        title = "A schedule trigger",\n        code = {\n            "triggers:",\n            "  - id: schedule",\n            "    type: org.kestra.core.models.triggers.types.Schedule",\n            "    cron: \\"*/15 * * * *\\"",\n            "    backfill:",\n            "      start: 2020-06-25T14:00:00Z"\n        }\n    )\n)\n\n\n# With @PluginProperty on class\nLike @Plugin, @PluginProperty for the documentation that is out of scope of json schema.\n\n@PluginProperty(dynamic = true, additionalProperties = Task.class)\n\n\nFor now,\n\n * dynamic: to documentation Render variables\n * additionalProperties: to document for a Map<String, T> the T type.',normalizedContent:'# develop your runnabletask\nhere is the instruction to develop the most common runnable task.\n\nhere is a simple task example that reverse a string:\n\n@superbuilder\n@tostring\n@equalsandhashcode\n@getter\n@noargsconstructor\n@allargsconstructor\n@schema(\n    title = "reverse a string",\n    description = "reverse all letters from a string"\n)\npublic class reversestring extends task implements runnabletask<reversestring.output> {\n    @schema(\n        title = "the base string you want to reverse"\n    )\n    @pluginproperty(dynamic = true) \n    private string format;\n\n    @override\n    public example.output run(runcontext runcontext) throws exception {\n        logger logger = runcontext.logger();\n\n        string render = runcontext.render(format);\n        logger.debug(render);\n\n        return output.builder()\n            .reverse(stringutils.reverse(render))\n            .build();\n    }\n\n    @builder\n    @getter\n    public static class output implements org.kestra.core.models.tasks.output {\n        @schema(\n            title = "the reverse string "\n        )\n        private final string reverse;\n    }\n}\n\n\nlet look at these one deeply:\n\n# class annotations\n@superbuilder\n@tostring\n@equalsandhashcode\n@getter\n@noargsconstructor\n\n\nthese are required in order to make your plugin works with kestra, these are lombok that allow kestra and internal serialization to work properly.\n\n# class declaration\npublic class reversestring extends task implements runnabletask<example.output>\n\n\n * reversestring is the name of your task and can be use on kestra with type: org.kestra.task.templates.reversestring (aka: {{package}}.{{classname}})\n * class must extends task to be usable\n * implements runnabletask<reversestring.output>: must implements runnabletask to be discovered and must declared the output of the tasks reversestring.output\n\n# properties\n    @pluginproperty(dynamic = true) \n    private string format;\n\n\ndeclare all the properties that you can pass to current task on flow. for example, this will be a valid yaml for this task:\n\ntype: org.kestra.task.templates.reversestring\nformat: "{{outputs.previous-task.name}}"\n\n\nyou can declare as many properties you want, all of these will be filled by kestra executors.\nyou can use any serializable by jackson for your properties (ex: double, boolean, ...). you can create any class since the class serializable.\n\n# properties validation\nproperties can be validated using javax.validation.constraints.* annotations. when the user creates a flow, your task properties will be validated before insertion and prevent wrong definition to be inserted.\n\nthe default available annotations are:\n\n * @positive\n * @assertfalse\n * @asserttrue\n * @max\n * @min\n * @negative\n * @negativeorzero\n * @positive\n * @positiveorzero\n * @notblank\n * @notnull\n * @null\n * @notempty\n * @past\n * @pastorpresent\n * @future\n * @futureorpresent\n\nyou can also create your custom validation, you must defined the annotation\n\n@retention(retentionpolicy.runtime)\n@constraint(validatedby = { })\npublic @interface cronexpression {\n    string message() default "invalid cron expression ({validatedvalue})";\n}\n\n\nand a factory to inject the validation method :\n\n@factory\npublic class validationfactory {\nprivate static final cronparser cron_parser = new cronparser(crondefinitionbuilder.instancedefinitionfor(crontype.unix));\n\n    @singleton\n    constraintvalidator<cronexpression, charsequence> cronexpressionvalidator() {\n        return (value, annotationmetadata, context) -> {\n            if (value == null) {\n                return true;\n            }\n\n            try {\n                cron parse = cron_parser.parse(value.tostring());\n                parse.validate();\n            } catch (illegalargumentexception e) {\n                return false;\n            }\n\n            return true;\n        };\n    }\n}\n\n\n\n\n# run\n    @override\n    public example.output run(runcontext runcontext) throws exception {\n        logger logger = runcontext.logger();\n\n        string render = runcontext.render(format);\n        logger.debug(render);\n\n        return output.builder()\n            .reverse(stringutils.reverse(render))\n            .build();\n    }\n\n\nis where the main logic of your task will do all the work needed. you can used any java code here with any libs you need until you have declared it gradle configuration.\n\n# log\nlogger logger = runcontext.logger();\n\n\nto have a logger, you need to use this instruction, this will provide a logger for the current execution and will be log properly, don\'t have your own logger in order to track log on the ui.\n\n# render variables\nstring render = runcontext.render(format);\n\n\nin order to use variables, you need to render the variables, aka: transform the properties with handlebars.\njust don\'t forgot to render this variables if you need to pass some output from previous variables.\n\nyou also need to this annotations @pluginproperty(dynamic = true) in order to explain in the documentation that you can pass some variables.\nprovide a @pluginproperty(dynamic = false) to explain clearly that you don\'t transform the value.\n\n# outputs\npublic class reversestring extends task implements runnabletask<reversestring.output> {\n    @override\n    public example.output run(runcontext runcontext) throws exception {\n        return output.builder()\n            .reverse(stringutils.reverse(render))\n            .build();\n    }\n\n    @builder\n    @getter\n    public static class output implements org.kestra.core.models.tasks.output {\n        @schema(\n            title = "the reverse string "\n        )\n        private final string reverse;\n    }\n}\n\n\n\neach task must return a class instance with outputs values that can be used for next tasks.\nyou must return a class that implements org.kestra.core.models.tasks.output.\nyou can add as many properties as you want, but keep in mind that all theses must be serializable.\nall output will be available for next task through variables.\n\nif your task don\'t provide any outputs (mostly never), you can create a task like that:\n\npublic class nooutput extends task implements flowabletask<voidoutput> {\n    @override\n    public voidoutput run(runcontext runcontext) throws exception {\n        return null;\n    }\n}\n\n\n# exception\nin the run methods, you can throw any exception that will be catch by kestra and will failed the execution.\nwe advise you to throw any exception that can break your task as soon as possible.\n\n# metrics\nyou can send metrics to add some observability on your task. metrics will be recorded with yout execution and will be show on the ui.\n\nthere is 2 kind of metrics :\n\n * counter: counter.of("your.counter", count, tags); with args * string name: the name of the metrics\n    * double|long|integer|float count: the counter associated\n    * string... tags: a list of tags associated with your metrics\n   \n   \n * timer: timer.of("your.duration", duration, tags); * string name: the name of the metrics\n    * duration duration: the duration recorded\n    * string... tags: a list of tags associated with your metrics\n   \n   \n\nto save metrics with execution, you need to use runcontext.metric(metrics)\n\n# name\nmust be lowercase separated by dots.\n\n# tags\nmust be a key and value of tags. example of a valid tags are :\n\ncounter.of("your.counter", count, "zone", "eu", "location", "france");\n\n\n# documentation\ndocumentation (on the ui and on this website) is based on annotations.\nwe tried to guess as many documentation from javax annotation, default value from properties, ...\nbut some need to be declared manually in order to provide a full documentation for final users.\n\n# with @schema\nmost are based on swagger annotation of package io.swagger.v3.oas.annotations.media.\n\nyou can add a @schema on :\n\n * class\n * properties\n * output\n\nmost of @schema properties can be used, most important are :\n\n * title\n * description\n * but feel free to used other one\n\n# with @plugin on class\nwe have introduced @plugin for the documentation that is out of scope of json schema.\n\nfor now only examples are available :\n\n@plugin(\n    examples = @example(\n        full = true,\n        title = "a schedule trigger",\n        code = {\n            "triggers:",\n            "  - id: schedule",\n            "    type: org.kestra.core.models.triggers.types.schedule",\n            "    cron: \\"*/15 * * * *\\"",\n            "    backfill:",\n            "      start: 2020-06-25t14:00:00z"\n        }\n    )\n)\n\n\n# with @pluginproperty on class\nlike @plugin, @pluginproperty for the documentation that is out of scope of json schema.\n\n@pluginproperty(dynamic = true, additionalproperties = task.class)\n\n\nfor now,\n\n * dynamic: to documentation render variables\n * additionalproperties: to document for a map<string, t> the t type.',charsets:{cjk:!0},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"Downloads",frontmatter:{title:"Downloads",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Downloads"},{property:"og:description",content:"Downloads | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.Downloads.html"},{name:"twitter:title",content:"Downloads"},{name:"twitter:description",content:"Downloads | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.Downloads.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Downloads | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.Downloads.html",relativePath:"plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.Downloads.md",key:"v-28b0bb5a",path:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.Downloads.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:105},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:333},{level:3,title:"action",slug:"action",normalizedTitle:"action",charIndex:270},{level:3,title:"allVersions",slug:"allversions",normalizedTitle:"allversions",charIndex:481},{level:3,title:"filter",slug:"filter",normalizedTitle:"filter",charIndex:615},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:82},{level:3,title:"listingType",slug:"listingtype",normalizedTitle:"listingtype",charIndex:802},{level:3,title:"moveDirectory",slug:"movedirectory",normalizedTitle:"movedirectory",charIndex:283},{level:3,title:"projectId",slug:"projectid",normalizedTitle:"projectid",charIndex:1054},{level:3,title:"regExp",slug:"regexp",normalizedTitle:"regexp",charIndex:1136},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:1228},{level:3,title:"blobs",slug:"blobs",normalizedTitle:"blobs",charIndex:1238}],headersStr:"Examples Inputs action allVersions filter from listingType moveDirectory projectId regExp Outputs blobs",content:'# Downloads\ntype: "org.kestra.task.gcp.gcs.Downloads"\n\n\n> Download multiple files from a GCS bucket.\n\n\n# Examples\n> Download a list of files and move it to an archive folders\n\n\nid: "downloads"\ntype: "org.kestra.task.gcp.gcs.Downloads"\nfrom: gs://my-bucket/kestra/files/\naction: MOVE\nmoveDirectory: gs://my-bucket/kestra/archive/\n\n\n# Inputs\n# action\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The action to do on find files\n\n\nCan be null, in this case no action is perform\n\n# allVersions\n * Type: boolean\n * Dynamic: ✔️\n * Required: ❌\n\n> If set to true, lists all versions of a blob. The default is false.\n\n\n# filter\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Default: BOTH\n\n> The filter files or directory\n\n\n# from\n * Type: string\n * Dynamic: ✔️\n * Required: ✔️\n\n> The directory to list\n\n\n# listingType\n * Type: string\n * Dynamic: ❓\n * Required: ❌\n * Default: DIRECTORY\n\n> The listing type you want (like directory or recursive)\n\n\n# moveDirectory\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The destination directory in case off MOVE\n\n\n# projectId\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The GCP project id\n\n\n# regExp\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> A regexp to filter on full path\n\n\n# Outputs\n# blobs\n * Type: array\n * SubType: object\n\n> The bucket of the downloaded file',normalizedContent:'# downloads\ntype: "org.kestra.task.gcp.gcs.downloads"\n\n\n> download multiple files from a gcs bucket.\n\n\n# examples\n> download a list of files and move it to an archive folders\n\n\nid: "downloads"\ntype: "org.kestra.task.gcp.gcs.downloads"\nfrom: gs://my-bucket/kestra/files/\naction: move\nmovedirectory: gs://my-bucket/kestra/archive/\n\n\n# inputs\n# action\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the action to do on find files\n\n\ncan be null, in this case no action is perform\n\n# allversions\n * type: boolean\n * dynamic: ✔️\n * required: ❌\n\n> if set to true, lists all versions of a blob. the default is false.\n\n\n# filter\n * type: string\n * dynamic: ❓\n * required: ❌\n * default: both\n\n> the filter files or directory\n\n\n# from\n * type: string\n * dynamic: ✔️\n * required: ✔️\n\n> the directory to list\n\n\n# listingtype\n * type: string\n * dynamic: ❓\n * required: ❌\n * default: directory\n\n> the listing type you want (like directory or recursive)\n\n\n# movedirectory\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the destination directory in case off move\n\n\n# projectid\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the gcp project id\n\n\n# regexp\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> a regexp to filter on full path\n\n\n# outputs\n# blobs\n * type: array\n * subtype: object\n\n> the bucket of the downloaded file',charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}},{title:"Download",frontmatter:{title:"Download",editLink:!1,meta:[{property:"og:site_name",content:"Kestra"},{property:"og:title",content:"Download"},{property:"og:description",content:"Download | The modern, scalable orchestrator & scheduler open source platform."},{property:"og:type",content:"website"},{property:"og:url",content:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.Download.html"},{name:"twitter:title",content:"Download"},{name:"twitter:description",content:"Download | The modern, scalable orchestrator & scheduler open source platform."},{name:"twitter:url",content:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.Download.html"},{name:"twitter:card",content:"summary_large_image"},{name:"description",content:"Download | The modern, scalable orchestrator & scheduler open source platform."}]},regularPath:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.Download.html",relativePath:"plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.Download.md",key:"v-56588943",path:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.Download.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:95},{level:2,title:"Inputs",slug:"inputs",normalizedTitle:"inputs",charIndex:200},{level:3,title:"from",slug:"from",normalizedTitle:"from",charIndex:72},{level:3,title:"projectId",slug:"projectid",normalizedTitle:"projectid",charIndex:284},{level:2,title:"Outputs",slug:"outputs",normalizedTitle:"outputs",charIndex:366},{level:3,title:"bucket",slug:"bucket",normalizedTitle:"bucket",charIndex:83},{level:3,title:"path",slug:"path",normalizedTitle:"path",charIndex:440},{level:3,title:"uri",slug:"uri",normalizedTitle:"uri",charIndex:514}],headersStr:"Examples Inputs from projectId Outputs bucket path uri",content:'# Download\ntype: "org.kestra.task.gcp.gcs.Download"\n\n\n> Download a file from a GCS bucket.\n\n\n# Examples\nid: "download"\ntype: "org.kestra.task.gcp.gcs.Download"\nfrom: "gs://my_bucket/dir/file.csv"\n\n\n# Inputs\n# from\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The file to copy\n\n\n# projectId\n * Type: string\n * Dynamic: ✔️\n * Required: ❌\n\n> The GCP project id\n\n\n# Outputs\n# bucket\n * Type: string\n\n> The bucket of the downloaded file\n\n\n# path\n * Type: string\n\n> The path on the bucket of the downloaded file\n\n\n# uri\n * Type: object\n\n> The url of the downloaded file on kestra storage',normalizedContent:'# download\ntype: "org.kestra.task.gcp.gcs.download"\n\n\n> download a file from a gcs bucket.\n\n\n# examples\nid: "download"\ntype: "org.kestra.task.gcp.gcs.download"\nfrom: "gs://my_bucket/dir/file.csv"\n\n\n# inputs\n# from\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the file to copy\n\n\n# projectid\n * type: string\n * dynamic: ✔️\n * required: ❌\n\n> the gcp project id\n\n\n# outputs\n# bucket\n * type: string\n\n> the bucket of the downloaded file\n\n\n# path\n * type: string\n\n> the path on the bucket of the downloaded file\n\n\n# uri\n * type: object\n\n> the url of the downloaded file on kestra storage',charsets:{},rightAnchor:{isIgnore:!1,expand:{default:!0,trigger:"hover"}}}],themeConfig:{logo:"/logo.svg",repo:"kestra-io/kestra",repoLabel:"GitHub",docsRepo:"kestra-io/kestra.io",editLinks:!0,smoothScroll:!0,nav:[{text:"Documentation",link:"/docs/"},{text:"Plugins",link:"/plugins/"}],sidebar:{"/plugins/":[{title:"Plugins",collapsable:!0,sidebarDepth:1,children:[{path:"/plugins/",title:"Plugins",readme:!0},{path:"/plugins/core/",title:"Core",readme:!0,children:[{title:"Conditions",children:[{path:"/plugins/core/conditions/org.kestra.core.models.conditions.types.ExecutionFlowCondition",title:"ExecutionFlowCondition",readme:!1},{path:"/plugins/core/conditions/org.kestra.core.models.conditions.types.ExecutionNamespaceCondition",title:"ExecutionNamespaceCondition",readme:!1},{path:"/plugins/core/conditions/org.kestra.core.models.conditions.types.ExecutionStatusCondition",title:"ExecutionStatusCondition",readme:!1},{path:"/plugins/core/conditions/org.kestra.core.models.conditions.types.FlowCondition",title:"FlowCondition",readme:!1},{path:"/plugins/core/conditions/org.kestra.core.models.conditions.types.FlowNamespaceCondition",title:"FlowNamespaceCondition",readme:!1},{path:"/plugins/core/conditions/org.kestra.core.models.conditions.types.VariableCondition",title:"VariableCondition",readme:!1},{path:"/plugins/core/conditions/org.kestra.core.models.listeners.types.ExecutionStatusCondition",title:"ExecutionStatusCondition",readme:!1}]},{title:"Tasks",children:[{title:"Debugs",children:[{path:"/plugins/core/tasks/debugs/org.kestra.core.tasks.debugs.Echo",title:"Echo",readme:!1},{path:"/plugins/core/tasks/debugs/org.kestra.core.tasks.debugs.Return",title:"Return",readme:!1}]},{title:"Flows",children:[{path:"/plugins/core/tasks/flows/org.kestra.core.tasks.flows.AllowFailure",title:"AllowFailure",readme:!1},{path:"/plugins/core/tasks/flows/org.kestra.core.tasks.flows.EachParallel",title:"EachParallel",readme:!1},{path:"/plugins/core/tasks/flows/org.kestra.core.tasks.flows.EachSequential",title:"EachSequential",readme:!1},{path:"/plugins/core/tasks/flows/org.kestra.core.tasks.flows.Flow",title:"Flow",readme:!1},{path:"/plugins/core/tasks/flows/org.kestra.core.tasks.flows.Parallel",title:"Parallel",readme:!1},{path:"/plugins/core/tasks/flows/org.kestra.core.tasks.flows.Sequential",title:"Sequential",readme:!1},{path:"/plugins/core/tasks/flows/org.kestra.core.tasks.flows.Switch",title:"Switch",readme:!1},{path:"/plugins/core/tasks/flows/org.kestra.core.tasks.flows.Template",title:"Template",readme:!1}]},{title:"Scripts",children:[{path:"/plugins/core/tasks/scripts/org.kestra.core.tasks.scripts.Bash",title:"Bash",readme:!1},{path:"/plugins/core/tasks/scripts/org.kestra.core.tasks.scripts.Node",title:"Node",readme:!1},{path:"/plugins/core/tasks/scripts/org.kestra.core.tasks.scripts.Python",title:"Python",readme:!1}]},{title:"Storages",children:[{path:"/plugins/core/tasks/storages/org.kestra.core.tasks.storages.Concat",title:"Concat",readme:!1},{path:"/plugins/core/tasks/storages/org.kestra.core.tasks.storages.Delete",title:"Delete",readme:!1}]}]},{title:"Triggers",children:[{path:"/plugins/core/triggers/org.kestra.core.models.triggers.types.Flow",title:"Flow",readme:!1},{path:"/plugins/core/triggers/org.kestra.core.models.triggers.types.Schedule",title:"Schedule",readme:!1}]}]},{path:"/plugins/task-aws/",title:"Task aws",readme:!0,children:[{title:"Tasks",children:[{title:"S3",children:[{path:"/plugins/task-aws/tasks/s3/org.kestra.task.aws.s3.CreateBucket",title:"CreateBucket",readme:!1},{path:"/plugins/task-aws/tasks/s3/org.kestra.task.aws.s3.Delete",title:"Delete",readme:!1},{path:"/plugins/task-aws/tasks/s3/org.kestra.task.aws.s3.Download",title:"Download",readme:!1},{path:"/plugins/task-aws/tasks/s3/org.kestra.task.aws.s3.Upload",title:"Upload",readme:!1}]}]}]},{path:"/plugins/task-crypto/",title:"Task crypto",readme:!0,children:[{title:"Tasks",children:[{title:"Openpgp",children:[{path:"/plugins/task-crypto/tasks/openpgp/org.kestra.task.crypto.openpgp.Decrypt",title:"Decrypt",readme:!1},{path:"/plugins/task-crypto/tasks/openpgp/org.kestra.task.crypto.openpgp.Encrypt",title:"Encrypt",readme:!1}]}]}]},{path:"/plugins/task-gcp/",title:"Task gcp",readme:!0,children:[{title:"Tasks",children:[{title:"Auth",children:[{path:"/plugins/task-gcp/tasks/auth/org.kestra.task.gcp.auth.OauthAccessToken",title:"OauthAccessToken",readme:!1}]},{title:"Bigquery",children:[{path:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.CreateDataset",title:"CreateDataset",readme:!1},{path:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.DeleteDataset",title:"DeleteDataset",readme:!1},{path:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.ExtractToGcs",title:"ExtractToGcs",readme:!1},{path:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.Load",title:"Load",readme:!1},{path:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.LoadFromGcs",title:"LoadFromGcs",readme:!1},{path:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.Query",title:"Query",readme:!1},{path:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.TableMetadata",title:"TableMetadata",readme:!1},{path:"/plugins/task-gcp/tasks/bigquery/org.kestra.task.gcp.bigquery.UpdateDataset",title:"UpdateDataset",readme:!1}]},{title:"Gcs",children:[{path:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.Copy",title:"Copy",readme:!1},{path:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.CreateBucket",title:"CreateBucket",readme:!1},{path:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.Delete",title:"Delete",readme:!1},{path:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.DeleteBucket",title:"DeleteBucket",readme:!1},{path:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.Download",title:"Download",readme:!1},{path:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.Downloads",title:"Downloads",readme:!1},{path:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.List",title:"List",readme:!1},{path:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.UpdateBucket",title:"UpdateBucket",readme:!1},{path:"/plugins/task-gcp/tasks/gcs/org.kestra.task.gcp.gcs.Upload",title:"Upload",readme:!1}]},{title:"Gke",children:[{path:"/plugins/task-gcp/tasks/gke/org.kestra.task.gcp.gke.ClusterMetadata",title:"ClusterMetadata",readme:!1}]}]},{title:"Triggers",children:[{title:"Gcs",children:[{path:"/plugins/task-gcp/triggers/gcs/org.kestra.task.gcp.gcs.Trigger",title:"Trigger",readme:!1}]}]}]},{path:"/plugins/task-jdbc-mysql/",title:"Task jdbc mysql",readme:!0,children:[{title:"Tasks",children:[{title:"Mysql",children:[{path:"/plugins/task-jdbc-mysql/tasks/mysql/org.kestra.task.jdbc.mysql.Query",title:"Query",readme:!1}]}]}]},{path:"/plugins/task-jdbc-postgres/",title:"Task jdbc postgres",readme:!0,children:[{title:"Tasks",children:[{title:"Postgresql",children:[{path:"/plugins/task-jdbc-postgres/tasks/postgresql/org.kestra.task.jdbc.postgresql.Query",title:"Query",readme:!1}]}]}]},{path:"/plugins/task-kubernetes/",title:"Task kubernetes",readme:!0,children:[{title:"Tasks",children:[{path:"/plugins/task-kubernetes/tasks/org.kestra.task.kubernetes.JobCreate",title:"JobCreate",readme:!1}]}]},{path:"/plugins/task-notifications/",title:"Task notifications",readme:!0,children:[{title:"Tasks",children:[{title:"Mail",children:[{path:"/plugins/task-notifications/tasks/mail/org.kestra.task.notifications.mail.MailExecution",title:"MailExecution",readme:!1},{path:"/plugins/task-notifications/tasks/mail/org.kestra.task.notifications.mail.MailSend",title:"MailSend",readme:!1}]},{title:"Slack",children:[{path:"/plugins/task-notifications/tasks/slack/org.kestra.task.notifications.slack.SlackExecution",title:"SlackExecution",readme:!1},{path:"/plugins/task-notifications/tasks/slack/org.kestra.task.notifications.slack.SlackIncomingWebhook",title:"SlackIncomingWebhook",readme:!1}]}]}]},{path:"/plugins/task-serdes/",title:"Task serdes",readme:!0,children:[{title:"Tasks",children:[{title:"Avro",children:[{path:"/plugins/task-serdes/tasks/avro/org.kestra.task.serdes.avro.AvroWriter",title:"AvroWriter",readme:!1}]},{title:"Csv",children:[{path:"/plugins/task-serdes/tasks/csv/org.kestra.task.serdes.csv.CsvReader",title:"CsvReader",readme:!1},{path:"/plugins/task-serdes/tasks/csv/org.kestra.task.serdes.csv.CsvWriter",title:"CsvWriter",readme:!1}]},{title:"Json",children:[{path:"/plugins/task-serdes/tasks/json/org.kestra.task.serdes.json.JsonReader",title:"JsonReader",readme:!1},{path:"/plugins/task-serdes/tasks/json/org.kestra.task.serdes.json.JsonWriter",title:"JsonWriter",readme:!1}]}]}]}]}],"/docs/":[{title:"Documentation",path:"/docs",collapsable:!1,sidebarDepth:1,children:[{path:"/docs/",title:"What’s Kestra?",readme:!0,order:0},{path:"/docs/getting-started/",title:"Getting Started",readme:!0,order:1},{path:"/docs/concepts/",title:"Concepts",readme:!0,order:2,children:[{path:"/docs/concepts/flows",title:"Flow",readme:!1,order:1},{path:"/docs/concepts/executions",title:"Execution",readme:!1,order:2}]},{path:"/docs/architecture/",title:"Architecture",readme:!0,order:3},{path:"/docs/developer-guide/",title:"Developer Guide",readme:!0,order:4,children:[{path:"/docs/developer-guide/flow/",title:"Flow",readme:!0,order:1},{path:"/docs/developer-guide/flowable/",title:"Flowable Task",readme:!0,order:2},{path:"/docs/developer-guide/variables/",title:"Variables",readme:!0,order:2,children:[{path:"/docs/developer-guide/variables/boolean",title:"Boolean functions",readme:!1},{path:"/docs/developer-guide/variables/date",title:"Date functions",readme:!1},{path:"/docs/developer-guide/variables/iterations",title:"Iterations functions",readme:!1},{path:"/docs/developer-guide/variables/json",title:"JSON functions",readme:!1},{path:"/docs/developer-guide/variables/number",title:"Number functions",readme:!1},{path:"/docs/developer-guide/variables/string",title:"String functions",readme:!1},{path:"/docs/developer-guide/variables/vars",title:"Vars functions",readme:!1}]},{path:"/docs/developer-guide/inputs/",title:"Inputs",readme:!0,order:3},{path:"/docs/developer-guide/outputs/",title:"Outputs",readme:!0,order:4},{path:"/docs/developer-guide/errors-handling/",title:"Errors handling",readme:!0,order:5},{path:"/docs/developer-guide/triggers/",title:"Triggers & schedule",readme:!0,order:5,children:[{path:"/docs/developer-guide/triggers/flow",title:"Flow trigger",readme:!1},{path:"/docs/developer-guide/triggers/schedule",title:"Schedule",readme:!1}]},{path:"/docs/developer-guide/retries/",title:"Retries",readme:!0,order:6},{path:"/docs/developer-guide/conditions/",title:"Conditions",readme:!0,order:7},{path:"/docs/developer-guide/listeners/",title:"Listeners",readme:!0,order:8},{path:"/docs/developer-guide/templates/",title:"Templates",readme:!0,order:9},{path:"/docs/developer-guide/helpers/",title:"Helpers",readme:!0,order:10},{path:"/docs/developer-guide/documentation/",title:"Document your flow",readme:!0,order:11},{path:"/docs/developer-guide/plugins/",title:"Plugins",readme:!0,order:12}]},{path:"/docs/administrator-guide/",title:"Administrator Guide",readme:!0,order:5,children:[{path:"/docs/administrator-guide/deployment/",title:"Installation guide",readme:!0,order:1,children:[{path:"/docs/administrator-guide/deployment/docker/",title:"Deployment with Docker",readme:!0,order:1},{path:"/docs/administrator-guide/deployment/kubernetes/",title:"Deployment on Kubernetes",readme:!0,order:2},{path:"/docs/administrator-guide/deployment/manual/",title:"Manual deployment",readme:!0,order:3}]},{path:"/docs/administrator-guide/servers/",title:"Kestra servers",readme:!0,order:2},{path:"/docs/administrator-guide/configuration/",title:"Configuration",readme:!0,order:3,children:[{path:"/docs/administrator-guide/configuration/kafka/",title:"Kafka configuration",readme:!0,order:1},{path:"/docs/administrator-guide/configuration/elasticsearch/",title:"ElasticSearch configuration",readme:!0,order:2},{path:"/docs/administrator-guide/configuration/storage/",title:"Storage configuration",readme:!0,order:3},{path:"/docs/administrator-guide/configuration/micronaut/",title:"Micronaut configuration",readme:!0,order:4},{path:"/docs/administrator-guide/configuration/others/",title:"Others Kestra configuration",readme:!0,order:4}]},{path:"/docs/administrator-guide/monitoring/",title:"Monitoring & Alerting",readme:!0,order:4}]},{path:"/docs/plugin-developer-guide/",title:"Plugin Developer Guide",readme:!0,order:6,children:[{path:"/docs/plugin-developer-guide/gradle/",title:"Gradle configuration",readme:!0,order:1},{path:"/docs/plugin-developer-guide/runnable-task/",title:"Develop your RunnableTask",readme:!0,order:2},{path:"/docs/plugin-developer-guide/flowable-task/",title:"Develop your FlowableTask",readme:!0,order:3},{path:"/docs/plugin-developer-guide/triggers/",title:"Develop your Trigger",readme:!0,order:4},{path:"/docs/plugin-developer-guide/conditions/",title:"Develop your Condition",readme:!0,order:5},{path:"/docs/plugin-developer-guide/unit-test/",title:"Add unit tests",readme:!0,order:6},{path:"/docs/plugin-developer-guide/outputs/",title:"Outputs & Metrics from a script engine",readme:!0,order:7},{path:"/docs/plugin-developer-guide/build/",title:"Build a plugin",readme:!0,order:8},{path:"/docs/plugin-developer-guide/publish/",title:"Publish a plugin",readme:!0,order:9}]},{path:"/docs/user-interface-guide/",title:"User Interface Guide",readme:!0,order:6}]}]}}};n(320),n(321);Ra.component("BlogsList",(function(){return Promise.all([n.e(0),n.e(1),n.e(7)]).then(n.bind(null,635))})),Ra.component("BlogsPost",(function(){return Promise.all([n.e(0),n.e(1),n.e(20)]).then(n.bind(null,633))})),Ra.component("LandingFeature",(function(){return Promise.all([n.e(0),n.e(9)]).then(n.bind(null,632))})),Ra.component("LandingFooter",(function(){return Promise.all([n.e(0),n.e(19),n.e(10)]).then(n.bind(null,630))})),Ra.component("LandingHeader",(function(){return Promise.all([n.e(0),n.e(3),n.e(11)]).then(n.bind(null,637))})),Ra.component("LandingPlugins",(function(){return Promise.all([n.e(0),n.e(12)]).then(n.bind(null,636))})),Ra.component("LandingTech",(function(){return Promise.all([n.e(0),n.e(13)]).then(n.bind(null,634))})),Ra.component("LandingVideo",(function(){return Promise.all([n.e(0),n.e(14)]).then(n.bind(null,638))})),Ra.component("Layout",(function(){return Promise.all([n.e(0),n.e(1),n.e(24)]).then(n.bind(null,345))})),Ra.component("TimeAgo",(function(){return n.e(25).then(n.bind(null,399))})),Ra.component("Badge",(function(){return Promise.all([n.e(0),n.e(15)]).then(n.bind(null,761))})),Ra.component("CodeBlock",(function(){return Promise.all([n.e(0),n.e(16)]).then(n.bind(null,631))})),Ra.component("CodeGroup",(function(){return Promise.all([n.e(0),n.e(17)]).then(n.bind(null,628))}));n(322);var Ls={name:"BackToTop",props:{threshold:{type:Number,default:300}},data:function(){return{scrollTop:null}},computed:{show:function(){return this.scrollTop>this.threshold}},mounted:function(){var e=this;this.scrollTop=this.getScrollTop(),window.addEventListener("scroll",rs()((function(){e.scrollTop=e.getScrollTop()}),100))},methods:{getScrollTop:function(){return window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0},scrollToTop:function(){window.scrollTo({top:0,behavior:"smooth"}),this.scrollTop=0}}},Fs=(n(323),Object(Ss.a)(Ls,(function(){var e=this.$createElement,t=this._self._c||e;return t("transition",{attrs:{name:"fade"}},[this.show?t("svg",{staticClass:"go-to-top",attrs:{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 49.484 28.284"},on:{click:this.scrollToTop}},[t("g",{attrs:{transform:"translate(-229 -126.358)"}},[t("rect",{attrs:{fill:"currentColor",width:"35",height:"5",rx:"2",transform:"translate(229 151.107) rotate(-45)"}}),this._v(" "),t("rect",{attrs:{fill:"currentColor",width:"35",height:"5",rx:"2",transform:"translate(274.949 154.642) rotate(-135)"}})])]):this._e()])}),[],!1,null,"5fd4ef0c",null).exports),Ms=(n(324),n(74),n(191),n(325),n(187),{name:"ChildTableOfContents",props:{header:{type:Boolean,default:!1},pageUrl:{type:String,default:void 0},max:{type:Number,default:void 0},level:{type:Number,default:void 0}},computed:{items:function(){var e=this.pageUrl||this.$page.regularPath;return this.itemChilds(e)}},methods:{allChilds:function(){return this.$site.pages.sort((function(e,t){var n=e.frontmatter&&e.frontmatter.order,r=t.frontmatter&&t.frontmatter.order;return n&&r?n>r?1:-1:0}))},itemChilds:function(e){return this.allChilds().filter((function(t){if(!t.regularPath.startsWith(e)||t.regularPath===e)return!1;var n=t.regularPath.substr(e.length).split("/");return!(!t.regularPath.endsWith("/")||2!==n.length)||!(!t.regularPath.endsWith(".html")||1!==n.length)}))},itemHeaders:function(e){return(e||[]).filter((function(e){return 2===e.level}))},nextLevel:function(){if(void 0!==this.max)return(void 0===this.level?1:this.level)+1},isMax:function(){return void 0!==this.max&&(1===this.max&&void 0===this.level||this.max<=this.level)}}}),Ns=Object(Ss.a)(Ms,(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ul",e._l(e.items,(function(t){return n("li",{key:t.path},[n("router-link",{attrs:{to:t.path}},[e._v(e._s(t.title||t.path))]),e._v(" "),e.header&&e.itemHeaders(t.headers)?n("ul",e._l(e.itemHeaders(t.headers),(function(r){return n("li",{key:r.slug},[n("router-link",{attrs:{to:t.path+"#"+r.slug}},[e._v(e._s(r.title))])],1)})),0):e._e(),e._v(" "),e.isMax()?e._e():n("child-table-of-contents",{attrs:{"page-url":t.regularPath,header:e.header,max:e.max,level:e.nextLevel()}})],1)})),0)}),[],!1,null,null,null).exports,Ks={name:"right-anchor",props:{global:Boolean},data:function(){return{listData:[],activeIndex:null,expanded:!0}},watch:{"$page.regularPath":function(){this.filterDataByLevel()}},computed:{visible:function(){return this.listData&&this.listData.length&&!(this.rightAnchorOption.disableGlobalUI&&this.global)},rightAnchorOption:function(){return this.$page.rightAnchor},expandOption:function(){var e;return null===(e=this.$page.rightAnchor)||void 0===e?void 0:e.expand}},methods:{mouseover:function(){"hover"!==this.expandOption.trigger||this.expandOption.default||(this.expanded=!0)},mouseleave:function(){"hover"!==this.expandOption.trigger||this.expandOption.default||(this.expanded=!1)},btnClick:function(){"click"===this.expandOption.trigger&&(this.expanded=!this.expanded)},itemClick:function(e,t){this.activeIndex=e,window.scrollTo({top:document.getElementById(t).offsetTop,behavior:"smooth"})},filterDataByLevel:function(){var e=this;this.listData=[];var t=this.$page.headers,n=this.rightAnchorOption,r=n.isIgnore,a=n.showDepth;!r&&0!==a&&t&&(a?t.forEach((function(t){t.level<=a+1&&e.listData.push(JSON.parse(JSON.stringify(t)))})):this.listData=JSON.parse(JSON.stringify(t)),this.$nextTick((function(){e.listData.forEach((function(t){e.getEleById(t.slug).then((function(e){t.offsetTop=e.offsetTop}))}))})))},getEleById:function(e){return new Promise((function(t){var n=setInterval((function(){var r=document.getElementById(e);r&&(clearInterval(n),t(r))}),100)}))},getScrollTop:function(){return window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0}},created:function(){var e;this.expanded=null===(e=this.expandOption)||void 0===e?void 0:e.default},mounted:function(){var e=this;this.filterDataByLevel(),window.addEventListener("scroll",rs()((function(){var t=e.getScrollTop();e.listData.map((function(n,r){n.offsetTop&&t>=n.offsetTop&&(e.activeIndex=r)}))}),300))}},Bs=(n(326),Object(Ss.a)(Ks,(function(){var e=this,t=e.$createElement,n=e._self._c||t;return e.visible?n("div",{staticClass:"ra-wrapper",class:[e.rightAnchorOption.customClass,e.global&&"is-global"],on:{mouseover:e.mouseover,mouseleave:e.mouseleave}},[e.expandOption.default&&"click"!==e.expandOption.trigger?e._e():n("div",{staticClass:"ra-button",on:{click:e.btnClick}},[n("svg",{staticClass:"icon",attrs:{xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",role:"img",viewBox:"0 0 448 512"}},[n("path",{attrs:{fill:"currentColor",d:"M436 124H12c-6.627 0-12-5.373-12-12V80c0-6.627 5.373-12 12-12h424c6.627 0 12 5.373 12 12v32c0 6.627-5.373 12-12 12zm0 160H12c-6.627 0-12-5.373-12-12v-32c0-6.627 5.373-12 12-12h424c6.627 0 12 5.373 12 12v32c0 6.627-5.373 12-12 12zm0 160H12c-6.627 0-12-5.373-12-12v-32c0-6.627 5.373-12 12-12h424c6.627 0 12 5.373 12 12v32c0 6.627-5.373 12-12 12z"}})])]),e._v(" "),e.expanded?n("ul",{staticClass:"ra-menu"},e._l(e.listData,(function(t,r){return n("li",{key:r,staticClass:"ra-menu-item",class:{active:r===e.activeIndex,sub:3===t.level},on:{click:function(n){return e.itemClick(r,t.slug)}}},[e._v("\n      "+e._s(t.title)+"\n    ")])})),0):e._e()]):e._e()}),[],!1,null,"7d6fa5ec",null).exports),Us=[function(e){e.Vue,e.options,e.router,e.siteData},{},function(e){e.Vue.mixin({computed:{$dataBlock:function(){return this.$options.__data__block__}}})},{},function(e){var t=e.Vue;e.router.options.scrollBehavior=function(e,n,r){if(r)return window.scrollTo({top:r.y,behavior:"smooth"});if(e.hash){if(t.$vuepress.$get("disableScrollBehavior"))return!1;var a=document.querySelector(e.hash);return!!a&&window.scrollTo({top:(o=a,i=document.documentElement,s=i.getBoundingClientRect(),l=o.getBoundingClientRect(),{x:l.left-s.left,y:l.top-s.top}).y,behavior:"smooth"})}return window.scrollTo({top:0,behavior:"smooth"});var o,i,s,l}},function(e){e.Vue.component("BackToTop",Fs)},{},function(e){var t,n,r,a,o,i,s=e.router;"undefined"!=typeof window&&(t=window,n=document,r="script",a="ga",t.GoogleAnalyticsObject=a,t.ga=t.ga||function(){(t.ga.q=t.ga.q||[]).push(arguments)},t.ga.l=1*new Date,o=n.createElement(r),i=n.getElementsByTagName(r)[0],o.async=1,o.src="https://www.google-analytics.com/analytics.js",i.parentNode.insertBefore(o,i),ga("create","UA-56021-9","auto"),ga("set","anonymizeIp",!0),s.afterEach((function(e){ga("set","page",e.fullPath),ga("send","pageview")})))},function(e){e.Vue.component("ChildTableOfContents",Ns)},function(e){var t=e.Vue;t.component("RightAnchor",Bs),t.component("GlobalRightAnchor",{name:"GlobalRightAnchor",functional:!0,render:function(){var e=arguments[0];return e(Bs,{attrs:{global:!0}})}})},function(e){e.Vue.component("CodeCopy",Ds)}],$s=["BackToTop","GlobalRightAnchor"];n(188);n(180);function Ws(e,t){return(Ws=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}n(181);function Gs(e){return(Gs=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}n(114);function Vs(e,t){return!t||"object"!==ji(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function Hs(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,r=Gs(e);if(t){var a=Gs(this).constructor;n=Reflect.construct(r,arguments,a)}else n=r.apply(this,arguments);return Vs(this,n)}}var Js=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&Ws(e,t)}(n,e);var t=Hs(n);function n(){return ds(this,n),t.apply(this,arguments)}return n}(function(){function e(){ds(this,e),this.store=new Ra({data:{state:{}}})}return hs(e,[{key:"$get",value:function(e){return this.store.state[e]}},{key:"$set",value:function(e,t){Ra.set(this.store.state,e,t)}},{key:"$emit",value:function(){var e;(e=this.store).$emit.apply(e,arguments)}},{key:"$on",value:function(){var e;(e=this.store).$on.apply(e,arguments)}}]),e}());Object.assign(Js.prototype,{getPageAsyncComponent:Bi,getLayoutAsyncComponent:Ui,getAsyncComponent:$i,getVueComponent:Wi});var Ys={install:function(e){var t=new Js;e.$vuepress=t,e.prototype.$vuepress=t}};function Qs(e){e.beforeEach((function(t,n,r){if(Zs(e,t.path))r();else if(/(\/|\.html)$/.test(t.path))if(/\/$/.test(t.path)){var a=t.path.replace(/\/$/,"")+".html";Zs(e,a)?r(a):r()}else r();else{var o=t.path+"/",i=t.path+".html";Zs(e,i)?r(i):Zs(e,o)?r(o):r()}}))}function Zs(e,t){return e.options.routes.filter((function(e){return e.path.toLowerCase()===t.toLowerCase()})).length>0}var Xs={props:{pageKey:String,slotKey:{type:String,default:"default"}},render:function(e){var t=this.pageKey||this.$parent.$page.key;return Vi("pageKey",t),Ra.component(t)||Ra.component(t,Bi(t)),Ra.component(t)?e(t):e("")}},el={functional:!0,props:{slotKey:String,required:!0},render:function(e,t){var n=t.props,r=t.slots;return e("div",{class:["content__".concat(n.slotKey)]},r()[n.slotKey])}},tl={computed:{openInNewWindowTitle:function(){return this.$themeLocaleConfig.openNewWindowText||"(opens new window)"}}},nl=(n(328),n(329),Object(Ss.a)(tl,(function(){var e=this.$createElement,t=this._self._c||e;return t("span",[t("svg",{staticClass:"icon outbound",attrs:{xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",focusable:"false",x:"0px",y:"0px",viewBox:"0 0 100 100",width:"15",height:"15"}},[t("path",{attrs:{fill:"currentColor",d:"M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"}}),this._v(" "),t("polygon",{attrs:{fill:"currentColor",points:"45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"}})]),this._v(" "),t("span",{staticClass:"sr-only"},[this._v(this._s(this.openInNewWindowTitle))])])}),[],!1,null,null,null).exports);function rl(){return(rl=Object(r.a)(regeneratorRuntime.mark((function e(t){var n,r,a,o;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n="undefined"!=typeof window&&window.__VUEPRESS_ROUTER_BASE__?window.__VUEPRESS_ROUTER_BASE__:Os.routerBase||Os.base,Qs(r=new Ii({base:n,mode:"history",fallback:!1,routes:Ps,scrollBehavior:function(e,t,n){return n||(e.hash?!Ra.$vuepress.$get("disableScrollBehavior")&&{selector:decodeURIComponent(e.hash)}:{x:0,y:0})}})),a={},e.prev=4,e.next=7,Promise.all(Us.filter((function(e){return"function"==typeof e})).map((function(e){return e({Vue:Ra,options:a,router:r,siteData:Os,isServer:t})})));case 7:e.next=12;break;case 9:e.prev=9,e.t0=e.catch(4),console.error(e.t0);case 12:return o=new Ra(Object.assign(a,{router:r,render:function(e){return e("div",{attrs:{id:"app"}},[e("RouterView",{ref:"layout"}),e("div",{class:"global-ui"},$s.map((function(t){return e(t)})))])}})),e.abrupt("return",{app:o,router:r});case 14:case"end":return e.stop()}}),e,null,[[4,9]])})))).apply(this,arguments)}Ra.config.productionTip=!1,Ra.use(Ii),Ra.use(Ys),Ra.mixin(function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Ra;qi(t),n.$vuepress.$set("siteData",t);var r=e(n.$vuepress.$get("siteData")),a=new r,o=Object.getOwnPropertyDescriptors(Object.getPrototypeOf(a)),i={};return Object.keys(o).reduce((function(e,t){return t.startsWith("$")&&(e[t]=o[t].get),e}),i),{computed:i}}((function(e){return function(){function t(){ds(this,t)}return hs(t,[{key:"setPage",value:function(e){this.__page=e}},{key:"$site",get:function(){return e}},{key:"$themeConfig",get:function(){return this.$site.themeConfig}},{key:"$frontmatter",get:function(){return this.$page.frontmatter}},{key:"$localeConfig",get:function(){var e,t,n=this.$site.locales,r=void 0===n?{}:n;for(var a in r)"/"===a?t=r[a]:0===this.$page.path.indexOf(a)&&(e=r[a]);return e||t||{}}},{key:"$siteTitle",get:function(){return this.$localeConfig.title||this.$site.title||""}},{key:"$canonicalUrl",get:function(){var e=this.$page.frontmatter.canonicalUrl;return"string"==typeof e&&e}},{key:"$title",get:function(){var e=this.$page,t=this.$page.frontmatter.metaTitle;if("string"==typeof t)return t;var n=this.$siteTitle,r=e.frontmatter.home?null:e.frontmatter.title||e.title;return n?r?r+" | "+n:n:r||"VuePress"}},{key:"$description",get:function(){var e=function(e){if(e){var t=e.filter((function(e){return"description"===e.name}))[0];if(t)return t.content}}(this.$page.frontmatter.meta);return e||(this.$page.frontmatter.description||this.$localeConfig.description||this.$site.description||"")}},{key:"$lang",get:function(){return this.$page.frontmatter.lang||this.$localeConfig.lang||"en-US"}},{key:"$localePath",get:function(){return this.$localeConfig.path||"/"}},{key:"$themeLocaleConfig",get:function(){return(this.$site.themeConfig.locales||{})[this.$localePath]||{}}},{key:"$page",get:function(){return this.__page?this.__page:function(e,t){for(var n=0;n<e.length;n++){var r=e[n];if(r.path.toLowerCase()===t.toLowerCase())return r}return{path:"",frontmatter:{}}}(this.$site.pages,this.$route.path)}}]),t}()}),Os)),Ra.component("Content",Xs),Ra.component("ContentSlotsDistributor",el),Ra.component("OutboundLink",nl),Ra.component("ClientOnly",{functional:!0,render:function(e,t){var n=t.parent,r=t.children;if(n._isMounted)return r;n.$once("hook:mounted",(function(){n.$forceUpdate()}))}}),Ra.component("Layout",Ui("Layout")),Ra.component("NotFound",Ui("NotFound")),Ra.prototype.$withBase=function(e){var t=this.$site.base;return"/"===e.charAt(0)?t+e.slice(1):e},window.__VUEPRESS__={version:"1.7.1",hash:"6524dc6f"},function(e){return rl.apply(this,arguments)}(!1).then((function(e){var t=e.app;e.router.onReady((function(){t.$mount("#app")}))}))}]);