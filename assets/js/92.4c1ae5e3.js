(window.webpackJsonp=window.webpackJsonp||[]).push([[92],{408:function(t,a,e){"use strict";e.r(a);var s=e(25),r=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"query"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#query"}},[t._v("#")]),t._v(" Query")]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"org.kestra.task.jdbc.postgresql.Query"')]),t._v("\n")])])]),e("blockquote",[e("p",[t._v("PostgresSQL Query Task")])]),t._v(" "),e("p",[t._v("Currently supported types are the following ones :")]),t._v(" "),e("ul",[e("li",[t._v("serial")]),t._v(" "),e("li",[t._v("boolean")]),t._v(" "),e("li",[t._v("char(4)")]),t._v(" "),e("li",[t._v("varchar(n)")]),t._v(" "),e("li",[t._v("text")]),t._v(" "),e("li",[t._v("smallint")]),t._v(" "),e("li",[t._v("bigint")]),t._v(" "),e("li",[t._v("float(n)")]),t._v(" "),e("li",[t._v("double precision")]),t._v(" "),e("li",[t._v("real")]),t._v(" "),e("li",[t._v("numeric")]),t._v(" "),e("li",[t._v("date")]),t._v(" "),e("li",[t._v("time")]),t._v(" "),e("li",[t._v("timez / time with time zone (avoid this type as it can lead to some gap. See "),e("a",{attrs:{href:"https://www.postgresql.org/message-id/4C968069.4050801@opencloud.com/"}},[t._v("this PostgreSQL issue")]),t._v(")")]),t._v(" "),e("li",[t._v("timestamp")]),t._v(" "),e("li",[t._v("timestampz / timestamp with time zone")]),t._v(" "),e("li",[t._v("interval")]),t._v(" "),e("li",[t._v("integer[]")]),t._v(" "),e("li",[t._v("text[][] (ie. array of array ... it may be of another supported type)")]),t._v(" "),e("li",[t._v("json")]),t._v(" "),e("li",[t._v("bytea")])]),t._v(" "),e("h2",{attrs:{id:"examples"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#examples"}},[t._v("#")]),t._v(" Examples")]),t._v(" "),e("blockquote",[e("p",[t._v("Execute a query and fetch results on another task to update another table")])]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tasks")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" update\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" org.kestra.task.jdbc.postgresql.Query\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("url")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" jdbc"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("postgresql"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//127.0.0.1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("56982/\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("username")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" postgres\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("password")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pg_passwd\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("sql")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" select concert_id"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" available"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" a"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" c"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" d"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" play_time"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" library_record"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" floatn_test"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" double_test"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" real_test"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" numeric_test"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" date_type"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" time_type"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" timez_type"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" timestamp_type"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" timestampz_type"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" interval_type"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" pay_by_quarter"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" schedule"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" json_type"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" blob_type from pgsql_types\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("fetch")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" use"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("fetched"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("data\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" org.kestra.task.jdbc.postgresql.Query\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("url")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" jdbc"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("postgresql"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//127.0.0.1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("56982/\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("username")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" postgres\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("password")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pg_passwd\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("sql")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"{{#each outputs.update.rows}} INSERT INTO pl_store_distribute (year_month,store_code, update_date) values ({{this.play_time}}, {{this.concert_id}}, TO_TIMESTAMP('{{this.timestamp_type}}', 'YYYY/MM/DDTHH24:MI:SS.US') ); {{/each}}\"")]),t._v("\n")])])]),e("h2",{attrs:{id:"inputs"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#inputs"}},[t._v("#")]),t._v(" Inputs")]),t._v(" "),e("h3",{attrs:{id:"fetch"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fetch"}},[t._v("#")]),t._v(" "),e("code",[t._v("fetch")])]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("Type:")]),t._v(" "),e("mark",[t._v("boolean")])]),t._v(" "),e("li",[e("strong",[t._v("Dynamic:")]),t._v(" ❌")]),t._v(" "),e("li",[e("strong",[t._v("Required:")]),t._v(" ❌")])]),t._v(" "),e("blockquote",[e("p",[t._v("Whether to fetch the data from the query result to the task output This parameter is evaluated after 'fetchOne' and 'store'.")])]),t._v(" "),e("h3",{attrs:{id:"fetchone"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fetchone"}},[t._v("#")]),t._v(" "),e("code",[t._v("fetchOne")])]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("Type:")]),t._v(" "),e("mark",[t._v("boolean")])]),t._v(" "),e("li",[e("strong",[t._v("Dynamic:")]),t._v(" ❌")]),t._v(" "),e("li",[e("strong",[t._v("Required:")]),t._v(" ❌")])]),t._v(" "),e("blockquote",[e("p",[t._v("Whether to fetch only one data row from the query result to the task output. This parameter is evaluated before 'store' and 'fetch'.")])]),t._v(" "),e("h3",{attrs:{id:"password"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#password"}},[t._v("#")]),t._v(" "),e("code",[t._v("password")])]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("Type:")]),t._v(" "),e("mark",[t._v("String")])]),t._v(" "),e("li",[e("strong",[t._v("Dynamic:")]),t._v(" ✔️")]),t._v(" "),e("li",[e("strong",[t._v("Required:")]),t._v(" ❌")])]),t._v(" "),e("blockquote",[e("p",[t._v("The database user's password")])]),t._v(" "),e("h3",{attrs:{id:"sql"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sql"}},[t._v("#")]),t._v(" "),e("code",[t._v("sql")])]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("Type:")]),t._v(" "),e("mark",[t._v("String")])]),t._v(" "),e("li",[e("strong",[t._v("Dynamic:")]),t._v(" ✔️")]),t._v(" "),e("li",[e("strong",[t._v("Required:")]),t._v(" ❌")])]),t._v(" "),e("blockquote",[e("p",[t._v("The sql query to run")])]),t._v(" "),e("h3",{attrs:{id:"store"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#store"}},[t._v("#")]),t._v(" "),e("code",[t._v("store")])]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("Type:")]),t._v(" "),e("mark",[t._v("boolean")])]),t._v(" "),e("li",[e("strong",[t._v("Dynamic:")]),t._v(" ✔️")]),t._v(" "),e("li",[e("strong",[t._v("Required:")]),t._v(" ❌")])]),t._v(" "),e("blockquote",[e("p",[t._v("Whether to fetch data row from the query result to a file in internal storage. File will be saved as Amazon Ion (text format)."),e("br"),t._v("\nSee "),e("a",{attrs:{href:"http://amzn.github.io/ion-docs/"}},[t._v("Amazon Ion documentation")]),t._v(" This parameter is evaluated after 'fetchOne' but before 'fetch'.")])]),t._v(" "),e("h3",{attrs:{id:"timezoneid"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#timezoneid"}},[t._v("#")]),t._v(" "),e("code",[t._v("timeZoneId")])]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("Type:")]),t._v(" "),e("mark",[t._v("String")])]),t._v(" "),e("li",[e("strong",[t._v("Dynamic:")]),t._v(" ❌")]),t._v(" "),e("li",[e("strong",[t._v("Required:")]),t._v(" ❌")])]),t._v(" "),e("blockquote",[e("p",[t._v("The time zone id to use for date/time manipulation. Default value is the worker default zone id.")])]),t._v(" "),e("h3",{attrs:{id:"url"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#url"}},[t._v("#")]),t._v(" "),e("code",[t._v("url")])]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("Type:")]),t._v(" "),e("mark",[t._v("String")])]),t._v(" "),e("li",[e("strong",[t._v("Dynamic:")]),t._v(" ✔️")]),t._v(" "),e("li",[e("strong",[t._v("Required:")]),t._v(" ❌")])]),t._v(" "),e("blockquote",[e("p",[t._v("The jdbc url to connect to the database")])]),t._v(" "),e("h3",{attrs:{id:"username"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#username"}},[t._v("#")]),t._v(" "),e("code",[t._v("username")])]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("Type:")]),t._v(" "),e("mark",[t._v("String")])]),t._v(" "),e("li",[e("strong",[t._v("Dynamic:")]),t._v(" ✔️")]),t._v(" "),e("li",[e("strong",[t._v("Required:")]),t._v(" ❌")])]),t._v(" "),e("blockquote",[e("p",[t._v("The database user")])]),t._v(" "),e("h2",{attrs:{id:"outputs"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#outputs"}},[t._v("#")]),t._v(" Outputs")]),t._v(" "),e("h3",{attrs:{id:"row"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#row"}},[t._v("#")]),t._v(" "),e("code",[t._v("row")])]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("Type:")]),t._v(" "),e("mark",[t._v("Map<String, Object>")])])]),t._v(" "),e("blockquote",[e("p",[t._v("Map containing the first row of fetched data")])]),t._v(" "),e("p",[t._v("Only populated if 'fetchOne' parameter is set to true.")]),t._v(" "),e("h3",{attrs:{id:"rows"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#rows"}},[t._v("#")]),t._v(" "),e("code",[t._v("rows")])]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("Type:")]),t._v(" "),e("mark",[t._v("List")])])]),t._v(" "),e("blockquote",[e("p",[t._v("Lit of map containing rows of fetched data")])]),t._v(" "),e("p",[t._v("Only populated if 'fetch' parameter is set to true.")]),t._v(" "),e("h3",{attrs:{id:"size"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#size"}},[t._v("#")]),t._v(" "),e("code",[t._v("size")])]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("Type:")]),t._v(" "),e("mark",[t._v("Long")])])]),t._v(" "),e("blockquote",[e("p",[t._v("The size of the fetched rows")])]),t._v(" "),e("p",[t._v("Only populated if 'store' or 'fetch' parameter is set to true.")]),t._v(" "),e("h3",{attrs:{id:"uri"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#uri"}},[t._v("#")]),t._v(" "),e("code",[t._v("uri")])]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("Type:")]),t._v(" "),e("mark",[t._v("URI")])])]),t._v(" "),e("blockquote",[e("p",[t._v("The url of the result file on kestra storage (.ion file / Amazon Ion text format)")])]),t._v(" "),e("p",[t._v("Only populated if 'store' is set to true.")])])}),[],!1,null,null,null);a.default=r.exports}}]);