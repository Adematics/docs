(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{442:function(t,a,s){t.exports=s.p+"assets/img/inputs.62a412ff.jpg"},873:function(t,a,s){"use strict";s.r(a);var n=s(9),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"inputs"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#inputs"}},[t._v("#")]),t._v(" Inputs")]),t._v(" "),n("p",[t._v("Kestra's flow can be parametrized using inputs. Inputs will be available in variable"),n("br"),t._v("\ncontext and can be used during the whole flow, in order to customize it depending on"),n("br"),t._v("\ninputs.")]),t._v(" "),n("p",[t._v("A good example is you need to have an identifier (ex: storeId, paymentId) in order to"),n("br"),t._v("\nchange save path for the uplodated files.")]),t._v(" "),n("h2",{attrs:{id:"declaring-inputs"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#declaring-inputs"}},[t._v("#")]),t._v(" Declaring inputs")]),t._v(" "),n("p",[t._v("You can declare as many inputs for any flow. Input can be "),n("strong",[t._v("required")]),t._v(" or "),n("strong",[t._v("not")]),t._v("."),n("br"),t._v("\nIf the input are required, the flow couldn't start if the input are not provide during the"),n("br"),t._v("\ncreation of the execution."),n("br"),t._v("\nAlso, every inputs will be parsed during the creation of the execution and any invalid"),n("br"),t._v("\ninputs will refuse to create the execution.")]),t._v(" "),n("div",{staticClass:"custom-block warning"},[n("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),n("p",[t._v("If the execution is "),n("strong",[t._v("not created")]),t._v(" due to invalid or missing inputs, no execution will be"),n("br"),t._v("\nfound on the executions list.")])]),t._v(" "),n("p",[t._v("Examples:")]),t._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" my"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("flow\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" io.kestra.docs\n\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("inputs")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" STRING\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("required")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" optional\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" STRING\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("required")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("false")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" int\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" INT\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("required")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" float\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" FLOAT\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("required")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" instant\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" DATETIME\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("required")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" my"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("file\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" FILE\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("required")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" optionalFile\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" FILE\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("required")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("false")]),t._v("\n")])])]),n("h2",{attrs:{id:"input-types"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#input-types"}},[t._v("#")]),t._v(" Input types")]),t._v(" "),n("p",[t._v("Here are the following input fields available :")]),t._v(" "),n("h3",{attrs:{id:"string"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#string"}},[t._v("#")]),t._v(" "),n("code",[t._v("STRING")])]),t._v(" "),n("p",[t._v("No control is done on this input type (no parsing), can be any string.")]),t._v(" "),n("h3",{attrs:{id:"int"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#int"}},[t._v("#")]),t._v(" "),n("code",[t._v("INT")])]),t._v(" "),n("p",[t._v("Must be a valid integer (without any decimals).")]),t._v(" "),n("h3",{attrs:{id:"float"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#float"}},[t._v("#")]),t._v(" "),n("code",[t._v("FLOAT")])]),t._v(" "),n("p",[t._v("Must be a valid float (with any decimals).")]),t._v(" "),n("h3",{attrs:{id:"datetime"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#datetime"}},[t._v("#")]),t._v(" "),n("code",[t._v("DATETIME")])]),t._v(" "),n("p",[t._v("Must be a valid valid full "),n("a",{attrs:{href:"https://en.wikipedia.org/wiki/ISO_8601",target:"_blank",rel:"noopener noreferrer"}},[t._v("ISO 8601"),n("OutboundLink")],1),t._v(" datetime with timezone in UTC from a text string such as"),n("br"),t._v(" "),n("code",[t._v("2007-12-03T10:15:30.00Z")]),t._v(".")]),t._v(" "),n("h3",{attrs:{id:"file"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#file"}},[t._v("#")]),t._v(" "),n("code",[t._v("FILE")])]),t._v(" "),n("p",[t._v("Must be a files send with "),n("code",[t._v("multipart/form-data")]),t._v(". All the file are automatically uploaded"),n("br"),t._v("\nto "),n("code",[t._v("Storage")]),t._v(" and is available for further task. The return will be a full qualified url"),n("br"),t._v("\nwith the form "),n("code",[t._v("kestra:///.../.../")]),t._v(", Kestra are able to handle this url and this inputs can"),n("br"),t._v("\nbe passed as is to tasks.")]),t._v(" "),n("h2",{attrs:{id:"using-input-value-in-flow"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#using-input-value-in-flow"}},[t._v("#")]),t._v(" Using input value in flow")]),t._v(" "),n("p",[t._v("Every input is available with dynamic variable like : "),n("code",{pre:!0},[t._v("{{ inputs.NAME }}")]),t._v(".")]),t._v(" "),n("p",[t._v("For example, considering that you declare your input :")]),t._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("inputs")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" my"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("file\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" FILE\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" my"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("value\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" STRING\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("required")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n")])])]),n("p",[t._v("You can use the value of the inputs with "),n("code",{pre:!0},[t._v("{{ inputs.my-value }}")]),t._v(".")]),t._v(" "),n("h2",{attrs:{id:"send-inputs-programmatically"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#send-inputs-programmatically"}},[t._v("#")]),t._v(" Send inputs programmatically")]),t._v(" "),n("p",[t._v("The flow "),n("code",[t._v("my-flow")]),t._v(" above can be triggered programmaticaly, here is an example with "),n("code",[t._v("curl")]),t._v(":")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" -v "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://kestra:8080/api/v1/executions/trigger/io.kestra.docs/my-flow"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    -H "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Transfer-Encoding:chunked"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    -H "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Content-Type:multipart/form-data"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    -F "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("string")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a string"')]),t._v("  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    -F "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("optional")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"an optionnal string"')]),t._v("  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    -F "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("int")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    -F "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("float")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.255")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    -F "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("instant")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2020")]),t._v("-01-14T23:00:00.000Z "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    -F "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"files=@/tmp/128M.txt;filename=my-file"')]),t._v("\n")])])]),n("p",[t._v("All files must be send in a form data "),n("code",[t._v("files")]),t._v(" with an header "),n("code",[t._v("filename=my-file")]),t._v(" that"),n("br"),t._v("\nwill be the name of the input.")]),t._v(" "),n("p",[t._v("Here is an example with "),n("code",[t._v("python")]),t._v(":")]),t._v(" "),n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" io\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" requests\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" requests_toolbelt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("multipart"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("encoder "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" MultipartEncoder\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("open")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/tmp/128M.txt"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'rb'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" fh"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  url "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string-interpolation"}},[n("span",{pre:!0,attrs:{class:"token string"}},[t._v('f"http://kestra:8080/api/v1/executions/trigger/io.kestra.docs/my-flow"')])]),t._v("\n  mp_encoder "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" MultipartEncoder"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fields"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"string"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a string"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"optional"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"an optionnal string"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"int"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"float"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.255")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"instant"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2020-01-14T23:00:00.000Z"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"files"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"file"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" fh"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"text/plain"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  result "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" requests"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("post"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      url"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      data"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("mp_encoder"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      headers"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Content-Type"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" mp_encoder"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("content_type"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("h2",{attrs:{id:"send-inputs-via-webui"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#send-inputs-via-webui"}},[t._v("#")]),t._v(" Send inputs via WebUI")]),t._v(" "),n("p",[t._v("With such flow, the web ui let you input some inputs by generating a form accordingly"),n("br"),t._v("\non the flow > trigger view. The input form for the task above looks like below :")]),t._v(" "),n("p",[n("img",{attrs:{src:s(442),alt:"Flow inputs"}})]),t._v(" "),n("p",[t._v("Once inputs filled, you can trigger a flow execution that will run with"),n("br"),t._v(" "),n("a",{attrs:{href:"/docs/dynamic-fields"}},[t._v("contextual inputs")]),t._v(" as task variables.")])])}),[],!1,null,null,null);a.default=e.exports}}]);