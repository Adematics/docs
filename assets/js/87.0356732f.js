(window.webpackJsonp=window.webpackJsonp||[]).push([[87],{742:function(a,t,s){"use strict";s.r(t);var e=s(19),n=Object(e.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"iterations-functions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#iterations-functions"}},[a._v("#")]),a._v(" Iterations functions")]),a._v(" "),s("p"),s("div",{staticClass:"table-of-contents"},[s("ul",[s("li",[s("a",{attrs:{href:"#for-each"}},[a._v("For each")])])])]),s("p"),a._v(" "),s("h2",{attrs:{id:"for-each"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#for-each"}},[a._v("#")]),a._v(" For each")]),a._v(" "),s("p",[a._v("You can iterate over a list using the built-in each helper. Inside the block, you can use "),s("code",[a._v("this")]),a._v(" to reference the element being iterated over. "),s("code",[a._v("contextualListVariable")]),a._v(" is an iterable item on which the mydata property is displayed for all entries.")]),a._v(" "),s("p",[a._v("The "),s("code",[a._v("@index")]),a._v(" is a special variable available in the each loop context which value is the current index of the element beeing iterated. There are agic* variables like @index in a each context. The following ones are also available: "),s("code",[a._v("@key")]),a._v(" "),s("code",[a._v("@index")]),a._v(" "),s("code",[a._v("@first")]),a._v(" "),s("code",[a._v("@last")]),a._v(" "),s("code",[a._v("@odd")]),a._v(" "),s("code",[a._v("@even")])]),a._v(" "),s("p",[a._v("See handlebars documentation for more about this topic.")]),a._v(" "),s("div",{staticClass:"language-handlebars extra-class"},[s("pre",{pre:!0,attrs:{class:"language-handlebars"}},[s("code",[s("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),s("span",{pre:!0,attrs:{class:"token block keyword"}},[a._v("#each")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("contextualListVariable")]),s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("mydata")]),s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v(" "),s("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("@")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("index")]),s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),s("span",{pre:!0,attrs:{class:"token block keyword"}},[a._v("/each")]),s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n")])])]),s("p",[a._v("will produce")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("one 0\ntwo 1\nthree 2\ndjango! 3\n")])])]),s("p",[a._v("for the following data sample when")]),a._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[a._v("contextualListVariable "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token string-property property"}},[a._v('"mydata"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"one"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token string-property property"}},[a._v('"mydata"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"two"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token string-property property"}},[a._v('"mydata"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"three"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token string-property property"}},[a._v('"mydata"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"django!"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n")])])]),s("p",[a._v("If the contextual 'this' is not convenient to use the data as you wish, it is possible to alias it as shown below:")]),a._v(" "),s("div",{staticClass:"language-handlebars extra-class"},[s("pre",{pre:!0,attrs:{class:"language-handlebars"}},[s("code",[s("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),s("span",{pre:!0,attrs:{class:"token block keyword"}},[a._v("#each")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("iterableVariable")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("as")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("myItem")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("myItem")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("mydata")]),s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),s("span",{pre:!0,attrs:{class:"token block keyword"}},[a._v("/each")]),s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);