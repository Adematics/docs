(window.webpackJsonp=window.webpackJsonp||[]).push([[90],{787:function(t,e,s){"use strict";s.r(e);var a=s(19),r=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"flows"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#flows"}},[t._v("#")]),t._v(" Flows")]),t._v(" "),s("blockquote",[s("p",[t._v("Flows are used to implement your workload. They define all the tasks you want to perform and the order in which they will be run.")])]),t._v(" "),s("p",[t._v("You define a flow thanks to a declarative model in YAML.")]),t._v(" "),s("p",[t._v("A flow must have an identifier (id), a namespace, and a list of tasks.")]),t._v(" "),s("p",[t._v("A flow can also have "),s("RouterLink",{attrs:{to:"/docs/developer-guide/inputs/"}},[t._v("inputs")]),t._v(", "),s("RouterLink",{attrs:{to:"/docs/developer-guide/listeners/"}},[t._v("listeners")]),t._v(", "),s("RouterLink",{attrs:{to:"/docs/developer-guide/errors-handling/"}},[t._v("error handlers")]),t._v(", and "),s("RouterLink",{attrs:{to:"/docs/developer-guide/triggers/"}},[t._v("triggers")]),t._v(".")],1),t._v(" "),s("h2",{attrs:{id:"flow-sample"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#flow-sample"}},[t._v("#")]),t._v(" Flow sample")]),t._v(" "),s("p",[t._v("Here is a sample flow definition. It uses tasks available in Kestra core for testing purposes.")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" samples\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" io.kestra.tests\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("description")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Some flow **documentation** in *Markdown*"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("env")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" prd\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("country")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" FR\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("inputs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" my"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("value\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" STRING\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("required")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("false")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("defaults")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"default value"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("description")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" This is a not required my"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("value\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("variables")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("first")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("second")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"{{vars.first}} > 2"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tasks")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" date\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" io.kestra.core.tasks.debugs.Return\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("description")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Some tasks **documentation** in *Markdown*"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("format")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"A log line content with a contextual date variable {{taskrun.startDate}}"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("taskDefaults")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" io.kestra.core.tasks.debugs.Echo\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("level")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ERROR\n")])])]),s("p",[t._v("You can add arbitrary "),s("code",[t._v("labels")]),t._v(" to your flow. Labels can be handy when you have a lot of flows to sort them on multiple dimensions.")]),t._v(" "),s("p",[t._v("You can also define "),s("code",[t._v("taskDefaults")]),t._v(" inside your flow; this is a list of default task properties that will be applied to each task of a certain type inside your flow. Task defaults can be handy to avoid repeating the same value for a task property in case the same task type is used multiple times in the same flow.")]),t._v(" "),s("p",[t._v("You can set flow variables that will be accessible by each task using "),s("code",{pre:!0},[t._v("{{ vars.key }}")]),t._v(". Flow "),s("code",[t._v("variables")]),t._v(" is a map of key/value pairs.")]),t._v(" "),s("p",[t._v("The most important part of a flow is the list of tasks that will be run sequentially when the flow is executed.")]),t._v(" "),s("h2",{attrs:{id:"flow-properties"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#flow-properties"}},[t._v("#")]),t._v(" Flow Properties")]),t._v(" "),s("p",[t._v("The following flow properties can be set.")]),t._v(" "),s("div",{staticClass:"table-responsive"},[s("table",{staticClass:"table table-bordered table-hover table-striped"},[s("thead",[s("tr",[s("th",[t._v("Field")]),t._v(" "),s("th",[t._v("Description")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("code",[t._v("id")])]),t._v(" "),s("td",[t._v("The flow identifier, must be unique inside a namespace.")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("namespace")])]),t._v(" "),s("td",[t._v("Each flow lives in one namespace, this is useful for flow organization and is mandatory.")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("revision")])]),t._v(" "),s("td",[t._v("The flow version, handled internally by Kestra, and incremented for each modification. You should not manually set it.")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("description")])]),t._v(" "),s("td",[t._v("The description of the flow, more details "),s("RouterLink",{attrs:{to:"/docs/developer-guide/documentation/"}},[t._v("here")]),t._v(".")],1)]),t._v(" "),s("tr",[s("td",[s("code",[t._v("labels")])]),t._v(" "),s("td",[t._v("The list of labels which are string key/value pairs.")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("inputs")])]),t._v(" "),s("td",[t._v("The list of inputs, more details "),s("RouterLink",{attrs:{to:"/docs/developer-guide/inputs/"}},[t._v("here")]),t._v(".")],1)]),t._v(" "),s("tr",[s("td",[s("code",[t._v("variables")])]),t._v(" "),s("td",[t._v("The list of variables (such as api key, table name, URL, etc) that can be reached inside tasks with "),s("code",{pre:!0},[t._v("{{ vars.name }}")]),t._v(".")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("tasks")])]),t._v(" "),s("td",[t._v("The list of tasks, all tasks will be run sequentially.")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("errors")])]),t._v(" "),s("td",[t._v("The list of error tasks, all listed tasks will be run sequentially only if there is an error on the current execution. More details "),s("RouterLink",{attrs:{to:"/docs/developer-guide/errors-handling/"}},[t._v("here")]),t._v(".")],1)]),t._v(" "),s("tr",[s("td",[s("code",[t._v("listeners")])]),t._v(" "),s("td",[t._v("The list of listeners, more details "),s("RouterLink",{attrs:{to:"/docs/developer-guide/listeners/"}},[t._v("here")]),t._v(".")],1)]),t._v(" "),s("tr",[s("td",[s("code",[t._v("triggers")])]),t._v(" "),s("td",[t._v("The list of triggers which are external events (such as date schedule or message presence in a broker, for example) that will launch this flow, more details "),s("RouterLink",{attrs:{to:"/docs/developer-guide/triggers/"}},[t._v("here")]),t._v(".")],1)]),t._v(" "),s("tr",[s("td",[s("code",[t._v("taskDefaults")])]),t._v(" "),s("td",[t._v("The list of default task values, this avoid repeating the same properties on each tasks.")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("taskDefaults.[].type")])]),t._v(" "),s("td",[t._v("The task type is a full qualified Java class name.")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("taskDefaults.[].forced")])]),t._v(" "),s("td",[t._v("If set to "),s("code",[t._v("forced: true")]),t._v(", the taskDefault will take precedence over properties defined in the task (default "),s("code",[t._v("false")]),t._v(").")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("taskDefaults.[].values.xxx")])]),t._v(" "),s("td",[t._v("The task property that you want to be set as default.")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("disabled")])]),t._v(" "),s("td",[t._v("Set it to "),s("code",[t._v("true")]),t._v(" to disable execution of the flow.")])])])])])])}),[],!1,null,null,null);e.default=r.exports}}]);