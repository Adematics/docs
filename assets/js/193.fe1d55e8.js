(window.webpackJsonp=window.webpackJsonp||[]).push([[193],{892:function(e,t,l){"use strict";l.r(t);var o=l(19),s=Object(o.a)({},(function(){var e=this,t=e.$createElement,l=e._self._c||t;return l("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[l("h1",{attrs:{id:"flow-examples"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#flow-examples"}},[e._v("#")]),e._v(" Flow examples")]),e._v(" "),l("p",[e._v("The example from Kestra's guided tour is a good starting point; it is available when running Kestra for the first time and can see here: "),l("RouterLink",{attrs:{to:"/docs/flow-examples/example-guided-tour.html"}},[e._v("Example guided tour")]),e._v(".")],1),e._v(" "),l("p",[e._v("Following is a list of other examples that can be downloaded:")]),e._v(" "),l("ul",[l("li",[l("RouterLink",{attrs:{to:"/docs/flow-examples/allow-failure.html"}},[e._v("Allow failure")]),e._v(": This flow will allow a failure of a task and will continue, passing the execution as "),l("code",[e._v("WARNING")]),e._v(".")],1),e._v(" "),l("li",[l("RouterLink",{attrs:{to:"/docs/flow-examples/disable-simple.html"}},[e._v("Disable simple")]),e._v(": This flow will never launch the "),l("code",[e._v("t2")]),e._v(" task since it is disabled.")],1),e._v(" "),l("li",[l("RouterLink",{attrs:{to:"/docs/flow-examples/each-nested.html"}},[e._v("Each nested")]),e._v(": Example of an each expression to iterate over a list of values.")],1),e._v(" "),l("li",[l("RouterLink",{attrs:{to:"/docs/flow-examples/errors.html"}},[e._v("Errors")]),e._v(": This flow will always fail, this will be handled by the "),l("code",[e._v("errors")]),e._v(" branch tasks (cleaning a resource for example). All kinds of tasks can be used on the "),l("code",[e._v("errors")]),e._v(" branch.")],1),e._v(" "),l("li",[l("RouterLink",{attrs:{to:"/docs/flow-examples/multiplecondition-listener.html"}},[e._v("Multipleconditionlistener")]),e._v(": This flow will start only if "),l("code",[e._v("multiplecondition-flow-a")]),e._v(" and "),l("code",[e._v("multiplecondition-flow-b")]),e._v(" are successful during the last 24h. You need the two flows "),l("a",{attrs:{href:"/examples/flows_multiplecondition-flow-a.yml"}},[e._v("multiplecondition-flow-a")]),e._v(" and "),l("a",{attrs:{href:"/examples/flows_multiplecondition-flow-b.yml"}},[e._v("multiplecondition-flow-b")]),e._v(" for it to work.")],1),e._v(" "),l("li",[l("RouterLink",{attrs:{to:"/docs/flow-examples/parallel.html"}},[e._v("Parallel")]),e._v(": This flow will run three parallel tasks based on the "),l("code",[e._v("concurrent")]),e._v(" property and will start the "),l("code",[e._v("last")]),e._v(" task at the end.")],1),e._v(" "),l("li",[l("RouterLink",{attrs:{to:"/docs/flow-examples/pause.html"}},[e._v("Pause")]),e._v(": This flow shows how you can pause an execution to add a manual validation step.")],1),e._v(" "),l("li",[l("RouterLink",{attrs:{to:"/docs/flow-examples/retry.html"}},[e._v("Retry")]),e._v(": This flow will be retried four times and will succeed at the 5th attempt.")],1),e._v(" "),l("li",[l("RouterLink",{attrs:{to:"/docs/flow-examples/sequential.html"}},[e._v("Sequential")]),e._v(": This flow will start the two sequential tasks in parallel and those will launch tasks one after the other.")],1),e._v(" "),l("li",[l("RouterLink",{attrs:{to:"/docs/flow-examples/subflow.html"}},[e._v("Subflow")]),e._v(": This flow will launch a subflow passing parameters, waiting until the end of the flow and gathering the output of a task.")],1),e._v(" "),l("li",[l("RouterLink",{attrs:{to:"/docs/flow-examples/switch.html"}},[e._v("Switch")]),e._v(": Depending on the value passed as the input, the will flow branch to different tasks. If there is no matching value, the "),l("code",[e._v("defaults")]),e._v(" task is used.")],1),e._v(" "),l("li",[l("RouterLink",{attrs:{to:"/docs/flow-examples/timeout.html"}},[e._v("Timeout")]),e._v(": This flow will always fail because of a timeout.")],1),e._v(" "),l("li",[l("RouterLink",{attrs:{to:"/docs/flow-examples/trigger-flow.html"}},[e._v("Trigger flow")]),e._v(": Flow that is triggered based on the execution of another flow.")],1),e._v(" "),l("li",[l("RouterLink",{attrs:{to:"/docs/flow-examples/webhook.html"}},[e._v("Webhook")]),e._v(": Example flow for a webhook trigger.")],1),e._v(" "),l("li",[l("RouterLink",{attrs:{to:"/docs/flow-examples/bash-with-files.html"}},[e._v("Bash with files")]),e._v(": This flow shows how to pass files between tasks.")],1),e._v(" "),l("li",[l("RouterLink",{attrs:{to:"/docs/flow-examples/bash-docker-with-files.html"}},[e._v("Bash docker with files")]),e._v(": This flow will use the "),l("code",[e._v("alpine")]),e._v(" Docker image, install a package and decompress a file passed as input. It will also export the file size as metrics and the "),l("code",[e._v("mimeType")]),e._v(" of the file as outputs.")],1),e._v(" "),l("li",[l("RouterLink",{attrs:{to:"/docs/flow-examples/python-pip.html"}},[e._v("Python Pip")]),e._v(": This flow will install the pip package, and use the Python Kestra library to generate outputs and metrics.")],1)])])}),[],!1,null,null,null);t.default=s.exports}}]);