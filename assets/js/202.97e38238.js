(window.webpackJsonp=window.webpackJsonp||[]).push([[202],{905:function(t,s,n){"use strict";n.r(s);var a=n(19),e=Object(a.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"multiple-condition-listener"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#multiple-condition-listener"}},[t._v("#")]),t._v(" Multiple condition listener")]),t._v(" "),n("p",[t._v("This flow will start only if "),n("code",[t._v("multiplecondition-flow-a")]),t._v(" and "),n("code",[t._v("multiplecondition-flow-b")]),t._v(" are successful during the last 24h. You need the two flows "),n("a",{attrs:{href:"/examples/flows_multiplecondition-flow-a.yml"}},[t._v("multiplecondition-flow-a")]),t._v(" and "),n("a",{attrs:{href:"/examples/flows_multiplecondition-flow-b.yml"}},[t._v("multiplecondition-flow-b")]),t._v(" for it to work.")]),t._v(" "),n("div",{staticClass:"language-yml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" multiplecondition"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("listener\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" io.kestra.demo\n\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("description")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),n("span",{pre:!0,attrs:{class:"token scalar string"}},[t._v("\n  This flow will start only if `multiplecondition-flow-a` and `multiplecondition-flow-b` are successful during the last 24h.")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tasks")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" only"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("listener\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" io.kestra.core.tasks.debugs.Return\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("format")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"childs"')]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("triggers")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" multiple"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("listen"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("flow\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" io.kestra.core.models.triggers.types.Flow\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("conditions")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" multiple\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" io.kestra.core.models.conditions.types.MultipleCondition\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("window")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" P1D\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("windowAdvance")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" P0D\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("conditions")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("success")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" io.kestra.core.models.conditions.types.ExecutionStatusCondition\n            "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("in")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n              "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" SUCCESS\n          "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("flow-a")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" io.kestra.core.models.conditions.types.ExecutionFlowCondition\n            "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" io.kestra.demo\n            "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("flowId")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" multiplecondition"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("flow"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("a\n          "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("flow-b")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" io.kestra.core.models.conditions.types.ExecutionFlowCondition\n            "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" io.kestra.demo\n            "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("flowId")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" multiplecondition"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("flow"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("b\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);